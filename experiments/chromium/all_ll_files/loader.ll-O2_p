; ModuleID = '../../third_party/vulkan-deps/vulkan-loader/src/loader/loader.c'
source_filename = "../../third_party/vulkan-deps/vulkan-loader/src/loader/loader.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VkLayerInstanceDispatchTable_ = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, i32 (i32*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)*, i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkDevice_T = type opaque
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkDisplayPropertiesKHR = type { %struct.VkDisplayKHR_T*, i8*, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32 }
%struct.VkDisplayKHR_T = type opaque
%struct.VkDisplayPlanePropertiesKHR = type { %struct.VkDisplayKHR_T*, i32 }
%struct.VkDisplayModePropertiesKHR = type { %struct.VkDisplayModeKHR_T*, %struct.VkDisplayModeParametersKHR }
%struct.VkDisplayModeKHR_T = type opaque
%struct.VkDisplayModeParametersKHR = type { %struct.VkExtent2D, i32 }
%struct.VkDisplayModeCreateInfoKHR = type { i32, i8*, i32, %struct.VkDisplayModeParametersKHR }
%struct.VkDisplayPlaneCapabilitiesKHR = type { i32, %struct.VkOffset2D, %struct.VkOffset2D, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkOffset2D, %struct.VkOffset2D, %struct.VkExtent2D, %struct.VkExtent2D }
%struct.VkDisplaySurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.VkDisplayModeKHR_T*, i32, i32, i32, float, i32, %struct.VkExtent2D }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkVideoProfileKHR = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkVideoCapabilitiesKHR = type { i32, i8*, i32, i64, i64, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32 }
%struct.VkPhysicalDeviceVideoFormatInfoKHR = type { i32, i8*, i32, %struct.VkVideoProfilesKHR* }
%struct.VkVideoProfilesKHR = type { i32, i8*, i32, %struct.VkVideoProfileKHR* }
%struct.VkVideoFormatPropertiesKHR = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkPhysicalDeviceGroupProperties = type { i32, i8*, i32, [32 x %struct.VkPhysicalDevice_T*], i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceExternalFenceInfo = type { i32, i8*, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPerformanceCounterKHR = type { i32, i8*, i32, i32, i32, [16 x i8] }
%struct.VkPerformanceCounterDescriptionKHR = type { i32, i8*, i32, [256 x i8], [256 x i8], [256 x i8] }
%struct.VkQueryPoolPerformanceCreateInfoKHR = type { i32, i8*, i32, i32, i32* }
%struct.VkPhysicalDeviceSurfaceInfo2KHR = type { i32, i8*, %struct.VkSurfaceKHR_T* }
%struct.VkSurfaceCapabilities2KHR = type { i32, i8*, %struct.VkSurfaceCapabilitiesKHR }
%struct.VkSurfaceFormat2KHR = type { i32, i8*, %struct.VkSurfaceFormatKHR }
%struct.VkDisplayProperties2KHR = type { i32, i8*, %struct.VkDisplayPropertiesKHR }
%struct.VkDisplayPlaneProperties2KHR = type { i32, i8*, %struct.VkDisplayPlanePropertiesKHR }
%struct.VkDisplayModeProperties2KHR = type { i32, i8*, %struct.VkDisplayModePropertiesKHR }
%struct.VkDisplayPlaneInfo2KHR = type { i32, i8*, %struct.VkDisplayModeKHR_T*, i32 }
%struct.VkDisplayPlaneCapabilities2KHR = type { i32, i8*, %struct.VkDisplayPlaneCapabilitiesKHR }
%struct.VkPhysicalDeviceFragmentShadingRateKHR = type { i32, i8*, i32, %struct.VkExtent2D }
%struct.VkDebugReportCallbackCreateInfoEXT = type { i32, i8*, i32, i32 (i32, i32, i64, i64, i32, i8*, i8*, i8*)*, i8* }
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkExternalImageFormatPropertiesNV = type { %struct.VkImageFormatProperties, i32, i32, i32 }
%struct.VkSurfaceCapabilities2EXT = type { i32, i8*, i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32, i32 }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkMultisamplePropertiesEXT = type { i32, i8*, %struct.VkExtent2D }
%struct.VkPhysicalDeviceToolPropertiesEXT = type { i32, i8*, [256 x i8], [256 x i8], i32, [256 x i8], [256 x i8] }
%struct.VkCooperativeMatrixPropertiesNV = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFramebufferMixedSamplesCombinationNV = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkHeadlessSurfaceCreateInfoEXT = type { i32, i8*, i32 }
%struct.loader_struct = type { %struct.loader_instance* }
%struct.loader_instance = type { %struct.loader_instance_dispatch_table*, i16, i16, i32, i32, %struct.loader_physical_device_term**, i32, %struct.loader_physical_device_tramp**, i32, %struct.VkPhysicalDeviceGroupProperties**, i32, %struct.VkPhysicalDeviceGroupProperties**, %struct.loader_instance*, i32, %struct.loader_icd_term*, %struct.loader_icd_tramp_list, [250 x %struct.loader_dispatch_hash_entry], [250 x %struct.loader_dispatch_hash_entry], %struct.loader_msg_callback_map_entry*, %struct.loader_layer_list, i8, %struct.loader_layer_list, %struct.loader_layer_list, %struct.VkInstance_T*, %struct.loader_extension_list, %union.loader_instance_extension_enables, %struct.VkLayerDbgFunctionNode_*, i32, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkDebugReportCallbackEXT_T**, i32, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkDebugUtilsMessengerEXT_T**, %struct.VkAllocationCallbacks, i8, i8, i8, i8, i8 }
%struct.loader_instance_dispatch_table = type { %struct.VkLayerInstanceDispatchTable_, [250 x i32 (%struct.VkPhysicalDevice_T*)*] }
%struct.loader_physical_device_term = type { %struct.loader_instance_dispatch_table*, %struct.loader_icd_term*, i8, %struct.VkPhysicalDevice_T* }
%struct.loader_physical_device_tramp = type { %struct.loader_instance_dispatch_table*, %struct.loader_instance*, %struct.VkPhysicalDevice_T* }
%struct.loader_icd_term = type { %struct.loader_scanned_icd*, %struct.loader_instance*, %struct.loader_device*, %struct.VkInstance_T*, %struct.loader_icd_term_dispatch, %struct.loader_icd_term*, [250 x i32 (%struct.VkPhysicalDevice_T*)*] }
%struct.loader_scanned_icd = type { i8*, i8*, i32, i32, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.loader_device = type { %struct.loader_dev_dispatch_table, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.loader_physical_device_term*, %struct.loader_layer_list, %struct.loader_layer_list, %struct.VkAllocationCallbacks, %struct.anon.1, %struct.loader_device* }
%struct.loader_dev_dispatch_table = type { %struct.VkLayerDispatchTable_, %struct.loader_dev_ext_dispatch_table }
%struct.VkLayerDispatchTable_ = type { void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)*, void (%struct.VkDevice_T*, i32, i32, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)*, void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)*, void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceGroupPresentCapabilitiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkAcquireNextImageInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*)*, void (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*)*, void (%struct.VkDevice_T*, i32, i32, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*)*, void (%struct.VkDevice_T*)*, void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)*, void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*)*, void (%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**)*, void (%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*)*, i32 (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*)*, i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**)*, void (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*)*, void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32)*, i32 (%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32)*, i32 (%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i8*)*, void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*)*, i32 (%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*)*, void (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*)*, i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*)*, i32 (%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, void (%struct.VkCommandBuffer_T*, i32, i16)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)*, void (%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**)*, void (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**)*, void (%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64)*, void (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)*, i64 (%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*)*, void (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64)*, i64 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32)* }
%struct.VkQueue_T = type opaque
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkDeviceGroupPresentCapabilitiesKHR = type { i32, i8*, [32 x i32], i32 }
%struct.VkAcquireNextImageInfoKHR = type { i32, i8*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32 }
%struct.VkVideoSessionCreateInfoKHR = type { i32, i8*, i32, i32, %struct.VkVideoProfileKHR*, i32, %struct.VkExtent2D, i32, i32, i32 }
%struct.VkVideoSessionKHR_T = type opaque
%struct.VkVideoGetMemoryPropertiesKHR = type { i32, i8*, i32, %struct.VkMemoryRequirements2* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%struct.VkVideoBindMemoryKHR = type { i32, i8*, i32, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkVideoSessionParametersCreateInfoKHR = type { i32, i8*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionKHR_T* }
%struct.VkVideoSessionParametersKHR_T = type opaque
%struct.VkVideoSessionParametersUpdateInfoKHR = type { i32, i8*, i32 }
%struct.VkVideoBeginCodingInfoKHR = type { i32, i8*, i32, i32, %struct.VkVideoSessionKHR_T*, %struct.VkVideoSessionParametersKHR_T*, i32, %struct.VkVideoReferenceSlotKHR* }
%struct.VkVideoReferenceSlotKHR = type { i32, i8*, i8, %struct.VkVideoPictureResourceKHR* }
%struct.VkVideoPictureResourceKHR = type { i32, i8*, %struct.VkOffset2D, %struct.VkExtent2D, i32, %struct.VkImageView_T* }
%struct.VkVideoEndCodingInfoKHR = type { i32, i8*, i32 }
%struct.VkVideoCodingControlInfoKHR = type { i32, i8*, i32 }
%struct.VkVideoDecodeInfoKHR = type { i32, i8*, i32, %struct.VkOffset2D, %struct.VkExtent2D, %struct.VkBuffer_T*, i64, i64, %struct.VkVideoPictureResourceKHR, %struct.VkVideoReferenceSlotKHR*, i32, %struct.VkVideoReferenceSlotKHR* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%struct.VkDescriptorUpdateTemplate_T = type opaque
%struct.VkDescriptorUpdateTemplateCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorUpdateTemplateEntry*, i32, %struct.VkDescriptorSetLayout_T*, i32, %struct.VkPipelineLayout_T*, i32 }
%struct.VkDescriptorUpdateTemplateEntry = type { i32, i32, i32, i32, i64, i64 }
%struct.VkRenderPassCreateInfo2 = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription2*, i32, %struct.VkSubpassDescription2*, i32, %struct.VkSubpassDependency2*, i32, i32* }
%struct.VkAttachmentDescription2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription2 = type { i32, i8*, i32, i32, i32, i32, %struct.VkAttachmentReference2*, i32, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, i32, i32* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSubpassDependency2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassBeginInfo = type { i32, i8*, i32 }
%struct.VkSubpassEndInfo = type { i32, i8* }
%struct.VkImportFenceFdInfoKHR = type { i32, i8*, %struct.VkFence_T*, i32, i32, i32 }
%struct.VkFenceGetFdInfoKHR = type { i32, i8*, %struct.VkFence_T*, i32 }
%struct.VkAcquireProfilingLockInfoKHR = type { i32, i8*, i32, i64 }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%struct.VkSemaphoreWaitInfo = type { i32, i8*, i32, i32, %struct.VkSemaphore_T**, i64* }
%struct.VkSemaphoreSignalInfo = type { i32, i8*, %struct.VkSemaphore_T*, i64 }
%struct.VkDeviceMemoryOpaqueCaptureAddressInfo = type { i32, i8*, %struct.VkDeviceMemory_T* }
%struct.VkDeferredOperationKHR_T = type opaque
%struct.VkPipelineInfoKHR = type { i32, i8*, %struct.VkPipeline_T* }
%struct.VkPipelineExecutablePropertiesKHR = type { i32, i8*, i32, [256 x i8], [256 x i8], i32 }
%struct.VkPipelineExecutableInfoKHR = type { i32, i8*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineExecutableStatisticKHR = type { i32, i8*, [256 x i8], [256 x i8], i32, %union.VkPipelineExecutableStatisticValueKHR }
%union.VkPipelineExecutableStatisticValueKHR = type { i64 }
%struct.VkPipelineExecutableInternalRepresentationKHR = type { i32, i8*, [256 x i8], [256 x i8], i32, i64, i8* }
%struct.VkVideoEncodeInfoKHR = type { i32, i8*, i32, i32, %struct.VkExtent2D, %struct.VkBuffer_T*, i64, i64, %struct.VkVideoPictureResourceKHR, %struct.VkVideoReferenceSlotKHR*, i32, %struct.VkVideoReferenceSlotKHR* }
%struct.VkDependencyInfoKHR = type { i32, i8*, i32, i32, %struct.VkMemoryBarrier2KHR*, i32, %struct.VkBufferMemoryBarrier2KHR*, i32, %struct.VkImageMemoryBarrier2KHR* }
%struct.VkMemoryBarrier2KHR = type { i32, i8*, i64, i64, i64, i64 }
%struct.VkBufferMemoryBarrier2KHR = type { i32, i8*, i64, i64, i64, i64, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier2KHR = type { i32, i8*, i64, i64, i64, i64, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkSubmitInfo2KHR = type { i32, i8*, i32, i32, %struct.VkSemaphoreSubmitInfoKHR*, i32, %struct.VkCommandBufferSubmitInfoKHR*, i32, %struct.VkSemaphoreSubmitInfoKHR* }
%struct.VkCommandBufferSubmitInfoKHR = type { i32, i8*, %struct.VkCommandBuffer_T*, i32 }
%struct.VkSemaphoreSubmitInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i64, i64, i32 }
%struct.VkCheckpointData2NV = type { i32, i8*, i64, i8* }
%struct.VkCopyBufferInfo2KHR = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy2KHR* }
%struct.VkBufferCopy2KHR = type { i32, i8*, i64, i64, i64 }
%struct.VkCopyImageInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy2KHR* }
%struct.VkImageCopy2KHR = type { i32, i8*, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkCopyBufferToImageInfo2KHR = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy2KHR* }
%struct.VkBufferImageCopy2KHR = type { i32, i8*, i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkCopyImageToBufferInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy2KHR* }
%struct.VkBlitImageInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit2KHR*, i32 }
%struct.VkImageBlit2KHR = type { i32, i8*, %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkResolveImageInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve2KHR* }
%struct.VkImageResolve2KHR = type { i32, i8*, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkDebugMarkerObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkDebugMarkerObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugMarkerMarkerInfoEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkCuModuleCreateInfoNVX = type { i32, i8*, i64, i8* }
%struct.VkCuModuleNVX_T = type opaque
%struct.VkCuFunctionCreateInfoNVX = type { i32, i8*, %struct.VkCuModuleNVX_T*, i8* }
%struct.VkCuFunctionNVX_T = type opaque
%struct.VkCuLaunchInfoNVX = type { i32, i8*, %struct.VkCuFunctionNVX_T*, i32, i32, i32, i32, i32, i32, i32, i64, i8**, i64, i8** }
%struct.VkImageViewHandleInfoNVX = type { i32, i8*, %struct.VkImageView_T*, i32, %struct.VkSampler_T* }
%struct.VkImageViewAddressPropertiesNVX = type { i32, i8*, i64, i64 }
%struct.VkConditionalRenderingBeginInfoEXT = type { i32, i8*, %struct.VkBuffer_T*, i64, i32 }
%struct.VkViewportWScalingNV = type { float, float }
%struct.VkDisplayPowerInfoEXT = type { i32, i8*, i32 }
%struct.VkDeviceEventInfoEXT = type { i32, i8*, i32 }
%struct.VkDisplayEventInfoEXT = type { i32, i8*, i32 }
%struct.VkRefreshCycleDurationGOOGLE = type { i64 }
%struct.VkPastPresentationTimingGOOGLE = type { i32, i64, i64, i64, i64 }
%struct.VkHdrMetadataEXT = type { i32, i8*, %struct.VkXYColorEXT, %struct.VkXYColorEXT, %struct.VkXYColorEXT, %struct.VkXYColorEXT, float, float, float, float }
%struct.VkXYColorEXT = type { float, float }
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSampleLocationsInfoEXT = type { i32, i8*, i32, %struct.VkExtent2D, i32, %struct.VkSampleLocationEXT* }
%struct.VkSampleLocationEXT = type { float, float }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%struct.VkValidationCacheCreateInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkValidationCacheEXT_T = type opaque
%struct.VkShadingRatePaletteNV = type { i32, i32* }
%struct.VkCoarseSampleOrderCustomNV = type { i32, i32, i32, %struct.VkCoarseSampleLocationNV* }
%struct.VkCoarseSampleLocationNV = type { i32, i32, i32 }
%struct.VkAccelerationStructureCreateInfoNV = type { i32, i8*, i64, %struct.VkAccelerationStructureInfoNV }
%struct.VkAccelerationStructureInfoNV = type { i32, i8*, i32, i32, i32, i32, %struct.VkGeometryNV* }
%struct.VkGeometryNV = type { i32, i8*, i32, %struct.VkGeometryDataNV, i32 }
%struct.VkGeometryDataNV = type { %struct.VkGeometryTrianglesNV, %struct.VkGeometryAABBNV }
%struct.VkGeometryTrianglesNV = type { i32, i8*, %struct.VkBuffer_T*, i64, i32, i64, i32, %struct.VkBuffer_T*, i64, i32, i32, %struct.VkBuffer_T*, i64 }
%struct.VkGeometryAABBNV = type { i32, i8*, %struct.VkBuffer_T*, i32, i32, i64 }
%struct.VkAccelerationStructureNV_T = type opaque
%struct.VkAccelerationStructureMemoryRequirementsInfoNV = type { i32, i8*, i32, %struct.VkAccelerationStructureNV_T* }
%struct.VkBindAccelerationStructureMemoryInfoNV = type { i32, i8*, %struct.VkAccelerationStructureNV_T*, %struct.VkDeviceMemory_T*, i64, i32, i32* }
%struct.VkRayTracingPipelineCreateInfoNV = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRayTracingShaderGroupCreateInfoNV*, i32, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkRayTracingShaderGroupCreateInfoNV = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkMemoryHostPointerPropertiesEXT = type { i32, i8*, i32 }
%struct.VkCalibratedTimestampInfoEXT = type { i32, i8*, i32 }
%struct.VkCheckpointDataNV = type { i32, i8*, i32, i8* }
%struct.VkInitializePerformanceApiInfoINTEL = type { i32, i8*, i8* }
%struct.VkPerformanceMarkerInfoINTEL = type { i32, i8*, i64 }
%struct.VkPerformanceStreamMarkerInfoINTEL = type { i32, i8*, i32 }
%struct.VkPerformanceOverrideInfoINTEL = type { i32, i8*, i32, i32, i64 }
%struct.VkPerformanceConfigurationAcquireInfoINTEL = type { i32, i8*, i32 }
%struct.VkPerformanceConfigurationINTEL_T = type opaque
%struct.VkPerformanceValueINTEL = type { i32, %union.VkPerformanceValueDataINTEL }
%union.VkPerformanceValueDataINTEL = type { i64 }
%struct.VkBufferDeviceAddressInfo = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkGeneratedCommandsMemoryRequirementsInfoNV = type { i32, i8*, i32, %struct.VkPipeline_T*, %struct.VkIndirectCommandsLayoutNV_T*, i32 }
%struct.VkIndirectCommandsLayoutNV_T = type opaque
%struct.VkGeneratedCommandsInfoNV = type { i32, i8*, i32, %struct.VkPipeline_T*, %struct.VkIndirectCommandsLayoutNV_T*, i32, %struct.VkIndirectCommandsStreamNV*, i32, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64 }
%struct.VkIndirectCommandsStreamNV = type { %struct.VkBuffer_T*, i64 }
%struct.VkIndirectCommandsLayoutCreateInfoNV = type { i32, i8*, i32, i32, i32, %struct.VkIndirectCommandsLayoutTokenNV*, i32, i32* }
%struct.VkIndirectCommandsLayoutTokenNV = type { i32, i8*, i32, i32, i32, i32, i32, %struct.VkPipelineLayout_T*, i32, i32, i32, i32, i32, i32*, i32* }
%struct.VkPrivateDataSlotCreateInfoEXT = type { i32, i8*, i32 }
%struct.VkPrivateDataSlotEXT_T = type opaque
%struct.VkVertexInputBindingDescription2EXT = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkVertexInputAttributeDescription2EXT = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkAccelerationStructureCreateInfoKHR = type { i32, i8*, i32, %struct.VkBuffer_T*, i64, i64, i32, i64 }
%struct.VkAccelerationStructureKHR_T = type opaque
%struct.VkAccelerationStructureBuildGeometryInfoKHR = type { i32, i8*, i32, i32, i32, %struct.VkAccelerationStructureKHR_T*, %struct.VkAccelerationStructureKHR_T*, i32, %struct.VkAccelerationStructureGeometryKHR*, %struct.VkAccelerationStructureGeometryKHR**, %union.VkDeviceOrHostAddressKHR }
%struct.VkAccelerationStructureGeometryKHR = type { i32, i8*, i32, %union.VkAccelerationStructureGeometryDataKHR, i32 }
%union.VkAccelerationStructureGeometryDataKHR = type { %struct.VkAccelerationStructureGeometryTrianglesDataKHR }
%struct.VkAccelerationStructureGeometryTrianglesDataKHR = type { i32, i8*, i32, %union.VkDeviceOrHostAddressConstKHR, i64, i32, i32, %union.VkDeviceOrHostAddressConstKHR, %union.VkDeviceOrHostAddressConstKHR }
%union.VkDeviceOrHostAddressConstKHR = type { i64 }
%union.VkDeviceOrHostAddressKHR = type { i64 }
%struct.VkAccelerationStructureBuildRangeInfoKHR = type { i32, i32, i32, i32 }
%struct.VkCopyAccelerationStructureInfoKHR = type { i32, i8*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAccelerationStructureKHR_T*, i32 }
%struct.VkCopyAccelerationStructureToMemoryInfoKHR = type { i32, i8*, %struct.VkAccelerationStructureKHR_T*, %union.VkDeviceOrHostAddressKHR, i32 }
%struct.VkCopyMemoryToAccelerationStructureInfoKHR = type { i32, i8*, %union.VkDeviceOrHostAddressConstKHR, %struct.VkAccelerationStructureKHR_T*, i32 }
%struct.VkAccelerationStructureDeviceAddressInfoKHR = type { i32, i8*, %struct.VkAccelerationStructureKHR_T* }
%struct.VkAccelerationStructureVersionInfoKHR = type { i32, i8*, i8* }
%struct.VkAccelerationStructureBuildSizesInfoKHR = type { i32, i8*, i64, i64, i64 }
%struct.VkStridedDeviceAddressRegionKHR = type { i64, i64, i64 }
%struct.VkRayTracingPipelineCreateInfoKHR = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRayTracingShaderGroupCreateInfoKHR*, i32, %struct.VkPipelineLibraryCreateInfoKHR*, %struct.VkRayTracingPipelineInterfaceCreateInfoKHR*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkRayTracingShaderGroupCreateInfoKHR = type { i32, i8*, i32, i32, i32, i32, i32, i8* }
%struct.VkPipelineLibraryCreateInfoKHR = type { i32, i8*, i32, %struct.VkPipeline_T** }
%struct.VkRayTracingPipelineInterfaceCreateInfoKHR = type { i32, i8*, i32, i32 }
%struct.loader_dev_ext_dispatch_table = type { [250 x i32 (%struct.VkDevice_T*)*] }
%struct.anon.1 = type { i8, i8, i8, i8, i8, i8 }
%struct.loader_icd_term_dispatch = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void ()* (%struct.VkDevice_T*, i8*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, i32 (i32*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)*, i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.loader_icd_tramp_list = type { i64, i32, %struct.loader_scanned_icd* }
%struct.loader_dispatch_hash_entry = type { i8*, %struct.loader_dispatch_hash_list }
%struct.loader_dispatch_hash_list = type { i64, i32, i32* }
%struct.loader_msg_callback_map_entry = type { %struct.VkDebugReportCallbackEXT_T*, %struct.VkDebugReportCallbackEXT_T* }
%struct.loader_layer_list = type { i64, i32, %struct.loader_layer_properties* }
%struct.loader_layer_properties = type { %struct.VkLayerProperties, i32, i32, [1024 x i8], i8*, %struct.loader_layer_functions, %struct.loader_extension_list, %struct.loader_device_extension_list, %struct.loader_name_value, %struct.loader_name_value, i32, [1024 x i8]*, %struct.anon, i32, [1024 x i8]*, i8, i8, %struct.loader_override_expiration, i8, i32, [1024 x i8]*, i32, [1024 x i8]* }
%struct.loader_layer_functions = type { [1024 x i8], [1024 x i8], [1024 x i8], i32 (%struct.VkNegotiateLayerInterface*)*, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)* }
%struct.VkNegotiateLayerInterface = type { i32, i8*, i32, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)* }
%struct.loader_device_extension_list = type { i64, i32, %struct.loader_dev_ext_props* }
%struct.loader_dev_ext_props = type { %struct.VkExtensionProperties, i32, i8** }
%struct.loader_name_value = type { [1024 x i8], [1024 x i8] }
%struct.anon = type { [1024 x i8], [1024 x i8], [1024 x i8] }
%struct.loader_override_expiration = type { i16, i8, i8, i8, i8 }
%struct.loader_extension_list = type { i64, i32, %struct.VkExtensionProperties* }
%union.loader_instance_extension_enables = type { [4 x i64] }
%struct.VkLayerDbgFunctionNode_ = type { i8, %union.anon, i8*, %struct.VkLayerDbgFunctionNode_* }
%union.anon = type { %struct.VkDebugReportContent }
%struct.VkDebugReportContent = type { %struct.VkDebugReportCallbackEXT_T*, i32 (i32, i32, i64, i64, i32, i8*, i8*, i8*)*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.cJSON_Hooks = type { i8* (i64)*, void (i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.VkIcdSurface = type { %union.anon.2, i32, i32, i32, i32, %struct.VkSurfaceKHR_T** }
%union.anon.2 = type { %struct.VkIcdSurfaceDisplay }
%struct.VkIcdSurfaceDisplay = type { %struct.VkIcdSurfaceBase, %struct.VkDisplayModeKHR_T*, i32, i32, i32, float, i32, %struct.VkExtent2D }
%struct.VkIcdSurfaceBase = type { i32 }
%struct.VkBaseInStructure = type { i32, %struct.VkBaseInStructure* }
%struct.VkPhysicalDeviceMultiviewFeatures = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceIDProperties = type { i32, i8*, [16 x i8], [16 x i8], [8 x i8], i32, i32 }
%struct.loader_generic_list = type { i64, i32, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%union.pthread_mutexattr_t = type { i32 }
%struct.loader_data_files = type { i32, i32, i8** }
%struct.cJSON = type { %struct.cJSON*, %struct.cJSON*, %struct.cJSON*, i32, i8*, i32, double, i8* }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.VkLayerDeviceCreateInfo = type { i32, i8*, i32, %union.anon.5 }
%union.anon.5 = type { %struct.VkLayerDeviceLink_* }
%struct.VkLayerDeviceLink_ = type { %struct.VkLayerDeviceLink_*, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)* }
%struct.VkBaseOutStructure = type { i32, %struct.VkBaseOutStructure* }
%struct.VkDeviceGroupDeviceCreateInfo = type { i32, i8*, i32, %struct.VkPhysicalDevice_T** }
%struct.VkLayerInstanceCreateInfo = type { i32, i8*, i32, %union.anon.3 }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32 (%struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)**)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*)* }
%struct.VkLayerInstanceLink_ = type { %struct.VkLayerInstanceLink_*, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)* }
%struct.LoaderSortedPhysicalDevice = type { i32, %struct.VkPhysicalDevice_T**, i32, %struct.loader_icd_term* }
%struct.loader_phys_dev_per_icd = type { i32, %struct.VkPhysicalDevice_T**, %struct.loader_icd_term* }
%struct.VkEnumerateInstanceVersionChain = type { %struct.VkChainHeader, {}*, %struct.VkEnumerateInstanceVersionChain* }
%struct.VkChainHeader = type { i32, i32, i32 }
%struct.VkEnumerateInstanceExtensionPropertiesChain = type { %struct.VkChainHeader, {}*, %struct.VkEnumerateInstanceExtensionPropertiesChain* }
%struct.VkEnumerateInstanceLayerPropertiesChain = type { %struct.VkChainHeader, {}*, %struct.VkEnumerateInstanceLayerPropertiesChain* }

@.str = private unnamed_addr constant [102 x i8] c"Bad destination in loader trampoline dispatch,Are layers and extensions that you are calling enabled?\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"vkDestroyInstance\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"vkEnumeratePhysicalDevices\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"vkGetPhysicalDeviceFeatures\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"vkGetPhysicalDeviceFormatProperties\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"vkGetPhysicalDeviceImageFormatProperties\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"vkGetPhysicalDeviceProperties\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"vkGetPhysicalDeviceQueueFamilyProperties\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"vkGetPhysicalDeviceMemoryProperties\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"vkGetDeviceProcAddr\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"vkCreateDevice\00", align 1
@.str.11 = private unnamed_addr constant [37 x i8] c"vkEnumerateDeviceExtensionProperties\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"vkGetPhysicalDeviceSparseImageFormatProperties\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"vkEnumeratePhysicalDeviceGroups\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"vkGetPhysicalDeviceFeatures2\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"vkGetPhysicalDeviceProperties2\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"vkGetPhysicalDeviceFormatProperties2\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"vkGetPhysicalDeviceImageFormatProperties2\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"vkGetPhysicalDeviceQueueFamilyProperties2\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"vkGetPhysicalDeviceMemoryProperties2\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"vkGetPhysicalDeviceSparseImageFormatProperties2\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"vkGetPhysicalDeviceExternalBufferProperties\00", align 1
@.str.22 = private unnamed_addr constant [43 x i8] c"vkGetPhysicalDeviceExternalFenceProperties\00", align 1
@.str.23 = private unnamed_addr constant [47 x i8] c"vkGetPhysicalDeviceExternalSemaphoreProperties\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"vkDestroySurfaceKHR\00", align 1
@.str.25 = private unnamed_addr constant [37 x i8] c"vkGetPhysicalDeviceSurfaceSupportKHR\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"vkGetPhysicalDeviceSurfaceCapabilitiesKHR\00", align 1
@.str.27 = private unnamed_addr constant [37 x i8] c"vkGetPhysicalDeviceSurfaceFormatsKHR\00", align 1
@.str.28 = private unnamed_addr constant [42 x i8] c"vkGetPhysicalDeviceSurfacePresentModesKHR\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"vkCreateSwapchainKHR\00", align 1
@.str.30 = private unnamed_addr constant [39 x i8] c"vkGetDeviceGroupSurfacePresentModesKHR\00", align 1
@.str.31 = private unnamed_addr constant [40 x i8] c"vkGetPhysicalDevicePresentRectanglesKHR\00", align 1
@.str.32 = private unnamed_addr constant [40 x i8] c"vkGetPhysicalDeviceDisplayPropertiesKHR\00", align 1
@.str.33 = private unnamed_addr constant [45 x i8] c"vkGetPhysicalDeviceDisplayPlanePropertiesKHR\00", align 1
@.str.34 = private unnamed_addr constant [38 x i8] c"vkGetDisplayPlaneSupportedDisplaysKHR\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"vkGetDisplayModePropertiesKHR\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"vkCreateDisplayModeKHR\00", align 1
@.str.37 = private unnamed_addr constant [33 x i8] c"vkGetDisplayPlaneCapabilitiesKHR\00", align 1
@.str.38 = private unnamed_addr constant [31 x i8] c"vkCreateDisplayPlaneSurfaceKHR\00", align 1
@.str.39 = private unnamed_addr constant [28 x i8] c"vkCreateSharedSwapchainsKHR\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"vkCreateXcbSurfaceKHR\00", align 1
@.str.41 = private unnamed_addr constant [45 x i8] c"vkGetPhysicalDeviceXcbPresentationSupportKHR\00", align 1
@.str.42 = private unnamed_addr constant [40 x i8] c"vkGetPhysicalDeviceVideoCapabilitiesKHR\00", align 1
@.str.43 = private unnamed_addr constant [44 x i8] c"vkGetPhysicalDeviceVideoFormatPropertiesKHR\00", align 1
@.str.44 = private unnamed_addr constant [32 x i8] c"vkGetPhysicalDeviceFeatures2KHR\00", align 1
@.str.45 = private unnamed_addr constant [34 x i8] c"vkGetPhysicalDeviceProperties2KHR\00", align 1
@.str.46 = private unnamed_addr constant [40 x i8] c"vkGetPhysicalDeviceFormatProperties2KHR\00", align 1
@.str.47 = private unnamed_addr constant [45 x i8] c"vkGetPhysicalDeviceImageFormatProperties2KHR\00", align 1
@.str.48 = private unnamed_addr constant [45 x i8] c"vkGetPhysicalDeviceQueueFamilyProperties2KHR\00", align 1
@.str.49 = private unnamed_addr constant [40 x i8] c"vkGetPhysicalDeviceMemoryProperties2KHR\00", align 1
@.str.50 = private unnamed_addr constant [51 x i8] c"vkGetPhysicalDeviceSparseImageFormatProperties2KHR\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"vkEnumeratePhysicalDeviceGroupsKHR\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"vkGetPhysicalDeviceExternalBufferPropertiesKHR\00", align 1
@.str.53 = private unnamed_addr constant [50 x i8] c"vkGetPhysicalDeviceExternalSemaphorePropertiesKHR\00", align 1
@.str.54 = private unnamed_addr constant [46 x i8] c"vkGetPhysicalDeviceExternalFencePropertiesKHR\00", align 1
@.str.55 = private unnamed_addr constant [64 x i8] c"vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR\00", align 1
@.str.56 = private unnamed_addr constant [56 x i8] c"vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR\00", align 1
@.str.57 = private unnamed_addr constant [43 x i8] c"vkGetPhysicalDeviceSurfaceCapabilities2KHR\00", align 1
@.str.58 = private unnamed_addr constant [38 x i8] c"vkGetPhysicalDeviceSurfaceFormats2KHR\00", align 1
@.str.59 = private unnamed_addr constant [41 x i8] c"vkGetPhysicalDeviceDisplayProperties2KHR\00", align 1
@.str.60 = private unnamed_addr constant [46 x i8] c"vkGetPhysicalDeviceDisplayPlaneProperties2KHR\00", align 1
@.str.61 = private unnamed_addr constant [31 x i8] c"vkGetDisplayModeProperties2KHR\00", align 1
@.str.62 = private unnamed_addr constant [34 x i8] c"vkGetDisplayPlaneCapabilities2KHR\00", align 1
@.str.63 = private unnamed_addr constant [43 x i8] c"vkGetPhysicalDeviceFragmentShadingRatesKHR\00", align 1
@.str.64 = private unnamed_addr constant [31 x i8] c"vkCreateDebugReportCallbackEXT\00", align 1
@.str.65 = private unnamed_addr constant [32 x i8] c"vkDestroyDebugReportCallbackEXT\00", align 1
@.str.66 = private unnamed_addr constant [24 x i8] c"vkDebugReportMessageEXT\00", align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"vkDebugMarkerSetObjectTagEXT\00", align 1
@.str.68 = private unnamed_addr constant [30 x i8] c"vkDebugMarkerSetObjectNameEXT\00", align 1
@.str.69 = private unnamed_addr constant [51 x i8] c"vkGetPhysicalDeviceExternalImageFormatPropertiesNV\00", align 1
@.str.70 = private unnamed_addr constant [20 x i8] c"vkReleaseDisplayEXT\00", align 1
@.str.71 = private unnamed_addr constant [43 x i8] c"vkGetPhysicalDeviceSurfaceCapabilities2EXT\00", align 1
@.str.72 = private unnamed_addr constant [29 x i8] c"vkSetDebugUtilsObjectNameEXT\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"vkSetDebugUtilsObjectTagEXT\00", align 1
@.str.74 = private unnamed_addr constant [31 x i8] c"vkQueueBeginDebugUtilsLabelEXT\00", align 1
@.str.75 = private unnamed_addr constant [29 x i8] c"vkQueueEndDebugUtilsLabelEXT\00", align 1
@.str.76 = private unnamed_addr constant [32 x i8] c"vkQueueInsertDebugUtilsLabelEXT\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"vkCmdBeginDebugUtilsLabelEXT\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"vkCmdEndDebugUtilsLabelEXT\00", align 1
@.str.79 = private unnamed_addr constant [30 x i8] c"vkCmdInsertDebugUtilsLabelEXT\00", align 1
@.str.80 = private unnamed_addr constant [31 x i8] c"vkCreateDebugUtilsMessengerEXT\00", align 1
@.str.81 = private unnamed_addr constant [32 x i8] c"vkDestroyDebugUtilsMessengerEXT\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"vkSubmitDebugUtilsMessageEXT\00", align 1
@.str.83 = private unnamed_addr constant [44 x i8] c"vkGetPhysicalDeviceMultisamplePropertiesEXT\00", align 1
@.str.84 = private unnamed_addr constant [47 x i8] c"vkGetPhysicalDeviceCalibrateableTimeDomainsEXT\00", align 1
@.str.85 = private unnamed_addr constant [37 x i8] c"vkGetPhysicalDeviceToolPropertiesEXT\00", align 1
@.str.86 = private unnamed_addr constant [49 x i8] c"vkGetPhysicalDeviceCooperativeMatrixPropertiesNV\00", align 1
@.str.87 = private unnamed_addr constant [66 x i8] c"vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"vkCreateHeadlessSurfaceEXT\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"vkDestroyDevice\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"vkGetDeviceQueue\00", align 1
@.str.91 = private unnamed_addr constant [14 x i8] c"vkQueueSubmit\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"vkQueueWaitIdle\00", align 1
@.str.93 = private unnamed_addr constant [17 x i8] c"vkDeviceWaitIdle\00", align 1
@.str.94 = private unnamed_addr constant [17 x i8] c"vkAllocateMemory\00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c"vkFreeMemory\00", align 1
@.str.96 = private unnamed_addr constant [12 x i8] c"vkMapMemory\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"vkUnmapMemory\00", align 1
@.str.98 = private unnamed_addr constant [26 x i8] c"vkFlushMappedMemoryRanges\00", align 1
@.str.99 = private unnamed_addr constant [31 x i8] c"vkInvalidateMappedMemoryRanges\00", align 1
@.str.100 = private unnamed_addr constant [28 x i8] c"vkGetDeviceMemoryCommitment\00", align 1
@.str.101 = private unnamed_addr constant [19 x i8] c"vkBindBufferMemory\00", align 1
@.str.102 = private unnamed_addr constant [18 x i8] c"vkBindImageMemory\00", align 1
@.str.103 = private unnamed_addr constant [30 x i8] c"vkGetBufferMemoryRequirements\00", align 1
@.str.104 = private unnamed_addr constant [29 x i8] c"vkGetImageMemoryRequirements\00", align 1
@.str.105 = private unnamed_addr constant [35 x i8] c"vkGetImageSparseMemoryRequirements\00", align 1
@.str.106 = private unnamed_addr constant [18 x i8] c"vkQueueBindSparse\00", align 1
@.str.107 = private unnamed_addr constant [14 x i8] c"vkCreateFence\00", align 1
@.str.108 = private unnamed_addr constant [15 x i8] c"vkDestroyFence\00", align 1
@.str.109 = private unnamed_addr constant [14 x i8] c"vkResetFences\00", align 1
@.str.110 = private unnamed_addr constant [17 x i8] c"vkGetFenceStatus\00", align 1
@.str.111 = private unnamed_addr constant [16 x i8] c"vkWaitForFences\00", align 1
@.str.112 = private unnamed_addr constant [18 x i8] c"vkCreateSemaphore\00", align 1
@.str.113 = private unnamed_addr constant [19 x i8] c"vkDestroySemaphore\00", align 1
@.str.114 = private unnamed_addr constant [14 x i8] c"vkCreateEvent\00", align 1
@.str.115 = private unnamed_addr constant [15 x i8] c"vkDestroyEvent\00", align 1
@.str.116 = private unnamed_addr constant [17 x i8] c"vkGetEventStatus\00", align 1
@.str.117 = private unnamed_addr constant [11 x i8] c"vkSetEvent\00", align 1
@.str.118 = private unnamed_addr constant [13 x i8] c"vkResetEvent\00", align 1
@.str.119 = private unnamed_addr constant [18 x i8] c"vkCreateQueryPool\00", align 1
@.str.120 = private unnamed_addr constant [19 x i8] c"vkDestroyQueryPool\00", align 1
@.str.121 = private unnamed_addr constant [22 x i8] c"vkGetQueryPoolResults\00", align 1
@.str.122 = private unnamed_addr constant [15 x i8] c"vkCreateBuffer\00", align 1
@.str.123 = private unnamed_addr constant [16 x i8] c"vkDestroyBuffer\00", align 1
@.str.124 = private unnamed_addr constant [19 x i8] c"vkCreateBufferView\00", align 1
@.str.125 = private unnamed_addr constant [20 x i8] c"vkDestroyBufferView\00", align 1
@.str.126 = private unnamed_addr constant [14 x i8] c"vkCreateImage\00", align 1
@.str.127 = private unnamed_addr constant [15 x i8] c"vkDestroyImage\00", align 1
@.str.128 = private unnamed_addr constant [28 x i8] c"vkGetImageSubresourceLayout\00", align 1
@.str.129 = private unnamed_addr constant [18 x i8] c"vkCreateImageView\00", align 1
@.str.130 = private unnamed_addr constant [19 x i8] c"vkDestroyImageView\00", align 1
@.str.131 = private unnamed_addr constant [21 x i8] c"vkCreateShaderModule\00", align 1
@.str.132 = private unnamed_addr constant [22 x i8] c"vkDestroyShaderModule\00", align 1
@.str.133 = private unnamed_addr constant [22 x i8] c"vkCreatePipelineCache\00", align 1
@.str.134 = private unnamed_addr constant [23 x i8] c"vkDestroyPipelineCache\00", align 1
@.str.135 = private unnamed_addr constant [23 x i8] c"vkGetPipelineCacheData\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"vkMergePipelineCaches\00", align 1
@.str.137 = private unnamed_addr constant [26 x i8] c"vkCreateGraphicsPipelines\00", align 1
@.str.138 = private unnamed_addr constant [25 x i8] c"vkCreateComputePipelines\00", align 1
@.str.139 = private unnamed_addr constant [18 x i8] c"vkDestroyPipeline\00", align 1
@.str.140 = private unnamed_addr constant [23 x i8] c"vkCreatePipelineLayout\00", align 1
@.str.141 = private unnamed_addr constant [24 x i8] c"vkDestroyPipelineLayout\00", align 1
@.str.142 = private unnamed_addr constant [16 x i8] c"vkCreateSampler\00", align 1
@.str.143 = private unnamed_addr constant [17 x i8] c"vkDestroySampler\00", align 1
@.str.144 = private unnamed_addr constant [28 x i8] c"vkCreateDescriptorSetLayout\00", align 1
@.str.145 = private unnamed_addr constant [29 x i8] c"vkDestroyDescriptorSetLayout\00", align 1
@.str.146 = private unnamed_addr constant [23 x i8] c"vkCreateDescriptorPool\00", align 1
@.str.147 = private unnamed_addr constant [24 x i8] c"vkDestroyDescriptorPool\00", align 1
@.str.148 = private unnamed_addr constant [22 x i8] c"vkResetDescriptorPool\00", align 1
@.str.149 = private unnamed_addr constant [25 x i8] c"vkAllocateDescriptorSets\00", align 1
@.str.150 = private unnamed_addr constant [21 x i8] c"vkFreeDescriptorSets\00", align 1
@.str.151 = private unnamed_addr constant [23 x i8] c"vkUpdateDescriptorSets\00", align 1
@.str.152 = private unnamed_addr constant [20 x i8] c"vkCreateFramebuffer\00", align 1
@.str.153 = private unnamed_addr constant [21 x i8] c"vkDestroyFramebuffer\00", align 1
@.str.154 = private unnamed_addr constant [19 x i8] c"vkCreateRenderPass\00", align 1
@.str.155 = private unnamed_addr constant [20 x i8] c"vkDestroyRenderPass\00", align 1
@.str.156 = private unnamed_addr constant [27 x i8] c"vkGetRenderAreaGranularity\00", align 1
@.str.157 = private unnamed_addr constant [20 x i8] c"vkCreateCommandPool\00", align 1
@.str.158 = private unnamed_addr constant [21 x i8] c"vkDestroyCommandPool\00", align 1
@.str.159 = private unnamed_addr constant [19 x i8] c"vkResetCommandPool\00", align 1
@.str.160 = private unnamed_addr constant [25 x i8] c"vkAllocateCommandBuffers\00", align 1
@.str.161 = private unnamed_addr constant [21 x i8] c"vkFreeCommandBuffers\00", align 1
@.str.162 = private unnamed_addr constant [21 x i8] c"vkBeginCommandBuffer\00", align 1
@.str.163 = private unnamed_addr constant [19 x i8] c"vkEndCommandBuffer\00", align 1
@.str.164 = private unnamed_addr constant [21 x i8] c"vkResetCommandBuffer\00", align 1
@.str.165 = private unnamed_addr constant [18 x i8] c"vkCmdBindPipeline\00", align 1
@.str.166 = private unnamed_addr constant [17 x i8] c"vkCmdSetViewport\00", align 1
@.str.167 = private unnamed_addr constant [16 x i8] c"vkCmdSetScissor\00", align 1
@.str.168 = private unnamed_addr constant [18 x i8] c"vkCmdSetLineWidth\00", align 1
@.str.169 = private unnamed_addr constant [18 x i8] c"vkCmdSetDepthBias\00", align 1
@.str.170 = private unnamed_addr constant [23 x i8] c"vkCmdSetBlendConstants\00", align 1
@.str.171 = private unnamed_addr constant [20 x i8] c"vkCmdSetDepthBounds\00", align 1
@.str.172 = private unnamed_addr constant [27 x i8] c"vkCmdSetStencilCompareMask\00", align 1
@.str.173 = private unnamed_addr constant [25 x i8] c"vkCmdSetStencilWriteMask\00", align 1
@.str.174 = private unnamed_addr constant [25 x i8] c"vkCmdSetStencilReference\00", align 1
@.str.175 = private unnamed_addr constant [24 x i8] c"vkCmdBindDescriptorSets\00", align 1
@.str.176 = private unnamed_addr constant [21 x i8] c"vkCmdBindIndexBuffer\00", align 1
@.str.177 = private unnamed_addr constant [23 x i8] c"vkCmdBindVertexBuffers\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"vkCmdDraw\00", align 1
@.str.179 = private unnamed_addr constant [17 x i8] c"vkCmdDrawIndexed\00", align 1
@.str.180 = private unnamed_addr constant [18 x i8] c"vkCmdDrawIndirect\00", align 1
@.str.181 = private unnamed_addr constant [25 x i8] c"vkCmdDrawIndexedIndirect\00", align 1
@.str.182 = private unnamed_addr constant [14 x i8] c"vkCmdDispatch\00", align 1
@.str.183 = private unnamed_addr constant [22 x i8] c"vkCmdDispatchIndirect\00", align 1
@.str.184 = private unnamed_addr constant [16 x i8] c"vkCmdCopyBuffer\00", align 1
@.str.185 = private unnamed_addr constant [15 x i8] c"vkCmdCopyImage\00", align 1
@.str.186 = private unnamed_addr constant [15 x i8] c"vkCmdBlitImage\00", align 1
@.str.187 = private unnamed_addr constant [23 x i8] c"vkCmdCopyBufferToImage\00", align 1
@.str.188 = private unnamed_addr constant [23 x i8] c"vkCmdCopyImageToBuffer\00", align 1
@.str.189 = private unnamed_addr constant [18 x i8] c"vkCmdUpdateBuffer\00", align 1
@.str.190 = private unnamed_addr constant [16 x i8] c"vkCmdFillBuffer\00", align 1
@.str.191 = private unnamed_addr constant [21 x i8] c"vkCmdClearColorImage\00", align 1
@.str.192 = private unnamed_addr constant [28 x i8] c"vkCmdClearDepthStencilImage\00", align 1
@.str.193 = private unnamed_addr constant [22 x i8] c"vkCmdClearAttachments\00", align 1
@.str.194 = private unnamed_addr constant [18 x i8] c"vkCmdResolveImage\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"vkCmdSetEvent\00", align 1
@.str.196 = private unnamed_addr constant [16 x i8] c"vkCmdResetEvent\00", align 1
@.str.197 = private unnamed_addr constant [16 x i8] c"vkCmdWaitEvents\00", align 1
@.str.198 = private unnamed_addr constant [21 x i8] c"vkCmdPipelineBarrier\00", align 1
@.str.199 = private unnamed_addr constant [16 x i8] c"vkCmdBeginQuery\00", align 1
@.str.200 = private unnamed_addr constant [14 x i8] c"vkCmdEndQuery\00", align 1
@.str.201 = private unnamed_addr constant [20 x i8] c"vkCmdResetQueryPool\00", align 1
@.str.202 = private unnamed_addr constant [20 x i8] c"vkCmdWriteTimestamp\00", align 1
@.str.203 = private unnamed_addr constant [26 x i8] c"vkCmdCopyQueryPoolResults\00", align 1
@.str.204 = private unnamed_addr constant [19 x i8] c"vkCmdPushConstants\00", align 1
@.str.205 = private unnamed_addr constant [21 x i8] c"vkCmdBeginRenderPass\00", align 1
@.str.206 = private unnamed_addr constant [17 x i8] c"vkCmdNextSubpass\00", align 1
@.str.207 = private unnamed_addr constant [19 x i8] c"vkCmdEndRenderPass\00", align 1
@.str.208 = private unnamed_addr constant [21 x i8] c"vkCmdExecuteCommands\00", align 1
@.str.209 = private unnamed_addr constant [20 x i8] c"vkBindBufferMemory2\00", align 1
@.str.210 = private unnamed_addr constant [19 x i8] c"vkBindImageMemory2\00", align 1
@.str.211 = private unnamed_addr constant [35 x i8] c"vkGetDeviceGroupPeerMemoryFeatures\00", align 1
@.str.212 = private unnamed_addr constant [19 x i8] c"vkCmdSetDeviceMask\00", align 1
@.str.213 = private unnamed_addr constant [18 x i8] c"vkCmdDispatchBase\00", align 1
@.str.214 = private unnamed_addr constant [30 x i8] c"vkGetImageMemoryRequirements2\00", align 1
@.str.215 = private unnamed_addr constant [31 x i8] c"vkGetBufferMemoryRequirements2\00", align 1
@.str.216 = private unnamed_addr constant [36 x i8] c"vkGetImageSparseMemoryRequirements2\00", align 1
@.str.217 = private unnamed_addr constant [18 x i8] c"vkTrimCommandPool\00", align 1
@.str.218 = private unnamed_addr constant [18 x i8] c"vkGetDeviceQueue2\00", align 1
@.str.219 = private unnamed_addr constant [31 x i8] c"vkCreateSamplerYcbcrConversion\00", align 1
@.str.220 = private unnamed_addr constant [32 x i8] c"vkDestroySamplerYcbcrConversion\00", align 1
@.str.221 = private unnamed_addr constant [33 x i8] c"vkCreateDescriptorUpdateTemplate\00", align 1
@.str.222 = private unnamed_addr constant [34 x i8] c"vkDestroyDescriptorUpdateTemplate\00", align 1
@.str.223 = private unnamed_addr constant [34 x i8] c"vkUpdateDescriptorSetWithTemplate\00", align 1
@.str.224 = private unnamed_addr constant [32 x i8] c"vkGetDescriptorSetLayoutSupport\00", align 1
@.str.225 = private unnamed_addr constant [23 x i8] c"vkCmdDrawIndirectCount\00", align 1
@.str.226 = private unnamed_addr constant [30 x i8] c"vkCmdDrawIndexedIndirectCount\00", align 1
@.str.227 = private unnamed_addr constant [20 x i8] c"vkCreateRenderPass2\00", align 1
@.str.228 = private unnamed_addr constant [22 x i8] c"vkCmdBeginRenderPass2\00", align 1
@.str.229 = private unnamed_addr constant [18 x i8] c"vkCmdNextSubpass2\00", align 1
@.str.230 = private unnamed_addr constant [20 x i8] c"vkCmdEndRenderPass2\00", align 1
@.str.231 = private unnamed_addr constant [17 x i8] c"vkResetQueryPool\00", align 1
@.str.232 = private unnamed_addr constant [27 x i8] c"vkGetSemaphoreCounterValue\00", align 1
@.str.233 = private unnamed_addr constant [17 x i8] c"vkWaitSemaphores\00", align 1
@.str.234 = private unnamed_addr constant [18 x i8] c"vkSignalSemaphore\00", align 1
@.str.235 = private unnamed_addr constant [25 x i8] c"vkGetBufferDeviceAddress\00", align 1
@.str.236 = private unnamed_addr constant [32 x i8] c"vkGetBufferOpaqueCaptureAddress\00", align 1
@.str.237 = private unnamed_addr constant [38 x i8] c"vkGetDeviceMemoryOpaqueCaptureAddress\00", align 1
@.str.238 = private unnamed_addr constant [22 x i8] c"vkDestroySwapchainKHR\00", align 1
@.str.239 = private unnamed_addr constant [24 x i8] c"vkGetSwapchainImagesKHR\00", align 1
@.str.240 = private unnamed_addr constant [22 x i8] c"vkAcquireNextImageKHR\00", align 1
@.str.241 = private unnamed_addr constant [18 x i8] c"vkQueuePresentKHR\00", align 1
@.str.242 = private unnamed_addr constant [39 x i8] c"vkGetDeviceGroupPresentCapabilitiesKHR\00", align 1
@.str.243 = private unnamed_addr constant [23 x i8] c"vkAcquireNextImage2KHR\00", align 1
@.str.244 = private unnamed_addr constant [24 x i8] c"vkCreateVideoSessionKHR\00", align 1
@.str.245 = private unnamed_addr constant [25 x i8] c"vkDestroyVideoSessionKHR\00", align 1
@.str.246 = private unnamed_addr constant [39 x i8] c"vkGetVideoSessionMemoryRequirementsKHR\00", align 1
@.str.247 = private unnamed_addr constant [28 x i8] c"vkBindVideoSessionMemoryKHR\00", align 1
@.str.248 = private unnamed_addr constant [34 x i8] c"vkCreateVideoSessionParametersKHR\00", align 1
@.str.249 = private unnamed_addr constant [34 x i8] c"vkUpdateVideoSessionParametersKHR\00", align 1
@.str.250 = private unnamed_addr constant [35 x i8] c"vkDestroyVideoSessionParametersKHR\00", align 1
@.str.251 = private unnamed_addr constant [25 x i8] c"vkCmdBeginVideoCodingKHR\00", align 1
@.str.252 = private unnamed_addr constant [23 x i8] c"vkCmdEndVideoCodingKHR\00", align 1
@.str.253 = private unnamed_addr constant [27 x i8] c"vkCmdControlVideoCodingKHR\00", align 1
@.str.254 = private unnamed_addr constant [20 x i8] c"vkCmdDecodeVideoKHR\00", align 1
@.str.255 = private unnamed_addr constant [38 x i8] c"vkGetDeviceGroupPeerMemoryFeaturesKHR\00", align 1
@.str.256 = private unnamed_addr constant [22 x i8] c"vkCmdSetDeviceMaskKHR\00", align 1
@.str.257 = private unnamed_addr constant [21 x i8] c"vkCmdDispatchBaseKHR\00", align 1
@.str.258 = private unnamed_addr constant [21 x i8] c"vkTrimCommandPoolKHR\00", align 1
@.str.259 = private unnamed_addr constant [17 x i8] c"vkGetMemoryFdKHR\00", align 1
@.str.260 = private unnamed_addr constant [27 x i8] c"vkGetMemoryFdPropertiesKHR\00", align 1
@.str.261 = private unnamed_addr constant [23 x i8] c"vkImportSemaphoreFdKHR\00", align 1
@.str.262 = private unnamed_addr constant [20 x i8] c"vkGetSemaphoreFdKHR\00", align 1
@.str.263 = private unnamed_addr constant [26 x i8] c"vkCmdPushDescriptorSetKHR\00", align 1
@.str.264 = private unnamed_addr constant [38 x i8] c"vkCmdPushDescriptorSetWithTemplateKHR\00", align 1
@.str.265 = private unnamed_addr constant [36 x i8] c"vkCreateDescriptorUpdateTemplateKHR\00", align 1
@.str.266 = private unnamed_addr constant [37 x i8] c"vkDestroyDescriptorUpdateTemplateKHR\00", align 1
@.str.267 = private unnamed_addr constant [37 x i8] c"vkUpdateDescriptorSetWithTemplateKHR\00", align 1
@.str.268 = private unnamed_addr constant [23 x i8] c"vkCreateRenderPass2KHR\00", align 1
@.str.269 = private unnamed_addr constant [25 x i8] c"vkCmdBeginRenderPass2KHR\00", align 1
@.str.270 = private unnamed_addr constant [21 x i8] c"vkCmdNextSubpass2KHR\00", align 1
@.str.271 = private unnamed_addr constant [23 x i8] c"vkCmdEndRenderPass2KHR\00", align 1
@.str.272 = private unnamed_addr constant [24 x i8] c"vkGetSwapchainStatusKHR\00", align 1
@.str.273 = private unnamed_addr constant [19 x i8] c"vkImportFenceFdKHR\00", align 1
@.str.274 = private unnamed_addr constant [16 x i8] c"vkGetFenceFdKHR\00", align 1
@.str.275 = private unnamed_addr constant [26 x i8] c"vkAcquireProfilingLockKHR\00", align 1
@.str.276 = private unnamed_addr constant [26 x i8] c"vkReleaseProfilingLockKHR\00", align 1
@.str.277 = private unnamed_addr constant [33 x i8] c"vkGetImageMemoryRequirements2KHR\00", align 1
@.str.278 = private unnamed_addr constant [34 x i8] c"vkGetBufferMemoryRequirements2KHR\00", align 1
@.str.279 = private unnamed_addr constant [39 x i8] c"vkGetImageSparseMemoryRequirements2KHR\00", align 1
@.str.280 = private unnamed_addr constant [34 x i8] c"vkCreateSamplerYcbcrConversionKHR\00", align 1
@.str.281 = private unnamed_addr constant [35 x i8] c"vkDestroySamplerYcbcrConversionKHR\00", align 1
@.str.282 = private unnamed_addr constant [23 x i8] c"vkBindBufferMemory2KHR\00", align 1
@.str.283 = private unnamed_addr constant [22 x i8] c"vkBindImageMemory2KHR\00", align 1
@.str.284 = private unnamed_addr constant [35 x i8] c"vkGetDescriptorSetLayoutSupportKHR\00", align 1
@.str.285 = private unnamed_addr constant [26 x i8] c"vkCmdDrawIndirectCountKHR\00", align 1
@.str.286 = private unnamed_addr constant [33 x i8] c"vkCmdDrawIndexedIndirectCountKHR\00", align 1
@.str.287 = private unnamed_addr constant [30 x i8] c"vkGetSemaphoreCounterValueKHR\00", align 1
@.str.288 = private unnamed_addr constant [20 x i8] c"vkWaitSemaphoresKHR\00", align 1
@.str.289 = private unnamed_addr constant [21 x i8] c"vkSignalSemaphoreKHR\00", align 1
@.str.290 = private unnamed_addr constant [31 x i8] c"vkCmdSetFragmentShadingRateKHR\00", align 1
@.str.291 = private unnamed_addr constant [28 x i8] c"vkGetBufferDeviceAddressKHR\00", align 1
@.str.292 = private unnamed_addr constant [35 x i8] c"vkGetBufferOpaqueCaptureAddressKHR\00", align 1
@.str.293 = private unnamed_addr constant [41 x i8] c"vkGetDeviceMemoryOpaqueCaptureAddressKHR\00", align 1
@.str.294 = private unnamed_addr constant [29 x i8] c"vkCreateDeferredOperationKHR\00", align 1
@.str.295 = private unnamed_addr constant [30 x i8] c"vkDestroyDeferredOperationKHR\00", align 1
@.str.296 = private unnamed_addr constant [40 x i8] c"vkGetDeferredOperationMaxConcurrencyKHR\00", align 1
@.str.297 = private unnamed_addr constant [32 x i8] c"vkGetDeferredOperationResultKHR\00", align 1
@.str.298 = private unnamed_addr constant [27 x i8] c"vkDeferredOperationJoinKHR\00", align 1
@.str.299 = private unnamed_addr constant [37 x i8] c"vkGetPipelineExecutablePropertiesKHR\00", align 1
@.str.300 = private unnamed_addr constant [37 x i8] c"vkGetPipelineExecutableStatisticsKHR\00", align 1
@.str.301 = private unnamed_addr constant [50 x i8] c"vkGetPipelineExecutableInternalRepresentationsKHR\00", align 1
@.str.302 = private unnamed_addr constant [20 x i8] c"vkCmdEncodeVideoKHR\00", align 1
@.str.303 = private unnamed_addr constant [18 x i8] c"vkCmdSetEvent2KHR\00", align 1
@.str.304 = private unnamed_addr constant [20 x i8] c"vkCmdResetEvent2KHR\00", align 1
@.str.305 = private unnamed_addr constant [20 x i8] c"vkCmdWaitEvents2KHR\00", align 1
@.str.306 = private unnamed_addr constant [25 x i8] c"vkCmdPipelineBarrier2KHR\00", align 1
@.str.307 = private unnamed_addr constant [24 x i8] c"vkCmdWriteTimestamp2KHR\00", align 1
@.str.308 = private unnamed_addr constant [18 x i8] c"vkQueueSubmit2KHR\00", align 1
@.str.309 = private unnamed_addr constant [27 x i8] c"vkCmdWriteBufferMarker2AMD\00", align 1
@.str.310 = private unnamed_addr constant [28 x i8] c"vkGetQueueCheckpointData2NV\00", align 1
@.str.311 = private unnamed_addr constant [20 x i8] c"vkCmdCopyBuffer2KHR\00", align 1
@.str.312 = private unnamed_addr constant [19 x i8] c"vkCmdCopyImage2KHR\00", align 1
@.str.313 = private unnamed_addr constant [27 x i8] c"vkCmdCopyBufferToImage2KHR\00", align 1
@.str.314 = private unnamed_addr constant [27 x i8] c"vkCmdCopyImageToBuffer2KHR\00", align 1
@.str.315 = private unnamed_addr constant [19 x i8] c"vkCmdBlitImage2KHR\00", align 1
@.str.316 = private unnamed_addr constant [22 x i8] c"vkCmdResolveImage2KHR\00", align 1
@.str.317 = private unnamed_addr constant [25 x i8] c"vkCmdDebugMarkerBeginEXT\00", align 1
@.str.318 = private unnamed_addr constant [23 x i8] c"vkCmdDebugMarkerEndEXT\00", align 1
@.str.319 = private unnamed_addr constant [26 x i8] c"vkCmdDebugMarkerInsertEXT\00", align 1
@.str.320 = private unnamed_addr constant [37 x i8] c"vkCmdBindTransformFeedbackBuffersEXT\00", align 1
@.str.321 = private unnamed_addr constant [31 x i8] c"vkCmdBeginTransformFeedbackEXT\00", align 1
@.str.322 = private unnamed_addr constant [29 x i8] c"vkCmdEndTransformFeedbackEXT\00", align 1
@.str.323 = private unnamed_addr constant [26 x i8] c"vkCmdBeginQueryIndexedEXT\00", align 1
@.str.324 = private unnamed_addr constant [24 x i8] c"vkCmdEndQueryIndexedEXT\00", align 1
@.str.325 = private unnamed_addr constant [30 x i8] c"vkCmdDrawIndirectByteCountEXT\00", align 1
@.str.326 = private unnamed_addr constant [20 x i8] c"vkCreateCuModuleNVX\00", align 1
@.str.327 = private unnamed_addr constant [22 x i8] c"vkCreateCuFunctionNVX\00", align 1
@.str.328 = private unnamed_addr constant [21 x i8] c"vkDestroyCuModuleNVX\00", align 1
@.str.329 = private unnamed_addr constant [23 x i8] c"vkDestroyCuFunctionNVX\00", align 1
@.str.330 = private unnamed_addr constant [23 x i8] c"vkCmdCuLaunchKernelNVX\00", align 1
@.str.331 = private unnamed_addr constant [24 x i8] c"vkGetImageViewHandleNVX\00", align 1
@.str.332 = private unnamed_addr constant [25 x i8] c"vkGetImageViewAddressNVX\00", align 1
@.str.333 = private unnamed_addr constant [26 x i8] c"vkCmdDrawIndirectCountAMD\00", align 1
@.str.334 = private unnamed_addr constant [33 x i8] c"vkCmdDrawIndexedIndirectCountAMD\00", align 1
@.str.335 = private unnamed_addr constant [19 x i8] c"vkGetShaderInfoAMD\00", align 1
@.str.336 = private unnamed_addr constant [34 x i8] c"vkCmdBeginConditionalRenderingEXT\00", align 1
@.str.337 = private unnamed_addr constant [32 x i8] c"vkCmdEndConditionalRenderingEXT\00", align 1
@.str.338 = private unnamed_addr constant [27 x i8] c"vkCmdSetViewportWScalingNV\00", align 1
@.str.339 = private unnamed_addr constant [25 x i8] c"vkDisplayPowerControlEXT\00", align 1
@.str.340 = private unnamed_addr constant [25 x i8] c"vkRegisterDeviceEventEXT\00", align 1
@.str.341 = private unnamed_addr constant [26 x i8] c"vkRegisterDisplayEventEXT\00", align 1
@.str.342 = private unnamed_addr constant [25 x i8] c"vkGetSwapchainCounterEXT\00", align 1
@.str.343 = private unnamed_addr constant [32 x i8] c"vkGetRefreshCycleDurationGOOGLE\00", align 1
@.str.344 = private unnamed_addr constant [34 x i8] c"vkGetPastPresentationTimingGOOGLE\00", align 1
@.str.345 = private unnamed_addr constant [28 x i8] c"vkCmdSetDiscardRectangleEXT\00", align 1
@.str.346 = private unnamed_addr constant [20 x i8] c"vkSetHdrMetadataEXT\00", align 1
@.str.347 = private unnamed_addr constant [27 x i8] c"vkCmdSetSampleLocationsEXT\00", align 1
@.str.348 = private unnamed_addr constant [41 x i8] c"vkGetImageDrmFormatModifierPropertiesEXT\00", align 1
@.str.349 = private unnamed_addr constant [27 x i8] c"vkCreateValidationCacheEXT\00", align 1
@.str.350 = private unnamed_addr constant [28 x i8] c"vkDestroyValidationCacheEXT\00", align 1
@.str.351 = private unnamed_addr constant [27 x i8] c"vkMergeValidationCachesEXT\00", align 1
@.str.352 = private unnamed_addr constant [28 x i8] c"vkGetValidationCacheDataEXT\00", align 1
@.str.353 = private unnamed_addr constant [28 x i8] c"vkCmdBindShadingRateImageNV\00", align 1
@.str.354 = private unnamed_addr constant [37 x i8] c"vkCmdSetViewportShadingRatePaletteNV\00", align 1
@.str.355 = private unnamed_addr constant [28 x i8] c"vkCmdSetCoarseSampleOrderNV\00", align 1
@.str.356 = private unnamed_addr constant [32 x i8] c"vkCreateAccelerationStructureNV\00", align 1
@.str.357 = private unnamed_addr constant [33 x i8] c"vkDestroyAccelerationStructureNV\00", align 1
@.str.358 = private unnamed_addr constant [47 x i8] c"vkGetAccelerationStructureMemoryRequirementsNV\00", align 1
@.str.359 = private unnamed_addr constant [36 x i8] c"vkBindAccelerationStructureMemoryNV\00", align 1
@.str.360 = private unnamed_addr constant [34 x i8] c"vkCmdBuildAccelerationStructureNV\00", align 1
@.str.361 = private unnamed_addr constant [33 x i8] c"vkCmdCopyAccelerationStructureNV\00", align 1
@.str.362 = private unnamed_addr constant [17 x i8] c"vkCmdTraceRaysNV\00", align 1
@.str.363 = private unnamed_addr constant [30 x i8] c"vkCreateRayTracingPipelinesNV\00", align 1
@.str.364 = private unnamed_addr constant [37 x i8] c"vkGetRayTracingShaderGroupHandlesKHR\00", align 1
@.str.365 = private unnamed_addr constant [36 x i8] c"vkGetRayTracingShaderGroupHandlesNV\00", align 1
@.str.366 = private unnamed_addr constant [35 x i8] c"vkGetAccelerationStructureHandleNV\00", align 1
@.str.367 = private unnamed_addr constant [45 x i8] c"vkCmdWriteAccelerationStructuresPropertiesNV\00", align 1
@.str.368 = private unnamed_addr constant [20 x i8] c"vkCompileDeferredNV\00", align 1
@.str.369 = private unnamed_addr constant [36 x i8] c"vkGetMemoryHostPointerPropertiesEXT\00", align 1
@.str.370 = private unnamed_addr constant [26 x i8] c"vkCmdWriteBufferMarkerAMD\00", align 1
@.str.371 = private unnamed_addr constant [29 x i8] c"vkGetCalibratedTimestampsEXT\00", align 1
@.str.372 = private unnamed_addr constant [21 x i8] c"vkCmdDrawMeshTasksNV\00", align 1
@.str.373 = private unnamed_addr constant [29 x i8] c"vkCmdDrawMeshTasksIndirectNV\00", align 1
@.str.374 = private unnamed_addr constant [34 x i8] c"vkCmdDrawMeshTasksIndirectCountNV\00", align 1
@.str.375 = private unnamed_addr constant [27 x i8] c"vkCmdSetExclusiveScissorNV\00", align 1
@.str.376 = private unnamed_addr constant [21 x i8] c"vkCmdSetCheckpointNV\00", align 1
@.str.377 = private unnamed_addr constant [27 x i8] c"vkGetQueueCheckpointDataNV\00", align 1
@.str.378 = private unnamed_addr constant [32 x i8] c"vkInitializePerformanceApiINTEL\00", align 1
@.str.379 = private unnamed_addr constant [34 x i8] c"vkUninitializePerformanceApiINTEL\00", align 1
@.str.380 = private unnamed_addr constant [31 x i8] c"vkCmdSetPerformanceMarkerINTEL\00", align 1
@.str.381 = private unnamed_addr constant [37 x i8] c"vkCmdSetPerformanceStreamMarkerINTEL\00", align 1
@.str.382 = private unnamed_addr constant [33 x i8] c"vkCmdSetPerformanceOverrideINTEL\00", align 1
@.str.383 = private unnamed_addr constant [39 x i8] c"vkAcquirePerformanceConfigurationINTEL\00", align 1
@.str.384 = private unnamed_addr constant [39 x i8] c"vkReleasePerformanceConfigurationINTEL\00", align 1
@.str.385 = private unnamed_addr constant [40 x i8] c"vkQueueSetPerformanceConfigurationINTEL\00", align 1
@.str.386 = private unnamed_addr constant [31 x i8] c"vkGetPerformanceParameterINTEL\00", align 1
@.str.387 = private unnamed_addr constant [21 x i8] c"vkSetLocalDimmingAMD\00", align 1
@.str.388 = private unnamed_addr constant [28 x i8] c"vkGetBufferDeviceAddressEXT\00", align 1
@.str.389 = private unnamed_addr constant [23 x i8] c"vkCmdSetLineStippleEXT\00", align 1
@.str.390 = private unnamed_addr constant [20 x i8] c"vkResetQueryPoolEXT\00", align 1
@.str.391 = private unnamed_addr constant [20 x i8] c"vkCmdSetCullModeEXT\00", align 1
@.str.392 = private unnamed_addr constant [21 x i8] c"vkCmdSetFrontFaceEXT\00", align 1
@.str.393 = private unnamed_addr constant [29 x i8] c"vkCmdSetPrimitiveTopologyEXT\00", align 1
@.str.394 = private unnamed_addr constant [29 x i8] c"vkCmdSetViewportWithCountEXT\00", align 1
@.str.395 = private unnamed_addr constant [28 x i8] c"vkCmdSetScissorWithCountEXT\00", align 1
@.str.396 = private unnamed_addr constant [27 x i8] c"vkCmdBindVertexBuffers2EXT\00", align 1
@.str.397 = private unnamed_addr constant [27 x i8] c"vkCmdSetDepthTestEnableEXT\00", align 1
@.str.398 = private unnamed_addr constant [28 x i8] c"vkCmdSetDepthWriteEnableEXT\00", align 1
@.str.399 = private unnamed_addr constant [26 x i8] c"vkCmdSetDepthCompareOpEXT\00", align 1
@.str.400 = private unnamed_addr constant [33 x i8] c"vkCmdSetDepthBoundsTestEnableEXT\00", align 1
@.str.401 = private unnamed_addr constant [29 x i8] c"vkCmdSetStencilTestEnableEXT\00", align 1
@.str.402 = private unnamed_addr constant [21 x i8] c"vkCmdSetStencilOpEXT\00", align 1
@.str.403 = private unnamed_addr constant [43 x i8] c"vkGetGeneratedCommandsMemoryRequirementsNV\00", align 1
@.str.404 = private unnamed_addr constant [35 x i8] c"vkCmdPreprocessGeneratedCommandsNV\00", align 1
@.str.405 = private unnamed_addr constant [32 x i8] c"vkCmdExecuteGeneratedCommandsNV\00", align 1
@.str.406 = private unnamed_addr constant [31 x i8] c"vkCmdBindPipelineShaderGroupNV\00", align 1
@.str.407 = private unnamed_addr constant [33 x i8] c"vkCreateIndirectCommandsLayoutNV\00", align 1
@.str.408 = private unnamed_addr constant [34 x i8] c"vkDestroyIndirectCommandsLayoutNV\00", align 1
@.str.409 = private unnamed_addr constant [27 x i8] c"vkCreatePrivateDataSlotEXT\00", align 1
@.str.410 = private unnamed_addr constant [28 x i8] c"vkDestroyPrivateDataSlotEXT\00", align 1
@.str.411 = private unnamed_addr constant [20 x i8] c"vkSetPrivateDataEXT\00", align 1
@.str.412 = private unnamed_addr constant [20 x i8] c"vkGetPrivateDataEXT\00", align 1
@.str.413 = private unnamed_addr constant [34 x i8] c"vkCmdSetFragmentShadingRateEnumNV\00", align 1
@.str.414 = private unnamed_addr constant [23 x i8] c"vkCmdSetVertexInputEXT\00", align 1
@.str.415 = private unnamed_addr constant [30 x i8] c"vkCmdSetPatchControlPointsEXT\00", align 1
@.str.416 = private unnamed_addr constant [35 x i8] c"vkCmdSetRasterizerDiscardEnableEXT\00", align 1
@.str.417 = private unnamed_addr constant [27 x i8] c"vkCmdSetDepthBiasEnableEXT\00", align 1
@.str.418 = private unnamed_addr constant [19 x i8] c"vkCmdSetLogicOpEXT\00", align 1
@.str.419 = private unnamed_addr constant [34 x i8] c"vkCmdSetPrimitiveRestartEnableEXT\00", align 1
@.str.420 = private unnamed_addr constant [28 x i8] c"vkCmdSetColorWriteEnableEXT\00", align 1
@.str.421 = private unnamed_addr constant [33 x i8] c"vkCreateAccelerationStructureKHR\00", align 1
@.str.422 = private unnamed_addr constant [34 x i8] c"vkDestroyAccelerationStructureKHR\00", align 1
@.str.423 = private unnamed_addr constant [36 x i8] c"vkCmdBuildAccelerationStructuresKHR\00", align 1
@.str.424 = private unnamed_addr constant [44 x i8] c"vkCmdBuildAccelerationStructuresIndirectKHR\00", align 1
@.str.425 = private unnamed_addr constant [33 x i8] c"vkBuildAccelerationStructuresKHR\00", align 1
@.str.426 = private unnamed_addr constant [31 x i8] c"vkCopyAccelerationStructureKHR\00", align 1
@.str.427 = private unnamed_addr constant [39 x i8] c"vkCopyAccelerationStructureToMemoryKHR\00", align 1
@.str.428 = private unnamed_addr constant [39 x i8] c"vkCopyMemoryToAccelerationStructureKHR\00", align 1
@.str.429 = private unnamed_addr constant [43 x i8] c"vkWriteAccelerationStructuresPropertiesKHR\00", align 1
@.str.430 = private unnamed_addr constant [34 x i8] c"vkCmdCopyAccelerationStructureKHR\00", align 1
@.str.431 = private unnamed_addr constant [42 x i8] c"vkCmdCopyAccelerationStructureToMemoryKHR\00", align 1
@.str.432 = private unnamed_addr constant [42 x i8] c"vkCmdCopyMemoryToAccelerationStructureKHR\00", align 1
@.str.433 = private unnamed_addr constant [43 x i8] c"vkGetAccelerationStructureDeviceAddressKHR\00", align 1
@.str.434 = private unnamed_addr constant [46 x i8] c"vkCmdWriteAccelerationStructuresPropertiesKHR\00", align 1
@.str.435 = private unnamed_addr constant [49 x i8] c"vkGetDeviceAccelerationStructureCompatibilityKHR\00", align 1
@.str.436 = private unnamed_addr constant [40 x i8] c"vkGetAccelerationStructureBuildSizesKHR\00", align 1
@.str.437 = private unnamed_addr constant [18 x i8] c"vkCmdTraceRaysKHR\00", align 1
@.str.438 = private unnamed_addr constant [31 x i8] c"vkCreateRayTracingPipelinesKHR\00", align 1
@.str.439 = private unnamed_addr constant [50 x i8] c"vkGetRayTracingCaptureReplayShaderGroupHandlesKHR\00", align 1
@.str.440 = private unnamed_addr constant [26 x i8] c"vkCmdTraceRaysIndirectKHR\00", align 1
@.str.441 = private unnamed_addr constant [39 x i8] c"vkGetRayTracingShaderGroupStackSizeKHR\00", align 1
@.str.442 = private unnamed_addr constant [39 x i8] c"vkCmdSetRayTracingPipelineStackSizeKHR\00", align 1
@.str.443 = private unnamed_addr constant [33 x i8] c"vkEnumerateDeviceLayerProperties\00", align 1
@.str.444 = private unnamed_addr constant [18 x i8] c"GetDeviceProcAddr\00", align 1
@.str.445 = private unnamed_addr constant [14 x i8] c"DestroyDevice\00", align 1
@.str.446 = private unnamed_addr constant [15 x i8] c"GetDeviceQueue\00", align 1
@.str.447 = private unnamed_addr constant [12 x i8] c"QueueSubmit\00", align 1
@.str.448 = private unnamed_addr constant [14 x i8] c"QueueWaitIdle\00", align 1
@.str.449 = private unnamed_addr constant [15 x i8] c"DeviceWaitIdle\00", align 1
@.str.450 = private unnamed_addr constant [15 x i8] c"AllocateMemory\00", align 1
@.str.451 = private unnamed_addr constant [11 x i8] c"FreeMemory\00", align 1
@.str.452 = private unnamed_addr constant [10 x i8] c"MapMemory\00", align 1
@.str.453 = private unnamed_addr constant [12 x i8] c"UnmapMemory\00", align 1
@.str.454 = private unnamed_addr constant [24 x i8] c"FlushMappedMemoryRanges\00", align 1
@.str.455 = private unnamed_addr constant [29 x i8] c"InvalidateMappedMemoryRanges\00", align 1
@.str.456 = private unnamed_addr constant [26 x i8] c"GetDeviceMemoryCommitment\00", align 1
@.str.457 = private unnamed_addr constant [17 x i8] c"BindBufferMemory\00", align 1
@.str.458 = private unnamed_addr constant [16 x i8] c"BindImageMemory\00", align 1
@.str.459 = private unnamed_addr constant [28 x i8] c"GetBufferMemoryRequirements\00", align 1
@.str.460 = private unnamed_addr constant [27 x i8] c"GetImageMemoryRequirements\00", align 1
@.str.461 = private unnamed_addr constant [33 x i8] c"GetImageSparseMemoryRequirements\00", align 1
@.str.462 = private unnamed_addr constant [16 x i8] c"QueueBindSparse\00", align 1
@.str.463 = private unnamed_addr constant [12 x i8] c"CreateFence\00", align 1
@.str.464 = private unnamed_addr constant [13 x i8] c"DestroyFence\00", align 1
@.str.465 = private unnamed_addr constant [12 x i8] c"ResetFences\00", align 1
@.str.466 = private unnamed_addr constant [15 x i8] c"GetFenceStatus\00", align 1
@.str.467 = private unnamed_addr constant [14 x i8] c"WaitForFences\00", align 1
@.str.468 = private unnamed_addr constant [16 x i8] c"CreateSemaphore\00", align 1
@.str.469 = private unnamed_addr constant [17 x i8] c"DestroySemaphore\00", align 1
@.str.470 = private unnamed_addr constant [12 x i8] c"CreateEvent\00", align 1
@.str.471 = private unnamed_addr constant [13 x i8] c"DestroyEvent\00", align 1
@.str.472 = private unnamed_addr constant [15 x i8] c"GetEventStatus\00", align 1
@.str.473 = private unnamed_addr constant [9 x i8] c"SetEvent\00", align 1
@.str.474 = private unnamed_addr constant [11 x i8] c"ResetEvent\00", align 1
@.str.475 = private unnamed_addr constant [16 x i8] c"CreateQueryPool\00", align 1
@.str.476 = private unnamed_addr constant [17 x i8] c"DestroyQueryPool\00", align 1
@.str.477 = private unnamed_addr constant [20 x i8] c"GetQueryPoolResults\00", align 1
@.str.478 = private unnamed_addr constant [13 x i8] c"CreateBuffer\00", align 1
@.str.479 = private unnamed_addr constant [14 x i8] c"DestroyBuffer\00", align 1
@.str.480 = private unnamed_addr constant [17 x i8] c"CreateBufferView\00", align 1
@.str.481 = private unnamed_addr constant [18 x i8] c"DestroyBufferView\00", align 1
@.str.482 = private unnamed_addr constant [12 x i8] c"CreateImage\00", align 1
@.str.483 = private unnamed_addr constant [13 x i8] c"DestroyImage\00", align 1
@.str.484 = private unnamed_addr constant [26 x i8] c"GetImageSubresourceLayout\00", align 1
@.str.485 = private unnamed_addr constant [16 x i8] c"CreateImageView\00", align 1
@.str.486 = private unnamed_addr constant [17 x i8] c"DestroyImageView\00", align 1
@.str.487 = private unnamed_addr constant [19 x i8] c"CreateShaderModule\00", align 1
@.str.488 = private unnamed_addr constant [20 x i8] c"DestroyShaderModule\00", align 1
@.str.489 = private unnamed_addr constant [20 x i8] c"CreatePipelineCache\00", align 1
@.str.490 = private unnamed_addr constant [21 x i8] c"DestroyPipelineCache\00", align 1
@.str.491 = private unnamed_addr constant [21 x i8] c"GetPipelineCacheData\00", align 1
@.str.492 = private unnamed_addr constant [20 x i8] c"MergePipelineCaches\00", align 1
@.str.493 = private unnamed_addr constant [24 x i8] c"CreateGraphicsPipelines\00", align 1
@.str.494 = private unnamed_addr constant [23 x i8] c"CreateComputePipelines\00", align 1
@.str.495 = private unnamed_addr constant [16 x i8] c"DestroyPipeline\00", align 1
@.str.496 = private unnamed_addr constant [21 x i8] c"CreatePipelineLayout\00", align 1
@.str.497 = private unnamed_addr constant [22 x i8] c"DestroyPipelineLayout\00", align 1
@.str.498 = private unnamed_addr constant [14 x i8] c"CreateSampler\00", align 1
@.str.499 = private unnamed_addr constant [15 x i8] c"DestroySampler\00", align 1
@.str.500 = private unnamed_addr constant [26 x i8] c"CreateDescriptorSetLayout\00", align 1
@.str.501 = private unnamed_addr constant [27 x i8] c"DestroyDescriptorSetLayout\00", align 1
@.str.502 = private unnamed_addr constant [21 x i8] c"CreateDescriptorPool\00", align 1
@.str.503 = private unnamed_addr constant [22 x i8] c"DestroyDescriptorPool\00", align 1
@.str.504 = private unnamed_addr constant [20 x i8] c"ResetDescriptorPool\00", align 1
@.str.505 = private unnamed_addr constant [23 x i8] c"AllocateDescriptorSets\00", align 1
@.str.506 = private unnamed_addr constant [19 x i8] c"FreeDescriptorSets\00", align 1
@.str.507 = private unnamed_addr constant [21 x i8] c"UpdateDescriptorSets\00", align 1
@.str.508 = private unnamed_addr constant [18 x i8] c"CreateFramebuffer\00", align 1
@.str.509 = private unnamed_addr constant [19 x i8] c"DestroyFramebuffer\00", align 1
@.str.510 = private unnamed_addr constant [17 x i8] c"CreateRenderPass\00", align 1
@.str.511 = private unnamed_addr constant [18 x i8] c"DestroyRenderPass\00", align 1
@.str.512 = private unnamed_addr constant [25 x i8] c"GetRenderAreaGranularity\00", align 1
@.str.513 = private unnamed_addr constant [18 x i8] c"CreateCommandPool\00", align 1
@.str.514 = private unnamed_addr constant [19 x i8] c"DestroyCommandPool\00", align 1
@.str.515 = private unnamed_addr constant [17 x i8] c"ResetCommandPool\00", align 1
@.str.516 = private unnamed_addr constant [23 x i8] c"AllocateCommandBuffers\00", align 1
@.str.517 = private unnamed_addr constant [19 x i8] c"FreeCommandBuffers\00", align 1
@.str.518 = private unnamed_addr constant [19 x i8] c"BeginCommandBuffer\00", align 1
@.str.519 = private unnamed_addr constant [17 x i8] c"EndCommandBuffer\00", align 1
@.str.520 = private unnamed_addr constant [19 x i8] c"ResetCommandBuffer\00", align 1
@.str.521 = private unnamed_addr constant [16 x i8] c"CmdBindPipeline\00", align 1
@.str.522 = private unnamed_addr constant [15 x i8] c"CmdSetViewport\00", align 1
@.str.523 = private unnamed_addr constant [14 x i8] c"CmdSetScissor\00", align 1
@.str.524 = private unnamed_addr constant [16 x i8] c"CmdSetLineWidth\00", align 1
@.str.525 = private unnamed_addr constant [16 x i8] c"CmdSetDepthBias\00", align 1
@.str.526 = private unnamed_addr constant [21 x i8] c"CmdSetBlendConstants\00", align 1
@.str.527 = private unnamed_addr constant [18 x i8] c"CmdSetDepthBounds\00", align 1
@.str.528 = private unnamed_addr constant [25 x i8] c"CmdSetStencilCompareMask\00", align 1
@.str.529 = private unnamed_addr constant [23 x i8] c"CmdSetStencilWriteMask\00", align 1
@.str.530 = private unnamed_addr constant [23 x i8] c"CmdSetStencilReference\00", align 1
@.str.531 = private unnamed_addr constant [22 x i8] c"CmdBindDescriptorSets\00", align 1
@.str.532 = private unnamed_addr constant [19 x i8] c"CmdBindIndexBuffer\00", align 1
@.str.533 = private unnamed_addr constant [21 x i8] c"CmdBindVertexBuffers\00", align 1
@.str.534 = private unnamed_addr constant [8 x i8] c"CmdDraw\00", align 1
@.str.535 = private unnamed_addr constant [15 x i8] c"CmdDrawIndexed\00", align 1
@.str.536 = private unnamed_addr constant [16 x i8] c"CmdDrawIndirect\00", align 1
@.str.537 = private unnamed_addr constant [23 x i8] c"CmdDrawIndexedIndirect\00", align 1
@.str.538 = private unnamed_addr constant [12 x i8] c"CmdDispatch\00", align 1
@.str.539 = private unnamed_addr constant [20 x i8] c"CmdDispatchIndirect\00", align 1
@.str.540 = private unnamed_addr constant [14 x i8] c"CmdCopyBuffer\00", align 1
@.str.541 = private unnamed_addr constant [13 x i8] c"CmdCopyImage\00", align 1
@.str.542 = private unnamed_addr constant [13 x i8] c"CmdBlitImage\00", align 1
@.str.543 = private unnamed_addr constant [21 x i8] c"CmdCopyBufferToImage\00", align 1
@.str.544 = private unnamed_addr constant [21 x i8] c"CmdCopyImageToBuffer\00", align 1
@.str.545 = private unnamed_addr constant [16 x i8] c"CmdUpdateBuffer\00", align 1
@.str.546 = private unnamed_addr constant [14 x i8] c"CmdFillBuffer\00", align 1
@.str.547 = private unnamed_addr constant [19 x i8] c"CmdClearColorImage\00", align 1
@.str.548 = private unnamed_addr constant [26 x i8] c"CmdClearDepthStencilImage\00", align 1
@.str.549 = private unnamed_addr constant [20 x i8] c"CmdClearAttachments\00", align 1
@.str.550 = private unnamed_addr constant [16 x i8] c"CmdResolveImage\00", align 1
@.str.551 = private unnamed_addr constant [12 x i8] c"CmdSetEvent\00", align 1
@.str.552 = private unnamed_addr constant [14 x i8] c"CmdResetEvent\00", align 1
@.str.553 = private unnamed_addr constant [14 x i8] c"CmdWaitEvents\00", align 1
@.str.554 = private unnamed_addr constant [19 x i8] c"CmdPipelineBarrier\00", align 1
@.str.555 = private unnamed_addr constant [14 x i8] c"CmdBeginQuery\00", align 1
@.str.556 = private unnamed_addr constant [12 x i8] c"CmdEndQuery\00", align 1
@.str.557 = private unnamed_addr constant [18 x i8] c"CmdResetQueryPool\00", align 1
@.str.558 = private unnamed_addr constant [18 x i8] c"CmdWriteTimestamp\00", align 1
@.str.559 = private unnamed_addr constant [24 x i8] c"CmdCopyQueryPoolResults\00", align 1
@.str.560 = private unnamed_addr constant [17 x i8] c"CmdPushConstants\00", align 1
@.str.561 = private unnamed_addr constant [19 x i8] c"CmdBeginRenderPass\00", align 1
@.str.562 = private unnamed_addr constant [15 x i8] c"CmdNextSubpass\00", align 1
@.str.563 = private unnamed_addr constant [17 x i8] c"CmdEndRenderPass\00", align 1
@.str.564 = private unnamed_addr constant [19 x i8] c"CmdExecuteCommands\00", align 1
@.str.565 = private unnamed_addr constant [18 x i8] c"BindBufferMemory2\00", align 1
@.str.566 = private unnamed_addr constant [17 x i8] c"BindImageMemory2\00", align 1
@.str.567 = private unnamed_addr constant [33 x i8] c"GetDeviceGroupPeerMemoryFeatures\00", align 1
@.str.568 = private unnamed_addr constant [17 x i8] c"CmdSetDeviceMask\00", align 1
@.str.569 = private unnamed_addr constant [16 x i8] c"CmdDispatchBase\00", align 1
@.str.570 = private unnamed_addr constant [28 x i8] c"GetImageMemoryRequirements2\00", align 1
@.str.571 = private unnamed_addr constant [29 x i8] c"GetBufferMemoryRequirements2\00", align 1
@.str.572 = private unnamed_addr constant [34 x i8] c"GetImageSparseMemoryRequirements2\00", align 1
@.str.573 = private unnamed_addr constant [16 x i8] c"TrimCommandPool\00", align 1
@.str.574 = private unnamed_addr constant [16 x i8] c"GetDeviceQueue2\00", align 1
@.str.575 = private unnamed_addr constant [29 x i8] c"CreateSamplerYcbcrConversion\00", align 1
@.str.576 = private unnamed_addr constant [30 x i8] c"DestroySamplerYcbcrConversion\00", align 1
@.str.577 = private unnamed_addr constant [31 x i8] c"CreateDescriptorUpdateTemplate\00", align 1
@.str.578 = private unnamed_addr constant [32 x i8] c"DestroyDescriptorUpdateTemplate\00", align 1
@.str.579 = private unnamed_addr constant [32 x i8] c"UpdateDescriptorSetWithTemplate\00", align 1
@.str.580 = private unnamed_addr constant [30 x i8] c"GetDescriptorSetLayoutSupport\00", align 1
@.str.581 = private unnamed_addr constant [21 x i8] c"CmdDrawIndirectCount\00", align 1
@.str.582 = private unnamed_addr constant [28 x i8] c"CmdDrawIndexedIndirectCount\00", align 1
@.str.583 = private unnamed_addr constant [18 x i8] c"CreateRenderPass2\00", align 1
@.str.584 = private unnamed_addr constant [20 x i8] c"CmdBeginRenderPass2\00", align 1
@.str.585 = private unnamed_addr constant [16 x i8] c"CmdNextSubpass2\00", align 1
@.str.586 = private unnamed_addr constant [18 x i8] c"CmdEndRenderPass2\00", align 1
@.str.587 = private unnamed_addr constant [15 x i8] c"ResetQueryPool\00", align 1
@.str.588 = private unnamed_addr constant [25 x i8] c"GetSemaphoreCounterValue\00", align 1
@.str.589 = private unnamed_addr constant [15 x i8] c"WaitSemaphores\00", align 1
@.str.590 = private unnamed_addr constant [16 x i8] c"SignalSemaphore\00", align 1
@.str.591 = private unnamed_addr constant [23 x i8] c"GetBufferDeviceAddress\00", align 1
@.str.592 = private unnamed_addr constant [30 x i8] c"GetBufferOpaqueCaptureAddress\00", align 1
@.str.593 = private unnamed_addr constant [36 x i8] c"GetDeviceMemoryOpaqueCaptureAddress\00", align 1
@.str.594 = private unnamed_addr constant [19 x i8] c"CreateSwapchainKHR\00", align 1
@.str.595 = private unnamed_addr constant [20 x i8] c"DestroySwapchainKHR\00", align 1
@.str.596 = private unnamed_addr constant [22 x i8] c"GetSwapchainImagesKHR\00", align 1
@.str.597 = private unnamed_addr constant [20 x i8] c"AcquireNextImageKHR\00", align 1
@.str.598 = private unnamed_addr constant [16 x i8] c"QueuePresentKHR\00", align 1
@.str.599 = private unnamed_addr constant [37 x i8] c"GetDeviceGroupPresentCapabilitiesKHR\00", align 1
@.str.600 = private unnamed_addr constant [37 x i8] c"GetDeviceGroupSurfacePresentModesKHR\00", align 1
@.str.601 = private unnamed_addr constant [21 x i8] c"AcquireNextImage2KHR\00", align 1
@.str.602 = private unnamed_addr constant [26 x i8] c"CreateSharedSwapchainsKHR\00", align 1
@.str.603 = private unnamed_addr constant [22 x i8] c"CreateVideoSessionKHR\00", align 1
@.str.604 = private unnamed_addr constant [23 x i8] c"DestroyVideoSessionKHR\00", align 1
@.str.605 = private unnamed_addr constant [37 x i8] c"GetVideoSessionMemoryRequirementsKHR\00", align 1
@.str.606 = private unnamed_addr constant [26 x i8] c"BindVideoSessionMemoryKHR\00", align 1
@.str.607 = private unnamed_addr constant [32 x i8] c"CreateVideoSessionParametersKHR\00", align 1
@.str.608 = private unnamed_addr constant [32 x i8] c"UpdateVideoSessionParametersKHR\00", align 1
@.str.609 = private unnamed_addr constant [33 x i8] c"DestroyVideoSessionParametersKHR\00", align 1
@.str.610 = private unnamed_addr constant [23 x i8] c"CmdBeginVideoCodingKHR\00", align 1
@.str.611 = private unnamed_addr constant [21 x i8] c"CmdEndVideoCodingKHR\00", align 1
@.str.612 = private unnamed_addr constant [25 x i8] c"CmdControlVideoCodingKHR\00", align 1
@.str.613 = private unnamed_addr constant [18 x i8] c"CmdDecodeVideoKHR\00", align 1
@.str.614 = private unnamed_addr constant [36 x i8] c"GetDeviceGroupPeerMemoryFeaturesKHR\00", align 1
@.str.615 = private unnamed_addr constant [20 x i8] c"CmdSetDeviceMaskKHR\00", align 1
@.str.616 = private unnamed_addr constant [19 x i8] c"CmdDispatchBaseKHR\00", align 1
@.str.617 = private unnamed_addr constant [19 x i8] c"TrimCommandPoolKHR\00", align 1
@.str.618 = private unnamed_addr constant [15 x i8] c"GetMemoryFdKHR\00", align 1
@.str.619 = private unnamed_addr constant [25 x i8] c"GetMemoryFdPropertiesKHR\00", align 1
@.str.620 = private unnamed_addr constant [21 x i8] c"ImportSemaphoreFdKHR\00", align 1
@.str.621 = private unnamed_addr constant [18 x i8] c"GetSemaphoreFdKHR\00", align 1
@.str.622 = private unnamed_addr constant [24 x i8] c"CmdPushDescriptorSetKHR\00", align 1
@.str.623 = private unnamed_addr constant [36 x i8] c"CmdPushDescriptorSetWithTemplateKHR\00", align 1
@.str.624 = private unnamed_addr constant [34 x i8] c"CreateDescriptorUpdateTemplateKHR\00", align 1
@.str.625 = private unnamed_addr constant [35 x i8] c"DestroyDescriptorUpdateTemplateKHR\00", align 1
@.str.626 = private unnamed_addr constant [35 x i8] c"UpdateDescriptorSetWithTemplateKHR\00", align 1
@.str.627 = private unnamed_addr constant [21 x i8] c"CreateRenderPass2KHR\00", align 1
@.str.628 = private unnamed_addr constant [23 x i8] c"CmdBeginRenderPass2KHR\00", align 1
@.str.629 = private unnamed_addr constant [19 x i8] c"CmdNextSubpass2KHR\00", align 1
@.str.630 = private unnamed_addr constant [21 x i8] c"CmdEndRenderPass2KHR\00", align 1
@.str.631 = private unnamed_addr constant [22 x i8] c"GetSwapchainStatusKHR\00", align 1
@.str.632 = private unnamed_addr constant [17 x i8] c"ImportFenceFdKHR\00", align 1
@.str.633 = private unnamed_addr constant [14 x i8] c"GetFenceFdKHR\00", align 1
@.str.634 = private unnamed_addr constant [24 x i8] c"AcquireProfilingLockKHR\00", align 1
@.str.635 = private unnamed_addr constant [24 x i8] c"ReleaseProfilingLockKHR\00", align 1
@.str.636 = private unnamed_addr constant [31 x i8] c"GetImageMemoryRequirements2KHR\00", align 1
@.str.637 = private unnamed_addr constant [32 x i8] c"GetBufferMemoryRequirements2KHR\00", align 1
@.str.638 = private unnamed_addr constant [37 x i8] c"GetImageSparseMemoryRequirements2KHR\00", align 1
@.str.639 = private unnamed_addr constant [32 x i8] c"CreateSamplerYcbcrConversionKHR\00", align 1
@.str.640 = private unnamed_addr constant [33 x i8] c"DestroySamplerYcbcrConversionKHR\00", align 1
@.str.641 = private unnamed_addr constant [21 x i8] c"BindBufferMemory2KHR\00", align 1
@.str.642 = private unnamed_addr constant [20 x i8] c"BindImageMemory2KHR\00", align 1
@.str.643 = private unnamed_addr constant [33 x i8] c"GetDescriptorSetLayoutSupportKHR\00", align 1
@.str.644 = private unnamed_addr constant [24 x i8] c"CmdDrawIndirectCountKHR\00", align 1
@.str.645 = private unnamed_addr constant [31 x i8] c"CmdDrawIndexedIndirectCountKHR\00", align 1
@.str.646 = private unnamed_addr constant [28 x i8] c"GetSemaphoreCounterValueKHR\00", align 1
@.str.647 = private unnamed_addr constant [18 x i8] c"WaitSemaphoresKHR\00", align 1
@.str.648 = private unnamed_addr constant [19 x i8] c"SignalSemaphoreKHR\00", align 1
@.str.649 = private unnamed_addr constant [29 x i8] c"CmdSetFragmentShadingRateKHR\00", align 1
@.str.650 = private unnamed_addr constant [26 x i8] c"GetBufferDeviceAddressKHR\00", align 1
@.str.651 = private unnamed_addr constant [33 x i8] c"GetBufferOpaqueCaptureAddressKHR\00", align 1
@.str.652 = private unnamed_addr constant [39 x i8] c"GetDeviceMemoryOpaqueCaptureAddressKHR\00", align 1
@.str.653 = private unnamed_addr constant [27 x i8] c"CreateDeferredOperationKHR\00", align 1
@.str.654 = private unnamed_addr constant [28 x i8] c"DestroyDeferredOperationKHR\00", align 1
@.str.655 = private unnamed_addr constant [38 x i8] c"GetDeferredOperationMaxConcurrencyKHR\00", align 1
@.str.656 = private unnamed_addr constant [30 x i8] c"GetDeferredOperationResultKHR\00", align 1
@.str.657 = private unnamed_addr constant [25 x i8] c"DeferredOperationJoinKHR\00", align 1
@.str.658 = private unnamed_addr constant [35 x i8] c"GetPipelineExecutablePropertiesKHR\00", align 1
@.str.659 = private unnamed_addr constant [35 x i8] c"GetPipelineExecutableStatisticsKHR\00", align 1
@.str.660 = private unnamed_addr constant [48 x i8] c"GetPipelineExecutableInternalRepresentationsKHR\00", align 1
@.str.661 = private unnamed_addr constant [18 x i8] c"CmdEncodeVideoKHR\00", align 1
@.str.662 = private unnamed_addr constant [16 x i8] c"CmdSetEvent2KHR\00", align 1
@.str.663 = private unnamed_addr constant [18 x i8] c"CmdResetEvent2KHR\00", align 1
@.str.664 = private unnamed_addr constant [18 x i8] c"CmdWaitEvents2KHR\00", align 1
@.str.665 = private unnamed_addr constant [23 x i8] c"CmdPipelineBarrier2KHR\00", align 1
@.str.666 = private unnamed_addr constant [22 x i8] c"CmdWriteTimestamp2KHR\00", align 1
@.str.667 = private unnamed_addr constant [16 x i8] c"QueueSubmit2KHR\00", align 1
@.str.668 = private unnamed_addr constant [25 x i8] c"CmdWriteBufferMarker2AMD\00", align 1
@.str.669 = private unnamed_addr constant [26 x i8] c"GetQueueCheckpointData2NV\00", align 1
@.str.670 = private unnamed_addr constant [18 x i8] c"CmdCopyBuffer2KHR\00", align 1
@.str.671 = private unnamed_addr constant [17 x i8] c"CmdCopyImage2KHR\00", align 1
@.str.672 = private unnamed_addr constant [25 x i8] c"CmdCopyBufferToImage2KHR\00", align 1
@.str.673 = private unnamed_addr constant [25 x i8] c"CmdCopyImageToBuffer2KHR\00", align 1
@.str.674 = private unnamed_addr constant [17 x i8] c"CmdBlitImage2KHR\00", align 1
@.str.675 = private unnamed_addr constant [20 x i8] c"CmdResolveImage2KHR\00", align 1
@.str.676 = private unnamed_addr constant [27 x i8] c"DebugMarkerSetObjectTagEXT\00", align 1
@.str.677 = private unnamed_addr constant [28 x i8] c"DebugMarkerSetObjectNameEXT\00", align 1
@.str.678 = private unnamed_addr constant [23 x i8] c"CmdDebugMarkerBeginEXT\00", align 1
@.str.679 = private unnamed_addr constant [21 x i8] c"CmdDebugMarkerEndEXT\00", align 1
@.str.680 = private unnamed_addr constant [24 x i8] c"CmdDebugMarkerInsertEXT\00", align 1
@.str.681 = private unnamed_addr constant [35 x i8] c"CmdBindTransformFeedbackBuffersEXT\00", align 1
@.str.682 = private unnamed_addr constant [29 x i8] c"CmdBeginTransformFeedbackEXT\00", align 1
@.str.683 = private unnamed_addr constant [27 x i8] c"CmdEndTransformFeedbackEXT\00", align 1
@.str.684 = private unnamed_addr constant [24 x i8] c"CmdBeginQueryIndexedEXT\00", align 1
@.str.685 = private unnamed_addr constant [22 x i8] c"CmdEndQueryIndexedEXT\00", align 1
@.str.686 = private unnamed_addr constant [28 x i8] c"CmdDrawIndirectByteCountEXT\00", align 1
@.str.687 = private unnamed_addr constant [18 x i8] c"CreateCuModuleNVX\00", align 1
@.str.688 = private unnamed_addr constant [20 x i8] c"CreateCuFunctionNVX\00", align 1
@.str.689 = private unnamed_addr constant [19 x i8] c"DestroyCuModuleNVX\00", align 1
@.str.690 = private unnamed_addr constant [21 x i8] c"DestroyCuFunctionNVX\00", align 1
@.str.691 = private unnamed_addr constant [21 x i8] c"CmdCuLaunchKernelNVX\00", align 1
@.str.692 = private unnamed_addr constant [22 x i8] c"GetImageViewHandleNVX\00", align 1
@.str.693 = private unnamed_addr constant [23 x i8] c"GetImageViewAddressNVX\00", align 1
@.str.694 = private unnamed_addr constant [24 x i8] c"CmdDrawIndirectCountAMD\00", align 1
@.str.695 = private unnamed_addr constant [31 x i8] c"CmdDrawIndexedIndirectCountAMD\00", align 1
@.str.696 = private unnamed_addr constant [17 x i8] c"GetShaderInfoAMD\00", align 1
@.str.697 = private unnamed_addr constant [32 x i8] c"CmdBeginConditionalRenderingEXT\00", align 1
@.str.698 = private unnamed_addr constant [30 x i8] c"CmdEndConditionalRenderingEXT\00", align 1
@.str.699 = private unnamed_addr constant [25 x i8] c"CmdSetViewportWScalingNV\00", align 1
@.str.700 = private unnamed_addr constant [23 x i8] c"DisplayPowerControlEXT\00", align 1
@.str.701 = private unnamed_addr constant [23 x i8] c"RegisterDeviceEventEXT\00", align 1
@.str.702 = private unnamed_addr constant [24 x i8] c"RegisterDisplayEventEXT\00", align 1
@.str.703 = private unnamed_addr constant [23 x i8] c"GetSwapchainCounterEXT\00", align 1
@.str.704 = private unnamed_addr constant [30 x i8] c"GetRefreshCycleDurationGOOGLE\00", align 1
@.str.705 = private unnamed_addr constant [32 x i8] c"GetPastPresentationTimingGOOGLE\00", align 1
@.str.706 = private unnamed_addr constant [26 x i8] c"CmdSetDiscardRectangleEXT\00", align 1
@.str.707 = private unnamed_addr constant [18 x i8] c"SetHdrMetadataEXT\00", align 1
@.str.708 = private unnamed_addr constant [27 x i8] c"SetDebugUtilsObjectNameEXT\00", align 1
@.str.709 = private unnamed_addr constant [26 x i8] c"SetDebugUtilsObjectTagEXT\00", align 1
@.str.710 = private unnamed_addr constant [29 x i8] c"QueueBeginDebugUtilsLabelEXT\00", align 1
@.str.711 = private unnamed_addr constant [27 x i8] c"QueueEndDebugUtilsLabelEXT\00", align 1
@.str.712 = private unnamed_addr constant [30 x i8] c"QueueInsertDebugUtilsLabelEXT\00", align 1
@.str.713 = private unnamed_addr constant [27 x i8] c"CmdBeginDebugUtilsLabelEXT\00", align 1
@.str.714 = private unnamed_addr constant [25 x i8] c"CmdEndDebugUtilsLabelEXT\00", align 1
@.str.715 = private unnamed_addr constant [28 x i8] c"CmdInsertDebugUtilsLabelEXT\00", align 1
@.str.716 = private unnamed_addr constant [25 x i8] c"CmdSetSampleLocationsEXT\00", align 1
@.str.717 = private unnamed_addr constant [39 x i8] c"GetImageDrmFormatModifierPropertiesEXT\00", align 1
@.str.718 = private unnamed_addr constant [25 x i8] c"CreateValidationCacheEXT\00", align 1
@.str.719 = private unnamed_addr constant [26 x i8] c"DestroyValidationCacheEXT\00", align 1
@.str.720 = private unnamed_addr constant [25 x i8] c"MergeValidationCachesEXT\00", align 1
@.str.721 = private unnamed_addr constant [26 x i8] c"GetValidationCacheDataEXT\00", align 1
@.str.722 = private unnamed_addr constant [26 x i8] c"CmdBindShadingRateImageNV\00", align 1
@.str.723 = private unnamed_addr constant [35 x i8] c"CmdSetViewportShadingRatePaletteNV\00", align 1
@.str.724 = private unnamed_addr constant [26 x i8] c"CmdSetCoarseSampleOrderNV\00", align 1
@.str.725 = private unnamed_addr constant [30 x i8] c"CreateAccelerationStructureNV\00", align 1
@.str.726 = private unnamed_addr constant [31 x i8] c"DestroyAccelerationStructureNV\00", align 1
@.str.727 = private unnamed_addr constant [45 x i8] c"GetAccelerationStructureMemoryRequirementsNV\00", align 1
@.str.728 = private unnamed_addr constant [34 x i8] c"BindAccelerationStructureMemoryNV\00", align 1
@.str.729 = private unnamed_addr constant [32 x i8] c"CmdBuildAccelerationStructureNV\00", align 1
@.str.730 = private unnamed_addr constant [31 x i8] c"CmdCopyAccelerationStructureNV\00", align 1
@.str.731 = private unnamed_addr constant [15 x i8] c"CmdTraceRaysNV\00", align 1
@.str.732 = private unnamed_addr constant [28 x i8] c"CreateRayTracingPipelinesNV\00", align 1
@.str.733 = private unnamed_addr constant [35 x i8] c"GetRayTracingShaderGroupHandlesKHR\00", align 1
@.str.734 = private unnamed_addr constant [34 x i8] c"GetRayTracingShaderGroupHandlesNV\00", align 1
@.str.735 = private unnamed_addr constant [33 x i8] c"GetAccelerationStructureHandleNV\00", align 1
@.str.736 = private unnamed_addr constant [43 x i8] c"CmdWriteAccelerationStructuresPropertiesNV\00", align 1
@.str.737 = private unnamed_addr constant [18 x i8] c"CompileDeferredNV\00", align 1
@.str.738 = private unnamed_addr constant [34 x i8] c"GetMemoryHostPointerPropertiesEXT\00", align 1
@.str.739 = private unnamed_addr constant [24 x i8] c"CmdWriteBufferMarkerAMD\00", align 1
@.str.740 = private unnamed_addr constant [27 x i8] c"GetCalibratedTimestampsEXT\00", align 1
@.str.741 = private unnamed_addr constant [19 x i8] c"CmdDrawMeshTasksNV\00", align 1
@.str.742 = private unnamed_addr constant [27 x i8] c"CmdDrawMeshTasksIndirectNV\00", align 1
@.str.743 = private unnamed_addr constant [32 x i8] c"CmdDrawMeshTasksIndirectCountNV\00", align 1
@.str.744 = private unnamed_addr constant [25 x i8] c"CmdSetExclusiveScissorNV\00", align 1
@.str.745 = private unnamed_addr constant [19 x i8] c"CmdSetCheckpointNV\00", align 1
@.str.746 = private unnamed_addr constant [25 x i8] c"GetQueueCheckpointDataNV\00", align 1
@.str.747 = private unnamed_addr constant [30 x i8] c"InitializePerformanceApiINTEL\00", align 1
@.str.748 = private unnamed_addr constant [32 x i8] c"UninitializePerformanceApiINTEL\00", align 1
@.str.749 = private unnamed_addr constant [29 x i8] c"CmdSetPerformanceMarkerINTEL\00", align 1
@.str.750 = private unnamed_addr constant [35 x i8] c"CmdSetPerformanceStreamMarkerINTEL\00", align 1
@.str.751 = private unnamed_addr constant [31 x i8] c"CmdSetPerformanceOverrideINTEL\00", align 1
@.str.752 = private unnamed_addr constant [37 x i8] c"AcquirePerformanceConfigurationINTEL\00", align 1
@.str.753 = private unnamed_addr constant [37 x i8] c"ReleasePerformanceConfigurationINTEL\00", align 1
@.str.754 = private unnamed_addr constant [38 x i8] c"QueueSetPerformanceConfigurationINTEL\00", align 1
@.str.755 = private unnamed_addr constant [29 x i8] c"GetPerformanceParameterINTEL\00", align 1
@.str.756 = private unnamed_addr constant [19 x i8] c"SetLocalDimmingAMD\00", align 1
@.str.757 = private unnamed_addr constant [26 x i8] c"GetBufferDeviceAddressEXT\00", align 1
@.str.758 = private unnamed_addr constant [21 x i8] c"CmdSetLineStippleEXT\00", align 1
@.str.759 = private unnamed_addr constant [18 x i8] c"ResetQueryPoolEXT\00", align 1
@.str.760 = private unnamed_addr constant [18 x i8] c"CmdSetCullModeEXT\00", align 1
@.str.761 = private unnamed_addr constant [19 x i8] c"CmdSetFrontFaceEXT\00", align 1
@.str.762 = private unnamed_addr constant [27 x i8] c"CmdSetPrimitiveTopologyEXT\00", align 1
@.str.763 = private unnamed_addr constant [27 x i8] c"CmdSetViewportWithCountEXT\00", align 1
@.str.764 = private unnamed_addr constant [26 x i8] c"CmdSetScissorWithCountEXT\00", align 1
@.str.765 = private unnamed_addr constant [25 x i8] c"CmdBindVertexBuffers2EXT\00", align 1
@.str.766 = private unnamed_addr constant [25 x i8] c"CmdSetDepthTestEnableEXT\00", align 1
@.str.767 = private unnamed_addr constant [26 x i8] c"CmdSetDepthWriteEnableEXT\00", align 1
@.str.768 = private unnamed_addr constant [24 x i8] c"CmdSetDepthCompareOpEXT\00", align 1
@.str.769 = private unnamed_addr constant [31 x i8] c"CmdSetDepthBoundsTestEnableEXT\00", align 1
@.str.770 = private unnamed_addr constant [27 x i8] c"CmdSetStencilTestEnableEXT\00", align 1
@.str.771 = private unnamed_addr constant [19 x i8] c"CmdSetStencilOpEXT\00", align 1
@.str.772 = private unnamed_addr constant [41 x i8] c"GetGeneratedCommandsMemoryRequirementsNV\00", align 1
@.str.773 = private unnamed_addr constant [33 x i8] c"CmdPreprocessGeneratedCommandsNV\00", align 1
@.str.774 = private unnamed_addr constant [30 x i8] c"CmdExecuteGeneratedCommandsNV\00", align 1
@.str.775 = private unnamed_addr constant [29 x i8] c"CmdBindPipelineShaderGroupNV\00", align 1
@.str.776 = private unnamed_addr constant [31 x i8] c"CreateIndirectCommandsLayoutNV\00", align 1
@.str.777 = private unnamed_addr constant [32 x i8] c"DestroyIndirectCommandsLayoutNV\00", align 1
@.str.778 = private unnamed_addr constant [25 x i8] c"CreatePrivateDataSlotEXT\00", align 1
@.str.779 = private unnamed_addr constant [26 x i8] c"DestroyPrivateDataSlotEXT\00", align 1
@.str.780 = private unnamed_addr constant [18 x i8] c"SetPrivateDataEXT\00", align 1
@.str.781 = private unnamed_addr constant [18 x i8] c"GetPrivateDataEXT\00", align 1
@.str.782 = private unnamed_addr constant [32 x i8] c"CmdSetFragmentShadingRateEnumNV\00", align 1
@.str.783 = private unnamed_addr constant [21 x i8] c"CmdSetVertexInputEXT\00", align 1
@.str.784 = private unnamed_addr constant [28 x i8] c"CmdSetPatchControlPointsEXT\00", align 1
@.str.785 = private unnamed_addr constant [33 x i8] c"CmdSetRasterizerDiscardEnableEXT\00", align 1
@.str.786 = private unnamed_addr constant [25 x i8] c"CmdSetDepthBiasEnableEXT\00", align 1
@.str.787 = private unnamed_addr constant [17 x i8] c"CmdSetLogicOpEXT\00", align 1
@.str.788 = private unnamed_addr constant [32 x i8] c"CmdSetPrimitiveRestartEnableEXT\00", align 1
@.str.789 = private unnamed_addr constant [26 x i8] c"CmdSetColorWriteEnableEXT\00", align 1
@.str.790 = private unnamed_addr constant [31 x i8] c"CreateAccelerationStructureKHR\00", align 1
@.str.791 = private unnamed_addr constant [32 x i8] c"DestroyAccelerationStructureKHR\00", align 1
@.str.792 = private unnamed_addr constant [34 x i8] c"CmdBuildAccelerationStructuresKHR\00", align 1
@.str.793 = private unnamed_addr constant [42 x i8] c"CmdBuildAccelerationStructuresIndirectKHR\00", align 1
@.str.794 = private unnamed_addr constant [31 x i8] c"BuildAccelerationStructuresKHR\00", align 1
@.str.795 = private unnamed_addr constant [29 x i8] c"CopyAccelerationStructureKHR\00", align 1
@.str.796 = private unnamed_addr constant [37 x i8] c"CopyAccelerationStructureToMemoryKHR\00", align 1
@.str.797 = private unnamed_addr constant [37 x i8] c"CopyMemoryToAccelerationStructureKHR\00", align 1
@.str.798 = private unnamed_addr constant [41 x i8] c"WriteAccelerationStructuresPropertiesKHR\00", align 1
@.str.799 = private unnamed_addr constant [32 x i8] c"CmdCopyAccelerationStructureKHR\00", align 1
@.str.800 = private unnamed_addr constant [40 x i8] c"CmdCopyAccelerationStructureToMemoryKHR\00", align 1
@.str.801 = private unnamed_addr constant [40 x i8] c"CmdCopyMemoryToAccelerationStructureKHR\00", align 1
@.str.802 = private unnamed_addr constant [41 x i8] c"GetAccelerationStructureDeviceAddressKHR\00", align 1
@.str.803 = private unnamed_addr constant [44 x i8] c"CmdWriteAccelerationStructuresPropertiesKHR\00", align 1
@.str.804 = private unnamed_addr constant [47 x i8] c"GetDeviceAccelerationStructureCompatibilityKHR\00", align 1
@.str.805 = private unnamed_addr constant [38 x i8] c"GetAccelerationStructureBuildSizesKHR\00", align 1
@.str.806 = private unnamed_addr constant [16 x i8] c"CmdTraceRaysKHR\00", align 1
@.str.807 = private unnamed_addr constant [29 x i8] c"CreateRayTracingPipelinesKHR\00", align 1
@.str.808 = private unnamed_addr constant [48 x i8] c"GetRayTracingCaptureReplayShaderGroupHandlesKHR\00", align 1
@.str.809 = private unnamed_addr constant [24 x i8] c"CmdTraceRaysIndirectKHR\00", align 1
@.str.810 = private unnamed_addr constant [37 x i8] c"GetRayTracingShaderGroupStackSizeKHR\00", align 1
@.str.811 = private unnamed_addr constant [37 x i8] c"CmdSetRayTracingPipelineStackSizeKHR\00", align 1
@.str.812 = private unnamed_addr constant [16 x i8] c"DestroyInstance\00", align 1
@.str.813 = private unnamed_addr constant [25 x i8] c"EnumeratePhysicalDevices\00", align 1
@.str.814 = private unnamed_addr constant [26 x i8] c"GetPhysicalDeviceFeatures\00", align 1
@.str.815 = private unnamed_addr constant [34 x i8] c"GetPhysicalDeviceFormatProperties\00", align 1
@.str.816 = private unnamed_addr constant [39 x i8] c"GetPhysicalDeviceImageFormatProperties\00", align 1
@.str.817 = private unnamed_addr constant [28 x i8] c"GetPhysicalDeviceProperties\00", align 1
@.str.818 = private unnamed_addr constant [39 x i8] c"GetPhysicalDeviceQueueFamilyProperties\00", align 1
@.str.819 = private unnamed_addr constant [34 x i8] c"GetPhysicalDeviceMemoryProperties\00", align 1
@.str.820 = private unnamed_addr constant [20 x i8] c"GetInstanceProcAddr\00", align 1
@.str.821 = private unnamed_addr constant [35 x i8] c"EnumerateDeviceExtensionProperties\00", align 1
@.str.822 = private unnamed_addr constant [31 x i8] c"EnumerateDeviceLayerProperties\00", align 1
@.str.823 = private unnamed_addr constant [45 x i8] c"GetPhysicalDeviceSparseImageFormatProperties\00", align 1
@.str.824 = private unnamed_addr constant [30 x i8] c"EnumeratePhysicalDeviceGroups\00", align 1
@.str.825 = private unnamed_addr constant [27 x i8] c"GetPhysicalDeviceFeatures2\00", align 1
@.str.826 = private unnamed_addr constant [29 x i8] c"GetPhysicalDeviceProperties2\00", align 1
@.str.827 = private unnamed_addr constant [35 x i8] c"GetPhysicalDeviceFormatProperties2\00", align 1
@.str.828 = private unnamed_addr constant [40 x i8] c"GetPhysicalDeviceImageFormatProperties2\00", align 1
@.str.829 = private unnamed_addr constant [40 x i8] c"GetPhysicalDeviceQueueFamilyProperties2\00", align 1
@.str.830 = private unnamed_addr constant [35 x i8] c"GetPhysicalDeviceMemoryProperties2\00", align 1
@.str.831 = private unnamed_addr constant [46 x i8] c"GetPhysicalDeviceSparseImageFormatProperties2\00", align 1
@.str.832 = private unnamed_addr constant [42 x i8] c"GetPhysicalDeviceExternalBufferProperties\00", align 1
@.str.833 = private unnamed_addr constant [41 x i8] c"GetPhysicalDeviceExternalFenceProperties\00", align 1
@.str.834 = private unnamed_addr constant [45 x i8] c"GetPhysicalDeviceExternalSemaphoreProperties\00", align 1
@.str.835 = private unnamed_addr constant [18 x i8] c"DestroySurfaceKHR\00", align 1
@.str.836 = private unnamed_addr constant [35 x i8] c"GetPhysicalDeviceSurfaceSupportKHR\00", align 1
@.str.837 = private unnamed_addr constant [40 x i8] c"GetPhysicalDeviceSurfaceCapabilitiesKHR\00", align 1
@.str.838 = private unnamed_addr constant [35 x i8] c"GetPhysicalDeviceSurfaceFormatsKHR\00", align 1
@.str.839 = private unnamed_addr constant [40 x i8] c"GetPhysicalDeviceSurfacePresentModesKHR\00", align 1
@.str.840 = private unnamed_addr constant [38 x i8] c"GetPhysicalDevicePresentRectanglesKHR\00", align 1
@.str.841 = private unnamed_addr constant [38 x i8] c"GetPhysicalDeviceDisplayPropertiesKHR\00", align 1
@.str.842 = private unnamed_addr constant [43 x i8] c"GetPhysicalDeviceDisplayPlanePropertiesKHR\00", align 1
@.str.843 = private unnamed_addr constant [36 x i8] c"GetDisplayPlaneSupportedDisplaysKHR\00", align 1
@.str.844 = private unnamed_addr constant [28 x i8] c"GetDisplayModePropertiesKHR\00", align 1
@.str.845 = private unnamed_addr constant [21 x i8] c"CreateDisplayModeKHR\00", align 1
@.str.846 = private unnamed_addr constant [31 x i8] c"GetDisplayPlaneCapabilitiesKHR\00", align 1
@.str.847 = private unnamed_addr constant [29 x i8] c"CreateDisplayPlaneSurfaceKHR\00", align 1
@.str.848 = private unnamed_addr constant [20 x i8] c"CreateXcbSurfaceKHR\00", align 1
@.str.849 = private unnamed_addr constant [43 x i8] c"GetPhysicalDeviceXcbPresentationSupportKHR\00", align 1
@.str.850 = private unnamed_addr constant [38 x i8] c"GetPhysicalDeviceVideoCapabilitiesKHR\00", align 1
@.str.851 = private unnamed_addr constant [42 x i8] c"GetPhysicalDeviceVideoFormatPropertiesKHR\00", align 1
@.str.852 = private unnamed_addr constant [30 x i8] c"GetPhysicalDeviceFeatures2KHR\00", align 1
@.str.853 = private unnamed_addr constant [32 x i8] c"GetPhysicalDeviceProperties2KHR\00", align 1
@.str.854 = private unnamed_addr constant [38 x i8] c"GetPhysicalDeviceFormatProperties2KHR\00", align 1
@.str.855 = private unnamed_addr constant [43 x i8] c"GetPhysicalDeviceImageFormatProperties2KHR\00", align 1
@.str.856 = private unnamed_addr constant [43 x i8] c"GetPhysicalDeviceQueueFamilyProperties2KHR\00", align 1
@.str.857 = private unnamed_addr constant [38 x i8] c"GetPhysicalDeviceMemoryProperties2KHR\00", align 1
@.str.858 = private unnamed_addr constant [49 x i8] c"GetPhysicalDeviceSparseImageFormatProperties2KHR\00", align 1
@.str.859 = private unnamed_addr constant [33 x i8] c"EnumeratePhysicalDeviceGroupsKHR\00", align 1
@.str.860 = private unnamed_addr constant [45 x i8] c"GetPhysicalDeviceExternalBufferPropertiesKHR\00", align 1
@.str.861 = private unnamed_addr constant [48 x i8] c"GetPhysicalDeviceExternalSemaphorePropertiesKHR\00", align 1
@.str.862 = private unnamed_addr constant [44 x i8] c"GetPhysicalDeviceExternalFencePropertiesKHR\00", align 1
@.str.863 = private unnamed_addr constant [62 x i8] c"EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR\00", align 1
@.str.864 = private unnamed_addr constant [54 x i8] c"GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR\00", align 1
@.str.865 = private unnamed_addr constant [41 x i8] c"GetPhysicalDeviceSurfaceCapabilities2KHR\00", align 1
@.str.866 = private unnamed_addr constant [36 x i8] c"GetPhysicalDeviceSurfaceFormats2KHR\00", align 1
@.str.867 = private unnamed_addr constant [39 x i8] c"GetPhysicalDeviceDisplayProperties2KHR\00", align 1
@.str.868 = private unnamed_addr constant [44 x i8] c"GetPhysicalDeviceDisplayPlaneProperties2KHR\00", align 1
@.str.869 = private unnamed_addr constant [29 x i8] c"GetDisplayModeProperties2KHR\00", align 1
@.str.870 = private unnamed_addr constant [32 x i8] c"GetDisplayPlaneCapabilities2KHR\00", align 1
@.str.871 = private unnamed_addr constant [41 x i8] c"GetPhysicalDeviceFragmentShadingRatesKHR\00", align 1
@.str.872 = private unnamed_addr constant [29 x i8] c"CreateDebugReportCallbackEXT\00", align 1
@.str.873 = private unnamed_addr constant [30 x i8] c"DestroyDebugReportCallbackEXT\00", align 1
@.str.874 = private unnamed_addr constant [22 x i8] c"DebugReportMessageEXT\00", align 1
@.str.875 = private unnamed_addr constant [49 x i8] c"GetPhysicalDeviceExternalImageFormatPropertiesNV\00", align 1
@.str.876 = private unnamed_addr constant [18 x i8] c"ReleaseDisplayEXT\00", align 1
@.str.877 = private unnamed_addr constant [41 x i8] c"GetPhysicalDeviceSurfaceCapabilities2EXT\00", align 1
@.str.878 = private unnamed_addr constant [29 x i8] c"CreateDebugUtilsMessengerEXT\00", align 1
@.str.879 = private unnamed_addr constant [30 x i8] c"DestroyDebugUtilsMessengerEXT\00", align 1
@.str.880 = private unnamed_addr constant [27 x i8] c"SubmitDebugUtilsMessageEXT\00", align 1
@.str.881 = private unnamed_addr constant [42 x i8] c"GetPhysicalDeviceMultisamplePropertiesEXT\00", align 1
@.str.882 = private unnamed_addr constant [45 x i8] c"GetPhysicalDeviceCalibrateableTimeDomainsEXT\00", align 1
@.str.883 = private unnamed_addr constant [35 x i8] c"GetPhysicalDeviceToolPropertiesEXT\00", align 1
@.str.884 = private unnamed_addr constant [47 x i8] c"GetPhysicalDeviceCooperativeMatrixPropertiesNV\00", align 1
@.str.885 = private unnamed_addr constant [64 x i8] c"GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV\00", align 1
@.str.886 = private unnamed_addr constant [25 x i8] c"CreateHeadlessSurfaceEXT\00", align 1
@.str.887 = private unnamed_addr constant [92 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceVideoCapabilitiesKHR\00", align 1
@.str.888 = private unnamed_addr constant [96 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceVideoFormatPropertiesKHR\00", align 1
@.str.889 = private unnamed_addr constant [116 x i8] c"ICD associated with VkPhysicalDevice does not support EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR\00", align 1
@.str.890 = private unnamed_addr constant [108 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR\00", align 1
@.str.891 = private unnamed_addr constant [95 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceFragmentShadingRatesKHR\00", align 1
@.str.892 = private unnamed_addr constant [96 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceMultisamplePropertiesEXT\00", align 1
@.str.893 = private unnamed_addr constant [99 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceCalibrateableTimeDomainsEXT\00", align 1
@.str.894 = private unnamed_addr constant [101 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceCooperativeMatrixPropertiesNV\00", align 1
@.str.895 = private unnamed_addr constant [118 x i8] c"ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV\00", align 1
@.str.896 = private unnamed_addr constant [39 x i8] c"VK_KHR_get_physical_device_properties2\00", align 1
@.str.897 = private unnamed_addr constant [29 x i8] c"VK_KHR_device_group_creation\00", align 1
@.str.898 = private unnamed_addr constant [36 x i8] c"VK_KHR_external_memory_capabilities\00", align 1
@.str.899 = private unnamed_addr constant [39 x i8] c"VK_KHR_external_semaphore_capabilities\00", align 1
@.str.900 = private unnamed_addr constant [35 x i8] c"VK_KHR_external_fence_capabilities\00", align 1
@.str.901 = private unnamed_addr constant [35 x i8] c"VK_NV_external_memory_capabilities\00", align 1
@.str.902 = private unnamed_addr constant [27 x i8] c"VK_EXT_direct_mode_display\00", align 1
@.str.903 = private unnamed_addr constant [31 x i8] c"VK_EXT_display_surface_counter\00", align 1
@.str.904 = private unnamed_addr constant [19 x i8] c"VK_EXT_debug_utils\00", align 1
@instance_disp = hidden local_unnamed_addr constant %struct.VkLayerInstanceDispatchTable_ { void ()* (%struct.VkInstance_T*, i8*)* null, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* null, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* @terminator_DestroyInstance, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* @terminator_EnumeratePhysicalDevices, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* @terminator_GetPhysicalDeviceFeatures, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* @terminator_GetPhysicalDeviceFormatProperties, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* @terminator_GetPhysicalDeviceImageFormatProperties, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* @terminator_GetPhysicalDeviceProperties, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* @terminator_GetPhysicalDeviceQueueFamilyProperties, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* @terminator_GetPhysicalDeviceMemoryProperties, void ()* (%struct.VkInstance_T*, i8*)* @vkGetInstanceProcAddr, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* null, i32 (i8*, i32*, %struct.VkExtensionProperties*)* null, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* @terminator_EnumerateDeviceExtensionProperties, i32 (i32*, %struct.VkLayerProperties*)* null, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* @terminator_EnumerateDeviceLayerProperties, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* @terminator_GetPhysicalDeviceSparseImageFormatProperties, i32 (i32*)* null, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)* @terminator_EnumeratePhysicalDeviceGroups, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* @terminator_GetPhysicalDeviceFeatures2, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* @terminator_GetPhysicalDeviceProperties2, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* @terminator_GetPhysicalDeviceFormatProperties2, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* @terminator_GetPhysicalDeviceImageFormatProperties2, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* @terminator_GetPhysicalDeviceQueueFamilyProperties2, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* @terminator_GetPhysicalDeviceMemoryProperties2, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* @terminator_GetPhysicalDeviceSparseImageFormatProperties2, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* @terminator_GetPhysicalDeviceExternalBufferProperties, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)* @terminator_GetPhysicalDeviceExternalFenceProperties, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)* @terminator_GetPhysicalDeviceExternalSemaphoreProperties, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* @terminator_DestroySurfaceKHR, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* @terminator_GetPhysicalDeviceSurfaceSupportKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* @terminator_GetPhysicalDeviceSurfaceCapabilitiesKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* @terminator_GetPhysicalDeviceSurfaceFormatsKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)* @terminator_GetPhysicalDeviceSurfacePresentModesKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)* @terminator_GetPhysicalDevicePresentRectanglesKHR, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)* @terminator_GetPhysicalDeviceDisplayPropertiesKHR, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)* @terminator_GetPhysicalDeviceDisplayPlanePropertiesKHR, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)* @terminator_GetDisplayPlaneSupportedDisplaysKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)* @terminator_GetDisplayModePropertiesKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)* @terminator_CreateDisplayModeKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)* @terminator_GetDisplayPlaneCapabilitiesKHR, i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* @terminator_CreateDisplayPlaneSurfaceKHR, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* @terminator_CreateXcbSurfaceKHR, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* @terminator_GetPhysicalDeviceXcbPresentationSupportKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)* @terminator_GetPhysicalDeviceVideoCapabilitiesKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)* @terminator_GetPhysicalDeviceVideoFormatPropertiesKHR, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* @terminator_GetPhysicalDeviceFeatures2, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* @terminator_GetPhysicalDeviceProperties2, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* @terminator_GetPhysicalDeviceFormatProperties2, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* @terminator_GetPhysicalDeviceImageFormatProperties2, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* @terminator_GetPhysicalDeviceQueueFamilyProperties2, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* @terminator_GetPhysicalDeviceMemoryProperties2, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* @terminator_GetPhysicalDeviceSparseImageFormatProperties2, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)* @terminator_EnumeratePhysicalDeviceGroups, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* @terminator_GetPhysicalDeviceExternalBufferProperties, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)* @terminator_GetPhysicalDeviceExternalSemaphoreProperties, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)* @terminator_GetPhysicalDeviceExternalFenceProperties, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)* @terminator_EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)* @terminator_GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)* @terminator_GetPhysicalDeviceSurfaceCapabilities2KHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)* @terminator_GetPhysicalDeviceSurfaceFormats2KHR, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)* @terminator_GetPhysicalDeviceDisplayProperties2KHR, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)* @terminator_GetPhysicalDeviceDisplayPlaneProperties2KHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)* @terminator_GetDisplayModeProperties2KHR, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)* @terminator_GetDisplayPlaneCapabilities2KHR, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)* @terminator_GetPhysicalDeviceFragmentShadingRatesKHR, i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)* @terminator_CreateDebugReportCallbackEXT, void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)* @terminator_DestroyDebugReportCallbackEXT, void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)* @terminator_DebugReportMessageEXT, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)* @terminator_GetPhysicalDeviceExternalImageFormatPropertiesNV, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)* @terminator_ReleaseDisplayEXT, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)* @terminator_GetPhysicalDeviceSurfaceCapabilities2EXT, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)* @terminator_CreateDebugUtilsMessengerEXT, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)* @terminator_DestroyDebugUtilsMessengerEXT, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)* @terminator_SubmitDebugUtilsMessageEXT, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)* @terminator_GetPhysicalDeviceMultisamplePropertiesEXT, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)* @terminator_GetPhysicalDeviceCalibrateableTimeDomainsEXT, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)* @terminator_GetPhysicalDeviceToolPropertiesEXT, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)* @terminator_GetPhysicalDeviceCooperativeMatrixPropertiesNV, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)* @terminator_GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV, i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* @terminator_CreateHeadlessSurfaceEXT }, align 8
@.str.905 = private unnamed_addr constant [15 x i8] c"VK_KHR_surface\00", align 1
@.str.906 = private unnamed_addr constant [15 x i8] c"VK_KHR_display\00", align 1
@.str.907 = private unnamed_addr constant [19 x i8] c"VK_KHR_xcb_surface\00", align 1
@.str.908 = private unnamed_addr constant [33 x i8] c"VK_KHR_get_surface_capabilities2\00", align 1
@.str.909 = private unnamed_addr constant [31 x i8] c"VK_KHR_get_display_properties2\00", align 1
@.str.910 = private unnamed_addr constant [38 x i8] c"VK_KHR_surface_protected_capabilities\00", align 1
@.str.911 = private unnamed_addr constant [20 x i8] c"VK_EXT_debug_report\00", align 1
@.str.912 = private unnamed_addr constant [24 x i8] c"VK_EXT_validation_flags\00", align 1
@.str.913 = private unnamed_addr constant [28 x i8] c"VK_EXT_swapchain_colorspace\00", align 1
@.str.914 = private unnamed_addr constant [27 x i8] c"VK_EXT_validation_features\00", align 1
@.str.915 = private unnamed_addr constant [24 x i8] c"VK_EXT_headless_surface\00", align 1
@LOADER_INSTANCE_EXTENSIONS = hidden local_unnamed_addr constant [21 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.905, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.906, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.907, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.896, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.897, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.898, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.899, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.900, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.908, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.909, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.910, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.911, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.901, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.912, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.902, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.903, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.913, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.904, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.914, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.915, i32 0, i32 0), i8* null], align 16
@loader = hidden local_unnamed_addr global %struct.loader_struct zeroinitializer, align 8
@g_loader_debug = hidden local_unnamed_addr global i32 0, align 4
@g_loader_log_msgs = hidden local_unnamed_addr global i32 0, align 4
@tls_instance = hidden thread_local local_unnamed_addr global %struct.loader_instance* null, align 8
@.str.916 = private unnamed_addr constant [15 x i8] c"Loader Message\00", align 1
@.str.917 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.918 = private unnamed_addr constant [4 x i8] c" | \00", align 1
@.str.919 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.920 = private unnamed_addr constant [5 x i8] c"PERF\00", align 1
@.str.921 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.922 = private unnamed_addr constant [6 x i8] c"DEBUG\00", align 1
@.str.923 = private unnamed_addr constant [3 x i8] c": \00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.924 = private unnamed_addr constant [17 x i8] c"wrong ELF class:\00", align 1
@.str.925 = private unnamed_addr constant [65 x i8] c"vkSetInstanceDispatch: Can not retrieve Instance dispatch table.\00", align 1
@.str.926 = private unnamed_addr constant [25 x i8] c"VK_LAYER_LUNARG_override\00", align 1
@.str.927 = private unnamed_addr constant [148 x i8] c"loaderRemoveLayersInBlacklist: Override layer is active and layer %s is in the blacklist inside of it. Removing that layer from current layer list.\00", align 1
@.str.928 = private unnamed_addr constant [161 x i8] c"loaderRemoveLayersNotInImplicitMetaLayers : Implicit meta-layers are active, and layer %s is not list inside of any.  So removing layer from current layer list.\00", align 1
@.str.930 = private unnamed_addr constant [9 x i8] c"%d.%d.%d\00", align 1
@.str.931 = private unnamed_addr constant [37 x i8] c"Device Extension: %s (%s) version %s\00", align 1
@.str.932 = private unnamed_addr constant [97 x i8] c"loader_add_device_extensions: Error getting physical device extension info count from library %s\00", align 1
@.str.933 = private unnamed_addr constant [68 x i8] c"loader_init_generic_list: Failed to allocate space for generic list\00", align 1
@.str.934 = private unnamed_addr constant [70 x i8] c"loader_add_to_ext_list: Failed to reallocate space for extension list\00", align 1
@.str.935 = private unnamed_addr constant [81 x i8] c"loader_add_to_dev_ext_list: Failed to reallocate space for device extension list\00", align 1
@.str.936 = private unnamed_addr constant [101 x i8] c"loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint list in list %d\00", align 1
@.str.937 = private unnamed_addr constant [93 x i8] c"loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint %d name\00", align 1
@.str.938 = private unnamed_addr constant [84 x i8] c"loaderAddLayerPropertiesToList: Realloc failed for when attempting to add new layer\00", align 1
@.str.939 = private unnamed_addr constant [80 x i8] c"loaderAddMetaLayer: Failed to find layer name %s component layer %s to activate\00", align 1
@.str.940 = private unnamed_addr constant [36 x i8] c"VK_LAYER_LUNARG_standard_validation\00", align 1
@.str.941 = private unnamed_addr constant [67 x i8] c"loaderAddLayerNameToList: Failed to find layer name %s to activate\00", align 1
@.str.942 = private unnamed_addr constant [132 x i8] c"Layer VK_LAYER_LUNARG_standard_validation has been changed to VK_LAYER_KHRONOS_validation. Please use the new version of the layer.\00", align 1
@.str.943 = private unnamed_addr constant [34 x i8] c"Build ICD instance extension list\00", align 1
@.str.944 = private unnamed_addr constant [34 x i8] c"VK_LOADER_DISABLE_INST_EXT_FILTER\00", align 1
@.str.945 = private unnamed_addr constant [67 x i8] c"loader_create_logical_device: Failed to alloc struct loader_device\00", align 1
@loader_lock = common hidden global %union.pthread_mutex_t zeroinitializer, align 8
@loader_json_lock = common hidden global %union.pthread_mutex_t zeroinitializer, align 8
@loader_preload_icd_lock = common hidden global %union.pthread_mutex_t zeroinitializer, align 8
@__const.loader_initialize.alloc_fns = private unnamed_addr constant %struct.cJSON_Hooks { i8* (i64)* @loader_instance_tls_heap_alloc, void (i8*)* @loader_instance_tls_heap_free }, align 8
@scanned_icds = internal global %struct.loader_icd_tramp_list zeroinitializer, align 8
@.str.946 = private unnamed_addr constant [17 x i8] c"VK_ICD_FILENAMES\00", align 1
@.str.947 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.948 = private unnamed_addr constant [13 x i8] c"vulkan/icd.d\00", align 1
@.str.949 = private unnamed_addr constant [20 x i8] c"file_format_version\00", align 1
@.str.950 = private unnamed_addr constant [93 x i8] c"loader_icd_scan: ICD JSON %s does not have a 'file_format_version' field. Skipping ICD JSON.\00", align 1
@.str.951 = private unnamed_addr constant [95 x i8] c"loader_icd_scan: Failed retrieving ICD JSON %s 'file_format_version' field.  Skipping ICD JSON\00", align 1
@.str.952 = private unnamed_addr constant [39 x i8] c"Found ICD manifest file %s, version %s\00", align 1
@.str.953 = private unnamed_addr constant [5 x i8] c".\22\0A\0D\00", align 1
@.str.954 = private unnamed_addr constant [94 x i8] c"loader_icd_scan: Unexpected manifest file version (expected 1.0.0 or 1.0.1), may cause errors\00", align 1
@.str.955 = private unnamed_addr constant [4 x i8] c"ICD\00", align 1
@.str.956 = private unnamed_addr constant [13 x i8] c"library_path\00", align 1
@.str.957 = private unnamed_addr constant [89 x i8] c"loader_icd_scan: Failed retrieving ICD JSON %s 'library_path' field.  Skipping ICD JSON.\00", align 1
@.str.959 = private unnamed_addr constant [80 x i8] c"loader_icd_scan: ICD JSON %s 'library_path' field is empty.  Skipping ICD JSON.\00", align 1
@.str.960 = private unnamed_addr constant [35 x i8] c"Searching for ICD drivers named %s\00", align 1
@.str.961 = private unnamed_addr constant [12 x i8] c"api_version\00", align 1
@.str.962 = private unnamed_addr constant [88 x i8] c"loader_icd_scan: Failed retrieving ICD JSON %s 'api_version' field.  Skipping ICD JSON.\00", align 1
@.str.963 = private unnamed_addr constant [67 x i8] c"loader_icd_scan: ICD JSON %s does not have an 'api_version' field.\00", align 1
@.str.964 = private unnamed_addr constant [64 x i8] c"loader_icd_scan: Failed to add ICD JSON %s.  Skipping ICD JSON.\00", align 1
@.str.965 = private unnamed_addr constant [95 x i8] c"loader_icd_scan: Failed to find 'library_path' object in ICD JSON file %s.  Skipping ICD JSON.\00", align 1
@.str.966 = private unnamed_addr constant [83 x i8] c"loader_icd_scan: Can not find 'ICD' object in ICD JSON file %s.  Skipping ICD JSON\00", align 1
@.str.967 = private unnamed_addr constant [24 x i8] c"vulkan/implicit_layer.d\00", align 1
@.str.968 = private unnamed_addr constant [65 x i8] c"loaderScanForLayers: Override layer has override paths set to %s\00", align 1
@.str.969 = private unnamed_addr constant [14 x i8] c"VK_LAYER_PATH\00", align 1
@.str.970 = private unnamed_addr constant [24 x i8] c"vulkan/explicit_layer.d\00", align 1
@.str.971 = private unnamed_addr constant [73 x i8] c"loaderScanForImplicitLayers: Override layer has override paths set to %s\00", align 1
@.str.972 = private unnamed_addr constant [87 x i8] c"loaderEnableInstanceLayers: Failed to initialize application version of the layer list\00", align 1
@.str.973 = private unnamed_addr constant [84 x i8] c"loaderEnableInstanceLayers: Failed to initialize expanded version of the layer list\00", align 1
@.str.974 = private unnamed_addr constant [19 x i8] c"VK_INSTANCE_LAYERS\00", align 1
@.str.975 = private unnamed_addr constant [113 x i8] c"loader_add_to_layer_list: Explicit layer %s is using an old API version %u.%u versus application requested %u.%u\00", align 1
@.str.976 = private unnamed_addr constant [53 x i8] c"vkCreateDevice:  Failed to create ICD extension list\00", align 1
@.str.977 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.978 = private unnamed_addr constant [50 x i8] c"vkCreateDevice:  Failed to add extensions to list\00", align 1
@.str.979 = private unnamed_addr constant [55 x i8] c"vkCreateDevice:  Failed to validate extensions in list\00", align 1
@.str.980 = private unnamed_addr constant [81 x i8] c"vkCreateDevice:  Failed to allocate application activated layer list of size %d.\00", align 1
@.str.981 = private unnamed_addr constant [78 x i8] c"vkCreateDevice:  Failed to allocate expanded activated layer list of size %d.\00", align 1
@.str.982 = private unnamed_addr constant [48 x i8] c"vkCreateDevice:  Failed to create device chain.\00", align 1
@.str.986 = private unnamed_addr constant [39 x i8] c"vkNegotiateLoaderLayerInterfaceVersion\00", align 1
@.str.987 = private unnamed_addr constant [22 x i8] c"vkGetInstanceProcAddr\00", align 1
@.str.988 = private unnamed_addr constant [81 x i8] c"loader_create_instance_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s\00", align 1
@.str.989 = private unnamed_addr constant [30 x i8] c"Insert instance layer %s (%s)\00", align 1
@.str.990 = private unnamed_addr constant [17 x i8] c"vkCreateInstance\00", align 1
@.str.991 = private unnamed_addr constant [64 x i8] c"loader_create_instance_chain: Failed to find 'vkCreateInstance'\00", align 1
@.str.994 = private unnamed_addr constant [97 x i8] c"loader_create_device_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s.  Skipping layer.\00", align 1
@.str.995 = private unnamed_addr constant [47 x i8] c"Failed to find vkGetDeviceProcAddr in layer %s\00", align 1
@.str.996 = private unnamed_addr constant [30 x i8] c"Inserted device layer %s (%s)\00", align 1
@.str.997 = private unnamed_addr constant [77 x i8] c"loader_create_device_chain: Failed to find 'vkCreateDevice' in layers or ICD\00", align 1
@.str.998 = private unnamed_addr constant [101 x i8] c"loaderValidateLayers: Device ppEnabledLayerNames contains string that is too long or is badly formed\00", align 1
@.str.999 = private unnamed_addr constant [78 x i8] c"loaderValidateLayers: Layer %d does not exist in the list of available layers\00", align 1
@.str.1000 = private unnamed_addr constant [122 x i8] c"loader_validate_instance_extensions: Instance ppEnabledExtensionNames contains string that is too long or is badly formed\00", align 1
@.str.1001 = private unnamed_addr constant [98 x i8] c"loader_validate_instance_extensions: Extension %s not found in list of known instance extensions.\00", align 1
@.str.1002 = private unnamed_addr constant [110 x i8] c"loader_validate_instance_extensions: Instance extension %s not supported by available ICDs or enabled layers.\00", align 1
@.str.1003 = private unnamed_addr constant [118 x i8] c"loader_validate_device_extensions: Device ppEnabledExtensionNames contains string that is too long or is badly formed\00", align 1
@.str.1004 = private unnamed_addr constant [116 x i8] c"loader_validate_device_extensions: Device extension %s not supported by selected physical device or enabled layers.\00", align 1
@.str.1006 = private unnamed_addr constant [72 x i8] c"terminator_CreateInstance: Failed to add ICD %d to ICD trampoline list.\00", align 1
@.str.1007 = private unnamed_addr constant [27 x i8] c"vkEnumerateInstanceVersion\00", align 1
@.str.1008 = private unnamed_addr constant [116 x i8] c"terminator_CreateInstance: ICD \22%s\22 vkEnumerateInstanceVersion returned error. The ICD will be treated as a 1.0 ICD\00", align 1
@.str.1009 = private unnamed_addr constant [78 x i8] c"terminator_CreateInstance: Failed to CreateInstance in ICD %d.  Skipping ICD.\00", align 1
@.str.1010 = private unnamed_addr constant [98 x i8] c"terminator_CreateInstance: Failed to CreateInstance and find entrypoints with ICD.  Skipping ICD.\00", align 1
@.str.1011 = private unnamed_addr constant [69 x i8] c"terminator_CreateDevice: No vkCreateDevice command exposed by ICD %s\00", align 1
@.str.1013 = private unnamed_addr constant [77 x i8] c"vkCreateDevice extension %s not available for devices associated with ICD %s\00", align 1
@.str.1014 = private unnamed_addr constant [92 x i8] c"vkCreateDevice: Emulating handling of VkPhysicalDeviceFeatures2 in pNext chain for ICD \22%s\22\00", align 1
@.str.1015 = private unnamed_addr constant [98 x i8] c"vkCreateDevice: Emulating handling of VkPhysicalDeviceGroupProperties in pNext chain for ICD \22%s\22\00", align 1
@.str.1016 = private unnamed_addr constant [73 x i8] c"vkCreateDevice: Emulation failed to create device from device group info\00", align 1
@.str.1017 = private unnamed_addr constant [17 x i8] c"VK_KHR_swapchain\00", align 1
@.str.1018 = private unnamed_addr constant [25 x i8] c"VK_KHR_display_swapchain\00", align 1
@.str.1019 = private unnamed_addr constant [20 x i8] c"VK_KHR_device_group\00", align 1
@.str.1020 = private unnamed_addr constant [20 x i8] c"VK_EXT_debug_marker\00", align 1
@.str.1021 = private unnamed_addr constant [29 x i8] c"VK_EXT_full_screen_exclusive\00", align 1
@__const.terminator_CreateDevice.properties = private unnamed_addr constant { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [256 x i8] cx i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, [2 x i32] [i32 -1431655766, i32 -1431655766], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %struct.VkPhysicalDeviceSparseProperties { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@.str.1022 = private unnamed_addr constant [61 x i8] c"terminator_CreateDevice: Failed in ICD %s vkCreateDevicecall\00", align 1
@.str.1023 = private unnamed_addr constant [127 x i8] c"setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get count.\00", align 1
@.str.1024 = private unnamed_addr constant [83 x i8] c"setupLoaderTrampPhysDevs:  Failed to allocate new physical device array of size %d\00", align 1
@.str.1026 = private unnamed_addr constant [129 x i8] c"setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get content.\00", align 1
@.str.1027 = private unnamed_addr constant [83 x i8] c"setupLoaderTrampPhysDevs:  Failed to allocate physical device trampoline object %d\00", align 1
@.str.1029 = private unnamed_addr constant [97 x i8] c"setupLoaderTermPhysDevs:  Call to ICD %d's 'vkEnumeratePhysicalDevices' failed with error 0x%08x\00", align 1
@.str.1031 = private unnamed_addr constant [80 x i8] c"setupLoaderTermPhysDevs:  Failed to detect any valid GPUs in the current config\00", align 1
@.str.1032 = private unnamed_addr constant [82 x i8] c"setupLoaderTermPhysDevs:  Failed to allocate new physical device array of size %d\00", align 1
@.str.1033 = private unnamed_addr constant [82 x i8] c"setupLoaderTermPhysDevs:  Failed to allocate physical device terminator object %d\00", align 1
@.str.1034 = private unnamed_addr constant [103 x i8] c"Encountered the vkEnumerateDeviceLayerProperties terminator.  This means a layer improperly continued.\00", align 1
@.str.1035 = private unnamed_addr constant [81 x i8] c"vkEnumerateDeviceExtensionProperties:  pLayerName is too long or is badly formed\00", align 1
@.str.1036 = private unnamed_addr constant [134 x i8] c"setupLoaderTermPhysDevGroups:  Loader failed to setup physical device terminator info before calling 'EnumeratePhysicalDeviceGroups'.\00", align 1
@.str.1037 = private unnamed_addr constant [128 x i8] c"setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDevices' to ICD %d to get plain phys dev count.\00", align 1
@.str.1038 = private unnamed_addr constant [118 x i8] c"setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get count.\00", align 1
@.str.1039 = private unnamed_addr constant [93 x i8] c"setupLoaderTermPhysDevGroups:  Failed to allocate new physical device group array of size %d\00", align 1
@.str.1042 = private unnamed_addr constant [120 x i8] c"setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get content.\00", align 1
@.str.1043 = private unnamed_addr constant [156 x i8] c"setupLoaderTermPhysDevGroups:  Failed to find GPU %d in group %d returned by 'EnumeratePhysicalDeviceGroups' in list returned by 'EnumeratePhysicalDevices'\00", align 1
@.str.1044 = private unnamed_addr constant [93 x i8] c"setupLoaderTermPhysDevGroups:  Failed to allocate physical device group Terminator object %d\00", align 1
@.str.1045 = private unnamed_addr constant [91 x i8] c"vkGetPhysicalDeviceFeatures2: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceFeatures\00", align 1
@.str.1046 = private unnamed_addr constant [124 x i8] c"vkGetPhysicalDeviceFeatures2: Emulation found unrecognized structure type in pFeatures->pNext - this struct will be ignored\00", align 1
@.str.1047 = private unnamed_addr constant [95 x i8] c"vkGetPhysicalDeviceProperties2: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceProperties\00", align 1
@.str.1048 = private unnamed_addr constant [139 x i8] c"vkGetPhysicalDeviceProperties2: Emulation cannot generate unique IDs for struct VkPhysicalDeviceIDProperties - setting IDs to zero instead\00", align 1
@.str.1049 = private unnamed_addr constant [131 x i8] c"vkGetPhysicalDeviceProperties2KHR: Emulation found unrecognized structure type in pProperties->pNext - this struct will be ignored\00", align 1
@.str.1050 = private unnamed_addr constant [107 x i8] c"vkGetPhysicalDeviceFormatProperties2: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceFormatProperties\00", align 1
@.str.1051 = private unnamed_addr constant [140 x i8] c"vkGetPhysicalDeviceFormatProperties2: Emulation found unrecognized structure type in pFormatProperties->pNext - this struct will be ignored\00", align 1
@.str.1052 = private unnamed_addr constant [117 x i8] c"vkGetPhysicalDeviceImageFormatProperties2: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceImageFormatProperties\00", align 1
@.str.1053 = private unnamed_addr constant [117 x i8] c"vkGetPhysicalDeviceQueueFamilyProperties2: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceQueueFamilyProperties\00", align 1
@.str.1055 = private unnamed_addr constant [153 x i8] c"vkGetPhysicalDeviceQueueFamilyProperties2: Emulation found unrecognized structure type in pQueueFamilyProperties[%d].pNext - this struct will be ignored\00", align 1
@.str.1056 = private unnamed_addr constant [107 x i8] c"vkGetPhysicalDeviceMemoryProperties2: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceMemoryProperties\00", align 1
@.str.1057 = private unnamed_addr constant [140 x i8] c"vkGetPhysicalDeviceMemoryProperties2: Emulation found unrecognized structure type in pMemoryProperties->pNext - this struct will be ignored\00", align 1
@.str.1058 = private unnamed_addr constant [129 x i8] c"vkGetPhysicalDeviceSparseImageFormatProperties2: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceSparseImageFormatProperties\00", align 1
@.str.1059 = private unnamed_addr constant [145 x i8] c"vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pFormatInfo->pNext - this struct will be ignored\00", align 1
@.str.1061 = private unnamed_addr constant [148 x i8] c"vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pProperties[%d].pNext - this struct will be ignored\00", align 1
@.str.1062 = private unnamed_addr constant [72 x i8] c"vkGetPhysicalDeviceExternalBufferProperties: Emulating call in ICD \22%s\22\00", align 1
@.str.1063 = private unnamed_addr constant [149 x i8] c"vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferInfo->pNext - this struct will be ignored\00", align 1
@.str.1064 = private unnamed_addr constant [155 x i8] c"vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferProperties->pNext - this struct will be ignored\00", align 1
@.str.1065 = private unnamed_addr constant [75 x i8] c"vkGetPhysicalDeviceExternalSemaphoreProperties: Emulating call in ICD \22%s\22\00", align 1
@.str.1066 = private unnamed_addr constant [155 x i8] c"vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreInfo->pNext - this struct will be ignored\00", align 1
@.str.1067 = private unnamed_addr constant [161 x i8] c"vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreProperties->pNext - this struct will be ignored\00", align 1
@.str.1068 = private unnamed_addr constant [71 x i8] c"vkGetPhysicalDeviceExternalFenceProperties: Emulating call in ICD \22%s\22\00", align 1
@.str.1069 = private unnamed_addr constant [147 x i8] c"vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceInfo->pNext - this struct will be ignored\00", align 1
@.str.1070 = private unnamed_addr constant [153 x i8] c"vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceProperties->pNext - this struct will be ignored\00", align 1
@.str.1071 = private unnamed_addr constant [125 x i8] c"loader_add_implicit_layer: Disabling implicit layer %s for using an old API version %d.%d versus application requested %d.%d\00", align 1
@.str.1072 = private unnamed_addr constant [79 x i8] c"loader_add_instance_extensions: Error getting Instance extension count from %s\00", align 1
@.str.1073 = private unnamed_addr constant [74 x i8] c"loader_add_instance_extensions: Error getting Instance extensions from %s\00", align 1
@.str.1074 = private unnamed_addr constant [39 x i8] c"Instance Extension: %s (%s) version %s\00", align 1
@.str.1075 = private unnamed_addr constant [76 x i8] c"loader_add_instance_extensions: Failed to add %s to Instance extension list\00", align 1
@.str.1076 = private unnamed_addr constant [16 x i8] c"VK_LOADER_DEBUG\00", align 1
@.str.1077 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.1078 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@.str.1079 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.1080 = private unnamed_addr constant [5 x i8] c"perf\00", align 1
@.str.1081 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.1082 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.1083 = private unnamed_addr constant [88 x i8] c"loader_scanned_icd_init: Realloc failed for layer list when attempting to add new layer\00", align 1
@.str.1084 = private unnamed_addr constant [16 x i8] c"XDG_CONFIG_DIRS\00", align 1
@.str.1085 = private unnamed_addr constant [14 x i8] c"XDG_DATA_DIRS\00", align 1
@.str.1086 = private unnamed_addr constant [14 x i8] c"XDG_DATA_HOME\00", align 1
@.str.1087 = private unnamed_addr constant [9 x i8] c"/etc/xdg\00", align 1
@.str.1088 = private unnamed_addr constant [28 x i8] c"/usr/local/share:/usr/share\00", align 1
@.str.1089 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.1090 = private unnamed_addr constant [14 x i8] c"/.local/share\00", align 1
@.str.1091 = private unnamed_addr constant [5 x i8] c"/etc\00", align 1
@.str.1092 = private unnamed_addr constant [82 x i8] c"ReadDataFilesInSearchPaths: Failed to allocate space for search path of length %d\00", align 1
@__const.ReadDataFilesInSearchPaths.path_sep_str = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.1093 = private unnamed_addr constant [82 x i8] c"ReadDataFilesInSearchPaths: Searching the following paths for manifest files: %s\0A\00", align 1
@.str.1094 = private unnamed_addr constant [41 x i8] c"AddDataFilesInPath: Path to %s too long\0A\00", align 1
@.str.1095 = private unnamed_addr constant [40 x i8] c"AddIfManfistFile: Received NULL pointer\00", align 1
@.str.1096 = private unnamed_addr constant [6 x i8] c".json\00", align 1
@.str.1097 = private unnamed_addr constant [69 x i8] c"AddIfManfistFile: Failed to allocate space for manifest file %d list\00", align 1
@.str.1098 = private unnamed_addr constant [81 x i8] c"CheckAndAdjustDataFileList: Failed to allocate space for manifest file name list\00", align 1
@.str.1099 = private unnamed_addr constant [83 x i8] c"CheckAndAdjustDataFileList: Failed to reallocate space for manifest file name list\00", align 1
@.str.1100 = private unnamed_addr constant [44 x i8] c"loader_get_json: Received invalid JSON file\00", align 1
@.str.1101 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.1102 = private unnamed_addr constant [45 x i8] c"loader_get_json: Failed to open JSON file %s\00", align 1
@.str.1103 = private unnamed_addr constant [79 x i8] c"loader_get_json: Failed to allocate space for JSON file %s buffer of length %d\00", align 1
@.str.1104 = private unnamed_addr constant [46 x i8] c"loader_get_json: Failed to read JSON file %s.\00", align 1
@.str.1105 = private unnamed_addr constant [100 x i8] c"loader_get_json: Failed to parse JSON file %s, this is usually because something ran out of memory.\00", align 1
@.str.1106 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.1107 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1108 = private unnamed_addr constant [41 x i8] c"vk_icdNegotiateLoaderICDInterfaceVersion\00", align 1
@.str.1109 = private unnamed_addr constant [104 x i8] c"loader_scanned_icd_add: ICD %s doesn't support interface version compatible with loader, skip this ICD.\00", align 1
@.str.1110 = private unnamed_addr constant [26 x i8] c"vk_icdGetInstanceProcAddr\00", align 1
@.str.1111 = private unnamed_addr constant [126 x i8] c"loader_scanned_icd_add: Attempt to retrieve either 'vkGetInstanceProcAddr' or 'vk_icdGetInstanceProcAddr' from ICD %s failed.\00", align 1
@.str.1112 = private unnamed_addr constant [132 x i8] c"loader_scanned_icd_add: Using deprecated ICD interface of 'vkGetInstanceProcAddr' instead of 'vk_icdGetInstanceProcAddr' for ICD %s\00", align 1
@.str.1113 = private unnamed_addr constant [93 x i8] c"loader_scanned_icd_add:  Failed querying 'vkCreateInstance' via dlsym/loadlibrary for ICD %s\00", align 1
@.str.1114 = private unnamed_addr constant [39 x i8] c"vkEnumerateInstanceExtensionProperties\00", align 1
@.str.1115 = private unnamed_addr constant [112 x i8] c"loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via dlsym/loadlibrary for ICD %s\00", align 1
@.str.1116 = private unnamed_addr constant [100 x i8] c"loader_scanned_icd_add: Could not get 'vkCreateInstance' via 'vk_icdGetInstanceProcAddr' for ICD %s\00", align 1
@.str.1117 = private unnamed_addr constant [122 x i8] c"loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via 'vk_icdGetInstanceProcAddr' for ICD %s\00", align 1
@.str.1118 = private unnamed_addr constant [32 x i8] c"vk_icdGetPhysicalDeviceProcAddr\00", align 1
@.str.1119 = private unnamed_addr constant [70 x i8] c"loader_scanned_icd_add: Realloc failed on icd library list for ICD %s\00", align 1
@.str.1120 = private unnamed_addr constant [55 x i8] c"loader_scanned_icd_add: Out of memory can't add ICD %s\00", align 1
@.str.1121 = private unnamed_addr constant [35 x i8] c"Found manifest file %s, version %s\00", align 1
@.str.1122 = private unnamed_addr constant [94 x i8] c"loaderAddLayerProperties: %s invalid layer manifest file version %d.%d.%d.  May cause errors.\00", align 1
@.str.1123 = private unnamed_addr constant [7 x i8] c"layers\00", align 1
@.str.1124 = private unnamed_addr constant [110 x i8] c"loaderAddLayerProperties: 'layers' tag not supported until file version 1.0.1, but %s is reporting version %s\00", align 1
@.str.1125 = private unnamed_addr constant [118 x i8] c"loaderAddLayerProperties: Can not find 'layers' array element %d object in manifest JSON file %s.  Skipping this file\00", align 1
@.str.1126 = private unnamed_addr constant [6 x i8] c"layer\00", align 1
@.str.1127 = private unnamed_addr constant [101 x i8] c"loaderAddLayerProperties: Can not find 'layer' object in manifest JSON file %s.  Skipping this file.\00", align 1
@.str.1128 = private unnamed_addr constant [145 x i8] c"loaderAddLayerProperties: Multiple 'layer' nodes are deprecated starting in file version \221.0.1\22.  Please use 'layers' : [] array instead in %s.\00", align 1
@.str.1129 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.1130 = private unnamed_addr constant [79 x i8] c"Didn't find required layer value %s in manifest JSON file, skipping this layer\00", align 1
@.str.1131 = private unnamed_addr constant [76 x i8] c"Problem accessing layer value %s in manifest JSON file, skipping this layer\00", align 1
@.str.1132 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1133 = private unnamed_addr constant [23 x i8] c"implementation_version\00", align 1
@.str.1134 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.1135 = private unnamed_addr constant [7 x i8] c"DEVICE\00", align 1
@.str.1136 = private unnamed_addr constant [49 x i8] c"Device layers are deprecated skipping this layer\00", align 1
@.str.1137 = private unnamed_addr constant [9 x i8] c"INSTANCE\00", align 1
@.str.1138 = private unnamed_addr constant [7 x i8] c"GLOBAL\00", align 1
@.str.1139 = private unnamed_addr constant [110 x i8] c"Override layer expiration date not added until version 1.1.2.  Please update JSON file version appropriately.\00", align 1
@.str.1140 = private unnamed_addr constant [16 x i8] c"expiration_date\00", align 1
@.str.1141 = private unnamed_addr constant [91 x i8] c"Problem accessing layer value 'expiration_date' in manifest JSON file, skipping this layer\00", align 1
@.str.1142 = private unnamed_addr constant [17 x i8] c"component_layers\00", align 1
@.str.1143 = private unnamed_addr constant [136 x i8] c"Indicating meta-layer-specific component_layers, but also defining layer library path.  Both are not compatible, so skipping this layer\00", align 1
@.str.1144 = private unnamed_addr constant [86 x i8] c"Problem accessing layer value library_path in manifest JSON file, skipping this layer\00", align 1
@.str.1145 = private unnamed_addr constant [84 x i8] c"Indicating meta-layer-specific component_layers, but using older JSON file version.\00", align 1
@.str.1146 = private unnamed_addr constant [26 x i8] c"Encountered meta-layer %s\00", align 1
@.str.1147 = private unnamed_addr constant [117 x i8] c"Layer missing both library_path and component_layers fields.  One or the other MUST be defined.  Skipping this layer\00", align 1
@.str.1148 = private unnamed_addr constant [19 x i8] c"blacklisted_layers\00", align 1
@.str.1149 = private unnamed_addr constant [127 x i8] c"Layer %s contains a blacklist, but a blacklist can only be provided by the override metalayer. This blacklist will be ignored.\00", align 1
@.str.1150 = private unnamed_addr constant [15 x i8] c"override_paths\00", align 1
@.str.1151 = private unnamed_addr constant [82 x i8] c"Indicating meta-layer-specific override paths, but using older JSON file version.\00", align 1
@.str.1152 = private unnamed_addr constant [20 x i8] c"disable_environment\00", align 1
@.str.1153 = private unnamed_addr constant [80 x i8] c"Didn't find required layer object %s in manifest JSON file, skipping this layer\00", align 1
@.str.1154 = private unnamed_addr constant [101 x i8] c"Didn't find required layer child value disable_environmentin manifest JSON file, skipping this layer\00", align 1
@.str.1155 = private unnamed_addr constant [10 x i8] c"functions\00", align 1
@.str.1156 = private unnamed_addr constant [277 x i8] c"Layer \22%s\22 using deprecated 'vkGetInstanceProcAddr' tag which was deprecated starting with JSON file version 1.1.0. The new vkNegotiateLoaderLayerInterfaceVersion function is preferred, though for compatibility reasons it may be desirable to continue using the deprecated tag.\00", align 1
@.str.1157 = private unnamed_addr constant [275 x i8] c"Layer \22%s\22 using deprecated 'vkGetDeviceProcAddr' tag which was deprecated starting with JSON file version 1.1.0. The new vkNegotiateLoaderLayerInterfaceVersion function is preferred, though for compatibility reasons it may be desirable to continue using the deprecated tag.\00", align 1
@.str.1158 = private unnamed_addr constant [20 x i8] c"instance_extensions\00", align 1
@.str.1159 = private unnamed_addr constant [13 x i8] c"spec_version\00", align 1
@.str.1160 = private unnamed_addr constant [18 x i8] c"device_extensions\00", align 1
@.str.1161 = private unnamed_addr constant [12 x i8] c"entrypoints\00", align 1
@.str.1162 = private unnamed_addr constant [19 x i8] c"enable_environment\00", align 1
@.str.1163 = private unnamed_addr constant [23 x i8] c"pre_instance_functions\00", align 1
@.str.1164 = private unnamed_addr constant [148 x i8] c"Found pre_instance_functions section in layer from \22%s\22. This section is only valid in manifest version 1.1.2 or later. The section will be ignored\00", align 1
@.str.1165 = private unnamed_addr constant [141 x i8] c"Found pre_instance_functions section in explicit layer from \22%s\22. This section is only valid in implicit layers. The section will be ignored\00", align 1
@.str.1166 = private unnamed_addr constant [35 x i8] c"vkEnumerateInstanceLayerProperties\00", align 1
@.str.1167 = private unnamed_addr constant [9 x i8] c"app_keys\00", align 1
@.str.1168 = private unnamed_addr constant [116 x i8] c"Layer %s contains app_keys, but any app_keys can only be provided by the override metalayer. These will be ignored.\00", align 1
@.str.1169 = private unnamed_addr constant [87 x i8] c"loaderGetNextLayerPropertySlot: Out of memory can not add any layer properties to list\00", align 1
@.str.1170 = private unnamed_addr constant [62 x i8] c"loaderGetNextLayerPropertySlot: realloc failed for layer list\00", align 1
@.str.1171 = private unnamed_addr constant [72 x i8] c"RemoveAllNonValidOverrideLayers: Failed to get executable path and name\00", align 1
@.str.1172 = private unnamed_addr constant [128 x i8] c"RemoveAllNonValidOverrideLayers: Multiple override layers where the samepath in app_keys was found. Using the first layer found\00", align 1
@.str.1173 = private unnamed_addr constant [107 x i8] c"RemoveAllNonValidOverrideLayers: Multiple global override layers found. Using the first global layer found\00", align 1
@.str.1174 = private unnamed_addr constant [40 x i8] c"Using the override layer for app key %s\00", align 1
@.str.1175 = private unnamed_addr constant [32 x i8] c"Using the global override layer\00", align 1
@.str.1176 = private unnamed_addr constant [15 x i8] c"/proc/self/exe\00", align 1
@.str.1177 = private unnamed_addr constant [74 x i8] c"Removing meta-layer %s from instance layer list since it appears invalid.\00", align 1
@.str.1178 = private unnamed_addr constant [111 x i8] c"verifyMetaLayerComponentLayers: Meta-layer %s can't find component layer %s at index %d.  Skipping this layer.\00", align 1
@.str.1179 = private unnamed_addr constant [124 x i8] c"verifyMetaLayerComponentLayers: Meta-layer %s can't find property for component layer %s at index %d.  Skipping this layer.\00", align 1
@.str.1180 = private unnamed_addr constant [136 x i8] c"verifyMetaLayerComponentLayers: Meta-layer uses API version %d.%d, but component layer %d uses API version %d.%d.  Skipping this layer.\00", align 1
@.str.1181 = private unnamed_addr constant [122 x i8] c"verifyMetaLayerComponentLayers: Meta-layer %s lists itself in its component layer list at index %d.  Skipping this layer.\00", align 1
@.str.1182 = private unnamed_addr constant [87 x i8] c"verifyMetaLayerComponentLayers: Adding meta-layer %s which also contains meta-layer %s\00", align 1
@.str.1183 = private unnamed_addr constant [90 x i8] c"Meta-layer %s component layer %s can not find all component layers.  Skipping this layer.\00", align 1
@.str.1184 = private unnamed_addr constant [62 x i8] c"Meta-layer %s component layer %s adding instance extension %s\00", align 1
@.str.1185 = private unnamed_addr constant [60 x i8] c"Meta-layer %s component layer %s adding device extension %s\00", align 1
@.str.1186 = private unnamed_addr constant [58 x i8] c"Meta-layer %s all %d component layers appear to be valid.\00", align 1
@.str.1187 = private unnamed_addr constant [69 x i8] c"loader_add_dev_ext_table: Failed to allocate memory for func_name %s\00", align 1
@.str.1188 = private unnamed_addr constant [82 x i8] c"loader_add_dev_ext_table: Failed to allocate memory for list index of function %s\00", align 1
@.str.1189 = private unnamed_addr constant [84 x i8] c"loader_add_dev_ext_table: Failed to reallocate memory for list index of function %s\00", align 1
@.str.1190 = private unnamed_addr constant [73 x i8] c"loader_add_dev_ext_table:  Could not insert into hash table; is it full?\00", align 1
@.str.1191 = private unnamed_addr constant [68 x i8] c"loader_add_phys_dev_ext_table() can't allocate memory for func_name\00", align 1
@.str.1192 = private unnamed_addr constant [59 x i8] c"loader_add_phys_dev_ext_table() can't allocate list memory\00", align 1
@.str.1193 = private unnamed_addr constant [61 x i8] c"loader_add_phys_dev_ext_table() can't reallocate list memory\00", align 1
@.str.1194 = private unnamed_addr constant [61 x i8] c"loader_add_dev_ext_table() can't reallocate func_name memory\00", align 1
@.str.1195 = private unnamed_addr constant [77 x i8] c"loader_add_phys_dev_ext_table() couldn't insert into hash table; is it full?\00", align 1
@.str.1196 = private unnamed_addr constant [27 x i8] c"Unloading layer library %s\00", align 1
@.str.1197 = private unnamed_addr constant [51 x i8] c"loaderAddLayerNamesToList: Unable to find layer %s\00", align 1
@.str.1198 = private unnamed_addr constant [34 x i8] c"vk_layerGetPhysicalDeviceProcAddr\00", align 1
@.str.1199 = private unnamed_addr constant [52 x i8] c"loader_gpa_instance_internal() unrecognized name %s\00", align 1
@.str.1200 = private unnamed_addr constant [56 x i8] c"loader_gpdpa_instance_terminator() unrecognized name %s\00", align 1
@.str.1201 = private unnamed_addr constant [54 x i8] c"loader_gpdpa_instance_internal() unrecognized name %s\00", align 1
@.str.1202 = private unnamed_addr constant [25 x i8] c"Loading layer library %s\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @loader_init_library, i8* null }]
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @loader_free_library, i8* null }]

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vkDevExtError(%struct.VkDevice_T* nocapture readonly) #0 {
  %2 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %3 = icmp eq %struct.loader_instance* %2, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %1
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %6

6:                                                ; preds = %41, %4
  %7 = phi %struct.loader_instance* [ %2, %4 ], [ %43, %41 ]
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 14
  %9 = load %struct.loader_icd_term*, %struct.loader_icd_term** %8, align 8
  %10 = icmp eq %struct.loader_icd_term* %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %6, %37
  %12 = phi %struct.loader_icd_term* [ %39, %37 ], [ %9, %6 ]
  %13 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 2
  %14 = load %struct.loader_device*, %struct.loader_device** %13, align 8
  %15 = icmp eq %struct.loader_device* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %11
  %17 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  br label %18

18:                                               ; preds = %33, %16
  %19 = phi %struct.loader_device* [ %14, %16 ], [ %35, %33 ]
  %20 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 2
  %21 = bitcast %struct.VkDevice_T** %20 to %struct.VkLayerDispatchTable_***
  %22 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %21, align 8
  %23 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %22, align 8
  %24 = icmp eq %struct.VkLayerDispatchTable_* %23, %17
  br i1 %24, label %45, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 1
  %27 = load %struct.VkDevice_T*, %struct.VkDevice_T** %26, align 8
  %28 = icmp eq %struct.VkDevice_T* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = bitcast %struct.VkDevice_T* %27 to %struct.VkLayerDispatchTable_**
  %31 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %30, align 8
  %32 = icmp eq %struct.VkLayerDispatchTable_* %31, %17
  br i1 %32, label %45, label %33

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 8
  %35 = load %struct.loader_device*, %struct.loader_device** %34, align 8
  %36 = icmp eq %struct.loader_device* %35, null
  br i1 %36, label %37, label %18

37:                                               ; preds = %33, %11
  %38 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 5
  %39 = load %struct.loader_icd_term*, %struct.loader_icd_term** %38, align 8
  %40 = icmp eq %struct.loader_icd_term* %39, null
  br i1 %40, label %41, label %11

41:                                               ; preds = %37, %6
  %42 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 12
  %43 = load %struct.loader_instance*, %struct.loader_instance** %42, align 8
  %44 = icmp eq %struct.loader_instance* %43, null
  br i1 %44, label %50, label %6

45:                                               ; preds = %18, %29
  %46 = icmp eq %struct.loader_icd_term* %12, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 1
  %49 = load %struct.loader_instance*, %struct.loader_instance** %48, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %49, i32 8, i32 undef, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str, i64 0, i64 0))
  br label %50

50:                                               ; preds = %41, %1, %45, %47
  ret i32 -7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.loader_icd_term* @loader_get_icd_and_device(i8* nocapture readonly, %struct.loader_device** nocapture, i32*) local_unnamed_addr #2 {
  store %struct.loader_device* null, %struct.loader_device** %1, align 8
  %4 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %5 = icmp eq %struct.loader_instance* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %0 to %struct.VkLayerDispatchTable_**
  br label %8

8:                                                ; preds = %6, %48
  %9 = phi %struct.loader_instance* [ %4, %6 ], [ %50, %48 ]
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 14
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = icmp eq %struct.loader_icd_term* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %8, %43
  %14 = phi %struct.loader_icd_term* [ %46, %43 ], [ %11, %8 ]
  %15 = phi i32 [ %44, %43 ], [ 0, %8 ]
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 2
  %17 = load %struct.loader_device*, %struct.loader_device** %16, align 8
  %18 = icmp eq %struct.loader_device* %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %13
  %20 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  br label %21

21:                                               ; preds = %19, %39
  %22 = phi %struct.loader_device* [ %17, %19 ], [ %41, %39 ]
  %23 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 2
  %24 = bitcast %struct.VkDevice_T** %23 to %struct.VkLayerDispatchTable_***
  %25 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %24, align 8
  %26 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %25, align 8
  %27 = icmp eq %struct.VkLayerDispatchTable_* %26, %20
  br i1 %27, label %36, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 1
  %30 = load %struct.VkDevice_T*, %struct.VkDevice_T** %29, align 8
  %31 = icmp eq %struct.VkDevice_T* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = bitcast %struct.VkDevice_T* %30 to %struct.VkLayerDispatchTable_**
  %34 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %33, align 8
  %35 = icmp eq %struct.VkLayerDispatchTable_* %34, %20
  br i1 %35, label %36, label %39

36:                                               ; preds = %32, %21
  store %struct.loader_device* %22, %struct.loader_device** %1, align 8
  %37 = icmp eq i32* %2, null
  br i1 %37, label %52, label %38

38:                                               ; preds = %36
  store i32 %15, i32* %2, align 4
  br label %52

39:                                               ; preds = %28, %32
  %40 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 8
  %41 = load %struct.loader_device*, %struct.loader_device** %40, align 8
  %42 = icmp eq %struct.loader_device* %41, null
  br i1 %42, label %43, label %21

43:                                               ; preds = %39, %13
  %44 = add i32 %15, 1
  %45 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 5
  %46 = load %struct.loader_icd_term*, %struct.loader_icd_term** %45, align 8
  %47 = icmp eq %struct.loader_icd_term* %46, null
  br i1 %47, label %48, label %13

48:                                               ; preds = %43, %8
  %49 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 12
  %50 = load %struct.loader_instance*, %struct.loader_instance** %49, align 8
  %51 = icmp eq %struct.loader_instance* %50, null
  br i1 %51, label %52, label %8

52:                                               ; preds = %48, %3, %36, %38
  %53 = phi %struct.loader_icd_term* [ %14, %38 ], [ %14, %36 ], [ null, %3 ], [ null, %48 ]
  ret %struct.loader_icd_term* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_log(%struct.loader_instance*, i32, i32, i8* nocapture readonly, ...) local_unnamed_addr #0 {
  %5 = alloca [512 x i8], align 16
  %6 = alloca [512 x i8], align 16
  %7 = alloca [1 x %struct.__va_list_tag], align 16
  %8 = alloca %struct.VkDebugUtilsMessengerCallbackDataEXT, align 8
  %9 = alloca %struct.VkDebugUtilsObjectNameInfoEXT, align 8
  %10 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 512, i1 false)
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 512, i1 false)
  %12 = bitcast [1 x %struct.__va_list_tag]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0
  %14 = bitcast [1 x %struct.__va_list_tag]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %12)
  %15 = call i32 @vsnprintf(i8* nonnull %10, i64 512, i8* %3, %struct.__va_list_tag* nonnull %13) #9
  %16 = icmp ugt i32 %15, 511
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 511
  store i8 0, i8* %18, align 1
  br label %19

19:                                               ; preds = %4, %17
  call void @llvm.va_end(i8* nonnull %12)
  %20 = icmp eq %struct.loader_instance* %0, null
  br i1 %20, label %59, label %21

21:                                               ; preds = %19
  %22 = bitcast %struct.VkDebugUtilsMessengerCallbackDataEXT* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 96, i1 false)
  %23 = bitcast %struct.VkDebugUtilsObjectNameInfoEXT* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 40, i1 false)
  %24 = and i32 %1, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %21
  %27 = and i32 %1, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %26
  %30 = and i32 %1, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = lshr i32 %1, 4
  %34 = and i32 %33, 1
  br label %35

35:                                               ; preds = %32, %29, %26, %21
  %36 = phi i32 [ 16, %21 ], [ 256, %26 ], [ 4096, %29 ], [ %34, %32 ]
  %37 = and i32 %1, 4
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i32 1, i32 4
  %40 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 0
  store i32 1000128003, i32* %40, align 8
  %41 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 2
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 3
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.916, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 5
  store i8* %10, i8** %45, align 8
  %46 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 6
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 7
  store %struct.VkDebugUtilsLabelEXT* null, %struct.VkDebugUtilsLabelEXT** %47, align 8
  %48 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 8
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 9
  store %struct.VkDebugUtilsLabelEXT* null, %struct.VkDebugUtilsLabelEXT** %49, align 8
  %50 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 10
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %8, i64 0, i32 11
  store %struct.VkDebugUtilsObjectNameInfoEXT* %9, %struct.VkDebugUtilsObjectNameInfoEXT** %51, align 8
  %52 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %9, i64 0, i32 0
  store i32 1000128000, i32* %52, align 8
  %53 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %9, i64 0, i32 1
  store i8* null, i8** %53, align 8
  %54 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %9, i64 0, i32 2
  store i32 1, i32* %54, align 8
  %55 = ptrtoint %struct.loader_instance* %0 to i64
  %56 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %9, i64 0, i32 3
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %9, i64 0, i32 4
  store i8* null, i8** %57, align 8
  %58 = call i32 @util_SubmitDebugUtilsMessageEXT(%struct.loader_instance* nonnull %0, i32 %36, i32 %39, %struct.VkDebugUtilsMessengerCallbackDataEXT* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %22) #9
  br label %59

59:                                               ; preds = %19, %35
  %60 = load i32, i32* @g_loader_log_msgs, align 4
  %61 = and i32 %60, %1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %139, label %63

63:                                               ; preds = %59
  store i8 0, i8* %11, align 16
  %64 = and i32 %1, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = call i64 @strlen(i8* nonnull %11)
  %68 = getelementptr [512 x i8], [512 x i8]* %6, i64 0, i64 %67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.917, i64 0, i64 0), i64 5, i1 false)
  br label %69

69:                                               ; preds = %63, %66
  %70 = phi i64 [ 507, %66 ], [ 511, %63 ]
  %71 = and i32 %1, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %69
  %74 = icmp eq i64 %70, 511
  br i1 %74, label %78, label %75

75:                                               ; preds = %73
  %76 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.918, i64 0, i64 0), i64 %70) #9
  %77 = add nsw i64 %70, -3
  br label %78

78:                                               ; preds = %73, %75
  %79 = phi i64 [ %77, %75 ], [ 511, %73 ]
  %80 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.919, i64 0, i64 0), i64 %79) #9
  %81 = add nsw i64 %79, -7
  br label %82

82:                                               ; preds = %69, %78
  %83 = phi i64 [ %81, %78 ], [ %70, %69 ]
  %84 = and i32 %1, 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %82
  %87 = icmp eq i64 %83, 511
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.918, i64 0, i64 0), i64 %83) #9
  %90 = add nsw i64 %83, -3
  br label %91

91:                                               ; preds = %86, %88
  %92 = phi i64 [ %90, %88 ], [ 511, %86 ]
  %93 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.920, i64 0, i64 0), i64 %92) #9
  %94 = add nsw i64 %92, -4
  br label %95

95:                                               ; preds = %82, %91
  %96 = phi i64 [ %94, %91 ], [ %83, %82 ]
  %97 = and i32 %1, 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = icmp eq i64 %96, 511
  br i1 %100, label %104, label %101

101:                                              ; preds = %99
  %102 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.918, i64 0, i64 0), i64 %96) #9
  %103 = add nsw i64 %96, -3
  br label %104

104:                                              ; preds = %99, %101
  %105 = phi i64 [ %103, %101 ], [ 511, %99 ]
  %106 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.921, i64 0, i64 0), i64 %105) #9
  %107 = add nsw i64 %105, -5
  br label %108

108:                                              ; preds = %95, %104
  %109 = phi i64 [ %107, %104 ], [ %96, %95 ]
  %110 = and i32 %1, 16
  %111 = icmp eq i32 %110, 0
  %112 = icmp eq i64 %109, 511
  br i1 %111, label %121, label %113

113:                                              ; preds = %108
  br i1 %112, label %117, label %114

114:                                              ; preds = %113
  %115 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.918, i64 0, i64 0), i64 %109) #9
  %116 = add nsw i64 %109, -3
  br label %117

117:                                              ; preds = %114, %113
  %118 = phi i64 [ %116, %114 ], [ 511, %113 ]
  %119 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.922, i64 0, i64 0), i64 %118) #9
  %120 = add nsw i64 %118, -5
  br label %122

121:                                              ; preds = %108
  br i1 %112, label %126, label %122

122:                                              ; preds = %117, %121
  %123 = phi i64 [ %120, %117 ], [ %109, %121 ]
  %124 = call i8* @strncat(i8* nonnull %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.923, i64 0, i64 0), i64 %123) #9
  %125 = add nsw i64 %123, -2
  br label %126

126:                                              ; preds = %122, %121
  %127 = phi i64 [ %125, %122 ], [ 511, %121 ]
  %128 = call i64 @strlen(i8* nonnull %10) #15
  %129 = icmp ugt i64 %128, %127
  br i1 %129, label %130, label %133

130:                                              ; preds = %126
  %131 = add nsw i64 %127, -1
  %132 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 %131
  store i8 0, i8* %132, align 1
  br label %133

133:                                              ; preds = %126, %130
  %134 = call i8* @strncat(i8* nonnull %11, i8* nonnull %10, i64 %127) #9
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %136 = call i32 @fputs(i8* nonnull %11, %struct._IO_FILE* %135) #16
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %138 = call i32 @fputc(i32 10, %struct._IO_FILE* %137) #16
  br label %139

139:                                              ; preds = %59, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %10) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @loader_icd_init_entries(%struct.loader_icd_term*, %struct.VkInstance_T*, void ()* (%struct.VkInstance_T*, i8*)*) local_unnamed_addr #0 {
  %4 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #9
  %5 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 1
  %6 = bitcast void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)** %5 to void ()**
  store void ()* %4, void ()** %6, align 8
  %7 = icmp eq void ()* %4, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %10 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %9, i32 2, i32 undef, i8* %10)
  br label %328

11:                                               ; preds = %3
  %12 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #9
  %13 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 2
  %14 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %13 to void ()**
  store void ()* %12, void ()** %14, align 8
  %15 = icmp eq void ()* %12, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %18 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %17, i32 2, i32 undef, i8* %18)
  br label %328

19:                                               ; preds = %11
  %20 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #9
  %21 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 3
  %22 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)** %21 to void ()**
  store void ()* %20, void ()** %22, align 8
  %23 = icmp eq void ()* %20, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %26 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %25, i32 2, i32 undef, i8* %26)
  br label %328

27:                                               ; preds = %19
  %28 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #9
  %29 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 4
  %30 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)** %29 to void ()**
  store void ()* %28, void ()** %30, align 8
  %31 = icmp eq void ()* %28, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %34 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 2, i32 undef, i8* %34)
  br label %328

35:                                               ; preds = %27
  %36 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #9
  %37 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 5
  %38 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)** %37 to void ()**
  store void ()* %36, void ()** %38, align 8
  %39 = icmp eq void ()* %36, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %42 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %41, i32 2, i32 undef, i8* %42)
  br label %328

43:                                               ; preds = %35
  %44 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #9
  %45 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 6
  %46 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %45 to void ()**
  store void ()* %44, void ()** %46, align 8
  %47 = icmp eq void ()* %44, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %50 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %49, i32 2, i32 undef, i8* %50)
  br label %328

51:                                               ; preds = %43
  %52 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #9
  %53 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 7
  %54 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %53 to void ()**
  store void ()* %52, void ()** %54, align 8
  %55 = icmp eq void ()* %52, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %58 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %57, i32 2, i32 undef, i8* %58)
  br label %328

59:                                               ; preds = %51
  %60 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #9
  %61 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 8
  %62 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %61 to void ()**
  store void ()* %60, void ()** %62, align 8
  %63 = icmp eq void ()* %60, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %66 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %65, i32 2, i32 undef, i8* %66)
  br label %328

67:                                               ; preds = %59
  %68 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #9
  %69 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 9
  %70 = bitcast void ()* (%struct.VkDevice_T*, i8*)** %69 to void ()**
  store void ()* %68, void ()** %70, align 8
  %71 = icmp eq void ()* %68, null
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %74 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %73, i32 2, i32 undef, i8* %74)
  br label %328

75:                                               ; preds = %67
  %76 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #9
  %77 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 10
  %78 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)** %77 to void ()**
  store void ()* %76, void ()** %78, align 8
  %79 = icmp eq void ()* %76, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %82 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %81, i32 2, i32 undef, i8* %82)
  br label %328

83:                                               ; preds = %75
  %84 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #9
  %85 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 12
  %86 = bitcast i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %85 to void ()**
  store void ()* %84, void ()** %86, align 8
  %87 = icmp eq void ()* %84, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %90 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %89, i32 2, i32 undef, i8* %90)
  br label %328

91:                                               ; preds = %83
  %92 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0)) #9
  %93 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 14
  %94 = bitcast void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)** %93 to void ()**
  store void ()* %92, void ()** %94, align 8
  %95 = icmp eq void ()* %92, null
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = bitcast %struct.VkInstance_T* %1 to %struct.loader_instance*
  %98 = tail call i8* @dlerror() #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %97, i32 2, i32 undef, i8* %98)
  br label %328

99:                                               ; preds = %91
  %100 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0)) #9
  %101 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 16
  %102 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %101 to void ()**
  store void ()* %100, void ()** %102, align 8
  %103 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0)) #9
  %104 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 17
  %105 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %104 to void ()**
  store void ()* %103, void ()** %105, align 8
  %106 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0)) #9
  %107 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 18
  %108 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %107 to void ()**
  store void ()* %106, void ()** %108, align 8
  %109 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0)) #9
  %110 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 19
  %111 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %110 to void ()**
  store void ()* %109, void ()** %111, align 8
  %112 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0)) #9
  %113 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 20
  %114 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %113 to void ()**
  store void ()* %112, void ()** %114, align 8
  %115 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0)) #9
  %116 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 21
  %117 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** %116 to void ()**
  store void ()* %115, void ()** %117, align 8
  %118 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0)) #9
  %119 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 22
  %120 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %119 to void ()**
  store void ()* %118, void ()** %120, align 8
  %121 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i64 0, i64 0)) #9
  %122 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 23
  %123 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** %122 to void ()**
  store void ()* %121, void ()** %123, align 8
  %124 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0)) #9
  %125 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 24
  %126 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** %125 to void ()**
  store void ()* %124, void ()** %126, align 8
  %127 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.22, i64 0, i64 0)) #9
  %128 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 25
  %129 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** %128 to void ()**
  store void ()* %127, void ()** %129, align 8
  %130 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.23, i64 0, i64 0)) #9
  %131 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 26
  %132 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** %131 to void ()**
  store void ()* %130, void ()** %132, align 8
  %133 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #9
  %134 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 27
  %135 = bitcast void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)** %134 to void ()**
  store void ()* %133, void ()** %135, align 8
  %136 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i64 0, i64 0)) #9
  %137 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 28
  %138 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)** %137 to void ()**
  store void ()* %136, void ()** %138, align 8
  %139 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0)) #9
  %140 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 29
  %141 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)** %140 to void ()**
  store void ()* %139, void ()** %141, align 8
  %142 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.27, i64 0, i64 0)) #9
  %143 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 30
  %144 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)** %143 to void ()**
  store void ()* %142, void ()** %144, align 8
  %145 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.28, i64 0, i64 0)) #9
  %146 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 31
  %147 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)** %146 to void ()**
  store void ()* %145, void ()** %147, align 8
  %148 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0)) #9
  %149 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 32
  %150 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %149 to void ()**
  store void ()* %148, void ()** %150, align 8
  %151 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30, i64 0, i64 0)) #9
  %152 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 33
  %153 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)** %152 to void ()**
  store void ()* %151, void ()** %153, align 8
  %154 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31, i64 0, i64 0)) #9
  %155 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 34
  %156 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)** %155 to void ()**
  store void ()* %154, void ()** %156, align 8
  %157 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32, i64 0, i64 0)) #9
  %158 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 35
  %159 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)** %158 to void ()**
  store void ()* %157, void ()** %159, align 8
  %160 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.33, i64 0, i64 0)) #9
  %161 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 36
  %162 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)** %161 to void ()**
  store void ()* %160, void ()** %162, align 8
  %163 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0)) #9
  %164 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 37
  %165 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)** %164 to void ()**
  store void ()* %163, void ()** %165, align 8
  %166 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0)) #9
  %167 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 38
  %168 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)** %167 to void ()**
  store void ()* %166, void ()** %168, align 8
  %169 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0)) #9
  %170 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 39
  %171 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)** %170 to void ()**
  store void ()* %169, void ()** %171, align 8
  %172 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0)) #9
  %173 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 40
  %174 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)** %173 to void ()**
  store void ()* %172, void ()** %174, align 8
  %175 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38, i64 0, i64 0)) #9
  %176 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 41
  %177 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %176 to void ()**
  store void ()* %175, void ()** %177, align 8
  %178 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i64 0, i64 0)) #9
  %179 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 42
  %180 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %179 to void ()**
  store void ()* %178, void ()** %180, align 8
  %181 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i64 0, i64 0)) #9
  %182 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 43
  %183 = bitcast i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %182 to void ()**
  store void ()* %181, void ()** %183, align 8
  %184 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.41, i64 0, i64 0)) #9
  %185 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 44
  %186 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)** %185 to void ()**
  store void ()* %184, void ()** %186, align 8
  %187 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i64 0, i64 0)) #9
  %188 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 45
  %189 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)** %188 to void ()**
  store void ()* %187, void ()** %189, align 8
  %190 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0)) #9
  %191 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 46
  %192 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)** %191 to void ()**
  store void ()* %190, void ()** %192, align 8
  %193 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.44, i64 0, i64 0)) #9
  %194 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 47
  %195 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %194 to void ()**
  store void ()* %193, void ()** %195, align 8
  %196 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45, i64 0, i64 0)) #9
  %197 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 48
  %198 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %197 to void ()**
  store void ()* %196, void ()** %198, align 8
  %199 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.46, i64 0, i64 0)) #9
  %200 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 49
  %201 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %200 to void ()**
  store void ()* %199, void ()** %201, align 8
  %202 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.47, i64 0, i64 0)) #9
  %203 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 50
  %204 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %203 to void ()**
  store void ()* %202, void ()** %204, align 8
  %205 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.48, i64 0, i64 0)) #9
  %206 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 51
  %207 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** %206 to void ()**
  store void ()* %205, void ()** %207, align 8
  %208 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.49, i64 0, i64 0)) #9
  %209 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 52
  %210 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %209 to void ()**
  store void ()* %208, void ()** %210, align 8
  %211 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0)) #9
  %212 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 53
  %213 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** %212 to void ()**
  store void ()* %211, void ()** %213, align 8
  %214 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #9
  %215 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 54
  %216 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %215 to void ()**
  store void ()* %214, void ()** %216, align 8
  %217 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i64 0, i64 0)) #9
  %218 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 55
  %219 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** %218 to void ()**
  store void ()* %217, void ()** %219, align 8
  %220 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.53, i64 0, i64 0)) #9
  %221 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 56
  %222 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** %221 to void ()**
  store void ()* %220, void ()** %222, align 8
  %223 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.54, i64 0, i64 0)) #9
  %224 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 57
  %225 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** %224 to void ()**
  store void ()* %223, void ()** %225, align 8
  %226 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.55, i64 0, i64 0)) #9
  %227 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 58
  %228 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)** %227 to void ()**
  store void ()* %226, void ()** %228, align 8
  %229 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.56, i64 0, i64 0)) #9
  %230 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 59
  %231 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)** %230 to void ()**
  store void ()* %229, void ()** %231, align 8
  %232 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0)) #9
  %233 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 60
  %234 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)** %233 to void ()**
  store void ()* %232, void ()** %234, align 8
  %235 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0)) #9
  %236 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 61
  %237 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)** %236 to void ()**
  store void ()* %235, void ()** %237, align 8
  %238 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.59, i64 0, i64 0)) #9
  %239 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 62
  %240 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)** %239 to void ()**
  store void ()* %238, void ()** %240, align 8
  %241 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.60, i64 0, i64 0)) #9
  %242 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 63
  %243 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)** %242 to void ()**
  store void ()* %241, void ()** %243, align 8
  %244 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.61, i64 0, i64 0)) #9
  %245 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 64
  %246 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)** %245 to void ()**
  store void ()* %244, void ()** %246, align 8
  %247 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.62, i64 0, i64 0)) #9
  %248 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 65
  %249 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)** %248 to void ()**
  store void ()* %247, void ()** %249, align 8
  %250 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.63, i64 0, i64 0)) #9
  %251 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 66
  %252 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)** %251 to void ()**
  store void ()* %250, void ()** %252, align 8
  %253 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %254 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 67
  %255 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)** %254 to void ()**
  store void ()* %253, void ()** %255, align 8
  %256 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.65, i64 0, i64 0)) #9
  %257 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 68
  %258 = bitcast void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)** %257 to void ()**
  store void ()* %256, void ()** %258, align 8
  %259 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i64 0, i64 0)) #9
  %260 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 69
  %261 = bitcast void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)** %260 to void ()**
  store void ()* %259, void ()** %261, align 8
  %262 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0)) #9
  %263 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 70
  %264 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)** %263 to void ()**
  store void ()* %262, void ()** %264, align 8
  %265 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0)) #9
  %266 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 71
  %267 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)** %266 to void ()**
  store void ()* %265, void ()** %267, align 8
  %268 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.69, i64 0, i64 0)) #9
  %269 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 72
  %270 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)** %269 to void ()**
  store void ()* %268, void ()** %270, align 8
  %271 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i64 0, i64 0)) #9
  %272 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 73
  %273 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)** %272 to void ()**
  store void ()* %271, void ()** %273, align 8
  %274 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.71, i64 0, i64 0)) #9
  %275 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 74
  %276 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)** %275 to void ()**
  store void ()* %274, void ()** %276, align 8
  %277 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.72, i64 0, i64 0)) #9
  %278 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 75
  %279 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)** %278 to void ()**
  store void ()* %277, void ()** %279, align 8
  %280 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0)) #9
  %281 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 76
  %282 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)** %281 to void ()**
  store void ()* %280, void ()** %282, align 8
  %283 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74, i64 0, i64 0)) #9
  %284 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 77
  %285 = bitcast void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %284 to void ()**
  store void ()* %283, void ()** %285, align 8
  %286 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i64 0, i64 0)) #9
  %287 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 78
  %288 = bitcast void (%struct.VkQueue_T*)** %287 to void ()**
  store void ()* %286, void ()** %288, align 8
  %289 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0)) #9
  %290 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 79
  %291 = bitcast void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %290 to void ()**
  store void ()* %289, void ()** %291, align 8
  %292 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i64 0, i64 0)) #9
  %293 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 80
  %294 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %293 to void ()**
  store void ()* %292, void ()** %294, align 8
  %295 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0)) #9
  %296 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 81
  %297 = bitcast void (%struct.VkCommandBuffer_T*)** %296 to void ()**
  store void ()* %295, void ()** %297, align 8
  %298 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79, i64 0, i64 0)) #9
  %299 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 82
  %300 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %299 to void ()**
  store void ()* %298, void ()** %300, align 8
  %301 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.80, i64 0, i64 0)) #9
  %302 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 83
  %303 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)** %302 to void ()**
  store void ()* %301, void ()** %303, align 8
  %304 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i64 0, i64 0)) #9
  %305 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 84
  %306 = bitcast void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)** %305 to void ()**
  store void ()* %304, void ()** %306, align 8
  %307 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0)) #9
  %308 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 85
  %309 = bitcast void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)** %308 to void ()**
  store void ()* %307, void ()** %309, align 8
  %310 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.83, i64 0, i64 0)) #9
  %311 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 86
  %312 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)** %311 to void ()**
  store void ()* %310, void ()** %312, align 8
  %313 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.84, i64 0, i64 0)) #9
  %314 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 87
  %315 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)** %314 to void ()**
  store void ()* %313, void ()** %315, align 8
  %316 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.85, i64 0, i64 0)) #9
  %317 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 88
  %318 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)** %317 to void ()**
  store void ()* %316, void ()** %318, align 8
  %319 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.86, i64 0, i64 0)) #9
  %320 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 89
  %321 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)** %320 to void ()**
  store void ()* %319, void ()** %321, align 8
  %322 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.87, i64 0, i64 0)) #9
  %323 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 90
  %324 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)** %323 to void ()**
  store void ()* %322, void ()** %324, align 8
  %325 = tail call void ()* %2(%struct.VkInstance_T* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0)) #9
  %326 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %0, i64 0, i32 4, i32 91
  %327 = bitcast i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %326 to void ()**
  store void ()* %325, void ()** %327, align 8
  br label %328

328:                                              ; preds = %99, %96, %88, %80, %72, %64, %56, %48, %40, %32, %24, %16, %8
  %329 = phi i1 [ true, %99 ], [ false, %96 ], [ false, %88 ], [ false, %80 ], [ false, %72 ], [ false, %64 ], [ false, %56 ], [ false, %48 ], [ false, %40 ], [ false, %32 ], [ false, %24 ], [ false, %16 ], [ false, %8 ]
  ret i1 %329
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_init_device_dispatch_table(%struct.loader_dev_dispatch_table*, void ()* (%struct.VkDevice_T*, i8*)*, %struct.VkDevice_T*) local_unnamed_addr #0 {
  br label %4

4:                                                ; preds = %4, %3
  %5 = phi i64 [ 0, %3 ], [ %15, %4 ]
  %6 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = bitcast i32 (%struct.VkDevice_T*)** %6 to <2 x i32 (%struct.VkDevice_T*)*>*
  store <2 x i32 (%struct.VkDevice_T*)*> <i32 (%struct.VkDevice_T*)* @vkDevExtError, i32 (%struct.VkDevice_T*)* @vkDevExtError>, <2 x i32 (%struct.VkDevice_T*)*>* %7, align 8
  %8 = getelementptr inbounds i32 (%struct.VkDevice_T*)*, i32 (%struct.VkDevice_T*)** %6, i64 2
  %9 = bitcast i32 (%struct.VkDevice_T*)** %8 to <2 x i32 (%struct.VkDevice_T*)*>*
  store <2 x i32 (%struct.VkDevice_T*)*> <i32 (%struct.VkDevice_T*)* @vkDevExtError, i32 (%struct.VkDevice_T*)* @vkDevExtError>, <2 x i32 (%struct.VkDevice_T*)*>* %9, align 8
  %10 = or i64 %5, 4
  %11 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 1, i32 0, i64 %10
  %12 = bitcast i32 (%struct.VkDevice_T*)** %11 to <2 x i32 (%struct.VkDevice_T*)*>*
  store <2 x i32 (%struct.VkDevice_T*)*> <i32 (%struct.VkDevice_T*)* @vkDevExtError, i32 (%struct.VkDevice_T*)* @vkDevExtError>, <2 x i32 (%struct.VkDevice_T*)*>* %12, align 8
  %13 = getelementptr inbounds i32 (%struct.VkDevice_T*)*, i32 (%struct.VkDevice_T*)** %11, i64 2
  %14 = bitcast i32 (%struct.VkDevice_T*)** %13 to <2 x i32 (%struct.VkDevice_T*)*>*
  store <2 x i32 (%struct.VkDevice_T*)*> <i32 (%struct.VkDevice_T*)* @vkDevExtError, i32 (%struct.VkDevice_T*)* @vkDevExtError>, <2 x i32 (%struct.VkDevice_T*)*>* %14, align 8
  %15 = add nuw nsw i64 %5, 8
  %16 = icmp eq i64 %15, 248
  br i1 %16, label %17, label %4, !llvm.loop !2

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 1, i32 0, i64 248
  store i32 (%struct.VkDevice_T*)* @vkDevExtError, i32 (%struct.VkDevice_T*)** %18, align 8
  %19 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 1, i32 0, i64 249
  store i32 (%struct.VkDevice_T*)* @vkDevExtError, i32 (%struct.VkDevice_T*)** %19, align 8
  %20 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 0
  store void ()* (%struct.VkDevice_T*, i8*)* %1, void ()* (%struct.VkDevice_T*, i8*)** %20, align 8
  %21 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0)) #9
  %22 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 1
  %23 = bitcast void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)** %22 to void ()**
  store void ()* %21, void ()** %23, align 8
  %24 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0)) #9
  %25 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 2
  %26 = bitcast void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)** %25 to void ()**
  store void ()* %24, void ()** %26, align 8
  %27 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.91, i64 0, i64 0)) #9
  %28 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 3
  %29 = bitcast i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %28 to void ()**
  store void ()* %27, void ()** %29, align 8
  %30 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i64 0, i64 0)) #9
  %31 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 4
  %32 = bitcast i32 (%struct.VkQueue_T*)** %31 to void ()**
  store void ()* %30, void ()** %32, align 8
  %33 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93, i64 0, i64 0)) #9
  %34 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 5
  %35 = bitcast i32 (%struct.VkDevice_T*)** %34 to void ()**
  store void ()* %33, void ()** %35, align 8
  %36 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.94, i64 0, i64 0)) #9
  %37 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 6
  %38 = bitcast i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)** %37 to void ()**
  store void ()* %36, void ()** %38, align 8
  %39 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)) #9
  %40 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 7
  %41 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %40 to void ()**
  store void ()* %39, void ()** %41, align 8
  %42 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.96, i64 0, i64 0)) #9
  %43 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 8
  %44 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)** %43 to void ()**
  store void ()* %42, void ()** %44, align 8
  %45 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i64 0, i64 0)) #9
  %46 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 9
  %47 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)** %46 to void ()**
  store void ()* %45, void ()** %47, align 8
  %48 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.98, i64 0, i64 0)) #9
  %49 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 10
  %50 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %49 to void ()**
  store void ()* %48, void ()** %50, align 8
  %51 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.99, i64 0, i64 0)) #9
  %52 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 11
  %53 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %52 to void ()**
  store void ()* %51, void ()** %53, align 8
  %54 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.100, i64 0, i64 0)) #9
  %55 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 12
  %56 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)** %55 to void ()**
  store void ()* %54, void ()** %56, align 8
  %57 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.101, i64 0, i64 0)) #9
  %58 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 13
  %59 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)** %58 to void ()**
  store void ()* %57, void ()** %59, align 8
  %60 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.102, i64 0, i64 0)) #9
  %61 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 14
  %62 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)** %61 to void ()**
  store void ()* %60, void ()** %62, align 8
  %63 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.103, i64 0, i64 0)) #9
  %64 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 15
  %65 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)** %64 to void ()**
  store void ()* %63, void ()** %65, align 8
  %66 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i64 0, i64 0)) #9
  %67 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 16
  %68 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** %67 to void ()**
  store void ()* %66, void ()** %68, align 8
  %69 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.105, i64 0, i64 0)) #9
  %70 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 17
  %71 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)** %70 to void ()**
  store void ()* %69, void ()** %71, align 8
  %72 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.106, i64 0, i64 0)) #9
  %73 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 18
  %74 = bitcast i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)** %73 to void ()**
  store void ()* %72, void ()** %74, align 8
  %75 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.107, i64 0, i64 0)) #9
  %76 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 19
  %77 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %76 to void ()**
  store void ()* %75, void ()** %77, align 8
  %78 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.108, i64 0, i64 0)) #9
  %79 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 20
  %80 = bitcast void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** %79 to void ()**
  store void ()* %78, void ()** %80, align 8
  %81 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.109, i64 0, i64 0)) #9
  %82 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 21
  %83 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)** %82 to void ()**
  store void ()* %81, void ()** %83, align 8
  %84 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i64 0, i64 0)) #9
  %85 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 22
  %86 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFence_T*)** %85 to void ()**
  store void ()* %84, void ()** %86, align 8
  %87 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.111, i64 0, i64 0)) #9
  %88 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 23
  %89 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)** %88 to void ()**
  store void ()* %87, void ()** %89, align 8
  %90 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.112, i64 0, i64 0)) #9
  %91 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 24
  %92 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)** %91 to void ()**
  store void ()* %90, void ()** %92, align 8
  %93 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.113, i64 0, i64 0)) #9
  %94 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 25
  %95 = bitcast void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)** %94 to void ()**
  store void ()* %93, void ()** %95, align 8
  %96 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i64 0, i64 0)) #9
  %97 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 26
  %98 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)** %97 to void ()**
  store void ()* %96, void ()** %98, align 8
  %99 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.115, i64 0, i64 0)) #9
  %100 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 27
  %101 = bitcast void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)** %100 to void ()**
  store void ()* %99, void ()** %101, align 8
  %102 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.116, i64 0, i64 0)) #9
  %103 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 28
  %104 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)** %103 to void ()**
  store void ()* %102, void ()** %104, align 8
  %105 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.117, i64 0, i64 0)) #9
  %106 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 29
  %107 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)** %106 to void ()**
  store void ()* %105, void ()** %107, align 8
  %108 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i64 0, i64 0)) #9
  %109 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 30
  %110 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)** %109 to void ()**
  store void ()* %108, void ()** %110, align 8
  %111 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.119, i64 0, i64 0)) #9
  %112 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 31
  %113 = bitcast i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)** %112 to void ()**
  store void ()* %111, void ()** %113, align 8
  %114 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.120, i64 0, i64 0)) #9
  %115 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 32
  %116 = bitcast void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)** %115 to void ()**
  store void ()* %114, void ()** %116, align 8
  %117 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.121, i64 0, i64 0)) #9
  %118 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 33
  %119 = bitcast i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)** %118 to void ()**
  store void ()* %117, void ()** %119, align 8
  %120 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.122, i64 0, i64 0)) #9
  %121 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 34
  %122 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)** %121 to void ()**
  store void ()* %120, void ()** %122, align 8
  %123 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.123, i64 0, i64 0)) #9
  %124 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 35
  %125 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** %124 to void ()**
  store void ()* %123, void ()** %125, align 8
  %126 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.124, i64 0, i64 0)) #9
  %127 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 36
  %128 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)** %127 to void ()**
  store void ()* %126, void ()** %128, align 8
  %129 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.125, i64 0, i64 0)) #9
  %130 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 37
  %131 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)** %130 to void ()**
  store void ()* %129, void ()** %131, align 8
  %132 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i64 0, i64 0)) #9
  %133 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 38
  %134 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)** %133 to void ()**
  store void ()* %132, void ()** %134, align 8
  %135 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #9
  %136 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 39
  %137 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %136 to void ()**
  store void ()* %135, void ()** %137, align 8
  %138 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.128, i64 0, i64 0)) #9
  %139 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 40
  %140 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)** %139 to void ()**
  store void ()* %138, void ()** %140, align 8
  %141 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)) #9
  %142 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 41
  %143 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)** %142 to void ()**
  store void ()* %141, void ()** %143, align 8
  %144 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.130, i64 0, i64 0)) #9
  %145 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 42
  %146 = bitcast void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)** %145 to void ()**
  store void ()* %144, void ()** %146, align 8
  %147 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.131, i64 0, i64 0)) #9
  %148 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 43
  %149 = bitcast i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)** %148 to void ()**
  store void ()* %147, void ()** %149, align 8
  %150 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.132, i64 0, i64 0)) #9
  %151 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 44
  %152 = bitcast void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %151 to void ()**
  store void ()* %150, void ()** %152, align 8
  %153 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.133, i64 0, i64 0)) #9
  %154 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 45
  %155 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)** %154 to void ()**
  store void ()* %153, void ()** %155, align 8
  %156 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.134, i64 0, i64 0)) #9
  %157 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 46
  %158 = bitcast void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)** %157 to void ()**
  store void ()* %156, void ()** %158, align 8
  %159 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.135, i64 0, i64 0)) #9
  %160 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 47
  %161 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)** %160 to void ()**
  store void ()* %159, void ()** %161, align 8
  %162 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.136, i64 0, i64 0)) #9
  %163 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 48
  %164 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)** %163 to void ()**
  store void ()* %162, void ()** %164, align 8
  %165 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.137, i64 0, i64 0)) #9
  %166 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 49
  %167 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %166 to void ()**
  store void ()* %165, void ()** %167, align 8
  %168 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.138, i64 0, i64 0)) #9
  %169 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 50
  %170 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %169 to void ()**
  store void ()* %168, void ()** %170, align 8
  %171 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i64 0, i64 0)) #9
  %172 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 51
  %173 = bitcast void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)** %172 to void ()**
  store void ()* %171, void ()** %173, align 8
  %174 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.140, i64 0, i64 0)) #9
  %175 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 52
  %176 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)** %175 to void ()**
  store void ()* %174, void ()** %176, align 8
  %177 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.141, i64 0, i64 0)) #9
  %178 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 53
  %179 = bitcast void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %178 to void ()**
  store void ()* %177, void ()** %179, align 8
  %180 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.142, i64 0, i64 0)) #9
  %181 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 54
  %182 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)** %181 to void ()**
  store void ()* %180, void ()** %182, align 8
  %183 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.143, i64 0, i64 0)) #9
  %184 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 55
  %185 = bitcast void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)** %184 to void ()**
  store void ()* %183, void ()** %185, align 8
  %186 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.144, i64 0, i64 0)) #9
  %187 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 56
  %188 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)** %187 to void ()**
  store void ()* %186, void ()** %188, align 8
  %189 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i64 0, i64 0)) #9
  %190 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 57
  %191 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)** %190 to void ()**
  store void ()* %189, void ()** %191, align 8
  %192 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.146, i64 0, i64 0)) #9
  %193 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 58
  %194 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)** %193 to void ()**
  store void ()* %192, void ()** %194, align 8
  %195 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.147, i64 0, i64 0)) #9
  %196 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 59
  %197 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)** %196 to void ()**
  store void ()* %195, void ()** %197, align 8
  %198 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.148, i64 0, i64 0)) #9
  %199 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 60
  %200 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)** %199 to void ()**
  store void ()* %198, void ()** %200, align 8
  %201 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.149, i64 0, i64 0)) #9
  %202 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 61
  %203 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)** %202 to void ()**
  store void ()* %201, void ()** %203, align 8
  %204 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.150, i64 0, i64 0)) #9
  %205 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 62
  %206 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)** %205 to void ()**
  store void ()* %204, void ()** %206, align 8
  %207 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i64 0, i64 0)) #9
  %208 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 63
  %209 = bitcast void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)** %208 to void ()**
  store void ()* %207, void ()** %209, align 8
  %210 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0)) #9
  %211 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 64
  %212 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)** %211 to void ()**
  store void ()* %210, void ()** %212, align 8
  %213 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.153, i64 0, i64 0)) #9
  %214 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 65
  %215 = bitcast void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)** %214 to void ()**
  store void ()* %213, void ()** %215, align 8
  %216 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.154, i64 0, i64 0)) #9
  %217 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 66
  %218 = bitcast i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %217 to void ()**
  store void ()* %216, void ()** %218, align 8
  %219 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.155, i64 0, i64 0)) #9
  %220 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 67
  %221 = bitcast void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)** %220 to void ()**
  store void ()* %219, void ()** %221, align 8
  %222 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.156, i64 0, i64 0)) #9
  %223 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 68
  %224 = bitcast void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)** %223 to void ()**
  store void ()* %222, void ()** %224, align 8
  %225 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.157, i64 0, i64 0)) #9
  %226 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 69
  %227 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)** %226 to void ()**
  store void ()* %225, void ()** %227, align 8
  %228 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.158, i64 0, i64 0)) #9
  %229 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 70
  %230 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)** %229 to void ()**
  store void ()* %228, void ()** %230, align 8
  %231 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.159, i64 0, i64 0)) #9
  %232 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 71
  %233 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)** %232 to void ()**
  store void ()* %231, void ()** %233, align 8
  %234 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.160, i64 0, i64 0)) #9
  %235 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 72
  %236 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)** %235 to void ()**
  store void ()* %234, void ()** %236, align 8
  %237 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.161, i64 0, i64 0)) #9
  %238 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 73
  %239 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)** %238 to void ()**
  store void ()* %237, void ()** %239, align 8
  %240 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.162, i64 0, i64 0)) #9
  %241 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 74
  %242 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)** %241 to void ()**
  store void ()* %240, void ()** %242, align 8
  %243 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.163, i64 0, i64 0)) #9
  %244 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 75
  %245 = bitcast i32 (%struct.VkCommandBuffer_T*)** %244 to void ()**
  store void ()* %243, void ()** %245, align 8
  %246 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.164, i64 0, i64 0)) #9
  %247 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 76
  %248 = bitcast i32 (%struct.VkCommandBuffer_T*, i32)** %247 to void ()**
  store void ()* %246, void ()** %248, align 8
  %249 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.165, i64 0, i64 0)) #9
  %250 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 77
  %251 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)** %250 to void ()**
  store void ()* %249, void ()** %251, align 8
  %252 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.166, i64 0, i64 0)) #9
  %253 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 78
  %254 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)** %253 to void ()**
  store void ()* %252, void ()** %254, align 8
  %255 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.167, i64 0, i64 0)) #9
  %256 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 79
  %257 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %256 to void ()**
  store void ()* %255, void ()** %257, align 8
  %258 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.168, i64 0, i64 0)) #9
  %259 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 80
  %260 = bitcast void (%struct.VkCommandBuffer_T*, float)** %259 to void ()**
  store void ()* %258, void ()** %260, align 8
  %261 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.169, i64 0, i64 0)) #9
  %262 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 81
  %263 = bitcast void (%struct.VkCommandBuffer_T*, float, float, float)** %262 to void ()**
  store void ()* %261, void ()** %263, align 8
  %264 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i64 0, i64 0)) #9
  %265 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 82
  %266 = bitcast void (%struct.VkCommandBuffer_T*, float*)** %265 to void ()**
  store void ()* %264, void ()** %266, align 8
  %267 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.171, i64 0, i64 0)) #9
  %268 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 83
  %269 = bitcast void (%struct.VkCommandBuffer_T*, float, float)** %268 to void ()**
  store void ()* %267, void ()** %269, align 8
  %270 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.172, i64 0, i64 0)) #9
  %271 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 84
  %272 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %271 to void ()**
  store void ()* %270, void ()** %272, align 8
  %273 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.173, i64 0, i64 0)) #9
  %274 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 85
  %275 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %274 to void ()**
  store void ()* %273, void ()** %275, align 8
  %276 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i64 0, i64 0)) #9
  %277 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 86
  %278 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %277 to void ()**
  store void ()* %276, void ()** %278, align 8
  %279 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.175, i64 0, i64 0)) #9
  %280 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 87
  %281 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)** %280 to void ()**
  store void ()* %279, void ()** %281, align 8
  %282 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.176, i64 0, i64 0)) #9
  %283 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 88
  %284 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)** %283 to void ()**
  store void ()* %282, void ()** %284, align 8
  %285 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.177, i64 0, i64 0)) #9
  %286 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 89
  %287 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %286 to void ()**
  store void ()* %285, void ()** %287, align 8
  %288 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0)) #9
  %289 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 90
  %290 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)** %289 to void ()**
  store void ()* %288, void ()** %290, align 8
  %291 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.179, i64 0, i64 0)) #9
  %292 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 91
  %293 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)** %292 to void ()**
  store void ()* %291, void ()** %293, align 8
  %294 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.180, i64 0, i64 0)) #9
  %295 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 92
  %296 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)** %295 to void ()**
  store void ()* %294, void ()** %296, align 8
  %297 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.181, i64 0, i64 0)) #9
  %298 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 93
  %299 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)** %298 to void ()**
  store void ()* %297, void ()** %299, align 8
  %300 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.182, i64 0, i64 0)) #9
  %301 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 94
  %302 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32)** %301 to void ()**
  store void ()* %300, void ()** %302, align 8
  %303 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.183, i64 0, i64 0)) #9
  %304 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 95
  %305 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)** %304 to void ()**
  store void ()* %303, void ()** %305, align 8
  %306 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.184, i64 0, i64 0)) #9
  %307 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 96
  %308 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)** %307 to void ()**
  store void ()* %306, void ()** %308, align 8
  %309 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.185, i64 0, i64 0)) #9
  %310 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 97
  %311 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)** %310 to void ()**
  store void ()* %309, void ()** %311, align 8
  %312 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.186, i64 0, i64 0)) #9
  %313 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 98
  %314 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)** %313 to void ()**
  store void ()* %312, void ()** %314, align 8
  %315 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.187, i64 0, i64 0)) #9
  %316 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 99
  %317 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)** %316 to void ()**
  store void ()* %315, void ()** %317, align 8
  %318 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.188, i64 0, i64 0)) #9
  %319 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 100
  %320 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)** %319 to void ()**
  store void ()* %318, void ()** %320, align 8
  %321 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.189, i64 0, i64 0)) #9
  %322 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 101
  %323 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)** %322 to void ()**
  store void ()* %321, void ()** %323, align 8
  %324 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.190, i64 0, i64 0)) #9
  %325 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 102
  %326 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)** %325 to void ()**
  store void ()* %324, void ()** %326, align 8
  %327 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.191, i64 0, i64 0)) #9
  %328 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 103
  %329 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)** %328 to void ()**
  store void ()* %327, void ()** %329, align 8
  %330 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.192, i64 0, i64 0)) #9
  %331 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 104
  %332 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)** %331 to void ()**
  store void ()* %330, void ()** %332, align 8
  %333 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.193, i64 0, i64 0)) #9
  %334 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 105
  %335 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)** %334 to void ()**
  store void ()* %333, void ()** %335, align 8
  %336 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.194, i64 0, i64 0)) #9
  %337 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 106
  %338 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)** %337 to void ()**
  store void ()* %336, void ()** %338, align 8
  %339 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0)) #9
  %340 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 107
  %341 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)** %340 to void ()**
  store void ()* %339, void ()** %341, align 8
  %342 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.196, i64 0, i64 0)) #9
  %343 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 108
  %344 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)** %343 to void ()**
  store void ()* %342, void ()** %344, align 8
  %345 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.197, i64 0, i64 0)) #9
  %346 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 109
  %347 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)** %346 to void ()**
  store void ()* %345, void ()** %347, align 8
  %348 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.198, i64 0, i64 0)) #9
  %349 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 110
  %350 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)** %349 to void ()**
  store void ()* %348, void ()** %350, align 8
  %351 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.199, i64 0, i64 0)) #9
  %352 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 111
  %353 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)** %352 to void ()**
  store void ()* %351, void ()** %353, align 8
  %354 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.200, i64 0, i64 0)) #9
  %355 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 112
  %356 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)** %355 to void ()**
  store void ()* %354, void ()** %356, align 8
  %357 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.201, i64 0, i64 0)) #9
  %358 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 113
  %359 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)** %358 to void ()**
  store void ()* %357, void ()** %359, align 8
  %360 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.202, i64 0, i64 0)) #9
  %361 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 114
  %362 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)** %361 to void ()**
  store void ()* %360, void ()** %362, align 8
  %363 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.203, i64 0, i64 0)) #9
  %364 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 115
  %365 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)** %364 to void ()**
  store void ()* %363, void ()** %365, align 8
  %366 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.204, i64 0, i64 0)) #9
  %367 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 116
  %368 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)** %367 to void ()**
  store void ()* %366, void ()** %368, align 8
  %369 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.205, i64 0, i64 0)) #9
  %370 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 117
  %371 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)** %370 to void ()**
  store void ()* %369, void ()** %371, align 8
  %372 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.206, i64 0, i64 0)) #9
  %373 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 118
  %374 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %373 to void ()**
  store void ()* %372, void ()** %374, align 8
  %375 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.207, i64 0, i64 0)) #9
  %376 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 119
  %377 = bitcast void (%struct.VkCommandBuffer_T*)** %376 to void ()**
  store void ()* %375, void ()** %377, align 8
  %378 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.208, i64 0, i64 0)) #9
  %379 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 120
  %380 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)** %379 to void ()**
  store void ()* %378, void ()** %380, align 8
  %381 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.209, i64 0, i64 0)) #9
  %382 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 121
  %383 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)** %382 to void ()**
  store void ()* %381, void ()** %383, align 8
  %384 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.210, i64 0, i64 0)) #9
  %385 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 122
  %386 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)** %385 to void ()**
  store void ()* %384, void ()** %386, align 8
  %387 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.211, i64 0, i64 0)) #9
  %388 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 123
  %389 = bitcast void (%struct.VkDevice_T*, i32, i32, i32, i32*)** %388 to void ()**
  store void ()* %387, void ()** %389, align 8
  %390 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.212, i64 0, i64 0)) #9
  %391 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 124
  %392 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %391 to void ()**
  store void ()* %390, void ()** %392, align 8
  %393 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.213, i64 0, i64 0)) #9
  %394 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 125
  %395 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)** %394 to void ()**
  store void ()* %393, void ()** %395, align 8
  %396 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.214, i64 0, i64 0)) #9
  %397 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 126
  %398 = bitcast void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %397 to void ()**
  store void ()* %396, void ()** %398, align 8
  %399 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.215, i64 0, i64 0)) #9
  %400 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 127
  %401 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %400 to void ()**
  store void ()* %399, void ()** %401, align 8
  %402 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.216, i64 0, i64 0)) #9
  %403 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 128
  %404 = bitcast void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)** %403 to void ()**
  store void ()* %402, void ()** %404, align 8
  %405 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.217, i64 0, i64 0)) #9
  %406 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 129
  %407 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)** %406 to void ()**
  store void ()* %405, void ()** %407, align 8
  %408 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.218, i64 0, i64 0)) #9
  %409 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 130
  %410 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)** %409 to void ()**
  store void ()* %408, void ()** %410, align 8
  %411 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.219, i64 0, i64 0)) #9
  %412 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 131
  %413 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)** %412 to void ()**
  store void ()* %411, void ()** %413, align 8
  %414 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.220, i64 0, i64 0)) #9
  %415 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 132
  %416 = bitcast void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)** %415 to void ()**
  store void ()* %414, void ()** %416, align 8
  %417 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.221, i64 0, i64 0)) #9
  %418 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 133
  %419 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)** %418 to void ()**
  store void ()* %417, void ()** %419, align 8
  %420 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.222, i64 0, i64 0)) #9
  %421 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 134
  %422 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)** %421 to void ()**
  store void ()* %420, void ()** %422, align 8
  %423 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.223, i64 0, i64 0)) #9
  %424 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 135
  %425 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)** %424 to void ()**
  store void ()* %423, void ()** %425, align 8
  %426 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.224, i64 0, i64 0)) #9
  %427 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 136
  %428 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)** %427 to void ()**
  store void ()* %426, void ()** %428, align 8
  %429 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.225, i64 0, i64 0)) #9
  %430 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 137
  %431 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %430 to void ()**
  store void ()* %429, void ()** %431, align 8
  %432 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.226, i64 0, i64 0)) #9
  %433 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 138
  %434 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %433 to void ()**
  store void ()* %432, void ()** %434, align 8
  %435 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.227, i64 0, i64 0)) #9
  %436 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 139
  %437 = bitcast i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %436 to void ()**
  store void ()* %435, void ()** %437, align 8
  %438 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.228, i64 0, i64 0)) #9
  %439 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 140
  %440 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)** %439 to void ()**
  store void ()* %438, void ()** %440, align 8
  %441 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.229, i64 0, i64 0)) #9
  %442 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 141
  %443 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)** %442 to void ()**
  store void ()* %441, void ()** %443, align 8
  %444 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.230, i64 0, i64 0)) #9
  %445 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 142
  %446 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)** %445 to void ()**
  store void ()* %444, void ()** %446, align 8
  %447 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.231, i64 0, i64 0)) #9
  %448 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 143
  %449 = bitcast void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)** %448 to void ()**
  store void ()* %447, void ()** %449, align 8
  %450 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.232, i64 0, i64 0)) #9
  %451 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 144
  %452 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)** %451 to void ()**
  store void ()* %450, void ()** %452, align 8
  %453 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.233, i64 0, i64 0)) #9
  %454 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 145
  %455 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)** %454 to void ()**
  store void ()* %453, void ()** %455, align 8
  %456 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.234, i64 0, i64 0)) #9
  %457 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 146
  %458 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)** %457 to void ()**
  store void ()* %456, void ()** %458, align 8
  %459 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.235, i64 0, i64 0)) #9
  %460 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 147
  %461 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %460 to void ()**
  store void ()* %459, void ()** %461, align 8
  %462 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.236, i64 0, i64 0)) #9
  %463 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 148
  %464 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %463 to void ()**
  store void ()* %462, void ()** %464, align 8
  %465 = tail call void ()* %1(%struct.VkDevice_T* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.237, i64 0, i64 0)) #9
  %466 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 149
  %467 = bitcast i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)** %466 to void ()**
  store void ()* %465, void ()** %467, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_init_device_extension_dispatch_table(%struct.loader_dev_dispatch_table*, void ()* (%struct.VkInstance_T*, i8*)* nocapture, void ()* (%struct.VkDevice_T*, i8*)*, %struct.VkInstance_T*, %struct.VkDevice_T*) local_unnamed_addr #0 {
  %6 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0)) #9
  %7 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 150
  %8 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %7 to void ()**
  store void ()* %6, void ()** %8, align 8
  %9 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.238, i64 0, i64 0)) #9
  %10 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 151
  %11 = bitcast void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)** %10 to void ()**
  store void ()* %9, void ()** %11, align 8
  %12 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.239, i64 0, i64 0)) #9
  %13 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 152
  %14 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)** %13 to void ()**
  store void ()* %12, void ()** %14, align 8
  %15 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.240, i64 0, i64 0)) #9
  %16 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 153
  %17 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)** %16 to void ()**
  store void ()* %15, void ()** %17, align 8
  %18 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.241, i64 0, i64 0)) #9
  %19 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 154
  %20 = bitcast i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)** %19 to void ()**
  store void ()* %18, void ()** %20, align 8
  %21 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.242, i64 0, i64 0)) #9
  %22 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 155
  %23 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceGroupPresentCapabilitiesKHR*)** %22 to void ()**
  store void ()* %21, void ()** %23, align 8
  %24 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30, i64 0, i64 0)) #9
  %25 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 156
  %26 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)** %25 to void ()**
  store void ()* %24, void ()** %26, align 8
  %27 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.243, i64 0, i64 0)) #9
  %28 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 157
  %29 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAcquireNextImageInfoKHR*, i32*)** %28 to void ()**
  store void ()* %27, void ()** %29, align 8
  %30 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i64 0, i64 0)) #9
  %31 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 158
  %32 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %31 to void ()**
  store void ()* %30, void ()** %32, align 8
  %33 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.244, i64 0, i64 0)) #9
  %34 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 159
  %35 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**)** %34 to void ()**
  store void ()* %33, void ()** %35, align 8
  %36 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.245, i64 0, i64 0)) #9
  %37 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 160
  %38 = bitcast void (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*)** %37 to void ()**
  store void ()* %36, void ()** %38, align 8
  %39 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.246, i64 0, i64 0)) #9
  %40 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 161
  %41 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*)** %40 to void ()**
  store void ()* %39, void ()** %41, align 8
  %42 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.247, i64 0, i64 0)) #9
  %43 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 162
  %44 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*)** %43 to void ()**
  store void ()* %42, void ()** %44, align 8
  %45 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.248, i64 0, i64 0)) #9
  %46 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 163
  %47 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**)** %46 to void ()**
  store void ()* %45, void ()** %47, align 8
  %48 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.249, i64 0, i64 0)) #9
  %49 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 164
  %50 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*)** %49 to void ()**
  store void ()* %48, void ()** %50, align 8
  %51 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.250, i64 0, i64 0)) #9
  %52 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 165
  %53 = bitcast void (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*)** %52 to void ()**
  store void ()* %51, void ()** %53, align 8
  %54 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.251, i64 0, i64 0)) #9
  %55 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 166
  %56 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*)** %55 to void ()**
  store void ()* %54, void ()** %56, align 8
  %57 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.252, i64 0, i64 0)) #9
  %58 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 167
  %59 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*)** %58 to void ()**
  store void ()* %57, void ()** %59, align 8
  %60 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.253, i64 0, i64 0)) #9
  %61 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 168
  %62 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*)** %61 to void ()**
  store void ()* %60, void ()** %62, align 8
  %63 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.254, i64 0, i64 0)) #9
  %64 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 169
  %65 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*)** %64 to void ()**
  store void ()* %63, void ()** %65, align 8
  %66 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.255, i64 0, i64 0)) #9
  %67 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 170
  %68 = bitcast void (%struct.VkDevice_T*, i32, i32, i32, i32*)** %67 to void ()**
  store void ()* %66, void ()** %68, align 8
  %69 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.256, i64 0, i64 0)) #9
  %70 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 171
  %71 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %70 to void ()**
  store void ()* %69, void ()** %71, align 8
  %72 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.257, i64 0, i64 0)) #9
  %73 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 172
  %74 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)** %73 to void ()**
  store void ()* %72, void ()** %74, align 8
  %75 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.258, i64 0, i64 0)) #9
  %76 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 173
  %77 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)** %76 to void ()**
  store void ()* %75, void ()** %77, align 8
  %78 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.259, i64 0, i64 0)) #9
  %79 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 174
  %80 = bitcast i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)** %79 to void ()**
  store void ()* %78, void ()** %80, align 8
  %81 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.260, i64 0, i64 0)) #9
  %82 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 175
  %83 = bitcast i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)** %82 to void ()**
  store void ()* %81, void ()** %83, align 8
  %84 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.261, i64 0, i64 0)) #9
  %85 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 176
  %86 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)** %85 to void ()**
  store void ()* %84, void ()** %86, align 8
  %87 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.262, i64 0, i64 0)) #9
  %88 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 177
  %89 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)** %88 to void ()**
  store void ()* %87, void ()** %89, align 8
  %90 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.263, i64 0, i64 0)) #9
  %91 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 178
  %92 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*)** %91 to void ()**
  store void ()* %90, void ()** %92, align 8
  %93 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.264, i64 0, i64 0)) #9
  %94 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 179
  %95 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*)** %94 to void ()**
  store void ()* %93, void ()** %95, align 8
  %96 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.265, i64 0, i64 0)) #9
  %97 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 180
  %98 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)** %97 to void ()**
  store void ()* %96, void ()** %98, align 8
  %99 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.266, i64 0, i64 0)) #9
  %100 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 181
  %101 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)** %100 to void ()**
  store void ()* %99, void ()** %101, align 8
  %102 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.267, i64 0, i64 0)) #9
  %103 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 182
  %104 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)** %103 to void ()**
  store void ()* %102, void ()** %104, align 8
  %105 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0)) #9
  %106 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 183
  %107 = bitcast i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %106 to void ()**
  store void ()* %105, void ()** %107, align 8
  %108 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.269, i64 0, i64 0)) #9
  %109 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 184
  %110 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)** %109 to void ()**
  store void ()* %108, void ()** %110, align 8
  %111 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.270, i64 0, i64 0)) #9
  %112 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 185
  %113 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)** %112 to void ()**
  store void ()* %111, void ()** %113, align 8
  %114 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.271, i64 0, i64 0)) #9
  %115 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 186
  %116 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)** %115 to void ()**
  store void ()* %114, void ()** %116, align 8
  %117 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.272, i64 0, i64 0)) #9
  %118 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 187
  %119 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*)** %118 to void ()**
  store void ()* %117, void ()** %119, align 8
  %120 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.273, i64 0, i64 0)) #9
  %121 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 188
  %122 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*)** %121 to void ()**
  store void ()* %120, void ()** %122, align 8
  %123 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.274, i64 0, i64 0)) #9
  %124 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 189
  %125 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*)** %124 to void ()**
  store void ()* %123, void ()** %125, align 8
  %126 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.275, i64 0, i64 0)) #9
  %127 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 190
  %128 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*)** %127 to void ()**
  store void ()* %126, void ()** %128, align 8
  %129 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.276, i64 0, i64 0)) #9
  %130 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 191
  %131 = bitcast void (%struct.VkDevice_T*)** %130 to void ()**
  store void ()* %129, void ()** %131, align 8
  %132 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.277, i64 0, i64 0)) #9
  %133 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 192
  %134 = bitcast void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %133 to void ()**
  store void ()* %132, void ()** %134, align 8
  %135 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.278, i64 0, i64 0)) #9
  %136 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 193
  %137 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %136 to void ()**
  store void ()* %135, void ()** %137, align 8
  %138 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.279, i64 0, i64 0)) #9
  %139 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 194
  %140 = bitcast void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)** %139 to void ()**
  store void ()* %138, void ()** %140, align 8
  %141 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.280, i64 0, i64 0)) #9
  %142 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 195
  %143 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)** %142 to void ()**
  store void ()* %141, void ()** %143, align 8
  %144 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.281, i64 0, i64 0)) #9
  %145 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 196
  %146 = bitcast void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)** %145 to void ()**
  store void ()* %144, void ()** %146, align 8
  %147 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.282, i64 0, i64 0)) #9
  %148 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 197
  %149 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)** %148 to void ()**
  store void ()* %147, void ()** %149, align 8
  %150 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.283, i64 0, i64 0)) #9
  %151 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 198
  %152 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)** %151 to void ()**
  store void ()* %150, void ()** %152, align 8
  %153 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0)) #9
  %154 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 199
  %155 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)** %154 to void ()**
  store void ()* %153, void ()** %155, align 8
  %156 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.285, i64 0, i64 0)) #9
  %157 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 200
  %158 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %157 to void ()**
  store void ()* %156, void ()** %158, align 8
  %159 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.286, i64 0, i64 0)) #9
  %160 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 201
  %161 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %160 to void ()**
  store void ()* %159, void ()** %161, align 8
  %162 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.287, i64 0, i64 0)) #9
  %163 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 202
  %164 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)** %163 to void ()**
  store void ()* %162, void ()** %164, align 8
  %165 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.288, i64 0, i64 0)) #9
  %166 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 203
  %167 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)** %166 to void ()**
  store void ()* %165, void ()** %167, align 8
  %168 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.289, i64 0, i64 0)) #9
  %169 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 204
  %170 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)** %169 to void ()**
  store void ()* %168, void ()** %170, align 8
  %171 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.290, i64 0, i64 0)) #9
  %172 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 205
  %173 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*)** %172 to void ()**
  store void ()* %171, void ()** %173, align 8
  %174 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.291, i64 0, i64 0)) #9
  %175 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 206
  %176 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %175 to void ()**
  store void ()* %174, void ()** %176, align 8
  %177 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.292, i64 0, i64 0)) #9
  %178 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 207
  %179 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %178 to void ()**
  store void ()* %177, void ()** %179, align 8
  %180 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.293, i64 0, i64 0)) #9
  %181 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 208
  %182 = bitcast i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)** %181 to void ()**
  store void ()* %180, void ()** %182, align 8
  %183 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.294, i64 0, i64 0)) #9
  %184 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 209
  %185 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**)** %184 to void ()**
  store void ()* %183, void ()** %185, align 8
  %186 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.295, i64 0, i64 0)) #9
  %187 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 210
  %188 = bitcast void (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*)** %187 to void ()**
  store void ()* %186, void ()** %188, align 8
  %189 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.296, i64 0, i64 0)) #9
  %190 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 211
  %191 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %190 to void ()**
  store void ()* %189, void ()** %191, align 8
  %192 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.297, i64 0, i64 0)) #9
  %193 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 212
  %194 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %193 to void ()**
  store void ()* %192, void ()** %194, align 8
  %195 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.298, i64 0, i64 0)) #9
  %196 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 213
  %197 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %196 to void ()**
  store void ()* %195, void ()** %197, align 8
  %198 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.299, i64 0, i64 0)) #9
  %199 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 214
  %200 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*)** %199 to void ()**
  store void ()* %198, void ()** %200, align 8
  %201 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.300, i64 0, i64 0)) #9
  %202 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 215
  %203 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*)** %202 to void ()**
  store void ()* %201, void ()** %203, align 8
  %204 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.301, i64 0, i64 0)) #9
  %205 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 216
  %206 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*)** %205 to void ()**
  store void ()* %204, void ()** %206, align 8
  %207 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.302, i64 0, i64 0)) #9
  %208 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 217
  %209 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*)** %208 to void ()**
  store void ()* %207, void ()** %209, align 8
  %210 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.303, i64 0, i64 0)) #9
  %211 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 218
  %212 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*)** %211 to void ()**
  store void ()* %210, void ()** %212, align 8
  %213 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.304, i64 0, i64 0)) #9
  %214 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 219
  %215 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64)** %214 to void ()**
  store void ()* %213, void ()** %215, align 8
  %216 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.305, i64 0, i64 0)) #9
  %217 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 220
  %218 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*)** %217 to void ()**
  store void ()* %216, void ()** %218, align 8
  %219 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.306, i64 0, i64 0)) #9
  %220 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 221
  %221 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*)** %220 to void ()**
  store void ()* %219, void ()** %221, align 8
  %222 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.307, i64 0, i64 0)) #9
  %223 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 222
  %224 = bitcast void (%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32)** %223 to void ()**
  store void ()* %222, void ()** %224, align 8
  %225 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.308, i64 0, i64 0)) #9
  %226 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 223
  %227 = bitcast i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*)** %226 to void ()**
  store void ()* %225, void ()** %227, align 8
  %228 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.309, i64 0, i64 0)) #9
  %229 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 224
  %230 = bitcast void (%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32)** %229 to void ()**
  store void ()* %228, void ()** %230, align 8
  %231 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.310, i64 0, i64 0)) #9
  %232 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 225
  %233 = bitcast void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*)** %232 to void ()**
  store void ()* %231, void ()** %233, align 8
  %234 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.311, i64 0, i64 0)) #9
  %235 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 226
  %236 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*)** %235 to void ()**
  store void ()* %234, void ()** %236, align 8
  %237 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.312, i64 0, i64 0)) #9
  %238 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 227
  %239 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*)** %238 to void ()**
  store void ()* %237, void ()** %239, align 8
  %240 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.313, i64 0, i64 0)) #9
  %241 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 228
  %242 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*)** %241 to void ()**
  store void ()* %240, void ()** %242, align 8
  %243 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.314, i64 0, i64 0)) #9
  %244 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 229
  %245 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*)** %244 to void ()**
  store void ()* %243, void ()** %245, align 8
  %246 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.315, i64 0, i64 0)) #9
  %247 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 230
  %248 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*)** %247 to void ()**
  store void ()* %246, void ()** %248, align 8
  %249 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.316, i64 0, i64 0)) #9
  %250 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 231
  %251 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*)** %250 to void ()**
  store void ()* %249, void ()** %251, align 8
  %252 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0)) #9
  %253 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 232
  %254 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)** %253 to void ()**
  store void ()* %252, void ()** %254, align 8
  %255 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0)) #9
  %256 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 233
  %257 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)** %256 to void ()**
  store void ()* %255, void ()** %257, align 8
  %258 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.317, i64 0, i64 0)) #9
  %259 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 234
  %260 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)** %259 to void ()**
  store void ()* %258, void ()** %260, align 8
  %261 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.318, i64 0, i64 0)) #9
  %262 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 235
  %263 = bitcast void (%struct.VkCommandBuffer_T*)** %262 to void ()**
  store void ()* %261, void ()** %263, align 8
  %264 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.319, i64 0, i64 0)) #9
  %265 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 236
  %266 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)** %265 to void ()**
  store void ()* %264, void ()** %266, align 8
  %267 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.320, i64 0, i64 0)) #9
  %268 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 237
  %269 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*)** %268 to void ()**
  store void ()* %267, void ()** %269, align 8
  %270 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.321, i64 0, i64 0)) #9
  %271 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 238
  %272 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %271 to void ()**
  store void ()* %270, void ()** %272, align 8
  %273 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.322, i64 0, i64 0)) #9
  %274 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 239
  %275 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %274 to void ()**
  store void ()* %273, void ()** %275, align 8
  %276 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.323, i64 0, i64 0)) #9
  %277 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 240
  %278 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32)** %277 to void ()**
  store void ()* %276, void ()** %278, align 8
  %279 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.324, i64 0, i64 0)) #9
  %280 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 241
  %281 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)** %280 to void ()**
  store void ()* %279, void ()** %281, align 8
  %282 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.325, i64 0, i64 0)) #9
  %283 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 242
  %284 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32)** %283 to void ()**
  store void ()* %282, void ()** %284, align 8
  %285 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.326, i64 0, i64 0)) #9
  %286 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 243
  %287 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**)** %286 to void ()**
  store void ()* %285, void ()** %287, align 8
  %288 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.327, i64 0, i64 0)) #9
  %289 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 244
  %290 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**)** %289 to void ()**
  store void ()* %288, void ()** %290, align 8
  %291 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.328, i64 0, i64 0)) #9
  %292 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 245
  %293 = bitcast void (%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*)** %292 to void ()**
  store void ()* %291, void ()** %293, align 8
  %294 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.329, i64 0, i64 0)) #9
  %295 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 246
  %296 = bitcast void (%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*)** %295 to void ()**
  store void ()* %294, void ()** %296, align 8
  %297 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.330, i64 0, i64 0)) #9
  %298 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 247
  %299 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*)** %298 to void ()**
  store void ()* %297, void ()** %299, align 8
  %300 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.331, i64 0, i64 0)) #9
  %301 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 248
  %302 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*)** %301 to void ()**
  store void ()* %300, void ()** %302, align 8
  %303 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.332, i64 0, i64 0)) #9
  %304 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 249
  %305 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*)** %304 to void ()**
  store void ()* %303, void ()** %305, align 8
  %306 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.333, i64 0, i64 0)) #9
  %307 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 250
  %308 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %307 to void ()**
  store void ()* %306, void ()** %308, align 8
  %309 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.334, i64 0, i64 0)) #9
  %310 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 251
  %311 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %310 to void ()**
  store void ()* %309, void ()** %311, align 8
  %312 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.335, i64 0, i64 0)) #9
  %313 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 252
  %314 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*)** %313 to void ()**
  store void ()* %312, void ()** %314, align 8
  %315 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.336, i64 0, i64 0)) #9
  %316 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 253
  %317 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*)** %316 to void ()**
  store void ()* %315, void ()** %317, align 8
  %318 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.337, i64 0, i64 0)) #9
  %319 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 254
  %320 = bitcast void (%struct.VkCommandBuffer_T*)** %319 to void ()**
  store void ()* %318, void ()** %320, align 8
  %321 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.338, i64 0, i64 0)) #9
  %322 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 255
  %323 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*)** %322 to void ()**
  store void ()* %321, void ()** %323, align 8
  %324 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.339, i64 0, i64 0)) #9
  %325 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 256
  %326 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*)** %325 to void ()**
  store void ()* %324, void ()** %326, align 8
  %327 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.340, i64 0, i64 0)) #9
  %328 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 257
  %329 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %328 to void ()**
  store void ()* %327, void ()** %329, align 8
  %330 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.341, i64 0, i64 0)) #9
  %331 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 258
  %332 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %331 to void ()**
  store void ()* %330, void ()** %332, align 8
  %333 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.342, i64 0, i64 0)) #9
  %334 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 259
  %335 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*)** %334 to void ()**
  store void ()* %333, void ()** %335, align 8
  %336 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.343, i64 0, i64 0)) #9
  %337 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 260
  %338 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*)** %337 to void ()**
  store void ()* %336, void ()** %338, align 8
  %339 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.344, i64 0, i64 0)) #9
  %340 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 261
  %341 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*)** %340 to void ()**
  store void ()* %339, void ()** %341, align 8
  %342 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.345, i64 0, i64 0)) #9
  %343 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 262
  %344 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %343 to void ()**
  store void ()* %342, void ()** %344, align 8
  %345 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.346, i64 0, i64 0)) #9
  %346 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 263
  %347 = bitcast void (%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*)** %346 to void ()**
  store void ()* %345, void ()** %347, align 8
  %348 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.72, i64 0, i64 0)) #9
  %349 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 264
  %350 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)** %349 to void ()**
  store void ()* %348, void ()** %350, align 8
  %351 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0)) #9
  %352 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 265
  %353 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)** %352 to void ()**
  store void ()* %351, void ()** %353, align 8
  %354 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74, i64 0, i64 0)) #9
  %355 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 266
  %356 = bitcast void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %355 to void ()**
  store void ()* %354, void ()** %356, align 8
  %357 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i64 0, i64 0)) #9
  %358 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 267
  %359 = bitcast void (%struct.VkQueue_T*)** %358 to void ()**
  store void ()* %357, void ()** %359, align 8
  %360 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0)) #9
  %361 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 268
  %362 = bitcast void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %361 to void ()**
  store void ()* %360, void ()** %362, align 8
  %363 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i64 0, i64 0)) #9
  %364 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 269
  %365 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %364 to void ()**
  store void ()* %363, void ()** %365, align 8
  %366 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0)) #9
  %367 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 270
  %368 = bitcast void (%struct.VkCommandBuffer_T*)** %367 to void ()**
  store void ()* %366, void ()** %368, align 8
  %369 = tail call void ()* %1(%struct.VkInstance_T* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79, i64 0, i64 0)) #9
  %370 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 271
  %371 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %370 to void ()**
  store void ()* %369, void ()** %371, align 8
  %372 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.347, i64 0, i64 0)) #9
  %373 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 272
  %374 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*)** %373 to void ()**
  store void ()* %372, void ()** %374, align 8
  %375 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.348, i64 0, i64 0)) #9
  %376 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 273
  %377 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)** %376 to void ()**
  store void ()* %375, void ()** %377, align 8
  %378 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.349, i64 0, i64 0)) #9
  %379 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 274
  %380 = bitcast i32 (%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**)** %379 to void ()**
  store void ()* %378, void ()** %380, align 8
  %381 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.350, i64 0, i64 0)) #9
  %382 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 275
  %383 = bitcast void (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*)** %382 to void ()**
  store void ()* %381, void ()** %383, align 8
  %384 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.351, i64 0, i64 0)) #9
  %385 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 276
  %386 = bitcast i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**)** %385 to void ()**
  store void ()* %384, void ()** %386, align 8
  %387 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.352, i64 0, i64 0)) #9
  %388 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 277
  %389 = bitcast i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*)** %388 to void ()**
  store void ()* %387, void ()** %389, align 8
  %390 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.353, i64 0, i64 0)) #9
  %391 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 278
  %392 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32)** %391 to void ()**
  store void ()* %390, void ()** %392, align 8
  %393 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.354, i64 0, i64 0)) #9
  %394 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 279
  %395 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*)** %394 to void ()**
  store void ()* %393, void ()** %395, align 8
  %396 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.355, i64 0, i64 0)) #9
  %397 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 280
  %398 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*)** %397 to void ()**
  store void ()* %396, void ()** %398, align 8
  %399 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.356, i64 0, i64 0)) #9
  %400 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 281
  %401 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**)** %400 to void ()**
  store void ()* %399, void ()** %401, align 8
  %402 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.357, i64 0, i64 0)) #9
  %403 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 282
  %404 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*)** %403 to void ()**
  store void ()* %402, void ()** %404, align 8
  %405 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.358, i64 0, i64 0)) #9
  %406 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 283
  %407 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)** %406 to void ()**
  store void ()* %405, void ()** %407, align 8
  %408 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.359, i64 0, i64 0)) #9
  %409 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 284
  %410 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*)** %409 to void ()**
  store void ()* %408, void ()** %410, align 8
  %411 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.360, i64 0, i64 0)) #9
  %412 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 285
  %413 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64)** %412 to void ()**
  store void ()* %411, void ()** %413, align 8
  %414 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.361, i64 0, i64 0)) #9
  %415 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 286
  %416 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32)** %415 to void ()**
  store void ()* %414, void ()** %416, align 8
  %417 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.362, i64 0, i64 0)) #9
  %418 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 287
  %419 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32)** %418 to void ()**
  store void ()* %417, void ()** %419, align 8
  %420 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.363, i64 0, i64 0)) #9
  %421 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 288
  %422 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %421 to void ()**
  store void ()* %420, void ()** %422, align 8
  %423 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.364, i64 0, i64 0)) #9
  %424 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 289
  %425 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %424 to void ()**
  store void ()* %423, void ()** %425, align 8
  %426 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.365, i64 0, i64 0)) #9
  %427 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 290
  %428 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %427 to void ()**
  store void ()* %426, void ()** %428, align 8
  %429 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.366, i64 0, i64 0)) #9
  %430 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 291
  %431 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*)** %430 to void ()**
  store void ()* %429, void ()** %431, align 8
  %432 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.367, i64 0, i64 0)) #9
  %433 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 292
  %434 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32)** %433 to void ()**
  store void ()* %432, void ()** %434, align 8
  %435 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.368, i64 0, i64 0)) #9
  %436 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 293
  %437 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32)** %436 to void ()**
  store void ()* %435, void ()** %437, align 8
  %438 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.369, i64 0, i64 0)) #9
  %439 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 294
  %440 = bitcast i32 (%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*)** %439 to void ()**
  store void ()* %438, void ()** %440, align 8
  %441 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.370, i64 0, i64 0)) #9
  %442 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 295
  %443 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32)** %442 to void ()**
  store void ()* %441, void ()** %443, align 8
  %444 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.371, i64 0, i64 0)) #9
  %445 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 296
  %446 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*)** %445 to void ()**
  store void ()* %444, void ()** %446, align 8
  %447 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.372, i64 0, i64 0)) #9
  %448 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 297
  %449 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %448 to void ()**
  store void ()* %447, void ()** %449, align 8
  %450 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.373, i64 0, i64 0)) #9
  %451 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 298
  %452 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)** %451 to void ()**
  store void ()* %450, void ()** %452, align 8
  %453 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.374, i64 0, i64 0)) #9
  %454 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 299
  %455 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %454 to void ()**
  store void ()* %453, void ()** %455, align 8
  %456 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.375, i64 0, i64 0)) #9
  %457 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 300
  %458 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %457 to void ()**
  store void ()* %456, void ()** %458, align 8
  %459 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.376, i64 0, i64 0)) #9
  %460 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 301
  %461 = bitcast void (%struct.VkCommandBuffer_T*, i8*)** %460 to void ()**
  store void ()* %459, void ()** %461, align 8
  %462 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.377, i64 0, i64 0)) #9
  %463 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 302
  %464 = bitcast void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*)** %463 to void ()**
  store void ()* %462, void ()** %464, align 8
  %465 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.378, i64 0, i64 0)) #9
  %466 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 303
  %467 = bitcast i32 (%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*)** %466 to void ()**
  store void ()* %465, void ()** %467, align 8
  %468 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.379, i64 0, i64 0)) #9
  %469 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 304
  %470 = bitcast void (%struct.VkDevice_T*)** %469 to void ()**
  store void ()* %468, void ()** %470, align 8
  %471 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.380, i64 0, i64 0)) #9
  %472 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 305
  %473 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*)** %472 to void ()**
  store void ()* %471, void ()** %473, align 8
  %474 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.381, i64 0, i64 0)) #9
  %475 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 306
  %476 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*)** %475 to void ()**
  store void ()* %474, void ()** %476, align 8
  %477 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.382, i64 0, i64 0)) #9
  %478 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 307
  %479 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*)** %478 to void ()**
  store void ()* %477, void ()** %479, align 8
  %480 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.383, i64 0, i64 0)) #9
  %481 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 308
  %482 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**)** %481 to void ()**
  store void ()* %480, void ()** %482, align 8
  %483 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.384, i64 0, i64 0)) #9
  %484 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 309
  %485 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*)** %484 to void ()**
  store void ()* %483, void ()** %485, align 8
  %486 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.385, i64 0, i64 0)) #9
  %487 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 310
  %488 = bitcast i32 (%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*)** %487 to void ()**
  store void ()* %486, void ()** %488, align 8
  %489 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.386, i64 0, i64 0)) #9
  %490 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 311
  %491 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*)** %490 to void ()**
  store void ()* %489, void ()** %491, align 8
  %492 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.387, i64 0, i64 0)) #9
  %493 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 312
  %494 = bitcast void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32)** %493 to void ()**
  store void ()* %492, void ()** %494, align 8
  %495 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.388, i64 0, i64 0)) #9
  %496 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 313
  %497 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %496 to void ()**
  store void ()* %495, void ()** %497, align 8
  %498 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.389, i64 0, i64 0)) #9
  %499 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 314
  %500 = bitcast void (%struct.VkCommandBuffer_T*, i32, i16)** %499 to void ()**
  store void ()* %498, void ()** %500, align 8
  %501 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.390, i64 0, i64 0)) #9
  %502 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 315
  %503 = bitcast void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)** %502 to void ()**
  store void ()* %501, void ()** %503, align 8
  %504 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.391, i64 0, i64 0)) #9
  %505 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 316
  %506 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %505 to void ()**
  store void ()* %504, void ()** %506, align 8
  %507 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.392, i64 0, i64 0)) #9
  %508 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 317
  %509 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %508 to void ()**
  store void ()* %507, void ()** %509, align 8
  %510 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.393, i64 0, i64 0)) #9
  %511 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 318
  %512 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %511 to void ()**
  store void ()* %510, void ()** %512, align 8
  %513 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i64 0, i64 0)) #9
  %514 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 319
  %515 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*)** %514 to void ()**
  store void ()* %513, void ()** %515, align 8
  %516 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.395, i64 0, i64 0)) #9
  %517 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 320
  %518 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*)** %517 to void ()**
  store void ()* %516, void ()** %518, align 8
  %519 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.396, i64 0, i64 0)) #9
  %520 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 321
  %521 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*)** %520 to void ()**
  store void ()* %519, void ()** %521, align 8
  %522 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.397, i64 0, i64 0)) #9
  %523 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 322
  %524 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %523 to void ()**
  store void ()* %522, void ()** %524, align 8
  %525 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.398, i64 0, i64 0)) #9
  %526 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 323
  %527 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %526 to void ()**
  store void ()* %525, void ()** %527, align 8
  %528 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.399, i64 0, i64 0)) #9
  %529 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 324
  %530 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %529 to void ()**
  store void ()* %528, void ()** %530, align 8
  %531 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.400, i64 0, i64 0)) #9
  %532 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 325
  %533 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %532 to void ()**
  store void ()* %531, void ()** %533, align 8
  %534 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.401, i64 0, i64 0)) #9
  %535 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 326
  %536 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %535 to void ()**
  store void ()* %534, void ()** %536, align 8
  %537 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.402, i64 0, i64 0)) #9
  %538 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 327
  %539 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)** %538 to void ()**
  store void ()* %537, void ()** %539, align 8
  %540 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.403, i64 0, i64 0)) #9
  %541 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 328
  %542 = bitcast void (%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)** %541 to void ()**
  store void ()* %540, void ()** %542, align 8
  %543 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.404, i64 0, i64 0)) #9
  %544 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 329
  %545 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*)** %544 to void ()**
  store void ()* %543, void ()** %545, align 8
  %546 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.405, i64 0, i64 0)) #9
  %547 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 330
  %548 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*)** %547 to void ()**
  store void ()* %546, void ()** %548, align 8
  %549 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.406, i64 0, i64 0)) #9
  %550 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 331
  %551 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32)** %550 to void ()**
  store void ()* %549, void ()** %551, align 8
  %552 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.407, i64 0, i64 0)) #9
  %553 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 332
  %554 = bitcast i32 (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**)** %553 to void ()**
  store void ()* %552, void ()** %554, align 8
  %555 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.408, i64 0, i64 0)) #9
  %556 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 333
  %557 = bitcast void (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*)** %556 to void ()**
  store void ()* %555, void ()** %557, align 8
  %558 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.409, i64 0, i64 0)) #9
  %559 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 334
  %560 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**)** %559 to void ()**
  store void ()* %558, void ()** %560, align 8
  %561 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.410, i64 0, i64 0)) #9
  %562 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 335
  %563 = bitcast void (%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*)** %562 to void ()**
  store void ()* %561, void ()** %563, align 8
  %564 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.411, i64 0, i64 0)) #9
  %565 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 336
  %566 = bitcast i32 (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64)** %565 to void ()**
  store void ()* %564, void ()** %566, align 8
  %567 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.412, i64 0, i64 0)) #9
  %568 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 337
  %569 = bitcast void (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*)** %568 to void ()**
  store void ()* %567, void ()** %569, align 8
  %570 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.413, i64 0, i64 0)) #9
  %571 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 338
  %572 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32*)** %571 to void ()**
  store void ()* %570, void ()** %572, align 8
  %573 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.414, i64 0, i64 0)) #9
  %574 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 339
  %575 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*)** %574 to void ()**
  store void ()* %573, void ()** %575, align 8
  %576 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.415, i64 0, i64 0)) #9
  %577 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 340
  %578 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %577 to void ()**
  store void ()* %576, void ()** %578, align 8
  %579 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.416, i64 0, i64 0)) #9
  %580 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 341
  %581 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %580 to void ()**
  store void ()* %579, void ()** %581, align 8
  %582 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.417, i64 0, i64 0)) #9
  %583 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 342
  %584 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %583 to void ()**
  store void ()* %582, void ()** %584, align 8
  %585 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.418, i64 0, i64 0)) #9
  %586 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 343
  %587 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %586 to void ()**
  store void ()* %585, void ()** %587, align 8
  %588 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.419, i64 0, i64 0)) #9
  %589 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 344
  %590 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %589 to void ()**
  store void ()* %588, void ()** %590, align 8
  %591 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.420, i64 0, i64 0)) #9
  %592 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 345
  %593 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32*)** %592 to void ()**
  store void ()* %591, void ()** %593, align 8
  %594 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.421, i64 0, i64 0)) #9
  %595 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 346
  %596 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**)** %595 to void ()**
  store void ()* %594, void ()** %596, align 8
  %597 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.422, i64 0, i64 0)) #9
  %598 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 347
  %599 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*)** %598 to void ()**
  store void ()* %597, void ()** %599, align 8
  %600 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.423, i64 0, i64 0)) #9
  %601 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 348
  %602 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)** %601 to void ()**
  store void ()* %600, void ()** %602, align 8
  %603 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.424, i64 0, i64 0)) #9
  %604 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 349
  %605 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**)** %604 to void ()**
  store void ()* %603, void ()** %605, align 8
  %606 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.425, i64 0, i64 0)) #9
  %607 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 350
  %608 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)** %607 to void ()**
  store void ()* %606, void ()** %608, align 8
  %609 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.426, i64 0, i64 0)) #9
  %610 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 351
  %611 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*)** %610 to void ()**
  store void ()* %609, void ()** %611, align 8
  %612 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.427, i64 0, i64 0)) #9
  %613 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 352
  %614 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)** %613 to void ()**
  store void ()* %612, void ()** %614, align 8
  %615 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.428, i64 0, i64 0)) #9
  %616 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 353
  %617 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)** %616 to void ()**
  store void ()* %615, void ()** %617, align 8
  %618 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.429, i64 0, i64 0)) #9
  %619 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 354
  %620 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64)** %619 to void ()**
  store void ()* %618, void ()** %620, align 8
  %621 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.430, i64 0, i64 0)) #9
  %622 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 355
  %623 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*)** %622 to void ()**
  store void ()* %621, void ()** %623, align 8
  %624 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.431, i64 0, i64 0)) #9
  %625 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 356
  %626 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)** %625 to void ()**
  store void ()* %624, void ()** %626, align 8
  %627 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.432, i64 0, i64 0)) #9
  %628 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 357
  %629 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)** %628 to void ()**
  store void ()* %627, void ()** %629, align 8
  %630 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.433, i64 0, i64 0)) #9
  %631 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 358
  %632 = bitcast i64 (%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*)** %631 to void ()**
  store void ()* %630, void ()** %632, align 8
  %633 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.434, i64 0, i64 0)) #9
  %634 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 359
  %635 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32)** %634 to void ()**
  store void ()* %633, void ()** %635, align 8
  %636 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.435, i64 0, i64 0)) #9
  %637 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 360
  %638 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*)** %637 to void ()**
  store void ()* %636, void ()** %638, align 8
  %639 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.436, i64 0, i64 0)) #9
  %640 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 361
  %641 = bitcast void (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*)** %640 to void ()**
  store void ()* %639, void ()** %641, align 8
  %642 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.437, i64 0, i64 0)) #9
  %643 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 362
  %644 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32)** %643 to void ()**
  store void ()* %642, void ()** %644, align 8
  %645 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.438, i64 0, i64 0)) #9
  %646 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 363
  %647 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %646 to void ()**
  store void ()* %645, void ()** %647, align 8
  %648 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.439, i64 0, i64 0)) #9
  %649 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 364
  %650 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %649 to void ()**
  store void ()* %648, void ()** %650, align 8
  %651 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.440, i64 0, i64 0)) #9
  %652 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 365
  %653 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64)** %652 to void ()**
  store void ()* %651, void ()** %653, align 8
  %654 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.441, i64 0, i64 0)) #9
  %655 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 366
  %656 = bitcast i64 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32)** %655 to void ()**
  store void ()* %654, void ()** %656, align 8
  %657 = tail call void ()* %2(%struct.VkDevice_T* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.442, i64 0, i64 0)) #9
  %658 = getelementptr inbounds %struct.loader_dev_dispatch_table, %struct.loader_dev_dispatch_table* %0, i64 0, i32 0, i32 367
  %659 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %658 to void ()**
  store void ()* %657, void ()** %659, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_init_instance_core_dispatch_table(%struct.VkLayerInstanceDispatchTable_*, void ()* (%struct.VkInstance_T*, i8*)*, %struct.VkInstance_T*) local_unnamed_addr #0 {
  %4 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #9
  %5 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 2
  %6 = bitcast void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)** %5 to void ()**
  store void ()* %4, void ()** %6, align 8
  %7 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #9
  %8 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 3
  %9 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %8 to void ()**
  store void ()* %7, void ()** %9, align 8
  %10 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #9
  %11 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 4
  %12 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)** %11 to void ()**
  store void ()* %10, void ()** %12, align 8
  %13 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #9
  %14 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 5
  %15 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)** %14 to void ()**
  store void ()* %13, void ()** %15, align 8
  %16 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #9
  %17 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 6
  %18 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)** %17 to void ()**
  store void ()* %16, void ()** %18, align 8
  %19 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #9
  %20 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 7
  %21 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %20 to void ()**
  store void ()* %19, void ()** %21, align 8
  %22 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #9
  %23 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 8
  %24 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %23 to void ()**
  store void ()* %22, void ()** %24, align 8
  %25 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #9
  %26 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 9
  %27 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %26 to void ()**
  store void ()* %25, void ()** %27, align 8
  %28 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 10
  store void ()* (%struct.VkInstance_T*, i8*)* %1, void ()* (%struct.VkInstance_T*, i8*)** %28, align 8
  %29 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #9
  %30 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 13
  %31 = bitcast i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %30 to void ()**
  store void ()* %29, void ()** %31, align 8
  %32 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.443, i64 0, i64 0)) #9
  %33 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 15
  %34 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)** %33 to void ()**
  store void ()* %32, void ()** %34, align 8
  %35 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0)) #9
  %36 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 16
  %37 = bitcast void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)** %36 to void ()**
  store void ()* %35, void ()** %37, align 8
  %38 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0)) #9
  %39 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 18
  %40 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %39 to void ()**
  store void ()* %38, void ()** %40, align 8
  %41 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0)) #9
  %42 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 19
  %43 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %42 to void ()**
  store void ()* %41, void ()** %43, align 8
  %44 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0)) #9
  %45 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 20
  %46 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %45 to void ()**
  store void ()* %44, void ()** %46, align 8
  %47 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0)) #9
  %48 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 21
  %49 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %48 to void ()**
  store void ()* %47, void ()** %49, align 8
  %50 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0)) #9
  %51 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 22
  %52 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %51 to void ()**
  store void ()* %50, void ()** %52, align 8
  %53 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0)) #9
  %54 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 23
  %55 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** %54 to void ()**
  store void ()* %53, void ()** %55, align 8
  %56 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0)) #9
  %57 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 24
  %58 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %57 to void ()**
  store void ()* %56, void ()** %58, align 8
  %59 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i64 0, i64 0)) #9
  %60 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 25
  %61 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** %60 to void ()**
  store void ()* %59, void ()** %61, align 8
  %62 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0)) #9
  %63 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 26
  %64 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** %63 to void ()**
  store void ()* %62, void ()** %64, align 8
  %65 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.22, i64 0, i64 0)) #9
  %66 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 27
  %67 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** %66 to void ()**
  store void ()* %65, void ()** %67, align 8
  %68 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.23, i64 0, i64 0)) #9
  %69 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 28
  %70 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** %69 to void ()**
  store void ()* %68, void ()** %70, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_init_instance_extension_dispatch_table(%struct.VkLayerInstanceDispatchTable_*, void ()* (%struct.VkInstance_T*, i8*)*, %struct.VkInstance_T*) local_unnamed_addr #0 {
  %4 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #9
  %5 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 29
  %6 = bitcast void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)** %5 to void ()**
  store void ()* %4, void ()** %6, align 8
  %7 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i64 0, i64 0)) #9
  %8 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 30
  %9 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)** %8 to void ()**
  store void ()* %7, void ()** %9, align 8
  %10 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0)) #9
  %11 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 31
  %12 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)** %11 to void ()**
  store void ()* %10, void ()** %12, align 8
  %13 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.27, i64 0, i64 0)) #9
  %14 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 32
  %15 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)** %14 to void ()**
  store void ()* %13, void ()** %15, align 8
  %16 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.28, i64 0, i64 0)) #9
  %17 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 33
  %18 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)** %17 to void ()**
  store void ()* %16, void ()** %18, align 8
  %19 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31, i64 0, i64 0)) #9
  %20 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 34
  %21 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)** %20 to void ()**
  store void ()* %19, void ()** %21, align 8
  %22 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32, i64 0, i64 0)) #9
  %23 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 35
  %24 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)** %23 to void ()**
  store void ()* %22, void ()** %24, align 8
  %25 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.33, i64 0, i64 0)) #9
  %26 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 36
  %27 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)** %26 to void ()**
  store void ()* %25, void ()** %27, align 8
  %28 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0)) #9
  %29 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 37
  %30 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)** %29 to void ()**
  store void ()* %28, void ()** %30, align 8
  %31 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0)) #9
  %32 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 38
  %33 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)** %32 to void ()**
  store void ()* %31, void ()** %33, align 8
  %34 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0)) #9
  %35 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 39
  %36 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)** %35 to void ()**
  store void ()* %34, void ()** %36, align 8
  %37 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0)) #9
  %38 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 40
  %39 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)** %38 to void ()**
  store void ()* %37, void ()** %39, align 8
  %40 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38, i64 0, i64 0)) #9
  %41 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 41
  %42 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %41 to void ()**
  store void ()* %40, void ()** %42, align 8
  %43 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i64 0, i64 0)) #9
  %44 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 42
  %45 = bitcast i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %44 to void ()**
  store void ()* %43, void ()** %45, align 8
  %46 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.41, i64 0, i64 0)) #9
  %47 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 43
  %48 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)** %47 to void ()**
  store void ()* %46, void ()** %48, align 8
  %49 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i64 0, i64 0)) #9
  %50 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 44
  %51 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)** %50 to void ()**
  store void ()* %49, void ()** %51, align 8
  %52 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0)) #9
  %53 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 45
  %54 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)** %53 to void ()**
  store void ()* %52, void ()** %54, align 8
  %55 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.44, i64 0, i64 0)) #9
  %56 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 46
  %57 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %56 to void ()**
  store void ()* %55, void ()** %57, align 8
  %58 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45, i64 0, i64 0)) #9
  %59 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 47
  %60 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %59 to void ()**
  store void ()* %58, void ()** %60, align 8
  %61 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.46, i64 0, i64 0)) #9
  %62 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 48
  %63 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %62 to void ()**
  store void ()* %61, void ()** %63, align 8
  %64 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.47, i64 0, i64 0)) #9
  %65 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 49
  %66 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %65 to void ()**
  store void ()* %64, void ()** %66, align 8
  %67 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.48, i64 0, i64 0)) #9
  %68 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 50
  %69 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** %68 to void ()**
  store void ()* %67, void ()** %69, align 8
  %70 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.49, i64 0, i64 0)) #9
  %71 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 51
  %72 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %71 to void ()**
  store void ()* %70, void ()** %72, align 8
  %73 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0)) #9
  %74 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 52
  %75 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** %74 to void ()**
  store void ()* %73, void ()** %75, align 8
  %76 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #9
  %77 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 53
  %78 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %77 to void ()**
  store void ()* %76, void ()** %78, align 8
  %79 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i64 0, i64 0)) #9
  %80 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 54
  %81 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** %80 to void ()**
  store void ()* %79, void ()** %81, align 8
  %82 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.53, i64 0, i64 0)) #9
  %83 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 55
  %84 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** %83 to void ()**
  store void ()* %82, void ()** %84, align 8
  %85 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.54, i64 0, i64 0)) #9
  %86 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 56
  %87 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** %86 to void ()**
  store void ()* %85, void ()** %87, align 8
  %88 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.55, i64 0, i64 0)) #9
  %89 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 57
  %90 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)** %89 to void ()**
  store void ()* %88, void ()** %90, align 8
  %91 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.56, i64 0, i64 0)) #9
  %92 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 58
  %93 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)** %92 to void ()**
  store void ()* %91, void ()** %93, align 8
  %94 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0)) #9
  %95 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 59
  %96 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)** %95 to void ()**
  store void ()* %94, void ()** %96, align 8
  %97 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0)) #9
  %98 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 60
  %99 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)** %98 to void ()**
  store void ()* %97, void ()** %99, align 8
  %100 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.59, i64 0, i64 0)) #9
  %101 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 61
  %102 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)** %101 to void ()**
  store void ()* %100, void ()** %102, align 8
  %103 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.60, i64 0, i64 0)) #9
  %104 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 62
  %105 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)** %104 to void ()**
  store void ()* %103, void ()** %105, align 8
  %106 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.61, i64 0, i64 0)) #9
  %107 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 63
  %108 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)** %107 to void ()**
  store void ()* %106, void ()** %108, align 8
  %109 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.62, i64 0, i64 0)) #9
  %110 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 64
  %111 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)** %110 to void ()**
  store void ()* %109, void ()** %111, align 8
  %112 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.63, i64 0, i64 0)) #9
  %113 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 65
  %114 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)** %113 to void ()**
  store void ()* %112, void ()** %114, align 8
  %115 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #9
  %116 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 66
  %117 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)** %116 to void ()**
  store void ()* %115, void ()** %117, align 8
  %118 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.65, i64 0, i64 0)) #9
  %119 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 67
  %120 = bitcast void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)** %119 to void ()**
  store void ()* %118, void ()** %120, align 8
  %121 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i64 0, i64 0)) #9
  %122 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 68
  %123 = bitcast void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)** %122 to void ()**
  store void ()* %121, void ()** %123, align 8
  %124 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.69, i64 0, i64 0)) #9
  %125 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 69
  %126 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)** %125 to void ()**
  store void ()* %124, void ()** %126, align 8
  %127 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i64 0, i64 0)) #9
  %128 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 70
  %129 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)** %128 to void ()**
  store void ()* %127, void ()** %129, align 8
  %130 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.71, i64 0, i64 0)) #9
  %131 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 71
  %132 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)** %131 to void ()**
  store void ()* %130, void ()** %132, align 8
  %133 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.80, i64 0, i64 0)) #9
  %134 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 72
  %135 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)** %134 to void ()**
  store void ()* %133, void ()** %135, align 8
  %136 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i64 0, i64 0)) #9
  %137 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 73
  %138 = bitcast void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)** %137 to void ()**
  store void ()* %136, void ()** %138, align 8
  %139 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0)) #9
  %140 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 74
  %141 = bitcast void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)** %140 to void ()**
  store void ()* %139, void ()** %141, align 8
  %142 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.83, i64 0, i64 0)) #9
  %143 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 75
  %144 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)** %143 to void ()**
  store void ()* %142, void ()** %144, align 8
  %145 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.84, i64 0, i64 0)) #9
  %146 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 76
  %147 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)** %146 to void ()**
  store void ()* %145, void ()** %147, align 8
  %148 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.85, i64 0, i64 0)) #9
  %149 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 77
  %150 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)** %149 to void ()**
  store void ()* %148, void ()** %150, align 8
  %151 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.86, i64 0, i64 0)) #9
  %152 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 78
  %153 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)** %152 to void ()**
  store void ()* %151, void ()** %153, align 8
  %154 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.87, i64 0, i64 0)) #9
  %155 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 79
  %156 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)** %155 to void ()**
  store void ()* %154, void ()** %156, align 8
  %157 = tail call void ()* %1(%struct.VkInstance_T* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0)) #9
  %158 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 80
  %159 = bitcast i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %158 to void ()**
  store void ()* %157, void ()** %159, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @loader_lookup_device_dispatch_table(%struct.VkLayerDispatchTable_* readonly, i8* readonly) local_unnamed_addr #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %2587, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* %1, align 1
  %6 = icmp eq i8 %5, 118
  br i1 %6, label %7, label %2587

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %1, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 107
  br i1 %10, label %11, label %2587

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.444, i64 0, i64 0)) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = bitcast %struct.VkLayerDispatchTable_* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %2587

18:                                               ; preds = %11
  %19 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.445, i64 0, i64 0)) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 1
  %23 = bitcast void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %2587

25:                                               ; preds = %18
  %26 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.446, i64 0, i64 0)) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 2
  %30 = bitcast void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %2587

32:                                               ; preds = %25
  %33 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.447, i64 0, i64 0)) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 3
  %37 = bitcast i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %2587

39:                                               ; preds = %32
  %40 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.448, i64 0, i64 0)) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 4
  %44 = bitcast i32 (%struct.VkQueue_T*)** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %2587

46:                                               ; preds = %39
  %47 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.449, i64 0, i64 0)) #15
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 5
  %51 = bitcast i32 (%struct.VkDevice_T*)** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %2587

53:                                               ; preds = %46
  %54 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.450, i64 0, i64 0)) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 6
  %58 = bitcast i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %2587

60:                                               ; preds = %53
  %61 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.451, i64 0, i64 0)) #15
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 7
  %65 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %64 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %2587

67:                                               ; preds = %60
  %68 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.452, i64 0, i64 0)) #15
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 8
  %72 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)** %71 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %2587

74:                                               ; preds = %67
  %75 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.453, i64 0, i64 0)) #15
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 9
  %79 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)** %78 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %2587

81:                                               ; preds = %74
  %82 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.454, i64 0, i64 0)) #15
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 10
  %86 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %85 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %2587

88:                                               ; preds = %81
  %89 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.455, i64 0, i64 0)) #15
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 11
  %93 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %2587

95:                                               ; preds = %88
  %96 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.456, i64 0, i64 0)) #15
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 12
  %100 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)** %99 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %2587

102:                                              ; preds = %95
  %103 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.457, i64 0, i64 0)) #15
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 13
  %107 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)** %106 to i8**
  %108 = load i8*, i8** %107, align 8
  br label %2587

109:                                              ; preds = %102
  %110 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.458, i64 0, i64 0)) #15
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 14
  %114 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)** %113 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %2587

116:                                              ; preds = %109
  %117 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.459, i64 0, i64 0)) #15
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %116
  %120 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 15
  %121 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)** %120 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %2587

123:                                              ; preds = %116
  %124 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.460, i64 0, i64 0)) #15
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %130

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 16
  %128 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** %127 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %2587

130:                                              ; preds = %123
  %131 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.461, i64 0, i64 0)) #15
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %130
  %134 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 17
  %135 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)** %134 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %2587

137:                                              ; preds = %130
  %138 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.462, i64 0, i64 0)) #15
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  %141 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 18
  %142 = bitcast i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)** %141 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %2587

144:                                              ; preds = %137
  %145 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.463, i64 0, i64 0)) #15
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %144
  %148 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 19
  %149 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %148 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %2587

151:                                              ; preds = %144
  %152 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.464, i64 0, i64 0)) #15
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %151
  %155 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 20
  %156 = bitcast void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** %155 to i8**
  %157 = load i8*, i8** %156, align 8
  br label %2587

158:                                              ; preds = %151
  %159 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.465, i64 0, i64 0)) #15
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 21
  %163 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)** %162 to i8**
  %164 = load i8*, i8** %163, align 8
  br label %2587

165:                                              ; preds = %158
  %166 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.466, i64 0, i64 0)) #15
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 22
  %170 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFence_T*)** %169 to i8**
  %171 = load i8*, i8** %170, align 8
  br label %2587

172:                                              ; preds = %165
  %173 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.467, i64 0, i64 0)) #15
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %179

175:                                              ; preds = %172
  %176 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 23
  %177 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)** %176 to i8**
  %178 = load i8*, i8** %177, align 8
  br label %2587

179:                                              ; preds = %172
  %180 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i64 0, i64 0)) #15
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 24
  %184 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)** %183 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %2587

186:                                              ; preds = %179
  %187 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.469, i64 0, i64 0)) #15
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %186
  %190 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 25
  %191 = bitcast void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)** %190 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %2587

193:                                              ; preds = %186
  %194 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.470, i64 0, i64 0)) #15
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %200

196:                                              ; preds = %193
  %197 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 26
  %198 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)** %197 to i8**
  %199 = load i8*, i8** %198, align 8
  br label %2587

200:                                              ; preds = %193
  %201 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.471, i64 0, i64 0)) #15
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %207

203:                                              ; preds = %200
  %204 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 27
  %205 = bitcast void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)** %204 to i8**
  %206 = load i8*, i8** %205, align 8
  br label %2587

207:                                              ; preds = %200
  %208 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.472, i64 0, i64 0)) #15
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %214

210:                                              ; preds = %207
  %211 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 28
  %212 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)** %211 to i8**
  %213 = load i8*, i8** %212, align 8
  br label %2587

214:                                              ; preds = %207
  %215 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.473, i64 0, i64 0)) #15
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 29
  %219 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)** %218 to i8**
  %220 = load i8*, i8** %219, align 8
  br label %2587

221:                                              ; preds = %214
  %222 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.474, i64 0, i64 0)) #15
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %228

224:                                              ; preds = %221
  %225 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 30
  %226 = bitcast i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)** %225 to i8**
  %227 = load i8*, i8** %226, align 8
  br label %2587

228:                                              ; preds = %221
  %229 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.475, i64 0, i64 0)) #15
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %235

231:                                              ; preds = %228
  %232 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 31
  %233 = bitcast i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)** %232 to i8**
  %234 = load i8*, i8** %233, align 8
  br label %2587

235:                                              ; preds = %228
  %236 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.476, i64 0, i64 0)) #15
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %242

238:                                              ; preds = %235
  %239 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 32
  %240 = bitcast void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)** %239 to i8**
  %241 = load i8*, i8** %240, align 8
  br label %2587

242:                                              ; preds = %235
  %243 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.477, i64 0, i64 0)) #15
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 33
  %247 = bitcast i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)** %246 to i8**
  %248 = load i8*, i8** %247, align 8
  br label %2587

249:                                              ; preds = %242
  %250 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.478, i64 0, i64 0)) #15
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 34
  %254 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)** %253 to i8**
  %255 = load i8*, i8** %254, align 8
  br label %2587

256:                                              ; preds = %249
  %257 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.479, i64 0, i64 0)) #15
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %263

259:                                              ; preds = %256
  %260 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 35
  %261 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** %260 to i8**
  %262 = load i8*, i8** %261, align 8
  br label %2587

263:                                              ; preds = %256
  %264 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.480, i64 0, i64 0)) #15
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %270

266:                                              ; preds = %263
  %267 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 36
  %268 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)** %267 to i8**
  %269 = load i8*, i8** %268, align 8
  br label %2587

270:                                              ; preds = %263
  %271 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.481, i64 0, i64 0)) #15
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %277

273:                                              ; preds = %270
  %274 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 37
  %275 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)** %274 to i8**
  %276 = load i8*, i8** %275, align 8
  br label %2587

277:                                              ; preds = %270
  %278 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.482, i64 0, i64 0)) #15
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %284

280:                                              ; preds = %277
  %281 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 38
  %282 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)** %281 to i8**
  %283 = load i8*, i8** %282, align 8
  br label %2587

284:                                              ; preds = %277
  %285 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.483, i64 0, i64 0)) #15
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %291

287:                                              ; preds = %284
  %288 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 39
  %289 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %288 to i8**
  %290 = load i8*, i8** %289, align 8
  br label %2587

291:                                              ; preds = %284
  %292 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.484, i64 0, i64 0)) #15
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %298

294:                                              ; preds = %291
  %295 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 40
  %296 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)** %295 to i8**
  %297 = load i8*, i8** %296, align 8
  br label %2587

298:                                              ; preds = %291
  %299 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.485, i64 0, i64 0)) #15
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %305

301:                                              ; preds = %298
  %302 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 41
  %303 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)** %302 to i8**
  %304 = load i8*, i8** %303, align 8
  br label %2587

305:                                              ; preds = %298
  %306 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.486, i64 0, i64 0)) #15
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %312

308:                                              ; preds = %305
  %309 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 42
  %310 = bitcast void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)** %309 to i8**
  %311 = load i8*, i8** %310, align 8
  br label %2587

312:                                              ; preds = %305
  %313 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.487, i64 0, i64 0)) #15
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %319

315:                                              ; preds = %312
  %316 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 43
  %317 = bitcast i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)** %316 to i8**
  %318 = load i8*, i8** %317, align 8
  br label %2587

319:                                              ; preds = %312
  %320 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.488, i64 0, i64 0)) #15
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %326

322:                                              ; preds = %319
  %323 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 44
  %324 = bitcast void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %323 to i8**
  %325 = load i8*, i8** %324, align 8
  br label %2587

326:                                              ; preds = %319
  %327 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.489, i64 0, i64 0)) #15
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %333

329:                                              ; preds = %326
  %330 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 45
  %331 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)** %330 to i8**
  %332 = load i8*, i8** %331, align 8
  br label %2587

333:                                              ; preds = %326
  %334 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.490, i64 0, i64 0)) #15
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %340

336:                                              ; preds = %333
  %337 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 46
  %338 = bitcast void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)** %337 to i8**
  %339 = load i8*, i8** %338, align 8
  br label %2587

340:                                              ; preds = %333
  %341 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.491, i64 0, i64 0)) #15
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %347

343:                                              ; preds = %340
  %344 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 47
  %345 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)** %344 to i8**
  %346 = load i8*, i8** %345, align 8
  br label %2587

347:                                              ; preds = %340
  %348 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.492, i64 0, i64 0)) #15
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %354

350:                                              ; preds = %347
  %351 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 48
  %352 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)** %351 to i8**
  %353 = load i8*, i8** %352, align 8
  br label %2587

354:                                              ; preds = %347
  %355 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.493, i64 0, i64 0)) #15
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %361

357:                                              ; preds = %354
  %358 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 49
  %359 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %358 to i8**
  %360 = load i8*, i8** %359, align 8
  br label %2587

361:                                              ; preds = %354
  %362 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.494, i64 0, i64 0)) #15
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %368

364:                                              ; preds = %361
  %365 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 50
  %366 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %365 to i8**
  %367 = load i8*, i8** %366, align 8
  br label %2587

368:                                              ; preds = %361
  %369 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.495, i64 0, i64 0)) #15
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %375

371:                                              ; preds = %368
  %372 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 51
  %373 = bitcast void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)** %372 to i8**
  %374 = load i8*, i8** %373, align 8
  br label %2587

375:                                              ; preds = %368
  %376 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.496, i64 0, i64 0)) #15
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %382

378:                                              ; preds = %375
  %379 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 52
  %380 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)** %379 to i8**
  %381 = load i8*, i8** %380, align 8
  br label %2587

382:                                              ; preds = %375
  %383 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.497, i64 0, i64 0)) #15
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %389

385:                                              ; preds = %382
  %386 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 53
  %387 = bitcast void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %386 to i8**
  %388 = load i8*, i8** %387, align 8
  br label %2587

389:                                              ; preds = %382
  %390 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.498, i64 0, i64 0)) #15
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %396

392:                                              ; preds = %389
  %393 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 54
  %394 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)** %393 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %2587

396:                                              ; preds = %389
  %397 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.499, i64 0, i64 0)) #15
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %403

399:                                              ; preds = %396
  %400 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 55
  %401 = bitcast void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)** %400 to i8**
  %402 = load i8*, i8** %401, align 8
  br label %2587

403:                                              ; preds = %396
  %404 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.500, i64 0, i64 0)) #15
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %410

406:                                              ; preds = %403
  %407 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 56
  %408 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)** %407 to i8**
  %409 = load i8*, i8** %408, align 8
  br label %2587

410:                                              ; preds = %403
  %411 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.501, i64 0, i64 0)) #15
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %417

413:                                              ; preds = %410
  %414 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 57
  %415 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)** %414 to i8**
  %416 = load i8*, i8** %415, align 8
  br label %2587

417:                                              ; preds = %410
  %418 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.502, i64 0, i64 0)) #15
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %424

420:                                              ; preds = %417
  %421 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 58
  %422 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)** %421 to i8**
  %423 = load i8*, i8** %422, align 8
  br label %2587

424:                                              ; preds = %417
  %425 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.503, i64 0, i64 0)) #15
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %431

427:                                              ; preds = %424
  %428 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 59
  %429 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)** %428 to i8**
  %430 = load i8*, i8** %429, align 8
  br label %2587

431:                                              ; preds = %424
  %432 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.504, i64 0, i64 0)) #15
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %438

434:                                              ; preds = %431
  %435 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 60
  %436 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)** %435 to i8**
  %437 = load i8*, i8** %436, align 8
  br label %2587

438:                                              ; preds = %431
  %439 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.505, i64 0, i64 0)) #15
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %445

441:                                              ; preds = %438
  %442 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 61
  %443 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)** %442 to i8**
  %444 = load i8*, i8** %443, align 8
  br label %2587

445:                                              ; preds = %438
  %446 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.506, i64 0, i64 0)) #15
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %452

448:                                              ; preds = %445
  %449 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 62
  %450 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)** %449 to i8**
  %451 = load i8*, i8** %450, align 8
  br label %2587

452:                                              ; preds = %445
  %453 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.507, i64 0, i64 0)) #15
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %459

455:                                              ; preds = %452
  %456 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 63
  %457 = bitcast void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)** %456 to i8**
  %458 = load i8*, i8** %457, align 8
  br label %2587

459:                                              ; preds = %452
  %460 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.508, i64 0, i64 0)) #15
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %466

462:                                              ; preds = %459
  %463 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 64
  %464 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)** %463 to i8**
  %465 = load i8*, i8** %464, align 8
  br label %2587

466:                                              ; preds = %459
  %467 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.509, i64 0, i64 0)) #15
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %473

469:                                              ; preds = %466
  %470 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 65
  %471 = bitcast void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)** %470 to i8**
  %472 = load i8*, i8** %471, align 8
  br label %2587

473:                                              ; preds = %466
  %474 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.510, i64 0, i64 0)) #15
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %480

476:                                              ; preds = %473
  %477 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 66
  %478 = bitcast i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %477 to i8**
  %479 = load i8*, i8** %478, align 8
  br label %2587

480:                                              ; preds = %473
  %481 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.511, i64 0, i64 0)) #15
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %487

483:                                              ; preds = %480
  %484 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 67
  %485 = bitcast void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)** %484 to i8**
  %486 = load i8*, i8** %485, align 8
  br label %2587

487:                                              ; preds = %480
  %488 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.512, i64 0, i64 0)) #15
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %494

490:                                              ; preds = %487
  %491 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 68
  %492 = bitcast void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)** %491 to i8**
  %493 = load i8*, i8** %492, align 8
  br label %2587

494:                                              ; preds = %487
  %495 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.513, i64 0, i64 0)) #15
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %501

497:                                              ; preds = %494
  %498 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 69
  %499 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)** %498 to i8**
  %500 = load i8*, i8** %499, align 8
  br label %2587

501:                                              ; preds = %494
  %502 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.514, i64 0, i64 0)) #15
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %508

504:                                              ; preds = %501
  %505 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 70
  %506 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)** %505 to i8**
  %507 = load i8*, i8** %506, align 8
  br label %2587

508:                                              ; preds = %501
  %509 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.515, i64 0, i64 0)) #15
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %515

511:                                              ; preds = %508
  %512 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 71
  %513 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)** %512 to i8**
  %514 = load i8*, i8** %513, align 8
  br label %2587

515:                                              ; preds = %508
  %516 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.516, i64 0, i64 0)) #15
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %522

518:                                              ; preds = %515
  %519 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 72
  %520 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)** %519 to i8**
  %521 = load i8*, i8** %520, align 8
  br label %2587

522:                                              ; preds = %515
  %523 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.517, i64 0, i64 0)) #15
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %529

525:                                              ; preds = %522
  %526 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 73
  %527 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)** %526 to i8**
  %528 = load i8*, i8** %527, align 8
  br label %2587

529:                                              ; preds = %522
  %530 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.518, i64 0, i64 0)) #15
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %536

532:                                              ; preds = %529
  %533 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 74
  %534 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)** %533 to i8**
  %535 = load i8*, i8** %534, align 8
  br label %2587

536:                                              ; preds = %529
  %537 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.519, i64 0, i64 0)) #15
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %543

539:                                              ; preds = %536
  %540 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 75
  %541 = bitcast i32 (%struct.VkCommandBuffer_T*)** %540 to i8**
  %542 = load i8*, i8** %541, align 8
  br label %2587

543:                                              ; preds = %536
  %544 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.520, i64 0, i64 0)) #15
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %550

546:                                              ; preds = %543
  %547 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 76
  %548 = bitcast i32 (%struct.VkCommandBuffer_T*, i32)** %547 to i8**
  %549 = load i8*, i8** %548, align 8
  br label %2587

550:                                              ; preds = %543
  %551 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.521, i64 0, i64 0)) #15
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %557

553:                                              ; preds = %550
  %554 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 77
  %555 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)** %554 to i8**
  %556 = load i8*, i8** %555, align 8
  br label %2587

557:                                              ; preds = %550
  %558 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.522, i64 0, i64 0)) #15
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %564

560:                                              ; preds = %557
  %561 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 78
  %562 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)** %561 to i8**
  %563 = load i8*, i8** %562, align 8
  br label %2587

564:                                              ; preds = %557
  %565 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.523, i64 0, i64 0)) #15
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %567, label %571

567:                                              ; preds = %564
  %568 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 79
  %569 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %568 to i8**
  %570 = load i8*, i8** %569, align 8
  br label %2587

571:                                              ; preds = %564
  %572 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.524, i64 0, i64 0)) #15
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %578

574:                                              ; preds = %571
  %575 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 80
  %576 = bitcast void (%struct.VkCommandBuffer_T*, float)** %575 to i8**
  %577 = load i8*, i8** %576, align 8
  br label %2587

578:                                              ; preds = %571
  %579 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.525, i64 0, i64 0)) #15
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %585

581:                                              ; preds = %578
  %582 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 81
  %583 = bitcast void (%struct.VkCommandBuffer_T*, float, float, float)** %582 to i8**
  %584 = load i8*, i8** %583, align 8
  br label %2587

585:                                              ; preds = %578
  %586 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.526, i64 0, i64 0)) #15
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %592

588:                                              ; preds = %585
  %589 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 82
  %590 = bitcast void (%struct.VkCommandBuffer_T*, float*)** %589 to i8**
  %591 = load i8*, i8** %590, align 8
  br label %2587

592:                                              ; preds = %585
  %593 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.527, i64 0, i64 0)) #15
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %599

595:                                              ; preds = %592
  %596 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 83
  %597 = bitcast void (%struct.VkCommandBuffer_T*, float, float)** %596 to i8**
  %598 = load i8*, i8** %597, align 8
  br label %2587

599:                                              ; preds = %592
  %600 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.528, i64 0, i64 0)) #15
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %606

602:                                              ; preds = %599
  %603 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 84
  %604 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %603 to i8**
  %605 = load i8*, i8** %604, align 8
  br label %2587

606:                                              ; preds = %599
  %607 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.529, i64 0, i64 0)) #15
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %613

609:                                              ; preds = %606
  %610 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 85
  %611 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %610 to i8**
  %612 = load i8*, i8** %611, align 8
  br label %2587

613:                                              ; preds = %606
  %614 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.530, i64 0, i64 0)) #15
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %620

616:                                              ; preds = %613
  %617 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 86
  %618 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %617 to i8**
  %619 = load i8*, i8** %618, align 8
  br label %2587

620:                                              ; preds = %613
  %621 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.531, i64 0, i64 0)) #15
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %623, label %627

623:                                              ; preds = %620
  %624 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 87
  %625 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)** %624 to i8**
  %626 = load i8*, i8** %625, align 8
  br label %2587

627:                                              ; preds = %620
  %628 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.532, i64 0, i64 0)) #15
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %634

630:                                              ; preds = %627
  %631 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 88
  %632 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)** %631 to i8**
  %633 = load i8*, i8** %632, align 8
  br label %2587

634:                                              ; preds = %627
  %635 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.533, i64 0, i64 0)) #15
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %641

637:                                              ; preds = %634
  %638 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 89
  %639 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %638 to i8**
  %640 = load i8*, i8** %639, align 8
  br label %2587

641:                                              ; preds = %634
  %642 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.534, i64 0, i64 0)) #15
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %644, label %648

644:                                              ; preds = %641
  %645 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 90
  %646 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)** %645 to i8**
  %647 = load i8*, i8** %646, align 8
  br label %2587

648:                                              ; preds = %641
  %649 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.535, i64 0, i64 0)) #15
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %655

651:                                              ; preds = %648
  %652 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 91
  %653 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)** %652 to i8**
  %654 = load i8*, i8** %653, align 8
  br label %2587

655:                                              ; preds = %648
  %656 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.536, i64 0, i64 0)) #15
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %662

658:                                              ; preds = %655
  %659 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 92
  %660 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)** %659 to i8**
  %661 = load i8*, i8** %660, align 8
  br label %2587

662:                                              ; preds = %655
  %663 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.537, i64 0, i64 0)) #15
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %665, label %669

665:                                              ; preds = %662
  %666 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 93
  %667 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)** %666 to i8**
  %668 = load i8*, i8** %667, align 8
  br label %2587

669:                                              ; preds = %662
  %670 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i64 0, i64 0)) #15
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %676

672:                                              ; preds = %669
  %673 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 94
  %674 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32)** %673 to i8**
  %675 = load i8*, i8** %674, align 8
  br label %2587

676:                                              ; preds = %669
  %677 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.539, i64 0, i64 0)) #15
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %683

679:                                              ; preds = %676
  %680 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 95
  %681 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)** %680 to i8**
  %682 = load i8*, i8** %681, align 8
  br label %2587

683:                                              ; preds = %676
  %684 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.540, i64 0, i64 0)) #15
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %690

686:                                              ; preds = %683
  %687 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 96
  %688 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)** %687 to i8**
  %689 = load i8*, i8** %688, align 8
  br label %2587

690:                                              ; preds = %683
  %691 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.541, i64 0, i64 0)) #15
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %697

693:                                              ; preds = %690
  %694 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 97
  %695 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)** %694 to i8**
  %696 = load i8*, i8** %695, align 8
  br label %2587

697:                                              ; preds = %690
  %698 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.542, i64 0, i64 0)) #15
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %704

700:                                              ; preds = %697
  %701 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 98
  %702 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)** %701 to i8**
  %703 = load i8*, i8** %702, align 8
  br label %2587

704:                                              ; preds = %697
  %705 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.543, i64 0, i64 0)) #15
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %711

707:                                              ; preds = %704
  %708 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 99
  %709 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)** %708 to i8**
  %710 = load i8*, i8** %709, align 8
  br label %2587

711:                                              ; preds = %704
  %712 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.544, i64 0, i64 0)) #15
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %718

714:                                              ; preds = %711
  %715 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 100
  %716 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)** %715 to i8**
  %717 = load i8*, i8** %716, align 8
  br label %2587

718:                                              ; preds = %711
  %719 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.545, i64 0, i64 0)) #15
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %725

721:                                              ; preds = %718
  %722 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 101
  %723 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)** %722 to i8**
  %724 = load i8*, i8** %723, align 8
  br label %2587

725:                                              ; preds = %718
  %726 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.546, i64 0, i64 0)) #15
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %732

728:                                              ; preds = %725
  %729 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 102
  %730 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)** %729 to i8**
  %731 = load i8*, i8** %730, align 8
  br label %2587

732:                                              ; preds = %725
  %733 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.547, i64 0, i64 0)) #15
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %739

735:                                              ; preds = %732
  %736 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 103
  %737 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)** %736 to i8**
  %738 = load i8*, i8** %737, align 8
  br label %2587

739:                                              ; preds = %732
  %740 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.548, i64 0, i64 0)) #15
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %742, label %746

742:                                              ; preds = %739
  %743 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 104
  %744 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)** %743 to i8**
  %745 = load i8*, i8** %744, align 8
  br label %2587

746:                                              ; preds = %739
  %747 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.549, i64 0, i64 0)) #15
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %753

749:                                              ; preds = %746
  %750 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 105
  %751 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)** %750 to i8**
  %752 = load i8*, i8** %751, align 8
  br label %2587

753:                                              ; preds = %746
  %754 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.550, i64 0, i64 0)) #15
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %760

756:                                              ; preds = %753
  %757 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 106
  %758 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)** %757 to i8**
  %759 = load i8*, i8** %758, align 8
  br label %2587

760:                                              ; preds = %753
  %761 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.551, i64 0, i64 0)) #15
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %767

763:                                              ; preds = %760
  %764 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 107
  %765 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)** %764 to i8**
  %766 = load i8*, i8** %765, align 8
  br label %2587

767:                                              ; preds = %760
  %768 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.552, i64 0, i64 0)) #15
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %774

770:                                              ; preds = %767
  %771 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 108
  %772 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)** %771 to i8**
  %773 = load i8*, i8** %772, align 8
  br label %2587

774:                                              ; preds = %767
  %775 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.553, i64 0, i64 0)) #15
  %776 = icmp eq i32 %775, 0
  br i1 %776, label %777, label %781

777:                                              ; preds = %774
  %778 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 109
  %779 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)** %778 to i8**
  %780 = load i8*, i8** %779, align 8
  br label %2587

781:                                              ; preds = %774
  %782 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.554, i64 0, i64 0)) #15
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %784, label %788

784:                                              ; preds = %781
  %785 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 110
  %786 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)** %785 to i8**
  %787 = load i8*, i8** %786, align 8
  br label %2587

788:                                              ; preds = %781
  %789 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.555, i64 0, i64 0)) #15
  %790 = icmp eq i32 %789, 0
  br i1 %790, label %791, label %795

791:                                              ; preds = %788
  %792 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 111
  %793 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)** %792 to i8**
  %794 = load i8*, i8** %793, align 8
  br label %2587

795:                                              ; preds = %788
  %796 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.556, i64 0, i64 0)) #15
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %802

798:                                              ; preds = %795
  %799 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 112
  %800 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)** %799 to i8**
  %801 = load i8*, i8** %800, align 8
  br label %2587

802:                                              ; preds = %795
  %803 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.557, i64 0, i64 0)) #15
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %805, label %809

805:                                              ; preds = %802
  %806 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 113
  %807 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)** %806 to i8**
  %808 = load i8*, i8** %807, align 8
  br label %2587

809:                                              ; preds = %802
  %810 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.558, i64 0, i64 0)) #15
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %812, label %816

812:                                              ; preds = %809
  %813 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 114
  %814 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)** %813 to i8**
  %815 = load i8*, i8** %814, align 8
  br label %2587

816:                                              ; preds = %809
  %817 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.559, i64 0, i64 0)) #15
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %819, label %823

819:                                              ; preds = %816
  %820 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 115
  %821 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)** %820 to i8**
  %822 = load i8*, i8** %821, align 8
  br label %2587

823:                                              ; preds = %816
  %824 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.560, i64 0, i64 0)) #15
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %830

826:                                              ; preds = %823
  %827 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 116
  %828 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)** %827 to i8**
  %829 = load i8*, i8** %828, align 8
  br label %2587

830:                                              ; preds = %823
  %831 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.561, i64 0, i64 0)) #15
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %833, label %837

833:                                              ; preds = %830
  %834 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 117
  %835 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)** %834 to i8**
  %836 = load i8*, i8** %835, align 8
  br label %2587

837:                                              ; preds = %830
  %838 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.562, i64 0, i64 0)) #15
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %840, label %844

840:                                              ; preds = %837
  %841 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 118
  %842 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %841 to i8**
  %843 = load i8*, i8** %842, align 8
  br label %2587

844:                                              ; preds = %837
  %845 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.563, i64 0, i64 0)) #15
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %847, label %851

847:                                              ; preds = %844
  %848 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 119
  %849 = bitcast void (%struct.VkCommandBuffer_T*)** %848 to i8**
  %850 = load i8*, i8** %849, align 8
  br label %2587

851:                                              ; preds = %844
  %852 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.564, i64 0, i64 0)) #15
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %854, label %858

854:                                              ; preds = %851
  %855 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 120
  %856 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)** %855 to i8**
  %857 = load i8*, i8** %856, align 8
  br label %2587

858:                                              ; preds = %851
  %859 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.565, i64 0, i64 0)) #15
  %860 = icmp eq i32 %859, 0
  br i1 %860, label %861, label %865

861:                                              ; preds = %858
  %862 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 121
  %863 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)** %862 to i8**
  %864 = load i8*, i8** %863, align 8
  br label %2587

865:                                              ; preds = %858
  %866 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.566, i64 0, i64 0)) #15
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %868, label %872

868:                                              ; preds = %865
  %869 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 122
  %870 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)** %869 to i8**
  %871 = load i8*, i8** %870, align 8
  br label %2587

872:                                              ; preds = %865
  %873 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.567, i64 0, i64 0)) #15
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %879

875:                                              ; preds = %872
  %876 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 123
  %877 = bitcast void (%struct.VkDevice_T*, i32, i32, i32, i32*)** %876 to i8**
  %878 = load i8*, i8** %877, align 8
  br label %2587

879:                                              ; preds = %872
  %880 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.568, i64 0, i64 0)) #15
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %882, label %886

882:                                              ; preds = %879
  %883 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 124
  %884 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %883 to i8**
  %885 = load i8*, i8** %884, align 8
  br label %2587

886:                                              ; preds = %879
  %887 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.569, i64 0, i64 0)) #15
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %893

889:                                              ; preds = %886
  %890 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 125
  %891 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)** %890 to i8**
  %892 = load i8*, i8** %891, align 8
  br label %2587

893:                                              ; preds = %886
  %894 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.570, i64 0, i64 0)) #15
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %896, label %900

896:                                              ; preds = %893
  %897 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 126
  %898 = bitcast void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %897 to i8**
  %899 = load i8*, i8** %898, align 8
  br label %2587

900:                                              ; preds = %893
  %901 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.571, i64 0, i64 0)) #15
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %903, label %907

903:                                              ; preds = %900
  %904 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 127
  %905 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %904 to i8**
  %906 = load i8*, i8** %905, align 8
  br label %2587

907:                                              ; preds = %900
  %908 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.572, i64 0, i64 0)) #15
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %914

910:                                              ; preds = %907
  %911 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 128
  %912 = bitcast void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)** %911 to i8**
  %913 = load i8*, i8** %912, align 8
  br label %2587

914:                                              ; preds = %907
  %915 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.573, i64 0, i64 0)) #15
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %917, label %921

917:                                              ; preds = %914
  %918 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 129
  %919 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)** %918 to i8**
  %920 = load i8*, i8** %919, align 8
  br label %2587

921:                                              ; preds = %914
  %922 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.574, i64 0, i64 0)) #15
  %923 = icmp eq i32 %922, 0
  br i1 %923, label %924, label %928

924:                                              ; preds = %921
  %925 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 130
  %926 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)** %925 to i8**
  %927 = load i8*, i8** %926, align 8
  br label %2587

928:                                              ; preds = %921
  %929 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.575, i64 0, i64 0)) #15
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %935

931:                                              ; preds = %928
  %932 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 131
  %933 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)** %932 to i8**
  %934 = load i8*, i8** %933, align 8
  br label %2587

935:                                              ; preds = %928
  %936 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.576, i64 0, i64 0)) #15
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %938, label %942

938:                                              ; preds = %935
  %939 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 132
  %940 = bitcast void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)** %939 to i8**
  %941 = load i8*, i8** %940, align 8
  br label %2587

942:                                              ; preds = %935
  %943 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.577, i64 0, i64 0)) #15
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %949

945:                                              ; preds = %942
  %946 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 133
  %947 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)** %946 to i8**
  %948 = load i8*, i8** %947, align 8
  br label %2587

949:                                              ; preds = %942
  %950 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.578, i64 0, i64 0)) #15
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %952, label %956

952:                                              ; preds = %949
  %953 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 134
  %954 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)** %953 to i8**
  %955 = load i8*, i8** %954, align 8
  br label %2587

956:                                              ; preds = %949
  %957 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.579, i64 0, i64 0)) #15
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %959, label %963

959:                                              ; preds = %956
  %960 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 135
  %961 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)** %960 to i8**
  %962 = load i8*, i8** %961, align 8
  br label %2587

963:                                              ; preds = %956
  %964 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.580, i64 0, i64 0)) #15
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %966, label %970

966:                                              ; preds = %963
  %967 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 136
  %968 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)** %967 to i8**
  %969 = load i8*, i8** %968, align 8
  br label %2587

970:                                              ; preds = %963
  %971 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.581, i64 0, i64 0)) #15
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %973, label %977

973:                                              ; preds = %970
  %974 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 137
  %975 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %974 to i8**
  %976 = load i8*, i8** %975, align 8
  br label %2587

977:                                              ; preds = %970
  %978 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.582, i64 0, i64 0)) #15
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %984

980:                                              ; preds = %977
  %981 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 138
  %982 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %981 to i8**
  %983 = load i8*, i8** %982, align 8
  br label %2587

984:                                              ; preds = %977
  %985 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.583, i64 0, i64 0)) #15
  %986 = icmp eq i32 %985, 0
  br i1 %986, label %987, label %991

987:                                              ; preds = %984
  %988 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 139
  %989 = bitcast i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %988 to i8**
  %990 = load i8*, i8** %989, align 8
  br label %2587

991:                                              ; preds = %984
  %992 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.584, i64 0, i64 0)) #15
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %994, label %998

994:                                              ; preds = %991
  %995 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 140
  %996 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)** %995 to i8**
  %997 = load i8*, i8** %996, align 8
  br label %2587

998:                                              ; preds = %991
  %999 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.585, i64 0, i64 0)) #15
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1001, label %1005

1001:                                             ; preds = %998
  %1002 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 141
  %1003 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)** %1002 to i8**
  %1004 = load i8*, i8** %1003, align 8
  br label %2587

1005:                                             ; preds = %998
  %1006 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.586, i64 0, i64 0)) #15
  %1007 = icmp eq i32 %1006, 0
  br i1 %1007, label %1008, label %1012

1008:                                             ; preds = %1005
  %1009 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 142
  %1010 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)** %1009 to i8**
  %1011 = load i8*, i8** %1010, align 8
  br label %2587

1012:                                             ; preds = %1005
  %1013 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.587, i64 0, i64 0)) #15
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1015, label %1019

1015:                                             ; preds = %1012
  %1016 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 143
  %1017 = bitcast void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)** %1016 to i8**
  %1018 = load i8*, i8** %1017, align 8
  br label %2587

1019:                                             ; preds = %1012
  %1020 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.588, i64 0, i64 0)) #15
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1026

1022:                                             ; preds = %1019
  %1023 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 144
  %1024 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)** %1023 to i8**
  %1025 = load i8*, i8** %1024, align 8
  br label %2587

1026:                                             ; preds = %1019
  %1027 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.589, i64 0, i64 0)) #15
  %1028 = icmp eq i32 %1027, 0
  br i1 %1028, label %1029, label %1033

1029:                                             ; preds = %1026
  %1030 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 145
  %1031 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)** %1030 to i8**
  %1032 = load i8*, i8** %1031, align 8
  br label %2587

1033:                                             ; preds = %1026
  %1034 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.590, i64 0, i64 0)) #15
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1036, label %1040

1036:                                             ; preds = %1033
  %1037 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 146
  %1038 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)** %1037 to i8**
  %1039 = load i8*, i8** %1038, align 8
  br label %2587

1040:                                             ; preds = %1033
  %1041 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.591, i64 0, i64 0)) #15
  %1042 = icmp eq i32 %1041, 0
  br i1 %1042, label %1043, label %1047

1043:                                             ; preds = %1040
  %1044 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 147
  %1045 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %1044 to i8**
  %1046 = load i8*, i8** %1045, align 8
  br label %2587

1047:                                             ; preds = %1040
  %1048 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.592, i64 0, i64 0)) #15
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1050, label %1054

1050:                                             ; preds = %1047
  %1051 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 148
  %1052 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %1051 to i8**
  %1053 = load i8*, i8** %1052, align 8
  br label %2587

1054:                                             ; preds = %1047
  %1055 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.593, i64 0, i64 0)) #15
  %1056 = icmp eq i32 %1055, 0
  br i1 %1056, label %1057, label %1061

1057:                                             ; preds = %1054
  %1058 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 149
  %1059 = bitcast i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)** %1058 to i8**
  %1060 = load i8*, i8** %1059, align 8
  br label %2587

1061:                                             ; preds = %1054
  %1062 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.594, i64 0, i64 0)) #15
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1064, label %1068

1064:                                             ; preds = %1061
  %1065 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 150
  %1066 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %1065 to i8**
  %1067 = load i8*, i8** %1066, align 8
  br label %2587

1068:                                             ; preds = %1061
  %1069 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.595, i64 0, i64 0)) #15
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1071, label %1075

1071:                                             ; preds = %1068
  %1072 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 151
  %1073 = bitcast void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)** %1072 to i8**
  %1074 = load i8*, i8** %1073, align 8
  br label %2587

1075:                                             ; preds = %1068
  %1076 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.596, i64 0, i64 0)) #15
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1078, label %1082

1078:                                             ; preds = %1075
  %1079 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 152
  %1080 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)** %1079 to i8**
  %1081 = load i8*, i8** %1080, align 8
  br label %2587

1082:                                             ; preds = %1075
  %1083 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.597, i64 0, i64 0)) #15
  %1084 = icmp eq i32 %1083, 0
  br i1 %1084, label %1085, label %1089

1085:                                             ; preds = %1082
  %1086 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 153
  %1087 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)** %1086 to i8**
  %1088 = load i8*, i8** %1087, align 8
  br label %2587

1089:                                             ; preds = %1082
  %1090 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.598, i64 0, i64 0)) #15
  %1091 = icmp eq i32 %1090, 0
  br i1 %1091, label %1092, label %1096

1092:                                             ; preds = %1089
  %1093 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 154
  %1094 = bitcast i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)** %1093 to i8**
  %1095 = load i8*, i8** %1094, align 8
  br label %2587

1096:                                             ; preds = %1089
  %1097 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.599, i64 0, i64 0)) #15
  %1098 = icmp eq i32 %1097, 0
  br i1 %1098, label %1099, label %1103

1099:                                             ; preds = %1096
  %1100 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 155
  %1101 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceGroupPresentCapabilitiesKHR*)** %1100 to i8**
  %1102 = load i8*, i8** %1101, align 8
  br label %2587

1103:                                             ; preds = %1096
  %1104 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.600, i64 0, i64 0)) #15
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1106, label %1110

1106:                                             ; preds = %1103
  %1107 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 156
  %1108 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)** %1107 to i8**
  %1109 = load i8*, i8** %1108, align 8
  br label %2587

1110:                                             ; preds = %1103
  %1111 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.601, i64 0, i64 0)) #15
  %1112 = icmp eq i32 %1111, 0
  br i1 %1112, label %1113, label %1117

1113:                                             ; preds = %1110
  %1114 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 157
  %1115 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAcquireNextImageInfoKHR*, i32*)** %1114 to i8**
  %1116 = load i8*, i8** %1115, align 8
  br label %2587

1117:                                             ; preds = %1110
  %1118 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.602, i64 0, i64 0)) #15
  %1119 = icmp eq i32 %1118, 0
  br i1 %1119, label %1120, label %1124

1120:                                             ; preds = %1117
  %1121 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 158
  %1122 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %1121 to i8**
  %1123 = load i8*, i8** %1122, align 8
  br label %2587

1124:                                             ; preds = %1117
  %1125 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.603, i64 0, i64 0)) #15
  %1126 = icmp eq i32 %1125, 0
  br i1 %1126, label %1127, label %1131

1127:                                             ; preds = %1124
  %1128 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 159
  %1129 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**)** %1128 to i8**
  %1130 = load i8*, i8** %1129, align 8
  br label %2587

1131:                                             ; preds = %1124
  %1132 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.604, i64 0, i64 0)) #15
  %1133 = icmp eq i32 %1132, 0
  br i1 %1133, label %1134, label %1138

1134:                                             ; preds = %1131
  %1135 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 160
  %1136 = bitcast void (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*)** %1135 to i8**
  %1137 = load i8*, i8** %1136, align 8
  br label %2587

1138:                                             ; preds = %1131
  %1139 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.605, i64 0, i64 0)) #15
  %1140 = icmp eq i32 %1139, 0
  br i1 %1140, label %1141, label %1145

1141:                                             ; preds = %1138
  %1142 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 161
  %1143 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*)** %1142 to i8**
  %1144 = load i8*, i8** %1143, align 8
  br label %2587

1145:                                             ; preds = %1138
  %1146 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.606, i64 0, i64 0)) #15
  %1147 = icmp eq i32 %1146, 0
  br i1 %1147, label %1148, label %1152

1148:                                             ; preds = %1145
  %1149 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 162
  %1150 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*)** %1149 to i8**
  %1151 = load i8*, i8** %1150, align 8
  br label %2587

1152:                                             ; preds = %1145
  %1153 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.607, i64 0, i64 0)) #15
  %1154 = icmp eq i32 %1153, 0
  br i1 %1154, label %1155, label %1159

1155:                                             ; preds = %1152
  %1156 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 163
  %1157 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**)** %1156 to i8**
  %1158 = load i8*, i8** %1157, align 8
  br label %2587

1159:                                             ; preds = %1152
  %1160 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.608, i64 0, i64 0)) #15
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1162, label %1166

1162:                                             ; preds = %1159
  %1163 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 164
  %1164 = bitcast i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*)** %1163 to i8**
  %1165 = load i8*, i8** %1164, align 8
  br label %2587

1166:                                             ; preds = %1159
  %1167 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.609, i64 0, i64 0)) #15
  %1168 = icmp eq i32 %1167, 0
  br i1 %1168, label %1169, label %1173

1169:                                             ; preds = %1166
  %1170 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 165
  %1171 = bitcast void (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*)** %1170 to i8**
  %1172 = load i8*, i8** %1171, align 8
  br label %2587

1173:                                             ; preds = %1166
  %1174 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.610, i64 0, i64 0)) #15
  %1175 = icmp eq i32 %1174, 0
  br i1 %1175, label %1176, label %1180

1176:                                             ; preds = %1173
  %1177 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 166
  %1178 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*)** %1177 to i8**
  %1179 = load i8*, i8** %1178, align 8
  br label %2587

1180:                                             ; preds = %1173
  %1181 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.611, i64 0, i64 0)) #15
  %1182 = icmp eq i32 %1181, 0
  br i1 %1182, label %1183, label %1187

1183:                                             ; preds = %1180
  %1184 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 167
  %1185 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*)** %1184 to i8**
  %1186 = load i8*, i8** %1185, align 8
  br label %2587

1187:                                             ; preds = %1180
  %1188 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.612, i64 0, i64 0)) #15
  %1189 = icmp eq i32 %1188, 0
  br i1 %1189, label %1190, label %1194

1190:                                             ; preds = %1187
  %1191 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 168
  %1192 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*)** %1191 to i8**
  %1193 = load i8*, i8** %1192, align 8
  br label %2587

1194:                                             ; preds = %1187
  %1195 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.613, i64 0, i64 0)) #15
  %1196 = icmp eq i32 %1195, 0
  br i1 %1196, label %1197, label %1201

1197:                                             ; preds = %1194
  %1198 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 169
  %1199 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*)** %1198 to i8**
  %1200 = load i8*, i8** %1199, align 8
  br label %2587

1201:                                             ; preds = %1194
  %1202 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.614, i64 0, i64 0)) #15
  %1203 = icmp eq i32 %1202, 0
  br i1 %1203, label %1204, label %1208

1204:                                             ; preds = %1201
  %1205 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 170
  %1206 = bitcast void (%struct.VkDevice_T*, i32, i32, i32, i32*)** %1205 to i8**
  %1207 = load i8*, i8** %1206, align 8
  br label %2587

1208:                                             ; preds = %1201
  %1209 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.615, i64 0, i64 0)) #15
  %1210 = icmp eq i32 %1209, 0
  br i1 %1210, label %1211, label %1215

1211:                                             ; preds = %1208
  %1212 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 171
  %1213 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %1212 to i8**
  %1214 = load i8*, i8** %1213, align 8
  br label %2587

1215:                                             ; preds = %1208
  %1216 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.616, i64 0, i64 0)) #15
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1218, label %1222

1218:                                             ; preds = %1215
  %1219 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 172
  %1220 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)** %1219 to i8**
  %1221 = load i8*, i8** %1220, align 8
  br label %2587

1222:                                             ; preds = %1215
  %1223 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.617, i64 0, i64 0)) #15
  %1224 = icmp eq i32 %1223, 0
  br i1 %1224, label %1225, label %1229

1225:                                             ; preds = %1222
  %1226 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 173
  %1227 = bitcast void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)** %1226 to i8**
  %1228 = load i8*, i8** %1227, align 8
  br label %2587

1229:                                             ; preds = %1222
  %1230 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.618, i64 0, i64 0)) #15
  %1231 = icmp eq i32 %1230, 0
  br i1 %1231, label %1232, label %1236

1232:                                             ; preds = %1229
  %1233 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 174
  %1234 = bitcast i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)** %1233 to i8**
  %1235 = load i8*, i8** %1234, align 8
  br label %2587

1236:                                             ; preds = %1229
  %1237 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.619, i64 0, i64 0)) #15
  %1238 = icmp eq i32 %1237, 0
  br i1 %1238, label %1239, label %1243

1239:                                             ; preds = %1236
  %1240 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 175
  %1241 = bitcast i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)** %1240 to i8**
  %1242 = load i8*, i8** %1241, align 8
  br label %2587

1243:                                             ; preds = %1236
  %1244 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.620, i64 0, i64 0)) #15
  %1245 = icmp eq i32 %1244, 0
  br i1 %1245, label %1246, label %1250

1246:                                             ; preds = %1243
  %1247 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 176
  %1248 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)** %1247 to i8**
  %1249 = load i8*, i8** %1248, align 8
  br label %2587

1250:                                             ; preds = %1243
  %1251 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.621, i64 0, i64 0)) #15
  %1252 = icmp eq i32 %1251, 0
  br i1 %1252, label %1253, label %1257

1253:                                             ; preds = %1250
  %1254 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 177
  %1255 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)** %1254 to i8**
  %1256 = load i8*, i8** %1255, align 8
  br label %2587

1257:                                             ; preds = %1250
  %1258 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.622, i64 0, i64 0)) #15
  %1259 = icmp eq i32 %1258, 0
  br i1 %1259, label %1260, label %1264

1260:                                             ; preds = %1257
  %1261 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 178
  %1262 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*)** %1261 to i8**
  %1263 = load i8*, i8** %1262, align 8
  br label %2587

1264:                                             ; preds = %1257
  %1265 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.623, i64 0, i64 0)) #15
  %1266 = icmp eq i32 %1265, 0
  br i1 %1266, label %1267, label %1271

1267:                                             ; preds = %1264
  %1268 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 179
  %1269 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*)** %1268 to i8**
  %1270 = load i8*, i8** %1269, align 8
  br label %2587

1271:                                             ; preds = %1264
  %1272 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.624, i64 0, i64 0)) #15
  %1273 = icmp eq i32 %1272, 0
  br i1 %1273, label %1274, label %1278

1274:                                             ; preds = %1271
  %1275 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 180
  %1276 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)** %1275 to i8**
  %1277 = load i8*, i8** %1276, align 8
  br label %2587

1278:                                             ; preds = %1271
  %1279 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.625, i64 0, i64 0)) #15
  %1280 = icmp eq i32 %1279, 0
  br i1 %1280, label %1281, label %1285

1281:                                             ; preds = %1278
  %1282 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 181
  %1283 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)** %1282 to i8**
  %1284 = load i8*, i8** %1283, align 8
  br label %2587

1285:                                             ; preds = %1278
  %1286 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.626, i64 0, i64 0)) #15
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1288, label %1292

1288:                                             ; preds = %1285
  %1289 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 182
  %1290 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)** %1289 to i8**
  %1291 = load i8*, i8** %1290, align 8
  br label %2587

1292:                                             ; preds = %1285
  %1293 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.627, i64 0, i64 0)) #15
  %1294 = icmp eq i32 %1293, 0
  br i1 %1294, label %1295, label %1299

1295:                                             ; preds = %1292
  %1296 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 183
  %1297 = bitcast i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %1296 to i8**
  %1298 = load i8*, i8** %1297, align 8
  br label %2587

1299:                                             ; preds = %1292
  %1300 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.628, i64 0, i64 0)) #15
  %1301 = icmp eq i32 %1300, 0
  br i1 %1301, label %1302, label %1306

1302:                                             ; preds = %1299
  %1303 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 184
  %1304 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)** %1303 to i8**
  %1305 = load i8*, i8** %1304, align 8
  br label %2587

1306:                                             ; preds = %1299
  %1307 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.629, i64 0, i64 0)) #15
  %1308 = icmp eq i32 %1307, 0
  br i1 %1308, label %1309, label %1313

1309:                                             ; preds = %1306
  %1310 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 185
  %1311 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)** %1310 to i8**
  %1312 = load i8*, i8** %1311, align 8
  br label %2587

1313:                                             ; preds = %1306
  %1314 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.630, i64 0, i64 0)) #15
  %1315 = icmp eq i32 %1314, 0
  br i1 %1315, label %1316, label %1320

1316:                                             ; preds = %1313
  %1317 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 186
  %1318 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)** %1317 to i8**
  %1319 = load i8*, i8** %1318, align 8
  br label %2587

1320:                                             ; preds = %1313
  %1321 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.631, i64 0, i64 0)) #15
  %1322 = icmp eq i32 %1321, 0
  br i1 %1322, label %1323, label %1327

1323:                                             ; preds = %1320
  %1324 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 187
  %1325 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*)** %1324 to i8**
  %1326 = load i8*, i8** %1325, align 8
  br label %2587

1327:                                             ; preds = %1320
  %1328 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.632, i64 0, i64 0)) #15
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1330, label %1334

1330:                                             ; preds = %1327
  %1331 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 188
  %1332 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*)** %1331 to i8**
  %1333 = load i8*, i8** %1332, align 8
  br label %2587

1334:                                             ; preds = %1327
  %1335 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.633, i64 0, i64 0)) #15
  %1336 = icmp eq i32 %1335, 0
  br i1 %1336, label %1337, label %1341

1337:                                             ; preds = %1334
  %1338 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 189
  %1339 = bitcast i32 (%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*)** %1338 to i8**
  %1340 = load i8*, i8** %1339, align 8
  br label %2587

1341:                                             ; preds = %1334
  %1342 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.634, i64 0, i64 0)) #15
  %1343 = icmp eq i32 %1342, 0
  br i1 %1343, label %1344, label %1348

1344:                                             ; preds = %1341
  %1345 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 190
  %1346 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*)** %1345 to i8**
  %1347 = load i8*, i8** %1346, align 8
  br label %2587

1348:                                             ; preds = %1341
  %1349 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.635, i64 0, i64 0)) #15
  %1350 = icmp eq i32 %1349, 0
  br i1 %1350, label %1351, label %1355

1351:                                             ; preds = %1348
  %1352 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 191
  %1353 = bitcast void (%struct.VkDevice_T*)** %1352 to i8**
  %1354 = load i8*, i8** %1353, align 8
  br label %2587

1355:                                             ; preds = %1348
  %1356 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.636, i64 0, i64 0)) #15
  %1357 = icmp eq i32 %1356, 0
  br i1 %1357, label %1358, label %1362

1358:                                             ; preds = %1355
  %1359 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 192
  %1360 = bitcast void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %1359 to i8**
  %1361 = load i8*, i8** %1360, align 8
  br label %2587

1362:                                             ; preds = %1355
  %1363 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.637, i64 0, i64 0)) #15
  %1364 = icmp eq i32 %1363, 0
  br i1 %1364, label %1365, label %1369

1365:                                             ; preds = %1362
  %1366 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 193
  %1367 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %1366 to i8**
  %1368 = load i8*, i8** %1367, align 8
  br label %2587

1369:                                             ; preds = %1362
  %1370 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.638, i64 0, i64 0)) #15
  %1371 = icmp eq i32 %1370, 0
  br i1 %1371, label %1372, label %1376

1372:                                             ; preds = %1369
  %1373 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 194
  %1374 = bitcast void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)** %1373 to i8**
  %1375 = load i8*, i8** %1374, align 8
  br label %2587

1376:                                             ; preds = %1369
  %1377 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.639, i64 0, i64 0)) #15
  %1378 = icmp eq i32 %1377, 0
  br i1 %1378, label %1379, label %1383

1379:                                             ; preds = %1376
  %1380 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 195
  %1381 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)** %1380 to i8**
  %1382 = load i8*, i8** %1381, align 8
  br label %2587

1383:                                             ; preds = %1376
  %1384 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.640, i64 0, i64 0)) #15
  %1385 = icmp eq i32 %1384, 0
  br i1 %1385, label %1386, label %1390

1386:                                             ; preds = %1383
  %1387 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 196
  %1388 = bitcast void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)** %1387 to i8**
  %1389 = load i8*, i8** %1388, align 8
  br label %2587

1390:                                             ; preds = %1383
  %1391 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.641, i64 0, i64 0)) #15
  %1392 = icmp eq i32 %1391, 0
  br i1 %1392, label %1393, label %1397

1393:                                             ; preds = %1390
  %1394 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 197
  %1395 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)** %1394 to i8**
  %1396 = load i8*, i8** %1395, align 8
  br label %2587

1397:                                             ; preds = %1390
  %1398 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.642, i64 0, i64 0)) #15
  %1399 = icmp eq i32 %1398, 0
  br i1 %1399, label %1400, label %1404

1400:                                             ; preds = %1397
  %1401 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 198
  %1402 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)** %1401 to i8**
  %1403 = load i8*, i8** %1402, align 8
  br label %2587

1404:                                             ; preds = %1397
  %1405 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.643, i64 0, i64 0)) #15
  %1406 = icmp eq i32 %1405, 0
  br i1 %1406, label %1407, label %1411

1407:                                             ; preds = %1404
  %1408 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 199
  %1409 = bitcast void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)** %1408 to i8**
  %1410 = load i8*, i8** %1409, align 8
  br label %2587

1411:                                             ; preds = %1404
  %1412 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.644, i64 0, i64 0)) #15
  %1413 = icmp eq i32 %1412, 0
  br i1 %1413, label %1414, label %1418

1414:                                             ; preds = %1411
  %1415 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 200
  %1416 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %1415 to i8**
  %1417 = load i8*, i8** %1416, align 8
  br label %2587

1418:                                             ; preds = %1411
  %1419 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.645, i64 0, i64 0)) #15
  %1420 = icmp eq i32 %1419, 0
  br i1 %1420, label %1421, label %1425

1421:                                             ; preds = %1418
  %1422 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 201
  %1423 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %1422 to i8**
  %1424 = load i8*, i8** %1423, align 8
  br label %2587

1425:                                             ; preds = %1418
  %1426 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.646, i64 0, i64 0)) #15
  %1427 = icmp eq i32 %1426, 0
  br i1 %1427, label %1428, label %1432

1428:                                             ; preds = %1425
  %1429 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 202
  %1430 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)** %1429 to i8**
  %1431 = load i8*, i8** %1430, align 8
  br label %2587

1432:                                             ; preds = %1425
  %1433 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.647, i64 0, i64 0)) #15
  %1434 = icmp eq i32 %1433, 0
  br i1 %1434, label %1435, label %1439

1435:                                             ; preds = %1432
  %1436 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 203
  %1437 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)** %1436 to i8**
  %1438 = load i8*, i8** %1437, align 8
  br label %2587

1439:                                             ; preds = %1432
  %1440 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.648, i64 0, i64 0)) #15
  %1441 = icmp eq i32 %1440, 0
  br i1 %1441, label %1442, label %1446

1442:                                             ; preds = %1439
  %1443 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 204
  %1444 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)** %1443 to i8**
  %1445 = load i8*, i8** %1444, align 8
  br label %2587

1446:                                             ; preds = %1439
  %1447 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.649, i64 0, i64 0)) #15
  %1448 = icmp eq i32 %1447, 0
  br i1 %1448, label %1449, label %1453

1449:                                             ; preds = %1446
  %1450 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 205
  %1451 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*)** %1450 to i8**
  %1452 = load i8*, i8** %1451, align 8
  br label %2587

1453:                                             ; preds = %1446
  %1454 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.650, i64 0, i64 0)) #15
  %1455 = icmp eq i32 %1454, 0
  br i1 %1455, label %1456, label %1460

1456:                                             ; preds = %1453
  %1457 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 206
  %1458 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %1457 to i8**
  %1459 = load i8*, i8** %1458, align 8
  br label %2587

1460:                                             ; preds = %1453
  %1461 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.651, i64 0, i64 0)) #15
  %1462 = icmp eq i32 %1461, 0
  br i1 %1462, label %1463, label %1467

1463:                                             ; preds = %1460
  %1464 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 207
  %1465 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %1464 to i8**
  %1466 = load i8*, i8** %1465, align 8
  br label %2587

1467:                                             ; preds = %1460
  %1468 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.652, i64 0, i64 0)) #15
  %1469 = icmp eq i32 %1468, 0
  br i1 %1469, label %1470, label %1474

1470:                                             ; preds = %1467
  %1471 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 208
  %1472 = bitcast i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)** %1471 to i8**
  %1473 = load i8*, i8** %1472, align 8
  br label %2587

1474:                                             ; preds = %1467
  %1475 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.653, i64 0, i64 0)) #15
  %1476 = icmp eq i32 %1475, 0
  br i1 %1476, label %1477, label %1481

1477:                                             ; preds = %1474
  %1478 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 209
  %1479 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**)** %1478 to i8**
  %1480 = load i8*, i8** %1479, align 8
  br label %2587

1481:                                             ; preds = %1474
  %1482 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.654, i64 0, i64 0)) #15
  %1483 = icmp eq i32 %1482, 0
  br i1 %1483, label %1484, label %1488

1484:                                             ; preds = %1481
  %1485 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 210
  %1486 = bitcast void (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*)** %1485 to i8**
  %1487 = load i8*, i8** %1486, align 8
  br label %2587

1488:                                             ; preds = %1481
  %1489 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.655, i64 0, i64 0)) #15
  %1490 = icmp eq i32 %1489, 0
  br i1 %1490, label %1491, label %1495

1491:                                             ; preds = %1488
  %1492 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 211
  %1493 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %1492 to i8**
  %1494 = load i8*, i8** %1493, align 8
  br label %2587

1495:                                             ; preds = %1488
  %1496 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.656, i64 0, i64 0)) #15
  %1497 = icmp eq i32 %1496, 0
  br i1 %1497, label %1498, label %1502

1498:                                             ; preds = %1495
  %1499 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 212
  %1500 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %1499 to i8**
  %1501 = load i8*, i8** %1500, align 8
  br label %2587

1502:                                             ; preds = %1495
  %1503 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.657, i64 0, i64 0)) #15
  %1504 = icmp eq i32 %1503, 0
  br i1 %1504, label %1505, label %1509

1505:                                             ; preds = %1502
  %1506 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 213
  %1507 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %1506 to i8**
  %1508 = load i8*, i8** %1507, align 8
  br label %2587

1509:                                             ; preds = %1502
  %1510 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.658, i64 0, i64 0)) #15
  %1511 = icmp eq i32 %1510, 0
  br i1 %1511, label %1512, label %1516

1512:                                             ; preds = %1509
  %1513 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 214
  %1514 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*)** %1513 to i8**
  %1515 = load i8*, i8** %1514, align 8
  br label %2587

1516:                                             ; preds = %1509
  %1517 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.659, i64 0, i64 0)) #15
  %1518 = icmp eq i32 %1517, 0
  br i1 %1518, label %1519, label %1523

1519:                                             ; preds = %1516
  %1520 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 215
  %1521 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*)** %1520 to i8**
  %1522 = load i8*, i8** %1521, align 8
  br label %2587

1523:                                             ; preds = %1516
  %1524 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.660, i64 0, i64 0)) #15
  %1525 = icmp eq i32 %1524, 0
  br i1 %1525, label %1526, label %1530

1526:                                             ; preds = %1523
  %1527 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 216
  %1528 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*)** %1527 to i8**
  %1529 = load i8*, i8** %1528, align 8
  br label %2587

1530:                                             ; preds = %1523
  %1531 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.661, i64 0, i64 0)) #15
  %1532 = icmp eq i32 %1531, 0
  br i1 %1532, label %1533, label %1537

1533:                                             ; preds = %1530
  %1534 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 217
  %1535 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*)** %1534 to i8**
  %1536 = load i8*, i8** %1535, align 8
  br label %2587

1537:                                             ; preds = %1530
  %1538 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.662, i64 0, i64 0)) #15
  %1539 = icmp eq i32 %1538, 0
  br i1 %1539, label %1540, label %1544

1540:                                             ; preds = %1537
  %1541 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 218
  %1542 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*)** %1541 to i8**
  %1543 = load i8*, i8** %1542, align 8
  br label %2587

1544:                                             ; preds = %1537
  %1545 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.663, i64 0, i64 0)) #15
  %1546 = icmp eq i32 %1545, 0
  br i1 %1546, label %1547, label %1551

1547:                                             ; preds = %1544
  %1548 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 219
  %1549 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64)** %1548 to i8**
  %1550 = load i8*, i8** %1549, align 8
  br label %2587

1551:                                             ; preds = %1544
  %1552 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.664, i64 0, i64 0)) #15
  %1553 = icmp eq i32 %1552, 0
  br i1 %1553, label %1554, label %1558

1554:                                             ; preds = %1551
  %1555 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 220
  %1556 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*)** %1555 to i8**
  %1557 = load i8*, i8** %1556, align 8
  br label %2587

1558:                                             ; preds = %1551
  %1559 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.665, i64 0, i64 0)) #15
  %1560 = icmp eq i32 %1559, 0
  br i1 %1560, label %1561, label %1565

1561:                                             ; preds = %1558
  %1562 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 221
  %1563 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*)** %1562 to i8**
  %1564 = load i8*, i8** %1563, align 8
  br label %2587

1565:                                             ; preds = %1558
  %1566 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.666, i64 0, i64 0)) #15
  %1567 = icmp eq i32 %1566, 0
  br i1 %1567, label %1568, label %1572

1568:                                             ; preds = %1565
  %1569 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 222
  %1570 = bitcast void (%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32)** %1569 to i8**
  %1571 = load i8*, i8** %1570, align 8
  br label %2587

1572:                                             ; preds = %1565
  %1573 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.667, i64 0, i64 0)) #15
  %1574 = icmp eq i32 %1573, 0
  br i1 %1574, label %1575, label %1579

1575:                                             ; preds = %1572
  %1576 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 223
  %1577 = bitcast i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*)** %1576 to i8**
  %1578 = load i8*, i8** %1577, align 8
  br label %2587

1579:                                             ; preds = %1572
  %1580 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.668, i64 0, i64 0)) #15
  %1581 = icmp eq i32 %1580, 0
  br i1 %1581, label %1582, label %1586

1582:                                             ; preds = %1579
  %1583 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 224
  %1584 = bitcast void (%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32)** %1583 to i8**
  %1585 = load i8*, i8** %1584, align 8
  br label %2587

1586:                                             ; preds = %1579
  %1587 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.669, i64 0, i64 0)) #15
  %1588 = icmp eq i32 %1587, 0
  br i1 %1588, label %1589, label %1593

1589:                                             ; preds = %1586
  %1590 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 225
  %1591 = bitcast void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*)** %1590 to i8**
  %1592 = load i8*, i8** %1591, align 8
  br label %2587

1593:                                             ; preds = %1586
  %1594 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.670, i64 0, i64 0)) #15
  %1595 = icmp eq i32 %1594, 0
  br i1 %1595, label %1596, label %1600

1596:                                             ; preds = %1593
  %1597 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 226
  %1598 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*)** %1597 to i8**
  %1599 = load i8*, i8** %1598, align 8
  br label %2587

1600:                                             ; preds = %1593
  %1601 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.671, i64 0, i64 0)) #15
  %1602 = icmp eq i32 %1601, 0
  br i1 %1602, label %1603, label %1607

1603:                                             ; preds = %1600
  %1604 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 227
  %1605 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*)** %1604 to i8**
  %1606 = load i8*, i8** %1605, align 8
  br label %2587

1607:                                             ; preds = %1600
  %1608 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.672, i64 0, i64 0)) #15
  %1609 = icmp eq i32 %1608, 0
  br i1 %1609, label %1610, label %1614

1610:                                             ; preds = %1607
  %1611 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 228
  %1612 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*)** %1611 to i8**
  %1613 = load i8*, i8** %1612, align 8
  br label %2587

1614:                                             ; preds = %1607
  %1615 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.673, i64 0, i64 0)) #15
  %1616 = icmp eq i32 %1615, 0
  br i1 %1616, label %1617, label %1621

1617:                                             ; preds = %1614
  %1618 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 229
  %1619 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*)** %1618 to i8**
  %1620 = load i8*, i8** %1619, align 8
  br label %2587

1621:                                             ; preds = %1614
  %1622 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.674, i64 0, i64 0)) #15
  %1623 = icmp eq i32 %1622, 0
  br i1 %1623, label %1624, label %1628

1624:                                             ; preds = %1621
  %1625 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 230
  %1626 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*)** %1625 to i8**
  %1627 = load i8*, i8** %1626, align 8
  br label %2587

1628:                                             ; preds = %1621
  %1629 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.675, i64 0, i64 0)) #15
  %1630 = icmp eq i32 %1629, 0
  br i1 %1630, label %1631, label %1635

1631:                                             ; preds = %1628
  %1632 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 231
  %1633 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*)** %1632 to i8**
  %1634 = load i8*, i8** %1633, align 8
  br label %2587

1635:                                             ; preds = %1628
  %1636 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.676, i64 0, i64 0)) #15
  %1637 = icmp eq i32 %1636, 0
  br i1 %1637, label %1638, label %1642

1638:                                             ; preds = %1635
  %1639 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 232
  %1640 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)** %1639 to i8**
  %1641 = load i8*, i8** %1640, align 8
  br label %2587

1642:                                             ; preds = %1635
  %1643 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.677, i64 0, i64 0)) #15
  %1644 = icmp eq i32 %1643, 0
  br i1 %1644, label %1645, label %1649

1645:                                             ; preds = %1642
  %1646 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 233
  %1647 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)** %1646 to i8**
  %1648 = load i8*, i8** %1647, align 8
  br label %2587

1649:                                             ; preds = %1642
  %1650 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.678, i64 0, i64 0)) #15
  %1651 = icmp eq i32 %1650, 0
  br i1 %1651, label %1652, label %1656

1652:                                             ; preds = %1649
  %1653 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 234
  %1654 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)** %1653 to i8**
  %1655 = load i8*, i8** %1654, align 8
  br label %2587

1656:                                             ; preds = %1649
  %1657 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.679, i64 0, i64 0)) #15
  %1658 = icmp eq i32 %1657, 0
  br i1 %1658, label %1659, label %1663

1659:                                             ; preds = %1656
  %1660 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 235
  %1661 = bitcast void (%struct.VkCommandBuffer_T*)** %1660 to i8**
  %1662 = load i8*, i8** %1661, align 8
  br label %2587

1663:                                             ; preds = %1656
  %1664 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.680, i64 0, i64 0)) #15
  %1665 = icmp eq i32 %1664, 0
  br i1 %1665, label %1666, label %1670

1666:                                             ; preds = %1663
  %1667 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 236
  %1668 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)** %1667 to i8**
  %1669 = load i8*, i8** %1668, align 8
  br label %2587

1670:                                             ; preds = %1663
  %1671 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.681, i64 0, i64 0)) #15
  %1672 = icmp eq i32 %1671, 0
  br i1 %1672, label %1673, label %1677

1673:                                             ; preds = %1670
  %1674 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 237
  %1675 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*)** %1674 to i8**
  %1676 = load i8*, i8** %1675, align 8
  br label %2587

1677:                                             ; preds = %1670
  %1678 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.682, i64 0, i64 0)) #15
  %1679 = icmp eq i32 %1678, 0
  br i1 %1679, label %1680, label %1684

1680:                                             ; preds = %1677
  %1681 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 238
  %1682 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %1681 to i8**
  %1683 = load i8*, i8** %1682, align 8
  br label %2587

1684:                                             ; preds = %1677
  %1685 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.683, i64 0, i64 0)) #15
  %1686 = icmp eq i32 %1685, 0
  br i1 %1686, label %1687, label %1691

1687:                                             ; preds = %1684
  %1688 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 239
  %1689 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %1688 to i8**
  %1690 = load i8*, i8** %1689, align 8
  br label %2587

1691:                                             ; preds = %1684
  %1692 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.684, i64 0, i64 0)) #15
  %1693 = icmp eq i32 %1692, 0
  br i1 %1693, label %1694, label %1698

1694:                                             ; preds = %1691
  %1695 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 240
  %1696 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32)** %1695 to i8**
  %1697 = load i8*, i8** %1696, align 8
  br label %2587

1698:                                             ; preds = %1691
  %1699 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.685, i64 0, i64 0)) #15
  %1700 = icmp eq i32 %1699, 0
  br i1 %1700, label %1701, label %1705

1701:                                             ; preds = %1698
  %1702 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 241
  %1703 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)** %1702 to i8**
  %1704 = load i8*, i8** %1703, align 8
  br label %2587

1705:                                             ; preds = %1698
  %1706 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.686, i64 0, i64 0)) #15
  %1707 = icmp eq i32 %1706, 0
  br i1 %1707, label %1708, label %1712

1708:                                             ; preds = %1705
  %1709 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 242
  %1710 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32)** %1709 to i8**
  %1711 = load i8*, i8** %1710, align 8
  br label %2587

1712:                                             ; preds = %1705
  %1713 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.687, i64 0, i64 0)) #15
  %1714 = icmp eq i32 %1713, 0
  br i1 %1714, label %1715, label %1719

1715:                                             ; preds = %1712
  %1716 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 243
  %1717 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**)** %1716 to i8**
  %1718 = load i8*, i8** %1717, align 8
  br label %2587

1719:                                             ; preds = %1712
  %1720 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.688, i64 0, i64 0)) #15
  %1721 = icmp eq i32 %1720, 0
  br i1 %1721, label %1722, label %1726

1722:                                             ; preds = %1719
  %1723 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 244
  %1724 = bitcast i32 (%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**)** %1723 to i8**
  %1725 = load i8*, i8** %1724, align 8
  br label %2587

1726:                                             ; preds = %1719
  %1727 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.689, i64 0, i64 0)) #15
  %1728 = icmp eq i32 %1727, 0
  br i1 %1728, label %1729, label %1733

1729:                                             ; preds = %1726
  %1730 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 245
  %1731 = bitcast void (%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*)** %1730 to i8**
  %1732 = load i8*, i8** %1731, align 8
  br label %2587

1733:                                             ; preds = %1726
  %1734 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.690, i64 0, i64 0)) #15
  %1735 = icmp eq i32 %1734, 0
  br i1 %1735, label %1736, label %1740

1736:                                             ; preds = %1733
  %1737 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 246
  %1738 = bitcast void (%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*)** %1737 to i8**
  %1739 = load i8*, i8** %1738, align 8
  br label %2587

1740:                                             ; preds = %1733
  %1741 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.691, i64 0, i64 0)) #15
  %1742 = icmp eq i32 %1741, 0
  br i1 %1742, label %1743, label %1747

1743:                                             ; preds = %1740
  %1744 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 247
  %1745 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*)** %1744 to i8**
  %1746 = load i8*, i8** %1745, align 8
  br label %2587

1747:                                             ; preds = %1740
  %1748 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.692, i64 0, i64 0)) #15
  %1749 = icmp eq i32 %1748, 0
  br i1 %1749, label %1750, label %1754

1750:                                             ; preds = %1747
  %1751 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 248
  %1752 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*)** %1751 to i8**
  %1753 = load i8*, i8** %1752, align 8
  br label %2587

1754:                                             ; preds = %1747
  %1755 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.693, i64 0, i64 0)) #15
  %1756 = icmp eq i32 %1755, 0
  br i1 %1756, label %1757, label %1761

1757:                                             ; preds = %1754
  %1758 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 249
  %1759 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*)** %1758 to i8**
  %1760 = load i8*, i8** %1759, align 8
  br label %2587

1761:                                             ; preds = %1754
  %1762 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.694, i64 0, i64 0)) #15
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1764, label %1768

1764:                                             ; preds = %1761
  %1765 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 250
  %1766 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %1765 to i8**
  %1767 = load i8*, i8** %1766, align 8
  br label %2587

1768:                                             ; preds = %1761
  %1769 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.695, i64 0, i64 0)) #15
  %1770 = icmp eq i32 %1769, 0
  br i1 %1770, label %1771, label %1775

1771:                                             ; preds = %1768
  %1772 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 251
  %1773 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %1772 to i8**
  %1774 = load i8*, i8** %1773, align 8
  br label %2587

1775:                                             ; preds = %1768
  %1776 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.696, i64 0, i64 0)) #15
  %1777 = icmp eq i32 %1776, 0
  br i1 %1777, label %1778, label %1782

1778:                                             ; preds = %1775
  %1779 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 252
  %1780 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*)** %1779 to i8**
  %1781 = load i8*, i8** %1780, align 8
  br label %2587

1782:                                             ; preds = %1775
  %1783 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.697, i64 0, i64 0)) #15
  %1784 = icmp eq i32 %1783, 0
  br i1 %1784, label %1785, label %1789

1785:                                             ; preds = %1782
  %1786 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 253
  %1787 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*)** %1786 to i8**
  %1788 = load i8*, i8** %1787, align 8
  br label %2587

1789:                                             ; preds = %1782
  %1790 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.698, i64 0, i64 0)) #15
  %1791 = icmp eq i32 %1790, 0
  br i1 %1791, label %1792, label %1796

1792:                                             ; preds = %1789
  %1793 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 254
  %1794 = bitcast void (%struct.VkCommandBuffer_T*)** %1793 to i8**
  %1795 = load i8*, i8** %1794, align 8
  br label %2587

1796:                                             ; preds = %1789
  %1797 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.699, i64 0, i64 0)) #15
  %1798 = icmp eq i32 %1797, 0
  br i1 %1798, label %1799, label %1803

1799:                                             ; preds = %1796
  %1800 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 255
  %1801 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*)** %1800 to i8**
  %1802 = load i8*, i8** %1801, align 8
  br label %2587

1803:                                             ; preds = %1796
  %1804 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.700, i64 0, i64 0)) #15
  %1805 = icmp eq i32 %1804, 0
  br i1 %1805, label %1806, label %1810

1806:                                             ; preds = %1803
  %1807 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 256
  %1808 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*)** %1807 to i8**
  %1809 = load i8*, i8** %1808, align 8
  br label %2587

1810:                                             ; preds = %1803
  %1811 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.701, i64 0, i64 0)) #15
  %1812 = icmp eq i32 %1811, 0
  br i1 %1812, label %1813, label %1817

1813:                                             ; preds = %1810
  %1814 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 257
  %1815 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %1814 to i8**
  %1816 = load i8*, i8** %1815, align 8
  br label %2587

1817:                                             ; preds = %1810
  %1818 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.702, i64 0, i64 0)) #15
  %1819 = icmp eq i32 %1818, 0
  br i1 %1819, label %1820, label %1824

1820:                                             ; preds = %1817
  %1821 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 258
  %1822 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %1821 to i8**
  %1823 = load i8*, i8** %1822, align 8
  br label %2587

1824:                                             ; preds = %1817
  %1825 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.703, i64 0, i64 0)) #15
  %1826 = icmp eq i32 %1825, 0
  br i1 %1826, label %1827, label %1831

1827:                                             ; preds = %1824
  %1828 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 259
  %1829 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*)** %1828 to i8**
  %1830 = load i8*, i8** %1829, align 8
  br label %2587

1831:                                             ; preds = %1824
  %1832 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.704, i64 0, i64 0)) #15
  %1833 = icmp eq i32 %1832, 0
  br i1 %1833, label %1834, label %1838

1834:                                             ; preds = %1831
  %1835 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 260
  %1836 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*)** %1835 to i8**
  %1837 = load i8*, i8** %1836, align 8
  br label %2587

1838:                                             ; preds = %1831
  %1839 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.705, i64 0, i64 0)) #15
  %1840 = icmp eq i32 %1839, 0
  br i1 %1840, label %1841, label %1845

1841:                                             ; preds = %1838
  %1842 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 261
  %1843 = bitcast i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*)** %1842 to i8**
  %1844 = load i8*, i8** %1843, align 8
  br label %2587

1845:                                             ; preds = %1838
  %1846 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.706, i64 0, i64 0)) #15
  %1847 = icmp eq i32 %1846, 0
  br i1 %1847, label %1848, label %1852

1848:                                             ; preds = %1845
  %1849 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 262
  %1850 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %1849 to i8**
  %1851 = load i8*, i8** %1850, align 8
  br label %2587

1852:                                             ; preds = %1845
  %1853 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.707, i64 0, i64 0)) #15
  %1854 = icmp eq i32 %1853, 0
  br i1 %1854, label %1855, label %1859

1855:                                             ; preds = %1852
  %1856 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 263
  %1857 = bitcast void (%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*)** %1856 to i8**
  %1858 = load i8*, i8** %1857, align 8
  br label %2587

1859:                                             ; preds = %1852
  %1860 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.708, i64 0, i64 0)) #15
  %1861 = icmp eq i32 %1860, 0
  br i1 %1861, label %1862, label %1866

1862:                                             ; preds = %1859
  %1863 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 264
  %1864 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)** %1863 to i8**
  %1865 = load i8*, i8** %1864, align 8
  br label %2587

1866:                                             ; preds = %1859
  %1867 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.709, i64 0, i64 0)) #15
  %1868 = icmp eq i32 %1867, 0
  br i1 %1868, label %1869, label %1873

1869:                                             ; preds = %1866
  %1870 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 265
  %1871 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)** %1870 to i8**
  %1872 = load i8*, i8** %1871, align 8
  br label %2587

1873:                                             ; preds = %1866
  %1874 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.710, i64 0, i64 0)) #15
  %1875 = icmp eq i32 %1874, 0
  br i1 %1875, label %1876, label %1880

1876:                                             ; preds = %1873
  %1877 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 266
  %1878 = bitcast void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %1877 to i8**
  %1879 = load i8*, i8** %1878, align 8
  br label %2587

1880:                                             ; preds = %1873
  %1881 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.711, i64 0, i64 0)) #15
  %1882 = icmp eq i32 %1881, 0
  br i1 %1882, label %1883, label %1887

1883:                                             ; preds = %1880
  %1884 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 267
  %1885 = bitcast void (%struct.VkQueue_T*)** %1884 to i8**
  %1886 = load i8*, i8** %1885, align 8
  br label %2587

1887:                                             ; preds = %1880
  %1888 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.712, i64 0, i64 0)) #15
  %1889 = icmp eq i32 %1888, 0
  br i1 %1889, label %1890, label %1894

1890:                                             ; preds = %1887
  %1891 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 268
  %1892 = bitcast void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %1891 to i8**
  %1893 = load i8*, i8** %1892, align 8
  br label %2587

1894:                                             ; preds = %1887
  %1895 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.713, i64 0, i64 0)) #15
  %1896 = icmp eq i32 %1895, 0
  br i1 %1896, label %1897, label %1901

1897:                                             ; preds = %1894
  %1898 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 269
  %1899 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %1898 to i8**
  %1900 = load i8*, i8** %1899, align 8
  br label %2587

1901:                                             ; preds = %1894
  %1902 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.714, i64 0, i64 0)) #15
  %1903 = icmp eq i32 %1902, 0
  br i1 %1903, label %1904, label %1908

1904:                                             ; preds = %1901
  %1905 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 270
  %1906 = bitcast void (%struct.VkCommandBuffer_T*)** %1905 to i8**
  %1907 = load i8*, i8** %1906, align 8
  br label %2587

1908:                                             ; preds = %1901
  %1909 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.715, i64 0, i64 0)) #15
  %1910 = icmp eq i32 %1909, 0
  br i1 %1910, label %1911, label %1915

1911:                                             ; preds = %1908
  %1912 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 271
  %1913 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %1912 to i8**
  %1914 = load i8*, i8** %1913, align 8
  br label %2587

1915:                                             ; preds = %1908
  %1916 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.716, i64 0, i64 0)) #15
  %1917 = icmp eq i32 %1916, 0
  br i1 %1917, label %1918, label %1922

1918:                                             ; preds = %1915
  %1919 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 272
  %1920 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*)** %1919 to i8**
  %1921 = load i8*, i8** %1920, align 8
  br label %2587

1922:                                             ; preds = %1915
  %1923 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.717, i64 0, i64 0)) #15
  %1924 = icmp eq i32 %1923, 0
  br i1 %1924, label %1925, label %1929

1925:                                             ; preds = %1922
  %1926 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 273
  %1927 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)** %1926 to i8**
  %1928 = load i8*, i8** %1927, align 8
  br label %2587

1929:                                             ; preds = %1922
  %1930 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.718, i64 0, i64 0)) #15
  %1931 = icmp eq i32 %1930, 0
  br i1 %1931, label %1932, label %1936

1932:                                             ; preds = %1929
  %1933 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 274
  %1934 = bitcast i32 (%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**)** %1933 to i8**
  %1935 = load i8*, i8** %1934, align 8
  br label %2587

1936:                                             ; preds = %1929
  %1937 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.719, i64 0, i64 0)) #15
  %1938 = icmp eq i32 %1937, 0
  br i1 %1938, label %1939, label %1943

1939:                                             ; preds = %1936
  %1940 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 275
  %1941 = bitcast void (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*)** %1940 to i8**
  %1942 = load i8*, i8** %1941, align 8
  br label %2587

1943:                                             ; preds = %1936
  %1944 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.720, i64 0, i64 0)) #15
  %1945 = icmp eq i32 %1944, 0
  br i1 %1945, label %1946, label %1950

1946:                                             ; preds = %1943
  %1947 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 276
  %1948 = bitcast i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**)** %1947 to i8**
  %1949 = load i8*, i8** %1948, align 8
  br label %2587

1950:                                             ; preds = %1943
  %1951 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.721, i64 0, i64 0)) #15
  %1952 = icmp eq i32 %1951, 0
  br i1 %1952, label %1953, label %1957

1953:                                             ; preds = %1950
  %1954 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 277
  %1955 = bitcast i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*)** %1954 to i8**
  %1956 = load i8*, i8** %1955, align 8
  br label %2587

1957:                                             ; preds = %1950
  %1958 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.722, i64 0, i64 0)) #15
  %1959 = icmp eq i32 %1958, 0
  br i1 %1959, label %1960, label %1964

1960:                                             ; preds = %1957
  %1961 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 278
  %1962 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32)** %1961 to i8**
  %1963 = load i8*, i8** %1962, align 8
  br label %2587

1964:                                             ; preds = %1957
  %1965 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.723, i64 0, i64 0)) #15
  %1966 = icmp eq i32 %1965, 0
  br i1 %1966, label %1967, label %1971

1967:                                             ; preds = %1964
  %1968 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 279
  %1969 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*)** %1968 to i8**
  %1970 = load i8*, i8** %1969, align 8
  br label %2587

1971:                                             ; preds = %1964
  %1972 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.724, i64 0, i64 0)) #15
  %1973 = icmp eq i32 %1972, 0
  br i1 %1973, label %1974, label %1978

1974:                                             ; preds = %1971
  %1975 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 280
  %1976 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*)** %1975 to i8**
  %1977 = load i8*, i8** %1976, align 8
  br label %2587

1978:                                             ; preds = %1971
  %1979 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.725, i64 0, i64 0)) #15
  %1980 = icmp eq i32 %1979, 0
  br i1 %1980, label %1981, label %1985

1981:                                             ; preds = %1978
  %1982 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 281
  %1983 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**)** %1982 to i8**
  %1984 = load i8*, i8** %1983, align 8
  br label %2587

1985:                                             ; preds = %1978
  %1986 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.726, i64 0, i64 0)) #15
  %1987 = icmp eq i32 %1986, 0
  br i1 %1987, label %1988, label %1992

1988:                                             ; preds = %1985
  %1989 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 282
  %1990 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*)** %1989 to i8**
  %1991 = load i8*, i8** %1990, align 8
  br label %2587

1992:                                             ; preds = %1985
  %1993 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.727, i64 0, i64 0)) #15
  %1994 = icmp eq i32 %1993, 0
  br i1 %1994, label %1995, label %1999

1995:                                             ; preds = %1992
  %1996 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 283
  %1997 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)** %1996 to i8**
  %1998 = load i8*, i8** %1997, align 8
  br label %2587

1999:                                             ; preds = %1992
  %2000 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.728, i64 0, i64 0)) #15
  %2001 = icmp eq i32 %2000, 0
  br i1 %2001, label %2002, label %2006

2002:                                             ; preds = %1999
  %2003 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 284
  %2004 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*)** %2003 to i8**
  %2005 = load i8*, i8** %2004, align 8
  br label %2587

2006:                                             ; preds = %1999
  %2007 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.729, i64 0, i64 0)) #15
  %2008 = icmp eq i32 %2007, 0
  br i1 %2008, label %2009, label %2013

2009:                                             ; preds = %2006
  %2010 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 285
  %2011 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64)** %2010 to i8**
  %2012 = load i8*, i8** %2011, align 8
  br label %2587

2013:                                             ; preds = %2006
  %2014 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.730, i64 0, i64 0)) #15
  %2015 = icmp eq i32 %2014, 0
  br i1 %2015, label %2016, label %2020

2016:                                             ; preds = %2013
  %2017 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 286
  %2018 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32)** %2017 to i8**
  %2019 = load i8*, i8** %2018, align 8
  br label %2587

2020:                                             ; preds = %2013
  %2021 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.731, i64 0, i64 0)) #15
  %2022 = icmp eq i32 %2021, 0
  br i1 %2022, label %2023, label %2027

2023:                                             ; preds = %2020
  %2024 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 287
  %2025 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32)** %2024 to i8**
  %2026 = load i8*, i8** %2025, align 8
  br label %2587

2027:                                             ; preds = %2020
  %2028 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.732, i64 0, i64 0)) #15
  %2029 = icmp eq i32 %2028, 0
  br i1 %2029, label %2030, label %2034

2030:                                             ; preds = %2027
  %2031 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 288
  %2032 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %2031 to i8**
  %2033 = load i8*, i8** %2032, align 8
  br label %2587

2034:                                             ; preds = %2027
  %2035 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.733, i64 0, i64 0)) #15
  %2036 = icmp eq i32 %2035, 0
  br i1 %2036, label %2037, label %2041

2037:                                             ; preds = %2034
  %2038 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 289
  %2039 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %2038 to i8**
  %2040 = load i8*, i8** %2039, align 8
  br label %2587

2041:                                             ; preds = %2034
  %2042 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.734, i64 0, i64 0)) #15
  %2043 = icmp eq i32 %2042, 0
  br i1 %2043, label %2044, label %2048

2044:                                             ; preds = %2041
  %2045 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 290
  %2046 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %2045 to i8**
  %2047 = load i8*, i8** %2046, align 8
  br label %2587

2048:                                             ; preds = %2041
  %2049 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.735, i64 0, i64 0)) #15
  %2050 = icmp eq i32 %2049, 0
  br i1 %2050, label %2051, label %2055

2051:                                             ; preds = %2048
  %2052 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 291
  %2053 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*)** %2052 to i8**
  %2054 = load i8*, i8** %2053, align 8
  br label %2587

2055:                                             ; preds = %2048
  %2056 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.736, i64 0, i64 0)) #15
  %2057 = icmp eq i32 %2056, 0
  br i1 %2057, label %2058, label %2062

2058:                                             ; preds = %2055
  %2059 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 292
  %2060 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32)** %2059 to i8**
  %2061 = load i8*, i8** %2060, align 8
  br label %2587

2062:                                             ; preds = %2055
  %2063 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.737, i64 0, i64 0)) #15
  %2064 = icmp eq i32 %2063, 0
  br i1 %2064, label %2065, label %2069

2065:                                             ; preds = %2062
  %2066 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 293
  %2067 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32)** %2066 to i8**
  %2068 = load i8*, i8** %2067, align 8
  br label %2587

2069:                                             ; preds = %2062
  %2070 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.738, i64 0, i64 0)) #15
  %2071 = icmp eq i32 %2070, 0
  br i1 %2071, label %2072, label %2076

2072:                                             ; preds = %2069
  %2073 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 294
  %2074 = bitcast i32 (%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*)** %2073 to i8**
  %2075 = load i8*, i8** %2074, align 8
  br label %2587

2076:                                             ; preds = %2069
  %2077 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.739, i64 0, i64 0)) #15
  %2078 = icmp eq i32 %2077, 0
  br i1 %2078, label %2079, label %2083

2079:                                             ; preds = %2076
  %2080 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 295
  %2081 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32)** %2080 to i8**
  %2082 = load i8*, i8** %2081, align 8
  br label %2587

2083:                                             ; preds = %2076
  %2084 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.740, i64 0, i64 0)) #15
  %2085 = icmp eq i32 %2084, 0
  br i1 %2085, label %2086, label %2090

2086:                                             ; preds = %2083
  %2087 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 296
  %2088 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*)** %2087 to i8**
  %2089 = load i8*, i8** %2088, align 8
  br label %2587

2090:                                             ; preds = %2083
  %2091 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.741, i64 0, i64 0)) #15
  %2092 = icmp eq i32 %2091, 0
  br i1 %2092, label %2093, label %2097

2093:                                             ; preds = %2090
  %2094 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 297
  %2095 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32)** %2094 to i8**
  %2096 = load i8*, i8** %2095, align 8
  br label %2587

2097:                                             ; preds = %2090
  %2098 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.742, i64 0, i64 0)) #15
  %2099 = icmp eq i32 %2098, 0
  br i1 %2099, label %2100, label %2104

2100:                                             ; preds = %2097
  %2101 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 298
  %2102 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)** %2101 to i8**
  %2103 = load i8*, i8** %2102, align 8
  br label %2587

2104:                                             ; preds = %2097
  %2105 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.743, i64 0, i64 0)) #15
  %2106 = icmp eq i32 %2105, 0
  br i1 %2106, label %2107, label %2111

2107:                                             ; preds = %2104
  %2108 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 299
  %2109 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %2108 to i8**
  %2110 = load i8*, i8** %2109, align 8
  br label %2587

2111:                                             ; preds = %2104
  %2112 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.744, i64 0, i64 0)) #15
  %2113 = icmp eq i32 %2112, 0
  br i1 %2113, label %2114, label %2118

2114:                                             ; preds = %2111
  %2115 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 300
  %2116 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %2115 to i8**
  %2117 = load i8*, i8** %2116, align 8
  br label %2587

2118:                                             ; preds = %2111
  %2119 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.745, i64 0, i64 0)) #15
  %2120 = icmp eq i32 %2119, 0
  br i1 %2120, label %2121, label %2125

2121:                                             ; preds = %2118
  %2122 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 301
  %2123 = bitcast void (%struct.VkCommandBuffer_T*, i8*)** %2122 to i8**
  %2124 = load i8*, i8** %2123, align 8
  br label %2587

2125:                                             ; preds = %2118
  %2126 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.746, i64 0, i64 0)) #15
  %2127 = icmp eq i32 %2126, 0
  br i1 %2127, label %2128, label %2132

2128:                                             ; preds = %2125
  %2129 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 302
  %2130 = bitcast void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*)** %2129 to i8**
  %2131 = load i8*, i8** %2130, align 8
  br label %2587

2132:                                             ; preds = %2125
  %2133 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.747, i64 0, i64 0)) #15
  %2134 = icmp eq i32 %2133, 0
  br i1 %2134, label %2135, label %2139

2135:                                             ; preds = %2132
  %2136 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 303
  %2137 = bitcast i32 (%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*)** %2136 to i8**
  %2138 = load i8*, i8** %2137, align 8
  br label %2587

2139:                                             ; preds = %2132
  %2140 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.748, i64 0, i64 0)) #15
  %2141 = icmp eq i32 %2140, 0
  br i1 %2141, label %2142, label %2146

2142:                                             ; preds = %2139
  %2143 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 304
  %2144 = bitcast void (%struct.VkDevice_T*)** %2143 to i8**
  %2145 = load i8*, i8** %2144, align 8
  br label %2587

2146:                                             ; preds = %2139
  %2147 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.749, i64 0, i64 0)) #15
  %2148 = icmp eq i32 %2147, 0
  br i1 %2148, label %2149, label %2153

2149:                                             ; preds = %2146
  %2150 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 305
  %2151 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*)** %2150 to i8**
  %2152 = load i8*, i8** %2151, align 8
  br label %2587

2153:                                             ; preds = %2146
  %2154 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.750, i64 0, i64 0)) #15
  %2155 = icmp eq i32 %2154, 0
  br i1 %2155, label %2156, label %2160

2156:                                             ; preds = %2153
  %2157 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 306
  %2158 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*)** %2157 to i8**
  %2159 = load i8*, i8** %2158, align 8
  br label %2587

2160:                                             ; preds = %2153
  %2161 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.751, i64 0, i64 0)) #15
  %2162 = icmp eq i32 %2161, 0
  br i1 %2162, label %2163, label %2167

2163:                                             ; preds = %2160
  %2164 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 307
  %2165 = bitcast i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*)** %2164 to i8**
  %2166 = load i8*, i8** %2165, align 8
  br label %2587

2167:                                             ; preds = %2160
  %2168 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.752, i64 0, i64 0)) #15
  %2169 = icmp eq i32 %2168, 0
  br i1 %2169, label %2170, label %2174

2170:                                             ; preds = %2167
  %2171 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 308
  %2172 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**)** %2171 to i8**
  %2173 = load i8*, i8** %2172, align 8
  br label %2587

2174:                                             ; preds = %2167
  %2175 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.753, i64 0, i64 0)) #15
  %2176 = icmp eq i32 %2175, 0
  br i1 %2176, label %2177, label %2181

2177:                                             ; preds = %2174
  %2178 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 309
  %2179 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*)** %2178 to i8**
  %2180 = load i8*, i8** %2179, align 8
  br label %2587

2181:                                             ; preds = %2174
  %2182 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.754, i64 0, i64 0)) #15
  %2183 = icmp eq i32 %2182, 0
  br i1 %2183, label %2184, label %2188

2184:                                             ; preds = %2181
  %2185 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 310
  %2186 = bitcast i32 (%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*)** %2185 to i8**
  %2187 = load i8*, i8** %2186, align 8
  br label %2587

2188:                                             ; preds = %2181
  %2189 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.755, i64 0, i64 0)) #15
  %2190 = icmp eq i32 %2189, 0
  br i1 %2190, label %2191, label %2195

2191:                                             ; preds = %2188
  %2192 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 311
  %2193 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*)** %2192 to i8**
  %2194 = load i8*, i8** %2193, align 8
  br label %2587

2195:                                             ; preds = %2188
  %2196 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.756, i64 0, i64 0)) #15
  %2197 = icmp eq i32 %2196, 0
  br i1 %2197, label %2198, label %2202

2198:                                             ; preds = %2195
  %2199 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 312
  %2200 = bitcast void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32)** %2199 to i8**
  %2201 = load i8*, i8** %2200, align 8
  br label %2587

2202:                                             ; preds = %2195
  %2203 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.757, i64 0, i64 0)) #15
  %2204 = icmp eq i32 %2203, 0
  br i1 %2204, label %2205, label %2209

2205:                                             ; preds = %2202
  %2206 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 313
  %2207 = bitcast i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %2206 to i8**
  %2208 = load i8*, i8** %2207, align 8
  br label %2587

2209:                                             ; preds = %2202
  %2210 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.758, i64 0, i64 0)) #15
  %2211 = icmp eq i32 %2210, 0
  br i1 %2211, label %2212, label %2216

2212:                                             ; preds = %2209
  %2213 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 314
  %2214 = bitcast void (%struct.VkCommandBuffer_T*, i32, i16)** %2213 to i8**
  %2215 = load i8*, i8** %2214, align 8
  br label %2587

2216:                                             ; preds = %2209
  %2217 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.759, i64 0, i64 0)) #15
  %2218 = icmp eq i32 %2217, 0
  br i1 %2218, label %2219, label %2223

2219:                                             ; preds = %2216
  %2220 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 315
  %2221 = bitcast void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)** %2220 to i8**
  %2222 = load i8*, i8** %2221, align 8
  br label %2587

2223:                                             ; preds = %2216
  %2224 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.760, i64 0, i64 0)) #15
  %2225 = icmp eq i32 %2224, 0
  br i1 %2225, label %2226, label %2230

2226:                                             ; preds = %2223
  %2227 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 316
  %2228 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2227 to i8**
  %2229 = load i8*, i8** %2228, align 8
  br label %2587

2230:                                             ; preds = %2223
  %2231 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.761, i64 0, i64 0)) #15
  %2232 = icmp eq i32 %2231, 0
  br i1 %2232, label %2233, label %2237

2233:                                             ; preds = %2230
  %2234 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 317
  %2235 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2234 to i8**
  %2236 = load i8*, i8** %2235, align 8
  br label %2587

2237:                                             ; preds = %2230
  %2238 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.762, i64 0, i64 0)) #15
  %2239 = icmp eq i32 %2238, 0
  br i1 %2239, label %2240, label %2244

2240:                                             ; preds = %2237
  %2241 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 318
  %2242 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2241 to i8**
  %2243 = load i8*, i8** %2242, align 8
  br label %2587

2244:                                             ; preds = %2237
  %2245 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.763, i64 0, i64 0)) #15
  %2246 = icmp eq i32 %2245, 0
  br i1 %2246, label %2247, label %2251

2247:                                             ; preds = %2244
  %2248 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 319
  %2249 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*)** %2248 to i8**
  %2250 = load i8*, i8** %2249, align 8
  br label %2587

2251:                                             ; preds = %2244
  %2252 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.764, i64 0, i64 0)) #15
  %2253 = icmp eq i32 %2252, 0
  br i1 %2253, label %2254, label %2258

2254:                                             ; preds = %2251
  %2255 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 320
  %2256 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*)** %2255 to i8**
  %2257 = load i8*, i8** %2256, align 8
  br label %2587

2258:                                             ; preds = %2251
  %2259 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.765, i64 0, i64 0)) #15
  %2260 = icmp eq i32 %2259, 0
  br i1 %2260, label %2261, label %2265

2261:                                             ; preds = %2258
  %2262 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 321
  %2263 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*)** %2262 to i8**
  %2264 = load i8*, i8** %2263, align 8
  br label %2587

2265:                                             ; preds = %2258
  %2266 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.766, i64 0, i64 0)) #15
  %2267 = icmp eq i32 %2266, 0
  br i1 %2267, label %2268, label %2272

2268:                                             ; preds = %2265
  %2269 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 322
  %2270 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2269 to i8**
  %2271 = load i8*, i8** %2270, align 8
  br label %2587

2272:                                             ; preds = %2265
  %2273 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.767, i64 0, i64 0)) #15
  %2274 = icmp eq i32 %2273, 0
  br i1 %2274, label %2275, label %2279

2275:                                             ; preds = %2272
  %2276 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 323
  %2277 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2276 to i8**
  %2278 = load i8*, i8** %2277, align 8
  br label %2587

2279:                                             ; preds = %2272
  %2280 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.768, i64 0, i64 0)) #15
  %2281 = icmp eq i32 %2280, 0
  br i1 %2281, label %2282, label %2286

2282:                                             ; preds = %2279
  %2283 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 324
  %2284 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2283 to i8**
  %2285 = load i8*, i8** %2284, align 8
  br label %2587

2286:                                             ; preds = %2279
  %2287 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.769, i64 0, i64 0)) #15
  %2288 = icmp eq i32 %2287, 0
  br i1 %2288, label %2289, label %2293

2289:                                             ; preds = %2286
  %2290 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 325
  %2291 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2290 to i8**
  %2292 = load i8*, i8** %2291, align 8
  br label %2587

2293:                                             ; preds = %2286
  %2294 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.770, i64 0, i64 0)) #15
  %2295 = icmp eq i32 %2294, 0
  br i1 %2295, label %2296, label %2300

2296:                                             ; preds = %2293
  %2297 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 326
  %2298 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2297 to i8**
  %2299 = load i8*, i8** %2298, align 8
  br label %2587

2300:                                             ; preds = %2293
  %2301 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.771, i64 0, i64 0)) #15
  %2302 = icmp eq i32 %2301, 0
  br i1 %2302, label %2303, label %2307

2303:                                             ; preds = %2300
  %2304 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 327
  %2305 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)** %2304 to i8**
  %2306 = load i8*, i8** %2305, align 8
  br label %2587

2307:                                             ; preds = %2300
  %2308 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.772, i64 0, i64 0)) #15
  %2309 = icmp eq i32 %2308, 0
  br i1 %2309, label %2310, label %2314

2310:                                             ; preds = %2307
  %2311 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 328
  %2312 = bitcast void (%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)** %2311 to i8**
  %2313 = load i8*, i8** %2312, align 8
  br label %2587

2314:                                             ; preds = %2307
  %2315 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.773, i64 0, i64 0)) #15
  %2316 = icmp eq i32 %2315, 0
  br i1 %2316, label %2317, label %2321

2317:                                             ; preds = %2314
  %2318 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 329
  %2319 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*)** %2318 to i8**
  %2320 = load i8*, i8** %2319, align 8
  br label %2587

2321:                                             ; preds = %2314
  %2322 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.774, i64 0, i64 0)) #15
  %2323 = icmp eq i32 %2322, 0
  br i1 %2323, label %2324, label %2328

2324:                                             ; preds = %2321
  %2325 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 330
  %2326 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*)** %2325 to i8**
  %2327 = load i8*, i8** %2326, align 8
  br label %2587

2328:                                             ; preds = %2321
  %2329 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.775, i64 0, i64 0)) #15
  %2330 = icmp eq i32 %2329, 0
  br i1 %2330, label %2331, label %2335

2331:                                             ; preds = %2328
  %2332 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 331
  %2333 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32)** %2332 to i8**
  %2334 = load i8*, i8** %2333, align 8
  br label %2587

2335:                                             ; preds = %2328
  %2336 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.776, i64 0, i64 0)) #15
  %2337 = icmp eq i32 %2336, 0
  br i1 %2337, label %2338, label %2342

2338:                                             ; preds = %2335
  %2339 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 332
  %2340 = bitcast i32 (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**)** %2339 to i8**
  %2341 = load i8*, i8** %2340, align 8
  br label %2587

2342:                                             ; preds = %2335
  %2343 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.777, i64 0, i64 0)) #15
  %2344 = icmp eq i32 %2343, 0
  br i1 %2344, label %2345, label %2349

2345:                                             ; preds = %2342
  %2346 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 333
  %2347 = bitcast void (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*)** %2346 to i8**
  %2348 = load i8*, i8** %2347, align 8
  br label %2587

2349:                                             ; preds = %2342
  %2350 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.778, i64 0, i64 0)) #15
  %2351 = icmp eq i32 %2350, 0
  br i1 %2351, label %2352, label %2356

2352:                                             ; preds = %2349
  %2353 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 334
  %2354 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**)** %2353 to i8**
  %2355 = load i8*, i8** %2354, align 8
  br label %2587

2356:                                             ; preds = %2349
  %2357 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.779, i64 0, i64 0)) #15
  %2358 = icmp eq i32 %2357, 0
  br i1 %2358, label %2359, label %2363

2359:                                             ; preds = %2356
  %2360 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 335
  %2361 = bitcast void (%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*)** %2360 to i8**
  %2362 = load i8*, i8** %2361, align 8
  br label %2587

2363:                                             ; preds = %2356
  %2364 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.780, i64 0, i64 0)) #15
  %2365 = icmp eq i32 %2364, 0
  br i1 %2365, label %2366, label %2370

2366:                                             ; preds = %2363
  %2367 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 336
  %2368 = bitcast i32 (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64)** %2367 to i8**
  %2369 = load i8*, i8** %2368, align 8
  br label %2587

2370:                                             ; preds = %2363
  %2371 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.781, i64 0, i64 0)) #15
  %2372 = icmp eq i32 %2371, 0
  br i1 %2372, label %2373, label %2377

2373:                                             ; preds = %2370
  %2374 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 337
  %2375 = bitcast void (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*)** %2374 to i8**
  %2376 = load i8*, i8** %2375, align 8
  br label %2587

2377:                                             ; preds = %2370
  %2378 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.782, i64 0, i64 0)) #15
  %2379 = icmp eq i32 %2378, 0
  br i1 %2379, label %2380, label %2384

2380:                                             ; preds = %2377
  %2381 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 338
  %2382 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32*)** %2381 to i8**
  %2383 = load i8*, i8** %2382, align 8
  br label %2587

2384:                                             ; preds = %2377
  %2385 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.783, i64 0, i64 0)) #15
  %2386 = icmp eq i32 %2385, 0
  br i1 %2386, label %2387, label %2391

2387:                                             ; preds = %2384
  %2388 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 339
  %2389 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*)** %2388 to i8**
  %2390 = load i8*, i8** %2389, align 8
  br label %2587

2391:                                             ; preds = %2384
  %2392 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.784, i64 0, i64 0)) #15
  %2393 = icmp eq i32 %2392, 0
  br i1 %2393, label %2394, label %2398

2394:                                             ; preds = %2391
  %2395 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 340
  %2396 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2395 to i8**
  %2397 = load i8*, i8** %2396, align 8
  br label %2587

2398:                                             ; preds = %2391
  %2399 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.785, i64 0, i64 0)) #15
  %2400 = icmp eq i32 %2399, 0
  br i1 %2400, label %2401, label %2405

2401:                                             ; preds = %2398
  %2402 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 341
  %2403 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2402 to i8**
  %2404 = load i8*, i8** %2403, align 8
  br label %2587

2405:                                             ; preds = %2398
  %2406 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.786, i64 0, i64 0)) #15
  %2407 = icmp eq i32 %2406, 0
  br i1 %2407, label %2408, label %2412

2408:                                             ; preds = %2405
  %2409 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 342
  %2410 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2409 to i8**
  %2411 = load i8*, i8** %2410, align 8
  br label %2587

2412:                                             ; preds = %2405
  %2413 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.787, i64 0, i64 0)) #15
  %2414 = icmp eq i32 %2413, 0
  br i1 %2414, label %2415, label %2419

2415:                                             ; preds = %2412
  %2416 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 343
  %2417 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2416 to i8**
  %2418 = load i8*, i8** %2417, align 8
  br label %2587

2419:                                             ; preds = %2412
  %2420 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.788, i64 0, i64 0)) #15
  %2421 = icmp eq i32 %2420, 0
  br i1 %2421, label %2422, label %2426

2422:                                             ; preds = %2419
  %2423 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 344
  %2424 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2423 to i8**
  %2425 = load i8*, i8** %2424, align 8
  br label %2587

2426:                                             ; preds = %2419
  %2427 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.789, i64 0, i64 0)) #15
  %2428 = icmp eq i32 %2427, 0
  br i1 %2428, label %2429, label %2433

2429:                                             ; preds = %2426
  %2430 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 345
  %2431 = bitcast void (%struct.VkCommandBuffer_T*, i32, i32*)** %2430 to i8**
  %2432 = load i8*, i8** %2431, align 8
  br label %2587

2433:                                             ; preds = %2426
  %2434 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.790, i64 0, i64 0)) #15
  %2435 = icmp eq i32 %2434, 0
  br i1 %2435, label %2436, label %2440

2436:                                             ; preds = %2433
  %2437 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 346
  %2438 = bitcast i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**)** %2437 to i8**
  %2439 = load i8*, i8** %2438, align 8
  br label %2587

2440:                                             ; preds = %2433
  %2441 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.791, i64 0, i64 0)) #15
  %2442 = icmp eq i32 %2441, 0
  br i1 %2442, label %2443, label %2447

2443:                                             ; preds = %2440
  %2444 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 347
  %2445 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*)** %2444 to i8**
  %2446 = load i8*, i8** %2445, align 8
  br label %2587

2447:                                             ; preds = %2440
  %2448 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.792, i64 0, i64 0)) #15
  %2449 = icmp eq i32 %2448, 0
  br i1 %2449, label %2450, label %2454

2450:                                             ; preds = %2447
  %2451 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 348
  %2452 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)** %2451 to i8**
  %2453 = load i8*, i8** %2452, align 8
  br label %2587

2454:                                             ; preds = %2447
  %2455 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.793, i64 0, i64 0)) #15
  %2456 = icmp eq i32 %2455, 0
  br i1 %2456, label %2457, label %2461

2457:                                             ; preds = %2454
  %2458 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 349
  %2459 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**)** %2458 to i8**
  %2460 = load i8*, i8** %2459, align 8
  br label %2587

2461:                                             ; preds = %2454
  %2462 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.794, i64 0, i64 0)) #15
  %2463 = icmp eq i32 %2462, 0
  br i1 %2463, label %2464, label %2468

2464:                                             ; preds = %2461
  %2465 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 350
  %2466 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)** %2465 to i8**
  %2467 = load i8*, i8** %2466, align 8
  br label %2587

2468:                                             ; preds = %2461
  %2469 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.795, i64 0, i64 0)) #15
  %2470 = icmp eq i32 %2469, 0
  br i1 %2470, label %2471, label %2475

2471:                                             ; preds = %2468
  %2472 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 351
  %2473 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*)** %2472 to i8**
  %2474 = load i8*, i8** %2473, align 8
  br label %2587

2475:                                             ; preds = %2468
  %2476 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.796, i64 0, i64 0)) #15
  %2477 = icmp eq i32 %2476, 0
  br i1 %2477, label %2478, label %2482

2478:                                             ; preds = %2475
  %2479 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 352
  %2480 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)** %2479 to i8**
  %2481 = load i8*, i8** %2480, align 8
  br label %2587

2482:                                             ; preds = %2475
  %2483 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.797, i64 0, i64 0)) #15
  %2484 = icmp eq i32 %2483, 0
  br i1 %2484, label %2485, label %2489

2485:                                             ; preds = %2482
  %2486 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 353
  %2487 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)** %2486 to i8**
  %2488 = load i8*, i8** %2487, align 8
  br label %2587

2489:                                             ; preds = %2482
  %2490 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.798, i64 0, i64 0)) #15
  %2491 = icmp eq i32 %2490, 0
  br i1 %2491, label %2492, label %2496

2492:                                             ; preds = %2489
  %2493 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 354
  %2494 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64)** %2493 to i8**
  %2495 = load i8*, i8** %2494, align 8
  br label %2587

2496:                                             ; preds = %2489
  %2497 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.799, i64 0, i64 0)) #15
  %2498 = icmp eq i32 %2497, 0
  br i1 %2498, label %2499, label %2503

2499:                                             ; preds = %2496
  %2500 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 355
  %2501 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*)** %2500 to i8**
  %2502 = load i8*, i8** %2501, align 8
  br label %2587

2503:                                             ; preds = %2496
  %2504 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.800, i64 0, i64 0)) #15
  %2505 = icmp eq i32 %2504, 0
  br i1 %2505, label %2506, label %2510

2506:                                             ; preds = %2503
  %2507 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 356
  %2508 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)** %2507 to i8**
  %2509 = load i8*, i8** %2508, align 8
  br label %2587

2510:                                             ; preds = %2503
  %2511 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.801, i64 0, i64 0)) #15
  %2512 = icmp eq i32 %2511, 0
  br i1 %2512, label %2513, label %2517

2513:                                             ; preds = %2510
  %2514 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 357
  %2515 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)** %2514 to i8**
  %2516 = load i8*, i8** %2515, align 8
  br label %2587

2517:                                             ; preds = %2510
  %2518 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.802, i64 0, i64 0)) #15
  %2519 = icmp eq i32 %2518, 0
  br i1 %2519, label %2520, label %2524

2520:                                             ; preds = %2517
  %2521 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 358
  %2522 = bitcast i64 (%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*)** %2521 to i8**
  %2523 = load i8*, i8** %2522, align 8
  br label %2587

2524:                                             ; preds = %2517
  %2525 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.803, i64 0, i64 0)) #15
  %2526 = icmp eq i32 %2525, 0
  br i1 %2526, label %2527, label %2531

2527:                                             ; preds = %2524
  %2528 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 359
  %2529 = bitcast void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32)** %2528 to i8**
  %2530 = load i8*, i8** %2529, align 8
  br label %2587

2531:                                             ; preds = %2524
  %2532 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.804, i64 0, i64 0)) #15
  %2533 = icmp eq i32 %2532, 0
  br i1 %2533, label %2534, label %2538

2534:                                             ; preds = %2531
  %2535 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 360
  %2536 = bitcast void (%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*)** %2535 to i8**
  %2537 = load i8*, i8** %2536, align 8
  br label %2587

2538:                                             ; preds = %2531
  %2539 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.805, i64 0, i64 0)) #15
  %2540 = icmp eq i32 %2539, 0
  br i1 %2540, label %2541, label %2545

2541:                                             ; preds = %2538
  %2542 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 361
  %2543 = bitcast void (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*)** %2542 to i8**
  %2544 = load i8*, i8** %2543, align 8
  br label %2587

2545:                                             ; preds = %2538
  %2546 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.806, i64 0, i64 0)) #15
  %2547 = icmp eq i32 %2546, 0
  br i1 %2547, label %2548, label %2552

2548:                                             ; preds = %2545
  %2549 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 362
  %2550 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32)** %2549 to i8**
  %2551 = load i8*, i8** %2550, align 8
  br label %2587

2552:                                             ; preds = %2545
  %2553 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.807, i64 0, i64 0)) #15
  %2554 = icmp eq i32 %2553, 0
  br i1 %2554, label %2555, label %2559

2555:                                             ; preds = %2552
  %2556 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 363
  %2557 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %2556 to i8**
  %2558 = load i8*, i8** %2557, align 8
  br label %2587

2559:                                             ; preds = %2552
  %2560 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.808, i64 0, i64 0)) #15
  %2561 = icmp eq i32 %2560, 0
  br i1 %2561, label %2562, label %2566

2562:                                             ; preds = %2559
  %2563 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 364
  %2564 = bitcast i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %2563 to i8**
  %2565 = load i8*, i8** %2564, align 8
  br label %2587

2566:                                             ; preds = %2559
  %2567 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.809, i64 0, i64 0)) #15
  %2568 = icmp eq i32 %2567, 0
  br i1 %2568, label %2569, label %2573

2569:                                             ; preds = %2566
  %2570 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 365
  %2571 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64)** %2570 to i8**
  %2572 = load i8*, i8** %2571, align 8
  br label %2587

2573:                                             ; preds = %2566
  %2574 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.810, i64 0, i64 0)) #15
  %2575 = icmp eq i32 %2574, 0
  br i1 %2575, label %2576, label %2580

2576:                                             ; preds = %2573
  %2577 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 366
  %2578 = bitcast i64 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32)** %2577 to i8**
  %2579 = load i8*, i8** %2578, align 8
  br label %2587

2580:                                             ; preds = %2573
  %2581 = tail call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.811, i64 0, i64 0)) #15
  %2582 = icmp eq i32 %2581, 0
  br i1 %2582, label %2583, label %2587

2583:                                             ; preds = %2580
  %2584 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %0, i64 0, i32 367
  %2585 = bitcast void (%struct.VkCommandBuffer_T*, i32)** %2584 to i8**
  %2586 = load i8*, i8** %2585, align 8
  br label %2587

2587:                                             ; preds = %2580, %2, %4, %7, %2583, %2576, %2569, %2562, %2555, %2548, %2541, %2534, %2527, %2520, %2513, %2506, %2499, %2492, %2485, %2478, %2471, %2464, %2457, %2450, %2443, %2436, %2429, %2422, %2415, %2408, %2401, %2394, %2387, %2380, %2373, %2366, %2359, %2352, %2345, %2338, %2331, %2324, %2317, %2310, %2303, %2296, %2289, %2282, %2275, %2268, %2261, %2254, %2247, %2240, %2233, %2226, %2219, %2212, %2205, %2198, %2191, %2184, %2177, %2170, %2163, %2156, %2149, %2142, %2135, %2128, %2121, %2114, %2107, %2100, %2093, %2086, %2079, %2072, %2065, %2058, %2051, %2044, %2037, %2030, %2023, %2016, %2009, %2002, %1995, %1988, %1981, %1974, %1967, %1960, %1953, %1946, %1939, %1932, %1925, %1918, %1911, %1904, %1897, %1890, %1883, %1876, %1869, %1862, %1855, %1848, %1841, %1834, %1827, %1820, %1813, %1806, %1799, %1792, %1785, %1778, %1771, %1764, %1757, %1750, %1743, %1736, %1729, %1722, %1715, %1708, %1701, %1694, %1687, %1680, %1673, %1666, %1659, %1652, %1645, %1638, %1631, %1624, %1617, %1610, %1603, %1596, %1589, %1582, %1575, %1568, %1561, %1554, %1547, %1540, %1533, %1526, %1519, %1512, %1505, %1498, %1491, %1484, %1477, %1470, %1463, %1456, %1449, %1442, %1435, %1428, %1421, %1414, %1407, %1400, %1393, %1386, %1379, %1372, %1365, %1358, %1351, %1344, %1337, %1330, %1323, %1316, %1309, %1302, %1295, %1288, %1281, %1274, %1267, %1260, %1253, %1246, %1239, %1232, %1225, %1218, %1211, %1204, %1197, %1190, %1183, %1176, %1169, %1162, %1155, %1148, %1141, %1134, %1127, %1120, %1113, %1106, %1099, %1092, %1085, %1078, %1071, %1064, %1057, %1050, %1043, %1036, %1029, %1022, %1015, %1008, %1001, %994, %987, %980, %973, %966, %959, %952, %945, %938, %931, %924, %917, %910, %903, %896, %889, %882, %875, %868, %861, %854, %847, %840, %833, %826, %819, %812, %805, %798, %791, %784, %777, %770, %763, %756, %749, %742, %735, %728, %721, %714, %707, %700, %693, %686, %679, %672, %665, %658, %651, %644, %637, %630, %623, %616, %609, %602, %595, %588, %581, %574, %567, %560, %553, %546, %539, %532, %525, %518, %511, %504, %497, %490, %483, %476, %469, %462, %455, %448, %441, %434, %427, %420, %413, %406, %399, %392, %385, %378, %371, %364, %357, %350, %343, %336, %329, %322, %315, %308, %301, %294, %287, %280, %273, %266, %259, %252, %245, %238, %231, %224, %217, %210, %203, %196, %189, %182, %175, %168, %161, %154, %147, %140, %133, %126, %119, %112, %105, %98, %91, %84, %77, %70, %63, %56, %49, %42, %35, %28, %21, %15
  %2588 = phi i8* [ %2586, %2583 ], [ %2579, %2576 ], [ %2572, %2569 ], [ %2565, %2562 ], [ %2558, %2555 ], [ %2551, %2548 ], [ %2544, %2541 ], [ %2537, %2534 ], [ %2530, %2527 ], [ %2523, %2520 ], [ %2516, %2513 ], [ %2509, %2506 ], [ %2502, %2499 ], [ %2495, %2492 ], [ %2488, %2485 ], [ %2481, %2478 ], [ %2474, %2471 ], [ %2467, %2464 ], [ %2460, %2457 ], [ %2453, %2450 ], [ %2446, %2443 ], [ %2439, %2436 ], [ %2432, %2429 ], [ %2425, %2422 ], [ %2418, %2415 ], [ %2411, %2408 ], [ %2404, %2401 ], [ %2397, %2394 ], [ %2390, %2387 ], [ %2383, %2380 ], [ %2376, %2373 ], [ %2369, %2366 ], [ %2362, %2359 ], [ %2355, %2352 ], [ %2348, %2345 ], [ %2341, %2338 ], [ %2334, %2331 ], [ %2327, %2324 ], [ %2320, %2317 ], [ %2313, %2310 ], [ %2306, %2303 ], [ %2299, %2296 ], [ %2292, %2289 ], [ %2285, %2282 ], [ %2278, %2275 ], [ %2271, %2268 ], [ %2264, %2261 ], [ %2257, %2254 ], [ %2250, %2247 ], [ %2243, %2240 ], [ %2236, %2233 ], [ %2229, %2226 ], [ %2222, %2219 ], [ %2215, %2212 ], [ %2208, %2205 ], [ %2201, %2198 ], [ %2194, %2191 ], [ %2187, %2184 ], [ %2180, %2177 ], [ %2173, %2170 ], [ %2166, %2163 ], [ %2159, %2156 ], [ %2152, %2149 ], [ %2145, %2142 ], [ %2138, %2135 ], [ %2131, %2128 ], [ %2124, %2121 ], [ %2117, %2114 ], [ %2110, %2107 ], [ %2103, %2100 ], [ %2096, %2093 ], [ %2089, %2086 ], [ %2082, %2079 ], [ %2075, %2072 ], [ %2068, %2065 ], [ %2061, %2058 ], [ %2054, %2051 ], [ %2047, %2044 ], [ %2040, %2037 ], [ %2033, %2030 ], [ %2026, %2023 ], [ %2019, %2016 ], [ %2012, %2009 ], [ %2005, %2002 ], [ %1998, %1995 ], [ %1991, %1988 ], [ %1984, %1981 ], [ %1977, %1974 ], [ %1970, %1967 ], [ %1963, %1960 ], [ %1956, %1953 ], [ %1949, %1946 ], [ %1942, %1939 ], [ %1935, %1932 ], [ %1928, %1925 ], [ %1921, %1918 ], [ %1914, %1911 ], [ %1907, %1904 ], [ %1900, %1897 ], [ %1893, %1890 ], [ %1886, %1883 ], [ %1879, %1876 ], [ %1872, %1869 ], [ %1865, %1862 ], [ %1858, %1855 ], [ %1851, %1848 ], [ %1844, %1841 ], [ %1837, %1834 ], [ %1830, %1827 ], [ %1823, %1820 ], [ %1816, %1813 ], [ %1809, %1806 ], [ %1802, %1799 ], [ %1795, %1792 ], [ %1788, %1785 ], [ %1781, %1778 ], [ %1774, %1771 ], [ %1767, %1764 ], [ %1760, %1757 ], [ %1753, %1750 ], [ %1746, %1743 ], [ %1739, %1736 ], [ %1732, %1729 ], [ %1725, %1722 ], [ %1718, %1715 ], [ %1711, %1708 ], [ %1704, %1701 ], [ %1697, %1694 ], [ %1690, %1687 ], [ %1683, %1680 ], [ %1676, %1673 ], [ %1669, %1666 ], [ %1662, %1659 ], [ %1655, %1652 ], [ %1648, %1645 ], [ %1641, %1638 ], [ %1634, %1631 ], [ %1627, %1624 ], [ %1620, %1617 ], [ %1613, %1610 ], [ %1606, %1603 ], [ %1599, %1596 ], [ %1592, %1589 ], [ %1585, %1582 ], [ %1578, %1575 ], [ %1571, %1568 ], [ %1564, %1561 ], [ %1557, %1554 ], [ %1550, %1547 ], [ %1543, %1540 ], [ %1536, %1533 ], [ %1529, %1526 ], [ %1522, %1519 ], [ %1515, %1512 ], [ %1508, %1505 ], [ %1501, %1498 ], [ %1494, %1491 ], [ %1487, %1484 ], [ %1480, %1477 ], [ %1473, %1470 ], [ %1466, %1463 ], [ %1459, %1456 ], [ %1452, %1449 ], [ %1445, %1442 ], [ %1438, %1435 ], [ %1431, %1428 ], [ %1424, %1421 ], [ %1417, %1414 ], [ %1410, %1407 ], [ %1403, %1400 ], [ %1396, %1393 ], [ %1389, %1386 ], [ %1382, %1379 ], [ %1375, %1372 ], [ %1368, %1365 ], [ %1361, %1358 ], [ %1354, %1351 ], [ %1347, %1344 ], [ %1340, %1337 ], [ %1333, %1330 ], [ %1326, %1323 ], [ %1319, %1316 ], [ %1312, %1309 ], [ %1305, %1302 ], [ %1298, %1295 ], [ %1291, %1288 ], [ %1284, %1281 ], [ %1277, %1274 ], [ %1270, %1267 ], [ %1263, %1260 ], [ %1256, %1253 ], [ %1249, %1246 ], [ %1242, %1239 ], [ %1235, %1232 ], [ %1228, %1225 ], [ %1221, %1218 ], [ %1214, %1211 ], [ %1207, %1204 ], [ %1200, %1197 ], [ %1193, %1190 ], [ %1186, %1183 ], [ %1179, %1176 ], [ %1172, %1169 ], [ %1165, %1162 ], [ %1158, %1155 ], [ %1151, %1148 ], [ %1144, %1141 ], [ %1137, %1134 ], [ %1130, %1127 ], [ %1123, %1120 ], [ %1116, %1113 ], [ %1109, %1106 ], [ %1102, %1099 ], [ %1095, %1092 ], [ %1088, %1085 ], [ %1081, %1078 ], [ %1074, %1071 ], [ %1067, %1064 ], [ %1060, %1057 ], [ %1053, %1050 ], [ %1046, %1043 ], [ %1039, %1036 ], [ %1032, %1029 ], [ %1025, %1022 ], [ %1018, %1015 ], [ %1011, %1008 ], [ %1004, %1001 ], [ %997, %994 ], [ %990, %987 ], [ %983, %980 ], [ %976, %973 ], [ %969, %966 ], [ %962, %959 ], [ %955, %952 ], [ %948, %945 ], [ %941, %938 ], [ %934, %931 ], [ %927, %924 ], [ %920, %917 ], [ %913, %910 ], [ %906, %903 ], [ %899, %896 ], [ %892, %889 ], [ %885, %882 ], [ %878, %875 ], [ %871, %868 ], [ %864, %861 ], [ %857, %854 ], [ %850, %847 ], [ %843, %840 ], [ %836, %833 ], [ %829, %826 ], [ %822, %819 ], [ %815, %812 ], [ %808, %805 ], [ %801, %798 ], [ %794, %791 ], [ %787, %784 ], [ %780, %777 ], [ %773, %770 ], [ %766, %763 ], [ %759, %756 ], [ %752, %749 ], [ %745, %742 ], [ %738, %735 ], [ %731, %728 ], [ %724, %721 ], [ %717, %714 ], [ %710, %707 ], [ %703, %700 ], [ %696, %693 ], [ %689, %686 ], [ %682, %679 ], [ %675, %672 ], [ %668, %665 ], [ %661, %658 ], [ %654, %651 ], [ %647, %644 ], [ %640, %637 ], [ %633, %630 ], [ %626, %623 ], [ %619, %616 ], [ %612, %609 ], [ %605, %602 ], [ %598, %595 ], [ %591, %588 ], [ %584, %581 ], [ %577, %574 ], [ %570, %567 ], [ %563, %560 ], [ %556, %553 ], [ %549, %546 ], [ %542, %539 ], [ %535, %532 ], [ %528, %525 ], [ %521, %518 ], [ %514, %511 ], [ %507, %504 ], [ %500, %497 ], [ %493, %490 ], [ %486, %483 ], [ %479, %476 ], [ %472, %469 ], [ %465, %462 ], [ %458, %455 ], [ %451, %448 ], [ %444, %441 ], [ %437, %434 ], [ %430, %427 ], [ %423, %420 ], [ %416, %413 ], [ %409, %406 ], [ %402, %399 ], [ %395, %392 ], [ %388, %385 ], [ %381, %378 ], [ %374, %371 ], [ %367, %364 ], [ %360, %357 ], [ %353, %350 ], [ %346, %343 ], [ %339, %336 ], [ %332, %329 ], [ %325, %322 ], [ %318, %315 ], [ %311, %308 ], [ %304, %301 ], [ %297, %294 ], [ %290, %287 ], [ %283, %280 ], [ %276, %273 ], [ %269, %266 ], [ %262, %259 ], [ %255, %252 ], [ %248, %245 ], [ %241, %238 ], [ %234, %231 ], [ %227, %224 ], [ %220, %217 ], [ %213, %210 ], [ %206, %203 ], [ %199, %196 ], [ %192, %189 ], [ %185, %182 ], [ %178, %175 ], [ %171, %168 ], [ %164, %161 ], [ %157, %154 ], [ %150, %147 ], [ %143, %140 ], [ %136, %133 ], [ %129, %126 ], [ %122, %119 ], [ %115, %112 ], [ %108, %105 ], [ %101, %98 ], [ %94, %91 ], [ %87, %84 ], [ %80, %77 ], [ %73, %70 ], [ %66, %63 ], [ %59, %56 ], [ %52, %49 ], [ %45, %42 ], [ %38, %35 ], [ %31, %28 ], [ %24, %21 ], [ %17, %15 ], [ null, %7 ], [ null, %4 ], [ null, %2 ], [ null, %2580 ]
  ret i8* %2588
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @loader_lookup_instance_dispatch_table(%struct.VkLayerInstanceDispatchTable_* readonly, i8* readonly, i8* nocapture) local_unnamed_addr #5 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = icmp eq i8 %6, 118
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 107
  br i1 %11, label %13, label %12

12:                                               ; preds = %8, %5, %3
  store i8 0, i8* %2, align 1
  br label %540

13:                                               ; preds = %8
  store i8 1, i8* %2, align 1
  %14 = getelementptr inbounds i8, i8* %1, i64 2
  %15 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.812, i64 0, i64 0)) #15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 2
  %19 = bitcast void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %540

21:                                               ; preds = %13
  %22 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.813, i64 0, i64 0)) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 3
  %26 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %540

28:                                               ; preds = %21
  %29 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.814, i64 0, i64 0)) #15
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 4
  %33 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)** %32 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %540

35:                                               ; preds = %28
  %36 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.815, i64 0, i64 0)) #15
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 5
  %40 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)** %39 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %540

42:                                               ; preds = %35
  %43 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.816, i64 0, i64 0)) #15
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 6
  %47 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %540

49:                                               ; preds = %42
  %50 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.817, i64 0, i64 0)) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 7
  %54 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %540

56:                                               ; preds = %49
  %57 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.818, i64 0, i64 0)) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 8
  %61 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %540

63:                                               ; preds = %56
  %64 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.819, i64 0, i64 0)) #15
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 9
  %68 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %67 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %540

70:                                               ; preds = %63
  %71 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.820, i64 0, i64 0)) #15
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 10
  %75 = bitcast void ()* (%struct.VkInstance_T*, i8*)** %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %540

77:                                               ; preds = %70
  %78 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.821, i64 0, i64 0)) #15
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 13
  %82 = bitcast i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %81 to i8**
  %83 = load i8*, i8** %82, align 8
  br label %540

84:                                               ; preds = %77
  %85 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.822, i64 0, i64 0)) #15
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 15
  %89 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)** %88 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %540

91:                                               ; preds = %84
  %92 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.823, i64 0, i64 0)) #15
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 16
  %96 = bitcast void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)** %95 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %540

98:                                               ; preds = %91
  %99 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.824, i64 0, i64 0)) #15
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %98
  %102 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 18
  %103 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %102 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %540

105:                                              ; preds = %98
  %106 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.825, i64 0, i64 0)) #15
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 19
  %110 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %109 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %540

112:                                              ; preds = %105
  %113 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.826, i64 0, i64 0)) #15
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %119

115:                                              ; preds = %112
  %116 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 20
  %117 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %116 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %540

119:                                              ; preds = %112
  %120 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.827, i64 0, i64 0)) #15
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %119
  %123 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 21
  %124 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %123 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %540

126:                                              ; preds = %119
  %127 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.828, i64 0, i64 0)) #15
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %126
  %130 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 22
  %131 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %130 to i8**
  %132 = load i8*, i8** %131, align 8
  br label %540

133:                                              ; preds = %126
  %134 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.829, i64 0, i64 0)) #15
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 23
  %138 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** %137 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %540

140:                                              ; preds = %133
  %141 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.830, i64 0, i64 0)) #15
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 24
  %145 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %144 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %540

147:                                              ; preds = %140
  %148 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.831, i64 0, i64 0)) #15
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 25
  %152 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** %151 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %540

154:                                              ; preds = %147
  %155 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.832, i64 0, i64 0)) #15
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %154
  %158 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 26
  %159 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** %158 to i8**
  %160 = load i8*, i8** %159, align 8
  br label %540

161:                                              ; preds = %154
  %162 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.833, i64 0, i64 0)) #15
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %161
  %165 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 27
  %166 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** %165 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %540

168:                                              ; preds = %161
  %169 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.834, i64 0, i64 0)) #15
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 28
  %173 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** %172 to i8**
  %174 = load i8*, i8** %173, align 8
  br label %540

175:                                              ; preds = %168
  %176 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.835, i64 0, i64 0)) #15
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 29
  %180 = bitcast void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)** %179 to i8**
  %181 = load i8*, i8** %180, align 8
  br label %540

182:                                              ; preds = %175
  %183 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.836, i64 0, i64 0)) #15
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %182
  %186 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 30
  %187 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)** %186 to i8**
  %188 = load i8*, i8** %187, align 8
  br label %540

189:                                              ; preds = %182
  %190 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.837, i64 0, i64 0)) #15
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %189
  %193 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 31
  %194 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)** %193 to i8**
  %195 = load i8*, i8** %194, align 8
  br label %540

196:                                              ; preds = %189
  %197 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.838, i64 0, i64 0)) #15
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %203

199:                                              ; preds = %196
  %200 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 32
  %201 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)** %200 to i8**
  %202 = load i8*, i8** %201, align 8
  br label %540

203:                                              ; preds = %196
  %204 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.839, i64 0, i64 0)) #15
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %203
  %207 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 33
  %208 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)** %207 to i8**
  %209 = load i8*, i8** %208, align 8
  br label %540

210:                                              ; preds = %203
  %211 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.840, i64 0, i64 0)) #15
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %217

213:                                              ; preds = %210
  %214 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 34
  %215 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)** %214 to i8**
  %216 = load i8*, i8** %215, align 8
  br label %540

217:                                              ; preds = %210
  %218 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.841, i64 0, i64 0)) #15
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %224

220:                                              ; preds = %217
  %221 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 35
  %222 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)** %221 to i8**
  %223 = load i8*, i8** %222, align 8
  br label %540

224:                                              ; preds = %217
  %225 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.842, i64 0, i64 0)) #15
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 36
  %229 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)** %228 to i8**
  %230 = load i8*, i8** %229, align 8
  br label %540

231:                                              ; preds = %224
  %232 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.843, i64 0, i64 0)) #15
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %238

234:                                              ; preds = %231
  %235 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 37
  %236 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)** %235 to i8**
  %237 = load i8*, i8** %236, align 8
  br label %540

238:                                              ; preds = %231
  %239 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.844, i64 0, i64 0)) #15
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %245

241:                                              ; preds = %238
  %242 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 38
  %243 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)** %242 to i8**
  %244 = load i8*, i8** %243, align 8
  br label %540

245:                                              ; preds = %238
  %246 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.845, i64 0, i64 0)) #15
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %252

248:                                              ; preds = %245
  %249 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 39
  %250 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)** %249 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %540

252:                                              ; preds = %245
  %253 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.846, i64 0, i64 0)) #15
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 40
  %257 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)** %256 to i8**
  %258 = load i8*, i8** %257, align 8
  br label %540

259:                                              ; preds = %252
  %260 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.847, i64 0, i64 0)) #15
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 41
  %264 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %263 to i8**
  %265 = load i8*, i8** %264, align 8
  br label %540

266:                                              ; preds = %259
  %267 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.848, i64 0, i64 0)) #15
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %273

269:                                              ; preds = %266
  %270 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 42
  %271 = bitcast i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %270 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %540

273:                                              ; preds = %266
  %274 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.849, i64 0, i64 0)) #15
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %280

276:                                              ; preds = %273
  %277 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 43
  %278 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)** %277 to i8**
  %279 = load i8*, i8** %278, align 8
  br label %540

280:                                              ; preds = %273
  %281 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.850, i64 0, i64 0)) #15
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %280
  %284 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 44
  %285 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)** %284 to i8**
  %286 = load i8*, i8** %285, align 8
  br label %540

287:                                              ; preds = %280
  %288 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.851, i64 0, i64 0)) #15
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %294

290:                                              ; preds = %287
  %291 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 45
  %292 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)** %291 to i8**
  %293 = load i8*, i8** %292, align 8
  br label %540

294:                                              ; preds = %287
  %295 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.852, i64 0, i64 0)) #15
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %301

297:                                              ; preds = %294
  %298 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 46
  %299 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %298 to i8**
  %300 = load i8*, i8** %299, align 8
  br label %540

301:                                              ; preds = %294
  %302 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.853, i64 0, i64 0)) #15
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %308

304:                                              ; preds = %301
  %305 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 47
  %306 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %305 to i8**
  %307 = load i8*, i8** %306, align 8
  br label %540

308:                                              ; preds = %301
  %309 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.854, i64 0, i64 0)) #15
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %315

311:                                              ; preds = %308
  %312 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 48
  %313 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %312 to i8**
  %314 = load i8*, i8** %313, align 8
  br label %540

315:                                              ; preds = %308
  %316 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.855, i64 0, i64 0)) #15
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %322

318:                                              ; preds = %315
  %319 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 49
  %320 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %319 to i8**
  %321 = load i8*, i8** %320, align 8
  br label %540

322:                                              ; preds = %315
  %323 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.856, i64 0, i64 0)) #15
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %329

325:                                              ; preds = %322
  %326 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 50
  %327 = bitcast void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** %326 to i8**
  %328 = load i8*, i8** %327, align 8
  br label %540

329:                                              ; preds = %322
  %330 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.857, i64 0, i64 0)) #15
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %336

332:                                              ; preds = %329
  %333 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 51
  %334 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %333 to i8**
  %335 = load i8*, i8** %334, align 8
  br label %540

336:                                              ; preds = %329
  %337 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.858, i64 0, i64 0)) #15
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %343

339:                                              ; preds = %336
  %340 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 52
  %341 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** %340 to i8**
  %342 = load i8*, i8** %341, align 8
  br label %540

343:                                              ; preds = %336
  %344 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.859, i64 0, i64 0)) #15
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %350

346:                                              ; preds = %343
  %347 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 53
  %348 = bitcast i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %347 to i8**
  %349 = load i8*, i8** %348, align 8
  br label %540

350:                                              ; preds = %343
  %351 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.860, i64 0, i64 0)) #15
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %357

353:                                              ; preds = %350
  %354 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 54
  %355 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** %354 to i8**
  %356 = load i8*, i8** %355, align 8
  br label %540

357:                                              ; preds = %350
  %358 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.861, i64 0, i64 0)) #15
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %364

360:                                              ; preds = %357
  %361 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 55
  %362 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** %361 to i8**
  %363 = load i8*, i8** %362, align 8
  br label %540

364:                                              ; preds = %357
  %365 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.862, i64 0, i64 0)) #15
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %371

367:                                              ; preds = %364
  %368 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 56
  %369 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** %368 to i8**
  %370 = load i8*, i8** %369, align 8
  br label %540

371:                                              ; preds = %364
  %372 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.863, i64 0, i64 0)) #15
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %378

374:                                              ; preds = %371
  %375 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 57
  %376 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)** %375 to i8**
  %377 = load i8*, i8** %376, align 8
  br label %540

378:                                              ; preds = %371
  %379 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.864, i64 0, i64 0)) #15
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %385

381:                                              ; preds = %378
  %382 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 58
  %383 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)** %382 to i8**
  %384 = load i8*, i8** %383, align 8
  br label %540

385:                                              ; preds = %378
  %386 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.865, i64 0, i64 0)) #15
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %392

388:                                              ; preds = %385
  %389 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 59
  %390 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)** %389 to i8**
  %391 = load i8*, i8** %390, align 8
  br label %540

392:                                              ; preds = %385
  %393 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.866, i64 0, i64 0)) #15
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %399

395:                                              ; preds = %392
  %396 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 60
  %397 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)** %396 to i8**
  %398 = load i8*, i8** %397, align 8
  br label %540

399:                                              ; preds = %392
  %400 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.867, i64 0, i64 0)) #15
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %406

402:                                              ; preds = %399
  %403 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 61
  %404 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)** %403 to i8**
  %405 = load i8*, i8** %404, align 8
  br label %540

406:                                              ; preds = %399
  %407 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.868, i64 0, i64 0)) #15
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %413

409:                                              ; preds = %406
  %410 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 62
  %411 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)** %410 to i8**
  %412 = load i8*, i8** %411, align 8
  br label %540

413:                                              ; preds = %406
  %414 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.869, i64 0, i64 0)) #15
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %420

416:                                              ; preds = %413
  %417 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 63
  %418 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)** %417 to i8**
  %419 = load i8*, i8** %418, align 8
  br label %540

420:                                              ; preds = %413
  %421 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.870, i64 0, i64 0)) #15
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %427

423:                                              ; preds = %420
  %424 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 64
  %425 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)** %424 to i8**
  %426 = load i8*, i8** %425, align 8
  br label %540

427:                                              ; preds = %420
  %428 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.871, i64 0, i64 0)) #15
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %434

430:                                              ; preds = %427
  %431 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 65
  %432 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)** %431 to i8**
  %433 = load i8*, i8** %432, align 8
  br label %540

434:                                              ; preds = %427
  %435 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.872, i64 0, i64 0)) #15
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %441

437:                                              ; preds = %434
  %438 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 66
  %439 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)** %438 to i8**
  %440 = load i8*, i8** %439, align 8
  br label %540

441:                                              ; preds = %434
  %442 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.873, i64 0, i64 0)) #15
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %448

444:                                              ; preds = %441
  %445 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 67
  %446 = bitcast void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)** %445 to i8**
  %447 = load i8*, i8** %446, align 8
  br label %540

448:                                              ; preds = %441
  %449 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.874, i64 0, i64 0)) #15
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %455

451:                                              ; preds = %448
  %452 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 68
  %453 = bitcast void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)** %452 to i8**
  %454 = load i8*, i8** %453, align 8
  br label %540

455:                                              ; preds = %448
  %456 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.875, i64 0, i64 0)) #15
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %462

458:                                              ; preds = %455
  %459 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 69
  %460 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)** %459 to i8**
  %461 = load i8*, i8** %460, align 8
  br label %540

462:                                              ; preds = %455
  %463 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.876, i64 0, i64 0)) #15
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %469

465:                                              ; preds = %462
  %466 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 70
  %467 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)** %466 to i8**
  %468 = load i8*, i8** %467, align 8
  br label %540

469:                                              ; preds = %462
  %470 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.877, i64 0, i64 0)) #15
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %476

472:                                              ; preds = %469
  %473 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 71
  %474 = bitcast i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)** %473 to i8**
  %475 = load i8*, i8** %474, align 8
  br label %540

476:                                              ; preds = %469
  %477 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.878, i64 0, i64 0)) #15
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %483

479:                                              ; preds = %476
  %480 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 72
  %481 = bitcast i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)** %480 to i8**
  %482 = load i8*, i8** %481, align 8
  br label %540

483:                                              ; preds = %476
  %484 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.879, i64 0, i64 0)) #15
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %490

486:                                              ; preds = %483
  %487 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 73
  %488 = bitcast void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)** %487 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %540

490:                                              ; preds = %483
  %491 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.880, i64 0, i64 0)) #15
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %497

493:                                              ; preds = %490
  %494 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 74
  %495 = bitcast void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)** %494 to i8**
  %496 = load i8*, i8** %495, align 8
  br label %540

497:                                              ; preds = %490
  %498 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.881, i64 0, i64 0)) #15
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %504

500:                                              ; preds = %497
  %501 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 75
  %502 = bitcast void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)** %501 to i8**
  %503 = load i8*, i8** %502, align 8
  br label %540

504:                                              ; preds = %497
  %505 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.882, i64 0, i64 0)) #15
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %511

507:                                              ; preds = %504
  %508 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 76
  %509 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)** %508 to i8**
  %510 = load i8*, i8** %509, align 8
  br label %540

511:                                              ; preds = %504
  %512 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.883, i64 0, i64 0)) #15
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %518

514:                                              ; preds = %511
  %515 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 77
  %516 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)** %515 to i8**
  %517 = load i8*, i8** %516, align 8
  br label %540

518:                                              ; preds = %511
  %519 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.884, i64 0, i64 0)) #15
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %525

521:                                              ; preds = %518
  %522 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 78
  %523 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)** %522 to i8**
  %524 = load i8*, i8** %523, align 8
  br label %540

525:                                              ; preds = %518
  %526 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.885, i64 0, i64 0)) #15
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %532

528:                                              ; preds = %525
  %529 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 79
  %530 = bitcast i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)** %529 to i8**
  %531 = load i8*, i8** %530, align 8
  br label %540

532:                                              ; preds = %525
  %533 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.886, i64 0, i64 0)) #15
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %539

535:                                              ; preds = %532
  %536 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %0, i64 0, i32 80
  %537 = bitcast i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)** %536 to i8**
  %538 = load i8*, i8** %537, align 8
  br label %540

539:                                              ; preds = %532
  store i8 0, i8* %2, align 1
  br label %540

540:                                              ; preds = %539, %535, %528, %521, %514, %507, %500, %493, %486, %479, %472, %465, %458, %451, %444, %437, %430, %423, %416, %409, %402, %395, %388, %381, %374, %367, %360, %353, %346, %339, %332, %325, %318, %311, %304, %297, %290, %283, %276, %269, %262, %255, %248, %241, %234, %227, %220, %213, %206, %199, %192, %185, %178, %171, %164, %157, %150, %143, %136, %129, %122, %115, %108, %101, %94, %87, %80, %73, %66, %59, %52, %45, %38, %31, %24, %17, %12
  %541 = phi i8* [ null, %12 ], [ null, %539 ], [ %538, %535 ], [ %531, %528 ], [ %524, %521 ], [ %517, %514 ], [ %510, %507 ], [ %503, %500 ], [ %496, %493 ], [ %489, %486 ], [ %482, %479 ], [ %475, %472 ], [ %468, %465 ], [ %461, %458 ], [ %454, %451 ], [ %447, %444 ], [ %440, %437 ], [ %433, %430 ], [ %426, %423 ], [ %419, %416 ], [ %412, %409 ], [ %405, %402 ], [ %398, %395 ], [ %391, %388 ], [ %384, %381 ], [ %377, %374 ], [ %370, %367 ], [ %363, %360 ], [ %356, %353 ], [ %349, %346 ], [ %342, %339 ], [ %335, %332 ], [ %328, %325 ], [ %321, %318 ], [ %314, %311 ], [ %307, %304 ], [ %300, %297 ], [ %293, %290 ], [ %286, %283 ], [ %279, %276 ], [ %272, %269 ], [ %265, %262 ], [ %258, %255 ], [ %251, %248 ], [ %244, %241 ], [ %237, %234 ], [ %230, %227 ], [ %223, %220 ], [ %216, %213 ], [ %209, %206 ], [ %202, %199 ], [ %195, %192 ], [ %188, %185 ], [ %181, %178 ], [ %174, %171 ], [ %167, %164 ], [ %160, %157 ], [ %153, %150 ], [ %146, %143 ], [ %139, %136 ], [ %132, %129 ], [ %125, %122 ], [ %118, %115 ], [ %111, %108 ], [ %104, %101 ], [ %97, %94 ], [ %90, %87 ], [ %83, %80 ], [ %76, %73 ], [ %69, %66 ], [ %62, %59 ], [ %55, %52 ], [ %48, %45 ], [ %41, %38 ], [ %34, %31 ], [ %27, %24 ], [ %20, %17 ]
  ret i8* %541
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceVideoCapabilitiesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 44
  %10 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkPhysicalDevice_T* %6, %struct.VkVideoProfileKHR* %1, %struct.VkVideoCapabilitiesKHR* %2) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceVideoCapabilitiesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 45
  %8 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)** %7, align 8
  %9 = icmp eq i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %12 = load %struct.loader_instance*, %struct.loader_instance** %11, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %12, i32 8, i32 undef, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.887, i64 0, i64 0))
  %13 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)** %7, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)* [ %13, %10 ], [ %8, %3 ]
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  %18 = tail call i32 %15(%struct.VkPhysicalDevice_T* %17, %struct.VkVideoProfileKHR* %1, %struct.VkVideoCapabilitiesKHR* %2) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceVideoFormatPropertiesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*) #0 {
  %5 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %6 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %5, i64 0, i32 2
  %7 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %6, align 8
  %8 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %9 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %9, i64 0, i32 45
  %11 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)** %10, align 8
  %12 = tail call i32 %11(%struct.VkPhysicalDevice_T* %7, %struct.VkPhysicalDeviceVideoFormatInfoKHR* %1, i32* %2, %struct.VkVideoFormatPropertiesKHR* %3) #9
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceVideoFormatPropertiesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*) #0 {
  %5 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %6 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 1
  %7 = load %struct.loader_icd_term*, %struct.loader_icd_term** %6, align 8
  %8 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 4, i32 46
  %9 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)** %8, align 8
  %10 = icmp eq i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 1
  %13 = load %struct.loader_instance*, %struct.loader_instance** %12, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %13, i32 8, i32 undef, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.888, i64 0, i64 0))
  %14 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)** %8, align 8
  br label %15

15:                                               ; preds = %11, %4
  %16 = phi i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)* [ %14, %11 ], [ %9, %4 ]
  %17 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 3
  %18 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %17, align 8
  %19 = tail call i32 %16(%struct.VkPhysicalDevice_T* %18, %struct.VkPhysicalDeviceVideoFormatInfoKHR* %1, i32* %2, %struct.VkVideoFormatPropertiesKHR* %3) #9
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateVideoSessionKHR(%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 159
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkVideoSessionCreateInfoKHR* %1, %struct.VkAllocationCallbacks* %2, %struct.VkVideoSessionKHR_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyVideoSessionKHR(%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 160
  %7 = load void (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkVideoSessionKHR_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetVideoSessionMemoryRequirementsKHR(%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 161
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkVideoSessionKHR_T* %1, i32* %2, %struct.VkVideoGetMemoryPropertiesKHR* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BindVideoSessionMemoryKHR(%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 162
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkVideoSessionKHR_T* %1, i32 %2, %struct.VkVideoBindMemoryKHR* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateVideoSessionParametersKHR(%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 163
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkVideoSessionParametersCreateInfoKHR* %1, %struct.VkAllocationCallbacks* %2, %struct.VkVideoSessionParametersKHR_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @UpdateVideoSessionParametersKHR(%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 164
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkVideoSessionParametersKHR_T* %1, %struct.VkVideoSessionParametersUpdateInfoKHR* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyVideoSessionParametersKHR(%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 165
  %7 = load void (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkVideoSessionParametersKHR_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBeginVideoCodingKHR(%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 166
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkVideoBeginCodingInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdEndVideoCodingKHR(%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 167
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkVideoEndCodingInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdControlVideoCodingKHR(%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 168
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkVideoCodingControlInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDecodeVideoKHR(%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 169
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkVideoDecodeInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetDeviceGroupPeerMemoryFeaturesKHR(%struct.VkDevice_T*, i32, i32, i32, i32*) #0 {
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 170
  %9 = load void (%struct.VkDevice_T*, i32, i32, i32, i32*)*, void (%struct.VkDevice_T*, i32, i32, i32, i32*)** %8, align 8
  tail call void %9(%struct.VkDevice_T* %0, i32 %1, i32 %2, i32 %3, i32* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetDeviceMaskKHR(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 171
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDispatchBaseKHR(%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 172
  %11 = load void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @TrimCommandPoolKHR(%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 173
  %7 = load void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkCommandPool_T* %1, i32 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetMemoryFdKHR(%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 174
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkMemoryGetFdInfoKHR* %1, i32* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetMemoryFdPropertiesKHR(%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 175
  %8 = load i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, i32 %1, i32 %2, %struct.VkMemoryFdPropertiesKHR* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ImportSemaphoreFdKHR(%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 176
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkImportSemaphoreFdInfoKHR* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetSemaphoreFdKHR(%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 177
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkSemaphoreGetFdInfoKHR* %1, i32* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdPushDescriptorSetKHR(%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*) #0 {
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 178
  %10 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*)** %9, align 8
  tail call void %10(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkPipelineLayout_T* %2, i32 %3, i32 %4, %struct.VkWriteDescriptorSet* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdPushDescriptorSetWithTemplateKHR(%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 179
  %9 = load void (%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, %struct.VkDescriptorUpdateTemplate_T* %1, %struct.VkPipelineLayout_T* %2, i32 %3, i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateDescriptorUpdateTemplateKHR(%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 180
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %struct.VkDescriptorUpdateTemplate_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyDescriptorUpdateTemplateKHR(%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 181
  %7 = load void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkDescriptorUpdateTemplate_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @UpdateDescriptorSetWithTemplateKHR(%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 182
  %8 = load void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)** %7, align 8
  tail call void %8(%struct.VkDevice_T* %0, %struct.VkDescriptorSet_T* %1, %struct.VkDescriptorUpdateTemplate_T* %2, i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateRenderPass2KHR(%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 183
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkRenderPassCreateInfo2* %1, %struct.VkAllocationCallbacks* %2, %struct.VkRenderPass_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBeginRenderPass2KHR(%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 184
  %7 = load void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, %struct.VkRenderPassBeginInfo* %1, %struct.VkSubpassBeginInfo* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdNextSubpass2KHR(%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 185
  %7 = load void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, %struct.VkSubpassBeginInfo* %1, %struct.VkSubpassEndInfo* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdEndRenderPass2KHR(%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 186
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkSubpassEndInfo* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetSwapchainStatusKHR(%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 187
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkSwapchainKHR_T* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ImportFenceFdKHR(%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 188
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkImportFenceFdInfoKHR* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetFenceFdKHR(%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 189
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkFenceGetFdInfoKHR* %1, i32* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(%struct.VkPhysicalDevice_T* nocapture readonly, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*) #0 {
  %6 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %7 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %6, i64 0, i32 2
  %8 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %7, align 8
  %9 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %10 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %9, align 8
  %11 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %10, i64 0, i32 57
  %12 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)** %11, align 8
  %13 = tail call i32 %12(%struct.VkPhysicalDevice_T* %8, i32 %1, i32* %2, %struct.VkPerformanceCounterKHR* %3, %struct.VkPerformanceCounterDescriptionKHR* %4) #9
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(%struct.VkPhysicalDevice_T* nocapture readonly, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*) #0 {
  %6 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %7 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %6, i64 0, i32 1
  %8 = load %struct.loader_icd_term*, %struct.loader_icd_term** %7, align 8
  %9 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %8, i64 0, i32 4, i32 58
  %10 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)** %9, align 8
  %11 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %8, i64 0, i32 1
  %14 = load %struct.loader_instance*, %struct.loader_instance** %13, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %14, i32 8, i32 undef, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.889, i64 0, i64 0))
  %15 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)** %9, align 8
  br label %16

16:                                               ; preds = %12, %5
  %17 = phi i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)* [ %15, %12 ], [ %10, %5 ]
  %18 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %6, i64 0, i32 3
  %19 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %18, align 8
  %20 = tail call i32 %17(%struct.VkPhysicalDevice_T* %19, i32 %1, i32* %2, %struct.VkPerformanceCounterKHR* %3, %struct.VkPerformanceCounterDescriptionKHR* %4) #9
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 58
  %10 = load void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)** %9, align 8
  tail call void %10(%struct.VkPhysicalDevice_T* %6, %struct.VkQueryPoolPerformanceCreateInfoKHR* %1, i32* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 59
  %8 = load void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)** %7, align 8
  %9 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %12 = load %struct.loader_instance*, %struct.loader_instance** %11, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %12, i32 8, i32 undef, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.890, i64 0, i64 0))
  %13 = load void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)** %7, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)* [ %13, %10 ], [ %8, %3 ]
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  tail call void %15(%struct.VkPhysicalDevice_T* %17, %struct.VkQueryPoolPerformanceCreateInfoKHR* %1, i32* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AcquireProfilingLockKHR(%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 190
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkAcquireProfilingLockInfoKHR* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ReleaseProfilingLockKHR(%struct.VkDevice_T*) #0 {
  %2 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %3 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %2, align 8
  %4 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %3, i64 0, i32 191
  %5 = load void (%struct.VkDevice_T*)*, void (%struct.VkDevice_T*)** %4, align 8
  tail call void %5(%struct.VkDevice_T* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetImageMemoryRequirements2KHR(%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 192
  %7 = load void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkImageMemoryRequirementsInfo2* %1, %struct.VkMemoryRequirements2* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetBufferMemoryRequirements2KHR(%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 193
  %7 = load void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkBufferMemoryRequirementsInfo2* %1, %struct.VkMemoryRequirements2* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetImageSparseMemoryRequirements2KHR(%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 194
  %8 = load void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)** %7, align 8
  tail call void %8(%struct.VkDevice_T* %0, %struct.VkImageSparseMemoryRequirementsInfo2* %1, i32* %2, %struct.VkSparseImageMemoryRequirements2* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateSamplerYcbcrConversionKHR(%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 195
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkSamplerYcbcrConversionCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %struct.VkSamplerYcbcrConversion_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroySamplerYcbcrConversionKHR(%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 196
  %7 = load void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkSamplerYcbcrConversion_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BindBufferMemory2KHR(%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 197
  %7 = load i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, i32 %1, %struct.VkBindBufferMemoryInfo* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BindImageMemory2KHR(%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 198
  %7 = load i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, i32 %1, %struct.VkBindImageMemoryInfo* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetDescriptorSetLayoutSupportKHR(%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 199
  %7 = load void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkDescriptorSetLayoutCreateInfo* %1, %struct.VkDescriptorSetLayoutSupport* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawIndirectCountKHR(%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 200
  %11 = load void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, %struct.VkBuffer_T* %1, i64 %2, %struct.VkBuffer_T* %3, i64 %4, i32 %5, i32 %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawIndexedIndirectCountKHR(%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 201
  %11 = load void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, %struct.VkBuffer_T* %1, i64 %2, %struct.VkBuffer_T* %3, i64 %4, i32 %5, i32 %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetSemaphoreCounterValueKHR(%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 202
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkSemaphore_T* %1, i64* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WaitSemaphoresKHR(%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 203
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkSemaphoreWaitInfo* %1, i64 %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SignalSemaphoreKHR(%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 204
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkSemaphoreSignalInfo* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceFragmentShadingRatesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 65
  %10 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkPhysicalDevice_T* %6, i32* %1, %struct.VkPhysicalDeviceFragmentShadingRateKHR* %2) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceFragmentShadingRatesKHR(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 66
  %8 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)** %7, align 8
  %9 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %12 = load %struct.loader_instance*, %struct.loader_instance** %11, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %12, i32 8, i32 undef, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.891, i64 0, i64 0))
  %13 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)** %7, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)* [ %13, %10 ], [ %8, %3 ]
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  %18 = tail call i32 %15(%struct.VkPhysicalDevice_T* %17, i32* %1, %struct.VkPhysicalDeviceFragmentShadingRateKHR* %2) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetFragmentShadingRateKHR(%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 205
  %7 = load void (%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, %struct.VkExtent2D* %1, i32* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @GetBufferDeviceAddressKHR(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 206
  %6 = load i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %5, align 8
  %7 = tail call i64 %6(%struct.VkDevice_T* %0, %struct.VkBufferDeviceAddressInfo* %1) #9
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @GetBufferOpaqueCaptureAddressKHR(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 207
  %6 = load i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %5, align 8
  %7 = tail call i64 %6(%struct.VkDevice_T* %0, %struct.VkBufferDeviceAddressInfo* %1) #9
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @GetDeviceMemoryOpaqueCaptureAddressKHR(%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 208
  %6 = load i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)** %5, align 8
  %7 = tail call i64 %6(%struct.VkDevice_T* %0, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo* %1) #9
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateDeferredOperationKHR(%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 209
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkAllocationCallbacks* %1, %struct.VkDeferredOperationKHR_T** %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyDeferredOperationKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 210
  %7 = load void (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetDeferredOperationMaxConcurrencyKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 211
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetDeferredOperationResultKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 212
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DeferredOperationJoinKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 213
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPipelineExecutablePropertiesKHR(%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 214
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkPipelineInfoKHR* %1, i32* %2, %struct.VkPipelineExecutablePropertiesKHR* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPipelineExecutableStatisticsKHR(%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 215
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkPipelineExecutableInfoKHR* %1, i32* %2, %struct.VkPipelineExecutableStatisticKHR* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPipelineExecutableInternalRepresentationsKHR(%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 216
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkPipelineExecutableInfoKHR* %1, i32* %2, %struct.VkPipelineExecutableInternalRepresentationKHR* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdEncodeVideoKHR(%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 217
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkVideoEncodeInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetEvent2KHR(%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 218
  %7 = load void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, %struct.VkEvent_T* %1, %struct.VkDependencyInfoKHR* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdResetEvent2KHR(%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 219
  %7 = load void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, %struct.VkEvent_T* %1, i64 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdWaitEvents2KHR(%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 220
  %8 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkEvent_T** %2, %struct.VkDependencyInfoKHR* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdPipelineBarrier2KHR(%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 221
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkDependencyInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdWriteTimestamp2KHR(%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 222
  %8 = load void (%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i64 %1, %struct.VkQueryPool_T* %2, i32 %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @QueueSubmit2KHR(%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*) #0 {
  %5 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 223
  %8 = load i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkQueue_T* %0, i32 %1, %struct.VkSubmitInfo2KHR* %2, %struct.VkFence_T* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdWriteBufferMarker2AMD(%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 224
  %9 = load void (%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, i64 %1, %struct.VkBuffer_T* %2, i64 %3, i32 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetQueueCheckpointData2NV(%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*) #0 {
  %4 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 225
  %7 = load void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*)*, void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*)** %6, align 8
  tail call void %7(%struct.VkQueue_T* %0, i32* %1, %struct.VkCheckpointData2NV* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyBuffer2KHR(%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 226
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCopyBufferInfo2KHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyImage2KHR(%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 227
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCopyImageInfo2KHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyBufferToImage2KHR(%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 228
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCopyBufferToImageInfo2KHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyImageToBuffer2KHR(%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 229
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCopyImageToBufferInfo2KHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBlitImage2KHR(%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 230
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkBlitImageInfo2KHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdResolveImage2KHR(%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 231
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkResolveImageInfo2KHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DebugMarkerSetObjectTagEXT(%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugMarkerObjectTagInfoEXT, align 8
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = bitcast %struct.VkDebugMarkerObjectTagInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  %7 = bitcast %struct.VkDebugMarkerObjectTagInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 56, i1 false)
  %8 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %1, i64 0, i32 3
  %13 = bitcast i64* %12 to %struct.loader_physical_device_tramp**
  %14 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %13, align 8
  %15 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %14, i64 0, i32 2
  %16 = bitcast %struct.VkPhysicalDevice_T** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %3, i64 0, i32 3
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %2
  %20 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 232
  %21 = load i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)** %20, align 8
  %22 = call i32 %21(%struct.VkDevice_T* %0, %struct.VkDebugMarkerObjectTagInfoEXT* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  ret i32 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_DebugMarkerSetObjectTagEXT(%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugMarkerObjectTagInfoEXT, align 8
  %4 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %5 = icmp eq %struct.loader_instance* %4, null
  br i1 %5, label %87, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %8

8:                                                ; preds = %45, %6
  %9 = phi %struct.loader_instance* [ %4, %6 ], [ %47, %45 ]
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 14
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = icmp eq %struct.loader_icd_term* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %8, %40
  %14 = phi %struct.loader_icd_term* [ %43, %40 ], [ %11, %8 ]
  %15 = phi i32 [ %41, %40 ], [ 0, %8 ]
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 2
  %17 = load %struct.loader_device*, %struct.loader_device** %16, align 8
  %18 = icmp eq %struct.loader_device* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %13
  %20 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  br label %21

21:                                               ; preds = %36, %19
  %22 = phi %struct.loader_device* [ %17, %19 ], [ %38, %36 ]
  %23 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 2
  %24 = bitcast %struct.VkDevice_T** %23 to %struct.VkLayerDispatchTable_***
  %25 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %24, align 8
  %26 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %25, align 8
  %27 = icmp eq %struct.VkLayerDispatchTable_* %26, %20
  br i1 %27, label %49, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 1
  %30 = load %struct.VkDevice_T*, %struct.VkDevice_T** %29, align 8
  %31 = icmp eq %struct.VkDevice_T* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = bitcast %struct.VkDevice_T* %30 to %struct.VkLayerDispatchTable_**
  %34 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %33, align 8
  %35 = icmp eq %struct.VkLayerDispatchTable_* %34, %20
  br i1 %35, label %49, label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 8
  %38 = load %struct.loader_device*, %struct.loader_device** %37, align 8
  %39 = icmp eq %struct.loader_device* %38, null
  br i1 %39, label %40, label %21

40:                                               ; preds = %36, %13
  %41 = add i32 %15, 1
  %42 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 5
  %43 = load %struct.loader_icd_term*, %struct.loader_icd_term** %42, align 8
  %44 = icmp eq %struct.loader_icd_term* %43, null
  br i1 %44, label %45, label %13

45:                                               ; preds = %40, %8
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 12
  %47 = load %struct.loader_instance*, %struct.loader_instance** %46, align 8
  %48 = icmp eq %struct.loader_instance* %47, null
  br i1 %48, label %87, label %8

49:                                               ; preds = %21, %32
  %50 = icmp eq %struct.loader_icd_term* %14, null
  br i1 %50, label %87, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 70
  %53 = load i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)** %52, align 8
  %54 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)* %53, null
  br i1 %54, label %87, label %55

55:                                               ; preds = %51
  %56 = bitcast %struct.VkDebugMarkerObjectTagInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #9
  %57 = bitcast %struct.VkDebugMarkerObjectTagInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %57, i64 56, i1 false)
  %58 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %1, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  switch i32 %59, label %85 [
    i32 2, label %60
    i32 26, label %68
  ]

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %1, i64 0, i32 3
  %62 = bitcast i64* %61 to %struct.loader_physical_device_term**
  %63 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %62, align 8
  %64 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %63, i64 0, i32 3
  %65 = bitcast %struct.VkPhysicalDevice_T** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %3, i64 0, i32 3
  store i64 %66, i64* %67, align 8
  br label %85

68:                                               ; preds = %55
  %69 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 32
  %70 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %69, align 8
  %71 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %1, i64 0, i32 3
  %74 = bitcast i64* %73 to %struct.VkIcdSurface**
  %75 = load %struct.VkIcdSurface*, %struct.VkIcdSurface** %74, align 8
  %76 = getelementptr inbounds %struct.VkIcdSurface, %struct.VkIcdSurface* %75, i64 0, i32 5
  %77 = load %struct.VkSurfaceKHR_T**, %struct.VkSurfaceKHR_T*** %76, align 8
  %78 = icmp eq %struct.VkSurfaceKHR_T** %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %72
  %80 = zext i32 %15 to i64
  %81 = getelementptr inbounds %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %77, i64 %80
  %82 = bitcast %struct.VkSurfaceKHR_T** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.VkDebugMarkerObjectTagInfoEXT, %struct.VkDebugMarkerObjectTagInfoEXT* %3, i64 0, i32 3
  store i64 %83, i64* %84, align 8
  br label %85

85:                                               ; preds = %79, %72, %55, %68, %60
  %86 = call i32 %53(%struct.VkDevice_T* %0, %struct.VkDebugMarkerObjectTagInfoEXT* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #9
  br label %87

87:                                               ; preds = %45, %2, %49, %51, %85
  %88 = phi i32 [ %86, %85 ], [ 0, %51 ], [ 0, %49 ], [ 0, %2 ], [ 0, %45 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DebugMarkerSetObjectNameEXT(%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugMarkerObjectNameInfoEXT, align 8
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = bitcast %struct.VkDebugMarkerObjectNameInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = bitcast %struct.VkDebugMarkerObjectNameInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 40, i1 false)
  %8 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %1, i64 0, i32 3
  %13 = bitcast i64* %12 to %struct.loader_physical_device_tramp**
  %14 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %13, align 8
  %15 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %14, i64 0, i32 2
  %16 = bitcast %struct.VkPhysicalDevice_T** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %3, i64 0, i32 3
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %2
  %20 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 233
  %21 = load i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)** %20, align 8
  %22 = call i32 %21(%struct.VkDevice_T* %0, %struct.VkDebugMarkerObjectNameInfoEXT* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_DebugMarkerSetObjectNameEXT(%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugMarkerObjectNameInfoEXT, align 8
  %4 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %5 = icmp eq %struct.loader_instance* %4, null
  br i1 %5, label %87, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %8

8:                                                ; preds = %45, %6
  %9 = phi %struct.loader_instance* [ %4, %6 ], [ %47, %45 ]
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 14
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = icmp eq %struct.loader_icd_term* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %8, %40
  %14 = phi %struct.loader_icd_term* [ %43, %40 ], [ %11, %8 ]
  %15 = phi i32 [ %41, %40 ], [ 0, %8 ]
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 2
  %17 = load %struct.loader_device*, %struct.loader_device** %16, align 8
  %18 = icmp eq %struct.loader_device* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %13
  %20 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  br label %21

21:                                               ; preds = %36, %19
  %22 = phi %struct.loader_device* [ %17, %19 ], [ %38, %36 ]
  %23 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 2
  %24 = bitcast %struct.VkDevice_T** %23 to %struct.VkLayerDispatchTable_***
  %25 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %24, align 8
  %26 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %25, align 8
  %27 = icmp eq %struct.VkLayerDispatchTable_* %26, %20
  br i1 %27, label %49, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 1
  %30 = load %struct.VkDevice_T*, %struct.VkDevice_T** %29, align 8
  %31 = icmp eq %struct.VkDevice_T* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = bitcast %struct.VkDevice_T* %30 to %struct.VkLayerDispatchTable_**
  %34 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %33, align 8
  %35 = icmp eq %struct.VkLayerDispatchTable_* %34, %20
  br i1 %35, label %49, label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 8
  %38 = load %struct.loader_device*, %struct.loader_device** %37, align 8
  %39 = icmp eq %struct.loader_device* %38, null
  br i1 %39, label %40, label %21

40:                                               ; preds = %36, %13
  %41 = add i32 %15, 1
  %42 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 5
  %43 = load %struct.loader_icd_term*, %struct.loader_icd_term** %42, align 8
  %44 = icmp eq %struct.loader_icd_term* %43, null
  br i1 %44, label %45, label %13

45:                                               ; preds = %40, %8
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 12
  %47 = load %struct.loader_instance*, %struct.loader_instance** %46, align 8
  %48 = icmp eq %struct.loader_instance* %47, null
  br i1 %48, label %87, label %8

49:                                               ; preds = %21, %32
  %50 = icmp eq %struct.loader_icd_term* %14, null
  br i1 %50, label %87, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 71
  %53 = load i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)** %52, align 8
  %54 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)* %53, null
  br i1 %54, label %87, label %55

55:                                               ; preds = %51
  %56 = bitcast %struct.VkDebugMarkerObjectNameInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #9
  %57 = bitcast %struct.VkDebugMarkerObjectNameInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %57, i64 40, i1 false)
  %58 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %1, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  switch i32 %59, label %85 [
    i32 2, label %60
    i32 26, label %68
  ]

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %1, i64 0, i32 3
  %62 = bitcast i64* %61 to %struct.loader_physical_device_term**
  %63 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %62, align 8
  %64 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %63, i64 0, i32 3
  %65 = bitcast %struct.VkPhysicalDevice_T** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %3, i64 0, i32 3
  store i64 %66, i64* %67, align 8
  br label %85

68:                                               ; preds = %55
  %69 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 32
  %70 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %69, align 8
  %71 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %1, i64 0, i32 3
  %74 = bitcast i64* %73 to %struct.VkIcdSurface**
  %75 = load %struct.VkIcdSurface*, %struct.VkIcdSurface** %74, align 8
  %76 = getelementptr inbounds %struct.VkIcdSurface, %struct.VkIcdSurface* %75, i64 0, i32 5
  %77 = load %struct.VkSurfaceKHR_T**, %struct.VkSurfaceKHR_T*** %76, align 8
  %78 = icmp eq %struct.VkSurfaceKHR_T** %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %72
  %80 = zext i32 %15 to i64
  %81 = getelementptr inbounds %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %77, i64 %80
  %82 = bitcast %struct.VkSurfaceKHR_T** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.VkDebugMarkerObjectNameInfoEXT, %struct.VkDebugMarkerObjectNameInfoEXT* %3, i64 0, i32 3
  store i64 %83, i64* %84, align 8
  br label %85

85:                                               ; preds = %79, %72, %55, %68, %60
  %86 = call i32 %53(%struct.VkDevice_T* %0, %struct.VkDebugMarkerObjectNameInfoEXT* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #9
  br label %87

87:                                               ; preds = %45, %2, %49, %51, %85
  %88 = phi i32 [ %86, %85 ], [ 0, %51 ], [ 0, %49 ], [ 0, %2 ], [ 0, %45 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDebugMarkerBeginEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 234
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkDebugMarkerMarkerInfoEXT* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDebugMarkerEndEXT(%struct.VkCommandBuffer_T*) #0 {
  %2 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %3 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %2, align 8
  %4 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %3, i64 0, i32 235
  %5 = load void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*)** %4, align 8
  tail call void %5(%struct.VkCommandBuffer_T* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDebugMarkerInsertEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 236
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkDebugMarkerMarkerInfoEXT* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBindTransformFeedbackBuffersEXT(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*) #0 {
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 237
  %10 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*)** %9, align 8
  tail call void %10(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkBuffer_T** %3, i64* %4, i64* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBeginTransformFeedbackEXT(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 238
  %9 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkBuffer_T** %3, i64* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdEndTransformFeedbackEXT(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 239
  %9 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkBuffer_T** %3, i64* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBeginQueryIndexedEXT(%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 240
  %9 = load void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, %struct.VkQueryPool_T* %1, i32 %2, i32 %3, i32 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdEndQueryIndexedEXT(%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 241
  %8 = load void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, %struct.VkQueryPool_T* %1, i32 %2, i32 %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawIndirectByteCountEXT(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 242
  %11 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkBuffer_T* %3, i64 %4, i32 %5, i32 %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateCuModuleNVX(%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 243
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkCuModuleCreateInfoNVX* %1, %struct.VkAllocationCallbacks* %2, %struct.VkCuModuleNVX_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateCuFunctionNVX(%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 244
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkCuFunctionCreateInfoNVX* %1, %struct.VkAllocationCallbacks* %2, %struct.VkCuFunctionNVX_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyCuModuleNVX(%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 245
  %7 = load void (%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkCuModuleNVX_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyCuFunctionNVX(%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 246
  %7 = load void (%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkCuFunctionNVX_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCuLaunchKernelNVX(%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 247
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCuLaunchInfoNVX* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetImageViewHandleNVX(%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 248
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkImageViewHandleInfoNVX* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetImageViewAddressNVX(%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 249
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*)*, i32 (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkImageView_T* %1, %struct.VkImageViewAddressPropertiesNVX* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawIndirectCountAMD(%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 250
  %11 = load void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, %struct.VkBuffer_T* %1, i64 %2, %struct.VkBuffer_T* %3, i64 %4, i32 %5, i32 %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawIndexedIndirectCountAMD(%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 251
  %11 = load void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, %struct.VkBuffer_T* %1, i64 %2, %struct.VkBuffer_T* %3, i64 %4, i32 %5, i32 %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetShaderInfoAMD(%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*) #0 {
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 252
  %10 = load i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkDevice_T* %0, %struct.VkPipeline_T* %1, i32 %2, i32 %3, i64* %4, i8* %5) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBeginConditionalRenderingEXT(%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 253
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkConditionalRenderingBeginInfoEXT* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdEndConditionalRenderingEXT(%struct.VkCommandBuffer_T*) #0 {
  %2 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %3 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %2, align 8
  %4 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %3, i64 0, i32 254
  %5 = load void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*)** %4, align 8
  tail call void %5(%struct.VkCommandBuffer_T* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetViewportWScalingNV(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 255
  %8 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkViewportWScalingNV* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DisplayPowerControlEXT(%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 256
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkDisplayKHR_T* %1, %struct.VkDisplayPowerInfoEXT* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RegisterDeviceEventEXT(%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 257
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkDeviceEventInfoEXT* %1, %struct.VkAllocationCallbacks* %2, %struct.VkFence_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RegisterDisplayEventEXT(%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**) #0 {
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 258
  %9 = load i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %8, align 8
  %10 = tail call i32 %9(%struct.VkDevice_T* %0, %struct.VkDisplayKHR_T* %1, %struct.VkDisplayEventInfoEXT* %2, %struct.VkAllocationCallbacks* %3, %struct.VkFence_T** %4) #9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetSwapchainCounterEXT(%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 259
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkSwapchainKHR_T* %1, i32 %2, i64* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetRefreshCycleDurationGOOGLE(%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 260
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkSwapchainKHR_T* %1, %struct.VkRefreshCycleDurationGOOGLE* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPastPresentationTimingGOOGLE(%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 261
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkSwapchainKHR_T* %1, i32* %2, %struct.VkPastPresentationTimingGOOGLE* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetDiscardRectangleEXT(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 262
  %8 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkRect2D* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SetHdrMetadataEXT(%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 263
  %8 = load void (%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*)*, void (%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*)** %7, align 8
  tail call void %8(%struct.VkDevice_T* %0, i32 %1, %struct.VkSwapchainKHR_T** %2, %struct.VkHdrMetadataEXT* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SetDebugUtilsObjectNameEXT(%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugUtilsObjectNameInfoEXT, align 8
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = bitcast %struct.VkDebugUtilsObjectNameInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = bitcast %struct.VkDebugUtilsObjectNameInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 40, i1 false)
  %8 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %1, i64 0, i32 3
  %13 = bitcast i64* %12 to %struct.loader_physical_device_tramp**
  %14 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %13, align 8
  %15 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %14, i64 0, i32 2
  %16 = bitcast %struct.VkPhysicalDevice_T** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %3, i64 0, i32 3
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %2
  %20 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 264
  %21 = load i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)** %20, align 8
  %22 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = call i32 %21(%struct.VkDevice_T* %0, %struct.VkDebugUtilsObjectNameInfoEXT* nonnull %3) #9
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i32 [ %24, %23 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_SetDebugUtilsObjectNameEXT(%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugUtilsObjectNameInfoEXT, align 8
  %4 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %5 = icmp eq %struct.loader_instance* %4, null
  br i1 %5, label %87, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %8

8:                                                ; preds = %45, %6
  %9 = phi %struct.loader_instance* [ %4, %6 ], [ %47, %45 ]
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 14
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = icmp eq %struct.loader_icd_term* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %8, %40
  %14 = phi %struct.loader_icd_term* [ %43, %40 ], [ %11, %8 ]
  %15 = phi i32 [ %41, %40 ], [ 0, %8 ]
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 2
  %17 = load %struct.loader_device*, %struct.loader_device** %16, align 8
  %18 = icmp eq %struct.loader_device* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %13
  %20 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  br label %21

21:                                               ; preds = %36, %19
  %22 = phi %struct.loader_device* [ %17, %19 ], [ %38, %36 ]
  %23 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 2
  %24 = bitcast %struct.VkDevice_T** %23 to %struct.VkLayerDispatchTable_***
  %25 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %24, align 8
  %26 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %25, align 8
  %27 = icmp eq %struct.VkLayerDispatchTable_* %26, %20
  br i1 %27, label %49, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 1
  %30 = load %struct.VkDevice_T*, %struct.VkDevice_T** %29, align 8
  %31 = icmp eq %struct.VkDevice_T* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = bitcast %struct.VkDevice_T* %30 to %struct.VkLayerDispatchTable_**
  %34 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %33, align 8
  %35 = icmp eq %struct.VkLayerDispatchTable_* %34, %20
  br i1 %35, label %49, label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 8
  %38 = load %struct.loader_device*, %struct.loader_device** %37, align 8
  %39 = icmp eq %struct.loader_device* %38, null
  br i1 %39, label %40, label %21

40:                                               ; preds = %36, %13
  %41 = add i32 %15, 1
  %42 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 5
  %43 = load %struct.loader_icd_term*, %struct.loader_icd_term** %42, align 8
  %44 = icmp eq %struct.loader_icd_term* %43, null
  br i1 %44, label %45, label %13

45:                                               ; preds = %40, %8
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 12
  %47 = load %struct.loader_instance*, %struct.loader_instance** %46, align 8
  %48 = icmp eq %struct.loader_instance* %47, null
  br i1 %48, label %87, label %8

49:                                               ; preds = %21, %32
  %50 = icmp eq %struct.loader_icd_term* %14, null
  br i1 %50, label %87, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 75
  %53 = load i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)** %52, align 8
  %54 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)* %53, null
  br i1 %54, label %87, label %55

55:                                               ; preds = %51
  %56 = bitcast %struct.VkDebugUtilsObjectNameInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #9
  %57 = bitcast %struct.VkDebugUtilsObjectNameInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %57, i64 40, i1 false)
  %58 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %1, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  switch i32 %59, label %85 [
    i32 2, label %60
    i32 1000000000, label %68
  ]

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %1, i64 0, i32 3
  %62 = bitcast i64* %61 to %struct.loader_physical_device_term**
  %63 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %62, align 8
  %64 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %63, i64 0, i32 3
  %65 = bitcast %struct.VkPhysicalDevice_T** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %3, i64 0, i32 3
  store i64 %66, i64* %67, align 8
  br label %85

68:                                               ; preds = %55
  %69 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 32
  %70 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %69, align 8
  %71 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %1, i64 0, i32 3
  %74 = bitcast i64* %73 to %struct.VkIcdSurface**
  %75 = load %struct.VkIcdSurface*, %struct.VkIcdSurface** %74, align 8
  %76 = getelementptr inbounds %struct.VkIcdSurface, %struct.VkIcdSurface* %75, i64 0, i32 5
  %77 = load %struct.VkSurfaceKHR_T**, %struct.VkSurfaceKHR_T*** %76, align 8
  %78 = icmp eq %struct.VkSurfaceKHR_T** %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %72
  %80 = zext i32 %15 to i64
  %81 = getelementptr inbounds %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %77, i64 %80
  %82 = bitcast %struct.VkSurfaceKHR_T** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.VkDebugUtilsObjectNameInfoEXT, %struct.VkDebugUtilsObjectNameInfoEXT* %3, i64 0, i32 3
  store i64 %83, i64* %84, align 8
  br label %85

85:                                               ; preds = %79, %72, %55, %68, %60
  %86 = call i32 %53(%struct.VkDevice_T* %0, %struct.VkDebugUtilsObjectNameInfoEXT* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #9
  br label %87

87:                                               ; preds = %45, %2, %49, %51, %85
  %88 = phi i32 [ %86, %85 ], [ 0, %51 ], [ 0, %49 ], [ 0, %2 ], [ 0, %45 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SetDebugUtilsObjectTagEXT(%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugUtilsObjectTagInfoEXT, align 8
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = bitcast %struct.VkDebugUtilsObjectTagInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  %7 = bitcast %struct.VkDebugUtilsObjectTagInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 56, i1 false)
  %8 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %1, i64 0, i32 3
  %13 = bitcast i64* %12 to %struct.loader_physical_device_tramp**
  %14 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %13, align 8
  %15 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %14, i64 0, i32 2
  %16 = bitcast %struct.VkPhysicalDevice_T** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %3, i64 0, i32 3
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %2
  %20 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 265
  %21 = load i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)** %20, align 8
  %22 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = call i32 %21(%struct.VkDevice_T* %0, %struct.VkDebugUtilsObjectTagInfoEXT* nonnull %3) #9
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i32 [ %24, %23 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_SetDebugUtilsObjectTagEXT(%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT* nocapture readonly) #0 {
  %3 = alloca %struct.VkDebugUtilsObjectTagInfoEXT, align 8
  %4 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %5 = icmp eq %struct.loader_instance* %4, null
  br i1 %5, label %87, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %8

8:                                                ; preds = %45, %6
  %9 = phi %struct.loader_instance* [ %4, %6 ], [ %47, %45 ]
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 14
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = icmp eq %struct.loader_icd_term* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %8, %40
  %14 = phi %struct.loader_icd_term* [ %43, %40 ], [ %11, %8 ]
  %15 = phi i32 [ %41, %40 ], [ 0, %8 ]
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 2
  %17 = load %struct.loader_device*, %struct.loader_device** %16, align 8
  %18 = icmp eq %struct.loader_device* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %13
  %20 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  br label %21

21:                                               ; preds = %36, %19
  %22 = phi %struct.loader_device* [ %17, %19 ], [ %38, %36 ]
  %23 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 2
  %24 = bitcast %struct.VkDevice_T** %23 to %struct.VkLayerDispatchTable_***
  %25 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %24, align 8
  %26 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %25, align 8
  %27 = icmp eq %struct.VkLayerDispatchTable_* %26, %20
  br i1 %27, label %49, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 1
  %30 = load %struct.VkDevice_T*, %struct.VkDevice_T** %29, align 8
  %31 = icmp eq %struct.VkDevice_T* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = bitcast %struct.VkDevice_T* %30 to %struct.VkLayerDispatchTable_**
  %34 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %33, align 8
  %35 = icmp eq %struct.VkLayerDispatchTable_* %34, %20
  br i1 %35, label %49, label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %22, i64 0, i32 8
  %38 = load %struct.loader_device*, %struct.loader_device** %37, align 8
  %39 = icmp eq %struct.loader_device* %38, null
  br i1 %39, label %40, label %21

40:                                               ; preds = %36, %13
  %41 = add i32 %15, 1
  %42 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 5
  %43 = load %struct.loader_icd_term*, %struct.loader_icd_term** %42, align 8
  %44 = icmp eq %struct.loader_icd_term* %43, null
  br i1 %44, label %45, label %13

45:                                               ; preds = %40, %8
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 12
  %47 = load %struct.loader_instance*, %struct.loader_instance** %46, align 8
  %48 = icmp eq %struct.loader_instance* %47, null
  br i1 %48, label %87, label %8

49:                                               ; preds = %21, %32
  %50 = icmp eq %struct.loader_icd_term* %14, null
  br i1 %50, label %87, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 76
  %53 = load i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)** %52, align 8
  %54 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)* %53, null
  br i1 %54, label %87, label %55

55:                                               ; preds = %51
  %56 = bitcast %struct.VkDebugUtilsObjectTagInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #9
  %57 = bitcast %struct.VkDebugUtilsObjectTagInfoEXT* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %57, i64 56, i1 false)
  %58 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %1, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  switch i32 %59, label %85 [
    i32 2, label %60
    i32 1000000000, label %68
  ]

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %1, i64 0, i32 3
  %62 = bitcast i64* %61 to %struct.loader_physical_device_term**
  %63 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %62, align 8
  %64 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %63, i64 0, i32 3
  %65 = bitcast %struct.VkPhysicalDevice_T** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %3, i64 0, i32 3
  store i64 %66, i64* %67, align 8
  br label %85

68:                                               ; preds = %55
  %69 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %14, i64 0, i32 4, i32 32
  %70 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %69, align 8
  %71 = icmp eq i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %1, i64 0, i32 3
  %74 = bitcast i64* %73 to %struct.VkIcdSurface**
  %75 = load %struct.VkIcdSurface*, %struct.VkIcdSurface** %74, align 8
  %76 = getelementptr inbounds %struct.VkIcdSurface, %struct.VkIcdSurface* %75, i64 0, i32 5
  %77 = load %struct.VkSurfaceKHR_T**, %struct.VkSurfaceKHR_T*** %76, align 8
  %78 = icmp eq %struct.VkSurfaceKHR_T** %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %72
  %80 = zext i32 %15 to i64
  %81 = getelementptr inbounds %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %77, i64 %80
  %82 = bitcast %struct.VkSurfaceKHR_T** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.VkDebugUtilsObjectTagInfoEXT, %struct.VkDebugUtilsObjectTagInfoEXT* %3, i64 0, i32 3
  store i64 %83, i64* %84, align 8
  br label %85

85:                                               ; preds = %79, %72, %55, %68, %60
  %86 = call i32 %53(%struct.VkDevice_T* %0, %struct.VkDebugUtilsObjectTagInfoEXT* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #9
  br label %87

87:                                               ; preds = %45, %2, %49, %51, %85
  %88 = phi i32 [ %86, %85 ], [ 0, %51 ], [ 0, %49 ], [ 0, %2 ], [ 0, %45 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @QueueBeginDebugUtilsLabelEXT(%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 266
  %6 = load void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %5, align 8
  %7 = icmp eq void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void %6(%struct.VkQueue_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_QueueBeginDebugUtilsLabelEXT(%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %4 = icmp eq %struct.loader_instance* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  br label %7

7:                                                ; preds = %42, %5
  %8 = phi %struct.loader_instance* [ %3, %5 ], [ %44, %42 ]
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 14
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = icmp eq %struct.loader_icd_term* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7, %38
  %13 = phi %struct.loader_icd_term* [ %40, %38 ], [ %10, %7 ]
  %14 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 2
  %15 = load %struct.loader_device*, %struct.loader_device** %14, align 8
  %16 = icmp eq %struct.loader_device* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi %struct.loader_device* [ %15, %17 ], [ %36, %34 ]
  %21 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 2
  %22 = bitcast %struct.VkDevice_T** %21 to %struct.VkLayerDispatchTable_***
  %23 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %22, align 8
  %24 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %23, align 8
  %25 = icmp eq %struct.VkLayerDispatchTable_* %24, %18
  br i1 %25, label %46, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 1
  %28 = load %struct.VkDevice_T*, %struct.VkDevice_T** %27, align 8
  %29 = icmp eq %struct.VkDevice_T* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.VkDevice_T* %28 to %struct.VkLayerDispatchTable_**
  %32 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %31, align 8
  %33 = icmp eq %struct.VkLayerDispatchTable_* %32, %18
  br i1 %33, label %46, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 8
  %36 = load %struct.loader_device*, %struct.loader_device** %35, align 8
  %37 = icmp eq %struct.loader_device* %36, null
  br i1 %37, label %38, label %19

38:                                               ; preds = %34, %12
  %39 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 5
  %40 = load %struct.loader_icd_term*, %struct.loader_icd_term** %39, align 8
  %41 = icmp eq %struct.loader_icd_term* %40, null
  br i1 %41, label %42, label %12

42:                                               ; preds = %38, %7
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 12
  %44 = load %struct.loader_instance*, %struct.loader_instance** %43, align 8
  %45 = icmp eq %struct.loader_instance* %44, null
  br i1 %45, label %53, label %7

46:                                               ; preds = %19, %30
  %47 = icmp eq %struct.loader_icd_term* %13, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 4, i32 77
  %50 = load void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %49, align 8
  %51 = icmp eq void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void %50(%struct.VkQueue_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %53

53:                                               ; preds = %42, %2, %48, %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @QueueEndDebugUtilsLabelEXT(%struct.VkQueue_T*) #0 {
  %2 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  %3 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %2, align 8
  %4 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %3, i64 0, i32 267
  %5 = load void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*)** %4, align 8
  %6 = icmp eq void (%struct.VkQueue_T*)* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void %5(%struct.VkQueue_T* %0) #9
  br label %8

8:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_QueueEndDebugUtilsLabelEXT(%struct.VkQueue_T*) #0 {
  %2 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %3 = icmp eq %struct.loader_instance* %2, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %1
  %5 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  br label %6

6:                                                ; preds = %41, %4
  %7 = phi %struct.loader_instance* [ %2, %4 ], [ %43, %41 ]
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 14
  %9 = load %struct.loader_icd_term*, %struct.loader_icd_term** %8, align 8
  %10 = icmp eq %struct.loader_icd_term* %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %6, %37
  %12 = phi %struct.loader_icd_term* [ %39, %37 ], [ %9, %6 ]
  %13 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 2
  %14 = load %struct.loader_device*, %struct.loader_device** %13, align 8
  %15 = icmp eq %struct.loader_device* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %11
  %17 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  br label %18

18:                                               ; preds = %33, %16
  %19 = phi %struct.loader_device* [ %14, %16 ], [ %35, %33 ]
  %20 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 2
  %21 = bitcast %struct.VkDevice_T** %20 to %struct.VkLayerDispatchTable_***
  %22 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %21, align 8
  %23 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %22, align 8
  %24 = icmp eq %struct.VkLayerDispatchTable_* %23, %17
  br i1 %24, label %45, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 1
  %27 = load %struct.VkDevice_T*, %struct.VkDevice_T** %26, align 8
  %28 = icmp eq %struct.VkDevice_T* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = bitcast %struct.VkDevice_T* %27 to %struct.VkLayerDispatchTable_**
  %31 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %30, align 8
  %32 = icmp eq %struct.VkLayerDispatchTable_* %31, %17
  br i1 %32, label %45, label %33

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 8
  %35 = load %struct.loader_device*, %struct.loader_device** %34, align 8
  %36 = icmp eq %struct.loader_device* %35, null
  br i1 %36, label %37, label %18

37:                                               ; preds = %33, %11
  %38 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 5
  %39 = load %struct.loader_icd_term*, %struct.loader_icd_term** %38, align 8
  %40 = icmp eq %struct.loader_icd_term* %39, null
  br i1 %40, label %41, label %11

41:                                               ; preds = %37, %6
  %42 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 12
  %43 = load %struct.loader_instance*, %struct.loader_instance** %42, align 8
  %44 = icmp eq %struct.loader_instance* %43, null
  br i1 %44, label %52, label %6

45:                                               ; preds = %18, %29
  %46 = icmp eq %struct.loader_icd_term* %12, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 4, i32 78
  %49 = load void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*)** %48, align 8
  %50 = icmp eq void (%struct.VkQueue_T*)* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void %49(%struct.VkQueue_T* %0) #9
  br label %52

52:                                               ; preds = %41, %1, %47, %45, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @QueueInsertDebugUtilsLabelEXT(%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 268
  %6 = load void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %5, align 8
  %7 = icmp eq void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void %6(%struct.VkQueue_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_QueueInsertDebugUtilsLabelEXT(%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %4 = icmp eq %struct.loader_instance* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  br label %7

7:                                                ; preds = %42, %5
  %8 = phi %struct.loader_instance* [ %3, %5 ], [ %44, %42 ]
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 14
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = icmp eq %struct.loader_icd_term* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7, %38
  %13 = phi %struct.loader_icd_term* [ %40, %38 ], [ %10, %7 ]
  %14 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 2
  %15 = load %struct.loader_device*, %struct.loader_device** %14, align 8
  %16 = icmp eq %struct.loader_device* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi %struct.loader_device* [ %15, %17 ], [ %36, %34 ]
  %21 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 2
  %22 = bitcast %struct.VkDevice_T** %21 to %struct.VkLayerDispatchTable_***
  %23 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %22, align 8
  %24 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %23, align 8
  %25 = icmp eq %struct.VkLayerDispatchTable_* %24, %18
  br i1 %25, label %46, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 1
  %28 = load %struct.VkDevice_T*, %struct.VkDevice_T** %27, align 8
  %29 = icmp eq %struct.VkDevice_T* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.VkDevice_T* %28 to %struct.VkLayerDispatchTable_**
  %32 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %31, align 8
  %33 = icmp eq %struct.VkLayerDispatchTable_* %32, %18
  br i1 %33, label %46, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 8
  %36 = load %struct.loader_device*, %struct.loader_device** %35, align 8
  %37 = icmp eq %struct.loader_device* %36, null
  br i1 %37, label %38, label %19

38:                                               ; preds = %34, %12
  %39 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 5
  %40 = load %struct.loader_icd_term*, %struct.loader_icd_term** %39, align 8
  %41 = icmp eq %struct.loader_icd_term* %40, null
  br i1 %41, label %42, label %12

42:                                               ; preds = %38, %7
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 12
  %44 = load %struct.loader_instance*, %struct.loader_instance** %43, align 8
  %45 = icmp eq %struct.loader_instance* %44, null
  br i1 %45, label %53, label %7

46:                                               ; preds = %19, %30
  %47 = icmp eq %struct.loader_icd_term* %13, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 4, i32 79
  %50 = load void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)** %49, align 8
  %51 = icmp eq void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void %50(%struct.VkQueue_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %53

53:                                               ; preds = %42, %2, %48, %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBeginDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 269
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %5, align 8
  %7 = icmp eq void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_CmdBeginDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %4 = icmp eq %struct.loader_instance* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  br label %7

7:                                                ; preds = %42, %5
  %8 = phi %struct.loader_instance* [ %3, %5 ], [ %44, %42 ]
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 14
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = icmp eq %struct.loader_icd_term* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7, %38
  %13 = phi %struct.loader_icd_term* [ %40, %38 ], [ %10, %7 ]
  %14 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 2
  %15 = load %struct.loader_device*, %struct.loader_device** %14, align 8
  %16 = icmp eq %struct.loader_device* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi %struct.loader_device* [ %15, %17 ], [ %36, %34 ]
  %21 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 2
  %22 = bitcast %struct.VkDevice_T** %21 to %struct.VkLayerDispatchTable_***
  %23 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %22, align 8
  %24 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %23, align 8
  %25 = icmp eq %struct.VkLayerDispatchTable_* %24, %18
  br i1 %25, label %46, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 1
  %28 = load %struct.VkDevice_T*, %struct.VkDevice_T** %27, align 8
  %29 = icmp eq %struct.VkDevice_T* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.VkDevice_T* %28 to %struct.VkLayerDispatchTable_**
  %32 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %31, align 8
  %33 = icmp eq %struct.VkLayerDispatchTable_* %32, %18
  br i1 %33, label %46, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 8
  %36 = load %struct.loader_device*, %struct.loader_device** %35, align 8
  %37 = icmp eq %struct.loader_device* %36, null
  br i1 %37, label %38, label %19

38:                                               ; preds = %34, %12
  %39 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 5
  %40 = load %struct.loader_icd_term*, %struct.loader_icd_term** %39, align 8
  %41 = icmp eq %struct.loader_icd_term* %40, null
  br i1 %41, label %42, label %12

42:                                               ; preds = %38, %7
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 12
  %44 = load %struct.loader_instance*, %struct.loader_instance** %43, align 8
  %45 = icmp eq %struct.loader_instance* %44, null
  br i1 %45, label %53, label %7

46:                                               ; preds = %19, %30
  %47 = icmp eq %struct.loader_icd_term* %13, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 4, i32 80
  %50 = load void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %49, align 8
  %51 = icmp eq void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void %50(%struct.VkCommandBuffer_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %53

53:                                               ; preds = %42, %2, %48, %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdEndDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*) #0 {
  %2 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %3 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %2, align 8
  %4 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %3, i64 0, i32 270
  %5 = load void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*)** %4, align 8
  %6 = icmp eq void (%struct.VkCommandBuffer_T*)* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void %5(%struct.VkCommandBuffer_T* %0) #9
  br label %8

8:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_CmdEndDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*) #0 {
  %2 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %3 = icmp eq %struct.loader_instance* %2, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %1
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  br label %6

6:                                                ; preds = %41, %4
  %7 = phi %struct.loader_instance* [ %2, %4 ], [ %43, %41 ]
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 14
  %9 = load %struct.loader_icd_term*, %struct.loader_icd_term** %8, align 8
  %10 = icmp eq %struct.loader_icd_term* %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %6, %37
  %12 = phi %struct.loader_icd_term* [ %39, %37 ], [ %9, %6 ]
  %13 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 2
  %14 = load %struct.loader_device*, %struct.loader_device** %13, align 8
  %15 = icmp eq %struct.loader_device* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %11
  %17 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  br label %18

18:                                               ; preds = %33, %16
  %19 = phi %struct.loader_device* [ %14, %16 ], [ %35, %33 ]
  %20 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 2
  %21 = bitcast %struct.VkDevice_T** %20 to %struct.VkLayerDispatchTable_***
  %22 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %21, align 8
  %23 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %22, align 8
  %24 = icmp eq %struct.VkLayerDispatchTable_* %23, %17
  br i1 %24, label %45, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 1
  %27 = load %struct.VkDevice_T*, %struct.VkDevice_T** %26, align 8
  %28 = icmp eq %struct.VkDevice_T* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = bitcast %struct.VkDevice_T* %27 to %struct.VkLayerDispatchTable_**
  %31 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %30, align 8
  %32 = icmp eq %struct.VkLayerDispatchTable_* %31, %17
  br i1 %32, label %45, label %33

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %19, i64 0, i32 8
  %35 = load %struct.loader_device*, %struct.loader_device** %34, align 8
  %36 = icmp eq %struct.loader_device* %35, null
  br i1 %36, label %37, label %18

37:                                               ; preds = %33, %11
  %38 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 5
  %39 = load %struct.loader_icd_term*, %struct.loader_icd_term** %38, align 8
  %40 = icmp eq %struct.loader_icd_term* %39, null
  br i1 %40, label %41, label %11

41:                                               ; preds = %37, %6
  %42 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 12
  %43 = load %struct.loader_instance*, %struct.loader_instance** %42, align 8
  %44 = icmp eq %struct.loader_instance* %43, null
  br i1 %44, label %52, label %6

45:                                               ; preds = %18, %29
  %46 = icmp eq %struct.loader_icd_term* %12, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %12, i64 0, i32 4, i32 81
  %49 = load void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*)** %48, align 8
  %50 = icmp eq void (%struct.VkCommandBuffer_T*)* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void %49(%struct.VkCommandBuffer_T* %0) #9
  br label %52

52:                                               ; preds = %41, %1, %47, %45, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdInsertDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 271
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %5, align 8
  %7 = icmp eq void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_CmdInsertDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*) #0 {
  %3 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %4 = icmp eq %struct.loader_instance* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  br label %7

7:                                                ; preds = %42, %5
  %8 = phi %struct.loader_instance* [ %3, %5 ], [ %44, %42 ]
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 14
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = icmp eq %struct.loader_icd_term* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7, %38
  %13 = phi %struct.loader_icd_term* [ %40, %38 ], [ %10, %7 ]
  %14 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 2
  %15 = load %struct.loader_device*, %struct.loader_device** %14, align 8
  %16 = icmp eq %struct.loader_device* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi %struct.loader_device* [ %15, %17 ], [ %36, %34 ]
  %21 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 2
  %22 = bitcast %struct.VkDevice_T** %21 to %struct.VkLayerDispatchTable_***
  %23 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %22, align 8
  %24 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %23, align 8
  %25 = icmp eq %struct.VkLayerDispatchTable_* %24, %18
  br i1 %25, label %46, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 1
  %28 = load %struct.VkDevice_T*, %struct.VkDevice_T** %27, align 8
  %29 = icmp eq %struct.VkDevice_T* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.VkDevice_T* %28 to %struct.VkLayerDispatchTable_**
  %32 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %31, align 8
  %33 = icmp eq %struct.VkLayerDispatchTable_* %32, %18
  br i1 %33, label %46, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 8
  %36 = load %struct.loader_device*, %struct.loader_device** %35, align 8
  %37 = icmp eq %struct.loader_device* %36, null
  br i1 %37, label %38, label %19

38:                                               ; preds = %34, %12
  %39 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 5
  %40 = load %struct.loader_icd_term*, %struct.loader_icd_term** %39, align 8
  %41 = icmp eq %struct.loader_icd_term* %40, null
  br i1 %41, label %42, label %12

42:                                               ; preds = %38, %7
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 12
  %44 = load %struct.loader_instance*, %struct.loader_instance** %43, align 8
  %45 = icmp eq %struct.loader_instance* %44, null
  br i1 %45, label %53, label %7

46:                                               ; preds = %19, %30
  %47 = icmp eq %struct.loader_icd_term* %13, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 4, i32 82
  %50 = load void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)** %49, align 8
  %51 = icmp eq void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void %50(%struct.VkCommandBuffer_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #9
  br label %53

53:                                               ; preds = %42, %2, %48, %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetSampleLocationsEXT(%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 272
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkSampleLocationsInfoEXT* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetPhysicalDeviceMultisamplePropertiesEXT(%struct.VkPhysicalDevice_T* nocapture readonly, i32, %struct.VkMultisamplePropertiesEXT*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 75
  %10 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)** %9, align 8
  tail call void %10(%struct.VkPhysicalDevice_T* %6, i32 %1, %struct.VkMultisamplePropertiesEXT* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceMultisamplePropertiesEXT(%struct.VkPhysicalDevice_T* nocapture readonly, i32, %struct.VkMultisamplePropertiesEXT*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 86
  %8 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)** %7, align 8
  %9 = icmp eq void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %12 = load %struct.loader_instance*, %struct.loader_instance** %11, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %12, i32 8, i32 undef, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.892, i64 0, i64 0))
  %13 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)** %7, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)* [ %13, %10 ], [ %8, %3 ]
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  tail call void %15(%struct.VkPhysicalDevice_T* %17, i32 %1, %struct.VkMultisamplePropertiesEXT* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetImageDrmFormatModifierPropertiesEXT(%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 273
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkImage_T* %1, %struct.VkImageDrmFormatModifierPropertiesEXT* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateValidationCacheEXT(%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 274
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkValidationCacheCreateInfoEXT* %1, %struct.VkAllocationCallbacks* %2, %struct.VkValidationCacheEXT_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyValidationCacheEXT(%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 275
  %7 = load void (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkValidationCacheEXT_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @MergeValidationCachesEXT(%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 276
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkValidationCacheEXT_T* %1, i32 %2, %struct.VkValidationCacheEXT_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetValidationCacheDataEXT(%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 277
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkValidationCacheEXT_T* %1, i64* %2, i8* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBindShadingRateImageNV(%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 278
  %7 = load void (%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, %struct.VkImageView_T* %1, i32 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetViewportShadingRatePaletteNV(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 279
  %8 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkShadingRatePaletteNV* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetCoarseSampleOrderNV(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 280
  %8 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkCoarseSampleOrderCustomNV* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateAccelerationStructureNV(%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 281
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureCreateInfoNV* %1, %struct.VkAllocationCallbacks* %2, %struct.VkAccelerationStructureNV_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyAccelerationStructureNV(%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 282
  %7 = load void (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureNV_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetAccelerationStructureMemoryRequirementsNV(%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 283
  %7 = load void (%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureMemoryRequirementsInfoNV* %1, %struct.VkMemoryRequirements2* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BindAccelerationStructureMemoryNV(%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 284
  %7 = load i32 (%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, i32 %1, %struct.VkBindAccelerationStructureMemoryInfoNV* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBuildAccelerationStructureNV(%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64) #0 {
  %10 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %11 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %10, align 8
  %12 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %11, i64 0, i32 285
  %13 = load void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64)** %12, align 8
  tail call void %13(%struct.VkCommandBuffer_T* %0, %struct.VkAccelerationStructureInfoNV* %1, %struct.VkBuffer_T* %2, i64 %3, i32 %4, %struct.VkAccelerationStructureNV_T* %5, %struct.VkAccelerationStructureNV_T* %6, %struct.VkBuffer_T* %7, i64 %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyAccelerationStructureNV(%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 286
  %8 = load void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, %struct.VkAccelerationStructureNV_T* %1, %struct.VkAccelerationStructureNV_T* %2, i32 %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdTraceRaysNV(%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32) #0 {
  %16 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %17 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %16, align 8
  %18 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %17, i64 0, i32 287
  %19 = load void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32)** %18, align 8
  tail call void %19(%struct.VkCommandBuffer_T* %0, %struct.VkBuffer_T* %1, i64 %2, %struct.VkBuffer_T* %3, i64 %4, i64 %5, %struct.VkBuffer_T* %6, i64 %7, i64 %8, %struct.VkBuffer_T* %9, i64 %10, i64 %11, i32 %12, i32 %13, i32 %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateRayTracingPipelinesNV(%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**) #0 {
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 288
  %10 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %9, align 8
  %11 = tail call i32 %10(%struct.VkDevice_T* %0, %struct.VkPipelineCache_T* %1, i32 %2, %struct.VkRayTracingPipelineCreateInfoNV* %3, %struct.VkAllocationCallbacks* %4, %struct.VkPipeline_T** %5) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetRayTracingShaderGroupHandlesKHR(%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*) #0 {
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 289
  %10 = load i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkDevice_T* %0, %struct.VkPipeline_T* %1, i32 %2, i32 %3, i64 %4, i8* %5) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetRayTracingShaderGroupHandlesNV(%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*) #0 {
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 290
  %10 = load i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkDevice_T* %0, %struct.VkPipeline_T* %1, i32 %2, i32 %3, i64 %4, i8* %5) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetAccelerationStructureHandleNV(%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 291
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureNV_T* %1, i64 %2, i8* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdWriteAccelerationStructuresPropertiesNV(%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32) #0 {
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 292
  %10 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32)** %9, align 8
  tail call void %10(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkAccelerationStructureNV_T** %2, i32 %3, %struct.VkQueryPool_T* %4, i32 %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CompileDeferredNV(%struct.VkDevice_T*, %struct.VkPipeline_T*, i32) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 293
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkPipeline_T* %1, i32 %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetMemoryHostPointerPropertiesEXT(%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 294
  %8 = load i32 (%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*)*, i32 (%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, i32 %1, i8* %2, %struct.VkMemoryHostPointerPropertiesEXT* %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdWriteBufferMarkerAMD(%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 295
  %9 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkBuffer_T* %2, i64 %3, i32 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceCalibrateableTimeDomainsEXT(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, i32*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 76
  %10 = load i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkPhysicalDevice_T* %6, i32* %1, i32* %2) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceCalibrateableTimeDomainsEXT(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, i32*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 87
  %8 = load i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)** %7, align 8
  %9 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %12 = load %struct.loader_instance*, %struct.loader_instance** %11, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %12, i32 8, i32 undef, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.893, i64 0, i64 0))
  %13 = load i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)** %7, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)* [ %13, %10 ], [ %8, %3 ]
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  %18 = tail call i32 %15(%struct.VkPhysicalDevice_T* %17, i32* %1, i32* %2) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetCalibratedTimestampsEXT(%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*) #0 {
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 296
  %9 = load i32 (%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*)** %8, align 8
  %10 = tail call i32 %9(%struct.VkDevice_T* %0, i32 %1, %struct.VkCalibratedTimestampInfoEXT* %2, i64* %3, i64* %4) #9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawMeshTasksNV(%struct.VkCommandBuffer_T*, i32, i32) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 297
  %7 = load void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawMeshTasksIndirectNV(%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 298
  %9 = load void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, %struct.VkBuffer_T* %1, i64 %2, i32 %3, i32 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdDrawMeshTasksIndirectCountNV(%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 299
  %11 = load void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, %struct.VkBuffer_T* %1, i64 %2, %struct.VkBuffer_T* %3, i64 %4, i32 %5, i32 %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetExclusiveScissorNV(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 300
  %8 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkRect2D* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetCheckpointNV(%struct.VkCommandBuffer_T*, i8*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 301
  %6 = load void (%struct.VkCommandBuffer_T*, i8*)*, void (%struct.VkCommandBuffer_T*, i8*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetQueueCheckpointDataNV(%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*) #0 {
  %4 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 302
  %7 = load void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*)*, void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*)** %6, align 8
  tail call void %7(%struct.VkQueue_T* %0, i32* %1, %struct.VkCheckpointDataNV* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @InitializePerformanceApiINTEL(%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 303
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*)*, i32 (%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkInitializePerformanceApiInfoINTEL* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @UninitializePerformanceApiINTEL(%struct.VkDevice_T*) #0 {
  %2 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %3 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %2, align 8
  %4 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %3, i64 0, i32 304
  %5 = load void (%struct.VkDevice_T*)*, void (%struct.VkDevice_T*)** %4, align 8
  tail call void %5(%struct.VkDevice_T* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CmdSetPerformanceMarkerINTEL(%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 305
  %6 = load i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkCommandBuffer_T* %0, %struct.VkPerformanceMarkerInfoINTEL* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CmdSetPerformanceStreamMarkerINTEL(%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 306
  %6 = load i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkCommandBuffer_T* %0, %struct.VkPerformanceStreamMarkerInfoINTEL* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CmdSetPerformanceOverrideINTEL(%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 307
  %6 = load i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkCommandBuffer_T* %0, %struct.VkPerformanceOverrideInfoINTEL* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AcquirePerformanceConfigurationINTEL(%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 308
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkPerformanceConfigurationAcquireInfoINTEL* %1, %struct.VkPerformanceConfigurationINTEL_T** %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ReleasePerformanceConfigurationINTEL(%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 309
  %6 = load i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*)*, i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkDevice_T* %0, %struct.VkPerformanceConfigurationINTEL_T* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @QueueSetPerformanceConfigurationINTEL(%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*) #0 {
  %3 = bitcast %struct.VkQueue_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 310
  %6 = load i32 (%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*)*, i32 (%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*)** %5, align 8
  %7 = tail call i32 %6(%struct.VkQueue_T* %0, %struct.VkPerformanceConfigurationINTEL_T* %1) #9
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPerformanceParameterINTEL(%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 311
  %7 = load i32 (%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, i32 %1, %struct.VkPerformanceValueINTEL* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SetLocalDimmingAMD(%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 312
  %7 = load void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkSwapchainKHR_T* %1, i32 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @GetBufferDeviceAddressEXT(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 313
  %6 = load i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)** %5, align 8
  %7 = tail call i64 %6(%struct.VkDevice_T* %0, %struct.VkBufferDeviceAddressInfo* %1) #9
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceCooperativeMatrixPropertiesNV(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkCooperativeMatrixPropertiesNV*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 78
  %10 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkPhysicalDevice_T* %6, i32* %1, %struct.VkCooperativeMatrixPropertiesNV* %2) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceCooperativeMatrixPropertiesNV(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkCooperativeMatrixPropertiesNV*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 89
  %8 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)** %7, align 8
  %9 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %12 = load %struct.loader_instance*, %struct.loader_instance** %11, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %12, i32 8, i32 undef, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.894, i64 0, i64 0))
  %13 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)** %7, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)* [ %13, %10 ], [ %8, %3 ]
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  %18 = tail call i32 %15(%struct.VkPhysicalDevice_T* %17, i32* %1, %struct.VkCooperativeMatrixPropertiesNV* %2) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 79
  %10 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkPhysicalDevice_T* %6, i32* %1, %struct.VkFramebufferMixedSamplesCombinationNV* %2) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 90
  %8 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)** %7, align 8
  %9 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %12 = load %struct.loader_instance*, %struct.loader_instance** %11, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %12, i32 8, i32 undef, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.895, i64 0, i64 0))
  %13 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)** %7, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)* [ %13, %10 ], [ %8, %3 ]
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  %18 = tail call i32 %15(%struct.VkPhysicalDevice_T* %17, i32* %1, %struct.VkFramebufferMixedSamplesCombinationNV* %2) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetLineStippleEXT(%struct.VkCommandBuffer_T*, i32, i16 zeroext) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 314
  %7 = load void (%struct.VkCommandBuffer_T*, i32, i16)*, void (%struct.VkCommandBuffer_T*, i32, i16)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, i32 %1, i16 zeroext %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ResetQueryPoolEXT(%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 315
  %8 = load void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)** %7, align 8
  tail call void %8(%struct.VkDevice_T* %0, %struct.VkQueryPool_T* %1, i32 %2, i32 %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetCullModeEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 316
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetFrontFaceEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 317
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetPrimitiveTopologyEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 318
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetViewportWithCountEXT(%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 319
  %7 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkViewport* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetScissorWithCountEXT(%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 320
  %7 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkRect2D* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBindVertexBuffers2EXT(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*) #0 {
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 321
  %11 = load void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*)** %10, align 8
  tail call void %11(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkBuffer_T** %3, i64* %4, i64* %5, i64* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetDepthTestEnableEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 322
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetDepthWriteEnableEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 323
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetDepthCompareOpEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 324
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetDepthBoundsTestEnableEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 325
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetStencilTestEnableEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 326
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetStencilOpEXT(%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32) #0 {
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 327
  %10 = load void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)** %9, align 8
  tail call void %10(%struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetGeneratedCommandsMemoryRequirementsNV(%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 328
  %7 = load void (%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV* %1, %struct.VkMemoryRequirements2* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdPreprocessGeneratedCommandsNV(%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 329
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*)*, void (%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkGeneratedCommandsInfoNV* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdExecuteGeneratedCommandsNV(%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 330
  %7 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkGeneratedCommandsInfoNV* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBindPipelineShaderGroupNV(%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 331
  %8 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkPipeline_T* %2, i32 %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateIndirectCommandsLayoutNV(%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 332
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**)*, i32 (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkIndirectCommandsLayoutCreateInfoNV* %1, %struct.VkAllocationCallbacks* %2, %struct.VkIndirectCommandsLayoutNV_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyIndirectCommandsLayoutNV(%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 333
  %7 = load void (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkIndirectCommandsLayoutNV_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreatePrivateDataSlotEXT(%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 334
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkPrivateDataSlotCreateInfoEXT* %1, %struct.VkAllocationCallbacks* %2, %struct.VkPrivateDataSlotEXT_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyPrivateDataSlotEXT(%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 335
  %7 = load void (%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkPrivateDataSlotEXT_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SetPrivateDataEXT(%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64) #0 {
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 336
  %9 = load i32 (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64)*, i32 (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64)** %8, align 8
  %10 = tail call i32 %9(%struct.VkDevice_T* %0, i32 %1, i64 %2, %struct.VkPrivateDataSlotEXT_T* %3, i64 %4) #9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetPrivateDataEXT(%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*) #0 {
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 337
  %9 = load void (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*)*, void (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*)** %8, align 8
  tail call void %9(%struct.VkDevice_T* %0, i32 %1, i64 %2, %struct.VkPrivateDataSlotEXT_T* %3, i64* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetFragmentShadingRateEnumNV(%struct.VkCommandBuffer_T*, i32, i32*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 338
  %7 = load void (%struct.VkCommandBuffer_T*, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32, i32*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, i32 %1, i32* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetVertexInputEXT(%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*) #0 {
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 339
  %9 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*)** %8, align 8
  tail call void %9(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkVertexInputBindingDescription2EXT* %2, i32 %3, %struct.VkVertexInputAttributeDescription2EXT* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetPatchControlPointsEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 340
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetRasterizerDiscardEnableEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 341
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetDepthBiasEnableEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 342
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetLogicOpEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 343
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetPrimitiveRestartEnableEXT(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 344
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetColorWriteEnableEXT(%struct.VkCommandBuffer_T*, i32, i32*) #0 {
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 345
  %7 = load void (%struct.VkCommandBuffer_T*, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32, i32*)** %6, align 8
  tail call void %7(%struct.VkCommandBuffer_T* %0, i32 %1, i32* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateAccelerationStructureKHR(%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 346
  %8 = load i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**)** %7, align 8
  %9 = tail call i32 %8(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureCreateInfoKHR* %1, %struct.VkAllocationCallbacks* %2, %struct.VkAccelerationStructureKHR_T** %3) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @DestroyAccelerationStructureKHR(%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 347
  %7 = load void (%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureKHR_T* %1, %struct.VkAllocationCallbacks* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBuildAccelerationStructuresKHR(%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**) #0 {
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 348
  %8 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)** %7, align 8
  tail call void %8(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkAccelerationStructureBuildGeometryInfoKHR* %2, %struct.VkAccelerationStructureBuildRangeInfoKHR** %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdBuildAccelerationStructuresIndirectKHR(%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**) #0 {
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 349
  %10 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**)** %9, align 8
  tail call void %10(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkAccelerationStructureBuildGeometryInfoKHR* %2, i64* %3, i32* %4, i32** %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BuildAccelerationStructuresKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**) #0 {
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 350
  %9 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)** %8, align 8
  %10 = tail call i32 %9(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1, i32 %2, %struct.VkAccelerationStructureBuildGeometryInfoKHR* %3, %struct.VkAccelerationStructureBuildRangeInfoKHR** %4) #9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CopyAccelerationStructureKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 351
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1, %struct.VkCopyAccelerationStructureInfoKHR* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CopyAccelerationStructureToMemoryKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 352
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1, %struct.VkCopyAccelerationStructureToMemoryInfoKHR* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CopyMemoryToAccelerationStructureKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 353
  %7 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)** %6, align 8
  %8 = tail call i32 %7(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1, %struct.VkCopyMemoryToAccelerationStructureInfoKHR* %2) #9
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WriteAccelerationStructuresPropertiesKHR(%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64) #0 {
  %8 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 354
  %11 = load i32 (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64)*, i32 (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64)** %10, align 8
  %12 = tail call i32 %11(%struct.VkDevice_T* %0, i32 %1, %struct.VkAccelerationStructureKHR_T** %2, i32 %3, i64 %4, i8* %5, i64 %6) #9
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyAccelerationStructureKHR(%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 355
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCopyAccelerationStructureInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyAccelerationStructureToMemoryKHR(%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 356
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCopyAccelerationStructureToMemoryInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdCopyMemoryToAccelerationStructureKHR(%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 357
  %6 = load void (%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, %struct.VkCopyMemoryToAccelerationStructureInfoKHR* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @GetAccelerationStructureDeviceAddressKHR(%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*) #0 {
  %3 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 358
  %6 = load i64 (%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*)*, i64 (%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*)** %5, align 8
  %7 = tail call i64 %6(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureDeviceAddressInfoKHR* %1) #9
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdWriteAccelerationStructuresPropertiesKHR(%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32) #0 {
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 359
  %10 = load void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32)** %9, align 8
  tail call void %10(%struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkAccelerationStructureKHR_T** %2, i32 %3, %struct.VkQueryPool_T* %4, i32 %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetDeviceAccelerationStructureCompatibilityKHR(%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*) #0 {
  %4 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %5 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %4, align 8
  %6 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %5, i64 0, i32 360
  %7 = load void (%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*)** %6, align 8
  tail call void %7(%struct.VkDevice_T* %0, %struct.VkAccelerationStructureVersionInfoKHR* %1, i32* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GetAccelerationStructureBuildSizesKHR(%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*) #0 {
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %7 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %7, i64 0, i32 361
  %9 = load void (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*)*, void (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*)** %8, align 8
  tail call void %9(%struct.VkDevice_T* %0, i32 %1, %struct.VkAccelerationStructureBuildGeometryInfoKHR* %2, i32* %3, %struct.VkAccelerationStructureBuildSizesInfoKHR* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdTraceRaysKHR(%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32) #0 {
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %10 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %9, align 8
  %11 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %10, i64 0, i32 362
  %12 = load void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32)** %11, align 8
  tail call void %12(%struct.VkCommandBuffer_T* %0, %struct.VkStridedDeviceAddressRegionKHR* %1, %struct.VkStridedDeviceAddressRegionKHR* %2, %struct.VkStridedDeviceAddressRegionKHR* %3, %struct.VkStridedDeviceAddressRegionKHR* %4, i32 %5, i32 %6, i32 %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CreateRayTracingPipelinesKHR(%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**) #0 {
  %8 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %9 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %8, align 8
  %10 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %9, i64 0, i32 363
  %11 = load i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %10, align 8
  %12 = tail call i32 %11(%struct.VkDevice_T* %0, %struct.VkDeferredOperationKHR_T* %1, %struct.VkPipelineCache_T* %2, i32 %3, %struct.VkRayTracingPipelineCreateInfoKHR* %4, %struct.VkAllocationCallbacks* %5, %struct.VkPipeline_T** %6) #9
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetRayTracingCaptureReplayShaderGroupHandlesKHR(%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*) #0 {
  %7 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 364
  %10 = load i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkDevice_T* %0, %struct.VkPipeline_T* %1, i32 %2, i32 %3, i64 %4, i8* %5) #9
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdTraceRaysIndirectKHR(%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64) #0 {
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %8 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %8, i64 0, i32 365
  %10 = load void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64)** %9, align 8
  tail call void %10(%struct.VkCommandBuffer_T* %0, %struct.VkStridedDeviceAddressRegionKHR* %1, %struct.VkStridedDeviceAddressRegionKHR* %2, %struct.VkStridedDeviceAddressRegionKHR* %3, %struct.VkStridedDeviceAddressRegionKHR* %4, i64 %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @GetRayTracingShaderGroupStackSizeKHR(%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32) #0 {
  %5 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  %6 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %5, align 8
  %7 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %6, i64 0, i32 366
  %8 = load i64 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32)*, i64 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32)** %7, align 8
  %9 = tail call i64 %8(%struct.VkDevice_T* %0, %struct.VkPipeline_T* %1, i32 %2, i32 %3) #9
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CmdSetRayTracingPipelineStackSizeKHR(%struct.VkCommandBuffer_T*, i32) #0 {
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %struct.VkLayerDispatchTable_**
  %4 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %3, align 8
  %5 = getelementptr inbounds %struct.VkLayerDispatchTable_, %struct.VkLayerDispatchTable_* %4, i64 0, i32 367
  %6 = load void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)** %5, align 8
  tail call void %6(%struct.VkCommandBuffer_T* %0, i32 %1) #9
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @extension_instance_gpa(%struct.loader_instance* readonly, i8* readonly, i8**) local_unnamed_addr #5 {
  store i8* null, i8** %2, align 8
  %4 = tail call i32 @strcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i64 0, i64 0), i8* %1) #15
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %856, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @strcmp(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0), i8* %1) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %856, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @strcmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.244, i64 0, i64 0), i8* %1) #15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %856, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.245, i64 0, i64 0), i8* %1) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %856, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.246, i64 0, i64 0), i8* %1) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %856, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.247, i64 0, i64 0), i8* %1) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %856, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.248, i64 0, i64 0), i8* %1) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %856, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.249, i64 0, i64 0), i8* %1) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %856, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.250, i64 0, i64 0), i8* %1) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %856, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.251, i64 0, i64 0), i8* %1) #15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %856, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.252, i64 0, i64 0), i8* %1) #15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %856, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.253, i64 0, i64 0), i8* %1) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %856, label %39

39:                                               ; preds = %36
  %40 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.254, i64 0, i64 0), i8* %1) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %856, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.44, i64 0, i64 0), i8* %1) #15
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %47 = bitcast %union.loader_instance_extension_enables* %46 to i16*
  %48 = load i16, i16* %47, align 8
  %49 = and i16 %48, 1
  %50 = icmp eq i16 %49, 0
  %51 = select i1 %50, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* @vkGetPhysicalDeviceFeatures2 to i8*)
  br label %856

52:                                               ; preds = %42
  %53 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45, i64 0, i64 0), i8* %1) #15
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %57 = bitcast %union.loader_instance_extension_enables* %56 to i16*
  %58 = load i16, i16* %57, align 8
  %59 = and i16 %58, 1
  %60 = icmp eq i16 %59, 0
  %61 = select i1 %60, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* @vkGetPhysicalDeviceProperties2 to i8*)
  br label %856

62:                                               ; preds = %52
  %63 = tail call i32 @strcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.46, i64 0, i64 0), i8* %1) #15
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %67 = bitcast %union.loader_instance_extension_enables* %66 to i16*
  %68 = load i16, i16* %67, align 8
  %69 = and i16 %68, 1
  %70 = icmp eq i16 %69, 0
  %71 = select i1 %70, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* @vkGetPhysicalDeviceFormatProperties2 to i8*)
  br label %856

72:                                               ; preds = %62
  %73 = tail call i32 @strcmp(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.47, i64 0, i64 0), i8* %1) #15
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %77 = bitcast %union.loader_instance_extension_enables* %76 to i16*
  %78 = load i16, i16* %77, align 8
  %79 = and i16 %78, 1
  %80 = icmp eq i16 %79, 0
  %81 = select i1 %80, i8* null, i8* bitcast (i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* @vkGetPhysicalDeviceImageFormatProperties2 to i8*)
  br label %856

82:                                               ; preds = %72
  %83 = tail call i32 @strcmp(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.48, i64 0, i64 0), i8* %1) #15
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %87 = bitcast %union.loader_instance_extension_enables* %86 to i16*
  %88 = load i16, i16* %87, align 8
  %89 = and i16 %88, 1
  %90 = icmp eq i16 %89, 0
  %91 = select i1 %90, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* @vkGetPhysicalDeviceQueueFamilyProperties2 to i8*)
  br label %856

92:                                               ; preds = %82
  %93 = tail call i32 @strcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.49, i64 0, i64 0), i8* %1) #15
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %97 = bitcast %union.loader_instance_extension_enables* %96 to i16*
  %98 = load i16, i16* %97, align 8
  %99 = and i16 %98, 1
  %100 = icmp eq i16 %99, 0
  %101 = select i1 %100, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* @vkGetPhysicalDeviceMemoryProperties2 to i8*)
  br label %856

102:                                              ; preds = %92
  %103 = tail call i32 @strcmp(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i8* %1) #15
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %112

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %107 = bitcast %union.loader_instance_extension_enables* %106 to i16*
  %108 = load i16, i16* %107, align 8
  %109 = and i16 %108, 1
  %110 = icmp eq i16 %109, 0
  %111 = select i1 %110, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* @vkGetPhysicalDeviceSparseImageFormatProperties2 to i8*)
  br label %856

112:                                              ; preds = %102
  %113 = tail call i32 @strcmp(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.255, i64 0, i64 0), i8* %1) #15
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %856, label %115

115:                                              ; preds = %112
  %116 = tail call i32 @strcmp(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.256, i64 0, i64 0), i8* %1) #15
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %856, label %118

118:                                              ; preds = %115
  %119 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.257, i64 0, i64 0), i8* %1) #15
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %856, label %121

121:                                              ; preds = %118
  %122 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.258, i64 0, i64 0), i8* %1) #15
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %856, label %124

124:                                              ; preds = %121
  %125 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0), i8* %1) #15
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %134

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %129 = bitcast %union.loader_instance_extension_enables* %128 to i16*
  %130 = load i16, i16* %129, align 8
  %131 = and i16 %130, 2
  %132 = icmp eq i16 %131, 0
  %133 = select i1 %132, i8* null, i8* bitcast (i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)* @vkEnumeratePhysicalDeviceGroups to i8*)
  br label %856

134:                                              ; preds = %124
  %135 = tail call i32 @strcmp(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i64 0, i64 0), i8* %1) #15
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %144

137:                                              ; preds = %134
  %138 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %139 = bitcast %union.loader_instance_extension_enables* %138 to i16*
  %140 = load i16, i16* %139, align 8
  %141 = and i16 %140, 4
  %142 = icmp eq i16 %141, 0
  %143 = select i1 %142, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* @vkGetPhysicalDeviceExternalBufferProperties to i8*)
  br label %856

144:                                              ; preds = %134
  %145 = tail call i32 @strcmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.259, i64 0, i64 0), i8* %1) #15
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %856, label %147

147:                                              ; preds = %144
  %148 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.260, i64 0, i64 0), i8* %1) #15
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %856, label %150

150:                                              ; preds = %147
  %151 = tail call i32 @strcmp(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.53, i64 0, i64 0), i8* %1) #15
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %160

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %155 = bitcast %union.loader_instance_extension_enables* %154 to i16*
  %156 = load i16, i16* %155, align 8
  %157 = and i16 %156, 8
  %158 = icmp eq i16 %157, 0
  %159 = select i1 %158, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)* @vkGetPhysicalDeviceExternalSemaphoreProperties to i8*)
  br label %856

160:                                              ; preds = %150
  %161 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.261, i64 0, i64 0), i8* %1) #15
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %856, label %163

163:                                              ; preds = %160
  %164 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.262, i64 0, i64 0), i8* %1) #15
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %856, label %166

166:                                              ; preds = %163
  %167 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.263, i64 0, i64 0), i8* %1) #15
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %856, label %169

169:                                              ; preds = %166
  %170 = tail call i32 @strcmp(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.264, i64 0, i64 0), i8* %1) #15
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %856, label %172

172:                                              ; preds = %169
  %173 = tail call i32 @strcmp(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.265, i64 0, i64 0), i8* %1) #15
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %856, label %175

175:                                              ; preds = %172
  %176 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.266, i64 0, i64 0), i8* %1) #15
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %856, label %178

178:                                              ; preds = %175
  %179 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.267, i64 0, i64 0), i8* %1) #15
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %856, label %181

181:                                              ; preds = %178
  %182 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0), i8* %1) #15
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %856, label %184

184:                                              ; preds = %181
  %185 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.269, i64 0, i64 0), i8* %1) #15
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %856, label %187

187:                                              ; preds = %184
  %188 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.270, i64 0, i64 0), i8* %1) #15
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %856, label %190

190:                                              ; preds = %187
  %191 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.271, i64 0, i64 0), i8* %1) #15
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %856, label %193

193:                                              ; preds = %190
  %194 = tail call i32 @strcmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.272, i64 0, i64 0), i8* %1) #15
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %856, label %196

196:                                              ; preds = %193
  %197 = tail call i32 @strcmp(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.54, i64 0, i64 0), i8* %1) #15
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %206

199:                                              ; preds = %196
  %200 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %201 = bitcast %union.loader_instance_extension_enables* %200 to i16*
  %202 = load i16, i16* %201, align 8
  %203 = and i16 %202, 16
  %204 = icmp eq i16 %203, 0
  %205 = select i1 %204, i8* null, i8* bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)* @vkGetPhysicalDeviceExternalFenceProperties to i8*)
  br label %856

206:                                              ; preds = %196
  %207 = tail call i32 @strcmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.273, i64 0, i64 0), i8* %1) #15
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %856, label %209

209:                                              ; preds = %206
  %210 = tail call i32 @strcmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.274, i64 0, i64 0), i8* %1) #15
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %856, label %212

212:                                              ; preds = %209
  %213 = tail call i32 @strcmp(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.55, i64 0, i64 0), i8* %1) #15
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %856, label %215

215:                                              ; preds = %212
  %216 = tail call i32 @strcmp(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.56, i64 0, i64 0), i8* %1) #15
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %856, label %218

218:                                              ; preds = %215
  %219 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.275, i64 0, i64 0), i8* %1) #15
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %856, label %221

221:                                              ; preds = %218
  %222 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.276, i64 0, i64 0), i8* %1) #15
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %856, label %224

224:                                              ; preds = %221
  %225 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.277, i64 0, i64 0), i8* %1) #15
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %856, label %227

227:                                              ; preds = %224
  %228 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.278, i64 0, i64 0), i8* %1) #15
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %856, label %230

230:                                              ; preds = %227
  %231 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.279, i64 0, i64 0), i8* %1) #15
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %856, label %233

233:                                              ; preds = %230
  %234 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.280, i64 0, i64 0), i8* %1) #15
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %856, label %236

236:                                              ; preds = %233
  %237 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.281, i64 0, i64 0), i8* %1) #15
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %856, label %239

239:                                              ; preds = %236
  %240 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.282, i64 0, i64 0), i8* %1) #15
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %856, label %242

242:                                              ; preds = %239
  %243 = tail call i32 @strcmp(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.283, i64 0, i64 0), i8* %1) #15
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %856, label %245

245:                                              ; preds = %242
  %246 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0), i8* %1) #15
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %856, label %248

248:                                              ; preds = %245
  %249 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.285, i64 0, i64 0), i8* %1) #15
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %856, label %251

251:                                              ; preds = %248
  %252 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.286, i64 0, i64 0), i8* %1) #15
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %856, label %254

254:                                              ; preds = %251
  %255 = tail call i32 @strcmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.287, i64 0, i64 0), i8* %1) #15
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %856, label %257

257:                                              ; preds = %254
  %258 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.288, i64 0, i64 0), i8* %1) #15
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %856, label %260

260:                                              ; preds = %257
  %261 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.289, i64 0, i64 0), i8* %1) #15
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %856, label %263

263:                                              ; preds = %260
  %264 = tail call i32 @strcmp(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.63, i64 0, i64 0), i8* %1) #15
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %856, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.290, i64 0, i64 0), i8* %1) #15
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %856, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.291, i64 0, i64 0), i8* %1) #15
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %856, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.292, i64 0, i64 0), i8* %1) #15
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %856, label %275

275:                                              ; preds = %272
  %276 = tail call i32 @strcmp(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.293, i64 0, i64 0), i8* %1) #15
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %856, label %278

278:                                              ; preds = %275
  %279 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.294, i64 0, i64 0), i8* %1) #15
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %856, label %281

281:                                              ; preds = %278
  %282 = tail call i32 @strcmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.295, i64 0, i64 0), i8* %1) #15
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %856, label %284

284:                                              ; preds = %281
  %285 = tail call i32 @strcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.296, i64 0, i64 0), i8* %1) #15
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %856, label %287

287:                                              ; preds = %284
  %288 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.297, i64 0, i64 0), i8* %1) #15
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %856, label %290

290:                                              ; preds = %287
  %291 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.298, i64 0, i64 0), i8* %1) #15
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %856, label %293

293:                                              ; preds = %290
  %294 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.299, i64 0, i64 0), i8* %1) #15
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %856, label %296

296:                                              ; preds = %293
  %297 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.300, i64 0, i64 0), i8* %1) #15
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %856, label %299

299:                                              ; preds = %296
  %300 = tail call i32 @strcmp(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.301, i64 0, i64 0), i8* %1) #15
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %856, label %302

302:                                              ; preds = %299
  %303 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.302, i64 0, i64 0), i8* %1) #15
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %856, label %305

305:                                              ; preds = %302
  %306 = tail call i32 @strcmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.303, i64 0, i64 0), i8* %1) #15
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %856, label %308

308:                                              ; preds = %305
  %309 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.304, i64 0, i64 0), i8* %1) #15
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %856, label %311

311:                                              ; preds = %308
  %312 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.305, i64 0, i64 0), i8* %1) #15
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %856, label %314

314:                                              ; preds = %311
  %315 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.306, i64 0, i64 0), i8* %1) #15
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %856, label %317

317:                                              ; preds = %314
  %318 = tail call i32 @strcmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.307, i64 0, i64 0), i8* %1) #15
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %856, label %320

320:                                              ; preds = %317
  %321 = tail call i32 @strcmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.308, i64 0, i64 0), i8* %1) #15
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %856, label %323

323:                                              ; preds = %320
  %324 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.309, i64 0, i64 0), i8* %1) #15
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %856, label %326

326:                                              ; preds = %323
  %327 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.310, i64 0, i64 0), i8* %1) #15
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %856, label %329

329:                                              ; preds = %326
  %330 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.311, i64 0, i64 0), i8* %1) #15
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %856, label %332

332:                                              ; preds = %329
  %333 = tail call i32 @strcmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.312, i64 0, i64 0), i8* %1) #15
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %856, label %335

335:                                              ; preds = %332
  %336 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.313, i64 0, i64 0), i8* %1) #15
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %856, label %338

338:                                              ; preds = %335
  %339 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.314, i64 0, i64 0), i8* %1) #15
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %856, label %341

341:                                              ; preds = %338
  %342 = tail call i32 @strcmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.315, i64 0, i64 0), i8* %1) #15
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %856, label %344

344:                                              ; preds = %341
  %345 = tail call i32 @strcmp(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.316, i64 0, i64 0), i8* %1) #15
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %856, label %347

347:                                              ; preds = %344
  %348 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0), i8* %1) #15
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %856, label %350

350:                                              ; preds = %347
  %351 = tail call i32 @strcmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0), i8* %1) #15
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %856, label %353

353:                                              ; preds = %350
  %354 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.317, i64 0, i64 0), i8* %1) #15
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %856, label %356

356:                                              ; preds = %353
  %357 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.318, i64 0, i64 0), i8* %1) #15
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %856, label %359

359:                                              ; preds = %356
  %360 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.319, i64 0, i64 0), i8* %1) #15
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %856, label %362

362:                                              ; preds = %359
  %363 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.320, i64 0, i64 0), i8* %1) #15
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %856, label %365

365:                                              ; preds = %362
  %366 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.321, i64 0, i64 0), i8* %1) #15
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %856, label %368

368:                                              ; preds = %365
  %369 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.322, i64 0, i64 0), i8* %1) #15
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %856, label %371

371:                                              ; preds = %368
  %372 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.323, i64 0, i64 0), i8* %1) #15
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %856, label %374

374:                                              ; preds = %371
  %375 = tail call i32 @strcmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.324, i64 0, i64 0), i8* %1) #15
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %856, label %377

377:                                              ; preds = %374
  %378 = tail call i32 @strcmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.325, i64 0, i64 0), i8* %1) #15
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %856, label %380

380:                                              ; preds = %377
  %381 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.326, i64 0, i64 0), i8* %1) #15
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %856, label %383

383:                                              ; preds = %380
  %384 = tail call i32 @strcmp(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.327, i64 0, i64 0), i8* %1) #15
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %856, label %386

386:                                              ; preds = %383
  %387 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.328, i64 0, i64 0), i8* %1) #15
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %856, label %389

389:                                              ; preds = %386
  %390 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.329, i64 0, i64 0), i8* %1) #15
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %856, label %392

392:                                              ; preds = %389
  %393 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.330, i64 0, i64 0), i8* %1) #15
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %856, label %395

395:                                              ; preds = %392
  %396 = tail call i32 @strcmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.331, i64 0, i64 0), i8* %1) #15
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %856, label %398

398:                                              ; preds = %395
  %399 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.332, i64 0, i64 0), i8* %1) #15
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %856, label %401

401:                                              ; preds = %398
  %402 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.333, i64 0, i64 0), i8* %1) #15
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %856, label %404

404:                                              ; preds = %401
  %405 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.334, i64 0, i64 0), i8* %1) #15
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %856, label %407

407:                                              ; preds = %404
  %408 = tail call i32 @strcmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.335, i64 0, i64 0), i8* %1) #15
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %856, label %410

410:                                              ; preds = %407
  %411 = tail call i32 @strcmp(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.69, i64 0, i64 0), i8* %1) #15
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %420

413:                                              ; preds = %410
  %414 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %415 = bitcast %union.loader_instance_extension_enables* %414 to i16*
  %416 = load i16, i16* %415, align 8
  %417 = and i16 %416, 64
  %418 = icmp eq i16 %417, 0
  %419 = select i1 %418, i8* null, i8* bitcast (i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)* @GetPhysicalDeviceExternalImageFormatPropertiesNV to i8*)
  br label %856

420:                                              ; preds = %410
  %421 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.336, i64 0, i64 0), i8* %1) #15
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %856, label %423

423:                                              ; preds = %420
  %424 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.337, i64 0, i64 0), i8* %1) #15
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %856, label %426

426:                                              ; preds = %423
  %427 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.338, i64 0, i64 0), i8* %1) #15
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %856, label %429

429:                                              ; preds = %426
  %430 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i64 0, i64 0), i8* %1) #15
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %439

432:                                              ; preds = %429
  %433 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %434 = bitcast %union.loader_instance_extension_enables* %433 to i16*
  %435 = load i16, i16* %434, align 8
  %436 = and i16 %435, 256
  %437 = icmp eq i16 %436, 0
  %438 = select i1 %437, i8* null, i8* bitcast (i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)* @ReleaseDisplayEXT to i8*)
  br label %856

439:                                              ; preds = %429
  %440 = tail call i32 @strcmp(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.71, i64 0, i64 0), i8* %1) #15
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %449

442:                                              ; preds = %439
  %443 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %444 = bitcast %union.loader_instance_extension_enables* %443 to i16*
  %445 = load i16, i16* %444, align 8
  %446 = and i16 %445, 1024
  %447 = icmp eq i16 %446, 0
  %448 = select i1 %447, i8* null, i8* bitcast (i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)* @GetPhysicalDeviceSurfaceCapabilities2EXT to i8*)
  br label %856

449:                                              ; preds = %439
  %450 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.339, i64 0, i64 0), i8* %1) #15
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %856, label %452

452:                                              ; preds = %449
  %453 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.340, i64 0, i64 0), i8* %1) #15
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %856, label %455

455:                                              ; preds = %452
  %456 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.341, i64 0, i64 0), i8* %1) #15
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %856, label %458

458:                                              ; preds = %455
  %459 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.342, i64 0, i64 0), i8* %1) #15
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %856, label %461

461:                                              ; preds = %458
  %462 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.343, i64 0, i64 0), i8* %1) #15
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %856, label %464

464:                                              ; preds = %461
  %465 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.344, i64 0, i64 0), i8* %1) #15
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %856, label %467

467:                                              ; preds = %464
  %468 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.345, i64 0, i64 0), i8* %1) #15
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %856, label %470

470:                                              ; preds = %467
  %471 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.346, i64 0, i64 0), i8* %1) #15
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %856, label %473

473:                                              ; preds = %470
  %474 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.72, i64 0, i64 0), i8* %1) #15
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %483

476:                                              ; preds = %473
  %477 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %478 = bitcast %union.loader_instance_extension_enables* %477 to i16*
  %479 = load i16, i16* %478, align 8
  %480 = and i16 %479, 2048
  %481 = icmp eq i16 %480, 0
  %482 = select i1 %481, i8* null, i8* bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)* @SetDebugUtilsObjectNameEXT to i8*)
  br label %856

483:                                              ; preds = %473
  %484 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0), i8* %1) #15
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %493

486:                                              ; preds = %483
  %487 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %488 = bitcast %union.loader_instance_extension_enables* %487 to i16*
  %489 = load i16, i16* %488, align 8
  %490 = and i16 %489, 2048
  %491 = icmp eq i16 %490, 0
  %492 = select i1 %491, i8* null, i8* bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)* @SetDebugUtilsObjectTagEXT to i8*)
  br label %856

493:                                              ; preds = %483
  %494 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74, i64 0, i64 0), i8* %1) #15
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %503

496:                                              ; preds = %493
  %497 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %498 = bitcast %union.loader_instance_extension_enables* %497 to i16*
  %499 = load i16, i16* %498, align 8
  %500 = and i16 %499, 2048
  %501 = icmp eq i16 %500, 0
  %502 = select i1 %501, i8* null, i8* bitcast (void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* @QueueBeginDebugUtilsLabelEXT to i8*)
  br label %856

503:                                              ; preds = %493
  %504 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i64 0, i64 0), i8* %1) #15
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %513

506:                                              ; preds = %503
  %507 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %508 = bitcast %union.loader_instance_extension_enables* %507 to i16*
  %509 = load i16, i16* %508, align 8
  %510 = and i16 %509, 2048
  %511 = icmp eq i16 %510, 0
  %512 = select i1 %511, i8* null, i8* bitcast (void (%struct.VkQueue_T*)* @QueueEndDebugUtilsLabelEXT to i8*)
  br label %856

513:                                              ; preds = %503
  %514 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0), i8* %1) #15
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %523

516:                                              ; preds = %513
  %517 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %518 = bitcast %union.loader_instance_extension_enables* %517 to i16*
  %519 = load i16, i16* %518, align 8
  %520 = and i16 %519, 2048
  %521 = icmp eq i16 %520, 0
  %522 = select i1 %521, i8* null, i8* bitcast (void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* @QueueInsertDebugUtilsLabelEXT to i8*)
  br label %856

523:                                              ; preds = %513
  %524 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i64 0, i64 0), i8* %1) #15
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %533

526:                                              ; preds = %523
  %527 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %528 = bitcast %union.loader_instance_extension_enables* %527 to i16*
  %529 = load i16, i16* %528, align 8
  %530 = and i16 %529, 2048
  %531 = icmp eq i16 %530, 0
  %532 = select i1 %531, i8* null, i8* bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* @CmdBeginDebugUtilsLabelEXT to i8*)
  br label %856

533:                                              ; preds = %523
  %534 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0), i8* %1) #15
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %543

536:                                              ; preds = %533
  %537 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %538 = bitcast %union.loader_instance_extension_enables* %537 to i16*
  %539 = load i16, i16* %538, align 8
  %540 = and i16 %539, 2048
  %541 = icmp eq i16 %540, 0
  %542 = select i1 %541, i8* null, i8* bitcast (void (%struct.VkCommandBuffer_T*)* @CmdEndDebugUtilsLabelEXT to i8*)
  br label %856

543:                                              ; preds = %533
  %544 = tail call i32 @strcmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79, i64 0, i64 0), i8* %1) #15
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %553

546:                                              ; preds = %543
  %547 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %548 = bitcast %union.loader_instance_extension_enables* %547 to i16*
  %549 = load i16, i16* %548, align 8
  %550 = and i16 %549, 2048
  %551 = icmp eq i16 %550, 0
  %552 = select i1 %551, i8* null, i8* bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* @CmdInsertDebugUtilsLabelEXT to i8*)
  br label %856

553:                                              ; preds = %543
  %554 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.347, i64 0, i64 0), i8* %1) #15
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %856, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @strcmp(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.83, i64 0, i64 0), i8* %1) #15
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %856, label %559

559:                                              ; preds = %556
  %560 = tail call i32 @strcmp(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.348, i64 0, i64 0), i8* %1) #15
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %856, label %562

562:                                              ; preds = %559
  %563 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.349, i64 0, i64 0), i8* %1) #15
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %856, label %565

565:                                              ; preds = %562
  %566 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.350, i64 0, i64 0), i8* %1) #15
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %856, label %568

568:                                              ; preds = %565
  %569 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.351, i64 0, i64 0), i8* %1) #15
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %856, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.352, i64 0, i64 0), i8* %1) #15
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %856, label %574

574:                                              ; preds = %571
  %575 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.353, i64 0, i64 0), i8* %1) #15
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %856, label %577

577:                                              ; preds = %574
  %578 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.354, i64 0, i64 0), i8* %1) #15
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %856, label %580

580:                                              ; preds = %577
  %581 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.355, i64 0, i64 0), i8* %1) #15
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %856, label %583

583:                                              ; preds = %580
  %584 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.356, i64 0, i64 0), i8* %1) #15
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %856, label %586

586:                                              ; preds = %583
  %587 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.357, i64 0, i64 0), i8* %1) #15
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %856, label %589

589:                                              ; preds = %586
  %590 = tail call i32 @strcmp(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.358, i64 0, i64 0), i8* %1) #15
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %856, label %592

592:                                              ; preds = %589
  %593 = tail call i32 @strcmp(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.359, i64 0, i64 0), i8* %1) #15
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %856, label %595

595:                                              ; preds = %592
  %596 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.360, i64 0, i64 0), i8* %1) #15
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %856, label %598

598:                                              ; preds = %595
  %599 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.361, i64 0, i64 0), i8* %1) #15
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %856, label %601

601:                                              ; preds = %598
  %602 = tail call i32 @strcmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.362, i64 0, i64 0), i8* %1) #15
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %856, label %604

604:                                              ; preds = %601
  %605 = tail call i32 @strcmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.363, i64 0, i64 0), i8* %1) #15
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %856, label %607

607:                                              ; preds = %604
  %608 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.364, i64 0, i64 0), i8* %1) #15
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %856, label %610

610:                                              ; preds = %607
  %611 = tail call i32 @strcmp(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.365, i64 0, i64 0), i8* %1) #15
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %856, label %613

613:                                              ; preds = %610
  %614 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.366, i64 0, i64 0), i8* %1) #15
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %856, label %616

616:                                              ; preds = %613
  %617 = tail call i32 @strcmp(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.367, i64 0, i64 0), i8* %1) #15
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %856, label %619

619:                                              ; preds = %616
  %620 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.368, i64 0, i64 0), i8* %1) #15
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %856, label %622

622:                                              ; preds = %619
  %623 = tail call i32 @strcmp(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.369, i64 0, i64 0), i8* %1) #15
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %856, label %625

625:                                              ; preds = %622
  %626 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.370, i64 0, i64 0), i8* %1) #15
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %856, label %628

628:                                              ; preds = %625
  %629 = tail call i32 @strcmp(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.84, i64 0, i64 0), i8* %1) #15
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %856, label %631

631:                                              ; preds = %628
  %632 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.371, i64 0, i64 0), i8* %1) #15
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %856, label %634

634:                                              ; preds = %631
  %635 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.372, i64 0, i64 0), i8* %1) #15
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %856, label %637

637:                                              ; preds = %634
  %638 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.373, i64 0, i64 0), i8* %1) #15
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %856, label %640

640:                                              ; preds = %637
  %641 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.374, i64 0, i64 0), i8* %1) #15
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %856, label %643

643:                                              ; preds = %640
  %644 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.375, i64 0, i64 0), i8* %1) #15
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %856, label %646

646:                                              ; preds = %643
  %647 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.376, i64 0, i64 0), i8* %1) #15
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %856, label %649

649:                                              ; preds = %646
  %650 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.377, i64 0, i64 0), i8* %1) #15
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %856, label %652

652:                                              ; preds = %649
  %653 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.378, i64 0, i64 0), i8* %1) #15
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %856, label %655

655:                                              ; preds = %652
  %656 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.379, i64 0, i64 0), i8* %1) #15
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %856, label %658

658:                                              ; preds = %655
  %659 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.380, i64 0, i64 0), i8* %1) #15
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %856, label %661

661:                                              ; preds = %658
  %662 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.381, i64 0, i64 0), i8* %1) #15
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %856, label %664

664:                                              ; preds = %661
  %665 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.382, i64 0, i64 0), i8* %1) #15
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %856, label %667

667:                                              ; preds = %664
  %668 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.383, i64 0, i64 0), i8* %1) #15
  %669 = icmp eq i32 %668, 0
  br i1 %669, label %856, label %670

670:                                              ; preds = %667
  %671 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.384, i64 0, i64 0), i8* %1) #15
  %672 = icmp eq i32 %671, 0
  br i1 %672, label %856, label %673

673:                                              ; preds = %670
  %674 = tail call i32 @strcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.385, i64 0, i64 0), i8* %1) #15
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %856, label %676

676:                                              ; preds = %673
  %677 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.386, i64 0, i64 0), i8* %1) #15
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %856, label %679

679:                                              ; preds = %676
  %680 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.387, i64 0, i64 0), i8* %1) #15
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %856, label %682

682:                                              ; preds = %679
  %683 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.388, i64 0, i64 0), i8* %1) #15
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %856, label %685

685:                                              ; preds = %682
  %686 = tail call i32 @strcmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.85, i64 0, i64 0), i8* %1) #15
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %856, label %688

688:                                              ; preds = %685
  %689 = tail call i32 @strcmp(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.86, i64 0, i64 0), i8* %1) #15
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %856, label %691

691:                                              ; preds = %688
  %692 = tail call i32 @strcmp(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.87, i64 0, i64 0), i8* %1) #15
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %856, label %694

694:                                              ; preds = %691
  %695 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.389, i64 0, i64 0), i8* %1) #15
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %856, label %697

697:                                              ; preds = %694
  %698 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.390, i64 0, i64 0), i8* %1) #15
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %856, label %700

700:                                              ; preds = %697
  %701 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.391, i64 0, i64 0), i8* %1) #15
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %856, label %703

703:                                              ; preds = %700
  %704 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.392, i64 0, i64 0), i8* %1) #15
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %856, label %706

706:                                              ; preds = %703
  %707 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.393, i64 0, i64 0), i8* %1) #15
  %708 = icmp eq i32 %707, 0
  br i1 %708, label %856, label %709

709:                                              ; preds = %706
  %710 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i64 0, i64 0), i8* %1) #15
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %856, label %712

712:                                              ; preds = %709
  %713 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.395, i64 0, i64 0), i8* %1) #15
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %856, label %715

715:                                              ; preds = %712
  %716 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.396, i64 0, i64 0), i8* %1) #15
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %856, label %718

718:                                              ; preds = %715
  %719 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.397, i64 0, i64 0), i8* %1) #15
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %856, label %721

721:                                              ; preds = %718
  %722 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.398, i64 0, i64 0), i8* %1) #15
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %856, label %724

724:                                              ; preds = %721
  %725 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.399, i64 0, i64 0), i8* %1) #15
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %856, label %727

727:                                              ; preds = %724
  %728 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.400, i64 0, i64 0), i8* %1) #15
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %856, label %730

730:                                              ; preds = %727
  %731 = tail call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.401, i64 0, i64 0), i8* %1) #15
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %856, label %733

733:                                              ; preds = %730
  %734 = tail call i32 @strcmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.402, i64 0, i64 0), i8* %1) #15
  %735 = icmp eq i32 %734, 0
  br i1 %735, label %856, label %736

736:                                              ; preds = %733
  %737 = tail call i32 @strcmp(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.403, i64 0, i64 0), i8* %1) #15
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %856, label %739

739:                                              ; preds = %736
  %740 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.404, i64 0, i64 0), i8* %1) #15
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %856, label %742

742:                                              ; preds = %739
  %743 = tail call i32 @strcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.405, i64 0, i64 0), i8* %1) #15
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %856, label %745

745:                                              ; preds = %742
  %746 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.406, i64 0, i64 0), i8* %1) #15
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %856, label %748

748:                                              ; preds = %745
  %749 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.407, i64 0, i64 0), i8* %1) #15
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %856, label %751

751:                                              ; preds = %748
  %752 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.408, i64 0, i64 0), i8* %1) #15
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %856, label %754

754:                                              ; preds = %751
  %755 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.409, i64 0, i64 0), i8* %1) #15
  %756 = icmp eq i32 %755, 0
  br i1 %756, label %856, label %757

757:                                              ; preds = %754
  %758 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.410, i64 0, i64 0), i8* %1) #15
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %856, label %760

760:                                              ; preds = %757
  %761 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.411, i64 0, i64 0), i8* %1) #15
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %856, label %763

763:                                              ; preds = %760
  %764 = tail call i32 @strcmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.412, i64 0, i64 0), i8* %1) #15
  %765 = icmp eq i32 %764, 0
  br i1 %765, label %856, label %766

766:                                              ; preds = %763
  %767 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.413, i64 0, i64 0), i8* %1) #15
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %856, label %769

769:                                              ; preds = %766
  %770 = tail call i32 @strcmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.414, i64 0, i64 0), i8* %1) #15
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %856, label %772

772:                                              ; preds = %769
  %773 = tail call i32 @strcmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.415, i64 0, i64 0), i8* %1) #15
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %856, label %775

775:                                              ; preds = %772
  %776 = tail call i32 @strcmp(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.416, i64 0, i64 0), i8* %1) #15
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %856, label %778

778:                                              ; preds = %775
  %779 = tail call i32 @strcmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.417, i64 0, i64 0), i8* %1) #15
  %780 = icmp eq i32 %779, 0
  br i1 %780, label %856, label %781

781:                                              ; preds = %778
  %782 = tail call i32 @strcmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.418, i64 0, i64 0), i8* %1) #15
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %856, label %784

784:                                              ; preds = %781
  %785 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.419, i64 0, i64 0), i8* %1) #15
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %856, label %787

787:                                              ; preds = %784
  %788 = tail call i32 @strcmp(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.420, i64 0, i64 0), i8* %1) #15
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %856, label %790

790:                                              ; preds = %787
  %791 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.421, i64 0, i64 0), i8* %1) #15
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %856, label %793

793:                                              ; preds = %790
  %794 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.422, i64 0, i64 0), i8* %1) #15
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %856, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @strcmp(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.423, i64 0, i64 0), i8* %1) #15
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %856, label %799

799:                                              ; preds = %796
  %800 = tail call i32 @strcmp(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.424, i64 0, i64 0), i8* %1) #15
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %856, label %802

802:                                              ; preds = %799
  %803 = tail call i32 @strcmp(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.425, i64 0, i64 0), i8* %1) #15
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %856, label %805

805:                                              ; preds = %802
  %806 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.426, i64 0, i64 0), i8* %1) #15
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %856, label %808

808:                                              ; preds = %805
  %809 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.427, i64 0, i64 0), i8* %1) #15
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %856, label %811

811:                                              ; preds = %808
  %812 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.428, i64 0, i64 0), i8* %1) #15
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %856, label %814

814:                                              ; preds = %811
  %815 = tail call i32 @strcmp(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.429, i64 0, i64 0), i8* %1) #15
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %856, label %817

817:                                              ; preds = %814
  %818 = tail call i32 @strcmp(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.430, i64 0, i64 0), i8* %1) #15
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %856, label %820

820:                                              ; preds = %817
  %821 = tail call i32 @strcmp(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.431, i64 0, i64 0), i8* %1) #15
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %856, label %823

823:                                              ; preds = %820
  %824 = tail call i32 @strcmp(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.432, i64 0, i64 0), i8* %1) #15
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %856, label %826

826:                                              ; preds = %823
  %827 = tail call i32 @strcmp(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.433, i64 0, i64 0), i8* %1) #15
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %856, label %829

829:                                              ; preds = %826
  %830 = tail call i32 @strcmp(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.434, i64 0, i64 0), i8* %1) #15
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %856, label %832

832:                                              ; preds = %829
  %833 = tail call i32 @strcmp(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.435, i64 0, i64 0), i8* %1) #15
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %856, label %835

835:                                              ; preds = %832
  %836 = tail call i32 @strcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.436, i64 0, i64 0), i8* %1) #15
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %856, label %838

838:                                              ; preds = %835
  %839 = tail call i32 @strcmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.437, i64 0, i64 0), i8* %1) #15
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %856, label %841

841:                                              ; preds = %838
  %842 = tail call i32 @strcmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.438, i64 0, i64 0), i8* %1) #15
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %856, label %844

844:                                              ; preds = %841
  %845 = tail call i32 @strcmp(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.439, i64 0, i64 0), i8* %1) #15
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %856, label %847

847:                                              ; preds = %844
  %848 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.440, i64 0, i64 0), i8* %1) #15
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %856, label %850

850:                                              ; preds = %847
  %851 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.441, i64 0, i64 0), i8* %1) #15
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %856, label %853

853:                                              ; preds = %850
  %854 = tail call i32 @strcmp(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.442, i64 0, i64 0), i8* %1) #15
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %856, label %858

856:                                              ; preds
  %857 = phi i8* [ %552, %546 ], [ %542, %536 ], [ %532, %526 ], [ %522, %516 ], [ %512, %506 ], [ %502, %496 ], [ %492, %486 ], [ %482, %476 ], [ %448, %442 ], [ %438, %432 ], [ %419, %413 ], [ %205, %199 ], [ %159, %153 ], [ %143, %137 ], [ %133, %127 ], [ %111, %105 ], [ %101, %95 ], [ %91, %85 ], [ %81, %75 ], [ %71, %65 ], [ %61, %55 ], [ %51, %45 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)* @GetPhysicalDeviceVideoCapabilitiesKHR to i8*), %3 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)* @GetPhysicalDeviceVideoFormatPropertiesKHR to i8*), %6 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**)* @CreateVideoSessionKHR to i8*), %9 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*)* @DestroyVideoSessionKHR to i8*), %12 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*)* @GetVideoSessionMemoryRequirementsKHR to i8*), %15 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*)* @BindVideoSessionMemoryKHR to i8*), %18 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**)* @CreateVideoSessionParametersKHR to i8*), %21 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*)* @UpdateVideoSessionParametersKHR to i8*), %24 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*)* @DestroyVideoSessionParametersKHR to i8*), %27 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*)* @CmdBeginVideoCodingKHR to i8*), %30 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*)* @CmdEndVideoCodingKHR to i8*), %33 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*)* @CmdControlVideoCodingKHR to i8*), %36 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*)* @CmdDecodeVideoKHR to i8*), %39 ], [ bitcast (void (%struct.VkDevice_T*, i32, i32, i32, i32*)* @GetDeviceGroupPeerMemoryFeaturesKHR to i8*), %112 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetDeviceMaskKHR to i8*), %115 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)* @CmdDispatchBaseKHR to i8*), %118 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* @TrimCommandPoolKHR to i8*), %121 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* @GetMemoryFdKHR to i8*), %144 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* @GetMemoryFdPropertiesKHR to i8*), %147 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* @ImportSemaphoreFdKHR to i8*), %160 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* @GetSemaphoreFdKHR to i8*), %163 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*)* @CmdPushDescriptorSetKHR to i8*), %166 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*)* @CmdPushDescriptorSetWithTemplateKHR to i8*), %169 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)* @CreateDescriptorUpdateTemplateKHR to i8*), %172 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)* @DestroyDescriptorUpdateTemplateKHR to i8*), %175 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)* @UpdateDescriptorSetWithTemplateKHR to i8*), %178 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* @CreateRenderPass2KHR to i8*), %181 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)* @CmdBeginRenderPass2KHR to i8*), %184 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)* @CmdNextSubpass2KHR to i8*), %187 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)* @CmdEndRenderPass2KHR to i8*), %190 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*)* @GetSwapchainStatusKHR to i8*), %193 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*)* @ImportFenceFdKHR to i8*), %206 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*)* @GetFenceFdKHR to i8*), %209 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)* @EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR to i8*), %212 ], [ bitcast (void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)* @GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR to i8*), %215 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*)* @AcquireProfilingLockKHR to i8*), %218 ], [ bitcast (void (%struct.VkDevice_T*)* @ReleaseProfilingLockKHR to i8*), %221 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* @GetImageMemoryRequirements2KHR to i8*), %224 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* @GetBufferMemoryRequirements2KHR to i8*), %227 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* @GetImageSparseMemoryRequirements2KHR to i8*), %230 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* @CreateSamplerYcbcrConversionKHR to i8*), %233 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* @DestroySamplerYcbcrConversionKHR to i8*), %236 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* @BindBufferMemory2KHR to i8*), %239 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* @BindImageMemory2KHR to i8*), %242 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* @GetDescriptorSetLayoutSupportKHR to i8*), %245 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)* @CmdDrawIndirectCountKHR to i8*), %248 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)* @CmdDrawIndexedIndirectCountKHR to i8*), %251 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)* @GetSemaphoreCounterValueKHR to i8*), %254 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)* @WaitSemaphoresKHR to i8*), %257 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)* @SignalSemaphoreKHR to i8*), %260 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)* @GetPhysicalDeviceFragmentShadingRatesKHR to i8*), %263 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*)* @CmdSetFragmentShadingRateKHR to i8*), %266 ], [ bitcast (i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)* @GetBufferDeviceAddressKHR to i8*), %269 ], [ bitcast (i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)* @GetBufferOpaqueCaptureAddressKHR to i8*), %272 ], [ bitcast (i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)* @GetDeviceMemoryOpaqueCaptureAddressKHR to i8*), %275 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**)* @CreateDeferredOperationKHR to i8*), %278 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*)* @DestroyDeferredOperationKHR to i8*), %281 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)* @GetDeferredOperationMaxConcurrencyKHR to i8*), %284 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)* @GetDeferredOperationResultKHR to i8*), %287 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)* @DeferredOperationJoinKHR to i8*), %290 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*)* @GetPipelineExecutablePropertiesKHR to i8*), %293 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*)* @GetPipelineExecutableStatisticsKHR to i8*), %296 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*)* @GetPipelineExecutableInternalRepresentationsKHR to i8*), %299 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*)* @CmdEncodeVideoKHR to i8*), %302 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*)* @CmdSetEvent2KHR to i8*), %305 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64)* @CmdResetEvent2KHR to i8*), %308 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*)* @CmdWaitEvents2KHR to i8*), %311 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*)* @CmdPipelineBarrier2KHR to i8*), %314 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32)* @CmdWriteTimestamp2KHR to i8*), %317 ], [ bitcast (i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*)* @QueueSubmit2KHR to i8*), %320 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32)* @CmdWriteBufferMarker2AMD to i8*), %323 ], [ bitcast (void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*)* @GetQueueCheckpointData2NV to i8*), %326 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*)* @CmdCopyBuffer2KHR to i8*), %329 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*)* @CmdCopyImage2KHR to i8*), %332 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*)* @CmdCopyBufferToImage2KHR to i8*), %335 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*)* @CmdCopyImageToBuffer2KHR to i8*), %338 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*)* @CmdBlitImage2KHR to i8*), %341 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*)* @CmdResolveImage2KHR to i8*), %344 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)* @DebugMarkerSetObjectTagEXT to i8*), %347 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)* @DebugMarkerSetObjectNameEXT to i8*), %350 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)* @CmdDebugMarkerBeginEXT to i8*), %353 ], [ bitcast (void (%struct.VkCommandBuffer_T*)* @CmdDebugMarkerEndEXT to i8*), %356 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)* @CmdDebugMarkerInsertEXT to i8*), %359 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*)* @CmdBindTransformFeedbackBuffersEXT to i8*), %362 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* @CmdBeginTransformFeedbackEXT to i8*), %365 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* @CmdEndTransformFeedbackEXT to i8*), %368 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32)* @CmdBeginQueryIndexedEXT to i8*), %371 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* @CmdEndQueryIndexedEXT to i8*), %374 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32)* @CmdDrawIndirectByteCountEXT to i8*), %377 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**)* @CreateCuModuleNVX to i8*), %380 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**)* @CreateCuFunctionNVX to i8*), %383 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*)* @DestroyCuModuleNVX to i8*), %386 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*)* @DestroyCuFunctionNVX to i8*), %389 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*)* @CmdCuLaunchKernelNVX to i8*), %392 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*)* @GetImageViewHandleNVX to i8*), %395 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*)* @GetImageViewAddressNVX to i8*), %398 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)* @CmdDrawIndirectCountAMD to i8*), %401 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)* @CmdDrawIndexedIndirectCountAMD to i8*), %404 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*)* @GetShaderInfoAMD to i8*), %407 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*)* @CmdBeginConditionalRenderingEXT to i8*), %420 ], [ bitcast (void (%struct.VkCommandBuffer_T*)* @CmdEndConditionalRenderingEXT to i8*), %423 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*)* @CmdSetViewportWScalingNV to i8*), %426 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*)* @DisplayPowerControlEXT to i8*), %449 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* @RegisterDeviceEventEXT to i8*), %452 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* @RegisterDisplayEventEXT to i8*), %455 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*)* @GetSwapchainCounterEXT to i8*), %458 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*)* @GetRefreshCycleDurationGOOGLE to i8*), %461 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*)* @GetPastPresentationTimingGOOGLE to i8*), %464 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* @CmdSetDiscardRectangleEXT to i8*), %467 ], [ bitcast (void (%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*)* @SetHdrMetadataEXT to i8*), %470 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*)* @CmdSetSampleLocationsEXT to i8*), %553 ], [ bitcast (void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)* @GetPhysicalDeviceMultisamplePropertiesEXT to i8*), %556 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* @GetImageDrmFormatModifierPropertiesEXT to i8*), %559 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**)* @CreateValidationCacheEXT to i8*), %562 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*)* @DestroyValidationCacheEXT to i8*), %565 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**)* @MergeValidationCachesEXT to i8*), %568 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*)* @GetValidationCacheDataEXT to i8*), %571 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32)* @CmdBindShadingRateImageNV to i8*), %574 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*)* @CmdSetViewportShadingRatePaletteNV to i8*), %577 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*)* @CmdSetCoarseSampleOrderNV to i8*), %580 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**)* @CreateAccelerationStructureNV to i8*), %583 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*)* @DestroyAccelerationStructureNV to i8*), %586 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)* @GetAccelerationStructureMemoryRequirementsNV to i8*), %589 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*)* @BindAccelerationStructureMemoryNV to i8*), %592 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64)* @CmdBuildAccelerationStructureNV to i8*), %595 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32)* @CmdCopyAccelerationStructureNV to i8*), %598 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32)* @CmdTraceRaysNV to i8*), %601 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* @CreateRayTracingPipelinesNV to i8*), %604 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)* @GetRayTracingShaderGroupHandlesKHR to i8*), %607 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)* @GetRayTracingShaderGroupHandlesNV to i8*), %610 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*)* @GetAccelerationStructureHandleNV to i8*), %613 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32)* @CmdWriteAccelerationStructuresPropertiesNV to i8*), %616 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32)* @CompileDeferredNV to i8*), %619 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*)* @GetMemoryHostPointerPropertiesEXT to i8*), %622 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32)* @CmdWriteBufferMarkerAMD to i8*), %625 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)* @GetPhysicalDeviceCalibrateableTimeDomainsEXT to i8*), %628 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*)* @GetCalibratedTimestampsEXT to i8*), %631 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32)* @CmdDrawMeshTasksNV to i8*), %634 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* @CmdDrawMeshTasksIndirectNV to i8*), %637 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)* @CmdDrawMeshTasksIndirectCountNV to i8*), %640 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* @CmdSetExclusiveScissorNV to i8*), %643 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i8*)* @CmdSetCheckpointNV to i8*), %646 ], [ bitcast (void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*)* @GetQueueCheckpointDataNV to i8*), %649 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*)* @InitializePerformanceApiINTEL to i8*), %652 ], [ bitcast (void (%struct.VkDevice_T*)* @UninitializePerformanceApiINTEL to i8*), %655 ], [ bitcast (i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*)* @CmdSetPerformanceMarkerINTEL to i8*), %658 ], [ bitcast (i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*)* @CmdSetPerformanceStreamMarkerINTEL to i8*), %661 ], [ bitcast (i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*)* @CmdSetPerformanceOverrideINTEL to i8*), %664 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**)* @AcquirePerformanceConfigurationINTEL to i8*), %667 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*)* @ReleasePerformanceConfigurationINTEL to i8*), %670 ], [ bitcast (i32 (%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*)* @QueueSetPerformanceConfigurationINTEL to i8*), %673 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*)* @GetPerformanceParameterINTEL to i8*), %676 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32)* @SetLocalDimmingAMD to i8*), %679 ], [ bitcast (i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)* @GetBufferDeviceAddressEXT to i8*), %682 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)* @GetPhysicalDeviceToolPropertiesEXT to i8*), %685 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)* @GetPhysicalDeviceCooperativeMatrixPropertiesNV to i8*), %688 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)* @GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV to i8*), %691 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i16)* @CmdSetLineStippleEXT to i8*), %694 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)* @ResetQueryPoolEXT to i8*), %697 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetCullModeEXT to i8*), %700 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetFrontFaceEXT to i8*), %703 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetPrimitiveTopologyEXT to i8*), %706 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*)* @CmdSetViewportWithCountEXT to i8*), %709 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*)* @CmdSetScissorWithCountEXT to i8*), %712 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*)* @CmdBindVertexBuffers2EXT to i8*), %715 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetDepthTestEnableEXT to i8*), %718 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetDepthWriteEnableEXT to i8*), %721 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetDepthCompareOpEXT to i8*), %724 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetDepthBoundsTestEnableEXT to i8*), %727 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetStencilTestEnableEXT to i8*), %730 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* @CmdSetStencilOpEXT to i8*), %733 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)* @GetGeneratedCommandsMemoryRequirementsNV to i8*), %736 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*)* @CmdPreprocessGeneratedCommandsNV to i8*), %739 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*)* @CmdExecuteGeneratedCommandsNV to i8*), %742 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32)* @CmdBindPipelineShaderGroupNV to i8*), %745 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**)* @CreateIndirectCommandsLayoutNV to i8*), %748 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*)* @DestroyIndirectCommandsLayoutNV to i8*), %751 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**)* @CreatePrivateDataSlotEXT to i8*), %754 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*)* @DestroyPrivateDataSlotEXT to i8*), %757 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64)* @SetPrivateDataEXT to i8*), %760 ], [ bitcast (void (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*)* @GetPrivateDataEXT to i8*), %763 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32*)* @CmdSetFragmentShadingRateEnumNV to i8*), %766 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*)* @CmdSetVertexInputEXT to i8*), %769 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetPatchControlPointsEXT to i8*), %772 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetRasterizerDiscardEnableEXT to i8*), %775 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetDepthBiasEnableEXT to i8*), %778 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetLogicOpEXT to i8*), %781 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetPrimitiveRestartEnableEXT to i8*), %784 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, i32*)* @CmdSetColorWriteEnableEXT to i8*), %787 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**)* @CreateAccelerationStructureKHR to i8*), %790 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*)* @DestroyAccelerationStructureKHR to i8*), %793 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)* @CmdBuildAccelerationStructuresKHR to i8*), %796 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**)* @CmdBuildAccelerationStructuresIndirectKHR to i8*), %799 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)* @BuildAccelerationStructuresKHR to i8*), %802 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*)* @CopyAccelerationStructureKHR to i8*), %805 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)* @CopyAccelerationStructureToMemoryKHR to i8*), %808 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)* @CopyMemoryToAccelerationStructureKHR to i8*), %811 ], [ bitcast (i32 (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64)* @WriteAccelerationStructuresPropertiesKHR to i8*), %814 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*)* @CmdCopyAccelerationStructureKHR to i8*), %817 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)* @CmdCopyAccelerationStructureToMemoryKHR to i8*), %820 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)* @CmdCopyMemoryToAccelerationStructureKHR to i8*), %823 ], [ bitcast (i64 (%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*)* @GetAccelerationStructureDeviceAddressKHR to i8*), %826 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32)* @CmdWriteAccelerationStructuresPropertiesKHR to i8*), %829 ], [ bitcast (void (%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*)* @GetDeviceAccelerationStructureCompatibilityKHR to i8*), %832 ], [ bitcast (void (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*)* @GetAccelerationStructureBuildSizesKHR to i8*), %835 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32)* @CmdTraceRaysKHR to i8*), %838 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* @CreateRayTracingPipelinesKHR to i8*), %841 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)* @GetRayTracingCaptureReplayShaderGroupHandlesKHR to i8*), %844 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64)* @CmdTraceRaysIndirectKHR to i8*), %847 ], [ bitcast (i64 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32)* @GetRayTracingShaderGroupStackSizeKHR to i8*), %850 ], [ bitcast (void (%struct.VkCommandBuffer_T*, i32)* @CmdSetRayTracingPipelineStackSizeKHR to i8*), %853 ]
  store i8* %857, i8** %2, align 8
  br label %858

858:                                              ; preds = %856, %853
  %859 = phi i1 [ false, %853 ], [ true, %856 ]
  ret i1 %859
}

declare void @vkGetPhysicalDeviceFeatures2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*) #6

declare void @vkGetPhysicalDeviceProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*) #6

declare void @vkGetPhysicalDeviceFormatProperties2(%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*) #6

declare i32 @vkGetPhysicalDeviceImageFormatProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*) #6

declare void @vkGetPhysicalDeviceQueueFamilyProperties2(%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*) #6

declare void @vkGetPhysicalDeviceMemoryProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*) #6

declare void @vkGetPhysicalDeviceSparseImageFormatProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*) #6

declare i32 @vkEnumeratePhysicalDeviceGroups(%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*) #6

declare void @vkGetPhysicalDeviceExternalBufferProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*) #6

declare void @vkGetPhysicalDeviceExternalSemaphoreProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*) #6

declare void @vkGetPhysicalDeviceExternalFenceProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*) #6

declare i32 @GetPhysicalDeviceExternalImageFormatPropertiesNV(%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*) #6

declare i32 @ReleaseDisplayEXT(%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*) #6

declare i32 @GetPhysicalDeviceSurfaceCapabilities2EXT(%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*) #6

declare i32 @GetPhysicalDeviceToolPropertiesEXT(%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*) #6

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @extensions_create_instance(%struct.loader_instance* nocapture, %struct.VkInstanceCreateInfo* nocapture readonly) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %1, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %1, i64 0, i32 7
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %9 = bitcast %union.loader_instance_extension_enables* %8 to i16*
  br label %11

10:                                               ; preds = %46, %2
  ret void

11:                                               ; preds = %6, %46
  %12 = phi i64 [ 0, %6 ], [ %47, %46 ]
  %13 = load i8**, i8*** %7, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 %12
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.896, i64 0, i64 0)) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %11
  %19 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.897, i64 0, i64 0)) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %42, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.898, i64 0, i64 0)) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.899, i64 0, i64 0)) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.900, i64 0, i64 0)) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.901, i64 0, i64 0)) #15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.902, i64 0, i64 0)) #15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.903, i64 0, i64 0)) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = tail call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.904, i64 0, i64 0)) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %39, %36, %33, %30, %27, %24, %21, %18, %11
  %43 = phi i16 [ 1, %11 ], [ 2, %18 ], [ 4, %21 ], [ 8, %24 ], [ 16, %27 ], [ 64, %30 ], [ 256, %33 ], [ 1024, %36 ], [ 2048, %39 ]
  %44 = load i16, i16* %9, align 8
  %45 = or i16 %44, %43
  store i16 %45, i16* %9, align 8
  br label %46

46:                                               ; preds = %42, %39
  %47 = add nuw nsw i64 %12, 1
  %48 = load i32, i32* %3, align 8
  %49 = zext i32 %48 to i64
  %50 = icmp ult i64 %47, %49
  br i1 %50, label %11, label %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden void ()* @get_extension_device_proc_terminator(%struct.loader_device* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 7, i32 0
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0)) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30, i64 0, i64 0)) #15
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, void ()* bitcast (i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)* @terminator_GetDeviceGroupSurfacePresentModesKHR to void ()*), void ()* null
  br label %13

13:                                               ; preds = %9, %6, %2
  %14 = phi void ()* [ null, %2 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* @terminator_CreateSwapchainKHR to void ()*), %6 ], [ %12, %9 ]
  %15 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 7, i32 1
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i64 0, i64 0)) #15
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, void ()* bitcast (i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* @terminator_CreateSharedSwapchainsKHR to void ()*), void ()* %14
  br label %22

22:                                               ; preds = %18, %13
  %23 = phi void ()* [ %14, %13 ], [ %21, %18 ]
  %24 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 7, i32 3
  %25 = load i8, i8* %24, align 1, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0)) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i64 0, i64 0)) #15
  %32 = icmp eq i32 %31, 0
  %33 = select i1 %32, void ()* bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)* @terminator_DebugMarkerSetObjectNameEXT to void ()*), void ()* %23
  br label %34

34:                                               ; preds = %30, %27, %22
  %35 = phi void ()* [ %23, %22 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)* @terminator_DebugMarkerSetObjectTagEXT to void ()*), %27 ], [ %33, %30 ]
  %36 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 7, i32 4
  %37 = load i8, i8* %36, align 4, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %34
  %40 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.72, i64 0, i64 0)) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %64, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0)) #15
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %42
  %46 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74, i64 0, i64 0)) #15
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %45
  %49 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i64 0, i64 0)) #15
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0)) #15
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i64 0, i64 0)) #15
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %54
  %58 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0)) #15
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79, i64 0, i64 0)) #15
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, void ()* bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_CmdInsertDebugUtilsLabelEXT to void ()*), void ()* %35
  ret void ()* %63

64:                                               ; preds = %57, %54, %51, %48, %45, %42, %39, %34
  %65 = phi void ()* [ %35, %34 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)* @terminator_SetDebugUtilsObjectNameEXT to void ()*), %39 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)* @terminator_SetDebugUtilsObjectTagEXT to void ()*), %42 ], [ bitcast (void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_QueueBeginDebugUtilsLabelEXT to void ()*), %45 ], [ bitcast (void (%struct.VkQueue_T*)* @terminator_QueueEndDebugUtilsLabelEXT to void ()*), %48 ], [ bitcast (void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_QueueInsertDebugUtilsLabelEXT to void ()*), %51 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_CmdBeginDebugUtilsLabelEXT to void ()*), %54 ], [ bitcast (void (%struct.VkCommandBuffer_T*)* @terminator_CmdEndDebugUtilsLabelEXT to void ()*), %57 ]
  ret void ()* %65
}

declare i32 @terminator_CreateSwapchainKHR(%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**) #6

declare i32 @terminator_GetDeviceGroupSurfacePresentModesKHR(%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*) #6

declare i32 @terminator_CreateSharedSwapchainsKHR(%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_DestroyInstance(%struct.VkInstance_T*, %struct.VkAllocationCallbacks*) #0 {
  %3 = bitcast %struct.VkInstance_T* %0 to %struct.loader_instance*
  %4 = icmp eq %struct.VkInstance_T* %0, null
  br i1 %4, label %270, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 14
  %7 = load %struct.loader_icd_term*, %struct.loader_icd_term** %6, align 8
  %8 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %9 = icmp eq %struct.loader_instance* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %5
  %11 = icmp eq %struct.loader_instance* %8, %3
  br i1 %11, label %14, label %24

12:                                               ; preds = %24
  %13 = icmp eq %struct.loader_instance* %27, %3
  br i1 %13, label %14, label %24

14:                                               ; preds = %12, %10
  %15 = phi %struct.loader_instance* [ null, %10 ], [ %25, %12 ]
  %16 = icmp eq %struct.loader_instance* %15, null
  %17 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 12
  %18 = bitcast %struct.loader_instance** %17 to i64*
  %19 = load i64, i64* %18, align 8
  br i1 %16, label %23, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %15, i64 0, i32 12
  %22 = bitcast %struct.loader_instance** %21 to i64*
  store i64 %19, i64* %22, align 8
  br label %29

23:                                               ; preds = %14
  store i64 %19, i64* bitcast (%struct.loader_struct* @loader to i64*), align 8
  br label %29

24:                                               ; preds = %10, %12
  %25 = phi %struct.loader_instance* [ %27, %12 ], [ %8, %10 ]
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %25, i64 0, i32 12
  %27 = load %struct.loader_instance*, %struct.loader_instance** %26, align 8
  %28 = icmp eq %struct.loader_instance* %27, null
  br i1 %28, label %29, label %12

29:                                               ; preds = %24, %5, %20, %23
  %30 = icmp eq %struct.loader_icd_term* %7, null
  br i1 %30, label %102, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 13
  %33 = icmp eq %struct.VkAllocationCallbacks* %1, null
  %34 = bitcast %struct.VkAllocationCallbacks* %1 to i8*
  %35 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 3
  %36 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 0
  br label %37

37:                                               ; preds = %31, %100
  %38 = phi %struct.loader_icd_term* [ %7, %31 ], [ %48, %100 ]
  %39 = bitcast %struct.loader_icd_term* %38 to i8*
  %40 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %38, i64 0, i32 3
  %41 = load %struct.VkInstance_T*, %struct.VkInstance_T** %40, align 8
  %42 = icmp eq %struct.VkInstance_T* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %38, i64 0, i32 4, i32 1
  %45 = load void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)** %44, align 8
  tail call void %45(%struct.VkInstance_T* nonnull %41, %struct.VkAllocationCallbacks* %1) #9
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %38, i64 0, i32 5
  %48 = load %struct.loader_icd_term*, %struct.loader_icd_term** %47, align 8
  store %struct.VkInstance_T* null, %struct.VkInstance_T** %40, align 8
  %49 = load i32, i32* %32, align 8
  %50 = add i32 %49, -1
  store i32 %50, i32* %32, align 8
  %51 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %38, i64 0, i32 2
  %52 = load %struct.loader_device*, %struct.loader_device** %51, align 8
  %53 = icmp eq %struct.loader_device* %52, null
  br i1 %53, label %54, label %60

54:                                               ; preds = %98, %46
  %55 = load void (i8*, i8*)*, void (i8*, i8*)** %35, align 8
  %56 = icmp eq void (i8*, i8*)* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  %58 = load i8*, i8** %36, align 8
  tail call void %55(i8* %58, i8* nonnull %39) #9
  br label %100

59:                                               ; preds = %54
  tail call void @free(i8* nonnull %39) #9
  br label %100

60:                                               ; preds = %46, %98
  %61 = phi %struct.loader_device* [ %63, %98 ], [ %52, %46 ]
  %62 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 8
  %63 = load %struct.loader_device*, %struct.loader_device** %62, align 8
  br i1 %33, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 6
  %66 = bitcast %struct.VkAllocationCallbacks* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %34, i64 48, i1 false) #9
  br label %67

67:                                               ; preds = %64, %60
  %68 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 5, i32 2
  %69 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %68, align 8
  %70 = icmp eq %struct.loader_layer_properties* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 5
  tail call void @loaderDeactivateLayers(%struct.loader_instance* nonnull %3, %struct.loader_device* nonnull %61, %struct.loader_layer_list* %72) #9
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 4, i32 2
  %75 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %74, align 8
  %76 = icmp eq %struct.loader_layer_properties* %75, null
  %77 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %75, i64 0, i32 0, i32 0, i64 0
  br i1 %76, label %89, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 6, i32 3
  %80 = load void (i8*, i8*)*, void (i8*, i8*)** %79, align 8
  %81 = icmp eq void (i8*, i8*)* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 6, i32 0
  %84 = load i8*, i8** %83, align 8
  tail call void %80(i8* %84, i8* nonnull %77) #9
  br label %86

85:                                               ; preds = %78
  tail call void @free(i8* nonnull %77) #9
  br label %86

86:                                               ; preds = %85, %82
  %87 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 4, i32 1
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 4, i32 0
  store i64 0, i64* %88, align 8
  br label %89

89:                                               ; preds = %73, %86
  %90 = bitcast %struct.loader_device* %61 to i8*
  %91 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 6, i32 3
  %92 = load void (i8*, i8*)*, void (i8*, i8*)** %91, align 8
  %93 = icmp eq void (i8*, i8*)* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %61, i64 0, i32 6, i32 0
  %96 = load i8*, i8** %95, align 8
  tail call void %92(i8* %96, i8* nonnull %90) #9
  br label %98

97:                                               ; preds = %89
  tail call void @free(i8* nonnull %90) #9
  br label %98

98:                                               ; preds = %94, %97
  %99 = icmp eq %struct.loader_device* %63, null
  br i1 %99, label %54, label %60

100:                                              ; preds = %57, %59
  %101 = icmp eq %struct.loader_icd_term* %48, null
  br i1 %101, label %102, label %37

102:                                              ; preds = %100, %29
  %103 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 19
  tail call void @loaderDeleteLayerListAndProperties(%struct.loader_instance* nonnull %3, %struct.loader_layer_list* %103)
  %104 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 15
  tail call void @loader_scanned_icd_clear(%struct.loader_instance* nonnull %3, %struct.loader_icd_tramp_list* %104)
  %105 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 24, i32 2
  %106 = bitcast %struct.VkExtensionProperties** %105 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %117, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 3
  %111 = load void (i8*, i8*)*, void (i8*, i8*)** %110, align 8
  %112 = icmp eq void (i8*, i8*)* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 0
  %115 = load i8*, i8** %114, align 8
  tail call void %111(i8* %115, i8* nonnull %107) #9
  br label %117

116:                                              ; preds = %109
  tail call void @free(i8* nonnull %107) #9
  br label %117

117:                                              ; preds = %102, %113, %116
  %118 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 24, i32 1
  store i32 0, i32* %118, align 8
  %119 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 24, i32 0
  store i64 0, i64* %119, align 8
  %120 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 5
  %121 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %120, align 8
  %122 = icmp eq %struct.loader_physical_device_term** %121, null
  br i1 %122, label %165, label %123

123:                                              ; preds = %117
  %124 = bitcast %struct.loader_physical_device_term** %121 to i8*
  %125 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 4
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %134, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 3
  %130 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 0
  br label %145

131:                                              ; preds = %158
  %132 = bitcast %struct.loader_physical_device_term*** %120 to i8**
  %133 = load i8*, i8** %132, align 8
  br label %134

134:                                              ; preds = %123, %131
  %135 = phi i8* [ %133, %131 ], [ %124, %123 ]
  %136 = icmp eq i8* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 3
  %139 = load void (i8*, i8*)*, void (i8*, i8*)** %138, align 8
  %140 = icmp eq void (i8*, i8*)* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 0
  %143 = load i8*, i8** %142, align 8
  tail call void %139(i8* %143, i8* nonnull %135) #9
  br label %165

144:                                              ; preds = %137
  tail call void @free(i8* nonnull %135) #9
  br label %165

145:                                              ; preds = %163, %128
  %146 = phi %struct.loader_physical_device_term** [ %121, %128 ], [ %164, %163 ]
  %147 = phi i64 [ 0, %128 ], [ %159, %163 ]
  %148 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %146, i64 %147
  %149 = bitcast %struct.loader_physical_device_term** %148 to i8**
  %150 = load i8*, i8** %149, align 8
  %151 = icmp eq i8* %150, null
  br i1 %151, label %158, label %152

152:                                              ; preds = %145
  %153 = load void (i8*, i8*)*, void (i8*, i8*)** %129, align 8
  %154 = icmp eq void (i8*, i8*)* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = load i8*, i8** %130, align 8
  tail call void %153(i8* %156, i8* nonnull %150) #9
  br label %158

157:                                              ; preds = %152
  tail call void @free(i8* nonnull %150) #9
  br label %158

158:                                              ; preds = %145, %155, %157
  %159 = add nuw nsw i64 %147, 1
  %160 = load i32, i32* %125, align 8
  %161 = zext i32 %160 to i64
  %162 = icmp ult i64 %159, %161
  br i1 %162, label %163, label %131

163:                                              ; preds = %158
  %164 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %120, align 8
  br label %145

165:                                              ; preds = %144, %141, %134, %117
  %166 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 9
  %167 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %166, align 8
  %168 = icmp eq %struct.VkPhysicalDeviceGroupProperties** %167, null
  br i1 %168, label %211, label %169

169:                                              ; preds = %165
  %170 = bitcast %struct.VkPhysicalDeviceGroupProperties** %167 to i8*
  %171 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 8
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 3
  %176 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 0
  br label %191

177:                                              ; preds = %204
  %178 = bitcast %struct.VkPhysicalDeviceGroupProperties*** %166 to i8**
  %179 = load i8*, i8** %178, align 8
  br label %180

180:                                              ; preds = %169, %177
  %181 = phi i8* [ %179, %177 ], [ %170, %169 ]
  %182 = icmp eq i8* %181, null
  br i1 %182, label %211, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 3
  %185 = load void (i8*, i8*)*, void (i8*, i8*)** %184, align 8
  %186 = icmp eq void (i8*, i8*)* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 0
  %189 = load i8*, i8** %188, align 8
  tail call void %185(i8* %189, i8* nonnull %181) #9
  br label %211

190:                                              ; preds = %183
  tail call void @free(i8* nonnull %181) #9
  br label %211

191:                                              ; preds = %209, %174
  %192 = phi %struct.VkPhysicalDeviceGroupProperties** [ %167, %174 ], [ %210, %209 ]
  %193 = phi i64 [ 0, %174 ], [ %205, %209 ]
  %194 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %192, i64 %193
  %195 = bitcast %struct.VkPhysicalDeviceGroupProperties** %194 to i8**
  %196 = load i8*, i8** %195, align 8
  %197 = icmp eq i8* %196, null
  br i1 %197, label %204, label %198

198:                                              ; preds = %191
  %199 = load void (i8*, i8*)*, void (i8*, i8*)** %175, align 8
  %200 = icmp eq void (i8*, i8*)* %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %198
  %202 = load i8*, i8** %176, align 8
  tail call void %199(i8* %202, i8* nonnull %196) #9
  br label %204

203:                                              ; preds = %198
  tail call void @free(i8* nonnull %196) #9
  br label %204

204:                                              ; preds = %191, %201, %203
  %205 = add nuw nsw i64 %193, 1
  %206 = load i32, i32* %171, align 8
  %207 = zext i32 %206 to i64
  %208 = icmp ult i64 %205, %207
  br i1 %208, label %209, label %177

209:                                              ; preds = %204
  %210 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %166, align 8
  br label %191

211:                                              ; preds = %190, %187, %180, %165
  %212 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 3
  %213 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 33, i32 0
  br label %214

214:                                              ; preds = %236, %211
  %215 = phi i64 [ 0, %211 ], [ %237, %236 ]
  %216 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 16, i64 %215, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = icmp eq i8* %217, null
  br i1 %218, label %225, label %219

219:                                              ; preds = %214
  %220 = load void (i8*, i8*)*, void (i8*, i8*)** %212, align 8
  %221 = icmp eq void (i8*, i8*)* %220, null
  br i1 %221, label %224, label %222

222:                                              ; preds = %219
  %223 = load i8*, i8** %213, align 8
  tail call void %220(i8* %223, i8* nonnull %217) #9
  br label %225

224:                                              ; preds = %219
  tail call void @free(i8* nonnull %217) #9
  br label %225

225:                                              ; preds = %224, %222, %214
  %226 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 16, i64 %215, i32 1, i32 2
  %227 = bitcast i32** %226 to i8**
  %228 = load i8*, i8** %227, align 8
  %229 = icmp eq i8* %228, null
  br i1 %229, label %236, label %230

230:                                              ; preds = %225
  %231 = load void (i8*, i8*)*, void (i8*, i8*)** %212, align 8
  %232 = icmp eq void (i8*, i8*)* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %230
  %234 = load i8*, i8** %213, align 8
  tail call void %231(i8* %234, i8* nonnull %228) #9
  br label %236

235:                                              ; preds = %230
  tail call void @free(i8* nonnull %228) #9
  br label %236

236:                                              ; preds = %235, %233, %225
  %237 = add nuw nsw i64 %215, 1
  %238 = icmp eq i64 %237, 250
  br i1 %238, label %239, label %214

239:                                              ; preds = %236
  %240 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 16, i64 0
  %241 = bitcast %struct.loader_dispatch_hash_entry* %240 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 8000, i1 false) #9
  br label %242

242:                                              ; preds = %264, %239
  %243 = phi i64 [ 0, %239 ], [ %265, %264 ]
  %244 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 17, i64 %243, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %253, label %247

247:                                              ; preds = %242
  %248 = load void (i8*, i8*)*, void (i8*, i8*)** %212, align 8
  %249 = icmp eq void (i8*, i8*)* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = load i8*, i8** %213, align 8
  tail call void %248(i8* %251, i8* nonnull %245) #9
  br label %253

252:                                              ; preds = %247
  tail call void @free(i8* nonnull %245) #9
  br label %253

253:                                              ; preds = %252, %250, %242
  %254 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 17, i64 %243, i32 1, i32 2
  %255 = bitcast i32** %254 to i8**
  %256 = load i8*, i8** %255, align 8
  %257 = icmp eq i8* %256, null
  br i1 %257, label %264, label %258

258:                                              ; preds = %253
  %259 = load void (i8*, i8*)*, void (i8*, i8*)** %212, align 8
  %260 = icmp eq void (i8*, i8*)* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %258
  %262 = load i8*, i8** %213, align 8
  tail call void %259(i8* %262, i8* nonnull %256) #9
  br label %264

263:                                              ; preds = %258
  tail call void @free(i8* nonnull %256) #9
  br label %264

264:                                              ; preds = %263, %261, %253
  %265 = add nuw nsw i64 %243, 1
  %266 = icmp eq i64 %265, 250
  br i1 %266, label %267, label %242

267:                                              ; preds = %264
  %268 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 17, i64 0
  %269 = bitcast %struct.loader_dispatch_hash_entry* %268 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 8000, i1 false) #9
  br label %270

270:                                              ; preds = %2, %267
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_EnumeratePhysicalDevices(%struct.VkInstance_T*, i32* nocapture, %struct.VkPhysicalDevice_T**) #0 {
  %4 = bitcast %struct.VkInstance_T* %0 to %struct.loader_instance*
  %5 = tail call i32 @setupLoaderTermPhysDevs(%struct.loader_instance* %4)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %76

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %4, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq %struct.VkPhysicalDevice_T** %2, null
  br i1 %10, label %73, label %11

11:                                               ; preds = %7
  %12 = load i32, i32* %1, align 4
  %13 = icmp ugt i32 %9, %12
  %14 = select i1 %13, i32 5, i32 0
  %15 = select i1 %13, i32 %12, i32 %9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %73, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %4, i64 0, i32 5
  %19 = zext i32 %15 to i64
  %20 = add nsw i64 %19, -1
  %21 = and i64 %19, 3
  %22 = icmp ult i64 %20, 3
  br i1 %22, label %58, label %23

23:                                               ; preds = %17
  %24 = sub nsw i64 %19, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %55, %25 ]
  %27 = phi i64 [ %24, %23 ], [ %56, %25 ]
  %28 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %18, align 8
  %29 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %28, i64 %26
  %30 = bitcast %struct.loader_physical_device_term** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %2, i64 %26
  %33 = bitcast %struct.VkPhysicalDevice_T** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = or i64 %26, 1
  %35 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %18, align 8
  %36 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %35, i64 %34
  %37 = bitcast %struct.loader_physical_device_term** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %2, i64 %34
  %40 = bitcast %struct.VkPhysicalDevice_T** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = or i64 %26, 2
  %42 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %18, align 8
  %43 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %42, i64 %41
  %44 = bitcast %struct.loader_physical_device_term** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %2, i64 %41
  %47 = bitcast %struct.VkPhysicalDevice_T** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = or i64 %26, 3
  %49 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %18, align 8
  %50 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %49, i64 %48
  %51 = bitcast %struct.loader_physical_device_term** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %2, i64 %48
  %54 = bitcast %struct.VkPhysicalDevice_T** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = add nuw nsw i64 %26, 4
  %56 = add i64 %27, -4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %25

58:                                               ; preds = %25, %17
  %59 = phi i64 [ 0, %17 ], [ %55, %25 ]
  %60 = icmp eq i64 %21, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %58, %61
  %62 = phi i64 [ %70, %61 ], [ %59, %58 ]
  %63 = phi i64 [ %71, %61 ], [ %21, %58 ]
  %64 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %18, align 8
  %65 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %64, i64 %62
  %66 = bitcast %struct.loader_physical_device_term** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %2, i64 %62
  %69 = bitcast %struct.VkPhysicalDevice_T** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = add nuw nsw i64 %62, 1
  %71 = add i64 %63, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !5

73:                                               ; preds = %58, %61, %11, %7
  %74 = phi i32 [ 0, %7 ], [ %14, %11 ], [ %14, %61 ], [ %14, %58 ]
  %75 = phi i32 [ %9, %7 ], [ 0, %11 ], [ %15, %61 ], [ %15, %58 ]
  store i32 %75, i32* %1, align 4
  br label %76

76:                                               ; preds = %3, %73
  %77 = phi i32 [ %5, %3 ], [ %74, %73 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceFeatures(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceFeatures*) #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %4 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 1
  %5 = load %struct.loader_icd_term*, %struct.loader_icd_term** %4, align 8
  %6 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 3
  %7 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)** %6, align 8
  %8 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %11 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %10, align 8
  tail call void %7(%struct.VkPhysicalDevice_T* %11, %struct.VkPhysicalDeviceFeatures* %1) #9
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceFormatProperties(%struct.VkPhysicalDevice_T* nocapture readonly, i32, %struct.VkFormatProperties*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 4
  %8 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)** %7, align 8
  %9 = icmp eq void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %12 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %11, align 8
  tail call void %8(%struct.VkPhysicalDevice_T* %12, i32 %1, %struct.VkFormatProperties* %2) #9
  br label %13

13:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceImageFormatProperties(%struct.VkPhysicalDevice_T* nocapture readonly, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*) #0 {
  %8 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %9 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %8, i64 0, i32 1
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 5
  %12 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)** %11, align 8
  %13 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 1
  %16 = load %struct.loader_instance*, %struct.loader_instance** %15, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %16, i32 8, i32 undef, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.1034, i64 0, i64 0))
  br label %21

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %8, i64 0, i32 3
  %19 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %18, align 8
  %20 = tail call i32 %12(%struct.VkPhysicalDevice_T* %19, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, %struct.VkImageFormatProperties* %6) #9
  br label %21

21:                                               ; preds = %17, %14
  %22 = phi i32 [ -3, %14 ], [ %20, %17 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceProperties(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceProperties*) #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %4 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 1
  %5 = load %struct.loader_icd_term*, %struct.loader_icd_term** %4, align 8
  %6 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 6
  %7 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %6, align 8
  %8 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %11 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %10, align 8
  tail call void %7(%struct.VkPhysicalDevice_T* %11, %struct.VkPhysicalDeviceProperties* %1) #9
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceQueueFamilyProperties(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkQueueFamilyProperties*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 7
  %8 = load void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %7, align 8
  %9 = icmp eq void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %12 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %11, align 8
  tail call void %8(%struct.VkPhysicalDevice_T* %12, i32* %1, %struct.VkQueueFamilyProperties* %2) #9
  br label %13

13:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceMemoryProperties(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceMemoryProperties*) #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %4 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 1
  %5 = load %struct.loader_icd_term*, %struct.loader_icd_term** %4, align 8
  %6 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 8
  %7 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %6, align 8
  %8 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %11 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %10, align 8
  tail call void %7(%struct.VkPhysicalDevice_T* %11, %struct.VkPhysicalDeviceMemoryProperties* %1) #9
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

declare void ()* @vkGetInstanceProcAddr(%struct.VkInstance_T*, i8*) #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_EnumerateDeviceExtensionProperties(%struct.VkPhysicalDevice_T* nocapture readonly, i8* readonly, i32* nocapture, %struct.VkExtensionProperties*) #0 {
  %5 = alloca [64 x i8], align 16
  %6 = alloca %struct.loader_layer_list, align 8
  %7 = alloca %struct.loader_extension_list, align 8
  %8 = alloca %struct.loader_extension_list, align 8
  %9 = alloca i32, align 4
  %10 = bitcast %struct.loader_layer_list* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false)
  %11 = bitcast %struct.loader_extension_list* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false)
  %12 = bitcast %struct.loader_extension_list* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false)
  %13 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %14 = icmp eq i8* %1, null
  br i1 %14, label %148, label %15

15:                                               ; preds = %4
  %16 = load i8, i8* %1, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %148, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %13, i64 0, i32 1
  %20 = load %struct.loader_icd_term*, %struct.loader_icd_term** %19, align 8
  %21 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %20, i64 0, i32 1
  %22 = load %struct.loader_instance*, %struct.loader_instance** %21, align 8
  br label %23

23:                                               ; preds = %18, %77
  %24 = phi i64 [ 0, %18 ], [ %81, %77 ]
  %25 = phi i32 [ 0, %18 ], [ %73, %77 ]
  %26 = phi i32 [ 0, %18 ], [ %72, %77 ]
  %27 = phi i32 [ 0, %18 ], [ %75, %77 ]
  %28 = phi i8 [ %16, %18 ], [ %80, %77 ]
  %29 = icmp eq i32 %27, 256
  br i1 %29, label %147, label %30

30:                                               ; preds = %23
  %31 = icmp slt i8 %28, 32
  %32 = icmp eq i8 %28, 127
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %71

34:                                               ; preds = %30
  %35 = sext i8 %28 to i32
  %36 = and i32 %35, -32
  %37 = icmp eq i32 %36, -64
  br i1 %37, label %46, label %38

38:                                               ; preds = %34
  %39 = and i32 %35, -16
  %40 = icmp eq i32 %39, -32
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = and i32 %35, -8
  %43 = icmp eq i32 %42, -16
  %44 = select i1 %43, i32 %25, i32 2
  %45 = select i1 %43, i32 3, i32 %26
  br label %46

46:                                               ; preds = %41, %38, %34
  %47 = phi i32 [ %25, %34 ], [ %25, %38 ], [ %44, %41 ]
  %48 = phi i32 [ 1, %34 ], [ 2, %38 ], [ %45, %41 ]
  %49 = icmp sgt i32 %48, 0
  %50 = icmp slt i32 %27, 256
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %71

52:                                               ; preds = %46, %58
  %53 = phi i64 [ %56, %58 ], [ %24, %46 ]
  %54 = phi i32 [ %65, %58 ], [ 0, %46 ]
  %55 = phi i32 [ %64, %58 ], [ %47, %46 ]
  %56 = add nsw i64 %53, 1
  %57 = icmp eq i64 %56, 256
  br i1 %57, label %147, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds i8, i8* %1, i64 %56
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, -64
  %62 = icmp eq i8 %61, -128
  %63 = or i32 %55, 2
  %64 = select i1 %62, i32 %55, i32 %63
  %65 = add nuw nsw i32 %54, 1
  %66 = icmp slt i32 %65, %48
  %67 = icmp slt i64 %56, 256
  %68 = and i1 %67, %66
  br i1 %68, label %52, label %69

69:                                               ; preds = %58
  %70 = trunc i64 %56 to i32
  br label %71

71:                                               ; preds = %69, %46, %30
  %72 = phi i32 [ %48, %46 ], [ %48, %69 ], [ 0, %30 ]
  %73 = phi i32 [ %47, %46 ], [ %64, %69 ], [ %25, %30 ]
  %74 = phi i32 [ %27, %46 ], [ %70, %69 ], [ %27, %30 ]
  %75 = add nsw i32 %74, 1
  %76 = icmp slt i32 %74, 256
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = sext i32 %75 to i64
  %79 = getelementptr inbounds i8, i8* %1, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = sext i32 %75 to i64
  %82 = icmp eq i8 %80, 0
  br i1 %82, label %83, label %23

83:                                               ; preds = %71, %77
  %84 = icmp eq i32 %73, 0
  br i1 %84, label %85, label %147

85:                                               ; preds = %83
  %86 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %22, i64 0, i32 19, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %108, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %22, i64 0, i32 19, i32 2
  %91 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %90, align 8
  %92 = zext i32 %87 to i64
  br label %95

93:                                               ; preds = %95
  %94 = icmp eq %struct.loader_device_extension_list* %102, null
  br i1 %94, label %108, label %105

95:                                               ; preds = %89, %95
  %96 = phi i64 [ 0, %89 ], [ %103, %95 ]
  %97 = phi %struct.loader_device_extension_list* [ null, %89 ], [ %102, %95 ]
  %98 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %91, i64 %96, i32 0, i32 0, i64 0
  %99 = tail call i32 @strcmp(i8* %98, i8* nonnull %1) #15
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %91, i64 %96, i32 7
  %102 = select i1 %100, %struct.loader_device_extension_list* %101, %struct.loader_device_extension_list* %97
  %103 = add nuw nsw i64 %96, 1
  %104 = icmp ult i64 %103, %92
  br i1 %104, label %95, label %93

105:                                              ; preds = %93
  %106 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %102, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  br label %108

108:                                              ; preds = %85, %93, %105
  %109 = phi %struct.loader_device_extension_list* [ %102, %105 ], [ null, %93 ], [ null, %85 ]
  %110 = phi i32 [ %107, %105 ], [ 0, %93 ], [ 0, %85 ]
  %111 = icmp eq %struct.VkExtensionProperties* %3, null
  br i1 %111, label %112, label %113

112:                                              ; preds = %108
  store i32 %110, i32* %2, align 4
  br label %451

113:                                              ; preds = %108
  %114 = load i32, i32* %2, align 4
  %115 = icmp ult i32 %114, %110
  %116 = select i1 %115, i32 %114, i32 %110
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %132, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %109, i64 0, i32 2
  %120 = zext i32 %116 to i64
  %121 = and i64 %120, 1
  %122 = icmp eq i32 %116, 1
  br i1 %122, label %125, label %123

123:                                              ; preds = %118
  %124 = sub nsw i64 %120, %121
  br label %134

125:                                              ; preds = %134, %118
  %126 = phi i64 [ 0, %118 ], [ %144, %134 ]
  %127 = icmp eq i64 %121, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %126, i32 0, i64 0
  %130 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %119, align 8
  %131 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %130, i64 %126, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %129, i8* align 8 %131, i64 260, i1 false)
  br label %132

132:                                              ; preds = %128, %125, %113
  store i32 %116, i32* %2, align 4
  %133 = select i1 %115, i32 5, i32 0
  br label %451

134:                                              ; preds = %134, %123
  %135 = phi i64 [ 0, %123 ], [ %144, %134 ]
  %136 = phi i64 [ %124, %123 ], [ %145, %134 ]
  %137 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %135, i32 0, i64 0
  %138 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %119, align 8
  %139 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %138, i64 %135, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 8 %139, i64 260, i1 false)
  %140 = or i64 %135, 1
  %141 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %140, i32 0, i64 0
  %142 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %119, align 8
  %143 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %142, i64 %140, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 8 %143, i64 260, i1 false)
  %144 = add nuw nsw i64 %135, 2
  %145 = add i64 %136, -2
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %125, label %134

147:                                              ; preds = %23, %52, %83
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %22, i32 8, i32 undef, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1035, i64 0, i64 0))
  br label %451

148:                                              ; preds = %15, %4
  %149 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %13, i64 0, i32 1
  %150 = load %struct.loader_icd_term*, %struct.loader_icd_term** %149, align 8
  %151 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #9
  %152 = load i32, i32* %2, align 4
  store i32 %152, i32* %9, align 4
  %153 = icmp eq %struct.VkExtensionProperties* %3, null
  br i1 %153, label %154, label %182

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 4, i32 12
  %156 = load i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %155, align 8
  %157 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %13, i64 0, i32 3
  %158 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %157, align 8
  %159 = call i32 %156(%struct.VkPhysicalDevice_T* %158, i8* null, i32* nonnull %9, %struct.VkExtensionProperties* null) #9
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %372

161:                                              ; preds = %154
  %162 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 1
  %163 = load %struct.loader_instance*, %struct.loader_instance** %162, align 8
  %164 = load i32, i32* %9, align 4
  %165 = zext i32 %164 to i64
  %166 = mul nuw nsw i64 %165, 260
  %167 = icmp eq %struct.loader_instance* %163, null
  br i1 %167, label %176, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %163, i64 0, i32 33, i32 1
  %170 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %169, align 8
  %171 = icmp eq i8* (i8*, i64, i64, i32)* %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %163, i64 0, i32 33, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = call i8* %170(i8* %174, i64 %166, i64 8, i32 0) #9
  br label %178

176:                                              ; preds = %168, %161
  %177 = call noalias i8* @malloc(i64 %166) #9
  br label %178

178:                                              ; preds = %172, %176
  %179 = phi i8* [ %175, %172 ], [ %177, %176 ]
  %180 = bitcast i8* %179 to %struct.VkExtensionProperties*
  %181 = icmp eq i8* %179, null
  br i1 %181, label %372, label %182

182:                                              ; preds = %178, %148
  %183 = phi %struct.VkExtensionProperties* [ %180, %178 ], [ %3, %148 ]
  %184 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 4, i32 12
  %185 = load i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %184, align 8
  %186 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %13, i64 0, i32 3
  %187 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %186, align 8
  %188 = call i32 %185(%struct.VkPhysicalDevice_T* %187, i8* null, i32* nonnull %9, %struct.VkExtensionProperties* %183) #9
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %372

190:                                              ; preds = %182
  %191 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 1
  %192 = load %struct.loader_instance*, %struct.loader_instance** %191, align 8
  %193 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 0
  store i64 382464, i64* %193, align 8
  %194 = icmp eq %struct.loader_instance* %192, null
  br i1 %194, label %203, label %195

195:                                              ; preds = %190
  %196 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %192, i64 0, i32 33, i32 1
  %197 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %196, align 8
  %198 = icmp eq i8* (i8*, i64, i64, i32)* %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %192, i64 0, i32 33, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = call i8* %197(i8* %201, i64 382464, i64 8, i32 4) #9
  br label %205

203:                                              ; preds = %195, %190
  %204 = call noalias i8* @malloc(i64 382464) #9
  br label %205

205:                                              ; preds = %203, %199
  %206 = phi i8* [ %202, %199 ], [ %204, %203 ]
  %207 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 2
  %208 = bitcast %struct.loader_layer_properties** %207 to i8**
  store i8* %206, i8** %208, align 8
  %209 = icmp eq i8* %206, null
  br i1 %209, label %372, label %210

210:                                              ; preds = %205
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 0, i64 382464, i1 false) #9
  %211 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 1
  store i32 0, i32* %211, align 8
  %212 = load %struct.loader_instance*, %struct.loader_instance** %191, align 8
  %213 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %212, i64 0, i32 19
  %214 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %212, i64 0, i32 19, i32 1
  %215 = load i32, i32* %214, align 8
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %237, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %212, i64 0, i32 19, i32 2
  br label %219

219:                                              ; preds = %230, %217
  %220 = phi i32 [ %215, %217 ], [ %231, %230 ]
  %221 = phi i64 [ 0, %217 ], [ %232, %230 ]
  %222 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %218, align 8
  %223 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %222, i64 %221, i32 1
  %224 = load i32, i32* %223, align 8
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %219
  %228 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %222, i64 %221
  call fastcc void @loaderAddImplicitLayer(%struct.loader_instance* %212, %struct.loader_layer_properties* %228, %struct.loader_layer_list* nonnull %6, %struct.loader_layer_list* null, %struct.loader_layer_list* %213) #9
  %229 = load i32, i32* %214, align 8
  br label %230

230:                                              ; preds = %227, %219
  %231 = phi i32 [ %229, %227 ], [ %220, %219 ]
  %232 = add nuw nsw i64 %221, 1
  %233 = zext i32 %231 to i64
  %234 = icmp ult i64 %232, %233
  br i1 %234, label %219, label %235

235:                                              ; preds = %230
  %236 = load %struct.loader_instance*, %struct.loader_instance** %191, align 8
  br label %237

237:                                              ; preds = %235, %210
  %238 = phi %struct.loader_instance* [ %236, %235 ], [ %212, %210 ]
  %239 = load i32, i32* %9, align 4
  %240 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 1
  store i32 0, i32* %240, align 8
  %241 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 0
  store i64 0, i64* %241, align 8
  %242 = icmp eq %struct.loader_instance* %238, null
  br i1 %242, label %251, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %238, i64 0, i32 33, i32 1
  %245 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %244, align 8
  %246 = icmp eq i8* (i8*, i64, i64, i32)* %245, null
  br i1 %246, label %251, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %238, i64 0, i32 33, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = call i8* %245(i8* %249, i64 8320, i64 8, i32 4) #9
  br label %253

251:                                              ; preds = %243, %237
  %252 = call noalias i8* @malloc(i64 8320) #9
  br label %253

253:                                              ; preds = %251, %247
  %254 = phi i8* [ %250, %247 ], [ %252, %251 ]
  %255 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 2
  %256 = bitcast %struct.VkExtensionProperties** %255 to i8**
  store i8* %254, i8** %256, align 8
  %257 = icmp eq i8* %254, null
  br i1 %257, label %258, label %259

258:                                              ; preds = %253
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %238, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0)) #9
  br label %372

259:                                              ; preds = %253
  %260 = bitcast i8* %254 to %struct.VkExtensionProperties*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %254, i8 0, i64 8320, i1 false) #9
  store i64 8320, i64* %241, align 8
  %261 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %262 = icmp eq i32 %239, 0
  br i1 %262, label %289, label %263

263:                                              ; preds = %259
  %264 = zext i32 %239 to i64
  br label %267

265:                                              ; preds = %267
  %266 = icmp eq i64 %285, %264
  br i1 %266, label %286, label %267

267:                                              ; preds = %265, %263
  %268 = phi i64 [ 0, %263 ], [ %285, %265 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %261) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %261, i8 -86, i64 64, i1 false) #9
  %269 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %183, i64 %268
  %270 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %183, i64 %268, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = lshr i32 %271, 22
  %273 = lshr i32 %271, 12
  %274 = and i32 %273, 1023
  %275 = and i32 %271, 4095
  %276 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %261, i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.930, i64 0, i64 0), i32 %272, i32 %274, i32 %275) #9
  %277 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %269, i64 0, i32 0, i64 0
  %278 = load %struct.loader_icd_term*, %struct.loader_icd_term** %149, align 8
  %279 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %278, i64 0, i32 0
  %280 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %279, align 8
  %281 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %280, i64 0, i32 0
  %282 = load i8*, i8** %281, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %238, i32 16, i32 undef, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.931, i64 0, i64 0), i8* %277, i8* %282, i8* nonnull %261) #9
  %283 = call i32 @loader_add_to_ext_list(%struct.loader_instance* %238, %struct.loader_extension_list* nonnull %8, i32 1, %struct.VkExtensionProperties* %269) #9
  %284 = icmp eq i32 %283, 0
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %261) #9
  %285 = add nuw nsw i64 %268, 1
  br i1 %284, label %265, label %372

286:                                              ; preds = %265
  %287 = load i32, i32* %240, align 8
  %288 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %255, align 8
  br label %289

289:                                              ; preds = %286, %259
  %290 = phi %struct.VkExtensionProperties* [ %288, %286 ], [ %260, %259 ]
  %291 = phi i32 [ %287, %286 ], [ 0, %259 ]
  %292 = load %struct.loader_instance*, %struct.loader_instance** %191, align 8
  %293 = call i32 @loader_add_to_ext_list(%struct.loader_instance* %292, %struct.loader_extension_list* nonnull %7, i32 %291, %struct.VkExtensionProperties* %290)
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %372

295:                                              ; preds = %289
  %296 = load %struct.loader_instance*, %struct.loader_instance** %191, align 8
  %297 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %296, i64 0, i32 19
  %298 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %296, i64 0, i32 19, i32 1
  %299 = load i32, i32* %298, align 8
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %319, label %301

301:                                              ; preds = %295
  %302 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %296, i64 0, i32 19, i32 2
  br label %303

303:                                              ; preds = %314, %301
  %304 = phi i32 [ %299, %301 ], [ %315, %314 ]
  %305 = phi i64 [ 0, %301 ], [ %316, %314 ]
  %306 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %302, align 8
  %307 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %306, i64 %305, i32 1
  %308 = load i32, i32* %307, align 8
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %314

311:                                              ; preds = %303
  %312 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %306, i64 %305
  call fastcc void @loaderAddImplicitLayer(%struct.loader_instance* %296, %struct.loader_layer_properties* %312, %struct.loader_layer_list* nonnull %6, %struct.loader_layer_list* null, %struct.loader_layer_list* %297) #9
  %313 = load i32, i32* %298, align 8
  br label %314

314:                                              ; preds = %311, %303
  %315 = phi i32 [ %313, %311 ], [ %304, %303 ]
  %316 = add nuw nsw i64 %305, 1
  %317 = zext i32 %315 to i64
  %318 = icmp ult i64 %316, %317
  br i1 %318, label %303, label %319

319:                                              ; preds = %314, %295
  %320 = load i32, i32* %211, align 8
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %347, label %322

322:                                              ; preds = %319
  %323 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %207, align 8
  %324 = zext i32 %320 to i64
  br label %325

325:                                              ; preds = %322, %344
  %326 = phi i64 [ 0, %322 ], [ %345, %344 ]
  %327 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %323, i64 %326, i32 7, i32 1
  %328 = load i32, i32* %327, align 8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %344, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %323, i64 %326, i32 7, i32 2
  br label %336

332:                                              ; preds = %336
  %333 = load i32, i32* %327, align 8
  %334 = zext i32 %333 to i64
  %335 = icmp ult i64 %343, %334
  br i1 %335, label %336, label %344

336:                                              ; preds = %330, %332
  %337 = phi i64 [ 0, %330 ], [ %343, %332 ]
  %338 = load %struct.loader_instance*, %struct.loader_instance** %191, align 8
  %339 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %331, align 8
  %340 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %339, i64 %337, i32 0
  %341 = call i32 @loader_add_to_ext_list(%struct.loader_instance* %338, %struct.loader_extension_list* nonnull %7, i32 1, %struct.VkExtensionProperties* %340)
  %342 = icmp eq i32 %341, 0
  %343 = add nuw nsw i64 %337, 1
  br i1 %342, label %332, label %372

344:                                              ; preds = %332, %325
  %345 = add nuw nsw i64 %326, 1
  %346 = icmp ult i64 %345, %324
  br i1 %346, label %325, label %347

347:                                              ; preds = %344, %319
  %348 = load i32, i32* %2, align 4
  %349 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %7, i64 0, i32 1
  %350 = load i32, i32* %349, align 8
  br i1 %153, label %371, label %351

351:                                              ; preds = %347
  %352 = icmp ne i32 %350, 0
  %353 = icmp ne i32 %348, 0
  %354 = and i1 %353, %352
  br i1 %354, label %355, label %360

355:                                              ; preds = %351
  %356 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %7, i64 0, i32 2
  %357 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %356, align 8
  %358 = zext i32 %348 to i64
  %359 = zext i32 %350 to i64
  br label %362

360:                                              ; preds = %362, %351
  %361 = icmp ult i32 %348, %350
  br i1 %361, label %372, label %370

362:                                              ; preds = %355, %362
  %363 = phi i64 [ 0, %355 ], [ %366, %362 ]
  %364 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %363, i32 0, i64 0
  %365 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %357, i64 %363, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %364, i8* align 4 %365, i64 260, i1 false)
  %366 = add nuw nsw i64 %363, 1
  %367 = icmp ult i64 %366, %359
  %368 = icmp ult i64 %366, %358
  %369 = and i1 %368, %367
  br i1 %369, label %362, label %360

370:                                              ; preds = %360
  store i32 %350, i32* %2, align 4
  br label %372

371:                                              ; preds = %347
  store i32 %350, i32* %2, align 4
  br label %372

372:                                              ; preds = %267, %336, %258, %205, %360, %178, %154, %289, %182, %371, %370
  %373 = phi %struct.VkExtensionProperties* [ null, %154 ], [ %183, %182 ], [ %183, %289 ], [ %183, %370 ], [ %183, %371 ], [ null, %178 ], [ %183, %360 ], [ %183, %205 ], [ %183, %258 ], [ %183, %336 ], [ %183, %267 ]
  %374 = phi i32 [ %159, %154 ], [ %188, %182 ], [ %293, %289 ], [ 0, %370 ], [ 0, %371 ], [ -1, %178 ], [ 5, %360 ], [ -1, %205 ], [ -1, %258 ], [ %341, %336 ], [ %283, %267 ]
  %375 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 2
  %376 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %375, align 8
  %377 = icmp eq %struct.loader_layer_properties* %376, null
  %378 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %376, i64 0, i32 0, i32 0, i64 0
  br i1 %377, label %394, label %379

379:                                              ; preds = %372
  %380 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 1
  %381 = load %struct.loader_instance*, %struct.loader_instance** %380, align 8
  %382 = icmp eq %struct.loader_instance* %381, null
  br i1 %382, label %390, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %381, i64 0, i32 33, i32 3
  %385 = load void (i8*, i8*)*, void (i8*, i8*)** %384, align 8
  %386 = icmp eq void (i8*, i8*)* %385, null
  br i1 %386, label %390, label %387

387:                                              ; preds = %383
  %388 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %381, i64 0, i32 33, i32 0
  %389 = load i8*, i8** %388, align 8
  call void %385(i8* %389, i8* nonnull %378) #9
  br label %391

390:                                              ; preds = %383, %379
  call void @free(i8* nonnull %378) #9
  br label %391

391:                                              ; preds = %387, %390
  %392 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 1
  store i32 0, i32* %392, align 8
  %393 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 0
  store i64 0, i64* %393, align 8
  br label %394

394:                                              ; preds = %372, %391
  %395 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %7, i64 0, i32 2
  %396 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %395, align 8
  %397 = icmp eq %struct.VkExtensionProperties* %396, null
  %398 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %396, i64 0, i32 0, i64 0
  br i1 %397, label %414, label %399

399:                                              ; preds = %394
  %400 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 1
  %401 = load %struct.loader_instance*, %struct.loader_instance** %400, align 8
  %402 = icmp eq %struct.loader_instance* %401, null
  br i1 %402, label %410, label %403

403:                                              ; preds = %399
  %404 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %401, i64 0, i32 33, i32 3
  %405 = load void (i8*, i8*)*, void (i8*, i8*)** %404, align 8
  %406 = icmp eq void (i8*, i8*)* %405, null
  br i1 %406, label %410, label %407

407:                                              ; preds = %403
  %408 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %401, i64 0, i32 33, i32 0
  %409 = load i8*, i8** %408, align 8
  call void %405(i8* %409, i8* nonnull %398) #9
  br label %411

410:                                              ; preds = %403, %399
  call void @free(i8* nonnull %398) #9
  br label %411

411:                                              ; preds = %407, %410
  %412 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %7, i64 0, i32 1
  store i32 0, i32* %412, align 8
  %413 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %7, i64 0, i32 0
  store i64 0, i64* %413, align 8
  br label %414

414:                                              ; preds = %394, %411
  %415 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 2
  %416 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %415, align 8
  %417 = icmp eq %struct.VkExtensionProperties* %416, null
  %418 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %416, i64 0, i32 0, i64 0
  br i1 %417, label %434, label %419

419:                                              ; preds = %414
  %420 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 1
  %421 = load %struct.loader_instance*, %struct.loader_instance** %420, align 8
  %422 = icmp eq %struct.loader_instance* %421, null
  br i1 %422, label %430, label %423

423:                                              ; preds = %419
  %424 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %421, i64 0, i32 33, i32 3
  %425 = load void (i8*, i8*)*, void (i8*, i8*)** %424, align 8
  %426 = icmp eq void (i8*, i8*)* %425, null
  br i1 %426, label %430, label %427

427:                                              ; preds = %423
  %428 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %421, i64 0, i32 33, i32 0
  %429 = load i8*, i8** %428, align 8
  call void %425(i8* %429, i8* nonnull %418) #9
  br label %431

430:                                              ; preds = %423, %419
  call void @free(i8* nonnull %418) #9
  br label %431

431:                                              ; preds = %427, %430
  %432 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 1
  store i32 0, i32* %432, align 8
  %433 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 0
  store i64 0, i64* %433, align 8
  br label %434

434:                                              ; preds = %414, %431
  %435 = icmp ne %struct.VkExtensionProperties* %373, null
  %436 = and i1 %153, %435
  br i1 %436, label %437, label %450

437:                                              ; preds = %434
  %438 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %150, i64 0, i32 1
  %439 = load %struct.loader_instance*, %struct.loader_instance** %438, align 8
  %440 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %373, i64 0, i32 0, i64 0
  %441 = icmp eq %struct.loader_instance* %439, null
  br i1 %441, label %449, label %442

442:                                              ; preds = %437
  %443 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %439, i64 0, i32 33, i32 3
  %444 = load void (i8*, i8*)*, void (i8*, i8*)** %443, align 8
  %445 = icmp eq void (i8*, i8*)* %444, null
  br i1 %445, label %449, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %439, i64 0, i32 33, i32 0
  %448 = load i8*, i8** %447, align 8
  call void %444(i8* %448, i8* nonnull %440) #9
  br label %450

449:                                              ; preds = %442, %437
  call void @free(i8* nonnull %440) #9
  br label %450

450:                                              ; preds = %449, %446, %434
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #9
  br label %451

451:                                              ; preds = %112, %147, %132, %450
  %452 = phi i32 [ %374, %450 ], [ 0, %112 ], [ -7, %147 ], [ %133, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  ret i32 %452
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_EnumerateDeviceLayerProperties(%struct.VkPhysicalDevice_T* nocapture readonly, i32* nocapture readnone, %struct.VkLayerProperties* nocapture readnone) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %8 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %8, i32 8, i32 undef, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.1034, i64 0, i64 0))
  ret i32 -3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceSparseImageFormatProperties(%struct.VkPhysicalDevice_T* nocapture readonly, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*) #0 {
  %9 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %10 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %9, i64 0, i32 1
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %11, i64 0, i32 4, i32 14
  %13 = load void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)** %12, align 8
  %14 = icmp eq void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %9, i64 0, i32 3
  %17 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %16, align 8
  tail call void %13(%struct.VkPhysicalDevice_T* %17, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32* %6, %struct.VkSparseImageFormatProperties* %7) #9
  br label %18

18:                                               ; preds = %8, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_EnumeratePhysicalDeviceGroups(%struct.VkInstance_T*, i32* nocapture, %struct.VkPhysicalDeviceGroupProperties*) #0 {
  %4 = bitcast %struct.VkInstance_T* %0 to %struct.loader_instance*
  %5 = tail call i32 @setupLoaderTermPhysDevGroups(%struct.loader_instance* %4)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %56

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %4, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq %struct.VkPhysicalDeviceGroupProperties* %2, null
  br i1 %10, label %53, label %11

11:                                               ; preds = %7
  %12 = load i32, i32* %1, align 4
  %13 = icmp ugt i32 %9, %12
  %14 = select i1 %13, i32 5, i32 0
  %15 = select i1 %13, i32 %12, i32 %9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %53, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %4, i64 0, i32 9
  %19 = zext i32 %15 to i64
  %20 = and i64 %19, 1
  %21 = icmp eq i32 %15, 1
  br i1 %21, label %43, label %22

22:                                               ; preds = %17
  %23 = sub nsw i64 %19, %20
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ 0, %22 ], [ %40, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %41, %24 ]
  %27 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %2, i64 %25
  %28 = bitcast %struct.VkPhysicalDeviceGroupProperties* %27 to i8*
  %29 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %18, align 8
  %30 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %29, i64 %25
  %31 = bitcast %struct.VkPhysicalDeviceGroupProperties** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %32, i64 288, i1 false)
  %33 = or i64 %25, 1
  %34 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %2, i64 %33
  %35 = bitcast %struct.VkPhysicalDeviceGroupProperties* %34 to i8*
  %36 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %18, align 8
  %37 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %36, i64 %33
  %38 = bitcast %struct.VkPhysicalDeviceGroupProperties** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %39, i64 288, i1 false)
  %40 = add nuw nsw i64 %25, 2
  %41 = add i64 %26, -2
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %24

43:                                               ; preds = %24, %17
  %44 = phi i64 [ 0, %17 ], [ %40, %24 ]
  %45 = icmp eq i64 %20, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %2, i64 %44
  %48 = bitcast %struct.VkPhysicalDeviceGroupProperties* %47 to i8*
  %49 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %18, align 8
  %50 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %49, i64 %44
  %51 = bitcast %struct.VkPhysicalDeviceGroupProperties** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %52, i64 288, i1 false)
  br label %53

53:                                               ; preds = %46, %43, %11, %7
  %54 = phi i32 [ 0, %7 ], [ %14, %11 ], [ %14, %43 ], [ %14, %46 ]
  %55 = phi i32 [ %9, %7 ], [ 0, %11 ], [ %15, %43 ], [ %15, %46 ]
  store i32 %55, i32* %1, align 4
  br label %56

56:                                               ; preds = %3, %53
  %57 = phi i32 [ %5, %3 ], [ %54, %53 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceFeatures2(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceFeatures2*) #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %4 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 1
  %5 = load %struct.loader_icd_term*, %struct.loader_icd_term** %4, align 8
  %6 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 1
  %7 = load %struct.loader_instance*, %struct.loader_instance** %6, align 8
  %8 = icmp eq %struct.loader_instance* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 25
  %11 = bitcast %union.loader_instance_extension_enables* %10 to i16*
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 47
  br label %19

17:                                               ; preds = %9, %2
  %18 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 17
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** [ %16, %15 ], [ %18, %17 ]
  %21 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %20, align 8
  %22 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* %21, null
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 25
  %25 = bitcast %union.loader_instance_extension_enables* %24 to i16*
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %31 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %30, align 8
  tail call void %21(%struct.VkPhysicalDevice_T* %31, %struct.VkPhysicalDeviceFeatures2* %1) #9
  br label %63

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 0
  %34 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %33, align 8
  %35 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %7, i32 1, i32 undef, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.1045, i64 0, i64 0), i8* %36)
  %37 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 3
  %38 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)** %37, align 8
  %39 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %40 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %39, align 8
  %41 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %1, i64 0, i32 2
  tail call void %38(%struct.VkPhysicalDevice_T* %40, %struct.VkPhysicalDeviceFeatures* %41) #9
  %42 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %1, i64 0, i32 1
  %43 = bitcast i8** %42 to %struct.VkBaseInStructure**
  %44 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %43, align 8
  %45 = icmp eq %struct.VkBaseInStructure* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %32, %59
  %47 = phi %struct.VkBaseInStructure* [ %61, %59 ], [ %44, %32 ]
  %48 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 1000053001
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = bitcast %struct.VkBaseInStructure* %47 to %struct.VkPhysicalDeviceMultiviewFeatures*
  %53 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %47, i64 1, i32 0
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %struct.VkPhysicalDeviceMultiviewFeatures, %struct.VkPhysicalDeviceMultiviewFeatures* %52, i64 0, i32 3
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %47, i64 1, i32 1
  %56 = bitcast %struct.VkBaseInStructure** %55 to i32*
  store i32 0, i32* %56, align 8
  br label %59

57:                                               ; preds = %46
  %58 = load %struct.loader_instance*, %struct.loader_instance** %6, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %58, i32 2, i32 undef, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.1046, i64 0, i64 0))
  br label %59

59:                                               ; preds = %57, %51
  %60 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %47, i64 0, i32 1
  %61 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %60, align 8
  %62 = icmp eq %struct.VkBaseInStructure* %61, null
  br i1 %62, label %63, label %46

63:                                               ; preds = %59, %32, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceProperties2(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceProperties2*) #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %4 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 1
  %5 = load %struct.loader_icd_term*, %struct.loader_icd_term** %4, align 8
  %6 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 1
  %7 = load %struct.loader_instance*, %struct.loader_instance** %6, align 8
  %8 = icmp eq %struct.loader_instance* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 25
  %11 = bitcast %union.loader_instance_extension_enables* %10 to i16*
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 48
  br label %19

17:                                               ; preds = %9, %2
  %18 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 18
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** [ %16, %15 ], [ %18, %17 ]
  %21 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %20, align 8
  %22 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* %21, null
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 25
  %25 = bitcast %union.loader_instance_extension_enables* %24 to i16*
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %31 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %30, align 8
  tail call void %21(%struct.VkPhysicalDevice_T* %31, %struct.VkPhysicalDeviceProperties2* %1) #9
  br label %68

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 0
  %34 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %33, align 8
  %35 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %7, i32 1, i32 undef, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1047, i64 0, i64 0), i8* %36)
  %37 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 6
  %38 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %37, align 8
  %39 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %40 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %39, align 8
  %41 = getelementptr inbounds %struct.VkPhysicalDeviceProperties2, %struct.VkPhysicalDeviceProperties2* %1, i64 0, i32 2
  tail call void %38(%struct.VkPhysicalDevice_T* %40, %struct.VkPhysicalDeviceProperties* %41) #9
  %42 = getelementptr inbounds %struct.VkPhysicalDeviceProperties2, %struct.VkPhysicalDeviceProperties2* %1, i64 0, i32 1
  %43 = bitcast i8** %42 to %struct.VkBaseInStructure**
  %44 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %43, align 8
  %45 = icmp eq %struct.VkBaseInStructure* %44, null
  br i1 %45, label %68, label %46

46:                                               ; preds = %32, %64
  %47 = phi %struct.VkBaseInStructure* [ %66, %64 ], [ %44, %32 ]
  %48 = bitcast %struct.VkBaseInStructure* %47 to %struct.VkPhysicalDeviceIDProperties*
  %49 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %47, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1000071004
  %52 = load %struct.loader_instance*, %struct.loader_instance** %6, align 8
  br i1 %51, label %53, label %63

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %52, i64 0, i32 25
  %55 = bitcast %union.loader_instance_extension_enables* %54 to i16*
  %56 = load i16, i16* %55, align 8
  %57 = and i16 %56, 4
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %53
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %52, i32 2, i32 undef, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.1048, i64 0, i64 0))
  %60 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %47, i64 1
  %61 = getelementptr inbounds %struct.VkPhysicalDeviceIDProperties, %struct.VkPhysicalDeviceIDProperties* %48, i64 0, i32 6
  %62 = bitcast %struct.VkBaseInStructure* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false)
  store i32 0, i32* %61, align 4
  br label %64

63:                                               ; preds = %46
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %52, i32 2, i32 undef, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.1049, i64 0, i64 0))
  br label %64

64:                                               ; preds = %59, %53, %63
  %65 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %47, i64 0, i32 1
  %66 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %65, align 8
  %67 = icmp eq %struct.VkBaseInStructure* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %64, %32, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceFormatProperties2(%struct.VkPhysicalDevice_T* nocapture readonly, i32, %struct.VkFormatProperties2*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %8 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  %9 = icmp eq %struct.loader_instance* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %12 = bitcast %union.loader_instance_extension_enables* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 49
  br label %20

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 19
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** [ %17, %16 ], [ %19, %18 ]
  %22 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %21, align 8
  %23 = icmp eq void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %26 = bitcast %union.loader_instance_extension_enables* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 1
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %32 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %31, align 8
  tail call void %22(%struct.VkPhysicalDevice_T* %32, i32 %1, %struct.VkFormatProperties2* %2) #9
  br label %48

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 0
  %35 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %34, align 8
  %36 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %8, i32 1, i32 undef, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.1050, i64 0, i64 0), i8* %37)
  %38 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 4
  %39 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)** %38, align 8
  %40 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %41 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %40, align 8
  %42 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %2, i64 0, i32 2
  tail call void %39(%struct.VkPhysicalDevice_T* %41, i32 %1, %struct.VkFormatProperties* %42) #9
  %43 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %2, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %33
  %47 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %47, i32 2, i32 undef, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.1051, i64 0, i64 0))
  br label %48

48:                                               ; preds = %33, %46, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceImageFormatProperties2(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %8 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  %9 = icmp eq %struct.loader_instance* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %12 = bitcast %union.loader_instance_extension_enables* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 50
  br label %20

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 20
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** [ %17, %16 ], [ %19, %18 ]
  %22 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %21, align 8
  %23 = icmp eq i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %26 = bitcast %union.loader_instance_extension_enables* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 1
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %32 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %31, align 8
  %33 = tail call i32 %22(%struct.VkPhysicalDevice_T* %32, %struct.VkPhysicalDeviceImageFormatInfo2* %1, %struct.VkImageFormatProperties2* %2) #9
  br label %63

34:                                               ; preds = %24
  %35 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 0
  %36 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %35, align 8
  %37 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %8, i32 1, i32 undef, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.1052, i64 0, i64 0), i8* %38)
  %39 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %63

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %2, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %63

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 5
  %48 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)** %47, align 8
  %49 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %50 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %49, align 8
  %51 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 6
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %2, i64 0, i32 2
  %62 = tail call i32 %48(%struct.VkPhysicalDevice_T* %50, i32 %52, i32 %54, i32 %56, i32 %58, i32 %60, %struct.VkImageFormatProperties* %61) #9
  br label %63

63:                                               ; preds = %34, %42, %46, %30
  %64 = phi i32 [ %33, %30 ], [ %62, %46 ], [ -11, %42 ], [ -11, %34 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceQueueFamilyProperties2(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkQueueFamilyProperties2*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %8 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  %9 = icmp eq %struct.loader_instance* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %12 = bitcast %union.loader_instance_extension_enables* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 51
  br label %20

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 21
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** [ %17, %16 ], [ %19, %18 ]
  %22 = load void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)** %21, align 8
  %23 = icmp eq void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %26 = bitcast %union.loader_instance_extension_enables* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 1
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %32 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %31, align 8
  tail call void %22(%struct.VkPhysicalDevice_T* %32, i32* %1, %struct.VkQueueFamilyProperties2* %2) #9
  br label %75

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 0
  %35 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %34, align 8
  %36 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %8, i32 1, i32 undef, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.1053, i64 0, i64 0), i8* %37)
  %38 = icmp eq %struct.VkQueueFamilyProperties2* %2, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = load i32, i32* %1, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39, %33
  %43 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 7
  %44 = load void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %43, align 8
  %45 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %46 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %45, align 8
  tail call void %44(%struct.VkPhysicalDevice_T* %46, i32* %1, %struct.VkQueueFamilyProperties* null) #9
  br label %75

47:                                               ; preds = %39
  %48 = zext i32 %40 to i64
  %49 = mul nuw nsw i64 %48, 24
  %50 = alloca %struct.VkQueueFamilyProperties, i64 %48, align 16
  %51 = bitcast %struct.VkQueueFamilyProperties* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 %49, i1 false)
  %52 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 7
  %53 = load void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %52, align 8
  %54 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %55 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %54, align 8
  call void %53(%struct.VkPhysicalDevice_T* %55, i32* %1, %struct.VkQueueFamilyProperties* nonnull %50) #9
  %56 = load i32, i32* %1, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %75, label %58

58:                                               ; preds = %47, %70
  %59 = phi i64 [ %71, %70 ], [ 0, %47 ]
  %60 = getelementptr inbounds %struct.VkQueueFamilyProperties2, %struct.VkQueueFamilyProperties2* %2, i64 %59, i32 2
  %61 = bitcast %struct.VkQueueFamilyProperties* %60 to i8*
  %62 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %50, i64 %59
  %63 = bitcast %struct.VkQueueFamilyProperties* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %63, i64 24, i1 false)
  %64 = getelementptr inbounds %struct.VkQueueFamilyProperties2, %struct.VkQueueFamilyProperties2* %2, i64 %59, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %58
  %68 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  %69 = trunc i64 %59 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %68, i32 2, i32 undef, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.1055, i64 0, i64 0), i32 %69)
  br label %70

70:                                               ; preds = %58, %67
  %71 = add nuw nsw i64 %59, 1
  %72 = load i32, i32* %1, align 4
  %73 = zext i32 %72 to i64
  %74 = icmp ult i64 %71, %73
  br i1 %74, label %58, label %75

75:                                               ; preds = %70, %47, %30, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceMemoryProperties2(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceMemoryProperties2*) #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %4 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 1
  %5 = load %struct.loader_icd_term*, %struct.loader_icd_term** %4, align 8
  %6 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 1
  %7 = load %struct.loader_instance*, %struct.loader_instance** %6, align 8
  %8 = icmp eq %struct.loader_instance* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 25
  %11 = bitcast %union.loader_instance_extension_enables* %10 to i16*
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 52
  br label %19

17:                                               ; preds = %9, %2
  %18 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 22
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** [ %16, %15 ], [ %18, %17 ]
  %21 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %20, align 8
  %22 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* %21, null
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 25
  %25 = bitcast %union.loader_instance_extension_enables* %24 to i16*
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %31 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %30, align 8
  tail call void %21(%struct.VkPhysicalDevice_T* %31, %struct.VkPhysicalDeviceMemoryProperties2* %1) #9
  br label %47

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 0
  %34 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %33, align 8
  %35 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %7, i32 1, i32 undef, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.1056, i64 0, i64 0), i8* %36)
  %37 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 8
  %38 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %37, align 8
  %39 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %40 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %39, align 8
  %41 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties2, %struct.VkPhysicalDeviceMemoryProperties2* %1, i64 0, i32 2
  tail call void %38(%struct.VkPhysicalDevice_T* %40, %struct.VkPhysicalDeviceMemoryProperties* %41) #9
  %42 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties2, %struct.VkPhysicalDeviceMemoryProperties2* %1, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %32
  %46 = load %struct.loader_instance*, %struct.loader_instance** %6, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %46, i32 2, i32 undef, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.1057, i64 0, i64 0))
  br label %47

47:                                               ; preds = %32, %45, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceSparseImageFormatProperties2(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*) #0 {
  %5 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %6 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 1
  %7 = load %struct.loader_icd_term*, %struct.loader_icd_term** %6, align 8
  %8 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 1
  %9 = load %struct.loader_instance*, %struct.loader_instance** %8, align 8
  %10 = icmp eq %struct.loader_instance* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 25
  %13 = bitcast %union.loader_instance_extension_enables* %12 to i16*
  %14 = load i16, i16* %13, align 8
  %15 = and i16 %14, 1
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 4, i32 53
  br label %21

19:                                               ; preds = %11, %4
  %20 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 4, i32 23
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** [ %18, %17 ], [ %20, %19 ]
  %23 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)** %22, align 8
  %24 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 25
  %27 = bitcast %union.loader_instance_extension_enables* %26 to i16*
  %28 = load i16, i16* %27, align 8
  %29 = and i16 %28, 1
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25, %21
  %32 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 3
  %33 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %32, align 8
  tail call void %23(%struct.VkPhysicalDevice_T* %33, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i32* %2, %struct.VkSparseImageFormatProperties2* %3) #9
  br label %102

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 0
  %36 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %35, align 8
  %37 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %9, i32 1, i32 undef, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.1058, i64 0, i64 0), i8* %38)
  %39 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = load %struct.loader_instance*, %struct.loader_instance** %8, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %43, i32 2, i32 undef, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.1059, i64 0, i64 0))
  br label %44

44:                                               ; preds = %34, %42
  %45 = icmp eq %struct.VkSparseImageFormatProperties2* %3, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %44
  %47 = load i32, i32* %2, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %64

49:                                               ; preds = %46, %44
  %50 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 4, i32 14
  %51 = load void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)** %50, align 8
  %52 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 3
  %53 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %52, align 8
  %54 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 6
  %63 = load i32, i32* %62, align 8
  tail call void %51(%struct.VkPhysicalDevice_T* %53, i32 %55, i32 %57, i32 %59, i32 %61, i32 %63, i32* %2, %struct.VkSparseImageFormatProperties* null) #9
  br label %102

64:                                               ; preds = %46
  %65 = zext i32 %47 to i64
  %66 = mul nuw nsw i64 %65, 48
  %67 = alloca i8, i64 %66, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 %66, i1 false)
  %68 = bitcast i8* %67 to %struct.VkSparseImageFormatProperties*
  %69 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 4, i32 14
  %70 = load void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)** %69, align 8
  %71 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 3
  %72 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %71, align 8
  %73 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 5
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %struct.VkPhysicalDeviceSparseImageFormatInfo2, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i64 0, i32 6
  %82 = load i32, i32* %81, align 8
  call void %70(%struct.VkPhysicalDevice_T* %72, i32 %74, i32 %76, i32 %78, i32 %80, i32 %82, i32* %2, %struct.VkSparseImageFormatProperties* nonnull %68) #9
  %83 = load i32, i32* %2, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %64, %97
  %86 = phi i64 [ %98, %97 ], [ 0, %64 ]
  %87 = getelementptr inbounds %struct.VkSparseImageFormatProperties2, %struct.VkSparseImageFormatProperties2* %3, i64 %86, i32 2
  %88 = bitcast %struct.VkSparseImageFormatProperties* %87 to i8*
  %89 = getelementptr inbounds %struct.VkSparseImageFormatProperties, %struct.VkSparseImageFormatProperties* %68, i64 %86
  %90 = bitcast %struct.VkSparseImageFormatProperties* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %90, i64 20, i1 false)
  %91 = getelementptr inbounds %struct.VkSparseImageFormatProperties2, %struct.VkSparseImageFormatProperties2* %3, i64 %86, i32 1
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %85
  %95 = load %struct.loader_instance*, %struct.loader_instance** %8, align 8
  %96 = trunc i64 %86 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %95, i32 2, i32 undef, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.1061, i64 0, i64 0), i32 %96)
  br label %97

97:                                               ; preds = %85, %94
  %98 = add nuw nsw i64 %86, 1
  %99 = load i32, i32* %2, align 4
  %100 = zext i32 %99 to i64
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %85, label %102

102:                                              ; preds = %97, %64, %31, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceExternalBufferProperties(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %8 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  %9 = icmp eq %struct.loader_instance* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %12 = bitcast %union.loader_instance_extension_enables* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 4
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 55
  br label %20

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 24
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** [ %17, %16 ], [ %19, %18 ]
  %22 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)** %21, align 8
  %23 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %26 = bitcast %union.loader_instance_extension_enables* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 4
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %32 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %31, align 8
  tail call void %22(%struct.VkPhysicalDevice_T* %32, %struct.VkPhysicalDeviceExternalBufferInfo* %1, %struct.VkExternalBufferProperties* %2) #9
  br label %51

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 0
  %35 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %34, align 8
  %36 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %8, i32 1, i32 undef, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1062, i64 0, i64 0), i8* %37)
  %38 = getelementptr inbounds %struct.VkPhysicalDeviceExternalBufferInfo, %struct.VkPhysicalDeviceExternalBufferInfo* %1, i64 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %42, i32 2, i32 undef, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.1063, i64 0, i64 0))
  br label %43

43:                                               ; preds = %33, %41
  %44 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 2
  %45 = bitcast %struct.VkExternalMemoryProperties* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 12, i1 false)
  %46 = getelementptr inbounds %struct.VkExternalBufferProperties, %struct.VkExternalBufferProperties* %2, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %50, i32 2, i32 undef, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.1064, i64 0, i64 0))
  br label %51

51:                                               ; preds = %43, %49, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceExternalFenceProperties(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %8 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  %9 = icmp eq %struct.loader_instance* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %12 = bitcast %union.loader_instance_extension_enables* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 16
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 57
  br label %20

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 25
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** [ %17, %16 ], [ %19, %18 ]
  %22 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)** %21, align 8
  %23 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %26 = bitcast %union.loader_instance_extension_enables* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %32 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %31, align 8
  tail call void %22(%struct.VkPhysicalDevice_T* %32, %struct.VkPhysicalDeviceExternalFenceInfo* %1, %struct.VkExternalFenceProperties* %2) #9
  br label %52

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 0
  %35 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %34, align 8
  %36 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %8, i32 1, i32 undef, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1068, i64 0, i64 0), i8* %37)
  %38 = getelementptr inbounds %struct.VkPhysicalDeviceExternalFenceInfo, %struct.VkPhysicalDeviceExternalFenceInfo* %1, i64 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %42, i32 2, i32 undef, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.1069, i64 0, i64 0))
  br label %43

43:                                               ; preds = %33, %41
  %44 = getelementptr inbounds %struct.VkExternalFenceProperties, %struct.VkExternalFenceProperties* %2, i64 0, i32 2
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VkExternalFenceProperties, %struct.VkExternalFenceProperties* %2, i64 0, i32 3
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %struct.VkExternalFenceProperties, %struct.VkExternalFenceProperties* %2, i64 0, i32 4
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.VkExternalFenceProperties, %struct.VkExternalFenceProperties* %2, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %51, i32 2, i32 undef, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.1070, i64 0, i64 0))
  br label %52

52:                                               ; preds = %43, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @terminator_GetPhysicalDeviceExternalSemaphoreProperties(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*) #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %5 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 1
  %6 = load %struct.loader_icd_term*, %struct.loader_icd_term** %5, align 8
  %7 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 1
  %8 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  %9 = icmp eq %struct.loader_instance* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %12 = bitcast %union.loader_instance_extension_enables* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 8
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 56
  br label %20

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 4, i32 26
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** [ %17, %16 ], [ %19, %18 ]
  %22 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)** %21, align 8
  %23 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 25
  %26 = bitcast %union.loader_instance_extension_enables* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 8
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %4, i64 0, i32 3
  %32 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %31, align 8
  tail call void %22(%struct.VkPhysicalDevice_T* %32, %struct.VkPhysicalDeviceExternalSemaphoreInfo* %1, %struct.VkExternalSemaphoreProperties* %2) #9
  br label %52

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %6, i64 0, i32 0
  %35 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %34, align 8
  %36 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %8, i32 1, i32 undef, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1065, i64 0, i64 0), i8* %37)
  %38 = getelementptr inbounds %struct.VkPhysicalDeviceExternalSemaphoreInfo, %struct.VkPhysicalDeviceExternalSemaphoreInfo* %1, i64 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %42, i32 2, i32 undef, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.1066, i64 0, i64 0))
  br label %43

43:                                               ; preds = %33, %41
  %44 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 2
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 3
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 4
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.VkExternalSemaphoreProperties, %struct.VkExternalSemaphoreProperties* %2, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = load %struct.loader_instance*, %struct.loader_instance** %7, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %51, i32 2, i32 undef, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @.str.1067, i64 0, i64 0))
  br label %52

52:                                               ; preds = %43, %50, %30
  ret void
}

declare void @terminator_DestroySurfaceKHR(%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*) #6

declare i32 @terminator_GetPhysicalDeviceSurfaceSupportKHR(%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*) #6

declare i32 @terminator_GetPhysicalDeviceSurfaceCapabilitiesKHR(%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*) #6

declare i32 @terminator_GetPhysicalDeviceSurfaceFormatsKHR(%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*) #6

declare i32 @terminator_GetPhysicalDeviceSurfacePresentModesKHR(%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*) #6

declare i32 @terminator_GetPhysicalDevicePresentRectanglesKHR(%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*) #6

declare i32 @terminator_GetPhysicalDeviceDisplayPropertiesKHR(%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*) #6

declare i32 @terminator_GetPhysicalDeviceDisplayPlanePropertiesKHR(%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*) #6

declare i32 @terminator_GetDisplayPlaneSupportedDisplaysKHR(%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**) #6

declare i32 @terminator_GetDisplayModePropertiesKHR(%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*) #6

declare i32 @terminator_CreateDisplayModeKHR(%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**) #6

declare i32 @terminator_GetDisplayPlaneCapabilitiesKHR(%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*) #6

declare i32 @terminator_CreateDisplayPlaneSurfaceKHR(%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**) #6

declare i32 @terminator_CreateXcbSurfaceKHR(%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**) #6

declare i32 @terminator_GetPhysicalDeviceXcbPresentationSupportKHR(%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32) #6

declare i32 @terminator_GetPhysicalDeviceSurfaceCapabilities2KHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*) #6

declare i32 @terminator_GetPhysicalDeviceSurfaceFormats2KHR(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*) #6

declare i32 @terminator_GetPhysicalDeviceDisplayProperties2KHR(%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*) #6

declare i32 @terminator_GetPhysicalDeviceDisplayPlaneProperties2KHR(%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*) #6

declare i32 @terminator_GetDisplayModeProperties2KHR(%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*) #6

declare i32 @terminator_GetDisplayPlaneCapabilities2KHR(%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*) #6

declare i32 @terminator_CreateDebugReportCallbackEXT(%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**) #6

declare void @terminator_DestroyDebugReportCallbackEXT(%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*) #6

declare void @terminator_DebugReportMessageEXT(%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*) #6

declare i32 @terminator_GetPhysicalDeviceExternalImageFormatPropertiesNV(%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*) #6

declare i32 @terminator_ReleaseDisplayEXT(%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*) #6

declare i32 @terminator_GetPhysicalDeviceSurfaceCapabilities2EXT(%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*) #6

declare i32 @terminator_CreateDebugUtilsMessengerEXT(%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**) #6

declare void @terminator_DestroyDebugUtilsMessengerEXT(%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*) #6

declare void @terminator_SubmitDebugUtilsMessageEXT(%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*) #6

declare i32 @terminator_GetPhysicalDeviceToolPropertiesEXT(%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*) #6

declare i32 @terminator_CreateHeadlessSurfaceEXT(%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**) #6

; Function Attrs: nounwind ssp uwtable
define hidden i8* @loader_instance_heap_alloc(%struct.loader_instance* readonly, i64, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.loader_instance* %0, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %7 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %6, align 8
  %8 = icmp eq i8* (i8*, i64, i64, i32)* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = tail call i8* %7(i8* %11, i64 %1, i64 8, i32 %2) #9
  br label %15

13:                                               ; preds = %5, %3
  %14 = tail call noalias i8* @malloc(i64 %1) #9
  br label %15

15:                                               ; preds = %13, %9
  %16 = phi i8* [ %12, %9 ], [ %14, %13 ]
  ret i8* %16
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_instance_heap_free(%struct.loader_instance* readonly, i8*) local_unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.loader_instance* %0, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %7, align 8
  %9 = icmp eq void (i8*, i8*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void %8(i8* %12, i8* nonnull %1) #9
  br label %14

13:                                               ; preds = %6, %4
  tail call void @free(i8* nonnull %1) #9
  br label %14

14:                                               ; preds = %2, %10, %13
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @loader_instance_heap_realloc(%struct.loader_instance* readonly, i8*, i64, i64, i32) local_unnamed_addr #0 {
  %6 = icmp eq i8* %1, null
  %7 = icmp eq i64 %2, 0
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = icmp eq %struct.loader_instance* %0, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %13 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %12, align 8
  %14 = icmp eq i8* (i8*, i64, i64, i32)* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i8* %13(i8* %17, i64 %3, i64 8, i32 %4) #9
  br label %44

19:                                               ; preds = %11, %9
  %20 = tail call noalias i8* @malloc(i64 %3) #9
  br label %44

21:                                               ; preds = %5
  %22 = icmp eq i64 %3, 0
  %23 = icmp eq %struct.loader_instance* %0, null
  br i1 %22, label %24, label %33

24:                                               ; preds = %21
  br i1 %23, label %32, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %27 = load void (i8*, i8*)*, void (i8*, i8*)** %26, align 8
  %28 = icmp eq void (i8*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void %27(i8* %31, i8* nonnull %1) #9
  br label %44

32:                                               ; preds = %25, %24
  tail call void @free(i8* nonnull %1) #9
  br label %44

33:                                               ; preds = %21
  br i1 %23, label %42, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 2
  %36 = load i8* (i8*, i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)** %35, align 8
  %37 = icmp eq i8* (i8*, i8*, i64, i64, i32)* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = tail call i8* %36(i8* %40, i8* nonnull %1, i64 %3, i64 8, i32 %4) #9
  br label %44

42:                                               ; preds = %34, %33
  %43 = tail call i8* @realloc(i8* nonnull %1, i64 %3) #9
  br label %44

44:                                               ; preds = %32, %29, %19, %15, %42, %38
  %45 = phi i8* [ %41, %38 ], [ %43, %42 ], [ %18, %15 ], [ %20, %19 ], [ null, %29 ], [ null, %32 ]
  ret i8* %45
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @loader_instance_tls_heap_alloc(i64) #0 {
  %2 = load %struct.loader_instance*, %struct.loader_instance** @tls_instance, align 8
  %3 = icmp eq %struct.loader_instance* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 33, i32 1
  %6 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %5, align 8
  %7 = icmp eq i8* (i8*, i64, i64, i32)* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 33, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i8* %6(i8* %10, i64 %0, i64 8, i32 0) #9
  br label %14

12:                                               ; preds = %4, %1
  %13 = tail call noalias i8* @malloc(i64 %0) #9
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi i8* [ %11, %8 ], [ %13, %12 ]
  ret i8* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_instance_tls_heap_free(i8*) #0 {
  %2 = load %struct.loader_instance*, %struct.loader_instance** @tls_instance, align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = icmp eq %struct.loader_instance* %2, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 33, i32 3
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %7, align 8
  %9 = icmp eq void (i8*, i8*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 33, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void %8(i8* %12, i8* nonnull %0) #9
  br label %14

13:                                               ; preds = %6, %4
  tail call void @free(i8* nonnull %0) #9
  br label %14

14:                                               ; preds = %1, %10, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @loader_device_heap_alloc(%struct.loader_device* readonly, i64, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.loader_device* %0, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 1
  %7 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %6, align 8
  %8 = icmp eq i8* (i8*, i64, i64, i32)* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = tail call i8* %7(i8* %11, i64 %1, i64 8, i32 %2) #9
  br label %15

13:                                               ; preds = %5, %3
  %14 = tail call noalias i8* @malloc(i64 %1) #9
  br label %15

15:                                               ; preds = %13, %9
  %16 = phi i8* [ %12, %9 ], [ %14, %13 ]
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_device_heap_free(%struct.loader_device* readonly, i8*) local_unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.loader_device* %0, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 3
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %7, align 8
  %9 = icmp eq void (i8*, i8*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void %8(i8* %12, i8* nonnull %1) #9
  br label %14

13:                                               ; preds = %6, %4
  tail call void @free(i8* nonnull %1) #9
  br label %14

14:                                               ; preds = %2, %10, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @loader_device_heap_realloc(%struct.loader_device* readonly, i8*, i64, i64, i32) local_unnamed_addr #0 {
  %6 = icmp eq i8* %1, null
  %7 = icmp eq i64 %2, 0
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = icmp eq %struct.loader_device* %0, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 1
  %13 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %12, align 8
  %14 = icmp eq i8* (i8*, i64, i64, i32)* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i8* %13(i8* %17, i64 %3, i64 8, i32 %4) #9
  br label %44

19:                                               ; preds = %11, %9
  %20 = tail call noalias i8* @malloc(i64 %3) #9
  br label %44

21:                                               ; preds = %5
  %22 = icmp eq i64 %3, 0
  %23 = icmp eq %struct.loader_device* %0, null
  br i1 %22, label %24, label %33

24:                                               ; preds = %21
  br i1 %23, label %32, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 3
  %27 = load void (i8*, i8*)*, void (i8*, i8*)** %26, align 8
  %28 = icmp eq void (i8*, i8*)* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void %27(i8* %31, i8* nonnull %1) #9
  br label %44

32:                                               ; preds = %25, %24
  tail call void @free(i8* nonnull %1) #9
  br label %44

33:                                               ; preds = %21
  br i1 %23, label %42, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 2
  %36 = load i8* (i8*, i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)** %35, align 8
  %37 = icmp eq i8* (i8*, i8*, i64, i64, i32)* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %0, i64 0, i32 6, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = tail call i8* %36(i8* %40, i8* nonnull %1, i64 %3, i64 8, i32 %4) #9
  br label %44

42:                                               ; preds = %34, %33
  %43 = tail call i8* @realloc(i8* nonnull %1, i64 %3) #9
  br label %44

44:                                               ; preds = %32, %29, %19, %15, %42, %38
  %45 = phi i8* [ %41, %38 ], [ %43, %42 ], [ %18, %15 ], [ %20, %19 ], [ null, %29 ], [ null, %32 ]
  ret i8* %45
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare i32 @util_SubmitDebugUtilsMessageEXT(%struct.loader_instance*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i8* @strncat(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_log_load_library_error(%struct.loader_instance*, i8* nocapture readnone) local_unnamed_addr #0 {
  %3 = tail call i8* @dlerror() #9
  %4 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.924, i64 0, i64 0)) #15
  %5 = icmp eq i8* %4, null
  %6 = select i1 %5, i32 8, i32 1
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 %6, i32 undef, i8* %3)
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vkSetInstanceDispatch(%struct.VkInstance_T* nocapture readonly, i8* nocapture) #0 {
  %3 = bitcast %struct.VkInstance_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %4 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %3, align 8
  %5 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %6 = icmp eq %struct.loader_instance* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2, %13
  %8 = phi %struct.loader_instance* [ %15, %13 ], [ %5, %2 ]
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 0
  %10 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %9, align 8
  %11 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %10, i64 0, i32 0
  %12 = icmp eq %struct.VkLayerInstanceDispatchTable_* %11, %4
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 12
  %15 = load %struct.loader_instance*, %struct.loader_instance** %14, align 8
  %16 = icmp eq %struct.loader_instance* %15, null
  br i1 %16, label %17, label %7

17:                                               ; preds = %13, %2
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* null, i32 8, i32 undef, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.925, i64 0, i64 0))
  br label %21

18:                                               ; preds = %7
  %19 = ptrtoint %struct.loader_instance_dispatch_table* %10 to i64
  %20 = bitcast i8* %1 to i64*
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %18, %17
  %22 = phi i32 [ 0, %18 ], [ -3, %17 ]
  ret i32 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.loader_instance* @loader_get_instance(%struct.VkInstance_T* nocapture readonly) local_unnamed_addr #11 {
  %2 = bitcast %struct.VkInstance_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %3 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %2, align 8
  %4 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %5 = icmp eq %struct.loader_instance* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1, %12
  %7 = phi %struct.loader_instance* [ %14, %12 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 0
  %9 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %8, align 8
  %10 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %9, i64 0, i32 0
  %11 = icmp eq %struct.VkLayerInstanceDispatchTable_* %10, %3
  br i1 %11, label %16, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %7, i64 0, i32 12
  %14 = load %struct.loader_instance*, %struct.loader_instance** %13, align 8
  %15 = icmp eq %struct.loader_instance* %14, null
  br i1 %15, label %16, label %6

16:                                               ; preds = %12, %6, %1
  %17 = phi %struct.loader_instance* [ null, %1 ], [ %7, %6 ], [ null, %12 ]
  ret %struct.loader_instance* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vkSetDeviceDispatch(%struct.VkDevice_T* nocapture readonly, i8* nocapture) #0 {
  %3 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %4 = icmp eq %struct.loader_instance* %3, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %7

7:                                                ; preds = %42, %5
  %8 = phi %struct.loader_instance* [ %3, %5 ], [ %44, %42 ]
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 14
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = icmp eq %struct.loader_icd_term* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7, %38
  %13 = phi %struct.loader_icd_term* [ %40, %38 ], [ %10, %7 ]
  %14 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 2
  %15 = load %struct.loader_device*, %struct.loader_device** %14, align 8
  %16 = icmp eq %struct.loader_device* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi %struct.loader_device* [ %15, %17 ], [ %36, %34 ]
  %21 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 2
  %22 = bitcast %struct.VkDevice_T** %21 to %struct.VkLayerDispatchTable_***
  %23 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %22, align 8
  %24 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %23, align 8
  %25 = icmp eq %struct.VkLayerDispatchTable_* %24, %18
  br i1 %25, label %46, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 1
  %28 = load %struct.VkDevice_T*, %struct.VkDevice_T** %27, align 8
  %29 = icmp eq %struct.VkDevice_T* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.VkDevice_T* %28 to %struct.VkLayerDispatchTable_**
  %32 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %31, align 8
  %33 = icmp eq %struct.VkLayerDispatchTable_* %32, %18
  br i1 %33, label %46, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 8
  %36 = load %struct.loader_device*, %struct.loader_device** %35, align 8
  %37 = icmp eq %struct.loader_device* %36, null
  br i1 %37, label %38, label %19

38:                                               ; preds = %34, %12
  %39 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 5
  %40 = load %struct.loader_icd_term*, %struct.loader_icd_term** %39, align 8
  %41 = icmp eq %struct.loader_icd_term* %40, null
  br i1 %41, label %42, label %12

42:                                               ; preds = %38, %7
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 12
  %44 = load %struct.loader_instance*, %struct.loader_instance** %43, align 8
  %45 = icmp eq %struct.loader_instance* %44, null
  br i1 %45, label %50, label %7

46:                                               ; preds = %19, %30
  %47 = icmp eq %struct.loader_icd_term* %13, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = bitcast i8* %1 to %struct.loader_device**
  store %struct.loader_device* %20, %struct.loader_device** %49, align 8
  br label %50

50:                                               ; preds = %42, %2, %46, %48
  %51 = phi i32 [ 0, %48 ], [ -3, %46 ], [ -3, %2 ], [ -3, %42 ]
  ret i32 %51
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @compare_vk_extension_properties(%struct.VkExtensionProperties* nocapture readonly, %struct.VkExtensionProperties* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %0, i64 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %1, i64 0, i32 0, i64 0
  %5 = tail call i32 @strcmp(i8* %3, i8* %4) #15
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @has_vk_extension_property_array(%struct.VkExtensionProperties* nocapture readonly, i32, %struct.VkExtensionProperties* nocapture readonly) local_unnamed_addr #3 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %0, i64 0, i32 0, i64 0
  %7 = zext i32 %1 to i64
  br label %10

8:                                                ; preds = %10
  %9 = icmp eq i64 %15, %7
  br i1 %9, label %16, label %10

10:                                               ; preds = %8, %5
  %11 = phi i64 [ 0, %5 ], [ %15, %8 ]
  %12 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %2, i64 %11, i32 0, i64 0
  %13 = tail call i32 @strcmp(i8* %6, i8* %12) #15
  %14 = icmp eq i32 %13, 0
  %15 = add nuw nsw i64 %11, 1
  br i1 %14, label %16, label %8

16:                                               ; preds = %10, %8, %3
  %17 = phi i1 [ false, %3 ], [ false, %8 ], [ true, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @has_vk_extension_property(%struct.VkExtensionProperties* nocapture readonly, %struct.loader_extension_list* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 2
  %8 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %7, align 8
  %9 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %0, i64 0, i32 0, i64 0
  %10 = zext i32 %4 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp ult i64 %18, %10
  br i1 %12, label %13, label %19

13:                                               ; preds = %6, %11
  %14 = phi i64 [ 0, %6 ], [ %18, %11 ]
  %15 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %8, i64 %14, i32 0, i64 0
  %16 = tail call i32 @strcmp(i8* %15, i8* %9) #15
  %17 = icmp eq i32 %16, 0
  %18 = add nuw nsw i64 %14, 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %13, %11, %2
  %20 = phi i1 [ false, %2 ], [ false, %11 ], [ true, %13 ]
  ret i1 %20
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @has_vk_dev_ext_property(%struct.VkExtensionProperties* nocapture readonly, %struct.loader_device_extension_list* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 2
  %8 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %7, align 8
  %9 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %0, i64 0, i32 0, i64 0
  %10 = zext i32 %4 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp ult i64 %18, %10
  br i1 %12, label %13, label %19

13:                                               ; preds = %6, %11
  %14 = phi i64 [ 0, %6 ], [ %18, %11 ]
  %15 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %8, i64 %14, i32 0, i32 0, i64 0
  %16 = tail call i32 @strcmp(i8* %15, i8* %9) #15
  %17 = icmp eq i32 %16, 0
  %18 = add nuw nsw i64 %14, 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %13, %11, %2
  %20 = phi i1 [ false, %2 ], [ false, %11 ], [ true, %13 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderDeleteLayerListAndProperties(%struct.loader_instance* readonly, %struct.loader_layer_list*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.loader_layer_list* %1, null
  br i1 %3, label %192, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %173, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %10 = icmp eq %struct.loader_instance* %0, null
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %12 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %13

13:                                               ; preds = %8, %167
  %14 = phi i64 [ 0, %8 ], [ %169, %167 ]
  %15 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  %16 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 %14, i32 20
  %17 = load [1024 x i8]*, [1024 x i8]** %16, align 8
  %18 = icmp eq [1024 x i8]* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %17, i64 0, i64 0
  br i1 %10, label %26, label %21

21:                                               ; preds = %19
  %22 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %23 = icmp eq void (i8*, i8*)* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = load i8*, i8** %12, align 8
  tail call void %22(i8* %25, i8* nonnull %20) #9
  br label %27

26:                                               ; preds = %21, %19
  tail call void @free(i8* nonnull %20) #9
  br label %27

27:                                               ; preds = %24, %26
  %28 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  %29 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %28, i64 %14, i32 20
  store [1024 x i8]* null, [1024 x i8]** %29, align 8
  %30 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  br label %31

31:                                               ; preds = %13, %27
  %32 = phi %struct.loader_layer_properties* [ %15, %13 ], [ %30, %27 ]
  %33 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %32, i64 %14, i32 11
  %34 = load [1024 x i8]*, [1024 x i8]** %33, align 8
  %35 = icmp eq [1024 x i8]* %34, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds [1024 x i8], [1024 x i8]* %34, i64 0, i64 0
  br i1 %10, label %43, label %38

38:                                               ; preds = %36
  %39 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %40 = icmp eq void (i8*, i8*)* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = load i8*, i8** %12, align 8
  tail call void %39(i8* %42, i8* nonnull %37) #9
  br label %44

43:                                               ; preds = %38, %36
  tail call void @free(i8* nonnull %37) #9
  br label %44

44:                                               ; preds = %41, %43
  %45 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  %46 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %45, i64 %14, i32 11
  store [1024 x i8]* null, [1024 x i8]** %46, align 8
  %47 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  br label %48

48:                                               ; preds = %31, %44
  %49 = phi %struct.loader_layer_properties* [ %32, %31 ], [ %47, %44 ]
  %50 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %49, i64 %14, i32 14
  %51 = load [1024 x i8]*, [1024 x i8]** %50, align 8
  %52 = icmp eq [1024 x i8]* %51, null
  br i1 %52, label %65, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds [1024 x i8], [1024 x i8]* %51, i64 0, i64 0
  br i1 %10, label %60, label %55

55:                                               ; preds = %53
  %56 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %57 = icmp eq void (i8*, i8*)* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = load i8*, i8** %12, align 8
  tail call void %56(i8* %59, i8* nonnull %54) #9
  br label %61

60:                                               ; preds = %55, %53
  tail call void @free(i8* nonnull %54) #9
  br label %61

61:                                               ; preds = %58, %60
  %62 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  %63 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %62, i64 %14, i32 14
  store [1024 x i8]* null, [1024 x i8]** %63, align 8
  %64 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  br label %65

65:                                               ; preds = %48, %61
  %66 = phi %struct.loader_layer_properties* [ %49, %48 ], [ %64, %61 ]
  %67 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %66, i64 %14, i32 22
  %68 = load [1024 x i8]*, [1024 x i8]** %67, align 8
  %69 = icmp eq [1024 x i8]* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds [1024 x i8], [1024 x i8]* %68, i64 0, i64 0
  br i1 %10, label %77, label %72

72:                                               ; preds = %70
  %73 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %74 = icmp eq void (i8*, i8*)* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = load i8*, i8** %12, align 8
  tail call void %73(i8* %76, i8* nonnull %71) #9
  br label %78

77:                                               ; preds = %72, %70
  tail call void @free(i8* nonnull %71) #9
  br label %78

78:                                               ; preds = %75, %77
  %79 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  %80 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %79, i64 %14, i32 22
  store [1024 x i8]* null, [1024 x i8]** %80, align 8
  %81 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  br label %82

82:                                               ; preds = %65, %78
  %83 = phi %struct.loader_layer_properties* [ %66, %65 ], [ %81, %78 ]
  %84 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %83, i64 %14, i32 6, i32 2
  %85 = bitcast %struct.VkExtensionProperties** %84 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %82
  br i1 %10, label %94, label %89

89:                                               ; preds = %88
  %90 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %91 = icmp eq void (i8*, i8*)* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = load i8*, i8** %12, align 8
  tail call void %90(i8* %93, i8* nonnull %86) #9
  br label %95

94:                                               ; preds = %89, %88
  tail call void @free(i8* nonnull %86) #9
  br label %95

95:                                               ; preds = %82, %92, %94
  %96 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %83, i64 %14, i32 6, i32 1
  store i32 0, i32* %96, align 8
  %97 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %83, i64 %14, i32 6, i32 0
  store i64 0, i64* %97, align 8
  %98 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %9, align 8
  %99 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %98, i64 %14, i32 7, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %155, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %98, i64 %14, i32 7, i32 2
  %104 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %103, align 8
  %105 = icmp eq %struct.loader_dev_ext_props* %104, null
  br i1 %105, label %155, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %98, i64 %14, i32 7, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %155, label %110

110:                                              ; preds = %106, %153
  %111 = phi %struct.loader_dev_ext_props* [ %154, %153 ], [ %104, %106 ]
  %112 = phi i64 [ %149, %153 ], [ 0, %106 ]
  %113 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %111, i64 %112, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %148, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %111, i64 %112, i32 2
  %118 = load i8**, i8*** %117, align 8
  br label %119

119:                                              ; preds = %116, %132
  %120 = phi i64 [ 0, %116 ], [ %133, %132 ]
  %121 = phi i8** [ %118, %116 ], [ %137, %132 ]
  %122 = getelementptr inbounds i8*, i8** %121, i64 %120
  %123 = load i8*, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %119
  br i1 %10, label %131, label %126

126:                                              ; preds = %125
  %127 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %128 = icmp eq void (i8*, i8*)* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  %130 = load i8*, i8** %12, align 8
  tail call void %127(i8* %130, i8* nonnull %123) #9
  br label %132

131:                                              ; preds = %126, %125
  tail call void @free(i8* nonnull %123) #9
  br label %132

132:                                              ; preds = %119, %129, %131
  %133 = add nuw nsw i64 %120, 1
  %134 = load i32, i32* %113, align 4
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %133, %135
  %137 = load i8**, i8*** %117, align 8
  br i1 %136, label %119, label %138

138:                                              ; preds = %132
  %139 = bitcast i8** %137 to i8*
  %140 = icmp eq i8** %137, null
  br i1 %140, label %148, label %141

141:                                              ; preds = %138
  br i1 %10, label %147, label %142

142:                                              ; preds = %141
  %143 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %144 = icmp eq void (i8*, i8*)* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = load i8*, i8** %12, align 8
  tail call void %143(i8* %146, i8* nonnull %139) #9
  br label %148

147:                                              ; preds = %142, %141
  tail call void @free(i8* nonnull %139) #9
  br label %148

148:                                              ; preds = %147, %145, %138, %110
  %149 = add nuw nsw i64 %112, 1
  %150 = load i32, i32* %107, align 8
  %151 = zext i32 %150 to i64
  %152 = icmp ult i64 %149, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %103, align 8
  br label %110

155:                                              ; preds = %148, %106, %102, %95
  %156 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %98, i64 %14, i32 7, i32 2
  %157 = bitcast %struct.loader_dev_ext_props** %156 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %167, label %160

160:                                              ; preds = %155
  br i1 %10, label %166, label %161

161:                                              ; preds = %160
  %162 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %163 = icmp eq void (i8*, i8*)* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %161
  %165 = load i8*, i8** %12, align 8
  tail call void %162(i8* %165, i8* nonnull %158) #9
  br label %167

166:                                              ; preds = %161, %160
  tail call void @free(i8* nonnull %158) #9
  br label %167

167:                                              ; preds = %155, %164, %166
  %168 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %98, i64 %14, i32 7, i32 1
  store i32 0, i32* %168, align 8
  store i64 0, i64* %99, align 8
  %169 = add nuw nsw i64 %14, 1
  %170 = load i32, i32* %5, align 8
  %171 = zext i32 %170 to i64
  %172 = icmp ult i64 %169, %171
  br i1 %172, label %13, label %173

173:                                              ; preds = %167, %4
  store i32 0, i32* %5, align 8
  %174 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  store i64 0, i64* %174, align 8
  %178 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %179 = bitcast %struct.loader_layer_properties** %178 to i8**
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %192, label %182

182:                                              ; preds = %177
  %183 = icmp eq %struct.loader_instance* %0, null
  br i1 %183, label %191, label %184

184:                                              ; preds = %182
  %185 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %186 = load void (i8*, i8*)*, void (i8*, i8*)** %185, align 8
  %187 = icmp eq void (i8*, i8*)* %186, null
  br i1 %187, label %191, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %190 = load i8*, i8** %189, align 8
  tail call void %186(i8* %190, i8* nonnull %180) #9
  br label %192

191:                                              ; preds = %184, %182
  tail call void @free(i8* nonnull %180) #9
  br label %192

192:                                              ; preds = %191, %188, %177, %173, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_destroy_generic_list(%struct.loader_instance* readonly, %struct.loader_generic_list* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.loader_generic_list, %struct.loader_generic_list* %1, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = icmp eq %struct.loader_instance* %0, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void %10(i8* %14, i8* nonnull %4) #9
  br label %16

15:                                               ; preds = %8, %6
  tail call void @free(i8* nonnull %4) #9
  br label %16

16:                                               ; preds = %2, %12, %15
  %17 = getelementptr inbounds %struct.loader_generic_list, %struct.loader_generic_list* %1, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.loader_generic_list, %struct.loader_generic_list* %1, i64 0, i32 0
  store i64 0, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderRemoveLayerInList(%struct.loader_instance* readonly, %struct.loader_layer_list*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.loader_layer_list* %1, null
  br i1 %4, label %98, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, %2
  br i1 %8, label %9, label %98

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %11 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %11, i64 %12, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %80, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %11, i64 %12, i32 11
  %19 = bitcast [1024 x i8]** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %17
  %23 = icmp eq %struct.loader_instance* %0, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %26 = load void (i8*, i8*)*, void (i8*, i8*)** %25, align 8
  %27 = icmp eq void (i8*, i8*)* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void %26(i8* %30, i8* nonnull %20) #9
  br label %32

31:                                               ; preds = %24, %22
  tail call void @free(i8* nonnull %20) #9
  br label %32

32:                                               ; preds = %17, %28, %31
  %33 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %34 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %33, i64 %12, i32 14
  %35 = bitcast [1024 x i8]** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  %39 = icmp eq %struct.loader_instance* %0, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %42 = load void (i8*, i8*)*, void (i8*, i8*)** %41, align 8
  %43 = icmp eq void (i8*, i8*)* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void %42(i8* %46, i8* nonnull %36) #9
  br label %48

47:                                               ; preds = %40, %38
  tail call void @free(i8* nonnull %36) #9
  br label %48

48:                                               ; preds = %32, %44, %47
  %49 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %50 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %49, i64 %12, i32 20
  %51 = bitcast [1024 x i8]** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  %55 = icmp eq %struct.loader_instance* %0, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %58 = load void (i8*, i8*)*, void (i8*, i8*)** %57, align 8
  %59 = icmp eq void (i8*, i8*)* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void %58(i8* %62, i8* nonnull %52) #9
  br label %64

63:                                               ; preds = %56, %54
  tail call void @free(i8* nonnull %52) #9
  br label %64

64:                                               ; preds = %48, %60, %63
  %65 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %66 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %65, i64 %12, i32 22
  %67 = bitcast [1024 x i8]** %66 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  %71 = icmp eq %struct.loader_instance* %0, null
  br i1 %71, label %79, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %74 = load void (i8*, i8*)*, void (i8*, i8*)** %73, align 8
  %75 = icmp eq void (i8*, i8*)* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %78 = load i8*, i8** %77, align 8
  tail call void %74(i8* %78, i8* nonnull %68) #9
  br label %80

79:                                               ; preds = %72, %70
  tail call void @free(i8* nonnull %68) #9
  br label %80

80:                                               ; preds = %79, %76, %64, %9
  %81 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %82 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %81, i64 %12, i32 0, i32 0, i64 0
  %83 = add nuw i32 %2, 1
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %81, i64 %84, i32 0, i32 0, i64 0
  %86 = load i32, i32* %6, align 8
  %87 = xor i32 %2, -1
  %88 = add i32 %86, %87
  %89 = zext i32 %88 to i64
  %90 = mul nuw nsw i64 %89, 11952
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %85, i64 %90, i1 false)
  %91 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %92 = load i32, i32* %6, align 8
  %93 = add i32 %92, -1
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %91, i64 %94, i32 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 11952, i1 false)
  %96 = load i32, i32* %6, align 8
  %97 = add i32 %96, -1
  store i32 %97, i32* %6, align 8
  br label %98

98:                                               ; preds = %5, %3, %80
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderRemoveLayersInBlacklist(%struct.loader_instance*, %struct.loader_layer_list* nocapture) local_unnamed_addr #0 {
  %3 = alloca %struct.loader_layer_properties, align 8
  %4 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %118, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %9 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  %10 = zext i32 %5 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp eq i64 %19, %10
  br i1 %12, label %118, label %13

13:                                               ; preds = %11, %7
  %14 = phi i64 [ 0, %7 ], [ %19, %11 ]
  %15 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %9, i64 %14
  %16 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 0, i32 0, i32 0, i64 0
  %17 = tail call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0), i8* %16) #15
  %18 = icmp eq i32 %17, 0
  %19 = add nuw nsw i64 %14, 1
  br i1 %18, label %20, label %11

20:                                               ; preds = %13
  %21 = icmp ne %struct.loader_layer_properties* %15, null
  %22 = icmp sgt i32 %5, 0
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %118

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 0, i32 0, i64 0
  %26 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 1
  %27 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 11
  %28 = bitcast [1024 x i8]** %27 to i8**
  %29 = icmp eq %struct.loader_instance* %0, null
  %30 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %31 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %32 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 14
  %33 = bitcast [1024 x i8]** %32 to i8**
  br label %34

34:                                               ; preds = %116, %24
  %35 = phi i32 [ %5, %24 ], [ %111, %116 ]
  %36 = phi %struct.loader_layer_properties* [ %9, %24 ], [ %117, %116 ]
  %37 = phi i32 [ 0, %24 ], [ %114, %116 ]
  %38 = phi %struct.loader_layer_properties* [ %15, %24 ], [ %112, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 11952, i8* nonnull %25) #9
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %36, i64 %39, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %40, i64 11952, i1 false)
  %41 = call i32 @bcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0), i8* nonnull %25, i64 25)
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %110, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %38, i64 0, i32 19
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %110, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %38, i64 0, i32 20
  %49 = load [1024 x i8]*, [1024 x i8]** %48, align 8
  %50 = zext i32 %45 to i64
  br label %53

51:                                               ; preds = %53
  %52 = icmp eq i64 %58, %50
  br i1 %52, label %110, label %53

53:                                               ; preds = %51, %47
  %54 = phi i64 [ 0, %47 ], [ %58, %51 ]
  %55 = getelementptr inbounds [1024 x i8], [1024 x i8]* %49, i64 %54, i64 0
  %56 = call i32 @strcmp(i8* %55, i8* nonnull %25) #15
  %57 = icmp eq i32 %56, 0
  %58 = add nuw nsw i64 %54, 1
  br i1 %57, label %59, label %51

59:                                               ; preds = %53
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.927, i64 0, i64 0), i8* nonnull %25)
  %60 = load i32, i32* %26, align 8
  %61 = and i32 %60, 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %83, label %63

63:                                               ; preds = %59
  %64 = load i8*, i8** %28, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %63
  br i1 %29, label %72, label %67

67:                                               ; preds = %66
  %68 = load void (i8*, i8*)*, void (i8*, i8*)** %30, align 8
  %69 = icmp eq void (i8*, i8*)* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = load i8*, i8** %31, align 8
  call void %68(i8* %71, i8* nonnull %64) #9
  br label %73

72:                                               ; preds = %67, %66
  call void @free(i8* nonnull %64) #9
  br label %73

73:                                               ; preds = %63, %70, %72
  %74 = load i8*, i8** %33, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %73
  br i1 %29, label %82, label %77

77:                                               ; preds = %76
  %78 = load void (i8*, i8*)*, void (i8*, i8*)** %30, align 8
  %79 = icmp eq void (i8*, i8*)* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = load i8*, i8** %31, align 8
  call void %78(i8* %81, i8* nonnull %74) #9
  br label %83

82:                                               ; preds = %77, %76
  call void @free(i8* nonnull %74) #9
  br label %83

83:                                               ; preds = %82, %80, %73, %59
  %84 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  %85 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %84, i64 %39, i32 0, i32 0, i64 0
  %86 = add nsw i32 %37, 1
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %84, i64 %87, i32 0, i32 0, i64 0
  %89 = load i32, i32* %4, align 8
  %90 = xor i32 %37, -1
  %91 = add i32 %89, %90
  %92 = zext i32 %91 to i64
  %93 = mul nuw nsw i64 %92, 11952
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %88, i64 %93, i1 false)
  %94 = load i32, i32* %4, align 8
  %95 = add i32 %94, -1
  store i32 %95, i32* %4, align 8
  %96 = add nsw i32 %37, -1
  %97 = icmp eq i32 %95, 0
  br i1 %97, label %110, label %98

98:                                               ; preds = %83
  %99 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  %100 = zext i32 %95 to i64
  br label %103

101:                                              ; preds = %103
  %102 = icmp eq i64 %109, %100
  br i1 %102, label %110, label %103

103:                                              ; preds = %101, %98
  %104 = phi i64 [ 0, %98 ], [ %109, %101 ]
  %105 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %99, i64 %104
  %106 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %105, i64 0, i32 0, i32 0, i64 0
  %107 = call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0), i8* %106) #15
  %108 = icmp eq i32 %107, 0
  %109 = add nuw nsw i64 %104, 1
  br i1 %108, label %110, label %101

110:                                              ; preds = %51, %103, %101, %43, %83, %34
  %111 = phi i32 [ %35, %34 ], [ 0, %83 ], [ %35, %43 ], [ %95, %101 ], [ %95, %103 ], [ %35, %51 ]
  %112 = phi %struct.loader_layer_properties* [ %38, %34 ], [ null, %83 ], [ %38, %43 ], [ %105, %103 ], [ null, %101 ], [ %38, %51 ]
  %113 = phi i32 [ %37, %34 ], [ %96, %83 ], [ %37, %43 ], [ %96, %101 ], [ %96, %103 ], [ %37, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 11952, i8* nonnull %25) #9
  %114 = add nsw i32 %113, 1
  %115 = icmp slt i32 %114, %111
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  br label %34

118:                                              ; preds = %11, %110, %20, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderRemoveLayersNotInImplicitMetaLayers(%struct.loader_instance*, %struct.loader_layer_list* nocapture) local_unnamed_addr #0 {
  %3 = alloca %struct.loader_layer_properties, align 8
  %4 = alloca %struct.loader_layer_properties, align 8
  %5 = alloca %struct.loader_layer_properties, align 8
  %6 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %182

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %11 = zext i32 %7 to i64
  %12 = add nsw i64 %11, -1
  %13 = and i64 %11, 3
  %14 = icmp ult i64 %12, 3
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = sub nsw i64 %11, %13
  br label %38

17:                                               ; preds = %38, %9
  %18 = phi i64 [ 0, %9 ], [ %52, %38 ]
  %19 = icmp eq i64 %13, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %17, %20
  %21 = phi i64 [ %25, %20 ], [ %18, %17 ]
  %22 = phi i64 [ %26, %20 ], [ %13, %17 ]
  %23 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %24 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %23, i64 %21, i32 18
  store i8 0, i8* %24, align 8
  %25 = add nuw nsw i64 %21, 1
  %26 = add i64 %22, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %20, !llvm.loop !7

28:                                               ; preds = %20, %17
  br i1 %8, label %29, label %55

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 0, i32 0, i64 0
  %31 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %32 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 1
  %33 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 18
  %34 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %4, i64 0, i32 0, i32 0, i64 0
  %35 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 0, i32 10
  %36 = zext i32 %7 to i64
  %37 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %31, align 8
  br label %70

38:                                               ; preds = %38, %15
  %39 = phi i64 [ 0, %15 ], [ %52, %38 ]
  %40 = phi i64 [ %16, %15 ], [ %53, %38 ]
  %41 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %42 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %41, i64 %39, i32 18
  store i8 0, i8* %42, align 8
  %43 = or i64 %39, 1
  %44 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %45 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %44, i64 %43, i32 18
  store i8 0, i8* %45, align 8
  %46 = or i64 %39, 2
  %47 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %48 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %47, i64 %46, i32 18
  store i8 0, i8* %48, align 8
  %49 = or i64 %39, 3
  %50 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %51 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %50, i64 %49, i32 18
  store i8 0, i8* %51, align 8
  %52 = add nuw nsw i64 %39, 4
  %53 = add i64 %40, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %17, label %38

55:                                               ; preds = %128, %28
  %56 = load i32, i32* %6, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %182

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %5, i64 0, i32 0, i32 0, i64 0
  %60 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %61 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %5, i64 0, i32 18
  %62 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %5, i64 0, i32 1
  %63 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %5, i64 0, i32 11
  %64 = bitcast [1024 x i8]** %63 to i8**
  %65 = icmp eq %struct.loader_instance* %0, null
  %66 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %67 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %68 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %5, i64 0, i32 14
  %69 = bitcast [1024 x i8]** %68 to i8**
  br label %131

70:                                               ; preds = %128, %29
  %71 = phi i64 [ 0, %29 ], [ %129, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 11952, i8* nonnull %30) #9
  %72 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %37, i64 %71, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %72, i64 11952, i1 false)
  %73 = load i32, i32* %32, align 8
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %128

76:                                               ; preds = %70
  store i8 1, i8* %33, align 8
  %77 = and i32 %73, 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %128, label %79

79:                                               ; preds = %76, %125
  %80 = phi i64 [ %126, %125 ], [ 0, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 11952, i8* nonnull %34) #9
  %81 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %37, i64 %80, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %81, i64 11952, i1 false)
  %82 = icmp eq i64 %71, %80
  br i1 %82, label %125, label %83

83:                                               ; preds = %79
  %84 = load i32, i32* %35, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %125, label %90

86:                                               ; preds = %117
  %87 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %118, i64 0, i32 10
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %125, label %90

90:                                               ; preds = %83, %86
  %91 = phi i32 [ %88, %86 ], [ %84, %83 ]
  %92 = phi %struct.loader_layer_properties* [ %118, %86 ], [ %3, %83 ]
  %93 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %92, i64 0, i32 11
  %94 = load [1024 x i8]*, [1024 x i8]** %93, align 8
  %95 = zext i32 %91 to i64
  br label %98

96:                                               ; preds = %117
  %97 = icmp ult i64 %123, %95
  br i1 %97, label %98, label %125

98:                                               ; preds = %96, %90
  %99 = phi i64 [ 0, %90 ], [ %123, %96 ]
  %100 = getelementptr inbounds [1024 x i8], [1024 x i8]* %94, i64 %99, i64 0
  %101 = call i32 @strcmp(i8* %100, i8* nonnull %34) #15
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %124, label %103

103:                                              ; preds = %98
  %104 = load i32, i32* %6, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %103
  %107 = zext i32 %104 to i64
  br label %110

108:                                              ; preds = %110
  %109 = icmp eq i64 %116, %107
  br i1 %109, label %117, label %110

110:                                              ; preds = %108, %106
  %111 = phi i64 [ 0, %106 ], [ %116, %108 ]
  %112 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %37, i64 %111
  %113 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %112, i64 0, i32 0, i32 0, i64 0
  %114 = tail call i32 @strcmp(i8* %100, i8* %113) #15
  %115 = icmp eq i32 %114, 0
  %116 = add nuw nsw i64 %111, 1
  br i1 %115, label %117, label %108

117:                                              ; preds = %110, %108, %103
  %118 = phi %struct.loader_layer_properties* [ null, %103 ], [ %112, %110 ], [ null, %108 ]
  %119 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %118, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 4
  %122 = icmp eq i32 %121, 0
  %123 = add nuw nsw i64 %99, 1
  br i1 %122, label %96, label %86

124:                                              ; preds = %98
  store i8 1, i8* %33, align 8
  br label %125

125:                                              ; preds = %86, %96, %83, %124, %79
  call void @llvm.lifetime.end.p0i8(i64 11952, i8* nonnull %34) #9
  %126 = add nuw nsw i64 %80, 1
  %127 = icmp eq i64 %126, %36
  br i1 %127, label %128, label %79

128:                                              ; preds = %125, %76, %70
  call void @llvm.lifetime.end.p0i8(i64 11952, i8* nonnull %30) #9
  %129 = add nuw nsw i64 %71, 1
  %130 = icmp eq i64 %129, %36
  br i1 %130, label %55, label %70

131:                                              ; preds = %58, %177
  %132 = phi i32 [ %56, %58 ], [ %178, %177 ]
  %133 = phi i32 [ 0, %58 ], [ %180, %177 ]
  call void @llvm.lifetime.start.p0i8(i64 11952, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 11952, i1 false)
  %134 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %60, align 8
  %135 = sext i32 %133 to i64
  %136 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %134, i64 %135, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %136, i64 11952, i1 false)
  %137 = load i8, i8* %61, align 8, !range !4
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %177

139:                                              ; preds = %131
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @.str.928, i64 0, i64 0), i8* nonnull %59)
  %140 = load i32, i32* %62, align 8
  %141 = and i32 %140, 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %139
  %144 = load i8*, i8** %64, align 8
  %145 = icmp eq i8* %144, null
  br i1 %145, label %153, label %146

146:                                              ; preds = %143
  br i1 %65, label %152, label %147

147:                                              ; preds = %146
  %148 = load void (i8*, i8*)*, void (i8*, i8*)** %66, align 8
  %149 = icmp eq void (i8*, i8*)* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = load i8*, i8** %67, align 8
  call void %148(i8* %151, i8* nonnull %144) #9
  br label %153

152:                                              ; preds = %147, %146
  call void @free(i8* nonnull %144) #9
  br label %153

153:                                              ; preds = %143, %150, %152
  %154 = load i8*, i8** %69, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %153
  br i1 %65, label %162, label %157

157:                                              ; preds = %156
  %158 = load void (i8*, i8*)*, void (i8*, i8*)** %66, align 8
  %159 = icmp eq void (i8*, i8*)* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = load i8*, i8** %67, align 8
  call void %158(i8* %161, i8* nonnull %154) #9
  br label %163

162:                                              ; preds = %157, %156
  call void @free(i8* nonnull %154) #9
  br label %163

163:                                              ; preds = %162, %160, %153, %139
  %164 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %60, align 8
  %165 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %164, i64 %135, i32 0, i32 0, i64 0
  %166 = add nsw i32 %133, 1
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %164, i64 %167, i32 0, i32 0, i64 0
  %169 = load i32, i32* %6, align 8
  %170 = xor i32 %133, -1
  %171 = add i32 %169, %170
  %172 = zext i32 %171 to i64
  %173 = mul nuw nsw i64 %172, 11952
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %168, i64 %173, i1 false)
  %174 = load i32, i32* %6, align 8
  %175 = add i32 %174, -1
  store i32 %175, i32* %6, align 8
  %176 = add nsw i32 %133, -1
  br label %177

177:                                              ; preds = %131, %163
  %178 = phi i32 [ %132, %131 ], [ %175, %163 ]
  %179 = phi i32 [ %133, %131 ], [ %176, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 11952, i8* nonnull %59) #9
  %180 = add nsw i32 %179, 1
  %181 = icmp slt i32 %180, %178
  br i1 %181, label %131, label %182

182:                                              ; preds = %177, %2, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_add_device_extensions(%struct.loader_instance*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* nocapture, %struct.VkPhysicalDevice_T*, i8*, %struct.loader_extension_list* nocapture) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca [64 x i8], align 16
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  store i32 -1431655766, i32* %6, align 4
  %9 = call i32 %1(%struct.VkPhysicalDevice_T* %2, i8* null, i32* nonnull %6, %struct.VkExtensionProperties* null) #9
  %10 = icmp eq i32 %9, 0
  %11 = load i32, i32* %6, align 4
  %12 = icmp ne i32 %11, 0
  %13 = and i1 %10, %12
  br i1 %13, label %14, label %43

14:                                               ; preds = %5
  %15 = zext i32 %11 to i64
  %16 = mul nuw nsw i64 %15, 260
  %17 = alloca %struct.VkExtensionProperties, i64 %15, align 16
  %18 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %17, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 %16, i1 false)
  %19 = call i32 %1(%struct.VkPhysicalDevice_T* %2, i8* null, i32* nonnull %6, %struct.VkExtensionProperties* nonnull %17) #9
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %44

21:                                               ; preds = %14
  %22 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  %23 = load i32, i32* %6, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %44, label %29

25:                                               ; preds = %29
  %26 = load i32, i32* %6, align 4
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %42, %27
  br i1 %28, label %29, label %44

29:                                               ; preds = %21, %25
  %30 = phi i64 [ %42, %25 ], [ 0, %21 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 64, i1 false)
  %31 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %17, i64 %30
  %32 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %17, i64 %30, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = lshr i32 %33, 22
  %35 = lshr i32 %33, 12
  %36 = and i32 %35, 1023
  %37 = and i32 %33, 4095
  %38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %22, i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.930, i64 0, i64 0), i32 %34, i32 %36, i32 %37) #9
  %39 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %31, i64 0, i32 0, i64 0
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.931, i64 0, i64 0), i8* %39, i8* %3, i8* nonnull %22)
  %40 = call i32 @loader_add_to_ext_list(%struct.loader_instance* %0, %struct.loader_extension_list* %4, i32 1, %struct.VkExtensionProperties* %31)
  %41 = icmp eq i32 %40, 0
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #9
  %42 = add nuw nsw i64 %30, 1
  br i1 %41, label %25, label %44

43:                                               ; preds = %5
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.932, i64 0, i64 0), i8* %3)
  br label %44

44:                                               ; preds = %29, %25, %21, %14, %43
  %45 = phi i32 [ %9, %43 ], [ %19, %14 ], [ 0, %21 ], [ %40, %29 ], [ 0, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret i32 %45
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_add_to_ext_list(%struct.loader_instance*, %struct.loader_extension_list* nocapture, i32, %struct.VkExtensionProperties* nocapture readonly) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 2
  %6 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %5, align 8
  %7 = icmp eq %struct.VkExtensionProperties* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %32

12:                                               ; preds = %8, %4
  %13 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = icmp eq %struct.loader_instance* %0, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %18 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %17, align 8
  %19 = icmp eq i8* (i8*, i64, i64, i32)* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i8* %18(i8* %22, i64 8320, i64 8, i32 4) #9
  br label %26

24:                                               ; preds = %16, %12
  %25 = tail call noalias i8* @malloc(i64 8320) #9
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi i8* [ %23, %20 ], [ %25, %24 ]
  %28 = bitcast %struct.VkExtensionProperties** %5 to i8**
  store i8* %27, i8** %28, align 8
  %29 = icmp eq i8* %27, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %27, i8 0, i64 8320, i1 false) #9
  store i64 8320, i64* %14, align 8
  br label %32

31:                                               ; preds = %26
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0)) #9
  br label %87

32:                                               ; preds = %30, %8
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %87, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 1
  %36 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 0
  %37 = bitcast %struct.VkExtensionProperties** %5 to i8**
  %38 = zext i32 %2 to i64
  %39 = load i32, i32* %35, align 8
  br label %40

40:                                               ; preds = %83, %34
  %41 = phi i32 [ %39, %34 ], [ %84, %83 ]
  %42 = phi i64 [ 0, %34 ], [ %85, %83 ]
  %43 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %40
  %46 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %5, align 8
  %47 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %43, i64 0, i32 0, i64 0
  %48 = zext i32 %41 to i64
  br label %51

49:                                               ; preds = %51
  %50 = icmp eq i64 %56, %48
  br i1 %50, label %57, label %51

51:                                               ; preds = %49, %45
  %52 = phi i64 [ 0, %45 ], [ %56, %49 ]
  %53 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %46, i64 %52, i32 0, i64 0
  %54 = tail call i32 @strcmp(i8* %53, i8* %47) #15
  %55 = icmp eq i32 %54, 0
  %56 = add nuw nsw i64 %52, 1
  br i1 %55, label %83, label %49

57:                                               ; preds = %49, %40
  %58 = phi i64 [ 0, %40 ], [ %48, %49 ]
  %59 = mul nuw nsw i64 %58, 260
  %60 = load i64, i64* %36, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %5, align 8
  br label %76

64:                                               ; preds = %57
  %65 = load i8*, i8** %37, align 8
  %66 = shl i64 %60, 1
  %67 = tail call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %65, i64 %60, i64 %66, i32 4)
  %68 = icmp eq i8* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %64
  store i8* %67, i8** %37, align 8
  %70 = load i64, i64* %36, align 8
  %71 = shl i64 %70, 1
  store i64 %71, i64* %36, align 8
  %72 = bitcast i8* %67 to %struct.VkExtensionProperties*
  %73 = load i32, i32* %35, align 8
  %74 = zext i32 %73 to i64
  br label %76

75:                                               ; preds = %64
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.934, i64 0, i64 0))
  br label %87

76:                                               ; preds = %62, %69
  %77 = phi i64 [ %58, %62 ], [ %74, %69 ]
  %78 = phi %struct.VkExtensionProperties* [ %63, %62 ], [ %72, %69 ]
  %79 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %78, i64 %77, i32 0, i64 0
  %80 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %43, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 260, i1 false)
  %81 = load i32, i32* %35, align 8
  %82 = add i32 %81, 1
  store i32 %82, i32* %35, align 8
  br label %83

83:                                               ; preds = %51, %76
  %84 = phi i32 [ %82, %76 ], [ %41, %51 ]
  %85 = add nuw nsw i64 %42, 1
  %86 = icmp eq i64 %85, %38
  br i1 %86, label %87, label %40

87:                                               ; preds = %83, %32, %75, %31
  %88 = phi i32 [ -1, %75 ], [ -1, %31 ], [ 0, %32 ], [ 0, %83 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_init_generic_list(%struct.loader_instance*, %struct.loader_generic_list* nocapture, i64) local_unnamed_addr #0 {
  %4 = shl i64 %2, 5
  %5 = getelementptr inbounds %struct.loader_generic_list, %struct.loader_generic_list* %1, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.loader_generic_list, %struct.loader_generic_list* %1, i64 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = icmp eq %struct.loader_instance* %0, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %10 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %9, align 8
  %11 = icmp eq i8* (i8*, i64, i64, i32)* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i8* %10(i8* %14, i64 %4, i64 8, i32 4) #9
  br label %18

16:                                               ; preds = %8, %3
  %17 = tail call noalias i8* @malloc(i64 %4) #9
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i8* [ %15, %12 ], [ %17, %16 ]
  %20 = getelementptr inbounds %struct.loader_generic_list, %struct.loader_generic_list* %1, i64 0, i32 2
  store i8* %19, i8** %20, align 8
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0))
  br label %24

23:                                               ; preds = %18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %19, i8 0, i64 %4, i1 false)
  store i64 %4, i64* %6, align 8
  br label %24

24:                                               ; preds = %23, %22
  %25 = phi i32 [ -1, %22 ], [ 0, %23 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_add_to_dev_ext_list(%struct.loader_instance*, %struct.loader_device_extension_list* nocapture, %struct.VkExtensionProperties* nocapture readonly, i32, i8** nocapture readonly) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 2
  %7 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %8 = icmp eq %struct.loader_dev_ext_props* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %33

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 1
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = icmp eq %struct.loader_instance* %0, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %19 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %18, align 8
  %20 = icmp eq i8* (i8*, i64, i64, i32)* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i8* %19(i8* %23, i64 8704, i64 8, i32 4) #9
  br label %27

25:                                               ; preds = %17, %13
  %26 = tail call noalias i8* @malloc(i64 8704) #9
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi i8* [ %24, %21 ], [ %26, %25 ]
  %29 = bitcast %struct.loader_dev_ext_props** %6 to i8**
  store i8* %28, i8** %29, align 8
  %30 = icmp eq i8* %28, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %28, i8 0, i64 8704, i1 false) #9
  store i64 8704, i64* %15, align 8
  br label %33

32:                                               ; preds = %27
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0)) #9
  br label %185

33:                                               ; preds = %31, %9
  %34 = phi i64 [ 8704, %31 ], [ %11, %9 ]
  %35 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %33
  %39 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %40 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %2, i64 0, i32 0, i64 0
  %41 = zext i32 %36 to i64
  br label %44

42:                                               ; preds = %44
  %43 = icmp eq i64 %49, %41
  br i1 %43, label %50, label %44

44:                                               ; preds = %42, %38
  %45 = phi i64 [ 0, %38 ], [ %49, %42 ]
  %46 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %39, i64 %45, i32 0, i32 0, i64 0
  %47 = tail call i32 @strcmp(i8* %46, i8* %40) #15
  %48 = icmp eq i32 %47, 0
  %49 = add nuw nsw i64 %45, 1
  br i1 %48, label %185, label %42

50:                                               ; preds = %42, %33
  %51 = phi i64 [ 0, %33 ], [ %41, %42 ]
  %52 = mul nuw nsw i64 %51, 272
  %53 = getelementptr inbounds %struct.loader_device_extension_list, %struct.loader_device_extension_list* %1, i64 0, i32 0
  %54 = icmp ult i64 %52, %34
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  br label %68

57:                                               ; preds = %50
  %58 = bitcast %struct.loader_dev_ext_props** %6 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = shl i64 %34, 1
  %61 = tail call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %59, i64 %34, i64 %60, i32 4)
  %62 = icmp eq i8* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %57
  store i8* %61, i8** %58, align 8
  %64 = load i64, i64* %53, align 8
  %65 = shl i64 %64, 1
  store i64 %65, i64* %53, align 8
  %66 = bitcast i8* %61 to %struct.loader_dev_ext_props*
  br label %68

67:                                               ; preds = %57
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.935, i64 0, i64 0))
  br label %185

68:                                               ; preds = %55, %63
  %69 = phi %struct.loader_dev_ext_props* [ %56, %55 ], [ %66, %63 ]
  %70 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %69, i64 %51, i32 0, i32 0, i64 0
  %71 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 4 %71, i64 260, i1 false)
  %72 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %73 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %72, i64 %51, i32 1
  store i32 %3, i32* %73, align 4
  %74 = icmp eq i32 %3, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %68
  %76 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %77 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %76, i64 %51, i32 2
  store i8** null, i8*** %77, align 8
  br label %182

78:                                               ; preds = %68
  %79 = zext i32 %3 to i64
  %80 = shl nuw nsw i64 %79, 3
  %81 = icmp eq %struct.loader_instance* %0, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %84 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %83, align 8
  %85 = icmp eq i8* (i8*, i64, i64, i32)* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = tail call i8* %84(i8* %88, i64 %80, i64 8, i32 4) #9
  br label %92

90:                                               ; preds = %82, %78
  %91 = tail call noalias i8* @malloc(i64 %80) #9
  br label %92

92:                                               ; preds = %86, %90
  %93 = phi i8* [ %89, %86 ], [ %91, %90 ]
  %94 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %95 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %94, i64 %51, i32 2
  %96 = bitcast i8*** %95 to i8**
  store i8* %93, i8** %96, align 8
  %97 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %98 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %97, i64 %51, i32 2
  %99 = load i8**, i8*** %98, align 8
  %100 = icmp eq i8** %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %103 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %107

104:                                              ; preds = %92
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.936, i64 0, i64 0), i32 %36)
  %105 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %106 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %105, i64 %51, i32 1
  store i32 0, i32* %106, align 4
  br label %185

107:                                              ; preds = %172, %101
  %108 = phi i64 [ 0, %101 ], [ %175, %172 ]
  %109 = getelementptr inbounds i8*, i8** %4, i64 %108
  %110 = load i8*, i8** %109, align 8
  %111 = tail call i64 @strlen(i8* %110) #15
  %112 = add i64 %111, 1
  br i1 %81, label %119, label %113

113:                                              ; preds = %107
  %114 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %102, align 8
  %115 = icmp eq i8* (i8*, i64, i64, i32)* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = load i8*, i8** %103, align 8
  %118 = tail call i8* %114(i8* %117, i64 %112, i64 8, i32 4) #9
  br label %121

119:                                              ; preds = %113, %107
  %120 = tail call noalias i8* @malloc(i64 %112) #9
  br label %121

121:                                              ; preds = %116, %119
  %122 = phi i8* [ %118, %116 ], [ %120, %119 ]
  %123 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %124 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %123, i64 %51, i32 2
  %125 = load i8**, i8*** %124, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 %108
  store i8* %122, i8** %126, align 8
  %127 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %128 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %127, i64 %51, i32 2
  %129 = load i8**, i8*** %128, align 8
  %130 = getelementptr inbounds i8*, i8** %129, i64 %108
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %172

133:                                              ; preds = %121
  %134 = trunc i64 %108 to i32
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %138 = and i64 %108, 4294967295
  br label %152

139:                                              ; preds = %165, %133
  %140 = phi i8*** [ %128, %133 ], [ %168, %165 ]
  %141 = bitcast i8*** %140 to i8**
  %142 = load i8*, i8** %141, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %177, label %144

144:                                              ; preds = %139
  br i1 %81, label %151, label %145

145:                                              ; preds = %144
  %146 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %147 = load void (i8*, i8*)*, void (i8*, i8*)** %146, align 8
  %148 = icmp eq void (i8*, i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  %150 = load i8*, i8** %103, align 8
  tail call void %147(i8* %150, i8* nonnull %142) #9
  br label %177

151:                                              ; preds = %145, %144
  tail call void @free(i8* nonnull %142) #9
  br label %177

152:                                              ; preds = %170, %136
  %153 = phi i8** [ %129, %136 ], [ %171, %170 ]
  %154 = phi i64 [ 0, %136 ], [ %166, %170 ]
  %155 = getelementptr inbounds i8*, i8** %153, i64 %154
  %156 = load i8*, i8** %155, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %152
  br i1 %81, label %164, label %159

159:                                              ; preds = %158
  %160 = load void (i8*, i8*)*, void (i8*, i8*)** %137, align 8
  %161 = icmp eq void (i8*, i8*)* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %159
  %163 = load i8*, i8** %103, align 8
  tail call void %160(i8* %163, i8* nonnull %156) #9
  br label %165

164:                                              ; preds = %159, %158
  tail call void @free(i8* nonnull %156) #9
  br label %165

165:                                              ; preds = %152, %162, %164
  %166 = add nuw nsw i64 %154, 1
  %167 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %168 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %167, i64 %51, i32 2
  %169 = icmp eq i64 %166, %138
  br i1 %169, label %139, label %170

170:                                              ; preds = %165
  %171 = load i8**, i8*** %168, align 8
  br label %152

172:                                              ; preds = %121
  %173 = load i8*, i8** %109, align 8
  %174 = tail call i8* @strcpy(i8* nonnull %131, i8* %173) #9
  %175 = add nuw nsw i64 %108, 1
  %176 = icmp eq i64 %175, %79
  br i1 %176, label %182, label %107

177:                                              ; preds = %151, %149, %139
  %178 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %179 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %178, i64 %51, i32 1
  store i32 0, i32* %179, align 4
  %180 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %6, align 8
  %181 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %180, i64 %51, i32 2
  store i8** null, i8*** %181, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.937, i64 0, i64 0), i32 %134)
  br label %185

182:                                              ; preds = %172, %75
  %183 = load i32, i32* %35, align 8
  %184 = add i32 %183, 1
  store i32 %184, i32* %35, align 8
  br label %185

185:                                              ; preds = %44, %177, %67, %32, %182, %104
  %186 = phi i32 [ 0, %182 ], [ -1, %104 ], [ -1, %177 ], [ -1, %67 ], [ -1, %32 ], [ 0, %44 ]
  ret i32 %186
}

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @loaderNamesArrayHasLayerProperty(%struct.VkLayerProperties* nocapture readonly, i32, i8** nocapture readonly) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %0, i64 0, i32 0, i64 0
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %3
  %7 = zext i32 %1 to i64
  br label %10

8:                                                ; preds = %10
  %9 = icmp eq i64 %16, %7
  br i1 %9, label %17, label %10

10:                                               ; preds = %8, %6
  %11 = phi i64 [ 0, %6 ], [ %16, %8 ]
  %12 = getelementptr inbounds i8*, i8** %2, i64 %11
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @strcmp(i8* %4, i8* %13) #15
  %15 = icmp eq i32 %14, 0
  %16 = add nuw nsw i64 %11, 1
  br i1 %15, label %17, label %8

17:                                               ; preds = %10, %8, %3
  %18 = phi i1 [ false, %3 ], [ false, %8 ], [ true, %10 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderDestroyLayerList(%struct.loader_instance* readonly, %struct.loader_device* readonly, %struct.loader_layer_list* nocapture) local_unnamed_addr #0 {
  %4 = icmp eq %struct.loader_device* %1, null
  %5 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 2
  %6 = bitcast %struct.loader_layer_properties** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %4, label %18, label %9

9:                                                ; preds = %3
  br i1 %8, label %29, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 3
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8
  %13 = icmp eq void (i8*, i8*)* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void %12(i8* %16, i8* nonnull %7) #9
  br label %29

17:                                               ; preds = %10
  tail call void @free(i8* nonnull %7) #9
  br label %29

18:                                               ; preds = %3
  br i1 %8, label %29, label %19

19:                                               ; preds = %18
  %20 = icmp eq %struct.loader_instance* %0, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %23 = load void (i8*, i8*)*, void (i8*, i8*)** %22, align 8
  %24 = icmp eq void (i8*, i8*)* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void %23(i8* %27, i8* nonnull %7) #9
  br label %29

28:                                               ; preds = %21, %19
  tail call void @free(i8* nonnull %7) #9
  br label %29

29:                                               ; preds = %28, %25, %18, %17, %14, %9
  %30 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 1
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 0
  store i64 0, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loaderAddLayerPropertiesToList(%struct.loader_instance*, %struct.loader_layer_list* nocapture, i32, %struct.loader_layer_properties* nocapture readonly) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %6 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %5, align 8
  %7 = icmp eq %struct.loader_layer_properties* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %33

12:                                               ; preds = %8, %4
  %13 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 0
  store i64 382464, i64* %13, align 8
  %14 = icmp eq %struct.loader_instance* %0, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %17 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %16, align 8
  %18 = icmp eq i8* (i8*, i64, i64, i32)* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i8* %17(i8* %21, i64 382464, i64 8, i32 4) #9
  br label %25

23:                                               ; preds = %15, %12
  %24 = tail call noalias i8* @malloc(i64 382464) #9
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i8* [ %22, %19 ], [ %24, %23 ]
  %27 = bitcast %struct.loader_layer_properties** %5 to i8**
  store i8* %26, i8** %27, align 8
  %28 = icmp eq i8* %26, null
  br i1 %28, label %73, label %29

29:                                               ; preds = %25
  %30 = load i64, i64* %13, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 %30, i1 false) #9
  %31 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %5, align 8
  br label %33

33:                                               ; preds = %29, %8
  %34 = phi %struct.loader_layer_properties* [ %32, %29 ], [ %6, %8 ]
  %35 = icmp ne %struct.loader_layer_properties* %34, null
  %36 = icmp ne i32 %2, 0
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %73

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %40 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 0
  %41 = bitcast %struct.loader_layer_properties** %5 to i8**
  %42 = zext i32 %2 to i64
  %43 = load i32, i32* %39, align 8
  br label %44

44:                                               ; preds = %63, %38
  %45 = phi i32 [ %43, %38 ], [ %70, %63 ]
  %46 = phi i64 [ 0, %38 ], [ %71, %63 ]
  %47 = add i32 %45, 1
  %48 = zext i32 %47 to i64
  %49 = mul nuw nsw i64 %48, 11952
  %50 = load i64, i64* %40, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %5, align 8
  br label %63

54:                                               ; preds = %44
  %55 = shl i64 %50, 1
  %56 = load i8*, i8** %41, align 8
  %57 = tail call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %56, i64 %50, i64 %55, i32 4)
  %58 = icmp eq i8* %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.938, i64 0, i64 0))
  br label %73

60:                                               ; preds = %54
  store i8* %57, i8** %41, align 8
  store i64 %55, i64* %40, align 8
  %61 = bitcast i8* %57 to %struct.loader_layer_properties*
  %62 = load i32, i32* %39, align 8
  br label %63

63:                                               ; preds = %52, %60
  %64 = phi i32 [ %45, %52 ], [ %62, %60 ]
  %65 = phi %struct.loader_layer_properties* [ %53, %52 ], [ %61, %60 ]
  %66 = zext i32 %64 to i64
  %67 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %65, i64 %66, i32 0, i32 0, i64 0
  %68 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %3, i64 %46, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 11952, i1 false)
  %69 = load i32, i32* %39, align 8
  %70 = add i32 %69, 1
  store i32 %70, i32* %39, align 8
  %71 = add nuw nsw i64 %46, 1
  %72 = icmp eq i64 %71, %42
  br i1 %72, label %73, label %44

73:                                               ; preds = %63, %33, %25, %59
  %74 = phi i32 [ 0, %33 ], [ -1, %59 ], [ -1, %25 ], [ 0, %63 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @loaderImplicitLayerIsEnabled(%struct.loader_instance* readonly, %struct.loader_layer_properties* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.tm, align 8
  %5 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 9, i32 0, i64 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = tail call i8* @getenv(i8* %5) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 9, i32 1, i64 0
  %13 = tail call i32 @strcmp(i8* %12, i8* nonnull %9) #15
  %14 = icmp eq i32 %13, 0
  %15 = zext i1 %14 to i8
  br label %16

16:                                               ; preds = %8, %11, %2
  %17 = phi i8 [ 1, %2 ], [ 0, %8 ], [ %15, %11 ]
  %18 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 8, i32 0, i64 0
  %19 = tail call i8* @getenv(i8* %18) #9
  %20 = icmp eq i8* %19, null
  %21 = select i1 %20, i8 %17, i8 0
  %22 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 16
  %23 = load i8, i8* %22, align 1, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %64, label %25

25:                                               ; preds = %16
  %26 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call i64 @time(i64* null) #9
  store i64 %27, i64* %3, align 8
  %28 = call %struct.tm* @localtime(i64* nonnull %3) #9
  %29 = getelementptr inbounds %struct.tm, %struct.tm* %28, i64 0, i32 8
  %30 = load i32, i32* %29, align 8
  %31 = bitcast %struct.tm* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 40, i1 false) #9
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 0
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 1
  %34 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 17, i32 4
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  store i32 %36, i32* %33, align 4
  %37 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 2
  %38 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 17, i32 3
  %39 = load i8, i8* %38, align 2
  %40 = zext i8 %39 to i32
  store i32 %40, i32* %37, align 8
  %41 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 3
  %42 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 17, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  store i32 %44, i32* %41, align 4
  %45 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 4
  %46 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 17, i32 1
  %47 = load i8, i8* %46, align 2
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %48, -1
  store i32 %49, i32* %45, align 8
  %50 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 5
  %51 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 17, i32 0
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = add nsw i32 %53, -1900
  store i32 %54, i32* %50, align 4
  %55 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 6
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 7
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 8
  store i32 %30, i32* %57, align 8
  %58 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 9
  %59 = bitcast i64* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #9
  %60 = call i64 @mktime(%struct.tm* nonnull %4) #9
  %61 = load i64, i64* %3, align 8
  %62 = icmp slt i64 %61, %60
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %63 = zext i1 %62 to i8
  br label %64

64:                                               ; preds = %16, %25
  %65 = phi i8 [ %63, %25 ], [ %21, %16 ]
  %66 = icmp eq %struct.loader_instance* %0, null
  br i1 %66, label %108, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 20
  %69 = load i8, i8* %68, align 8, !range !4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %108, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 19, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %108, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 19, i32 2
  %77 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %76, align 8
  %78 = zext i32 %73 to i64
  br label %81

79:                                               ; preds = %81
  %80 = icmp ult i64 %87, %78
  br i1 %80, label %81, label %108

81:                                               ; preds = %75, %79
  %82 = phi i64 [ 0, %75 ], [ %87, %79 ]
  %83 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %77, i64 %82
  %84 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %83, i64 0, i32 0, i32 0, i64 0
  %85 = call i32 @strcmp(i8* %84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0)) #15
  %86 = icmp eq i32 %85, 0
  %87 = add nuw nsw i64 %82, 1
  br i1 %86, label %88, label %79

88:                                               ; preds = %81
  %89 = and i64 %82, 4294967295
  %90 = icmp eq %struct.loader_layer_properties* %83, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %77, i64 %89, i32 10
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %77, i64 %89, i32 11
  %97 = load [1024 x i8]*, [1024 x i8]** %96, align 8
  %98 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 0, i32 0, i64 0
  %99 = zext i32 %93 to i64
  br label %102

100:                                              ; preds = %102
  %101 = icmp ult i64 %107, %99
  br i1 %101, label %102, label %108

102:                                              ; preds = %95, %100
  %103 = phi i64 [ 0, %95 ], [ %107, %100 ]
  %104 = getelementptr inbounds [1024 x i8], [1024 x i8]* %97, i64 %103, i64 0
  %105 = call i32 @strcmp(i8* %104, i8* %98) #15
  %106 = icmp eq i32 %105, 0
  %107 = add nuw nsw i64 %103, 1
  br i1 %106, label %108, label %100

108:                                              ; preds = %79, %100, %102, %91, %71, %88, %67, %64
  %109 = phi i8 [ %65, %67 ], [ %65, %64 ], [ %65, %88 ], [ %65, %91 ], [ %65, %71 ], [ %65, %100 ], [ 1, %102 ], [ %65, %79 ]
  %110 = and i8 %109, 1
  %111 = icmp ne i8 %110, 0
  ret i1 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @loaderAddMetaLayer(%struct.loader_instance*, %struct.loader_layer_properties* nocapture readonly, %struct.loader_layer_list* nocapture, %struct.loader_layer_list*, %struct.loader_layer_list* nocapture readonly) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 10
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %61, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 11
  %11 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %4, i64 0, i32 1
  %12 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %4, i64 0, i32 2
  %13 = icmp eq %struct.loader_layer_list* %3, null
  br label %17

14:                                               ; preds = %55
  %15 = and i8 %56, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %63, label %61

17:                                               ; preds = %9, %55
  %18 = phi i64 [ 0, %9 ], [ %57, %55 ]
  %19 = phi i8 [ 1, %9 ], [ %56, %55 ]
  %20 = load [1024 x i8]*, [1024 x i8]** %10, align 8
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %20, i64 %18, i64 0
  %22 = load i32, i32* %11, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %54, label %24

24:                                               ; preds = %17
  %25 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %12, align 8
  %26 = zext i32 %22 to i64
  br label %29

27:                                               ; preds = %29
  %28 = icmp eq i64 %35, %26
  br i1 %28, label %54, label %29

29:                                               ; preds = %27, %24
  %30 = phi i64 [ 0, %24 ], [ %35, %27 ]
  %31 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %25, i64 %30
  %32 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %31, i64 0, i32 0, i32 0, i64 0
  %33 = tail call i32 @strcmp(i8* %21, i8* %32) #15
  %34 = icmp eq i32 %33, 0
  %35 = add nuw nsw i64 %30, 1
  br i1 %34, label %36, label %27

36:                                               ; preds = %29
  %37 = icmp eq %struct.loader_layer_properties* %31, null
  br i1 %37, label %54, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %25, i64 %30, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  tail call fastcc void @loaderAddImplicitLayer(%struct.loader_instance* %0, %struct.loader_layer_properties* nonnull %31, %struct.loader_layer_list* %2, %struct.loader_layer_list* %3, %struct.loader_layer_list* %4)
  br label %55

44:                                               ; preds = %38
  %45 = and i32 %40, 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = tail call zeroext i1 @loaderAddMetaLayer(%struct.loader_instance* %0, %struct.loader_layer_properties* nonnull %31, %struct.loader_layer_list* %2, %struct.loader_layer_list* %3, %struct.loader_layer_list* %4)
  %49 = zext i1 %48 to i8
  br label %55

50:                                               ; preds = %44
  %51 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %2, i32 1, %struct.loader_layer_properties* nonnull %31)
  br i1 %13, label %55, label %52

52:                                               ; preds = %50
  %53 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %3, i32 1, %struct.loader_layer_properties* nonnull %31)
  br label %55

54:                                               ; preds = %27, %17, %36
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.939, i64 0, i64 0), i8* null, i8* %21)
  br label %55

55:                                               ; preds = %50, %52, %47, %43, %54
  %56 = phi i8 [ 0, %54 ], [ %19, %50 ], [ %19, %52 ], [ %49, %47 ], [ %19, %43 ]
  %57 = add nuw nsw i64 %18, 1
  %58 = load i32, i32* %6, align 8
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %17, label %14

61:                                               ; preds = %14, %5
  %62 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %2, i32 1, %struct.loader_layer_properties* %1)
  br label %63

63:                                               ; preds = %14, %61
  %64 = phi i1 [ true, %61 ], [ false, %14 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @loaderAddImplicitLayer(%struct.loader_instance*, %struct.loader_layer_properties*, %struct.loader_layer_list* nocapture, %struct.loader_layer_list*, %struct.loader_layer_list* nocapture readonly) unnamed_addr #0 {
  %6 = tail call zeroext i1 @loaderImplicitLayerIsEnabled(%struct.loader_instance* %0, %struct.loader_layer_properties* %1)
  br i1 %6, label %7, label %44

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 22
  %11 = lshr i32 %9, 12
  %12 = trunc i32 %11 to i16
  %13 = and i16 %12, 1023
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 1
  %15 = load i16, i16* %14, align 8
  %16 = zext i16 %15 to i32
  %17 = icmp ult i32 %10, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %7
  %19 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 2
  %20 = load i16, i16* %19, align 2
  br label %27

21:                                               ; preds = %7
  %22 = icmp eq i32 %10, %16
  br i1 %22, label %23, label %32

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 2
  %25 = load i16, i16* %24, align 2
  %26 = icmp ugt i16 %25, %13
  br i1 %26, label %27, label %32

27:                                               ; preds = %18, %23
  %28 = phi i16 [ %20, %18 ], [ %25, %23 ]
  %29 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 0, i32 0, i64 0
  %30 = zext i16 %13 to i32
  %31 = zext i16 %28 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.1071, i64 0, i64 0), i8* %29, i32 %10, i32 %30, i32 %16, i32 %31)
  br label %44

32:                                               ; preds = %23, %21
  %33 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %2, i32 1, %struct.loader_layer_properties* %1)
  %39 = icmp eq %struct.loader_layer_list* %3, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %3, i32 1, %struct.loader_layer_properties* %1)
  br label %44

42:                                               ; preds = %32
  %43 = tail call zeroext i1 @loaderAddMetaLayer(%struct.loader_instance* %0, %struct.loader_layer_properties* %1, %struct.loader_layer_list* %2, %struct.loader_layer_list* %3, %struct.loader_layer_list* %4)
  br label %44

44:                                               ; preds = %5, %27, %37, %42, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loaderAddLayerNameToList(%struct.loader_instance*, i8*, i32, %struct.loader_layer_list* nocapture readonly, %struct.loader_layer_list* nocapture, %struct.loader_layer_list*) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %3, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %3, i64 0, i32 2
  br label %15

12:                                               ; preds = %41
  %13 = and i8 %42, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %47, label %52

15:                                               ; preds = %10, %41
  %16 = phi i64 [ 0, %10 ], [ %43, %41 ]
  %17 = phi i8 [ 0, %10 ], [ %42, %41 ]
  %18 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %11, align 8
  %19 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %18, i64 %16
  %20 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %19, i64 0, i32 0, i32 0, i64 0
  %21 = tail call i32 @strcmp(i8* %20, i8* %1) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %41

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %18, i64 %16, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, %2
  %27 = icmp eq i32 %26, %2
  br i1 %27, label %28, label %41

28:                                               ; preds = %23
  %29 = and i32 %25, 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %4, i32 1, %struct.loader_layer_properties* %19)
  %33 = icmp eq i32 %32, 0
  %34 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %5, i32 1, %struct.loader_layer_properties* %19)
  %35 = icmp eq i32 %34, 0
  %36 = or i1 %33, %35
  %37 = select i1 %36, i8 1, i8 %17
  br label %41

38:                                               ; preds = %28
  %39 = tail call zeroext i1 @loaderAddMetaLayer(%struct.loader_instance* %0, %struct.loader_layer_properties* %19, %struct.loader_layer_list* %4, %struct.loader_layer_list* %5, %struct.loader_layer_list* %3)
  %40 = zext i1 %39 to i8
  br label %41

41:                                               ; preds = %31, %38, %23, %15
  %42 = phi i8 [ %40, %38 ], [ %17, %23 ], [ %17, %15 ], [ %37, %31 ]
  %43 = add nuw nsw i64 %16, 1
  %44 = load i32, i32* %7, align 8
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %15, label %12

47:                                               ; preds = %6, %12
  %48 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.940, i64 0, i64 0)) #15
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.941, i64 0, i64 0), i8* %1)
  br label %52

51:                                               ; preds = %47
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.942, i64 0, i64 0))
  br label %52

52:                                               ; preds = %12, %50, %51
  %53 = phi i32 [ 0, %12 ], [ 0, %50 ], [ -6, %51 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_get_icd_loader_instance_extensions(%struct.loader_instance*, %struct.loader_icd_tramp_list* nocapture readonly, %struct.loader_extension_list*) local_unnamed_addr #0 {
  %4 = alloca %struct.loader_extension_list, align 8
  %5 = bitcast %struct.loader_extension_list* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.943, i64 0, i64 0))
  %6 = tail call i8* @getenv(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.944, i64 0, i64 0)) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strtol(i8* nocapture nonnull %6, i8** null, i32 10) #9
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %8, %3
  %13 = phi i1 [ true, %3 ], [ %11, %8 ]
  %14 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %139, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %4, i64 0, i32 1
  %19 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %4, i64 0, i32 0
  %20 = icmp eq %struct.loader_instance* %0, null
  %21 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %22 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %23 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %4, i64 0, i32 2
  %24 = bitcast %struct.VkExtensionProperties** %23 to i8**
  %25 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 2
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  br label %31

27:                                               ; preds = %136
  %28 = load i32, i32* %14, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %138, %29
  br i1 %30, label %31, label %139

31:                                               ; preds = %17, %27
  %32 = phi i64 [ 0, %17 ], [ %138, %27 ]
  store i32 0, i32* %18, align 8
  store i64 0, i64* %19, align 8
  br i1 %20, label %39, label %33

33:                                               ; preds = %31
  %34 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %21, align 8
  %35 = icmp eq i8* (i8*, i64, i64, i32)* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = load i8*, i8** %22, align 8
  %38 = tail call i8* %34(i8* %37, i64 8320, i64 8, i32 4) #9
  br label %41

39:                                               ; preds = %33, %31
  %40 = tail call noalias i8* @malloc(i64 8320) #9
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i8* [ %38, %36 ], [ %40, %39 ]
  store i8* %42, i8** %24, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0)) #9
  br label %140

45:                                               ; preds = %41
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %42, i8 0, i64 8320, i1 false) #9
  store i64 8320, i64* %19, align 8
  %46 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %25, align 8
  %47 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %46, i64 %32, i32 7
  %48 = load i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)** %47, align 8
  %49 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %46, i64 %32, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = call fastcc i32 @loader_add_instance_extensions(%struct.loader_instance* %0, i32 (i8*, i32*, %struct.VkExtensionProperties*)* %48, i8* %50, %struct.loader_extension_list* nonnull %4)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  %54 = load i8*, i8** %24, align 8
  br label %125

55:                                               ; preds = %45
  %56 = load i32, i32* %18, align 8
  %57 = icmp sgt i32 %56, 0
  %58 = and i1 %13, %57
  br i1 %58, label %59, label %120

59:                                               ; preds = %55
  %60 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %23, align 8
  br label %61

61:                                               ; preds = %59, %114
  %62 = phi i32 [ %56, %59 ], [ %115, %114 ]
  %63 = phi i32 [ 0, %59 ], [ %117, %114 ]
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %60, i64 %64, i32 0, i64 0
  br label %89

66:                                               ; preds = %89
  %67 = icmp eq i64 %95, 20
  br i1 %67, label %68, label %89

68:                                               ; preds = %66
  %69 = add i32 %63, 1
  %70 = icmp ult i32 %69, %62
  br i1 %70, label %71, label %96

71:                                               ; preds = %68
  %72 = zext i32 %69 to i64
  %73 = xor i32 %63, 1
  %74 = add i32 %62, %73
  %75 = add i32 %62, -2
  %76 = and i32 %74, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %71
  %79 = zext i32 %63 to i64
  %80 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %60, i64 %79, i32 0, i64 0
  %81 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %60, i64 %72, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 260, i1 false)
  %82 = add i32 %63, 2
  %83 = add nuw nsw i64 %72, 1
  br label %84

84:                                               ; preds = %78, %71
  %85 = phi i64 [ %83, %78 ], [ %72, %71 ]
  %86 = phi i32 [ %82, %78 ], [ %69, %71 ]
  %87 = phi i32 [ %69, %78 ], [ %63, %71 ]
  %88 = icmp eq i32 %75, %63
  br i1 %88, label %96, label %99

89:                                               ; preds = %61, %66
  %90 = phi i64 [ 0, %61 ], [ %95, %66 ]
  %91 = getelementptr inbounds [21 x i8*], [21 x i8*]* @LOADER_INSTANCE_EXTENSIONS, i64 0, i64 %90
  %92 = load i8*, i8** %91, align 8
  %93 = tail call i32 @strcmp(i8* %65, i8* %92) #15
  %94 = icmp eq i32 %93, 0
  %95 = add nuw nsw i64 %90, 1
  br i1 %94, label %114, label %66

96:                                               ; preds = %84, %99, %68
  %97 = add i32 %62, -1
  %98 = add nsw i32 %63, -1
  br label %114

99:                                               ; preds = %84, %99
  %100 = phi i64 [ %111, %99 ], [ %85, %84 ]
  %101 = phi i32 [ %110, %99 ], [ %86, %84 ]
  %102 = phi i32 [ %112, %99 ], [ %87, %84 ]
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %60, i64 %103, i32 0, i64 0
  %105 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %60, i64 %100, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 260, i1 false)
  %106 = add nuw nsw i64 %100, 1
  %107 = and i64 %100, 4294967295
  %108 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %60, i64 %107, i32 0, i64 0
  %109 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %60, i64 %106, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 260, i1 false)
  %110 = add i32 %101, 2
  %111 = add nuw nsw i64 %100, 2
  %112 = trunc i64 %106 to i32
  %113 = icmp eq i32 %110, %62
  br i1 %113, label %96, label %99

114:                                              ; preds = %89, %96
  %115 = phi i32 [ %97, %96 ], [ %62, %89 ]
  %116 = phi i32 [ %98, %96 ], [ %63, %89 ]
  %117 = add nsw i32 %116, 1
  %118 = icmp slt i32 %117, %115
  br i1 %118, label %61, label %119

119:                                              ; preds = %114
  store i32 %115, i32* %18, align 8
  br label %120

120:                                              ; preds = %55, %119
  %121 = phi i32 [ %115, %119 ], [ %56, %55 ]
  %122 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %23, align 8
  %123 = tail call i32 @loader_add_to_ext_list(%struct.loader_instance* %0, %struct.loader_extension_list* %2, i32 %121, %struct.VkExtensionProperties* %122)
  %124 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %122, i64 0, i32 0, i64 0
  br label %125

125:                                              ; preds = %53, %120
  %126 = phi i8* [ %124, %120 ], [ %54, %53 ]
  %127 = phi i32 [ %123, %120 ], [ %51, %53 ]
  %128 = icmp eq i8* %126, null
  br i1 %128, label %136, label %129

129:                                              ; preds = %125
  br i1 %20, label %135, label %130

130:                                              ; preds = %129
  %131 = load void (i8*, i8*)*, void (i8*, i8*)** %26, align 8
  %132 = icmp eq void (i8*, i8*)* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = load i8*, i8** %22, align 8
  tail call void %131(i8* %134, i8* nonnull %126) #9
  br label %136

135:                                              ; preds = %130, %129
  tail call void @free(i8* nonnull %126) #9
  br label %136

136:                                              ; preds = %125, %133, %135
  store i32 0, i32* %18, align 8
  store i64 0, i64* %19, align 8
  %137 = icmp eq i32 %127, 0
  %138 = add nuw nsw i64 %32, 1
  br i1 %137, label %27, label %140

139:                                              ; preds = %27, %12
  tail call void @debug_utils_AddInstanceExtensions(%struct.loader_instance* %0, %struct.loader_extension_list* %2) #9
  br label %140

140:                                              ; preds = %136, %44, %139
  %141 = phi i32 [ 0, %139 ], [ -1, %44 ], [ %127, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loader_add_instance_extensions(%struct.loader_instance*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i8*, %struct.loader_extension_list* nocapture) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca [64 x i8], align 16
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9
  store i32 0, i32* %5, align 4
  %8 = icmp eq i32 (i8*, i32*, %struct.VkExtensionProperties*)* %1, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %4
  %10 = call i32 %1(i8* null, i32* nonnull %5, %struct.VkExtensionProperties* null) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1072, i64 0, i64 0), i8* %2)
  br label %50

13:                                               ; preds = %9
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %50, label %16

16:                                               ; preds = %13
  %17 = zext i32 %14 to i64
  %18 = mul nuw nsw i64 %17, 260
  %19 = alloca %struct.VkExtensionProperties, i64 %17, align 16
  %20 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %19, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 %18, i1 false)
  %21 = call i32 %1(i8* null, i32* nonnull %5, %struct.VkExtensionProperties* nonnull %19) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = load i32, i32* %5, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  br label %29

28:                                               ; preds = %16
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1073, i64 0, i64 0), i8* %2)
  br label %50

29:                                               ; preds = %26, %45
  %30 = phi i64 [ 0, %26 ], [ %46, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 64, i1 false)
  %31 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %19, i64 %30
  %32 = call zeroext i1 @wsi_unsupported_instance_extension(%struct.VkExtensionProperties* %31) #9
  br i1 %32, label %45, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %19, i64 %30, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = lshr i32 %35, 22
  %37 = lshr i32 %35, 12
  %38 = and i32 %37, 1023
  %39 = and i32 %35, 4095
  %40 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %27, i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.930, i64 0, i64 0), i32 %36, i32 %38, i32 %39) #9
  %41 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %31, i64 0, i32 0, i64 0
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1074, i64 0, i64 0), i8* %41, i8* %2, i8* nonnull %27)
  %42 = call i32 @loader_add_to_ext_list(%struct.loader_instance* %0, %struct.loader_extension_list* %3, i32 1, %struct.VkExtensionProperties* %31)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %33
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1075, i64 0, i64 0), i8* %2)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #9
  br label %50

45:                                               ; preds = %33, %29
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #9
  %46 = add nuw nsw i64 %30, 1
  %47 = load i32, i32* %5, align 4
  %48 = zext i32 %47 to i64
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %29, label %50

50:                                               ; preds = %45, %23, %44, %12, %28, %13, %4
  %51 = phi i32 [ %10, %12 ], [ 0, %13 ], [ %21, %28 ], [ %42, %44 ], [ 0, %4 ], [ 0, %23 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9
  ret i32 %51
}

declare void @debug_utils_AddInstanceExtensions(%struct.loader_instance*, %struct.loader_extension_list*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_destroy_logical_device(%struct.loader_instance*, %struct.loader_device*, %struct.VkAllocationCallbacks* readonly) local_unnamed_addr #0 {
  %4 = icmp eq %struct.VkAllocationCallbacks* %2, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6
  %7 = bitcast %struct.VkAllocationCallbacks* %6 to i8*
  %8 = bitcast %struct.VkAllocationCallbacks* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %8, i64 48, i1 false)
  br label %9

9:                                                ; preds = %3, %5
  %10 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 5, i32 2
  %11 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %12 = icmp eq %struct.loader_layer_properties* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 5
  tail call void @loaderDeactivateLayers(%struct.loader_instance* %0, %struct.loader_device* %1, %struct.loader_layer_list* %14)
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 4, i32 2
  %17 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %16, align 8
  %18 = icmp eq %struct.loader_layer_properties* %17, null
  %19 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %17, i64 0, i32 0, i32 0, i64 0
  br i1 %18, label %43, label %20

20:                                               ; preds = %15
  %21 = icmp eq %struct.loader_device* %1, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 3
  %24 = load void (i8*, i8*)*, void (i8*, i8*)** %23, align 8
  %25 = icmp eq void (i8*, i8*)* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void %24(i8* %28, i8* nonnull %19) #9
  br label %40

29:                                               ; preds = %22
  tail call void @free(i8* nonnull %19) #9
  br label %40

30:                                               ; preds = %20
  %31 = icmp eq %struct.loader_instance* %0, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %34 = load void (i8*, i8*)*, void (i8*, i8*)** %33, align 8
  %35 = icmp eq void (i8*, i8*)* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void %34(i8* %38, i8* nonnull %19) #9
  br label %40

39:                                               ; preds = %32, %30
  tail call void @free(i8* nonnull %19) #9
  br label %40

40:                                               ; preds = %26, %29, %36, %39
  %41 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 4, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 4, i32 0
  store i64 0, i64* %42, align 8
  br label %43

43:                                               ; preds = %15, %40
  %44 = bitcast %struct.loader_device* %1 to i8*
  %45 = icmp eq %struct.loader_device* %1, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 3
  %48 = load void (i8*, i8*)*, void (i8*, i8*)** %47, align 8
  %49 = icmp eq void (i8*, i8*)* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void %48(i8* %52, i8* nonnull %44) #9
  br label %54

53:                                               ; preds = %46
  tail call void @free(i8* nonnull %44) #9
  br label %54

54:                                               ; preds = %43, %50, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderDeactivateLayers(%struct.loader_instance*, %struct.loader_device* readonly, %struct.loader_layer_list* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 2
  br label %37

9:                                                ; preds = %48, %3
  %10 = icmp eq %struct.loader_device* %1, null
  %11 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 2
  %12 = bitcast %struct.loader_layer_properties** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %10, label %24, label %15

15:                                               ; preds = %9
  br i1 %14, label %35, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 3
  %18 = load void (i8*, i8*)*, void (i8*, i8*)** %17, align 8
  %19 = icmp eq void (i8*, i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 6, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void %18(i8* %22, i8* nonnull %13) #9
  br label %35

23:                                               ; preds = %16
  tail call void @free(i8* nonnull %13) #9
  br label %35

24:                                               ; preds = %9
  br i1 %14, label %35, label %25

25:                                               ; preds = %24
  %26 = icmp eq %struct.loader_instance* %0, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %29 = load void (i8*, i8*)*, void (i8*, i8*)** %28, align 8
  %30 = icmp eq void (i8*, i8*)* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void %29(i8* %33, i8* nonnull %13) #9
  br label %35

34:                                               ; preds = %27, %25
  tail call void @free(i8* nonnull %13) #9
  br label %35

35:                                               ; preds = %15, %20, %23, %24, %31, %34
  store i32 0, i32* %4, align 8
  %36 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 0
  store i64 0, i64* %36, align 8
  ret void

37:                                               ; preds = %7, %48
  %38 = phi i32 [ %5, %7 ], [ %49, %48 ]
  %39 = phi i64 [ 0, %7 ], [ %50, %48 ]
  %40 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  %41 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %40, i64 %39, i32 4
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %37
  %45 = tail call i32 @dlclose(i8* nonnull %42) #9
  %46 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %40, i64 %39, i32 3, i64 0
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1196, i64 0, i64 0), i8* %46) #9
  store i8* null, i8** %41, align 8
  %47 = load i32, i32* %4, align 8
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi i32 [ %38, %37 ], [ %47, %44 ]
  %50 = add nuw nsw i64 %39, 1
  %51 = zext i32 %49 to i64
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %37, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.loader_device* @loader_create_logical_device(%struct.loader_instance*, %struct.VkAllocationCallbacks* readonly) local_unnamed_addr #0 {
  %3 = icmp ne %struct.VkAllocationCallbacks* %1, null
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.VkAllocationCallbacks, %struct.VkAllocationCallbacks* %1, i64 0, i32 1
  %6 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %5, align 8
  %7 = getelementptr inbounds %struct.VkAllocationCallbacks, %struct.VkAllocationCallbacks* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i8* %6(i8* %8, i64 5080, i64 8, i32 3) #9
  br label %12

10:                                               ; preds = %2
  %11 = tail call noalias i8* @malloc(i64 5080) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %9, %4 ], [ %11, %10 ]
  %14 = bitcast i8* %13 to %struct.loader_device*
  %15 = icmp eq i8* %13, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.945, i64 0, i64 0))
  br label %21

17:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 5080, i1 false)
  br i1 %3, label %18, label %21

18:                                               ; preds = %17
  %19 = getelementptr inbounds i8, i8* %13, i64 5016
  %20 = bitcast %struct.VkAllocationCallbacks* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %20, i64 48, i1 false)
  br label %21

21:                                               ; preds = %17, %18, %16
  %22 = phi %struct.loader_device* [ null, %16 ], [ %14, %18 ], [ %14, %17 ]
  ret %struct.loader_device* %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @loader_add_logical_device(%struct.loader_instance* nocapture readnone, %struct.loader_icd_term* nocapture, %struct.loader_device*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %1, i64 0, i32 2
  %5 = bitcast %struct.loader_device** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 8
  %8 = bitcast %struct.loader_device** %7 to i64*
  store i64 %6, i64* %8, align 8
  store %struct.loader_device* %2, %struct.loader_device** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_remove_logical_device(%struct.loader_instance*, %struct.loader_icd_term*, %struct.loader_device*, %struct.VkAllocationCallbacks* readonly) local_unnamed_addr #0 {
  %5 = icmp ne %struct.loader_icd_term* %1, null
  %6 = icmp ne %struct.loader_device* %2, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %62

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %1, i64 0, i32 2
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi %struct.loader_device** [ %9, %8 ], [ %17, %10 ]
  %12 = phi %struct.loader_device* [ null, %8 ], [ %13, %10 ]
  %13 = load %struct.loader_device*, %struct.loader_device** %11, align 8
  %14 = icmp eq %struct.loader_device* %13, null
  %15 = icmp eq %struct.loader_device* %13, %2
  %16 = or i1 %14, %15
  %17 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %13, i64 0, i32 8
  br i1 %16, label %18, label %10

18:                                               ; preds = %10
  %19 = icmp eq %struct.loader_device* %12, null
  %20 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 8
  %21 = bitcast %struct.loader_device** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 8
  %24 = select i1 %19, %struct.loader_device** %9, %struct.loader_device** %23
  %25 = bitcast %struct.loader_device** %24 to i64*
  store i64 %22, i64* %25, align 8
  %26 = icmp eq %struct.VkAllocationCallbacks* %3, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 6
  %29 = bitcast %struct.VkAllocationCallbacks* %28 to i8*
  %30 = bitcast %struct.VkAllocationCallbacks* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %30, i64 48, i1 false) #9
  br label %31

31:                                               ; preds = %27, %18
  %32 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 5, i32 2
  %33 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %32, align 8
  %34 = icmp eq %struct.loader_layer_properties* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 5
  tail call void @loaderDeactivateLayers(%struct.loader_instance* %0, %struct.loader_device* nonnull %2, %struct.loader_layer_list* %36) #9
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 4, i32 2
  %39 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %38, align 8
  %40 = icmp eq %struct.loader_layer_properties* %39, null
  %41 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %39, i64 0, i32 0, i32 0, i64 0
  br i1 %40, label %53, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 6, i32 3
  %44 = load void (i8*, i8*)*, void (i8*, i8*)** %43, align 8
  %45 = icmp eq void (i8*, i8*)* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 6, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void %44(i8* %48, i8* nonnull %41) #9
  br label %50

49:                                               ; preds = %42
  tail call void @free(i8* nonnull %41) #9
  br label %50

50:                                               ; preds = %49, %46
  %51 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 4, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 4, i32 0
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %37, %50
  %54 = bitcast %struct.loader_device* %2 to i8*
  %55 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 6, i32 3
  %56 = load void (i8*, i8*)*, void (i8*, i8*)** %55, align 8
  %57 = icmp eq void (i8*, i8*)* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %2, i64 0, i32 6, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void %56(i8* %60, i8* nonnull %54) #9
  br label %62

61:                                               ; preds = %53
  tail call void @free(i8* nonnull %54) #9
  br label %62

62:                                               ; preds = %61, %58, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @loader_get_icd_interface_version(i32 (i32*)*, i32*) local_unnamed_addr #0 {
  %3 = icmp eq i32 (i32*)* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 0, i32* %1, align 4
  br label %8

5:                                                ; preds = %2
  store i32 6, i32* %1, align 4
  %6 = tail call i32 %0(i32* %1) #9
  %7 = icmp eq i32 %6, -9
  br i1 %7, label %9, label %8

8:                                                ; preds = %5, %4
  br label %9

9:                                                ; preds = %5, %8
  %10 = phi i1 [ true, %8 ], [ false, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_scanned_icd_clear(%struct.loader_instance* readonly, %struct.loader_icd_tramp_list* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 2
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = icmp eq %struct.loader_instance* %0, null
  %13 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %30

15:                                               ; preds = %47, %6
  %16 = bitcast %struct.loader_scanned_icd** %10 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = icmp eq %struct.loader_instance* %0, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %23 = load void (i8*, i8*)*, void (i8*, i8*)** %22, align 8
  %24 = icmp eq void (i8*, i8*)* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void %23(i8* %27, i8* nonnull %17) #9
  br label %29

28:                                               ; preds = %21, %19
  tail call void @free(i8* nonnull %17) #9
  br label %29

29:                                               ; preds = %15, %25, %28
  store i64 0, i64* %3, align 8
  store i32 0, i32* %7, align 8
  store %struct.loader_scanned_icd* null, %struct.loader_scanned_icd** %10, align 8
  br label %52

30:                                               ; preds = %11, %47
  %31 = phi i64 [ 0, %11 ], [ %48, %47 ]
  %32 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %10, align 8
  %33 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %32, i64 %31, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = tail call i32 @dlclose(i8* %34) #9
  %36 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %10, align 8
  %37 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %36, i64 %31, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %30
  br i1 %12, label %46, label %41

41:                                               ; preds = %40
  %42 = load void (i8*, i8*)*, void (i8*, i8*)** %13, align 8
  %43 = icmp eq void (i8*, i8*)* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = load i8*, i8** %14, align 8
  tail call void %42(i8* %45, i8* nonnull %38) #9
  br label %47

46:                                               ; preds = %41, %40
  tail call void @free(i8* nonnull %38) #9
  br label %47

47:                                               ; preds = %30, %44, %46
  %48 = add nuw nsw i64 %31, 1
  %49 = load i32, i32* %7, align 8
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %48, %50
  br i1 %51, label %30, label %15

52:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_initialize() local_unnamed_addr #0 {
  %1 = alloca %struct.cJSON_Hooks, align 8
  %2 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull @loader_lock, %union.pthread_mutexattr_t* null) #9
  %3 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull @loader_json_lock, %union.pthread_mutexattr_t* null) #9
  %4 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull @loader_preload_icd_lock, %union.pthread_mutexattr_t* null) #9
  %5 = load i32, i32* @g_loader_debug, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %67

7:                                                ; preds = %0
  store i32 0, i32* @g_loader_debug, align 4
  %8 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1076, i64 0, i64 0)) #9
  br label %9

9:                                                ; preds = %64, %7
  %10 = phi i32 [ 0, %7 ], [ %65, %64 ]
  %11 = phi i8* [ %8, %7 ], [ %66, %64 ]
  %12 = icmp eq i8* %11, null
  br i1 %12, label %67, label %13

13:                                               ; preds = %9
  %14 = tail call i8* @strchr(i8* nonnull %11, i32 44) #15
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = ptrtoint i8* %14 to i64
  %18 = ptrtoint i8* %11 to i64
  %19 = sub i64 %17, %18
  br label %22

20:                                               ; preds = %13
  %21 = tail call i64 @strlen(i8* nonnull %11) #15
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi i64 [ %19, %16 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %64, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1077, i64 0, i64 0), i64 %23) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  store i32 -1, i32* @g_loader_debug, align 4
  store i32 -1, i32* @g_loader_log_msgs, align 4
  br label %64

29:                                               ; preds = %25
  %30 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1078, i64 0, i64 0), i64 %23) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = or i32 %10, 2
  store i32 %33, i32* @g_loader_debug, align 4
  %34 = load i32, i32* @g_loader_log_msgs, align 4
  %35 = or i32 %34, 2
  store i32 %35, i32* @g_loader_log_msgs, align 4
  br label %64

36:                                               ; preds = %29
  %37 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1079, i64 0, i64 0), i64 %23) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = or i32 %10, 1
  store i32 %40, i32* @g_loader_debug, align 4
  %41 = load i32, i32* @g_loader_log_msgs, align 4
  %42 = or i32 %41, 1
  store i32 %42, i32* @g_loader_log_msgs, align 4
  br label %64

43:                                               ; preds = %36
  %44 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1080, i64 0, i64 0), i64 %23) #15
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %43
  %47 = or i32 %10, 4
  store i32 %47, i32* @g_loader_debug, align 4
  %48 = load i32, i32* @g_loader_log_msgs, align 4
  %49 = or i32 %48, 4
  store i32 %49, i32* @g_loader_log_msgs, align 4
  br label %64

50:                                               ; preds = %43
  %51 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1081, i64 0, i64 0), i64 %23) #15
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %50
  %54 = or i32 %10, 8
  store i32 %54, i32* @g_loader_debug, align 4
  %55 = load i32, i32* @g_loader_log_msgs, align 4
  %56 = or i32 %55, 8
  store i32 %56, i32* @g_loader_log_msgs, align 4
  br label %64

57:                                               ; preds = %50
  %58 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1082, i64 0, i64 0), i64 %23) #15
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = or i32 %10, 16
  store i32 %61, i32* @g_loader_debug, align 4
  %62 = load i32, i32* @g_loader_log_msgs, align 4
  %63 = or i32 %62, 16
  store i32 %63, i32* @g_loader_log_msgs, align 4
  br label %64

64:                                               ; preds = %60, %57, %53, %46, %39, %32, %28, %22
  %65 = phi i32 [ %10, %22 ], [ -1, %28 ], [ %40, %39 ], [ %54, %53 ], [ %61, %60 ], [ %10, %57 ], [ %47, %46 ], [ %33, %32 ]
  %66 = getelementptr inbounds i8, i8* %14, i64 1
  br i1 %15, label %9, label %67

67:                                               ; preds = %9, %64, %0
  %68 = bitcast %struct.cJSON_Hooks* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 bitcast (%struct.cJSON_Hooks* @__const.loader_initialize.alloc_fns to i8*), i64 16, i1 false)
  call void @cJSON_InitHooks(%struct.cJSON_Hooks* nonnull %1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  ret void
}

declare void @cJSON_InitHooks(%struct.cJSON_Hooks*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_release() local_unnamed_addr #0 {
  tail call void @loader_unload_preloaded_icds()
  %1 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* nonnull @loader_lock) #9
  %2 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  %3 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* nonnull @loader_preload_icd_lock) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_unload_preloaded_icds() local_unnamed_addr #0 {
  %1 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @loader_preload_icd_lock) #9
  %2 = load i64, i64* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 0), align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %28, label %4

4:                                                ; preds = %0
  %5 = load i32, i32* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 1), align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %23, %4
  %8 = load i8*, i8** bitcast (%struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2) to i8**), align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @free(i8* nonnull %8) #9
  br label %11

11:                                               ; preds = %10, %7
  store i64 0, i64* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 0), align 8
  store i32 0, i32* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 1), align 8
  store %struct.loader_scanned_icd* null, %struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2), align 8
  br label %28

12:                                               ; preds = %4, %23
  %13 = phi i64 [ %24, %23 ], [ 0, %4 ]
  %14 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2), align 8
  %15 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %14, i64 %13, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i32 @dlclose(i8* %16) #9
  %18 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2), align 8
  %19 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %18, i64 %13, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %12
  tail call void @free(i8* nonnull %20) #9
  br label %23

23:                                               ; preds = %22, %12
  %24 = add nuw nsw i64 %13, 1
  %25 = load i32, i32* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 1), align 8
  %26 = zext i32 %25 to i64
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %12, label %7

28:                                               ; preds = %0, %11
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @loader_preload_icd_lock) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_preload_icds() local_unnamed_addr #0 {
  %1 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @loader_preload_icd_lock) #9
  %2 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2), align 8
  %3 = icmp eq %struct.loader_scanned_icd* %2, null
  br i1 %3, label %4, label %34

4:                                                ; preds = %0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.loader_icd_tramp_list* @scanned_icds to i8*), i8 0, i64 24, i1 false)
  %5 = tail call i32 @loader_icd_scan(%struct.loader_instance* null, %struct.loader_icd_tramp_list* nonnull @scanned_icds)
  %6 = icmp eq i32 %5, 0
  %7 = load i64, i64* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 0), align 8
  %8 = icmp eq i64 %7, 0
  %9 = or i1 %6, %8
  br i1 %9, label %34, label %10

10:                                               ; preds = %4
  %11 = load i32, i32* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 1), align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %29, %10
  %14 = load i8*, i8** bitcast (%struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2) to i8**), align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @free(i8* nonnull %14) #9
  br label %17

17:                                               ; preds = %16, %13
  store i64 0, i64* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 0), align 8
  store i32 0, i32* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 1), align 8
  store %struct.loader_scanned_icd* null, %struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2), align 8
  br label %34

18:                                               ; preds = %10, %29
  %19 = phi i64 [ %30, %29 ], [ 0, %10 ]
  %20 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2), align 8
  %21 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %20, i64 %19, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @dlclose(i8* %22) #9
  %24 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 2), align 8
  %25 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %24, i64 %19, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %18
  tail call void @free(i8* nonnull %26) #9
  br label %29

29:                                               ; preds = %28, %18
  %30 = add nuw nsw i64 %19, 1
  %31 = load i32, i32* getelementptr inbounds (%struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* @scanned_icds, i64 0, i32 1), align 8
  %32 = zext i32 %31 to i64
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %18, label %13

34:                                               ; preds = %4, %17, %0
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @loader_preload_icd_lock) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_icd_scan(%struct.loader_instance*, %struct.loader_icd_tramp_list* nocapture) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.loader_data_files, align 8
  %5 = alloca %struct.cJSON*, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = bitcast %struct.loader_data_files* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %4, i64 0, i32 0
  %9 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %4, i64 0, i32 2
  %10 = bitcast %struct.cJSON** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false)
  tail call void @loader_scanned_icd_clear(%struct.loader_instance* %0, %struct.loader_icd_tramp_list* %1) #9
  %11 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 0
  store i64 448, i64* %11, align 8
  %12 = icmp eq %struct.loader_instance* %0, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %15 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %14, align 8
  %16 = icmp eq i8* (i8*, i64, i64, i32)* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i8* %15(i8* %19, i64 448, i64 8, i32 4) #9
  br label %23

21:                                               ; preds = %13, %2
  %22 = tail call noalias i8* @malloc(i64 448) #9
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi i8* [ %20, %17 ], [ %22, %21 ]
  %25 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 2
  %26 = bitcast %struct.loader_scanned_icd** %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = icmp eq i8* %24, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1083, i64 0, i64 0)) #9
  br label %290

29:                                               ; preds = %23
  %30 = call fastcc i32 @loaderGetDataFiles(%struct.loader_instance* %0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.946, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.948, i64 0, i64 0), %struct.loader_data_files* nonnull %4)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %290

32:                                               ; preds = %29
  %33 = load i32, i32* %8, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %290, label %35

35:                                               ; preds = %32
  %36 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  %37 = load i32, i32* %8, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %290, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %41 = bitcast i32* %3 to i8*
  %42 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %1, i64 0, i32 1
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %44 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %45

45:                                               ; preds = %39, %280
  %46 = phi i64 [ 0, %39 ], [ %286, %280 ]
  %47 = phi i32 [ 0, %39 ], [ %285, %280 ]
  %48 = phi i32 [ 0, %39 ], [ %284, %280 ]
  %49 = phi i16 [ 0, %39 ], [ %283, %280 ]
  %50 = phi i16 [ 0, %39 ], [ %282, %280 ]
  %51 = phi i16 [ 0, %39 ], [ %281, %280 ]
  %52 = load i8**, i8*** %9, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 %46
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %280, label %56

56:                                               ; preds = %45
  %57 = call fastcc i32 @loader_get_json(%struct.loader_instance* %0, i8* nonnull %54, %struct.cJSON** nonnull %5)
  %58 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  %59 = icmp eq %struct.cJSON* %58, null
  %60 = icmp ne i32 %57, 0
  %61 = or i1 %60, %59
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  br i1 %59, label %64, label %63

63:                                               ; preds = %62
  call void @cJSON_Delete(%struct.cJSON* nonnull %58) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  br label %64

64:                                               ; preds = %62, %63
  %65 = icmp eq i32 %47, 0
  %66 = select i1 %65, i32 %57, i32 %48
  %67 = icmp eq i32 %57, -1
  br i1 %67, label %290, label %280

68:                                               ; preds = %56
  %69 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %58, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.949, i64 0, i64 0)) #9
  %70 = icmp eq %struct.cJSON* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %68
  %72 = icmp eq i32 %47, 0
  %73 = select i1 %72, i32 -3, i32 0
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.950, i64 0, i64 0), i8* nonnull %54)
  %74 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  call void @cJSON_Delete(%struct.cJSON* %74) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  br label %280

75:                                               ; preds = %68
  %76 = call i8* @cJSON_Print(%struct.cJSON* nonnull %69) #9
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %82

78:                                               ; preds = %75
  %79 = icmp eq i32 %47, 0
  %80 = sext i1 %79 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.951, i64 0, i64 0), i8* nonnull %54)
  %81 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  call void @cJSON_Delete(%struct.cJSON* %81) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  br label %280

82:                                               ; preds = %75
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.952, i64 0, i64 0), i8* nonnull %54, i8* nonnull %76)
  %83 = call i8* @strtok(i8* nonnull %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %84 = icmp eq i8* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = call i64 @strtol(i8* nocapture nonnull %83, i8** null, i32 10) #9
  %87 = trunc i64 %86 to i16
  %88 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %89 = icmp eq i8* %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = call i64 @strtol(i8* nocapture nonnull %88, i8** null, i32 10) #9
  %92 = trunc i64 %91 to i16
  %93 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %94 = icmp eq i8* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = call i64 @strtol(i8* nocapture nonnull %93, i8** null, i32 10) #9
  %97 = trunc i64 %96 to i16
  br label %98

98:                                               ; preds = %90, %85, %82, %95
  %99 = phi i16 [ %87, %95 ], [ %87, %90 ], [ %87, %85 ], [ %51, %82 ]
  %100 = phi i16 [ %92, %95 ], [ %92, %90 ], [ %50, %85 ], [ %50, %82 ]
  %101 = phi i16 [ %97, %95 ], [ %49, %90 ], [ %49, %85 ], [ %49, %82 ]
  %102 = icmp ne i16 %99, 1
  %103 = icmp ne i16 %100, 0
  %104 = or i1 %102, %103
  %105 = icmp ugt i16 %101, 1
  %106 = or i1 %104, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %98
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.954, i64 0, i64 0))
  br label %108

108:                                              ; preds = %98, %107
  call void @cJSON_Free(i8* nonnull %76) #9
  %109 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  %110 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %109, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.955, i64 0, i64 0)) #9
  %111 = icmp eq %struct.cJSON* %110, null
  br i1 %111, label %276, label %112

112:                                              ; preds = %108
  %113 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %110, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.956, i64 0, i64 0)) #9
  %114 = icmp eq %struct.cJSON* %113, null
  br i1 %114, label %275, label %115

115:                                              ; preds = %112
  %116 = call i8* @cJSON_Print(%struct.cJSON* nonnull %113) #9
  %117 = icmp eq i8* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = call i64 @strlen(i8* nonnull %116) #15
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %125

121:                                              ; preds = %115, %118
  %122 = icmp eq i32 %47, 0
  %123 = sext i1 %122 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.957, i64 0, i64 0), i8* nonnull %54)
  call void @cJSON_Free(i8* %116) #9
  %124 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  call void @cJSON_Delete(%struct.cJSON* %124) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  br label %280

125:                                              ; preds = %118
  %126 = add i64 %119, -1
  %127 = getelementptr inbounds i8, i8* %116, i64 %126
  store i8 0, i8* %127, align 1
  %128 = call i64 @strlen(i8* nonnull %116) #15
  %129 = add i64 %128, 1
  %130 = alloca i8, i64 %129, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %130, i8 -86, i64 %129, i1 false)
  %131 = getelementptr inbounds i8, i8* %116, i64 1
  %132 = call i8* @strcpy(i8* nonnull %130, i8* %131) #9
  call void @cJSON_Free(i8* nonnull %116) #9
  %133 = load i8, i8* %130, align 16
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %125
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.959, i64 0, i64 0), i8* nonnull %54)
  %136 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  call void @cJSON_Delete(%struct.cJSON* %136) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  br label %280

137:                                              ; preds = %125
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 1024, i1 false)
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.960, i64 0, i64 0), i8* nonnull %130)
  %138 = call i8* @strchr(i8* nonnull %130, i32 47) #15
  %139 = icmp eq i8* %138, null
  br i1 %139, label %149, label %140

140:                                              ; preds = %137
  %141 = call i64 @strlen(i8* nonnull %54) #15
  %142 = add i64 %141, 1
  %143 = alloca i8, i64 %142, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %143, i8 -86, i64 %142, i1 false)
  %144 = call i8* @strcpy(i8* nonnull %143, i8* nonnull %54) #9
  %145 = call i8* @dirname(i8* nonnull %143) #9
  %146 = load i8, i8* %130, align 16
  %147 = icmp eq i8 %146, 47
  %148 = select i1 %147, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.947, i64 0, i64 0), i8* %145
  call void (i8*, i64, ...) @loader_platform_combine_path(i8* nonnull %40, i64 1024, i8* %148, i8* nonnull %130, i8* null) #9
  br label %150

149:                                              ; preds = %137
  call fastcc void @loader_get_fullpath(i8* nonnull %130, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.947, i64 0, i64 0), i64 1024, i8* nonnull %40)
  br label %150

150:                                              ; preds = %149, %140
  %151 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %110, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.961, i64 0, i64 0)) #9
  %152 = icmp eq %struct.cJSON* %151, null
  br i1 %152, label %161, label %153

153:                                              ; preds = %150
  %154 = call i8* @cJSON_Print(%struct.cJSON* nonnull %151) #9
  %155 = icmp eq i8* %154, null
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.962, i64 0, i64 0), i8* nonnull %54)
  %157 = icmp eq i32 %47, 0
  %158 = sext i1 %157 to i32
  call void @cJSON_Free(i8* null) #9
  br label %270

159:                                              ; preds = %153
  %160 = call fastcc i32 @loader_make_version(i8* nonnull %154)
  call void @cJSON_Free(i8* nonnull %154) #9
  br label %162

161:                                              ; preds = %150
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.963, i64 0, i64 0), i8* nonnull %54)
  br label %162

162:                                              ; preds = %161, %159
  %163 = phi i32 [ %160, %159 ], [ 0, %161 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #9
  store i32 -1431655766, i32* %3, align 4
  %164 = call i8* @dlopen(i8* nonnull %40, i32 1) #9
  %165 = icmp eq i8* %164, null
  br i1 %165, label %166, label %171

166:                                              ; preds = %162
  %167 = call i8* @dlerror() #9
  %168 = call i8* @strstr(i8* %167, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.924, i64 0, i64 0)) #15
  %169 = icmp eq i8* %168, null
  %170 = select i1 %169, i32 8, i32 1
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 %170, i32 undef, i8* %167) #9
  br label %273

171:                                              ; preds = %162
  %172 = call i8* @dlsym(i8* nonnull %164, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1108, i64 0, i64 0)) #9
  %173 = icmp eq i8* %172, null
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  store i32 0, i32* %3, align 4
  br label %180

175:                                              ; preds = %171
  %176 = bitcast i8* %172 to i32 (i32*)*
  store i32 6, i32* %3, align 4
  %177 = call i32 %176(i32* nonnull %3) #9
  %178 = icmp eq i32 %177, -9
  br i1 %178, label %179, label %180

179:                                              ; preds = %175
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.1109, i64 0, i64 0), i8* nonnull %40) #9
  br label %273

180:                                              ; preds = %175, %174
  %181 = call i8* @dlsym(i8* nonnull %164, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1110, i64 0, i64 0)) #9
  %182 = bitcast i8* %181 to void ()* (%struct.VkInstance_T*, i8*)*
  %183 = icmp eq i8* %181, null
  br i1 %183, label %184, label %199

184:                                              ; preds = %180
  %185 = call i8* @dlsym(i8* nonnull %164, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.987, i64 0, i64 0)) #9
  %186 = bitcast i8* %185 to void ()* (%struct.VkInstance_T*, i8*)*
  %187 = icmp eq i8* %185, null
  br i1 %187, label %188, label %189

188:                                              ; preds = %184
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([126 x i8], [126 x i8]* @.str.1111, i64 0, i64 0), i8* nonnull %40) #9
  br label %273

189:                                              ; preds = %184
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.1112, i64 0, i64 0), i8* nonnull %40) #9
  %190 = call i8* @dlsym(i8* nonnull %164, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.990, i64 0, i64 0)) #9
  %191 = icmp eq i8* %190, null
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1113, i64 0, i64 0), i8* nonnull %40) #9
  br label %273

193:                                              ; preds = %189
  %194 = bitcast i8* %190 to i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*
  %195 = call i8* @dlsym(i8* nonnull %164, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1114, i64 0, i64 0)) #9
  %196 = bitcast i8* %195 to i32 (i8*, i32*, %struct.VkExtensionProperties*)*
  %197 = icmp eq i8* %195, null
  br i1 %197, label %198, label %216

198:                                              ; preds = %193
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.1115, i64 0, i64 0), i8* nonnull %40) #9
  br label %273

199:                                              ; preds = %180
  %200 = load i32, i32* %3, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  store i32 1, i32* %3, align 4
  br label %203

203:                                              ; preds = %202, %199
  %204 = call void ()* %182(%struct.VkInstance_T* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.990, i64 0, i64 0)) #9
  %205 = bitcast void ()* %204 to i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*
  %206 = icmp eq void ()* %204, null
  br i1 %206, label %207, label %208

207:                                              ; preds = %203
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.1116, i64 0, i64 0), i8* nonnull %40) #9
  br label %273

208:                                              ; preds = %203
  %209 = call void ()* %182(%struct.VkInstance_T* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1114, i64 0, i64 0)) #9
  %210 = icmp eq void ()* %209, null
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1117, i64 0, i64 0), i8* nonnull %40) #9
  br label %273

212:                                              ; preds = %208
  %213 = bitcast void ()* %209 to i32 (i8*, i32*, %struct.VkExtensionProperties*)*
  %214 = call i8* @dlsym(i8* nonnull %164, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1118, i64 0, i64 0)) #9
  %215 = bitcast i8* %214 to void ()* (%struct.VkInstance_T*, i8*)*
  br label %216

216:                                              ; preds = %212, %193
  %217 = phi i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* [ %194, %193 ], [ %205, %212 ]
  %218 = phi i32 (i8*, i32*, %struct.VkExtensionProperties*)* [ %196, %193 ], [ %213, %212 ]
  %219 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %186, %193 ], [ %182, %212 ]
  %220 = phi void ()* (%struct.VkInstance_T*, i8*)* [ null, %193 ], [ %215, %212 ]
  %221 = load i32, i32* %42, align 8
  %222 = zext i32 %221 to i64
  %223 = mul nuw nsw i64 %222, 56
  %224 = load i64, i64* %11, align 8
  %225 = icmp ult i64 %223, %224
  br i1 %225, label %226, label %228

226:                                              ; preds = %216
  %227 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %25, align 8
  br label %239

228:                                              ; preds = %216
  %229 = load i8*, i8** %26, align 8
  %230 = shl i64 %224, 1
  %231 = call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %229, i64 %224, i64 %230, i32 4) #9
  %232 = icmp eq i8* %231, null
  br i1 %232, label %268, label %233

233:                                              ; preds = %228
  store i8* %231, i8** %26, align 8
  %234 = load i64, i64* %11, align 8
  %235 = shl i64 %234, 1
  store i64 %235, i64* %11, align 8
  %236 = bitcast i8* %231 to %struct.loader_scanned_icd*
  %237 = load i32, i32* %42, align 8
  %238 = zext i32 %237 to i64
  br label %239

239:                                              ; preds = %233, %226
  %240 = phi i64 [ %222, %226 ], [ %238, %233 ]
  %241 = phi %struct.loader_scanned_icd* [ %227, %226 ], [ %236, %233 ]
  %242 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 1
  store i8* %164, i8** %242, align 8
  %243 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 2
  store i32 %163, i32* %243, align 8
  %244 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 4
  store void ()* (%struct.VkInstance_T*, i8*)* %219, void ()* (%struct.VkInstance_T*, i8*)** %244, align 8
  %245 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 5
  store void ()* (%struct.VkInstance_T*, i8*)* %220, void ()* (%struct.VkInstance_T*, i8*)** %245, align 8
  %246 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 7
  store i32 (i8*, i32*, %struct.VkExtensionProperties*)* %218, i32 (i8*, i32*, %struct.VkExtensionProperties*)** %246, align 8
  %247 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 6
  store i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* %217, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)** %247, align 8
  %248 = load i32, i32* %3, align 4
  %249 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 3
  store i32 %248, i32* %249, align 4
  %250 = call i64 @strlen(i8* nonnull %40) #15
  %251 = add i64 %250, 1
  br i1 %12, label %258, label %252

252:                                              ; preds = %239
  %253 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %43, align 8
  %254 = icmp eq i8* (i8*, i64, i64, i32)* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %252
  %256 = load i8*, i8** %44, align 8
  %257 = call i8* %253(i8* %256, i64 %251, i64 8, i32 4) #9
  br label %260

258:                                              ; preds = %252, %239
  %259 = call noalias i8* @malloc(i64 %251) #9
  br label %260

260:                                              ; preds = %258, %255
  %261 = phi i8* [ %257, %255 ], [ %259, %258 ]
  %262 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 %240, i32 0
  store i8* %261, i8** %262, align 8
  %263 = icmp eq i8* %261, null
  br i1 %263, label %268, label %264

264:                                              ; preds = %260
  %265 = call i8* @strcpy(i8* nonnull %261, i8* nonnull %40) #9
  %266 = load i32, i32* %42, align 8
  %267 = add i32 %266, 1
  store i32 %267, i32* %42, align 8
  br label %273

268:                                              ; preds = %260, %228
  %269 = phi i8* [ getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1119, i64 0, i64 0), %228 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1120, i64 0, i64 0), %260 ]
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* %269, i8* nonnull %40) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #9
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.964, i64 0, i64 0), i8* nonnull %40)
  br label %270

270:                                              ; preds = %156, %268
  %271 = phi i32 [ -1, %268 ], [ %158, %156 ]
  %272 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  call void @cJSON_Delete(%struct.cJSON* %272) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %40) #9
  br label %280

273:                                              ; preds = %179, %211, %207, %264, %198, %192, %188, %166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #9
  %274 = add i32 %47, 1
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %40) #9
  br label %277

275:                                              ; preds = %112
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.965, i64 0, i64 0), i8* nonnull %54)
  br label %277

276:                                              ; preds = %108
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.966, i64 0, i64 0), i8* nonnull %54)
  br label %277

277:                                              ; preds = %273, %275, %276
  %278 = phi i32 [ %274, %273 ], [ %47, %275 ], [ %47, %276 ]
  %279 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  call void @cJSON_Delete(%struct.cJSON* %279) #9
  store %struct.cJSON* null, %struct.cJSON** %5, align 8
  br label %280

280:                                              ; preds = %135, %121, %270, %64, %277, %78, %71, %45
  %281 = phi i16 [ %51, %45 ], [ %99, %270 ], [ %51, %64 ], [ %99, %277 ], [ %51, %78 ], [ %51, %71 ], [ %99, %121 ], [ %99, %135 ]
  %282 = phi i16 [ %50, %45 ], [ %100, %270 ], [ %50, %64 ], [ %100, %277 ], [ %50, %78 ], [ %50, %71 ], [ %100, %121 ], [ %100, %135 ]
  %283 = phi i16 [ %49, %45 ], [ %101, %270 ], [ %49, %64 ], [ %101, %277 ], [ %49, %78 ], [ %49, %71 ], [ %101, %121 ], [ %101, %135 ]
  %284 = phi i32 [ %48, %45 ], [ %271, %270 ], [ %66, %64 ], [ 0, %277 ], [ %80, %78 ], [ %73, %71 ], [ %123, %121 ], [ 0, %135 ]
  %285 = phi i32 [ %47, %45 ], [ %47, %270 ], [ %47, %64 ], [ %278, %277 ], [ %47, %78 ], [ %47, %71 ], [ %47, %121 ], [ %47, %135 ]
  %286 = add nuw nsw i64 %46, 1
  %287 = load i32, i32* %8, align 8
  %288 = zext i32 %287 to i64
  %289 = icmp ult i64 %286, %288
  br i1 %289, label %45, label %290

290:                                              ; preds = %64, %280, %35, %28, %29, %32
  %291 = phi i32 [ -1, %28 ], [ %30, %29 ], [ 0, %32 ], [ 0, %35 ], [ -1, %64 ], [ %284, %280 ]
  %292 = phi i1 [ false, %28 ], [ false, %29 ], [ false, %32 ], [ true, %35 ], [ true, %280 ], [ true, %64 ]
  %293 = load %struct.cJSON*, %struct.cJSON** %5, align 8
  %294 = icmp eq %struct.cJSON* %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %290
  call void @cJSON_Delete(%struct.cJSON* nonnull %293) #9
  br label %296

296:                                              ; preds = %290, %295
  %297 = load i8**, i8*** %9, align 8
  %298 = icmp eq i8** %297, null
  br i1 %298, label %341, label %299

299:                                              ; preds = %296
  %300 = bitcast i8** %297 to i8*
  %301 = load i32, i32* %8, align 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %309, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %305 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %321

306:                                              ; preds = %334
  %307 = bitcast i8*** %9 to i8**
  %308 = load i8*, i8** %307, align 8
  br label %309

309:                                              ; preds = %299, %306
  %310 = phi i8* [ %308, %306 ], [ %300, %299 ]
  %311 = icmp eq i8* %310, null
  br i1 %311, label %341, label %312

312:                                              ; preds = %309
  br i1 %12, label %320, label %313

313:                                              ; preds = %312
  %314 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %315 = load void (i8*, i8*)*, void (i8*, i8*)** %314, align 8
  %316 = icmp eq void (i8*, i8*)* %315, null
  br i1 %316, label %320, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %319 = load i8*, i8** %318, align 8
  call void %315(i8* %319, i8* nonnull %310) #9
  br label %341

320:                                              ; preds = %313, %312
  call void @free(i8* nonnull %310) #9
  br label %341

321:                                              ; preds = %339, %303
  %322 = phi i8** [ %297, %303 ], [ %340, %339 ]
  %323 = phi i64 [ 0, %303 ], [ %335, %339 ]
  %324 = getelementptr inbounds i8*, i8** %322, i64 %323
  %325 = load i8*, i8** %324, align 8
  %326 = icmp eq i8* %325, null
  br i1 %326, label %334, label %327

327:                                              ; preds = %321
  br i1 %12, label %333, label %328

328:                                              ; preds = %327
  %329 = load void (i8*, i8*)*, void (i8*, i8*)** %304, align 8
  %330 = icmp eq void (i8*, i8*)* %329, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %328
  %332 = load i8*, i8** %305, align 8
  call void %329(i8* %332, i8* nonnull %325) #9
  br label %334

333:                                              ; preds = %328, %327
  call void @free(i8* nonnull %325) #9
  br label %334

334:                                              ; preds = %333, %331, %321
  %335 = add nuw nsw i64 %323, 1
  %336 = load i32, i32* %8, align 8
  %337 = zext i32 %336 to i64
  %338 = icmp ult i64 %335, %337
  br i1 %338, label %339, label %306

339:                                              ; preds = %334
  %340 = load i8**, i8*** %9, align 8
  br label %321

341:                                              ; preds = %320, %317, %309, %296
  br i1 %292, label %342, label %344

342:                                              ; preds = %341
  %343 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  br label %344

344:                                              ; preds = %341, %342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret i32 %291
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @loader_init_icd_lib_list() local_unnamed_addr #12 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @loader_destroy_icd_lib_list() local_unnamed_addr #12 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loaderGetDataFiles(%struct.loader_instance*, i32, i8* readonly, i8* readonly, i8* readonly, %struct.loader_data_files*) unnamed_addr #0 {
  %7 = alloca [2048 x i8], align 16
  %8 = alloca [2048 x i8], align 16
  %9 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %5, i64 0, i32 2
  %10 = load i8**, i8*** %9, align 8
  %11 = icmp eq i8** %10, null
  br i1 %11, label %62, label %12

12:                                               ; preds = %6
  %13 = bitcast i8** %10 to i8*
  %14 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = icmp eq %struct.loader_instance* %0, null
  %19 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %20 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %37

21:                                               ; preds = %55
  %22 = bitcast i8*** %9 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %12, %21
  %25 = phi i8* [ %23, %21 ], [ %13, %12 ]
  %26 = icmp eq i8* %25, null
  br i1 %26, label %62, label %27

27:                                               ; preds = %24
  %28 = icmp eq %struct.loader_instance* %0, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %31 = load void (i8*, i8*)*, void (i8*, i8*)** %30, align 8
  %32 = icmp eq void (i8*, i8*)* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void %31(i8* %35, i8* nonnull %25) #9
  br label %62

36:                                               ; preds = %29, %27
  tail call void @free(i8* nonnull %25) #9
  br label %62

37:                                               ; preds = %60, %17
  %38 = phi i32 [ %15, %17 ], [ %56, %60 ]
  %39 = phi i8** [ %10, %17 ], [ %61, %60 ]
  %40 = phi i64 [ 0, %17 ], [ %57, %60 ]
  %41 = getelementptr inbounds i8*, i8** %39, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %37
  br i1 %18, label %50, label %45

45:                                               ; preds = %44
  %46 = load void (i8*, i8*)*, void (i8*, i8*)** %19, align 8
  %47 = icmp eq void (i8*, i8*)* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = load i8*, i8** %20, align 8
  tail call void %46(i8* %49, i8* nonnull %42) #9
  br label %51

50:                                               ; preds = %45, %44
  tail call void @free(i8* nonnull %42) #9
  br label %51

51:                                               ; preds = %48, %50
  %52 = load i8**, i8*** %9, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 %40
  store i8* null, i8** %53, align 8
  %54 = load i32, i32* %14, align 8
  br label %55

55:                                               ; preds = %37, %51
  %56 = phi i32 [ %38, %37 ], [ %54, %51 ]
  %57 = add nuw nsw i64 %40, 1
  %58 = zext i32 %56 to i64
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %60, label %21

60:                                               ; preds = %55
  %61 = load i8**, i8*** %9, align 8
  br label %37

62:                                               ; preds = %36, %33, %24, %6
  %63 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %5, i64 0, i32 0
  %64 = icmp ne i32 %1, 0
  %65 = bitcast %struct.loader_data_files* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false)
  %66 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1084, i64 0, i64 0)) #9
  %67 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1085, i64 0, i64 0)) #9
  %68 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1086, i64 0, i64 0)) #9
  %69 = icmp eq i8* %66, null
  %70 = icmp eq i8* %67, null
  br i1 %69, label %74, label %71

71:                                               ; preds = %62
  %72 = load i8, i8* %66, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71, %62
  br label %75

75:                                               ; preds = %74, %71
  %76 = phi i8* [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1087, i64 0, i64 0), %74 ], [ %66, %71 ]
  br i1 %70, label %80, label %77

77:                                               ; preds = %75
  %78 = load i8, i8* %67, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77, %75
  br label %81

81:                                               ; preds = %80, %77
  %82 = phi i8* [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1088, i64 0, i64 0), %80 ], [ %67, %77 ]
  %83 = icmp eq i8* %68, null
  br i1 %83, label %84, label %108

84:                                               ; preds = %81
  %85 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1089, i64 0, i64 0)) #9
  %86 = icmp eq i8* %85, null
  br i1 %86, label %108, label %87

87:                                               ; preds = %84
  %88 = tail call i64 @strlen(i8* nonnull %85) #15
  %89 = add i64 %88, 14
  %90 = icmp eq %struct.loader_instance* %0, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %93 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %92, align 8
  %94 = icmp eq i8* (i8*, i64, i64, i32)* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = tail call i8* %93(i8* %97, i64 %89, i64 8, i32 0) #9
  br label %101

99:                                               ; preds = %91, %87
  %100 = tail call noalias i8* @malloc(i64 %89) #9
  br label %101

101:                                              ; preds = %99, %95
  %102 = phi i8* [ %98, %95 ], [ %100, %99 ]
  %103 = icmp eq i8* %102, null
  br i1 %103, label %641, label %104

104:                                              ; preds = %101
  %105 = tail call i8* @strcpy(i8* nonnull %102, i8* nonnull %85) #9
  %106 = tail call i64 @strlen(i8* nonnull %102) #9
  %107 = getelementptr i8, i8* %102, i64 %106
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1090, i64 0, i64 0), i64 14, i1 false) #9
  br label %108

108:                                              ; preds = %104, %84, %81
  %109 = phi i8* [ %102, %104 ], [ null, %84 ], [ null, %81 ]
  %110 = icmp eq i8* %3, null
  br i1 %110, label %111, label %126

111:                                              ; preds = %108
  %112 = icmp eq i8* %2, null
  br i1 %112, label %131, label %113

113:                                              ; preds = %111
  %114 = tail call i32 @geteuid() #9
  %115 = tail call i32 @getuid() #9
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %117, label %131

117:                                              ; preds = %113
  %118 = tail call i32 @getegid() #9
  %119 = tail call i32 @getgid() #9
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %121, label %131

121:                                              ; preds = %117
  %122 = tail call i8* @getenv(i8* nonnull %2) #9
  %123 = icmp eq i8* %122, null
  %124 = or i1 %64, %123
  %125 = zext i1 %124 to i8
  br i1 %123, label %131, label %126

126:                                              ; preds = %121, %108
  %127 = phi i8* [ %122, %121 ], [ %3, %108 ]
  %128 = phi i8 [ %125, %121 ], [ 1, %108 ]
  %129 = tail call i64 @strlen(i8* nonnull %127) #15
  %130 = add i64 %129, 3
  br label %228

131:                                              ; preds = %121, %117, %113, %111
  %132 = phi i8 [ %125, %121 ], [ 1, %111 ], [ 1, %117 ], [ 1, %113 ]
  %133 = icmp eq i8* %4, null
  br i1 %133, label %613, label %134

134:                                              ; preds = %131
  %135 = tail call i64 @strlen(i8* nonnull %4) #15
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %613, label %137

137:                                              ; preds = %134
  %138 = icmp eq i8* %76, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %137
  %140 = tail call i64 @strlen(i8* nonnull %76) #15
  %141 = add i64 %135, 2
  %142 = add i64 %140, %141
  br label %143

143:                                              ; preds = %149, %139
  %144 = phi i64 [ %142, %139 ], [ %150, %149 ]
  %145 = phi i8* [ %76, %139 ], [ %151, %149 ]
  %146 = load i8, i8* %145, align 1
  switch i8 %146, label %149 [
    i8 0, label %152
    i8 58, label %147
  ]

147:                                              ; preds = %143
  %148 = add i64 %144, %141
  br label %149

149:                                              ; preds = %147, %143
  %150 = phi i64 [ %148, %147 ], [ %144, %143 ]
  %151 = getelementptr inbounds i8, i8* %145, i64 1
  br label %143

152:                                              ; preds = %143, %137
  %153 = phi i64 [ 0, %137 ], [ %144, %143 ]
  %154 = add i64 %153, 2
  %155 = icmp eq i8* %82, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = add i64 %135, 2
  br label %171

158:                                              ; preds = %152
  %159 = tail call i64 @strlen(i8* nonnull %82) #15
  %160 = add i64 %135, 2
  %161 = add i64 %159, %160
  br label %162

162:                                              ; preds = %168, %158
  %163 = phi i64 [ %161, %158 ], [ %169, %168 ]
  %164 = phi i8* [ %82, %158 ], [ %170, %168 ]
  %165 = load i8, i8* %164, align 1
  switch i8 %165, label %168 [
    i8 0, label %171
    i8 58, label %166
  ]

166:                                              ; preds = %162
  %167 = add i64 %163, %160
  br label %168

168:                                              ; preds = %166, %162
  %169 = phi i64 [ %167, %166 ], [ %163, %162 ]
  %170 = getelementptr inbounds i8, i8* %164, i64 1
  br label %162

171:                                              ; preds = %162, %156
  %172 = phi i64 [ %157, %156 ], [ %160, %162 ]
  %173 = phi i64 [ 0, %156 ], [ %163, %162 ]
  %174 = add i64 %135, 6
  br label %175

175:                                              ; preds = %181, %171
  %176 = phi i64 [ %174, %171 ], [ %182, %181 ]
  %177 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1091, i64 0, i64 0), %171 ], [ %183, %181 ]
  %178 = load i8, i8* %177, align 1
  switch i8 %178, label %181 [
    i8 0, label %184
    i8 58, label %179
  ]

179:                                              ; preds = %175
  %180 = add i64 %176, %172
  br label %181

181:                                              ; preds = %179, %175
  %182 = phi i64 [ %180, %179 ], [ %176, %175 ]
  %183 = getelementptr inbounds i8, i8* %177, i64 1
  br label %175

184:                                              ; preds = %175
  %185 = add i64 %154, %173
  %186 = add i64 %185, %176
  %187 = icmp eq i8 %132, 0
  br i1 %187, label %228, label %188

188:                                              ; preds = %184
  %189 = tail call i32 @geteuid() #9
  %190 = tail call i32 @getuid() #9
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %192, label %228

192:                                              ; preds = %188
  %193 = tail call i32 @getegid() #9
  %194 = tail call i32 @getgid() #9
  %195 = icmp eq i32 %193, %194
  br i1 %195, label %196, label %228

196:                                              ; preds = %192
  br i1 %83, label %209, label %197

197:                                              ; preds = %196
  %198 = tail call i64 @strlen(i8* nonnull %68) #15
  %199 = add i64 %198, %172
  br label %200

200:                                              ; preds = %206, %197
  %201 = phi i64 [ %199, %197 ], [ %207, %206 ]
  %202 = phi i8* [ %68, %197 ], [ %208, %206 ]
  %203 = load i8, i8* %202, align 1
  switch i8 %203, label %206 [
    i8 0, label %209
    i8 58, label %204
  ]

204:                                              ; preds = %200
  %205 = add i64 %201, %172
  br label %206

206:                                              ; preds = %204, %200
  %207 = phi i64 [ %205, %204 ], [ %201, %200 ]
  %208 = getelementptr inbounds i8, i8* %202, i64 1
  br label %200

209:                                              ; preds = %200, %196
  %210 = phi i64 [ 0, %196 ], [ %201, %200 ]
  %211 = add i64 %210, %186
  %212 = icmp eq i8* %109, null
  br i1 %212, label %225, label %213

213:                                              ; preds = %209
  %214 = tail call i64 @strlen(i8* nonnull %109) #15
  %215 = add i64 %214, %172
  br label %216

216:                                              ; preds = %222, %213
  %217 = phi i64 [ %215, %213 ], [ %223, %222 ]
  %218 = phi i8* [ %109, %213 ], [ %224, %222 ]
  %219 = load i8, i8* %218, align 1
  switch i8 %219, label %222 [
    i8 0, label %225
    i8 58, label %220
  ]

220:                                              ; preds = %216
  %221 = add i64 %217, %172
  br label %222

222:                                              ; preds = %220, %216
  %223 = phi i64 [ %221, %220 ], [ %217, %216 ]
  %224 = getelementptr inbounds i8, i8* %218, i64 1
  br label %216

225:                                              ; preds = %216, %209
  %226 = phi i64 [ 0, %209 ], [ %217, %216 ]
  %227 = add i64 %211, %226
  br label %228

228:                                              ; preds = %225, %192, %188, %184, %126
  %229 = phi i1 [ true, %126 ], [ false, %192 ], [ false, %225 ], [ false, %184 ], [ false, %188 ]
  %230 = phi i8* [ %127, %126 ], [ null, %192 ], [ null, %225 ], [ null, %184 ], [ null, %188 ]
  %231 = phi i8 [ %128, %126 ], [ %132, %192 ], [ %132, %225 ], [ 0, %184 ], [ %132, %188 ]
  %232 = phi i64 [ %130, %126 ], [ %186, %192 ], [ %227, %225 ], [ %186, %184 ], [ %186, %188 ]
  %233 = phi i64 [ 0, %126 ], [ %135, %192 ], [ %135, %225 ], [ %135, %184 ], [ %135, %188 ]
  %234 = icmp eq %struct.loader_instance* %0, null
  br i1 %234, label %243, label %235

235:                                              ; preds = %228
  %236 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %237 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %236, align 8
  %238 = icmp eq i8* (i8*, i64, i64, i32)* %237, null
  br i1 %238, label %243, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = tail call i8* %237(i8* %241, i64 %232, i64 8, i32 0) #9
  br label %245

243:                                              ; preds = %235, %228
  %244 = tail call noalias i8* @malloc(i64 %232) #9
  br label %245

245:                                              ; preds = %243, %239
  %246 = phi i8* [ %242, %239 ], [ %244, %243 ]
  %247 = icmp eq i8* %246, null
  br i1 %247, label %248, label %250

248:                                              ; preds = %245
  %249 = trunc i64 %232 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1092, i64 0, i64 0), i32 %249) #9
  br label %613

250:                                              ; preds = %245
  br i1 %229, label %251, label %253

251:                                              ; preds = %250
  %252 = tail call i8* @strcpy(i8* nonnull %246, i8* nonnull %230) #9
  br label %494

253:                                              ; preds = %250
  %254 = icmp eq i64 %233, 0
  br i1 %254, label %491, label %255

255:                                              ; preds = %253
  %256 = icmp eq i8* %76, null
  br i1 %256, label %304, label %257

257:                                              ; preds = %255
  %258 = load i8, i8* %76, align 1
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %304, label %260

260:                                              ; preds = %257, %299
  %261 = phi i8* [ %302, %299 ], [ %246, %257 ]
  %262 = phi i32 [ %301, %299 ], [ 0, %257 ]
  br label %263

263:                                              ; preds = %263, %260
  %264 = phi i32 [ %269, %263 ], [ %262, %260 ]
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds i8, i8* %76, i64 %265
  %267 = load i8, i8* %266, align 1
  %268 = icmp eq i8 %267, 58
  %269 = add i32 %264, 1
  br i1 %268, label %263, label %270

270:                                              ; preds = %263
  %271 = zext i32 %264 to i64
  %272 = getelementptr inbounds i8, i8* %76, i64 %271
  br label %273

273:                                              ; preds = %270, %276
  %274 = phi i8 [ %280, %276 ], [ %267, %270 ]
  %275 = phi i32 [ %277, %276 ], [ %264, %270 ]
  switch i8 %274, label %276 [
    i8 58, label %281
    i8 0, label %281
  ]

276:                                              ; preds = %273
  %277 = add i32 %275, 1
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %76, i64 %278
  %280 = load i8, i8* %279, align 1
  br label %273

281:                                              ; preds = %273, %273
  %282 = zext i32 %275 to i64
  %283 = getelementptr inbounds i8, i8* %76, i64 %282
  %284 = sub i32 %275, %264
  %285 = zext i32 %284 to i64
  %286 = icmp eq i32 %284, 0
  br i1 %286, label %299, label %287

287:                                              ; preds = %281
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %261, i8* align 1 %272, i64 %285, i1 false) #9
  %288 = getelementptr inbounds i8, i8* %261, i64 %285
  %289 = getelementptr inbounds i8, i8* %288, i64 -1
  %290 = load i8, i8* %289, align 1
  %291 = icmp eq i8 %290, 47
  br i1 %291, label %294, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds i8, i8* %288, i64 1
  store i8 47, i8* %288, align 1
  br label %294

294:                                              ; preds = %292, %287
  %295 = phi i8* [ %293, %292 ], [ %288, %287 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %295, i8* align 1 %4, i64 %233, i1 false) #9
  %296 = getelementptr inbounds i8, i8* %295, i64 %233
  %297 = getelementptr inbounds i8, i8* %296, i64 1
  store i8 58, i8* %296, align 1
  %298 = load i8, i8* %283, align 1
  br label %299

299:                                              ; preds = %294, %281
  %300 = phi i8 [ %267, %281 ], [ %298, %294 ]
  %301 = phi i32 [ %264, %281 ], [ %275, %294 ]
  %302 = phi i8* [ %261, %281 ], [ %297, %294 ]
  %303 = icmp eq i8 %300, 0
  br i1 %303, label %304, label %260

304:                                              ; preds = %299, %257, %255
  %305 = phi i8* [ %246, %257 ], [ %246, %255 ], [ %302, %299 ]
  br label %306

306:                                              ; preds = %304, %335
  %307 = phi i8* [ %338, %335 ], [ %305, %304 ]
  %308 = phi i32 [ %337, %335 ], [ 0, %304 ]
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.1091, i64 0, i64 %309
  %311 = load i8, i8* %310, align 1
  br label %312

312:                                              ; preds = %315, %306
  %313 = phi i8 [ %319, %315 ], [ %311, %306 ]
  %314 = phi i32 [ %316, %315 ], [ %308, %306 ]
  switch i8 %313, label %315 [
    i8 58, label %320
    i8 0, label %320
  ]

315:                                              ; preds = %312
  %316 = add i32 %314, 1
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.1091, i64 0, i64 %317
  %319 = load i8, i8* %318, align 1
  br label %312

320:                                              ; preds = %312, %312
  %321 = sub i32 %314, %308
  %322 = zext i32 %321 to i64
  %323 = icmp eq i32 %321, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %320
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %307, i8* align 1 %310, i64 %322, i1 false) #9
  %325 = getelementptr inbounds i8, i8* %307, i64 %322
  %326 = getelementptr inbounds i8, i8* %325, i64 -1
  %327 = load i8, i8* %326, align 1
  %328 = icmp eq i8 %327, 47
  br i1 %328, label %331, label %329

329:                                              ; preds = %324
  %330 = getelementptr inbounds i8, i8* %325, i64 1
  store i8 47, i8* %325, align 1
  br label %331

331:                                              ; preds = %329, %324
  %332 = phi i8* [ %330, %329 ], [ %325, %324 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %332, i8* align 1 %4, i64 %233, i1 false) #9
  %333 = getelementptr inbounds i8, i8* %332, i64 %233
  %334 = getelementptr inbounds i8, i8* %333, i64 1
  store i8 58, i8* %333, align 1
  br label %335

335:                                              ; preds = %331, %320
  %336 = phi i8 [ %311, %320 ], [ %313, %331 ]
  %337 = phi i32 [ %308, %320 ], [ %314, %331 ]
  %338 = phi i8* [ %307, %320 ], [ %334, %331 ]
  %339 = icmp eq i8 %336, 0
  br i1 %339, label %340, label %306

340:                                              ; preds = %335
  %341 = icmp eq i8* %82, null
  br i1 %341, label %389, label %342

342:                                              ; preds = %340
  %343 = load i8, i8* %82, align 1
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %389, label %345

345:                                              ; preds = %342, %384
  %346 = phi i8* [ %387, %384 ], [ %338, %342 ]
  %347 = phi i32 [ %386, %384 ], [ 0, %342 ]
  br label %348

348:                                              ; preds = %348, %345
  %349 = phi i32 [ %354, %348 ], [ %347, %345 ]
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds i8, i8* %82, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = icmp eq i8 %352, 58
  %354 = add i32 %349, 1
  br i1 %353, label %348, label %355

355:                                              ; preds = %348
  %356 = zext i32 %349 to i64
  %357 = getelementptr inbounds i8, i8* %82, i64 %356
  br label %358

358:                                              ; preds = %355, %361
  %359 = phi i8 [ %365, %361 ], [ %352, %355 ]
  %360 = phi i32 [ %362, %361 ], [ %349, %355 ]
  switch i8 %359, label %361 [
    i8 58, label %366
    i8 0, label %366
  ]

361:                                              ; preds = %358
  %362 = add i32 %360, 1
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds i8, i8* %82, i64 %363
  %365 = load i8, i8* %364, align 1
  br label %358

366:                                              ; preds = %358, %358
  %367 = zext i32 %360 to i64
  %368 = getelementptr inbounds i8, i8* %82, i64 %367
  %369 = sub i32 %360, %349
  %370 = zext i32 %369 to i64
  %371 = icmp eq i32 %369, 0
  br i1 %371, label %384, label %372

372:                                              ; preds = %366
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %346, i8* align 1 %357, i64 %370, i1 false) #9
  %373 = getelementptr inbounds i8, i8* %346, i64 %370
  %374 = getelementptr inbounds i8, i8* %373, i64 -1
  %375 = load i8, i8* %374, align 1
  %376 = icmp eq i8 %375, 47
  br i1 %376, label %379, label %377

377:                                              ; preds = %372
  %378 = getelementptr inbounds i8, i8* %373, i64 1
  store i8 47, i8* %373, align 1
  br label %379

379:                                              ; preds = %377, %372
  %380 = phi i8* [ %378, %377 ], [ %373, %372 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %380, i8* align 1 %4, i64 %233, i1 false) #9
  %381 = getelementptr inbounds i8, i8* %380, i64 %233
  %382 = getelementptr inbounds i8, i8* %381, i64 1
  store i8 58, i8* %381, align 1
  %383 = load i8, i8* %368, align 1
  br label %384

384:                                              ; preds = %379, %366
  %385 = phi i8 [ %352, %366 ], [ %383, %379 ]
  %386 = phi i32 [ %349, %366 ], [ %360, %379 ]
  %387 = phi i8* [ %346, %366 ], [ %382, %379 ]
  %388 = icmp eq i8 %385, 0
  br i1 %388, label %389, label %345

389:                                              ; preds = %384, %342, %340
  %390 = phi i8* [ %338, %340 ], [ %338, %342 ], [ %387, %384 ]
  %391 = and i8 %231, 1
  %392 = icmp eq i8 %391, 0
  br i1 %392, label %491, label %393

393:                                              ; preds = %389
  br i1 %83, label %441, label %394

394:                                              ; preds = %393
  %395 = load i8, i8* %68, align 1
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %441, label %397

397:                                              ; preds = %394, %436
  %398 = phi i8* [ %439, %436 ], [ %390, %394 ]
  %399 = phi i32 [ %438, %436 ], [ 0, %394 ]
  br label %400

400:                                              ; preds = %400, %397
  %401 = phi i32 [ %406, %400 ], [ %399, %397 ]
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds i8, i8* %68, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 58
  %406 = add i32 %401, 1
  br i1 %405, label %400, label %407

407:                                              ; preds = %400
  %408 = zext i32 %401 to i64
  %409 = getelementptr inbounds i8, i8* %68, i64 %408
  br label %410

410:                                              ; preds = %407, %413
  %411 = phi i8 [ %417, %413 ], [ %404, %407 ]
  %412 = phi i32 [ %414, %413 ], [ %401, %407 ]
  switch i8 %411, label %413 [
    i8 58, label %418
    i8 0, label %418
  ]

413:                                              ; preds = %410
  %414 = add i32 %412, 1
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds i8, i8* %68, i64 %415
  %417 = load i8, i8* %416, align 1
  br label %410

418:                                              ; preds = %410, %410
  %419 = zext i32 %412 to i64
  %420 = getelementptr inbounds i8, i8* %68, i64 %419
  %421 = sub i32 %412, %401
  %422 = zext i32 %421 to i64
  %423 = icmp eq i32 %421, 0
  br i1 %423, label %436, label %424

424:                                              ; preds = %418
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %398, i8* align 1 %409, i64 %422, i1 false) #9
  %425 = getelementptr inbounds i8, i8* %398, i64 %422
  %426 = getelementptr inbounds i8, i8* %425, i64 -1
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 47
  br i1 %428, label %431, label %429

429:                                              ; preds = %424
  %430 = getelementptr inbounds i8, i8* %425, i64 1
  store i8 47, i8* %425, align 1
  br label %431

431:                                              ; preds = %429, %424
  %432 = phi i8* [ %430, %429 ], [ %425, %424 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %432, i8* align 1 %4, i64 %233, i1 false) #9
  %433 = getelementptr inbounds i8, i8* %432, i64 %233
  %434 = getelementptr inbounds i8, i8* %433, i64 1
  store i8 58, i8* %433, align 1
  %435 = load i8, i8* %420, align 1
  br label %436

436:                                              ; preds = %431, %418
  %437 = phi i8 [ %404, %418 ], [ %435, %431 ]
  %438 = phi i32 [ %401, %418 ], [ %412, %431 ]
  %439 = phi i8* [ %398, %418 ], [ %434, %431 ]
  %440 = icmp eq i8 %437, 0
  br i1 %440, label %441, label %397

441:                                              ; preds = %436, %394, %393
  %442 = phi i8* [ %390, %393 ], [ %390, %394 ], [ %439, %436 ]
  %443 = icmp eq i8* %109, null
  br i1 %443, label %491, label %444

444:                                              ; preds = %441
  %445 = load i8, i8* %109, align 1
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %491, label %447

447:                                              ; preds = %444, %486
  %448 = phi i8* [ %489, %486 ], [ %442, %444 ]
  %449 = phi i32 [ %488, %486 ], [ 0, %444 ]
  br label %450

450:                                              ; preds = %450, %447
  %451 = phi i32 [ %456, %450 ], [ %449, %447 ]
  %452 = zext i32 %451 to i64
  %453 = getelementptr inbounds i8, i8* %109, i64 %452
  %454 = load i8, i8* %453, align 1
  %455 = icmp eq i8 %454, 58
  %456 = add i32 %451, 1
  br i1 %455, label %450, label %457

457:                                              ; preds = %450
  %458 = zext i32 %451 to i64
  %459 = getelementptr inbounds i8, i8* %109, i64 %458
  br label %460

460:                                              ; preds = %457, %463
  %461 = phi i8 [ %467, %463 ], [ %454, %457 ]
  %462 = phi i32 [ %464, %463 ], [ %451, %457 ]
  switch i8 %461, label %463 [
    i8 58, label %468
    i8 0, label %468
  ]

463:                                              ; preds = %460
  %464 = add i32 %462, 1
  %465 = zext i32 %464 to i64
  %466 = getelementptr inbounds i8, i8* %109, i64 %465
  %467 = load i8, i8* %466, align 1
  br label %460

468:                                              ; preds = %460, %460
  %469 = zext i32 %462 to i64
  %470 = getelementptr inbounds i8, i8* %109, i64 %469
  %471 = sub i32 %462, %451
  %472 = zext i32 %471 to i64
  %473 = icmp eq i32 %471, 0
  br i1 %473, label %486, label %474

474:                                              ; preds = %468
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %448, i8* align 1 %459, i64 %472, i1 false) #9
  %475 = getelementptr inbounds i8, i8* %448, i64 %472
  %476 = getelementptr inbounds i8, i8* %475, i64 -1
  %477 = load i8, i8* %476, align 1
  %478 = icmp eq i8 %477, 47
  br i1 %478, label %481, label %479

479:                                              ; preds = %474
  %480 = getelementptr inbounds i8, i8* %475, i64 1
  store i8 47, i8* %475, align 1
  br label %481

481:                                              ; preds = %479, %474
  %482 = phi i8* [ %480, %479 ], [ %475, %474 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %482, i8* align 1 %4, i64 %233, i1 false) #9
  %483 = getelementptr inbounds i8, i8* %482, i64 %233
  %484 = getelementptr inbounds i8, i8* %483, i64 1
  store i8 58, i8* %483, align 1
  %485 = load i8, i8* %470, align 1
  br label %486

486:                                              ; preds = %481, %468
  %487 = phi i8 [ %454, %468 ], [ %485, %481 ]
  %488 = phi i32 [ %451, %468 ], [ %462, %481 ]
  %489 = phi i8* [ %448, %468 ], [ %484, %481 ]
  %490 = icmp eq i8 %487, 0
  br i1 %490, label %491, label %447

491:                                              ; preds = %486, %444, %441, %389, %253
  %492 = phi i8* [ %246, %253 ], [ %390, %389 ], [ %442, %441 ], [ %442, %444 ], [ %489, %486 ]
  %493 = getelementptr inbounds i8, i8* %492, i64 -1
  store i8 0, i8* %493, align 1
  br label %494

494:                                              ; preds = %491, %251
  %495 = tail call i64 @strlen(i8* nonnull %246) #15
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %556, label %500

497:                                              ; preds = %551, %518
  %498 = phi i64 [ %511, %518 ], [ %552, %551 ]
  %499 = icmp ugt i64 %498, %521
  br i1 %499, label %500, label %507

500:                                              ; preds = %494, %497
  %501 = phi i64 [ %521, %497 ], [ 0, %494 ]
  %502 = phi i64 [ %498, %497 ], [ %495, %494 ]
  %503 = getelementptr inbounds i8, i8* %246, i64 %501
  %504 = add nuw i64 %501, 1
  %505 = getelementptr inbounds i8, i8* %246, i64 %504
  %506 = sub i64 1, %501
  br label %510

507:                                              ; preds = %497, %514
  %508 = phi i64 [ %516, %514 ], [ %498, %497 ]
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %556, label %555

510:                                              ; preds = %514, %500
  %511 = phi i64 [ %502, %500 ], [ %516, %514 ]
  %512 = load i8, i8* %503, align 1
  %513 = icmp eq i8 %512, 58
  br i1 %513, label %514, label %518

514:                                              ; preds = %510
  %515 = add i64 %506, %511
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %503, i8* align 1 %505, i64 %515, i1 false) #9
  %516 = add i64 %511, -1
  %517 = icmp ugt i64 %516, %501
  br i1 %517, label %510, label %507

518:                                              ; preds = %510
  %519 = tail call i64 @strcspn(i8* %505, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__const.ReadDataFilesInSearchPaths.path_sep_str, i64 0, i64 0)) #15
  %520 = add i64 %519, %504
  %521 = add i64 %520, 1
  %522 = icmp ult i64 %521, %511
  br i1 %522, label %523, label %497

523:                                              ; preds = %518
  %524 = sub i64 %520, %501
  br label %525

525:                                              ; preds = %551, %523
  %526 = phi i64 [ %521, %523 ], [ %553, %551 ]
  %527 = phi i64 [ %511, %523 ], [ %552, %551 ]
  %528 = add nuw i64 %526, 1
  %529 = getelementptr inbounds i8, i8* %246, i64 %528
  %530 = tail call i64 @strcspn(i8* %529, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__const.ReadDataFilesInSearchPaths.path_sep_str, i64 0, i64 0)) #15
  %531 = add i64 %530, %528
  %532 = sub i64 %531, %526
  %533 = icmp eq i64 %524, %532
  br i1 %533, label %534, label %549

534:                                              ; preds = %525
  %535 = getelementptr inbounds i8, i8* %246, i64 %526
  %536 = tail call i32 @strncmp(i8* %503, i8* %535, i64 %524) #15
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %549

538:                                              ; preds = %534
  %539 = getelementptr inbounds i8, i8* %246, i64 %531
  %540 = load i8, i8* %539, align 1
  %541 = icmp eq i8 %540, 58
  %542 = zext i1 %541 to i64
  %543 = add i64 %531, %542
  %544 = getelementptr inbounds i8, i8* %246, i64 %543
  %545 = add i64 %527, 1
  %546 = sub i64 %545, %543
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %535, i8* align 1 %544, i64 %546, i1 false) #9
  %547 = add i64 %527, %526
  %548 = sub i64 %547, %543
  br label %551

549:                                              ; preds = %534, %525
  %550 = add i64 %531, 1
  br label %551

551:                                              ; preds = %549, %538
  %552 = phi i64 [ %527, %549 ], [ %548, %538 ]
  %553 = phi i64 [ %550, %549 ], [ %526, %538 ]
  %554 = icmp ult i64 %553, %552
  br i1 %554, label %525, label %497

555:                                              ; preds = %507
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1093, i64 0, i64 0), i8* nonnull %246) #9
  br label %556

556:                                              ; preds = %555, %507, %494
  %557 = and i8 %231, 1
  %558 = icmp eq i8 %557, 0
  %559 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %559) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %559, i8 -86, i64 2048, i1 false) #9
  %560 = getelementptr inbounds [2048 x i8], [2048 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %560) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %560, i8 -86, i64 2048, i1 false) #9
  br label %561

561:                                              ; preds = %609, %556
  %562 = phi i8* [ %575, %609 ], [ %246, %556 ]
  %563 = load i8, i8* %562, align 1
  %564 = icmp eq i8 %563, 0
  br i1 %564, label %611, label %565

565:                                              ; preds = %561
  %566 = call i8* @strchr(i8* nonnull %562, i32 58) #15
  %567 = icmp eq i8* %566, null
  br i1 %567, label %568, label %572

568:                                              ; preds = %565
  %569 = call i64 @strlen(i8* nonnull %562) #15
  %570 = and i64 %569, 4294967295
  %571 = getelementptr inbounds i8, i8* %562, i64 %570
  br label %574

572:                                              ; preds = %565
  store i8 0, i8* %566, align 1
  %573 = getelementptr inbounds i8, i8* %566, i64 1
  br label %574

574:                                              ; preds = %572, %568
  %575 = phi i8* [ %571, %568 ], [ %573, %572 ]
  br i1 %558, label %593, label %576

576:                                              ; preds = %574
  %577 = call %struct.__dirstream* @opendir(i8* nonnull %562) #9
  %578 = icmp eq %struct.__dirstream* %577, null
  br i1 %578, label %609, label %579

579:                                              ; preds = %576
  %580 = call %struct.dirent* @readdir64(%struct.__dirstream* nonnull %577) #9
  %581 = icmp eq %struct.dirent* %580, null
  br i1 %581, label %591, label %582

582:                                              ; preds = %579, %588
  %583 = phi %struct.dirent* [ %589, %588 ], [ %580, %579 ]
  %584 = getelementptr inbounds %struct.dirent, %struct.dirent* %583, i64 0, i32 4, i64 0
  call fastcc void @loader_get_fullpath(i8* %584, i8* nonnull %562, i64 2048, i8* nonnull %559) #9
  %585 = call fastcc i32 @AddIfManifestFile(%struct.loader_instance* %0, i8* nonnull %559, %struct.loader_data_files* %5) #9
  switch i32 %585, label %586 [
    i32 5, label %588
    i32 0, label %588
  ]

586:                                              ; preds = %582
  %587 = call i32 @closedir(%struct.__dirstream* nonnull %577) #9
  br label %611

588:                                              ; preds = %582, %582
  %589 = call %struct.dirent* @readdir64(%struct.__dirstream* nonnull %577) #9
  %590 = icmp eq %struct.dirent* %589, null
  br i1 %590, label %591, label %582

591:                                              ; preds = %588, %579
  %592 = call i32 @closedir(%struct.__dirstream* nonnull %577) #9
  br label %609

593:                                              ; preds = %574
  %594 = icmp eq i8* %575, null
  br i1 %594, label %599, label %595

595:                                              ; preds = %593
  %596 = ptrtoint i8* %575 to i64
  %597 = ptrtoint i8* %562 to i64
  %598 = sub i64 %596, %597
  br label %601

599:                                              ; preds = %593
  %600 = call i64 @strlen(i8* nonnull %562) #15
  br label %601

601:                                              ; preds = %599, %595
  %602 = phi i64 [ %598, %595 ], [ %600, %599 ]
  %603 = add i64 %602, 1
  %604 = icmp ugt i64 %603, 2048
  br i1 %604, label %605, label %606

605:                                              ; preds = %601
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 16, i32 undef, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1094, i64 0, i64 0), i8* nonnull %562) #9
  br label %609

606:                                              ; preds = %601
  %607 = call i8* @strcpy(i8* nonnull %560, i8* nonnull %562) #9
  call fastcc void @loader_get_fullpath(i8* nonnull %562, i8* nonnull %560, i64 2048, i8* nonnull %559) #9
  %608 = call fastcc i32 @AddIfManifestFile(%struct.loader_instance* %0, i8* nonnull %559, %struct.loader_data_files* %5) #9
  switch i32 %608, label %611 [
    i32 5, label %609
    i32 0, label %609
  ]

609:                                              ; preds = %606, %606, %605, %591, %576
  %610 = icmp eq i8* %575, null
  br i1 %610, label %611, label %561

611:                                              ; preds = %609, %606, %561, %586
  %612 = phi i32 [ %585, %586 ], [ 0, %609 ], [ 0, %561 ], [ %608, %606 ]
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %560) #9
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %559) #9
  br label %613

613:                                              ; preds = %611, %248, %134, %131
  %614 = phi i8* [ null, %134 ], [ null, %131 ], [ null, %248 ], [ %246, %611 ]
  %615 = phi i32 [ 0, %134 ], [ 0, %131 ], [ -1, %248 ], [ %612, %611 ]
  %616 = icmp eq i8* %109, null
  br i1 %616, label %627, label %617

617:                                              ; preds = %613
  %618 = icmp eq %struct.loader_instance* %0, null
  br i1 %618, label %626, label %619

619:                                              ; preds = %617
  %620 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %621 = load void (i8*, i8*)*, void (i8*, i8*)** %620, align 8
  %622 = icmp eq void (i8*, i8*)* %621, null
  br i1 %622, label %626, label %623

623:                                              ; preds = %619
  %624 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %625 = load i8*, i8** %624, align 8
  call void %621(i8* %625, i8* nonnull %109) #9
  br label %627

626:                                              ; preds = %619, %617
  call void @free(i8* nonnull %109) #9
  br label %627

627:                                              ; preds = %626, %623, %613
  %628 = icmp eq i8* %614, null
  br i1 %628, label %639, label %629

629:                                              ; preds = %627
  %630 = icmp eq %struct.loader_instance* %0, null
  br i1 %630, label %638, label %631

631:                                              ; preds = %629
  %632 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %633 = load void (i8*, i8*)*, void (i8*, i8*)** %632, align 8
  %634 = icmp eq void (i8*, i8*)* %633, null
  br i1 %634, label %638, label %635

635:                                              ; preds = %631
  %636 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %637 = load i8*, i8** %636, align 8
  call void %633(i8* %637, i8* nonnull %614) #9
  br label %639

638:                                              ; preds = %631, %629
  call void @free(i8* nonnull %614) #9
  br label %639

639:                                              ; preds = %627, %635, %638
  %640 = icmp eq i32 %615, 0
  br i1 %640, label %691, label %641

641:                                              ; preds = %101, %639
  %642 = phi i32 [ %615, %639 ], [ -1, %101 ]
  %643 = load i8**, i8*** %9, align 8
  %644 = icmp eq i8** %643, null
  br i1 %644, label %691, label %645

645:                                              ; preds = %641
  %646 = bitcast i8** %643 to i8*
  %647 = load i32, i32* %63, align 8
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %656, label %649

649:                                              ; preds = %645
  %650 = icmp eq %struct.loader_instance* %0, null
  %651 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %652 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %671

653:                                              ; preds = %684
  %654 = bitcast i8*** %9 to i8**
  %655 = load i8*, i8** %654, align 8
  br label %656

656:                                              ; preds = %645, %653
  %657 = phi i8* [ %655, %653 ], [ %646, %645 ]
  %658 = icmp eq i8* %657, null
  br i1 %658, label %669, label %659

659:                                              ; preds = %656
  %660 = icmp eq %struct.loader_instance* %0, null
  br i1 %660, label %668, label %661

661:                                              ; preds = %659
  %662 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %663 = load void (i8*, i8*)*, void (i8*, i8*)** %662, align 8
  %664 = icmp eq void (i8*, i8*)* %663, null
  br i1 %664, label %668, label %665

665:                                              ; preds = %661
  %666 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %667 = load i8*, i8** %666, align 8
  call void %663(i8* %667, i8* nonnull %657) #9
  br label %669

668:                                              ; preds = %661, %659
  call void @free(i8* nonnull %657) #9
  br label %669

669:                                              ; preds = %656, %665, %668
  %670 = bitcast %struct.loader_data_files* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %670, i8 0, i64 16, i1 false)
  br label %691

671:                                              ; preds = %689, %649
  %672 = phi i8** [ %643, %649 ], [ %690, %689 ]
  %673 = phi i64 [ 0, %649 ], [ %685, %689 ]
  %674 = getelementptr inbounds i8*, i8** %672, i64 %673
  %675 = load i8*, i8** %674, align 8
  %676 = icmp eq i8* %675, null
  br i1 %676, label %684, label %677

677:                                              ; preds = %671
  br i1 %650, label %683, label %678

678:                                              ; preds = %677
  %679 = load void (i8*, i8*)*, void (i8*, i8*)** %651, align 8
  %680 = icmp eq void (i8*, i8*)* %679, null
  br i1 %680, label %683, label %681

681:                                              ; preds = %678
  %682 = load i8*, i8** %652, align 8
  call void %679(i8* %682, i8* nonnull %675) #9
  br label %684

683:                                              ; preds = %678, %677
  call void @free(i8* nonnull %675) #9
  br label %684

684:                                              ; preds = %671, %681, %683
  %685 = add nuw nsw i64 %673, 1
  %686 = load i32, i32* %63, align 8
  %687 = zext i32 %686 to i64
  %688 = icmp ult i64 %685, %687
  br i1 %688, label %689, label %653

689:                                              ; preds = %684
  %690 = load i8**, i8*** %9, align 8
  br label %671

691:                                              ; preds = %641, %639, %669
  %692 = phi i32 [ %642, %641 ], [ 0, %639 ], [ %642, %669 ]
  ret i32 %692
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loader_get_json(%struct.loader_instance*, i8*, %struct.cJSON**) unnamed_addr #0 {
  %4 = alloca [256 x i8], align 16
  %5 = icmp eq %struct.cJSON** %2, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1100, i64 0, i64 0))
  br label %62

7:                                                ; preds = %3
  store %struct.cJSON* null, %struct.cJSON** %2, align 8
  %8 = tail call %struct._IO_FILE* @fopen64(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1101, i64 0, i64 0))
  %9 = icmp eq %struct._IO_FILE* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  br label %13

12:                                               ; preds = %7
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1102, i64 0, i64 0), i8* %1)
  br label %62

13:                                               ; preds = %10, %16
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 256, i1 false)
  %14 = call i64 @fread(i8* nonnull %11, i64 1, i64 256, %struct._IO_FILE* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %11) #9
  %15 = icmp eq i64 %14, 256
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = tail call i32 @feof(%struct._IO_FILE* nonnull %8) #9
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %13, label %19

19:                                               ; preds = %13, %16
  %20 = tail call i64 @ftell(%struct._IO_FILE* nonnull %8)
  %21 = tail call i32 @fseek(%struct._IO_FILE* nonnull %8, i64 0, i32 0)
  %22 = add i64 %20, 1
  %23 = icmp eq %struct.loader_instance* %0, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %26 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %25, align 8
  %27 = icmp eq i8* (i8*, i64, i64, i32)* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i8* %26(i8* %30, i64 %22, i64 8, i32 0) #9
  br label %34

32:                                               ; preds = %24, %19
  %33 = tail call noalias i8* @malloc(i64 %22) #9
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi i8* [ %31, %28 ], [ %33, %32 ]
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1103, i64 0, i64 0), i8* %1, i64 %20)
  br label %59

38:                                               ; preds = %34
  %39 = tail call i64 @fread(i8* nonnull %35, i64 1, i64 %20, %struct._IO_FILE* nonnull %8)
  %40 = icmp eq i64 %39, %20
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1104, i64 0, i64 0), i8* %1)
  br label %49

42:                                               ; preds = %38
  %43 = getelementptr inbounds i8, i8* %35, i64 %20
  store i8 0, i8* %43, align 1
  %44 = icmp eq i64 %20, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = tail call %struct.cJSON* @cJSON_Parse(i8* nonnull %35) #9
  store %struct.cJSON* %46, %struct.cJSON** %2, align 8
  %47 = icmp eq %struct.cJSON* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.1105, i64 0, i64 0), i8* %1)
  br label %49

49:                                               ; preds = %42, %45, %48, %41
  %50 = phi i32 [ -3, %42 ], [ 0, %45 ], [ -1, %48 ], [ -3, %41 ]
  br i1 %23, label %58, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %53 = load void (i8*, i8*)*, void (i8*, i8*)** %52, align 8
  %54 = icmp eq void (i8*, i8*)* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void %53(i8* %57, i8* nonnull %35) #9
  br label %59

58:                                               ; preds = %51, %49
  tail call void @free(i8* nonnull %35) #9
  br label %59

59:                                               ; preds = %37, %55, %58
  %60 = phi i32 [ -1, %37 ], [ %50, %55 ], [ %50, %58 ]
  %61 = tail call i32 @fclose(%struct._IO_FILE* nonnull %8)
  br label %62

62:                                               ; preds = %12, %6, %59
  %63 = phi i32 [ %60, %59 ], [ -3, %6 ], [ -3, %12 ]
  ret i32 %63
}

declare void @cJSON_Delete(%struct.cJSON*) local_unnamed_addr #6

declare %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON*, i8*) local_unnamed_addr #6

declare i8* @cJSON_Print(%struct.cJSON*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i8* @strtok(i8*, i8* nocapture readonly) local_unnamed_addr #7

declare void @cJSON_Free(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @loader_get_fullpath(i8*, i8* nocapture readonly, i64, i8*) unnamed_addr #0 {
  %5 = tail call i8* @strchr(i8* %0, i32 47) #15
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %34

7:                                                ; preds = %4
  %8 = load i8, i8* %1, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %7
  %11 = tail call i64 @strlen(i8* %1) #15
  %12 = add i64 %11, 1
  %13 = alloca i8, i64 %12, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 %12, i1 false)
  %14 = call i8* @strcpy(i8* nonnull %13, i8* %1) #9
  br label %15

15:                                               ; preds = %31, %10
  %16 = phi i8* [ %13, %10 ], [ %29, %31 ]
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  %20 = call i8* @strchr(i8* nonnull %16, i32 58) #15
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = call i64 @strlen(i8* nonnull %16) #15
  %24 = and i64 %23, 4294967295
  %25 = getelementptr inbounds i8, i8* %16, i64 %24
  br label %28

26:                                               ; preds = %19
  store i8 0, i8* %20, align 1
  %27 = getelementptr inbounds i8, i8* %20, i64 1
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i8* [ %25, %22 ], [ %27, %26 ]
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  call void (i8*, i64, ...) @loader_platform_combine_path(i8* %3, i64 %2, i8* nonnull %16, i8* %0, i8* null)
  %32 = call i32 @access(i8* %3, i32 0) #9
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %15

34:                                               ; preds = %28, %15, %4, %7
  %35 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %3, i64 %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1107, i64 0, i64 0), i8* %0) #9
  br label %36

36:                                               ; preds = %31, %34
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @loader_make_version(i8*) unnamed_addr #5 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = tail call i8* @strtok(i8* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @strtol(i8* nocapture nonnull %4, i8** null, i32 10) #9
  %8 = trunc i64 %7 to i32
  %9 = and i32 %8, 65535
  %10 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %11 = icmp eq i8* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %6
  %13 = tail call i64 @strtol(i8* nocapture nonnull %10, i8** null, i32 10) #9
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 65535
  %16 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %17 = icmp eq i8* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = tail call i64 @strtol(i8* nocapture nonnull %16, i8** null, i32 10) #9
  %20 = trunc i64 %19 to i32
  %21 = and i32 %20, 65535
  br label %22

22:                                               ; preds = %12, %6, %3, %18
  %23 = phi i32 [ %9, %18 ], [ %9, %12 ], [ %9, %6 ], [ 0, %3 ]
  %24 = phi i32 [ %15, %18 ], [ %15, %12 ], [ 0, %6 ], [ 0, %3 ]
  %25 = phi i32 [ %21, %18 ], [ 0, %12 ], [ 0, %6 ], [ 0, %3 ]
  %26 = shl i32 %23, 22
  %27 = shl nuw nsw i32 %24, 12
  %28 = or i32 %27, %26
  %29 = or i32 %28, %25
  br label %30

30:                                               ; preds = %1, %22
  %31 = phi i32 [ %29, %22 ], [ 0, %1 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderScanForLayers(%struct.loader_instance*, %struct.loader_layer_list*) local_unnamed_addr #0 {
  %3 = alloca %struct.loader_data_files, align 8
  %4 = alloca %struct.cJSON*, align 8
  %5 = alloca i8, align 1
  %6 = bitcast %struct.loader_data_files* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %3, i64 0, i32 0
  %8 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %3, i64 0, i32 2
  %9 = bitcast %struct.cJSON** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store %struct.cJSON* inttoptr (i64 -6148914691236517206 to %struct.cJSON*), %struct.cJSON** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 0, i8* %5, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false)
  tail call void @loaderDeleteLayerListAndProperties(%struct.loader_instance* %0, %struct.loader_layer_list* %1)
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  %11 = call fastcc i32 @loaderGetDataFiles(%struct.loader_instance* %0, i32 1, i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.967, i64 0, i64 0), %struct.loader_data_files* nonnull %3)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %224

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %39, label %16

16:                                               ; preds = %13, %34
  %17 = phi i64 [ %35, %34 ], [ 0, %13 ]
  %18 = load i8**, i8*** %8, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 %17
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %16
  %23 = call fastcc i32 @loader_get_json(%struct.loader_instance* %0, i8* nonnull %20, %struct.cJSON** nonnull %4)
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %224, label %25

25:                                               ; preds = %22
  %26 = icmp ne i32 %23, 0
  %27 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  %28 = icmp eq %struct.cJSON* %27, null
  %29 = or i1 %26, %28
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = call fastcc i32 @loaderAddLayerProperties(%struct.loader_instance* %0, %struct.loader_layer_list* %1, %struct.cJSON* nonnull %27, i1 zeroext true, i8* nonnull %20)
  %32 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  call void @cJSON_Delete(%struct.cJSON* %32) #9
  %33 = icmp eq i32 %31, -1
  br i1 %33, label %224, label %34

34:                                               ; preds = %25, %30, %16
  %35 = add nuw nsw i64 %17, 1
  %36 = load i32, i32* %7, align 8
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %16, label %39

39:                                               ; preds = %34, %13
  call fastcc void @RemoveAllNonValidOverrideLayers(%struct.loader_instance* %0, %struct.loader_layer_list* %1)
  %40 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %172

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %45 = icmp eq %struct.loader_instance* %0, null
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %47 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %48

48:                                               ; preds = %43, %166
  %49 = phi i64 [ 0, %43 ], [ %168, %166 ]
  %50 = phi i8* [ null, %43 ], [ %167, %166 ]
  %51 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %44, align 8
  %52 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %51, i64 %49, i32 15
  %53 = load i8, i8* %52, align 8, !range !4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %166, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %51, i64 %49
  %57 = call zeroext i1 @loaderImplicitLayerIsEnabled(%struct.loader_instance* %0, %struct.loader_layer_properties* %56)
  br i1 %57, label %58, label %166

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %51, i64 %49, i32 13
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %166, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %51, i64 %49, i32 14
  %64 = load [1024 x i8]*, [1024 x i8]** %63, align 8
  %65 = zext i32 %60 to i64
  br label %83

66:                                               ; preds = %100
  br i1 %45, label %73, label %67

67:                                               ; preds = %66
  %68 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %46, align 8
  %69 = icmp eq i8* (i8*, i64, i64, i32)* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = load i8*, i8** %47, align 8
  %72 = call i8* %68(i8* %71, i64 %102, i64 8, i32 0) #9
  br label %75

73:                                               ; preds = %67, %66
  %74 = call noalias i8* @malloc(i64 %102) #9
  br label %75

75:                                               ; preds = %70, %73
  %76 = phi i8* [ %72, %70 ], [ %74, %73 ]
  %77 = icmp eq i8* %76, null
  br i1 %77, label %224, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %59, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %105, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %51, i64 %49, i32 14
  br label %108

83:                                               ; preds = %100, %62
  %84 = phi i64 [ 0, %62 ], [ %103, %100 ]
  %85 = phi i64 [ 0, %62 ], [ %102, %100 ]
  %86 = getelementptr inbounds [1024 x i8], [1024 x i8]* %64, i64 %84, i64 0
  %87 = icmp eq i8* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %83
  %89 = call i64 @strlen(i8* nonnull %86) #15
  %90 = add i64 %89, 2
  br label %91

91:                                               ; preds = %97, %88
  %92 = phi i64 [ %90, %88 ], [ %98, %97 ]
  %93 = phi i8* [ %86, %88 ], [ %99, %97 ]
  %94 = load i8, i8* %93, align 1
  switch i8 %94, label %97 [
    i8 0, label %100
    i8 58, label %95
  ]

95:                                               ; preds = %91
  %96 = add i64 %92, 2
  br label %97

97:                                               ; preds = %95, %91
  %98 = phi i64 [ %96, %95 ], [ %92, %91 ]
  %99 = getelementptr inbounds i8, i8* %93, i64 1
  br label %91

100:                                              ; preds = %91, %83
  %101 = phi i64 [ 0, %83 ], [ %92, %91 ]
  %102 = add i64 %101, %85
  %103 = add nuw nsw i64 %84, 1
  %104 = icmp eq i64 %103, %65
  br i1 %104, label %66, label %83

105:                                              ; preds = %160, %78
  %106 = phi i8* [ %76, %78 ], [ %162, %160 ]
  %107 = getelementptr inbounds i8, i8* %106, i64 -1
  store i8 0, i8* %107, align 1
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* null, i32 2, i32 undef, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.968, i64 0, i64 0), i8* nonnull %76)
  br label %166

108:                                              ; preds = %81, %160
  %109 = phi i32 [ %79, %81 ], [ %161, %160 ]
  %110 = phi i64 [ 0, %81 ], [ %163, %160 ]
  %111 = phi i8* [ %76, %81 ], [ %162, %160 ]
  %112 = load [1024 x i8]*, [1024 x i8]** %82, align 8
  %113 = getelementptr inbounds [1024 x i8], [1024 x i8]* %112, i64 %110, i64 0
  %114 = icmp eq i8* %113, null
  br i1 %114, label %160, label %115

115:                                              ; preds = %108
  %116 = load i8, i8* %113, align 1
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %160, label %118

118:                                              ; preds = %115, %153
  %119 = phi i8* [ %156, %153 ], [ %111, %115 ]
  %120 = phi i32 [ %155, %153 ], [ 0, %115 ]
  br label %121

121:                                              ; preds = %121, %118
  %122 = phi i32 [ %127, %121 ], [ %120, %118 ]
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [1024 x i8], [1024 x i8]* %112, i64 %110, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 58
  %127 = add i32 %122, 1
  br i1 %126, label %121, label %128

128:                                              ; preds = %121, %131
  %129 = phi i8 [ %135, %131 ], [ %125, %121 ]
  %130 = phi i32 [ %132, %131 ], [ %122, %121 ]
  switch i8 %129, label %131 [
    i8 58, label %136
    i8 0, label %136
  ]

131:                                              ; preds = %128
  %132 = add i32 %130, 1
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [1024 x i8], [1024 x i8]* %112, i64 %110, i64 %133
  %135 = load i8, i8* %134, align 1
  br label %128

136:                                              ; preds = %128, %128
  %137 = zext i32 %130 to i64
  %138 = getelementptr inbounds [1024 x i8], [1024 x i8]* %112, i64 %110, i64 %137
  %139 = sub i32 %130, %122
  %140 = zext i32 %139 to i64
  %141 = icmp eq i32 %139, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %136
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %124, i64 %140, i1 false) #9
  %143 = getelementptr inbounds i8, i8* %119, i64 %140
  %144 = getelementptr inbounds i8, i8* %143, i64 -1
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 47
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds i8, i8* %143, i64 1
  store i8 47, i8* %143, align 1
  br label %149

149:                                              ; preds = %147, %142
  %150 = phi i8* [ %148, %147 ], [ %143, %142 ]
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  store i8 58, i8* %150, align 1
  %152 = load i8, i8* %138, align 1
  br label %153

153:                                              ; preds = %149, %136
  %154 = phi i8 [ %125, %136 ], [ %152, %149 ]
  %155 = phi i32 [ %122, %136 ], [ %130, %149 ]
  %156 = phi i8* [ %119, %136 ], [ %151, %149 ]
  %157 = icmp eq i8 %154, 0
  br i1 %157, label %158, label %118

158:                                              ; preds = %153
  %159 = load i32, i32* %59, align 8
  br label %160

160:                                              ; preds = %158, %115, %108
  %161 = phi i32 [ %109, %108 ], [ %109, %115 ], [ %159, %158 ]
  %162 = phi i8* [ %111, %108 ], [ %111, %115 ], [ %156, %158 ]
  %163 = add nuw nsw i64 %110, 1
  %164 = zext i32 %161 to i64
  %165 = icmp ult i64 %163, %164
  br i1 %165, label %108, label %105

166:                                              ; preds = %105, %58, %48, %55
  %167 = phi i8* [ %76, %105 ], [ %50, %48 ], [ %50, %55 ], [ %50, %58 ]
  %168 = add nuw nsw i64 %49, 1
  %169 = load i32, i32* %40, align 8
  %170 = sext i32 %169 to i64
  %171 = icmp slt i64 %168, %170
  br i1 %171, label %48, label %172

172:                                              ; preds = %166, %39
  %173 = phi i8* [ null, %39 ], [ %167, %166 ]
  %174 = call fastcc i32 @loaderGetDataFiles(%struct.loader_instance* %0, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.969, i64 0, i64 0), i8* %173, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.970, i64 0, i64 0), %struct.loader_data_files* nonnull %3)
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %212

176:                                              ; preds = %172
  %177 = load i32, i32* %7, align 8
  %178 = or i32 %177, %14
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %212, label %180

180:                                              ; preds = %176
  %181 = icmp eq i32 %177, 0
  br i1 %181, label %205, label %182

182:                                              ; preds = %180, %200
  %183 = phi i64 [ %201, %200 ], [ 0, %180 ]
  %184 = load i8**, i8*** %8, align 8
  %185 = getelementptr inbounds i8*, i8** %184, i64 %183
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %200, label %188

188:                                              ; preds = %182
  %189 = call fastcc i32 @loader_get_json(%struct.loader_instance* %0, i8* nonnull %186, %struct.cJSON** nonnull %4)
  %190 = icmp eq i32 %189, -1
  br i1 %190, label %212, label %191

191:                                              ; preds = %188
  %192 = icmp ne i32 %189, 0
  %193 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  %194 = icmp eq %struct.cJSON* %193, null
  %195 = or i1 %192, %194
  br i1 %195, label %200, label %196

196:                                              ; preds = %191
  %197 = call fastcc i32 @loaderAddLayerProperties(%struct.loader_instance* %0, %struct.loader_layer_list* %1, %struct.cJSON* nonnull %193, i1 zeroext false, i8* nonnull %186)
  %198 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  call void @cJSON_Delete(%struct.cJSON* %198) #9
  %199 = icmp eq i32 %197, -1
  br i1 %199, label %212, label %200

200:                                              ; preds = %191, %196, %182
  %201 = add nuw nsw i64 %183, 1
  %202 = load i32, i32* %7, align 8
  %203 = zext i32 %202 to i64
  %204 = icmp ult i64 %201, %203
  br i1 %204, label %182, label %205

205:                                              ; preds = %200, %180
  call fastcc void @VerifyAllMetaLayers(%struct.loader_instance* %0, %struct.loader_layer_list* %1, i8* nonnull %5)
  %206 = load i8, i8* %5, align 1, !range !4
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %212, label %208

208:                                              ; preds = %205
  call void @loaderRemoveLayersInBlacklist(%struct.loader_instance* %0, %struct.loader_layer_list* %1)
  %209 = icmp eq %struct.loader_instance* %0, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 20
  store i8 1, i8* %211, align 8
  br label %212

212:                                              ; preds = %196, %188, %208, %205, %172, %210, %176
  %213 = icmp eq i8* %173, null
  br i1 %213, label %224, label %214

214:                                              ; preds = %212
  %215 = icmp eq %struct.loader_instance* %0, null
  br i1 %215, label %223, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %218 = load void (i8*, i8*)*, void (i8*, i8*)** %217, align 8
  %219 = icmp eq void (i8*, i8*)* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %222 = load i8*, i8** %221, align 8
  call void %218(i8* %222, i8* nonnull %173) #9
  br label %224

223:                                              ; preds = %216, %214
  call void @free(i8* nonnull %173) #9
  br label %224

224:                                              ; preds = %30, %22, %75, %2, %223, %220, %212
  %225 = load i8**, i8*** %8, align 8
  %226 = icmp eq i8** %225, null
  br i1 %226, label %271, label %227

227:                                              ; preds = %224
  %228 = bitcast i8** %225 to i8*
  %229 = load i32, i32* %7, align 8
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %238, label %231

231:                                              ; preds = %227
  %232 = icmp eq %struct.loader_instance* %0, null
  %233 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %234 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %251

235:                                              ; preds = %264
  %236 = bitcast i8*** %8 to i8**
  %237 = load i8*, i8** %236, align 8
  br label %238

238:                                              ; preds = %227, %235
  %239 = phi i8* [ %237, %235 ], [ %228, %227 ]
  %240 = icmp eq i8* %239, null
  br i1 %240, label %271, label %241

241:                                              ; preds = %238
  %242 = icmp eq %struct.loader_instance* %0, null
  br i1 %242, label %250, label %243

243:                                              ; preds = %241
  %244 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %245 = load void (i8*, i8*)*, void (i8*, i8*)** %244, align 8
  %246 = icmp eq void (i8*, i8*)* %245, null
  br i1 %246, label %250, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %249 = load i8*, i8** %248, align 8
  call void %245(i8* %249, i8* nonnull %239) #9
  br label %271

250:                                              ; preds = %243, %241
  call void @free(i8* nonnull %239) #9
  br label %271

251:                                              ; preds = %269, %231
  %252 = phi i8** [ %225, %231 ], [ %270, %269 ]
  %253 = phi i64 [ 0, %231 ], [ %265, %269 ]
  %254 = getelementptr inbounds i8*, i8** %252, i64 %253
  %255 = load i8*, i8** %254, align 8
  %256 = icmp eq i8* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %251
  br i1 %232, label %263, label %258

258:                                              ; preds = %257
  %259 = load void (i8*, i8*)*, void (i8*, i8*)** %233, align 8
  %260 = icmp eq void (i8*, i8*)* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %258
  %262 = load i8*, i8** %234, align 8
  call void %259(i8* %262, i8* nonnull %255) #9
  br label %264

263:                                              ; preds = %258, %257
  call void @free(i8* nonnull %255) #9
  br label %264

264:                                              ; preds = %263, %261, %251
  %265 = add nuw nsw i64 %253, 1
  %266 = load i32, i32* %7, align 8
  %267 = zext i32 %266 to i64
  %268 = icmp ult i64 %265, %267
  br i1 %268, label %269, label %235

269:                                              ; preds = %264
  %270 = load i8**, i8*** %8, align 8
  br label %251

271:                                              ; preds = %250, %247, %238, %224
  %272 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loaderAddLayerProperties(%struct.loader_instance*, %struct.loader_layer_list*, %struct.cJSON*, i1 zeroext, i8*) unnamed_addr #0 {
  %6 = icmp eq %struct.cJSON* %2, null
  br i1 %6, label %121, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 6
  br i1 %10, label %11, label %121

11:                                               ; preds = %7
  %12 = tail call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.949, i64 0, i64 0)) #9
  %13 = icmp eq %struct.cJSON* %12, null
  br i1 %13, label %121, label %14

14:                                               ; preds = %11
  %15 = tail call i8* @cJSON_PrintUnformatted(%struct.cJSON* nonnull %12) #9
  %16 = icmp eq i8* %15, null
  br i1 %16, label %121, label %17

17:                                               ; preds = %14
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1121, i64 0, i64 0), i8* %4, i8* nonnull %15)
  %18 = tail call i8* @strtok(i8* nonnull %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %17
  %21 = tail call i64 @strtol(i8* nocapture nonnull %18, i8** null, i32 10) #9
  %22 = trunc i64 %21 to i16
  %23 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %24 = icmp eq i8* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %20
  %26 = tail call i64 @strtol(i8* nocapture nonnull %23, i8** null, i32 10) #9
  %27 = trunc i64 %26 to i16
  %28 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.953, i64 0, i64 0)) #9
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = tail call i64 @strtol(i8* nocapture nonnull %28, i8** null, i32 10) #9
  %32 = trunc i64 %31 to i16
  br label %33

33:                                               ; preds = %25, %20, %30
  %34 = phi i16 [ 0, %20 ], [ %27, %25 ], [ %27, %30 ]
  %35 = phi i16 [ 0, %20 ], [ 0, %25 ], [ %32, %30 ]
  %36 = icmp eq i16 %22, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %33
  switch i16 %34, label %44 [
    i16 2, label %38
    i16 1, label %40
    i16 0, label %42
  ]

38:                                               ; preds = %37
  %39 = icmp eq i16 %35, 0
  br i1 %39, label %51, label %44

40:                                               ; preds = %37
  %41 = icmp ult i16 %35, 3
  br i1 %41, label %51, label %44

42:                                               ; preds = %37
  %43 = icmp ult i16 %35, 2
  br i1 %43, label %51, label %44

44:                                               ; preds = %17, %42, %40, %38, %37, %33
  %45 = phi i16 [ %35, %42 ], [ %35, %40 ], [ %35, %38 ], [ %35, %37 ], [ %35, %33 ], [ 0, %17 ]
  %46 = phi i16 [ 0, %42 ], [ 1, %40 ], [ 2, %38 ], [ %34, %37 ], [ %34, %33 ], [ 0, %17 ]
  %47 = phi i16 [ 1, %42 ], [ 1, %40 ], [ 1, %38 ], [ 1, %37 ], [ %22, %33 ], [ 0, %17 ]
  %48 = zext i16 %47 to i32
  %49 = zext i16 %46 to i32
  %50 = zext i16 %45 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.1122, i64 0, i64 0), i8* %4, i32 %48, i32 %49, i32 %50)
  br label %51

51:                                               ; preds = %38, %40, %42, %44
  %52 = phi i16 [ %47, %44 ], [ 1, %42 ], [ 1, %40 ], [ 1, %38 ]
  %53 = phi i16 [ %46, %44 ], [ 0, %42 ], [ 1, %40 ], [ 2, %38 ]
  %54 = phi i16 [ %45, %44 ], [ %35, %42 ], [ %35, %40 ], [ 0, %38 ]
  tail call void @cJSON_Free(i8* nonnull %15) #9
  %55 = tail call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1123, i64 0, i64 0)) #9
  %56 = icmp eq %struct.cJSON* %55, null
  br i1 %56, label %88, label %57

57:                                               ; preds = %51
  %58 = tail call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %55) #9
  %59 = or i16 %54, %52
  %60 = and i16 %59, -2
  %61 = or i16 %60, %53
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %57
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.1124, i64 0, i64 0), i8* %4, i8* nonnull %15)
  br label %64

64:                                               ; preds = %57, %63
  %65 = icmp sgt i32 %58, 0
  br i1 %65, label %66, label %121

66:                                               ; preds = %64
  %67 = zext i16 %54 to i48
  %68 = shl nuw i48 %67, 32
  %69 = zext i16 %53 to i48
  %70 = shl nuw nsw i48 %69, 16
  %71 = zext i16 %52 to i48
  %72 = or i48 %70, %71
  %73 = or i48 %72, %68
  %74 = tail call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %55, i32 0) #9
  %75 = icmp eq %struct.cJSON* %74, null
  br i1 %75, label %79, label %82

76:                                               ; preds = %82
  %77 = tail call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %55, i32 %86) #9
  %78 = icmp eq %struct.cJSON* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %76, %66
  %80 = phi i32 [ -3, %66 ], [ %85, %76 ]
  %81 = phi i32 [ 0, %66 ], [ %86, %76 ]
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.1125, i64 0, i64 0), i32 %81, i8* %4)
  br label %121

82:                                               ; preds = %66, %76
  %83 = phi %struct.cJSON* [ %77, %76 ], [ %74, %66 ]
  %84 = phi i32 [ %86, %76 ], [ 0, %66 ]
  %85 = tail call fastcc i32 @loaderReadLayerJson(%struct.loader_instance* %0, %struct.loader_layer_list* %1, %struct.cJSON* nonnull %83, i48 %73, i1 zeroext %3, i8* %4)
  %86 = add nuw nsw i32 %84, 1
  %87 = icmp eq i32 %86, %58
  br i1 %87, label %121, label %76

88:                                               ; preds = %51
  %89 = tail call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1126, i64 0, i64 0)) #9
  %90 = icmp eq %struct.cJSON* %89, null
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.1127, i64 0, i64 0), i8* %4)
  br label %121

92:                                               ; preds = %88, %92
  %93 = phi i16 [ %97, %92 ], [ 0, %88 ]
  %94 = phi %struct.cJSON* [ %96, %92 ], [ %89, %88 ]
  %95 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %94, i64 0, i32 0
  %96 = load %struct.cJSON*, %struct.cJSON** %95, align 8
  %97 = add i16 %93, 1
  %98 = icmp eq %struct.cJSON* %96, null
  br i1 %98, label %99, label %92

99:                                               ; preds = %92
  %100 = icmp ugt i16 %97, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %99
  %102 = or i16 %54, %52
  %103 = and i16 %102, -2
  %104 = or i16 %103, %53
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %107, label %106

106:                                              ; preds = %101
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.1128, i64 0, i64 0), i8* %4)
  br label %121

107:                                              ; preds = %101, %99
  %108 = zext i16 %54 to i48
  %109 = shl nuw i48 %108, 32
  %110 = zext i16 %53 to i48
  %111 = shl nuw nsw i48 %110, 16
  %112 = zext i16 %52 to i48
  %113 = or i48 %111, %112
  %114 = or i48 %113, %109
  br label %115

115:                                              ; preds = %115, %107
  %116 = phi %struct.cJSON* [ %89, %107 ], [ %119, %115 ]
  %117 = tail call fastcc i32 @loaderReadLayerJson(%struct.loader_instance* %0, %struct.loader_layer_list* %1, %struct.cJSON* %116, i48 %114, i1 zeroext %3, i8* %4)
  %118 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %116, i64 0, i32 0
  %119 = load %struct.cJSON*, %struct.cJSON** %118, align 8
  %120 = icmp eq %struct.cJSON* %119, null
  br i1 %120, label %121, label %115

121:                                              ; preds = %82, %115, %64, %79, %91, %11, %14, %5, %7, %106
  %122 = phi i32 [ -3, %7 ], [ -3, %11 ], [ -3, %14 ], [ -3, %91 ], [ -3, %5 ], [ -3, %106 ], [ %80, %79 ], [ -3, %64 ], [ %117, %115 ], [ %85, %82 ]
  ret i32 %122
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @RemoveAllNonValidOverrideLayers(%struct.loader_instance*, %struct.loader_layer_list*) unnamed_addr #0 {
  %3 = alloca [1024 x i8], align 16
  %4 = icmp eq %struct.loader_layer_list* %1, null
  br i1 %4, label %80, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 1024, i1 false)
  %7 = call i64 @readlink(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1176, i64 0, i64 0), i8* nonnull %6, i64 1024) #9
  switch i64 %7, label %8 [
    i64 -1, label %15
    i64 0, label %15
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 %7
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %79, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  br label %21

15:                                               ; preds = %5, %5
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1171, i64 0, i64 0))
  br label %79

16:                                               ; preds = %67
  %17 = and i8 %68, 1
  %18 = icmp ne i8 %17, 0
  %19 = icmp sgt i32 %69, -1
  %20 = and i1 %18, %19
  br i1 %20, label %74, label %75

21:                                               ; preds = %13, %67
  %22 = phi i32 [ 0, %13 ], [ %71, %67 ]
  %23 = phi i32 [ -1, %13 ], [ %69, %67 ]
  %24 = phi i8 [ 0, %13 ], [ %68, %67 ]
  %25 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %14, align 8
  %26 = zext i32 %22 to i64
  %27 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %25, i64 %26, i32 0, i32 0, i64 0
  %28 = tail call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0)) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %25, i64 %26, i32 21
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %63, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %25, i64 %26, i32 22
  br label %39

36:                                               ; preds = %54
  %37 = and i8 %56, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %61, label %67

39:                                               ; preds = %34, %54
  %40 = phi i32 [ %32, %34 ], [ %55, %54 ]
  %41 = phi i64 [ 0, %34 ], [ %58, %54 ]
  %42 = phi i32 [ %22, %34 ], [ %57, %54 ]
  %43 = phi i8 [ %24, %34 ], [ %56, %54 ]
  %44 = load [1024 x i8]*, [1024 x i8]** %35, align 8
  %45 = getelementptr inbounds [1024 x i8], [1024 x i8]* %44, i64 %41, i64 0
  %46 = call i32 @strcmp(i8* %45, i8* nonnull %6) #15
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %39
  %49 = and i8 %43, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.1172, i64 0, i64 0))
  tail call void @loaderRemoveLayerInList(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %1, i32 %42)
  %52 = add i32 %42, -1
  %53 = load i32, i32* %31, align 8
  br label %54

54:                                               ; preds = %48, %39, %51
  %55 = phi i32 [ %53, %51 ], [ %40, %39 ], [ %40, %48 ]
  %56 = phi i8 [ %43, %51 ], [ %43, %39 ], [ 1, %48 ]
  %57 = phi i32 [ %52, %51 ], [ %42, %39 ], [ %42, %48 ]
  %58 = add nuw nsw i64 %41, 1
  %59 = zext i32 %55 to i64
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %39, label %36

61:                                               ; preds = %36
  tail call void @loaderRemoveLayerInList(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %1, i32 %57)
  %62 = add i32 %57, -1
  br label %67

63:                                               ; preds = %30
  %64 = icmp eq i32 %23, -1
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.1173, i64 0, i64 0))
  tail call void @loaderRemoveLayerInList(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %1, i32 %22)
  %66 = add i32 %22, -1
  br label %67

67:                                               ; preds = %63, %36, %61, %65, %21
  %68 = phi i8 [ %56, %36 ], [ %56, %61 ], [ %24, %65 ], [ %24, %21 ], [ %24, %63 ]
  %69 = phi i32 [ %23, %36 ], [ %23, %61 ], [ %23, %65 ], [ %23, %21 ], [ %22, %63 ]
  %70 = phi i32 [ %57, %36 ], [ %62, %61 ], [ %66, %65 ], [ %22, %21 ], [ %22, %63 ]
  %71 = add i32 %70, 1
  %72 = load i32, i32* %10, align 8
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %21, label %16

74:                                               ; preds = %16
  tail call void @loaderRemoveLayerInList(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %1, i32 %69)
  br label %76

75:                                               ; preds = %16
  br i1 %18, label %76, label %77

76:                                               ; preds = %74, %75
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1174, i64 0, i64 0), i8* nonnull %6)
  br label %79

77:                                               ; preds = %75
  br i1 %19, label %78, label %79

78:                                               ; preds = %77
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1175, i64 0, i64 0))
  br label %79

79:                                               ; preds = %8, %76, %78, %77, %15
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %6) #9
  br label %80

80:                                               ; preds = %2, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @VerifyAllMetaLayers(%struct.loader_instance*, %struct.loader_layer_list*, i8* nocapture) unnamed_addr #0 {
  store i8 0, i8* %2, align 1
  %4 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %9 = icmp eq %struct.loader_instance* %0, null
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %11 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %13

12:                                               ; preds = %84, %3
  ret void

13:                                               ; preds = %7, %84
  %14 = phi i32 [ 0, %7 ], [ %86, %84 ]
  %15 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 %16
  %18 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 %16, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %77, label %22

22:                                               ; preds = %13
  %23 = tail call fastcc zeroext i1 @verifyMetaLayerComponentLayers(%struct.loader_instance* %0, %struct.loader_layer_properties* %17, %struct.loader_layer_list* %1)
  br i1 %23, label %77, label %24

24:                                               ; preds = %22
  br i1 %9, label %27, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %17, i64 0, i32 0, i32 0, i64 0
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 16, i32 undef, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1177, i64 0, i64 0), i8* %26)
  br label %27

27:                                               ; preds = %24, %25
  %28 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 %16, i32 11
  %29 = bitcast [1024 x i8]** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  br i1 %9, label %38, label %33

33:                                               ; preds = %32
  %34 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %35 = icmp eq void (i8*, i8*)* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = load i8*, i8** %11, align 8
  tail call void %34(i8* %37, i8* nonnull %30) #9
  br label %39

38:                                               ; preds = %33, %32
  tail call void @free(i8* nonnull %30) #9
  br label %39

39:                                               ; preds = %27, %36, %38
  %40 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 %16, i32 20
  %41 = load [1024 x i8]*, [1024 x i8]** %40, align 8
  %42 = icmp eq [1024 x i8]* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds [1024 x i8], [1024 x i8]* %41, i64 0, i64 0
  br i1 %9, label %50, label %45

45:                                               ; preds = %43
  %46 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %47 = icmp eq void (i8*, i8*)* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = load i8*, i8** %11, align 8
  tail call void %46(i8* %49, i8* nonnull %44) #9
  br label %51

50:                                               ; preds = %45, %43
  tail call void @free(i8* nonnull %44) #9
  br label %51

51:                                               ; preds = %50, %48, %39
  %52 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 %16, i32 14
  %53 = load [1024 x i8]*, [1024 x i8]** %52, align 8
  %54 = icmp eq [1024 x i8]* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds [1024 x i8], [1024 x i8]* %53, i64 0, i64 0
  br i1 %9, label %62, label %57

57:                                               ; preds = %55
  %58 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %59 = icmp eq void (i8*, i8*)* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = load i8*, i8** %11, align 8
  tail call void %58(i8* %61, i8* nonnull %56) #9
  br label %63

62:                                               ; preds = %57, %55
  tail call void @free(i8* nonnull %56) #9
  br label %63

63:                                               ; preds = %62, %60, %51
  %64 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  %65 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %64, i64 %16, i32 0, i32 0, i64 0
  %66 = add nsw i32 %14, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %64, i64 %67, i32 0, i32 0, i64 0
  %69 = load i32, i32* %4, align 8
  %70 = xor i32 %14, -1
  %71 = add i32 %69, %70
  %72 = zext i32 %71 to i64
  %73 = mul nuw nsw i64 %72, 11952
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %68, i64 %73, i1 false)
  %74 = load i32, i32* %4, align 8
  %75 = add i32 %74, -1
  store i32 %75, i32* %4, align 8
  %76 = add nsw i32 %14, -1
  br label %84

77:                                               ; preds = %13, %22
  %78 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %15, i64 %16, i32 15
  %79 = load i8, i8* %78, align 8, !range !4
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = tail call zeroext i1 @loaderImplicitLayerIsEnabled(%struct.loader_instance* %0, %struct.loader_layer_properties* %17)
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  store i8 1, i8* %2, align 1
  br label %84

84:                                               ; preds = %77, %81, %83, %63
  %85 = phi i32 [ %14, %83 ], [ %14, %81 ], [ %14, %77 ], [ %76, %63 ]
  %86 = add nsw i32 %85, 1
  %87 = load i32, i32* %4, align 8
  %88 = icmp slt i32 %86, %87
  br i1 %88, label %13, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderScanForImplicitLayers(%struct.loader_instance*, %struct.loader_layer_list*) local_unnamed_addr #0 {
  %3 = alloca %struct.loader_data_files, align 8
  %4 = alloca %struct.cJSON*, align 8
  %5 = alloca i8, align 1
  %6 = bitcast %struct.loader_data_files* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %3, i64 0, i32 0
  %8 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %3, i64 0, i32 2
  %9 = bitcast %struct.cJSON** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store %struct.cJSON* inttoptr (i64 -6148914691236517206 to %struct.cJSON*), %struct.cJSON** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 0, i8* %5, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false)
  %10 = call fastcc i32 @loaderGetDataFiles(%struct.loader_instance* %0, i32 1, i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.967, i64 0, i64 0), %struct.loader_data_files* nonnull %3)
  %11 = icmp ne i32 %10, 0
  %12 = load i32, i32* %7, align 8
  %13 = icmp eq i32 %12, 0
  %14 = or i1 %11, %13
  br i1 %14, label %274, label %15

15:                                               ; preds = %2
  call void @loaderDeleteLayerListAndProperties(%struct.loader_instance* %0, %struct.loader_layer_list* %1)
  %16 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  %17 = load i32, i32* %7, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %15
  %20 = icmp eq %struct.loader_instance* %0, null
  %21 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %22 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %23

23:                                               ; preds = %19, %50
  %24 = phi i64 [ 0, %19 ], [ %51, %50 ]
  %25 = load i8**, i8*** %8, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 %24
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %23
  %30 = call fastcc i32 @loader_get_json(%struct.loader_instance* %0, i8* nonnull %27, %struct.cJSON** nonnull %4)
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %272, label %32

32:                                               ; preds = %29
  %33 = icmp ne i32 %30, 0
  %34 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  %35 = icmp eq %struct.cJSON* %34, null
  %36 = or i1 %33, %35
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = call fastcc i32 @loaderAddLayerProperties(%struct.loader_instance* %0, %struct.loader_layer_list* %1, %struct.cJSON* nonnull %34, i1 zeroext true, i8* nonnull %27)
  br i1 %20, label %44, label %39

39:                                               ; preds = %37
  %40 = load void (i8*, i8*)*, void (i8*, i8*)** %21, align 8
  %41 = icmp eq void (i8*, i8*)* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = load i8*, i8** %22, align 8
  call void %40(i8* %43, i8* nonnull %27) #9
  br label %45

44:                                               ; preds = %39, %37
  call void @free(i8* nonnull %27) #9
  br label %45

45:                                               ; preds = %42, %44
  %46 = load i8**, i8*** %8, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 %24
  store i8* null, i8** %47, align 8
  %48 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  call void @cJSON_Delete(%struct.cJSON* %48) #9
  %49 = icmp eq i32 %38, -1
  br i1 %49, label %272, label %50

50:                                               ; preds = %45, %32, %23
  %51 = add nuw nsw i64 %24, 1
  %52 = load i32, i32* %7, align 8
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %23, label %55

55:                                               ; preds = %50, %15
  call fastcc void @RemoveAllNonValidOverrideLayers(%struct.loader_instance* %0, %struct.loader_layer_list* %1)
  %56 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %201

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %61 = icmp eq %struct.loader_instance* %0, null
  %62 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %63 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %64

64:                                               ; preds = %59, %192
  %65 = phi i64 [ 0, %59 ], [ %195, %192 ]
  %66 = phi i8 [ 0, %59 ], [ %194, %192 ]
  %67 = phi i8* [ null, %59 ], [ %193, %192 ]
  %68 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %60, align 8
  %69 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %68, i64 %65, i32 15
  %70 = load i8, i8* %69, align 8, !range !4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %186, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %68, i64 %65
  %74 = call zeroext i1 @loaderImplicitLayerIsEnabled(%struct.loader_instance* %0, %struct.loader_layer_properties* %73)
  br i1 %74, label %75, label %183

75:                                               ; preds = %72
  store i8 1, i8* %5, align 1
  %76 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %68, i64 %65, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %192, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %68, i64 %65, i32 14
  %81 = load [1024 x i8]*, [1024 x i8]** %80, align 8
  %82 = zext i32 %77 to i64
  br label %100

83:                                               ; preds = %117
  br i1 %61, label %90, label %84

84:                                               ; preds = %83
  %85 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %62, align 8
  %86 = icmp eq i8* (i8*, i64, i64, i32)* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = load i8*, i8** %63, align 8
  %89 = call i8* %85(i8* %88, i64 %119, i64 8, i32 0) #9
  br label %92

90:                                               ; preds = %84, %83
  %91 = call noalias i8* @malloc(i64 %119) #9
  br label %92

92:                                               ; preds = %87, %90
  %93 = phi i8* [ %89, %87 ], [ %91, %90 ]
  %94 = icmp eq i8* %93, null
  br i1 %94, label %272, label %95

95:                                               ; preds = %92
  %96 = load i32, i32* %76, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %122, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %68, i64 %65, i32 14
  br label %125

100:                                              ; preds = %117, %79
  %101 = phi i64 [ 0, %79 ], [ %120, %117 ]
  %102 = phi i64 [ 0, %79 ], [ %119, %117 ]
  %103 = getelementptr inbounds [1024 x i8], [1024 x i8]* %81, i64 %101, i64 0
  %104 = icmp eq i8* %103, null
  br i1 %104, label %117, label %105

105:                                              ; preds = %100
  %106 = call i64 @strlen(i8* nonnull %103) #15
  %107 = add i64 %106, 2
  br label %108

108:                                              ; preds = %114, %105
  %109 = phi i64 [ %107, %105 ], [ %115, %114 ]
  %110 = phi i8* [ %103, %105 ], [ %116, %114 ]
  %111 = load i8, i8* %110, align 1
  switch i8 %111, label %114 [
    i8 0, label %117
    i8 58, label %112
  ]

112:                                              ; preds = %108
  %113 = add i64 %109, 2
  br label %114

114:                                              ; preds = %112, %108
  %115 = phi i64 [ %113, %112 ], [ %109, %108 ]
  %116 = getelementptr inbounds i8, i8* %110, i64 1
  br label %108

117:                                              ; preds = %108, %100
  %118 = phi i64 [ 0, %100 ], [ %109, %108 ]
  %119 = add i64 %118, %102
  %120 = add nuw nsw i64 %101, 1
  %121 = icmp eq i64 %120, %82
  br i1 %121, label %83, label %100

122:                                              ; preds = %177, %95
  %123 = phi i8* [ %93, %95 ], [ %179, %177 ]
  %124 = getelementptr inbounds i8, i8* %123, i64 -1
  store i8 0, i8* %124, align 1
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* null, i32 2, i32 undef, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.971, i64 0, i64 0), i8* nonnull %93)
  br label %192

125:                                              ; preds = %98, %177
  %126 = phi i32 [ %96, %98 ], [ %178, %177 ]
  %127 = phi i64 [ 0, %98 ], [ %180, %177 ]
  %128 = phi i8* [ %93, %98 ], [ %179, %177 ]
  %129 = load [1024 x i8]*, [1024 x i8]** %99, align 8
  %130 = getelementptr inbounds [1024 x i8], [1024 x i8]* %129, i64 %127, i64 0
  %131 = icmp eq i8* %130, null
  br i1 %131, label %177, label %132

132:                                              ; preds = %125
  %133 = load i8, i8* %130, align 1
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %177, label %135

135:                                              ; preds = %132, %170
  %136 = phi i8* [ %173, %170 ], [ %128, %132 ]
  %137 = phi i32 [ %172, %170 ], [ 0, %132 ]
  br label %138

138:                                              ; preds = %138, %135
  %139 = phi i32 [ %144, %138 ], [ %137, %135 ]
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [1024 x i8], [1024 x i8]* %129, i64 %127, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 58
  %144 = add i32 %139, 1
  br i1 %143, label %138, label %145

145:                                              ; preds = %138, %148
  %146 = phi i8 [ %152, %148 ], [ %142, %138 ]
  %147 = phi i32 [ %149, %148 ], [ %139, %138 ]
  switch i8 %146, label %148 [
    i8 58, label %153
    i8 0, label %153
  ]

148:                                              ; preds = %145
  %149 = add i32 %147, 1
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [1024 x i8], [1024 x i8]* %129, i64 %127, i64 %150
  %152 = load i8, i8* %151, align 1
  br label %145

153:                                              ; preds = %145, %145
  %154 = zext i32 %147 to i64
  %155 = getelementptr inbounds [1024 x i8], [1024 x i8]* %129, i64 %127, i64 %154
  %156 = sub i32 %147, %139
  %157 = zext i32 %156 to i64
  %158 = icmp eq i32 %156, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %141, i64 %157, i1 false) #9
  %160 = getelementptr inbounds i8, i8* %136, i64 %157
  %161 = getelementptr inbounds i8, i8* %160, i64 -1
  %162 = load i8, i8* %161, align 1
  %163 = icmp eq i8 %162, 47
  br i1 %163, label %166, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds i8, i8* %160, i64 1
  store i8 47, i8* %160, align 1
  br label %166

166:                                              ; preds = %164, %159
  %167 = phi i8* [ %165, %164 ], [ %160, %159 ]
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  store i8 58, i8* %167, align 1
  %169 = load i8, i8* %155, align 1
  br label %170

170:                                              ; preds = %166, %153
  %171 = phi i8 [ %142, %153 ], [ %169, %166 ]
  %172 = phi i32 [ %139, %153 ], [ %147, %166 ]
  %173 = phi i8* [ %136, %153 ], [ %168, %166 ]
  %174 = icmp eq i8 %171, 0
  br i1 %174, label %175, label %135

175:                                              ; preds = %170
  %176 = load i32, i32* %76, align 8
  br label %177

177:                                              ; preds = %175, %132, %125
  %178 = phi i32 [ %126, %125 ], [ %126, %132 ], [ %176, %175 ]
  %179 = phi i8* [ %128, %125 ], [ %128, %132 ], [ %173, %175 ]
  %180 = add nuw nsw i64 %127, 1
  %181 = zext i32 %178 to i64
  %182 = icmp ult i64 %180, %181
  br i1 %182, label %125, label %122

183:                                              ; preds = %72
  %184 = load i8, i8* %69, align 8
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %192

186:                                              ; preds = %64, %183
  %187 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %68, i64 %65, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = and i32 %188, 4
  %190 = icmp eq i32 %189, 0
  %191 = select i1 %190, i8 %66, i8 1
  br label %192

192:                                              ; preds = %122, %186, %75, %183
  %193 = phi i8* [ %93, %122 ], [ %67, %186 ], [ %67, %183 ], [ %67, %75 ]
  %194 = phi i8 [ %66, %122 ], [ %191, %186 ], [ %66, %183 ], [ %66, %75 ]
  %195 = add nuw nsw i64 %65, 1
  %196 = load i32, i32* %56, align 8
  %197 = sext i32 %196 to i64
  %198 = icmp slt i64 %195, %197
  br i1 %198, label %64, label %199

199:                                              ; preds = %192
  %200 = load i8, i8* %5, align 1, !range !4
  br label %201

201:                                              ; preds = %199, %55
  %202 = phi i8 [ 0, %55 ], [ %200, %199 ]
  %203 = phi i8* [ null, %55 ], [ %193, %199 ]
  %204 = phi i8 [ 0, %55 ], [ %194, %199 ]
  %205 = and i8 %204, 1
  %206 = or i8 %202, %205
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %250, label %208

208:                                              ; preds = %201
  %209 = call fastcc i32 @loaderGetDataFiles(%struct.loader_instance* %0, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.969, i64 0, i64 0), i8* %203, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.970, i64 0, i64 0), %struct.loader_data_files* nonnull %3)
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %260

211:                                              ; preds = %208
  %212 = load i32, i32* %7, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %250, label %214

214:                                              ; preds = %211
  %215 = icmp eq %struct.loader_instance* %0, null
  %216 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %217 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %218

218:                                              ; preds = %214, %245
  %219 = phi i64 [ 0, %214 ], [ %246, %245 ]
  %220 = load i8**, i8*** %8, align 8
  %221 = getelementptr inbounds i8*, i8** %220, i64 %219
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %245, label %224

224:                                              ; preds = %218
  %225 = call fastcc i32 @loader_get_json(%struct.loader_instance* %0, i8* nonnull %222, %struct.cJSON** nonnull %4)
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %260, label %227

227:                                              ; preds = %224
  %228 = icmp ne i32 %225, 0
  %229 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  %230 = icmp eq %struct.cJSON* %229, null
  %231 = or i1 %228, %230
  br i1 %231, label %245, label %232

232:                                              ; preds = %227
  %233 = call fastcc i32 @loaderAddLayerProperties(%struct.loader_instance* %0, %struct.loader_layer_list* %1, %struct.cJSON* nonnull %229, i1 zeroext true, i8* nonnull %222)
  br i1 %215, label %239, label %234

234:                                              ; preds = %232
  %235 = load void (i8*, i8*)*, void (i8*, i8*)** %216, align 8
  %236 = icmp eq void (i8*, i8*)* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %234
  %238 = load i8*, i8** %217, align 8
  call void %235(i8* %238, i8* nonnull %222) #9
  br label %240

239:                                              ; preds = %234, %232
  call void @free(i8* nonnull %222) #9
  br label %240

240:                                              ; preds = %237, %239
  %241 = load i8**, i8*** %8, align 8
  %242 = getelementptr inbounds i8*, i8** %241, i64 %219
  store i8* null, i8** %242, align 8
  %243 = load %struct.cJSON*, %struct.cJSON** %4, align 8
  call void @cJSON_Delete(%struct.cJSON* %243) #9
  %244 = icmp eq i32 %233, -1
  br i1 %244, label %260, label %245

245:                                              ; preds = %240, %227, %218
  %246 = add nuw nsw i64 %219, 1
  %247 = load i32, i32* %7, align 8
  %248 = zext i32 %247 to i64
  %249 = icmp ult i64 %246, %248
  br i1 %249, label %218, label %250

250:                                              ; preds = %245, %211, %201
  call fastcc void @VerifyAllMetaLayers(%struct.loader_instance* %0, %struct.loader_layer_list* %1, i8* nonnull %5)
  %251 = load i8, i8* %5, align 1, !range !4
  %252 = or i8 %251, %205
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %260, label %254

254:                                              ; preds = %250
  call void @loaderRemoveLayersNotInImplicitMetaLayers(%struct.loader_instance* %0, %struct.loader_layer_list* %1)
  %255 = icmp ne i8 %251, 0
  %256 = icmp ne %struct.loader_instance* %0, null
  %257 = and i1 %256, %255
  br i1 %257, label %258, label %260

258:                                              ; preds = %254
  %259 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 20
  store i8 1, i8* %259, align 8
  br label %260

260:                                              ; preds = %224, %240, %250, %208, %258, %254
  %261 = icmp eq i8* %203, null
  br i1 %261, label %272, label %262

262:                                              ; preds = %260
  %263 = icmp eq %struct.loader_instance* %0, null
  br i1 %263, label %271, label %264

264:                                              ; preds = %262
  %265 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %266 = load void (i8*, i8*)*, void (i8*, i8*)** %265, align 8
  %267 = icmp eq void (i8*, i8*)* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %270 = load i8*, i8** %269, align 8
  call void %266(i8* %270, i8* nonnull %203) #9
  br label %272

271:                                              ; preds = %264, %262
  call void @free(i8* nonnull %203) #9
  br label %272

272:                                              ; preds = %45, %29, %92, %260, %268, %271
  %273 = load i32, i32* %7, align 8
  br label %274

274:                                              ; preds = %272, %2
  %275 = phi i32 [ %273, %272 ], [ %12, %2 ]
  %276 = phi i1 [ true, %272 ], [ false, %2 ]
  %277 = icmp eq i32 %275, 0
  %278 = load i8**, i8*** %8, align 8
  br i1 %277, label %283, label %279

279:                                              ; preds = %274
  %280 = icmp eq %struct.loader_instance* %0, null
  %281 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %282 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %286

283:                                              ; preds = %299, %274
  %284 = phi i8** [ %278, %274 ], [ %304, %299 ]
  %285 = icmp eq i8** %284, null
  br i1 %285, label %316, label %305

286:                                              ; preds = %279, %299
  %287 = phi i64 [ 0, %279 ], [ %300, %299 ]
  %288 = phi i8** [ %278, %279 ], [ %304, %299 ]
  %289 = getelementptr inbounds i8*, i8** %288, i64 %287
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %286
  br i1 %280, label %298, label %293

293:                                              ; preds = %292
  %294 = load void (i8*, i8*)*, void (i8*, i8*)** %281, align 8
  %295 = icmp eq void (i8*, i8*)* %294, null
  br i1 %295, label %298, label %296

296:                                              ; preds = %293
  %297 = load i8*, i8** %282, align 8
  call void %294(i8* %297, i8* nonnull %290) #9
  br label %299

298:                                              ; preds = %293, %292
  call void @free(i8* nonnull %290) #9
  br label %299

299:                                              ; preds = %298, %296, %286
  %300 = add nuw nsw i64 %287, 1
  %301 = load i32, i32* %7, align 8
  %302 = zext i32 %301 to i64
  %303 = icmp ult i64 %300, %302
  %304 = load i8**, i8*** %8, align 8
  br i1 %303, label %286, label %283

305:                                              ; preds = %283
  %306 = bitcast i8** %284 to i8*
  %307 = icmp eq %struct.loader_instance* %0, null
  br i1 %307, label %315, label %308

308:                                              ; preds = %305
  %309 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %310 = load void (i8*, i8*)*, void (i8*, i8*)** %309, align 8
  %311 = icmp eq void (i8*, i8*)* %310, null
  br i1 %311, label %315, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %314 = load i8*, i8** %313, align 8
  call void %310(i8* %314, i8* nonnull %306) #9
  br label %316

315:                                              ; preds = %308, %305
  call void @free(i8* nonnull %306) #9
  br label %316

316:                                              ; preds = %315, %312, %283
  br i1 %276, label %317, label %319

317:                                              ; preds = %316
  %318 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  br label %319

319:                                              ; preds = %317, %316
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void ()* @loader_gpa_device_internal(%struct.VkDevice_T*, i8*) #0 {
  %3 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %4 = icmp eq %struct.loader_instance* %3, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %7

7:                                                ; preds = %42, %5
  %8 = phi %struct.loader_instance* [ %3, %5 ], [ %44, %42 ]
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 14
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = icmp eq %struct.loader_icd_term* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7, %38
  %13 = phi %struct.loader_icd_term* [ %40, %38 ], [ %10, %7 ]
  %14 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 2
  %15 = load %struct.loader_device*, %struct.loader_device** %14, align 8
  %16 = icmp eq %struct.loader_device* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %6, align 8
  br label %19

19:                                               ; preds = %34, %17
  %20 = phi %struct.loader_device* [ %15, %17 ], [ %36, %34 ]
  %21 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 2
  %22 = bitcast %struct.VkDevice_T** %21 to %struct.VkLayerDispatchTable_***
  %23 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %22, align 8
  %24 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %23, align 8
  %25 = icmp eq %struct.VkLayerDispatchTable_* %24, %18
  br i1 %25, label %46, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 1
  %28 = load %struct.VkDevice_T*, %struct.VkDevice_T** %27, align 8
  %29 = icmp eq %struct.VkDevice_T* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.VkDevice_T* %28 to %struct.VkLayerDispatchTable_**
  %32 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %31, align 8
  %33 = icmp eq %struct.VkLayerDispatchTable_* %32, %18
  br i1 %33, label %46, label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %20, i64 0, i32 8
  %36 = load %struct.loader_device*, %struct.loader_device** %35, align 8
  %37 = icmp eq %struct.loader_device* %36, null
  br i1 %37, label %38, label %19

38:                                               ; preds = %34, %12
  %39 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 5
  %40 = load %struct.loader_icd_term*, %struct.loader_icd_term** %39, align 8
  %41 = icmp eq %struct.loader_icd_term* %40, null
  br i1 %41, label %42, label %12

42:                                               ; preds = %38, %7
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %8, i64 0, i32 12
  %44 = load %struct.loader_instance*, %struct.loader_instance** %43, align 8
  %45 = icmp eq %struct.loader_instance* %44, null
  br i1 %45, label %46, label %7

46:                                               ; preds = %42, %19, %30, %2
  %47 = phi %struct.loader_device* [ null, %2 ], [ %20, %30 ], [ %20, %19 ], [ null, %42 ]
  %48 = phi %struct.loader_icd_term* [ null, %2 ], [ %13, %30 ], [ %13, %19 ], [ null, %42 ]
  %49 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #15
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = tail call void ()* @get_extension_device_proc_terminator(%struct.loader_device* %47, i8* %1)
  %53 = icmp eq void ()* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %48, i64 0, i32 4, i32 9
  %56 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %55, align 8
  %57 = tail call void ()* %56(%struct.VkDevice_T* %0, i8* %1) #9
  br label %58

58:                                               ; preds = %54, %51, %46
  %59 = phi void ()* [ bitcast (void ()* (%struct.VkDevice_T*, i8*)* @loader_gpa_device_internal to void ()*), %46 ], [ %57, %54 ], [ %52, %51 ]
  ret void ()* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_init_dispatch_dev_ext(%struct.loader_instance* nocapture readonly, %struct.loader_device*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.loader_device* %1, null
  %4 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 1
  %6 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 14
  br label %8

7:                                                ; preds = %49
  ret void

8:                                                ; preds = %49, %2
  %9 = phi i64 [ 0, %2 ], [ %50, %49 ]
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %9, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %49, label %13

13:                                               ; preds = %8
  br i1 %3, label %22, label %14

14:                                               ; preds = %13
  %15 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %4, align 8
  %16 = load %struct.VkDevice_T*, %struct.VkDevice_T** %5, align 8
  %17 = tail call void ()* %15(%struct.VkDevice_T* %16, i8* nonnull %11) #9
  %18 = icmp eq void ()* %17, null
  br i1 %18, label %49, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %1, i64 0, i32 0, i32 1, i32 0, i64 %9
  %21 = bitcast i32 (%struct.VkDevice_T*)** %20 to void ()**
  store void ()* %17, void ()** %21, align 8
  br label %49

22:                                               ; preds = %13
  %23 = load %struct.loader_icd_term*, %struct.loader_icd_term** %6, align 8
  %24 = icmp eq %struct.loader_icd_term* %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22, %45
  %26 = phi %struct.loader_icd_term* [ %47, %45 ], [ %23, %22 ]
  %27 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %26, i64 0, i32 2
  %28 = load %struct.loader_device*, %struct.loader_device** %27, align 8
  %29 = icmp eq %struct.loader_device* %28, null
  br i1 %29, label %45, label %30

30:                                               ; preds = %25, %41
  %31 = phi %struct.loader_device* [ %43, %41 ], [ %28, %25 ]
  %32 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %32, align 8
  %34 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %31, i64 0, i32 1
  %35 = load %struct.VkDevice_T*, %struct.VkDevice_T** %34, align 8
  %36 = tail call void ()* %33(%struct.VkDevice_T* %35, i8* nonnull %11) #9
  %37 = icmp eq void ()* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %31, i64 0, i32 0, i32 1, i32 0, i64 %9
  %40 = bitcast i32 (%struct.VkDevice_T*)** %39 to void ()**
  store void ()* %36, void ()** %40, align 8
  br label %41

41:                                               ; preds = %38, %30
  %42 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %31, i64 0, i32 8
  %43 = load %struct.loader_device*, %struct.loader_device** %42, align 8
  %44 = icmp eq %struct.loader_device* %43, null
  br i1 %44, label %45, label %30

45:                                               ; preds = %41, %25
  %46 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %26, i64 0, i32 5
  %47 = load %struct.loader_icd_term*, %struct.loader_icd_term** %46, align 8
  %48 = icmp eq %struct.loader_icd_term* %47, null
  br i1 %48, label %49, label %25

49:                                               ; preds = %45, %22, %19, %14, %8
  %50 = add nuw nsw i64 %9, 1
  %51 = icmp eq i64 %50, 250
  br i1 %51, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @loader_dev_ext_gpa(%struct.loader_instance*, i8*) local_unnamed_addr #0 {
  %3 = tail call i64 @strlen(i8* %1) #15
  %4 = tail call i32 @murmurhash(i8* %1, i64 %3, i32 0) #9
  %5 = urem i32 %4, 250
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %6, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @strcmp(i8* nonnull %8, i8* %1) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %10, %2
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %6, i32 1, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = tail call i32 @strcmp(i8* %8, i8* %1) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %6, i32 1, i32 2
  %22 = load i32*, i32** %21, align 8
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %20, %10
  %25 = phi i32 [ %5, %10 ], [ %23, %20 ]
  %26 = tail call i8* @loader_get_dev_ext_trampoline(i32 %25) #9
  br label %227

27:                                               ; preds = %17, %13
  %28 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 14
  %29 = load %struct.loader_icd_term*, %struct.loader_icd_term** %28, align 8
  %30 = icmp eq %struct.loader_icd_term* %29, null
  br i1 %30, label %45, label %35

31:                                               ; preds = %35
  %32 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %36, i64 0, i32 5
  %33 = load %struct.loader_icd_term*, %struct.loader_icd_term** %32, align 8
  %34 = icmp eq %struct.loader_icd_term* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %27, %31
  %36 = phi %struct.loader_icd_term* [ %33, %31 ], [ %29, %27 ]
  %37 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %36, i64 0, i32 0
  %38 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %37, align 8
  %39 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %38, i64 0, i32 4
  %40 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %39, align 8
  %41 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %36, i64 0, i32 3
  %42 = load %struct.VkInstance_T*, %struct.VkInstance_T** %41, align 8
  %43 = tail call void ()* %40(%struct.VkInstance_T* %42, i8* %1) #9
  %44 = icmp eq void ()* %43, null
  br i1 %44, label %31, label %86

45:                                               ; preds = %31, %27
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 21, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %227, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 21, i32 2
  %51 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %50, align 8
  %52 = zext i32 %47 to i64
  br label %53

53:                                               ; preds = %83, %49
  %54 = phi i64 [ 0, %49 ], [ %84, %83 ]
  %55 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %51, i64 %54, i32 7, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %83, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %51, i64 %54, i32 7, i32 2
  %60 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %59, align 8
  %61 = zext i32 %56 to i64
  br label %62

62:                                               ; preds = %80, %58
  %63 = phi i64 [ 0, %58 ], [ %81, %80 ]
  %64 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %60, i64 %63, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %60, i64 %63, i32 2
  %69 = load i8**, i8*** %68, align 8
  %70 = zext i32 %65 to i64
  br label %73

71:                                               ; preds = %73
  %72 = icmp eq i64 %79, %70
  br i1 %72, label %80, label %73

73:                                               ; preds = %71, %67
  %74 = phi i64 [ 0, %67 ], [ %79, %71 ]
  %75 = getelementptr inbounds i8*, i8** %69, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = tail call i32 @strcmp(i8* %76, i8* %1) #15
  %78 = icmp eq i32 %77, 0
  %79 = add nuw nsw i64 %74, 1
  br i1 %78, label %86, label %71

80:                                               ; preds = %71, %62
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, %61
  br i1 %82, label %83, label %62

83:                                               ; preds = %80, %53
  %84 = add nuw nsw i64 %54, 1
  %85 = icmp eq i64 %84, %52
  br i1 %85, label %227, label %53

86:                                               ; preds = %35, %73
  %87 = load i8*, i8** %7, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %89, label %111

89:                                               ; preds = %86
  %90 = tail call i64 @strlen(i8* %1) #15
  %91 = add i64 %90, 1
  %92 = icmp eq %struct.loader_instance* %0, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %95 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %94, align 8
  %96 = icmp eq i8* (i8*, i64, i64, i32)* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = tail call i8* %95(i8* %99, i64 %91, i64 8, i32 4) #9
  br label %103

101:                                              ; preds = %93, %89
  %102 = tail call noalias i8* @malloc(i64 %91) #9
  br label %103

103:                                              ; preds = %101, %97
  %104 = phi i8* [ %100, %97 ], [ %102, %101 ]
  store i8* %104, i8** %7, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1187, i64 0, i64 0), i8* %1) #9
  br label %227

107:                                              ; preds = %103
  %108 = tail call i64 @strlen(i8* %1) #15
  %109 = add i64 %108, 1
  %110 = tail call i8* @strncpy(i8* nonnull %104, i8* %1, i64 %109) #9
  br label %195

111:                                              ; preds = %86
  %112 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %6, i32 1, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %133

115:                                              ; preds = %111
  %116 = icmp eq %struct.loader_instance* %0, null
  br i1 %116, label %125, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %119 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %118, align 8
  %120 = icmp eq i8* (i8*, i64, i64, i32)* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = tail call i8* %119(i8* %123, i64 32, i64 8, i32 4) #9
  br label %127

125:                                              ; preds = %117, %115
  %126 = tail call noalias i8* @malloc(i64 32) #9
  br label %127

127:                                              ; preds = %125, %121
  %128 = phi i8* [ %124, %121 ], [ %126, %125 ]
  %129 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %6, i32 1, i32 2
  %130 = bitcast i32** %129 to i8**
  store i8* %128, i8** %130, align 8
  %131 = icmp eq i8* %128, null
  br i1 %131, label %132, label %150

132:                                              ; preds = %127
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1188, i64 0, i64 0), i8* %1) #9
  br label %227

133:                                              ; preds = %111
  %134 = load i32, i32* %14, align 8
  %135 = add i32 %134, 1
  %136 = zext i32 %135 to i64
  %137 = shl nuw nsw i64 %136, 2
  %138 = icmp ult i64 %113, %137
  br i1 %138, label %139, label %152

139:                                              ; preds = %133
  %140 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %6, i32 1, i32 2
  %141 = bitcast i32** %140 to i8**
  %142 = load i8*, i8** %141, align 8
  %143 = shl i64 %113, 1
  %144 = tail call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %142, i64 %113, i64 %143, i32 4) #9
  %145 = icmp eq i8* %144, null
  br i1 %145, label %146, label %147

146:                                              ; preds = %139
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1189, i64 0, i64 0), i8* %1) #9
  br label %227

147:                                              ; preds = %139
  store i8* %144, i8** %141, align 8
  %148 = load i64, i64* %112, align 8
  %149 = shl i64 %148, 1
  br label %150

150:                                              ; preds = %127, %147
  %151 = phi i64 [ %149, %147 ], [ 32, %127 ]
  store i64 %151, i64* %112, align 8
  br label %152

152:                                              ; preds = %150, %133
  %153 = add nuw nsw i32 %5, 1
  %154 = urem i32 %153, 250
  br label %155

155:                                              ; preds = %190, %152
  %156 = phi i32 [ %154, %152 ], [ %192, %190 ]
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %157, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, null
  br i1 %160, label %161, label %190

161:                                              ; preds = %155
  %162 = tail call i64 @strlen(i8* %1) #15
  %163 = add i64 %162, 1
  %164 = icmp eq %struct.loader_instance* %0, null
  br i1 %164, label %173, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %167 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %166, align 8
  %168 = icmp eq i8* (i8*, i64, i64, i32)* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = tail call i8* %167(i8* %171, i64 %163, i64 8, i32 4) #9
  br label %175

173:                                              ; preds = %165, %161
  %174 = tail call noalias i8* @malloc(i64 %163) #9
  br label %175

175:                                              ; preds = %173, %169
  %176 = phi i8* [ %172, %169 ], [ %174, %173 ]
  store i8* %176, i8** %158, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1187, i64 0, i64 0), i8* %1) #9
  br label %227

179:                                              ; preds = %175
  %180 = tail call i64 @strlen(i8* %1) #15
  %181 = add i64 %180, 1
  %182 = tail call i8* @strncpy(i8* nonnull %176, i8* %1, i64 %181) #9
  %183 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 16, i64 %6, i32 1, i32 2
  %184 = load i32*, i32** %183, align 8
  %185 = load i32, i32* %14, align 8
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds i32, i32* %184, i64 %186
  store i32 %156, i32* %187, align 4
  %188 = load i32, i32* %14, align 8
  %189 = add i32 %188, 1
  store i32 %189, i32* %14, align 8
  br label %195

190:                                              ; preds = %155
  %191 = add nuw nsw i32 %156, 1
  %192 = urem i32 %191, 250
  %193 = icmp eq i32 %192, %5
  br i1 %193, label %194, label %155

194:                                              ; preds = %190
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1190, i64 0, i64 0)) #9
  br label %227

195:                                              ; preds = %179, %107
  %196 = phi i32 [ %5, %107 ], [ %156, %179 ]
  %197 = load %struct.loader_icd_term*, %struct.loader_icd_term** %28, align 8
  %198 = icmp eq %struct.loader_icd_term* %197, null
  br i1 %198, label %225, label %199

199:                                              ; preds = %195
  %200 = zext i32 %196 to i64
  br label %201

201:                                              ; preds = %221, %199
  %202 = phi %struct.loader_icd_term* [ %197, %199 ], [ %223, %221 ]
  %203 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %202, i64 0, i32 2
  %204 = load %struct.loader_device*, %struct.loader_device** %203, align 8
  %205 = icmp eq %struct.loader_device* %204, null
  br i1 %205, label %221, label %206

206:                                              ; preds = %201, %217
  %207 = phi %struct.loader_device* [ %219, %217 ], [ %204, %201 ]
  %208 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %207, i64 0, i32 0, i32 0, i32 0
  %209 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %208, align 8
  %210 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %207, i64 0, i32 1
  %211 = load %struct.VkDevice_T*, %struct.VkDevice_T** %210, align 8
  %212 = tail call void ()* %209(%struct.VkDevice_T* %211, i8* %1) #9
  %213 = icmp eq void ()* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %206
  %215 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %207, i64 0, i32 0, i32 1, i32 0, i64 %200
  %216 = bitcast i32 (%struct.VkDevice_T*)** %215 to void ()**
  store void ()* %212, void ()** %216, align 8
  br label %217

217:                                              ; preds = %214, %206
  %218 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %207, i64 0, i32 8
  %219 = load %struct.loader_device*, %struct.loader_device** %218, align 8
  %220 = icmp eq %struct.loader_device* %219, null
  br i1 %220, label %221, label %206

221:                                              ; preds = %217, %201
  %222 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %202, i64 0, i32 5
  %223 = load %struct.loader_icd_term*, %struct.loader_icd_term** %222, align 8
  %224 = icmp eq %struct.loader_icd_term* %223, null
  br i1 %224, label %225, label %201

225:                                              ; preds = %221, %195
  %226 = tail call i8* @loader_get_dev_ext_trampoline(i32 %196) #9
  br label %227

227:                                              ; preds = %83, %146, %106, %178, %194, %132, %45, %225, %24
  %228 = phi i8* [ %26, %24 ], [ %226, %225 ], [ null, %45 ], [ null, %132 ], [ null, %194 ], [ null, %178 ], [ null, %106 ], [ null, %146 ], [ null, %83 ]
  ret i8* %228
}

declare i32 @murmurhash(i8*, i64, i32) local_unnamed_addr #6

declare i8* @loader_get_dev_ext_trampoline(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @loader_phys_dev_ext_gpa(%struct.loader_instance*, i8*, i1 zeroext, i8**, i8**) local_unnamed_addr #0 {
  %6 = icmp eq %struct.loader_instance* %0, null
  br i1 %6, label %269, label %7

7:                                                ; preds = %5
  %8 = icmp ne i8** %3, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i8* null, i8** %3, align 8
  br label %10

10:                                               ; preds = %9, %7
  %11 = icmp ne i8** %4, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store i8* null, i8** %4, align 8
  br label %13

13:                                               ; preds = %12, %10
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 14
  %15 = load %struct.loader_icd_term*, %struct.loader_icd_term** %14, align 8
  %16 = icmp eq %struct.loader_icd_term* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %13, %31
  %18 = phi %struct.loader_icd_term* [ %33, %31 ], [ %15, %13 ]
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %18, i64 0, i32 0
  %20 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %19, align 8
  %21 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %20, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %22, 3
  br i1 %23, label %24, label %31

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %20, i64 0, i32 5
  %26 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %25, align 8
  %27 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %18, i64 0, i32 3
  %28 = load %struct.VkInstance_T*, %struct.VkInstance_T** %27, align 8
  %29 = tail call void ()* %26(%struct.VkInstance_T* %28, i8* %1) #9
  %30 = icmp eq void ()* %29, null
  br i1 %30, label %31, label %64

31:                                               ; preds = %24, %17
  %32 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %18, i64 0, i32 5
  %33 = load %struct.loader_icd_term*, %struct.loader_icd_term** %32, align 8
  %34 = icmp eq %struct.loader_icd_term* %33, null
  br i1 %34, label %35, label %17

35:                                               ; preds = %31, %13
  br i1 %2, label %36, label %269

36:                                               ; preds = %35
  %37 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 22, i32 2
  %38 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %37, align 8
  %39 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 23
  %40 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 22, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %269, label %43

43:                                               ; preds = %36, %59
  %44 = phi i32 [ %60, %59 ], [ %41, %36 ]
  %45 = phi i64 [ %61, %59 ], [ 0, %36 ]
  %46 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %38, i64 %45, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp ugt i32 %47, 1
  br i1 %48, label %49, label %59

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %38, i64 %45, i32 5, i32 6
  %51 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %50, align 8
  %52 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = load %struct.VkInstance_T*, %struct.VkInstance_T** %39, align 8
  %55 = tail call void ()* %51(%struct.VkInstance_T* %54, i8* %1) #9
  %56 = icmp eq void ()* %55, null
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = load i32, i32* %40, align 8
  br label %59

59:                                               ; preds = %57, %49, %43
  %60 = phi i32 [ %58, %57 ], [ %44, %49 ], [ %44, %43 ]
  %61 = add nuw nsw i64 %45, 1
  %62 = zext i32 %60 to i64
  %63 = icmp ult i64 %61, %62
  br i1 %63, label %43, label %269

64:                                               ; preds = %24, %53
  %65 = tail call i64 @strlen(i8* %1) #15
  %66 = tail call i32 @murmurhash(i8* %1, i64 %65, i32 0) #9
  %67 = urem i32 %66, 250
  br i1 %2, label %68, label %262

68:                                               ; preds = %64
  %69 = zext i32 %67 to i64
  %70 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %69, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = tail call i32 @strcmp(i8* nonnull %71, i8* %1) #15
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %262, label %76

76:                                               ; preds = %73, %68
  %77 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %69, i32 1, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %87, label %80

80:                                               ; preds = %76
  %81 = tail call i32 @strcmp(i8* %71, i8* %1) #15
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %69, i32 1, i32 2
  %85 = load i32*, i32** %84, align 8
  %86 = load i32, i32* %85, align 4
  br label %262

87:                                               ; preds = %80, %76
  br i1 %72, label %88, label %108

88:                                               ; preds = %87
  %89 = tail call i64 @strlen(i8* %1) #15
  %90 = add i64 %89, 1
  %91 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %92 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %91, align 8
  %93 = icmp eq i8* (i8*, i64, i64, i32)* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = tail call i8* %92(i8* %96, i64 %90, i64 8, i32 4) #9
  br label %100

98:                                               ; preds = %88
  %99 = tail call noalias i8* @malloc(i64 %90) #9
  br label %100

100:                                              ; preds = %98, %94
  %101 = phi i8* [ %97, %94 ], [ %99, %98 ]
  store i8* %101, i8** %70, align 8
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1191, i64 0, i64 0)) #9
  br label %191

104:                                              ; preds = %100
  %105 = tail call i64 @strlen(i8* %1) #15
  %106 = add i64 %105, 1
  %107 = tail call i8* @strncpy(i8* nonnull %101, i8* %1, i64 %106) #9
  br label %191

108:                                              ; preds = %87
  %109 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %69, i32 1, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %128

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %114 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %113, align 8
  %115 = icmp eq i8* (i8*, i64, i64, i32)* %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = tail call i8* %114(i8* %118, i64 32, i64 8, i32 4) #9
  br label %122

120:                                              ; preds = %112
  %121 = tail call noalias i8* @malloc(i64 32) #9
  br label %122

122:                                              ; preds = %120, %116
  %123 = phi i8* [ %119, %116 ], [ %121, %120 ]
  %124 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %69, i32 1, i32 2
  %125 = bitcast i32** %124 to i8**
  store i8* %123, i8** %125, align 8
  %126 = icmp eq i8* %123, null
  br i1 %126, label %127, label %144

127:                                              ; preds = %122
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1192, i64 0, i64 0)) #9
  br label %191

128:                                              ; preds = %108
  %129 = add i32 %78, 1
  %130 = zext i32 %129 to i64
  %131 = shl nuw nsw i64 %130, 2
  %132 = icmp ult i64 %110, %131
  br i1 %132, label %133, label %146

133:                                              ; preds = %128
  %134 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %69, i32 1, i32 2
  %135 = bitcast i32** %134 to i8**
  %136 = load i8*, i8** %135, align 8
  %137 = shl i64 %110, 1
  %138 = tail call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %136, i64 %110, i64 %137, i32 4) #9
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %141

140:                                              ; preds = %133
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1193, i64 0, i64 0)) #9
  br label %191

141:                                              ; preds = %133
  store i8* %138, i8** %135, align 8
  %142 = load i64, i64* %109, align 8
  %143 = shl i64 %142, 1
  br label %144

144:                                              ; preds = %122, %141
  %145 = phi i64 [ %143, %141 ], [ 32, %122 ]
  store i64 %145, i64* %109, align 8
  br label %146

146:                                              ; preds = %144, %128
  %147 = trunc i32 %67 to i8
  %148 = add i8 %147, 1
  %149 = icmp ult i8 %148, -6
  %150 = add i8 %147, 7
  %151 = select i1 %149, i8 %148, i8 %150
  %152 = zext i8 %151 to i32
  br label %153

153:                                              ; preds = %186, %146
  %154 = phi i32 [ %152, %146 ], [ %188, %186 ]
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %155, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %159, label %186

159:                                              ; preds = %153
  %160 = tail call i64 @strlen(i8* %1) #15
  %161 = add i64 %160, 1
  %162 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %163 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %162, align 8
  %164 = icmp eq i8* (i8*, i64, i64, i32)* %163, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = tail call i8* %163(i8* %167, i64 %161, i64 8, i32 4) #9
  br label %171

169:                                              ; preds = %159
  %170 = tail call noalias i8* @malloc(i64 %161) #9
  br label %171

171:                                              ; preds = %169, %165
  %172 = phi i8* [ %168, %165 ], [ %170, %169 ]
  store i8* %172, i8** %156, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1194, i64 0, i64 0)) #9
  br label %191

175:                                              ; preds = %171
  %176 = tail call i64 @strlen(i8* %1) #15
  %177 = add i64 %176, 1
  %178 = tail call i8* @strncpy(i8* nonnull %172, i8* %1, i64 %177) #9
  %179 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 17, i64 %69, i32 1, i32 2
  %180 = load i32*, i32** %179, align 8
  %181 = load i32, i32* %77, align 8
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds i32, i32* %180, i64 %182
  store i32 %154, i32* %183, align 4
  %184 = load i32, i32* %77, align 8
  %185 = add i32 %184, 1
  store i32 %185, i32* %77, align 8
  br label %191

186:                                              ; preds = %153
  %187 = add nuw nsw i32 %154, 1
  %188 = urem i32 %187, 250
  %189 = icmp eq i32 %188, %67
  br i1 %189, label %190, label %153

190:                                              ; preds = %186
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.1195, i64 0, i64 0)) #9
  br label %191

191:                                              ; preds = %103, %104, %127, %140, %174, %175, %190
  %192 = phi i32 [ %67, %103 ], [ %67, %104 ], [ %67, %127 ], [ %67, %174 ], [ %154, %175 ], [ %67, %190 ], [ %67, %140 ]
  %193 = load %struct.loader_icd_term*, %struct.loader_icd_term** %14, align 8
  %194 = icmp eq %struct.loader_icd_term* %193, null
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  %196 = zext i32 %192 to i64
  %197 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 0
  br label %207

198:                                              ; preds = %230, %191
  %199 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 23
  %200 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 22, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %262, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 22, i32 2
  %205 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 0
  %206 = zext i32 %192 to i64
  br label %234

207:                                              ; preds = %195, %230
  %208 = phi %struct.loader_icd_term* [ %193, %195 ], [ %232, %230 ]
  %209 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %208, i64 0, i32 0
  %210 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %209, align 8
  %211 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %210, i64 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = icmp ugt i32 %212, 3
  br i1 %213, label %214, label %228

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %210, i64 0, i32 5
  %216 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %215, align 8
  %217 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %216, null
  br i1 %217, label %228, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %208, i64 0, i32 3
  %220 = load %struct.VkInstance_T*, %struct.VkInstance_T** %219, align 8
  %221 = tail call void ()* %216(%struct.VkInstance_T* %220, i8* %1) #9
  %222 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %208, i64 0, i32 6, i64 %196
  %223 = bitcast i32 (%struct.VkPhysicalDevice_T*)** %222 to void ()**
  store void ()* %221, void ()** %223, align 8
  %224 = tail call i8* @loader_get_phys_dev_ext_termin(i32 %192) #9
  %225 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %197, align 8
  %226 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %225, i64 0, i32 1, i64 %196
  %227 = bitcast i32 (%struct.VkPhysicalDevice_T*)** %226 to i8**
  store i8* %224, i8** %227, align 8
  br label %230

228:                                              ; preds = %214, %207
  %229 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %208, i64 0, i32 6, i64 %196
  store i32 (%struct.VkPhysicalDevice_T*)* null, i32 (%struct.VkPhysicalDevice_T*)** %229, align 8
  br label %230

230:                                              ; preds = %228, %218
  %231 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %208, i64 0, i32 5
  %232 = load %struct.loader_icd_term*, %struct.loader_icd_term** %231, align 8
  %233 = icmp eq %struct.loader_icd_term* %232, null
  br i1 %233, label %198, label %207

234:                                              ; preds = %203, %257
  %235 = phi i32 [ %201, %203 ], [ %258, %257 ]
  %236 = phi i64 [ 0, %203 ], [ %259, %257 ]
  %237 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %204, align 8
  %238 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %237, i64 %236, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = icmp ugt i32 %239, 1
  br i1 %240, label %241, label %257

241:                                              ; preds = %234
  %242 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %237, i64 %236, i32 5, i32 6
  %243 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %242, align 8
  %244 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %243, null
  br i1 %244, label %257, label %245

245:                                              ; preds = %241
  %246 = load %struct.VkInstance_T*, %struct.VkInstance_T** %199, align 8
  %247 = tail call void ()* %243(%struct.VkInstance_T* %246, i8* %1) #9
  %248 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %205, align 8
  %249 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %248, i64 0, i32 1, i64 %206
  %250 = bitcast i32 (%struct.VkPhysicalDevice_T*)** %249 to void ()**
  store void ()* %247, void ()** %250, align 8
  %251 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %205, align 8
  %252 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %251, i64 0, i32 1, i64 %206
  %253 = load i32 (%struct.VkPhysicalDevice_T*)*, i32 (%struct.VkPhysicalDevice_T*)** %252, align 8
  %254 = icmp eq i32 (%struct.VkPhysicalDevice_T*)* %253, null
  br i1 %254, label %255, label %262

255:                                              ; preds = %245
  %256 = load i32, i32* %200, align 8
  br label %257

257:                                              ; preds = %255, %234, %241
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ], [ %235, %241 ]
  %259 = add nuw nsw i64 %236, 1
  %260 = zext i32 %258 to i64
  %261 = icmp ult i64 %259, %260
  br i1 %261, label %234, label %262

262:                                              ; preds = %245, %257, %198, %73, %83, %64
  %263 = phi i32 [ %67, %64 ], [ %67, %73 ], [ %86, %83 ], [ %192, %198 ], [ %192, %257 ], [ %192, %245 ]
  br i1 %8, label %264, label %266

264:                                              ; preds = %262
  %265 = tail call i8* @loader_get_phys_dev_ext_tramp(i32 %263) #9
  store i8* %265, i8** %3, align 8
  br label %266

266:                                              ; preds = %264, %262
  br i1 %11, label %267, label %269

267:                                              ; preds = %266
  %268 = tail call i8* @loader_get_phys_dev_ext_termin(i32 %263) #9
  store i8* %268, i8** %4, align 8
  br label %269

269:                                              ; preds = %59, %36, %266, %267, %35, %5
  %270 = phi i1 [ false, %5 ], [ false, %35 ], [ true, %267 ], [ true, %266 ], [ false, %36 ], [ false, %59 ]
  ret i1 %270
}

declare i8* @loader_get_phys_dev_ext_termin(i32) local_unnamed_addr #6

declare i8* @loader_get_phys_dev_ext_tramp(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loaderEnableInstanceLayers(%struct.loader_instance*, %struct.VkInstanceCreateInfo* nocapture readonly, %struct.loader_layer_list* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 21
  %5 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %4, i64 0, i32 0
  store i64 382464, i64* %5, align 8
  %6 = icmp eq %struct.loader_instance* %0, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %9 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %8, align 8
  %10 = icmp eq i8* (i8*, i64, i64, i32)* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i8* %9(i8* %13, i64 382464, i64 8, i32 4) #9
  br label %17

15:                                               ; preds = %7, %3
  %16 = tail call noalias i8* @malloc(i64 382464) #9
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi i8* [ %14, %11 ], [ %16, %15 ]
  %19 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 21, i32 2
  %20 = bitcast %struct.loader_layer_properties** %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = icmp eq i8* %18, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.972, i64 0, i64 0))
  br label %113

23:                                               ; preds = %17
  %24 = load i64, i64* %5, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 %24, i1 false) #9
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 21, i32 1
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 22
  %27 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %26, i64 0, i32 0
  store i64 382464, i64* %27, align 8
  br i1 %6, label %36, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %30 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %29, align 8
  %31 = icmp eq i8* (i8*, i64, i64, i32)* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = tail call i8* %30(i8* %34, i64 382464, i64 8, i32 4) #9
  br label %38

36:                                               ; preds = %28, %23
  %37 = tail call noalias i8* @malloc(i64 382464) #9
  br label %38

38:                                               ; preds = %36, %32
  %39 = phi i8* [ %35, %32 ], [ %37, %36 ]
  %40 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 22, i32 2
  %41 = bitcast %struct.loader_layer_properties** %40 to i8**
  store i8* %39, i8** %41, align 8
  %42 = icmp eq i8* %39, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.973, i64 0, i64 0))
  br label %113

44:                                               ; preds = %38
  %45 = load i64, i64* %27, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 %45, i1 false) #9
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 22, i32 1
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 2
  br label %52

52:                                               ; preds = %63, %50
  %53 = phi i32 [ %48, %50 ], [ %64, %63 ]
  %54 = phi i64 [ 0, %50 ], [ %65, %63 ]
  %55 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %51, align 8
  %56 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %55, i64 %54, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %52
  %61 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %55, i64 %54
  tail call fastcc void @loaderAddImplicitLayer(%struct.loader_instance* %0, %struct.loader_layer_properties* %61, %struct.loader_layer_list* %4, %struct.loader_layer_list* %26, %struct.loader_layer_list* %2) #9
  %62 = load i32, i32* %47, align 8
  br label %63

63:                                               ; preds = %60, %52
  %64 = phi i32 [ %62, %60 ], [ %53, %52 ]
  %65 = add nuw nsw i64 %54, 1
  %66 = zext i32 %64 to i64
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %52, label %68

68:                                               ; preds = %63, %44
  %69 = tail call fastcc i32 @loaderAddEnvironmentLayers(%struct.loader_instance* %0, %struct.loader_layer_list* %4, %struct.loader_layer_list* %26, %struct.loader_layer_list* %2)
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %113

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %1, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %1, i64 0, i32 5
  %75 = load i8**, i8*** %74, align 8
  %76 = tail call fastcc i32 @loaderAddLayerNamesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %4, %struct.loader_layer_list* %26, i32 %73, i8** %75, %struct.loader_layer_list* %2)
  %77 = load i32, i32* %46, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %113, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 1
  %81 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 2
  br label %82

82:                                               ; preds = %79, %108
  %83 = phi i32 [ %77, %79 ], [ %109, %108 ]
  %84 = phi i64 [ 0, %79 ], [ %110, %108 ]
  %85 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %40, align 8
  %86 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %85, i64 %84, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = lshr i32 %87, 22
  %89 = lshr i32 %87, 12
  %90 = trunc i32 %89 to i16
  %91 = and i16 %90, 1023
  %92 = load i16, i16* %80, align 8
  %93 = zext i16 %92 to i32
  %94 = icmp ult i32 %88, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i16, i16* %81, align 2
  br label %102

97:                                               ; preds = %82
  %98 = icmp eq i32 %88, %93
  br i1 %98, label %99, label %108

99:                                               ; preds = %97
  %100 = load i16, i16* %81, align 2
  %101 = icmp ugt i16 %100, %91
  br i1 %101, label %102, label %108

102:                                              ; preds = %95, %99
  %103 = phi i16 [ %96, %95 ], [ %100, %99 ]
  %104 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %85, i64 %84, i32 0, i32 0, i64 0
  %105 = zext i16 %91 to i32
  %106 = zext i16 %103 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.975, i64 0, i64 0), i8* %104, i32 %88, i32 %105, i32 %93, i32 %106)
  %107 = load i32, i32* %46, align 8
  br label %108

108:                                              ; preds = %97, %99, %102
  %109 = phi i32 [ %83, %97 ], [ %83, %99 ], [ %107, %102 ]
  %110 = add nuw nsw i64 %84, 1
  %111 = zext i32 %109 to i64
  %112 = icmp ult i64 %110, %111
  br i1 %112, label %82, label %113

113:                                              ; preds = %108, %71, %68, %43, %22
  %114 = phi i32 [ -1, %43 ], [ -1, %22 ], [ %69, %68 ], [ %76, %71 ], [ %76, %108 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loaderAddEnvironmentLayers(%struct.loader_instance*, %struct.loader_layer_list* nocapture, %struct.loader_layer_list*, %struct.loader_layer_list* nocapture readonly) unnamed_addr #0 {
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.974, i64 0, i64 0)) #9
  %6 = icmp eq i8* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = tail call i64 @strlen(i8* nonnull %5) #15
  %9 = add i64 %8, 1
  %10 = alloca i8, i64 %9, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 %9, i1 false)
  %11 = call i8* @strcpy(i8* nonnull %10, i8* nonnull %5) #9
  br label %12

12:                                               ; preds = %27, %7
  %13 = phi i8* [ %10, %7 ], [ %28, %27 ]
  %14 = icmp eq i8* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %12
  %16 = load i8, i8* %13, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = call i8* @strchr(i8* nonnull %13, i32 58) #15
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = call i64 @strlen(i8* nonnull %13) #15
  %23 = and i64 %22, 4294967295
  %24 = getelementptr inbounds i8, i8* %13, i64 %23
  br label %27

25:                                               ; preds = %18
  store i8 0, i8* %19, align 1
  %26 = getelementptr inbounds i8, i8* %19, i64 1
  br label %27

27:                                               ; preds = %21, %25
  %28 = phi i8* [ %24, %21 ], [ %26, %25 ]
  %29 = call i32 @loaderAddLayerNameToList(%struct.loader_instance* %0, i8* nonnull %13, i32 2, %struct.loader_layer_list* %3, %struct.loader_layer_list* %1, %struct.loader_layer_list* %2)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %12, label %31

31:                                               ; preds = %12, %15, %27, %4
  %32 = phi i32 [ 0, %4 ], [ 0, %12 ], [ 0, %15 ], [ %29, %27 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loaderAddLayerNamesToList(%struct.loader_instance*, %struct.loader_layer_list* nocapture, %struct.loader_layer_list*, i32, i8** nocapture readonly, %struct.loader_layer_list* nocapture readonly) unnamed_addr #0 {
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 2
  %11 = zext i32 %3 to i64
  br label %14

12:                                               ; preds = %46, %6
  %13 = phi i32 [ 0, %6 ], [ %47, %46 ]
  ret i32 %13

14:                                               ; preds = %46, %8
  %15 = phi i64 [ 0, %8 ], [ %48, %46 ]
  %16 = phi i32 [ 0, %8 ], [ %47, %46 ]
  %17 = getelementptr inbounds i8*, i8** %4, i64 %15
  %18 = load i8*, i8** %17, align 8
  %19 = load i32, i32* %9, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %14
  %22 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %10, align 8
  %23 = zext i32 %19 to i64
  br label %26

24:                                               ; preds = %26
  %25 = icmp eq i64 %32, %23
  br i1 %25, label %35, label %26

26:                                               ; preds = %24, %21
  %27 = phi i64 [ 0, %21 ], [ %32, %24 ]
  %28 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %22, i64 %27
  %29 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %28, i64 0, i32 0, i32 0, i64 0
  %30 = tail call i32 @strcmp(i8* %18, i8* %29) #15
  %31 = icmp eq i32 %30, 0
  %32 = add nuw nsw i64 %27, 1
  br i1 %31, label %33, label %24

33:                                               ; preds = %26
  %34 = icmp eq %struct.loader_layer_properties* %28, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %24, %14, %33
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1197, i64 0, i64 0), i8* %18)
  br label %46

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %22, i64 %27, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %1, i32 1, %struct.loader_layer_properties* nonnull %28)
  %43 = tail call i32 @loaderAddLayerPropertiesToList(%struct.loader_instance* %0, %struct.loader_layer_list* %2, i32 1, %struct.loader_layer_properties* nonnull %28)
  br label %46

44:                                               ; preds = %36
  %45 = tail call zeroext i1 @loaderAddMetaLayer(%struct.loader_instance* %0, %struct.loader_layer_properties* nonnull %28, %struct.loader_layer_list* %1, %struct.loader_layer_list* %2, %struct.loader_layer_list* %5)
  br label %46

46:                                               ; preds = %41, %44, %35
  %47 = phi i32 [ -6, %35 ], [ %16, %44 ], [ %16, %41 ]
  %48 = add nuw nsw i64 %15, 1
  %49 = icmp eq i64 %48, %11
  br i1 %49, label %12, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @loaderGetLayerInterfaceVersion(i32 (%struct.VkNegotiateLayerInterface*)*, %struct.VkNegotiateLayerInterface*) local_unnamed_addr #0 {
  %3 = bitcast %struct.VkNegotiateLayerInterface* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  %4 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %1, i64 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %1, i64 0, i32 2
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %1, i64 0, i32 1
  store i8* null, i8** %6, align 8
  %7 = icmp eq i32 (%struct.VkNegotiateLayerInterface*)* %0, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  store i32 2, i32* %5, align 8
  %9 = tail call i32 %0(%struct.VkNegotiateLayerInterface* %1) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = load i32, i32* %5, align 8
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %2, %11, %8
  %15 = phi i1 [ false, %8 ], [ %13, %11 ], [ true, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_layer_create_device(%struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo* nocapture readonly, %struct.VkAllocationCallbacks*, %struct.VkDevice_T** nocapture, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)**) #0 {
  %8 = alloca %struct.loader_extension_list, align 8
  %9 = icmp eq %struct.VkInstance_T* %0, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %7
  %11 = bitcast %struct.VkInstance_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %12 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %11, align 8
  %13 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %14 = icmp eq %struct.loader_instance* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %10, %21
  %16 = phi %struct.loader_instance* [ %23, %21 ], [ %13, %10 ]
  %17 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %16, i64 0, i32 0
  %18 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %17, align 8
  %19 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %18, i64 0, i32 0
  %20 = icmp eq %struct.VkLayerInstanceDispatchTable_* %19, %12
  br i1 %20, label %31, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %16, i64 0, i32 12
  %23 = load %struct.loader_instance*, %struct.loader_instance** %22, align 8
  %24 = icmp eq %struct.loader_instance* %23, null
  br i1 %24, label %31, label %15

25:                                               ; preds = %7
  %26 = bitcast %struct.VkPhysicalDevice_T* %1 to %struct.loader_physical_device_tramp*
  %27 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %26, i64 0, i32 2
  %28 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %27, align 8
  %29 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %26, i64 0, i32 1
  %30 = load %struct.loader_instance*, %struct.loader_instance** %29, align 8
  br label %31

31:                                               ; preds = %21, %15, %10, %25
  %32 = phi %struct.VkPhysicalDevice_T* [ %28, %25 ], [ %1, %10 ], [ %1, %15 ], [ %1, %21 ]
  %33 = phi %struct.loader_instance* [ %30, %25 ], [ null, %10 ], [ null, %21 ], [ %16, %15 ]
  %34 = bitcast %struct.loader_extension_list* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  %35 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 2
  store %struct.VkExtensionProperties* null, %struct.VkExtensionProperties** %35, align 8
  %36 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 1
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %8, i64 0, i32 0
  store i64 0, i64* %37, align 8
  %38 = icmp eq %struct.loader_instance* %33, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 33, i32 1
  %41 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %40, align 8
  %42 = icmp eq i8* (i8*, i64, i64, i32)* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 33, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i8* %41(i8* %45, i64 8320, i64 8, i32 4) #9
  br label %49

47:                                               ; preds = %39, %31
  %48 = tail call noalias i8* @malloc(i64 8320) #9
  br label %49

49:                                               ; preds = %47, %43
  %50 = phi i8* [ %46, %43 ], [ %48, %47 ]
  %51 = bitcast %struct.VkExtensionProperties** %35 to i8**
  store i8* %50, i8** %51, align 8
  %52 = icmp eq i8* %50, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0)) #9
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.976, i64 0, i64 0))
  %54 = bitcast i8* %50 to %struct.VkExtensionProperties*
  br label %269

55:                                               ; preds = %49
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %50, i8 0, i64 8320, i1 false) #9
  store i64 8320, i64* %37, align 8
  %56 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %5, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = tail call void ()* %5(%struct.VkInstance_T* %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #9
  %59 = bitcast void ()* %58 to i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*
  br label %65

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 0
  %62 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %61, align 8
  %63 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %62, i64 0, i32 0, i32 13
  %64 = load i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %63, align 8
  br label %65

65:                                               ; preds = %60, %57
  %66 = phi i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* [ %59, %57 ], [ %64, %60 ]
  %67 = call i32 @loader_add_device_extensions(%struct.loader_instance* %33, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* %66, %struct.VkPhysicalDevice_T* %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.977, i64 0, i64 0), %struct.loader_extension_list* nonnull %8)
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.978, i64 0, i64 0))
  br label %266

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 22
  %72 = call i32 @loader_validate_device_extensions(%struct.loader_instance* %33, %struct.loader_layer_list* %71, %struct.loader_extension_list* nonnull %8, %struct.VkDeviceCreateInfo* %2)
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %70
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.979, i64 0, i64 0))
  br label %266

75:                                               ; preds = %70
  %76 = icmp ne %struct.VkAllocationCallbacks* %3, null
  br i1 %76, label %77, label %83

77:                                               ; preds = %75
  %78 = getelementptr inbounds %struct.VkAllocationCallbacks, %struct.VkAllocationCallbacks* %3, i64 0, i32 1
  %79 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %78, align 8
  %80 = getelementptr inbounds %struct.VkAllocationCallbacks, %struct.VkAllocationCallbacks* %3, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = tail call i8* %79(i8* %81, i64 5080, i64 8, i32 3) #9
  br label %85

83:                                               ; preds = %75
  %84 = tail call noalias i8* @malloc(i64 5080) #9
  br label %85

85:                                               ; preds = %83, %77
  %86 = phi i8* [ %82, %77 ], [ %84, %83 ]
  %87 = bitcast i8* %86 to %struct.loader_device*
  %88 = icmp eq i8* %86, null
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.945, i64 0, i64 0)) #9
  br label %266

90:                                               ; preds = %85
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 5080, i1 false) #9
  br i1 %76, label %91, label %94

91:                                               ; preds = %90
  %92 = getelementptr inbounds i8, i8* %86, i64 5016
  %93 = bitcast %struct.VkAllocationCallbacks* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %93, i64 48, i1 false) #9
  br label %94

94:                                               ; preds = %91, %90
  %95 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 21, i32 2
  %96 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %95, align 8
  %97 = icmp eq %struct.loader_layer_properties* %96, null
  br i1 %97, label %132, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 21, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds i8, i8* %86, i64 4968
  %102 = bitcast i8* %101 to i64*
  store i64 %100, i64* %102, align 8
  %103 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 21, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds i8, i8* %86, i64 4976
  %106 = bitcast i8* %105 to i32*
  store i32 %104, i32* %106, align 8
  %107 = load i64, i64* %99, align 8
  %108 = getelementptr inbounds i8, i8* %86, i64 5024
  %109 = bitcast i8* %108 to i8* (i8*, i64, i64, i32)**
  %110 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %109, align 8
  %111 = icmp eq i8* (i8*, i64, i64, i32)* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %98
  %113 = getelementptr inbounds i8, i8* %86, i64 5016
  %114 = bitcast i8* %113 to i8**
  %115 = load i8*, i8** %114, align 8
  %116 = tail call i8* %110(i8* %115, i64 %107, i64 8, i32 3) #9
  br label %119

117:                                              ; preds = %98
  %118 = tail call noalias i8* @malloc(i64 %107) #9
  br label %119

119:                                              ; preds = %112, %117
  %120 = phi i8* [ %116, %112 ], [ %118, %117 ]
  %121 = getelementptr inbounds i8, i8* %86, i64 4984
  %122 = bitcast i8* %121 to i8**
  store i8* %120, i8** %122, align 8
  %123 = icmp eq i8* %120, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = load i64, i64* %99, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.980, i64 0, i64 0), i64 %125)
  br label %221

126:                                              ; preds = %119
  %127 = bitcast %struct.loader_layer_properties** %95 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = load i32, i32* %106, align 8
  %130 = zext i32 %129 to i64
  %131 = mul nuw nsw i64 %130, 11952
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 8 %128, i64 %131, i1 false)
  br label %139

132:                                              ; preds = %94
  %133 = getelementptr inbounds i8, i8* %86, i64 4968
  %134 = bitcast i8* %133 to i64*
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds i8, i8* %86, i64 4976
  %136 = bitcast i8* %135 to i32*
  store i32 0, i32* %136, align 8
  %137 = getelementptr inbounds i8, i8* %86, i64 4984
  %138 = bitcast i8* %137 to %struct.loader_layer_properties**
  store %struct.loader_layer_properties* null, %struct.loader_layer_properties** %138, align 8
  br label %139

139:                                              ; preds = %132, %126
  %140 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 22, i32 2
  %141 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %140, align 8
  %142 = icmp eq %struct.loader_layer_properties* %141, null
  br i1 %142, label %177, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %71, i64 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds i8, i8* %86, i64 4992
  %147 = bitcast i8* %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 22, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds i8, i8* %86, i64 5000
  %151 = bitcast i8* %150 to i32*
  store i32 %149, i32* %151, align 8
  %152 = load i64, i64* %144, align 8
  %153 = getelementptr inbounds i8, i8* %86, i64 5024
  %154 = bitcast i8* %153 to i8* (i8*, i64, i64, i32)**
  %155 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %154, align 8
  %156 = icmp eq i8* (i8*, i64, i64, i32)* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %143
  %158 = getelementptr inbounds i8, i8* %86, i64 5016
  %159 = bitcast i8* %158 to i8**
  %160 = load i8*, i8** %159, align 8
  %161 = tail call i8* %155(i8* %160, i64 %152, i64 8, i32 3) #9
  br label %164

162:                                              ; preds = %143
  %163 = tail call noalias i8* @malloc(i64 %152) #9
  br label %164

164:                                              ; preds = %157, %162
  %165 = phi i8* [ %161, %157 ], [ %163, %162 ]
  %166 = getelementptr inbounds i8, i8* %86, i64 5008
  %167 = bitcast i8* %166 to i8**
  store i8* %165, i8** %167, align 8
  %168 = icmp eq i8* %165, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %164
  %170 = load i64, i64* %144, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.981, i64 0, i64 0), i64 %170)
  br label %221

171:                                              ; preds = %164
  %172 = bitcast %struct.loader_layer_properties** %140 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = load i32, i32* %151, align 8
  %175 = zext i32 %174 to i64
  %176 = mul nuw nsw i64 %175, 11952
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %165, i8* align 8 %173, i64 %176, i1 false)
  br label %184

177:                                              ; preds = %139
  %178 = getelementptr inbounds i8, i8* %86, i64 4992
  %179 = bitcast i8* %178 to i64*
  store i64 0, i64* %179, align 8
  %180 = getelementptr inbounds i8, i8* %86, i64 5000
  %181 = bitcast i8* %180 to i32*
  store i32 0, i32* %181, align 8
  %182 = getelementptr inbounds i8, i8* %86, i64 5008
  %183 = bitcast i8* %182 to %struct.loader_layer_properties**
  store %struct.loader_layer_properties* null, %struct.loader_layer_properties** %183, align 8
  br label %184

184:                                              ; preds = %177, %171
  %185 = tail call i32 @loader_create_device_chain(%struct.VkPhysicalDevice_T* %32, %struct.VkDeviceCreateInfo* %2, %struct.VkAllocationCallbacks* %3, %struct.loader_instance* %33, %struct.loader_device* nonnull %87, void ()* (%struct.VkInstance_T*, i8*)* %5, void ()* (%struct.VkDevice_T*, i8*)** %6)
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %33, i32 8, i32 undef, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.982, i64 0, i64 0))
  br label %221

188:                                              ; preds = %184
  %189 = getelementptr inbounds i8, i8* %86, i64 4944
  %190 = bitcast i8* %189 to %struct.VkDevice_T**
  %191 = bitcast i8* %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %struct.VkDevice_T** %4 to i64*
  store i64 %192, i64* %193, align 8
  %194 = bitcast i8* %86 to void ()* (%struct.VkDevice_T*, i8*)**
  br label %195

195:                                              ; preds = %208, %188
  %196 = phi i64 [ 0, %188 ], [ %209, %208 ]
  %197 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 16, i64 %196, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = icmp eq i8* %198, null
  br i1 %199, label %208, label %200

200:                                              ; preds = %195
  %201 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %194, align 8
  %202 = load %struct.VkDevice_T*, %struct.VkDevice_T** %190, align 8
  %203 = tail call void ()* %201(%struct.VkDevice_T* %202, i8* nonnull %198) #9
  %204 = icmp eq void ()* %203, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %87, i64 0, i32 0, i32 1, i32 0, i64 %196
  %207 = bitcast i32 (%struct.VkDevice_T*)** %206 to void ()**
  store void ()* %203, void ()** %207, align 8
  br label %208

208:                                              ; preds = %205, %200, %195
  %209 = add nuw nsw i64 %196, 1
  %210 = icmp eq i64 %209, 250
  br i1 %210, label %211, label %195

211:                                              ; preds = %208
  %212 = bitcast i8* %86 to %struct.loader_dev_dispatch_table*
  %213 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 0
  %214 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %213, align 8
  %215 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %214, i64 0, i32 0, i32 10
  %216 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %215, align 8
  %217 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %194, align 8
  %218 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 23
  %219 = load %struct.VkInstance_T*, %struct.VkInstance_T** %218, align 8
  %220 = load %struct.VkDevice_T*, %struct.VkDevice_T** %4, align 8
  tail call void @loader_init_device_extension_dispatch_table(%struct.loader_dev_dispatch_table* %212, void ()* (%struct.VkInstance_T*, i8*)* %216, void ()* (%struct.VkDevice_T*, i8*)* %217, %struct.VkInstance_T* %219, %struct.VkDevice_T* %220)
  br label %266

221:                                              ; preds = %124, %169, %187
  %222 = phi i32 [ -1, %124 ], [ -1, %169 ], [ %185, %187 ]
  %223 = icmp eq %struct.VkAllocationCallbacks* %3, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds i8, i8* %86, i64 5016
  %226 = bitcast %struct.VkAllocationCallbacks* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* nonnull align 8 %226, i64 48, i1 false) #9
  br label %227

227:                                              ; preds = %224, %221
  %228 = getelementptr inbounds i8, i8* %86, i64 5008
  %229 = bitcast i8* %228 to %struct.loader_layer_properties**
  %230 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %229, align 8
  %231 = icmp eq %struct.loader_layer_properties* %230, null
  br i1 %231, label %235, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds i8, i8* %86, i64 4992
  %234 = bitcast i8* %233 to %struct.loader_layer_list*
  tail call void @loaderDeactivateLayers(%struct.loader_instance* %33, %struct.loader_device* nonnull %87, %struct.loader_layer_list* %234) #9
  br label %235

235:                                              ; preds = %232, %227
  %236 = getelementptr inbounds i8, i8* %86, i64 4984
  %237 = bitcast i8* %236 to %struct.loader_layer_properties**
  %238 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %237, align 8
  %239 = icmp eq %struct.loader_layer_properties* %238, null
  %240 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %238, i64 0, i32 0, i32 0, i64 0
  br i1 %239, label %256, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds i8, i8* %86, i64 5040
  %243 = bitcast i8* %242 to void (i8*, i8*)**
  %244 = load void (i8*, i8*)*, void (i8*, i8*)** %243, align 8
  %245 = icmp eq void (i8*, i8*)* %244, null
  br i1 %245, label %250, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds i8, i8* %86, i64 5016
  %248 = bitcast i8* %247 to i8**
  %249 = load i8*, i8** %248, align 8
  tail call void %244(i8* %249, i8* nonnull %240) #9
  br label %251

250:                                              ; preds = %241
  tail call void @free(i8* nonnull %240) #9
  br label %251

251:                                              ; preds = %250, %246
  %252 = getelementptr inbounds i8, i8* %86, i64 4976
  %253 = bitcast i8* %252 to i32*
  store i32 0, i32* %253, align 8
  %254 = getelementptr inbounds i8, i8* %86, i64 4968
  %255 = bitcast i8* %254 to i64*
  store i64 0, i64* %255, align 8
  br label %256

256:                                              ; preds = %235, %251
  %257 = getelementptr inbounds i8, i8* %86, i64 5040
  %258 = bitcast i8* %257 to void (i8*, i8*)**
  %259 = load void (i8*, i8*)*, void (i8*, i8*)** %258, align 8
  %260 = icmp eq void (i8*, i8*)* %259, null
  br i1 %260, label %265, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds i8, i8* %86, i64 5016
  %263 = bitcast i8* %262 to i8**
  %264 = load i8*, i8** %263, align 8
  tail call void %259(i8* %264, i8* nonnull %86) #9
  br label %266

265:                                              ; preds = %256
  tail call void @free(i8* nonnull %86) #9
  br label %266

266:                                              ; preds = %261, %265, %211, %69, %74, %89
  %267 = phi i32 [ %67, %69 ], [ %72, %74 ], [ 0, %211 ], [ -1, %89 ], [ %222, %265 ], [ %222, %261 ]
  %268 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %35, align 8
  br label %269

269:                                              ; preds = %266, %53
  %270 = phi %struct.VkExtensionProperties* [ %268, %266 ], [ %54, %53 ]
  %271 = phi i32 [ %267, %266 ], [ -1, %53 ]
  %272 = icmp eq %struct.VkExtensionProperties* %270, null
  %273 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %270, i64 0, i32 0, i64 0
  br i1 %272, label %284, label %274

274:                                              ; preds = %269
  br i1 %38, label %282, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 33, i32 3
  %277 = load void (i8*, i8*)*, void (i8*, i8*)** %276, align 8
  %278 = icmp eq void (i8*, i8*)* %277, null
  br i1 %278, label %282, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %33, i64 0, i32 33, i32 0
  %281 = load i8*, i8** %280, align 8
  tail call void %277(i8* %281, i8* nonnull %273) #9
  br label %283

282:                                              ; preds = %275, %274
  tail call void @free(i8* nonnull %273) #9
  br label %283

283:                                              ; preds = %279, %282
  store i32 0, i32* %36, align 8
  store i64 0, i64* %37, align 8
  br label %284

284:                                              ; preds = %269, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  ret i32 %271
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_validate_device_extensions(%struct.loader_instance*, %struct.loader_layer_list* nocapture readonly, %struct.loader_extension_list* nocapture readonly, %struct.VkDeviceCreateInfo* nocapture readonly) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %3, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %132, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %3, i64 0, i32 8
  %10 = load i8**, i8*** %9, align 8
  %11 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %2, i64 0, i32 1
  %12 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %14 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  br label %15

15:                                               ; preds = %8, %129
  %16 = phi i32 [ 0, %8 ], [ %130, %129 ]
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8*, i8** %10, i64 %17
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %81, label %21

21:                                               ; preds = %15, %72
  %22 = phi i32 [ %76, %72 ], [ 0, %15 ]
  %23 = phi i32 [ %73, %72 ], [ 0, %15 ]
  %24 = phi i32 [ %74, %72 ], [ 0, %15 ]
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %78, label %29

29:                                               ; preds = %21
  %30 = icmp eq i32 %22, 256
  br i1 %30, label %81, label %31

31:                                               ; preds = %29
  %32 = icmp slt i8 %27, 32
  %33 = icmp eq i8 %27, 127
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %72

35:                                               ; preds = %31
  %36 = sext i8 %27 to i32
  %37 = and i32 %36, -32
  %38 = icmp eq i32 %37, -64
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = and i32 %36, -16
  %41 = icmp eq i32 %40, -32
  br i1 %41, label %47, label %42

42:                                               ; preds = %39
  %43 = and i32 %36, -8
  %44 = icmp eq i32 %43, -16
  %45 = select i1 %44, i32 %24, i32 2
  %46 = select i1 %44, i32 3, i32 %23
  br label %47

47:                                               ; preds = %42, %39, %35
  %48 = phi i32 [ %24, %35 ], [ %24, %39 ], [ %45, %42 ]
  %49 = phi i32 [ 1, %35 ], [ 2, %39 ], [ %46, %42 ]
  %50 = icmp sgt i32 %49, 0
  %51 = icmp slt i32 %22, 256
  %52 = and i1 %51, %50
  br i1 %52, label %53, label %72

53:                                               ; preds = %47, %59
  %54 = phi i64 [ %57, %59 ], [ %25, %47 ]
  %55 = phi i32 [ %66, %59 ], [ 0, %47 ]
  %56 = phi i32 [ %65, %59 ], [ %48, %47 ]
  %57 = add nsw i64 %54, 1
  %58 = icmp eq i64 %57, 256
  br i1 %58, label %81, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds i8, i8* %19, i64 %57
  %61 = load i8, i8* %60, align 1
  %62 = and i8 %61, -64
  %63 = icmp eq i8 %62, -128
  %64 = or i32 %56, 2
  %65 = select i1 %63, i32 %56, i32 %64
  %66 = add nuw nsw i32 %55, 1
  %67 = icmp slt i32 %66, %49
  %68 = icmp slt i64 %57, 256
  %69 = and i1 %68, %67
  br i1 %69, label %53, label %70

70:                                               ; preds = %59
  %71 = trunc i64 %57 to i32
  br label %72

72:                                               ; preds = %70, %47, %31
  %73 = phi i32 [ %49, %47 ], [ %49, %70 ], [ 0, %31 ]
  %74 = phi i32 [ %48, %47 ], [ %65, %70 ], [ %24, %31 ]
  %75 = phi i32 [ %22, %47 ], [ %71, %70 ], [ %22, %31 ]
  %76 = add nsw i32 %75, 1
  %77 = icmp slt i32 %75, 256
  br i1 %77, label %21, label %78

78:                                               ; preds = %21, %72
  %79 = phi i32 [ %74, %72 ], [ %24, %21 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %15, %78, %29, %53
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.1003, i64 0, i64 0))
  br label %132

82:                                               ; preds = %78
  %83 = load i32, i32* %11, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %99, label %85

85:                                               ; preds = %82
  %86 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %12, align 8
  %87 = zext i32 %83 to i64
  br label %90

88:                                               ; preds = %90
  %89 = icmp eq i64 %96, %87
  br i1 %89, label %99, label %90

90:                                               ; preds = %88, %85
  %91 = phi i64 [ 0, %85 ], [ %96, %88 ]
  %92 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %86, i64 %91
  %93 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %92, i64 0, i32 0, i64 0
  %94 = tail call i32 @strcmp(i8* nonnull %19, i8* %93) #15
  %95 = icmp eq i32 %94, 0
  %96 = add nuw nsw i64 %91, 1
  br i1 %95, label %97, label %88

97:                                               ; preds = %90
  %98 = icmp eq %struct.VkExtensionProperties* %92, null
  br i1 %98, label %99, label %129

99:                                               ; preds = %88, %82, %97
  %100 = load i32, i32* %13, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %128, label %102

102:                                              ; preds = %99
  %103 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %14, align 8
  %104 = zext i32 %100 to i64
  br label %105

105:                                              ; preds = %102, %125
  %106 = phi i64 [ 0, %102 ], [ %126, %125 ]
  %107 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %103, i64 %106, i32 7, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %125, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %103, i64 %106, i32 7, i32 2
  %112 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %111, align 8
  %113 = zext i32 %108 to i64
  br label %116

114:                                              ; preds = %116
  %115 = icmp eq i64 %122, %113
  br i1 %115, label %125, label %116

116:                                              ; preds = %114, %110
  %117 = phi i64 [ 0, %110 ], [ %122, %114 ]
  %118 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %112, i64 %117, i32 0
  %119 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %118, i64 0, i32 0, i64 0
  %120 = tail call i32 @strcmp(i8* nonnull %19, i8* %119) #15
  %121 = icmp eq i32 %120, 0
  %122 = add nuw nsw i64 %117, 1
  br i1 %121, label %123, label %114

123:                                              ; preds = %116
  %124 = icmp eq %struct.VkExtensionProperties* %118, null
  br i1 %124, label %125, label %129

125:                                              ; preds = %114, %105, %123
  %126 = add nuw nsw i64 %106, 1
  %127 = icmp ult i64 %126, %104
  br i1 %127, label %105, label %128

128:                                              ; preds = %99, %125
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.1004, i64 0, i64 0), i8* nonnull %19)
  br label %132

129:                                              ; preds = %123, %97
  %130 = add i32 %16, 1
  %131 = icmp ult i32 %130, %6
  br i1 %131, label %15, label %132

132:                                              ; preds = %129, %4, %128, %81
  %133 = phi i32 [ -7, %81 ], [ -7, %128 ], [ 0, %4 ], [ 0, %129 ]
  ret i32 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_create_device_chain(%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo* nocapture readonly, %struct.VkAllocationCallbacks*, %struct.loader_instance*, %struct.loader_device*, void ()* (%struct.VkInstance_T*, i8*)* readnone, void ()* (%struct.VkDevice_T*, i8*)**) local_unnamed_addr #0 {
  %8 = alloca %struct.VkLayerDeviceCreateInfo, align 8
  %9 = alloca %struct.VkDeviceCreateInfo, align 8
  %10 = alloca %struct.VkDevice_T*, align 8
  %11 = alloca %struct.VkLayerDeviceCreateInfo, align 8
  %12 = bitcast %struct.VkLayerDeviceCreateInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %struct.VkDeviceCreateInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #9
  %14 = bitcast %struct.VkDeviceCreateInfo* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 72, i1 false)
  %15 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %9, i64 0, i32 1
  %16 = bitcast i8** %15 to %struct.VkBaseOutStructure**
  %17 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %16, align 8
  %18 = icmp eq %struct.VkBaseOutStructure* %17, null
  br i1 %18, label %74, label %19

19:                                               ; preds = %7
  %20 = bitcast %struct.VkDeviceCreateInfo* %9 to %struct.VkBaseOutStructure*
  %21 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %17, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1000070001
  br i1 %23, label %28, label %69

24:                                               ; preds = %69
  %25 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %72, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 1000070001
  br i1 %27, label %28, label %69

28:                                               ; preds = %24, %19
  %29 = phi %struct.VkBaseOutStructure* [ %17, %19 ], [ %72, %24 ]
  %30 = phi %struct.VkBaseOutStructure* [ %20, %19 ], [ %70, %24 ]
  %31 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %29, i64 1, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %74, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %29, i64 1, i32 1
  %36 = bitcast %struct.VkBaseOutStructure** %35 to %struct.VkPhysicalDevice_T***
  %37 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %36, align 8
  %38 = icmp eq %struct.VkPhysicalDevice_T** %37, null
  br i1 %38, label %74, label %39

39:                                               ; preds = %34
  %40 = alloca %struct.VkDeviceGroupDeviceCreateInfo, align 16
  %41 = bitcast %struct.VkDeviceGroupDeviceCreateInfo* %40 to i8*
  %42 = bitcast %struct.VkBaseOutStructure* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %41, i8* nonnull align 8 %42, i64 32, i1 false)
  %43 = load i32, i32* %31, align 8
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 3
  %46 = alloca %struct.VkPhysicalDevice_T*, i64 %44, align 16
  %47 = bitcast %struct.VkPhysicalDevice_T** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -86, i64 %45, i1 false)
  %48 = load i32, i32* %31, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %54, %39
  %51 = getelementptr inbounds %struct.VkDeviceGroupDeviceCreateInfo, %struct.VkDeviceGroupDeviceCreateInfo* %40, i64 0, i32 3
  store %struct.VkPhysicalDevice_T** %46, %struct.VkPhysicalDevice_T*** %51, align 8
  %52 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %30, i64 0, i32 1
  %53 = bitcast %struct.VkBaseOutStructure** %52 to %struct.VkDeviceGroupDeviceCreateInfo**
  store %struct.VkDeviceGroupDeviceCreateInfo* %40, %struct.VkDeviceGroupDeviceCreateInfo** %53, align 8
  br label %74

54:                                               ; preds = %39, %54
  %55 = phi i64 [ %65, %54 ], [ 0, %39 ]
  %56 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %36, align 8
  %57 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %56, i64 %55
  %58 = bitcast %struct.VkPhysicalDevice_T** %57 to %struct.loader_physical_device_tramp**
  %59 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %58, align 8
  %60 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %59, i64 0, i32 2
  %61 = bitcast %struct.VkPhysicalDevice_T** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %46, i64 %55
  %64 = bitcast %struct.VkPhysicalDevice_T** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = add nuw nsw i64 %55, 1
  %66 = load i32, i32* %31, align 8
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %65, %67
  br i1 %68, label %54, label %50

69:                                               ; preds = %19, %24
  %70 = phi %struct.VkBaseOutStructure* [ %72, %24 ], [ %17, %19 ]
  %71 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %70, i64 0, i32 1
  %72 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %71, align 8
  %73 = icmp eq %struct.VkBaseOutStructure* %72, null
  br i1 %73, label %74, label %24

74:                                               ; preds = %69, %7, %34, %28, %50
  %75 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %4, i64 0, i32 5, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = mul nuw nsw i64 %77, 24
  %79 = alloca %struct.VkLayerDeviceLink_, i64 %77, align 16
  %80 = bitcast %struct.VkLayerDeviceLink_* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %80, i8 -86, i64 %78, i1 false)
  %81 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 22, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = zext i32 %82 to i64
  %84 = shl nuw nsw i64 %83, 3
  %85 = alloca i8*, i64 %83, align 16
  %86 = bitcast i8** %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 -86, i64 %84, i1 false)
  %87 = icmp eq i32 %76, 0
  br i1 %87, label %201, label %88

88:                                               ; preds = %74
  %89 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %8, i64 0, i32 0
  store i32 48, i32* %89, align 8
  %90 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %8, i64 0, i32 2
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %8, i64 0, i32 3, i32 0
  store %struct.VkLayerDeviceLink_* null, %struct.VkLayerDeviceLink_** %91, align 8
  %92 = bitcast i8** %15 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %8, i64 0, i32 1
  %95 = bitcast i8** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = bitcast i8** %15 to %struct.VkLayerDeviceCreateInfo**
  store %struct.VkLayerDeviceCreateInfo* %8, %struct.VkLayerDeviceCreateInfo** %96, align 8
  %97 = add i32 %76, -1
  %98 = icmp sgt i32 %97, -1
  br i1 %98, label %99, label %201

99:                                               ; preds = %88
  %100 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %4, i64 0, i32 5, i32 2
  %101 = bitcast %struct.VkLayerDeviceLink_** %91 to i64*
  %102 = icmp eq void ()* (%struct.VkDevice_T*, i8*)** %6, null
  %103 = sext i32 %97 to i64
  br label %104

104:                                              ; preds = %99, %193
  %105 = phi i64 [ %103, %99 ], [ %200, %193 ]
  %106 = phi i32 [ %97, %99 ], [ %198, %193 ]
  %107 = phi i8 [ 0, %99 ], [ %197, %193 ]
  %108 = phi void ()* (%struct.VkInstance_T*, i8*)* [ @loader_gpa_instance_internal, %99 ], [ %196, %193 ]
  %109 = phi void ()* (%struct.VkDevice_T*, i8*)* [ @loader_gpa_device_internal, %99 ], [ %195, %193 ]
  %110 = phi i32 [ 0, %99 ], [ %194, %193 ]
  %111 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %100, align 8
  %112 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %111, i64 %105, i32 0, i32 0, i64 0
  %113 = icmp eq i32 %110, 0
  br i1 %113, label %125, label %114

114:                                              ; preds = %104
  %115 = zext i32 %110 to i64
  br label %118

116:                                              ; preds = %118
  %117 = icmp eq i64 %124, %115
  br i1 %117, label %125, label %118

118:                                              ; preds = %116, %114
  %119 = phi i64 [ 0, %114 ], [ %124, %116 ]
  %120 = getelementptr inbounds i8*, i8** %85, i64 %119
  %121 = load i8*, i8** %120, align 8
  %122 = call i32 @strcmp(i8* %112, i8* %121) #15
  %123 = icmp eq i32 %122, 0
  %124 = add nuw nsw i64 %119, 1
  br i1 %123, label %193, label %116

125:                                              ; preds = %116, %104
  %126 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %111, i64 %105, i32 3, i64 0
  %127 = call i8* @dlopen(i8* %126, i32 1) #9
  %128 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %111, i64 %105, i32 4
  store i8* %127, i8** %128, align 8
  %129 = icmp eq i8* %127, null
  br i1 %129, label %130, label %135

130:                                              ; preds = %125
  %131 = call i8* @dlerror() #9
  %132 = call i8* @strstr(i8* %131, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.924, i64 0, i64 0)) #15
  %133 = icmp eq i8* %132, null
  %134 = select i1 %133, i32 8, i32 1
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %3, i32 %134, i32 undef, i8* %131) #9
  br label %136

135:                                              ; preds = %125
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %3, i32 16, i32 undef, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1202, i64 0, i64 0), i8* %126) #9
  br label %136

136:                                              ; preds = %130, %135
  %137 = load i8*, i8** %128, align 8
  %138 = icmp ne i8* %137, null
  %139 = and i8 %107, 1
  %140 = icmp eq i8 %139, 0
  %141 = and i1 %140, %138
  br i1 %141, label %142, label %193

142:                                              ; preds = %136
  %143 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %111, i64 %105, i32 5, i32 4
  %144 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %143, align 8
  %145 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %144, null
  br i1 %145, label %146, label %160

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %111, i64 %105, i32 5, i32 0, i64 0
  %148 = call i64 @strlen(i8* %147) #15
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %146
  %151 = call i8* @dlsym(i8* nonnull %137, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.987, i64 0, i64 0)) #9
  %152 = bitcast void ()* (%struct.VkInstance_T*, i8*)** %143 to i8**
  store i8* %151, i8** %152, align 8
  br label %155

153:                                              ; preds = %146
  %154 = call i8* @dlsym(i8* nonnull %137, i8* %147) #9
  br label %155

155:                                              ; preds = %153, %150
  %156 = phi i8* [ %151, %150 ], [ %154, %153 ]
  %157 = bitcast i8* %156 to void ()* (%struct.VkInstance_T*, i8*)*
  %158 = icmp eq i8* %156, null
  br i1 %158, label %159, label %160

159:                                              ; preds = %155
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %3, i32 8, i32 undef, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.994, i64 0, i64 0), i8* %126)
  br label %193

160:                                              ; preds = %155, %142
  %161 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %157, %155 ], [ %144, %142 ]
  %162 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %161, %5
  br i1 %162, label %163, label %165

163:                                              ; preds = %160
  br i1 %102, label %193, label %164

164:                                              ; preds = %163
  store void ()* (%struct.VkDevice_T*, i8*)* %109, void ()* (%struct.VkDevice_T*, i8*)** %6, align 8
  br label %193

165:                                              ; preds = %160
  %166 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %111, i64 %105, i32 5, i32 5
  %167 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %166, align 8
  %168 = icmp eq void ()* (%struct.VkDevice_T*, i8*)* %167, null
  br i1 %168, label %169, label %183

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %111, i64 %105, i32 5, i32 1, i64 0
  %171 = call i64 @strlen(i8* %170) #15
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %169
  %174 = call i8* @dlsym(i8* nonnull %137, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #9
  %175 = bitcast void ()* (%struct.VkDevice_T*, i8*)** %166 to i8**
  store i8* %174, i8** %175, align 8
  br label %178

176:                                              ; preds = %169
  %177 = call i8* @dlsym(i8* nonnull %137, i8* %170) #9
  br label %178

178:                                              ; preds = %176, %173
  %179 = phi i8* [ %174, %173 ], [ %177, %176 ]
  %180 = bitcast i8* %179 to void ()* (%struct.VkDevice_T*, i8*)*
  %181 = icmp eq i8* %179, null
  br i1 %181, label %182, label %183

182:                                              ; preds = %178
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %3, i32 1, i32 undef, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.995, i64 0, i64 0), i8* %126)
  br label %193

183:                                              ; preds = %178, %165
  %184 = phi void ()* (%struct.VkDevice_T*, i8*)* [ %180, %178 ], [ %167, %165 ]
  %185 = load i64, i64* %101, align 8
  %186 = zext i32 %110 to i64
  %187 = getelementptr inbounds %struct.VkLayerDeviceLink_, %struct.VkLayerDeviceLink_* %79, i64 %186
  %188 = bitcast %struct.VkLayerDeviceLink_* %187 to i64*
  store i64 %185, i64* %188, align 8
  %189 = getelementptr inbounds %struct.VkLayerDeviceLink_, %struct.VkLayerDeviceLink_* %79, i64 %186, i32 1
  store void ()* (%struct.VkInstance_T*, i8*)* %108, void ()* (%struct.VkInstance_T*, i8*)** %189, align 8
  %190 = getelementptr inbounds %struct.VkLayerDeviceLink_, %struct.VkLayerDeviceLink_* %79, i64 %186, i32 2
  store void ()* (%struct.VkDevice_T*, i8*)* %109, void ()* (%struct.VkDevice_T*, i8*)** %190, align 8
  store %struct.VkLayerDeviceLink_* %187, %struct.VkLayerDeviceLink_** %91, align 8
  %191 = getelementptr inbounds i8*, i8** %85, i64 %186
  store i8* %112, i8** %191, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %3, i32 1, i32 undef, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.996, i64 0, i64 0), i8* %112, i8* %126)
  %192 = add i32 %110, 1
  br label %193

193:                                              ; preds = %118, %164, %163, %136, %183, %182, %159
  %194 = phi i32 [ %192, %183 ], [ %110, %182 ], [ %110, %159 ], [ %110, %136 ], [ %110, %163 ], [ %110, %164 ], [ %110, %118 ]
  %195 = phi void ()* (%struct.VkDevice_T*, i8*)* [ %184, %183 ], [ %109, %182 ], [ %109, %159 ], [ %109, %136 ], [ %109, %163 ], [ %109, %164 ], [ %109, %118 ]
  %196 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %161, %183 ], [ %108, %182 ], [ %108, %159 ], [ %108, %136 ], [ %108, %163 ], [ %108, %164 ], [ %108, %118 ]
  %197 = phi i8 [ %107, %183 ], [ %107, %182 ], [ %107, %159 ], [ %107, %136 ], [ 1, %163 ], [ 1, %164 ], [ %107, %118 ]
  %198 = add i32 %106, -1
  %199 = icmp sgt i32 %198, -1
  %200 = add nsw i64 %105, -1
  br i1 %199, label %104, label %201

201:                                              ; preds = %193, %88, %74
  %202 = phi void ()* (%struct.VkDevice_T*, i8*)* [ @loader_gpa_device_internal, %74 ], [ @loader_gpa_device_internal, %88 ], [ %195, %193 ]
  %203 = phi void ()* (%struct.VkInstance_T*, i8*)* [ @loader_gpa_instance_internal, %74 ], [ @loader_gpa_instance_internal, %88 ], [ %196, %193 ]
  %204 = bitcast %struct.VkDevice_T** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #9
  %205 = bitcast %struct.VkDevice_T** %10 to %struct.loader_device**
  store %struct.loader_device* %4, %struct.loader_device** %205, align 8
  %206 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %3, i64 0, i32 23
  %207 = load %struct.VkInstance_T*, %struct.VkInstance_T** %206, align 8
  %208 = call void ()* %203(%struct.VkInstance_T* %207, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #9
  %209 = icmp eq void ()* %208, null
  br i1 %209, label %225, label %210

210:                                              ; preds = %201
  %211 = bitcast void ()* %208 to i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*
  %212 = bitcast %struct.VkLayerDeviceCreateInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %212) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 -86, i64 24, i1 false)
  %213 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %11, i64 0, i32 0
  store i32 48, i32* %213, align 8
  %214 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %11, i64 0, i32 2
  store i32 1, i32* %214, align 8
  %215 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %11, i64 0, i32 3
  %216 = bitcast %union.anon.5* %215 to i32 (%struct.VkDevice_T*, i8*)**
  store i32 (%struct.VkDevice_T*, i8*)* @vkSetDeviceDispatch, i32 (%struct.VkDevice_T*, i8*)** %216, align 8
  %217 = bitcast i8** %15 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %struct.VkLayerDeviceCreateInfo, %struct.VkLayerDeviceCreateInfo* %11, i64 0, i32 1
  %220 = bitcast i8** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast i8** %15 to %struct.VkLayerDeviceCreateInfo**
  store %struct.VkLayerDeviceCreateInfo* %11, %struct.VkLayerDeviceCreateInfo** %221, align 8
  %222 = call i32 %211(%struct.VkPhysicalDevice_T* %0, %struct.VkDeviceCreateInfo* nonnull %9, %struct.VkAllocationCallbacks* %2, %struct.VkDevice_T** nonnull %10) #9
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #9
  br label %233

225:                                              ; preds = %201
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %3, i32 8, i32 undef, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.997, i64 0, i64 0))
  br label %233

226:                                              ; preds = %210
  %227 = bitcast %struct.VkDevice_T** %10 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %4, i64 0, i32 1
  %230 = bitcast %struct.VkDevice_T** %229 to i64*
  store i64 %228, i64* %230, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #9
  %231 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %4, i64 0, i32 0
  %232 = inttoptr i64 %228 to %struct.VkDevice_T*
  call void @loader_init_device_dispatch_table(%struct.loader_dev_dispatch_table* %231, void ()* (%struct.VkDevice_T*, i8*)* %202, %struct.VkDevice_T* %232)
  br label %233

233:                                              ; preds = %224, %226, %225
  %234 = phi i32 [ 0, %226 ], [ %222, %224 ], [ -3, %225 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9
  ret i32 %234
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_layer_destroy_device(%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* nocapture) #0 {
  %4 = icmp eq %struct.VkDevice_T* %0, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %3
  %6 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %7 = icmp eq %struct.loader_instance* %6, null
  br i1 %7, label %49, label %8

8:                                                ; preds = %5
  %9 = bitcast %struct.VkDevice_T* %0 to %struct.VkLayerDispatchTable_**
  br label %10

10:                                               ; preds = %45, %8
  %11 = phi %struct.loader_instance* [ %6, %8 ], [ %47, %45 ]
  %12 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %11, i64 0, i32 14
  %13 = load %struct.loader_icd_term*, %struct.loader_icd_term** %12, align 8
  %14 = icmp eq %struct.loader_icd_term* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %10, %41
  %16 = phi %struct.loader_icd_term* [ %43, %41 ], [ %13, %10 ]
  %17 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %16, i64 0, i32 2
  %18 = load %struct.loader_device*, %struct.loader_device** %17, align 8
  %19 = icmp eq %struct.loader_device* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %15
  %21 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %9, align 8
  br label %22

22:                                               ; preds = %37, %20
  %23 = phi %struct.loader_device* [ %18, %20 ], [ %39, %37 ]
  %24 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %23, i64 0, i32 2
  %25 = bitcast %struct.VkDevice_T** %24 to %struct.VkLayerDispatchTable_***
  %26 = load %struct.VkLayerDispatchTable_**, %struct.VkLayerDispatchTable_*** %25, align 8
  %27 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %26, align 8
  %28 = icmp eq %struct.VkLayerDispatchTable_* %27, %21
  br i1 %28, label %49, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %23, i64 0, i32 1
  %31 = load %struct.VkDevice_T*, %struct.VkDevice_T** %30, align 8
  %32 = icmp eq %struct.VkDevice_T* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = bitcast %struct.VkDevice_T* %31 to %struct.VkLayerDispatchTable_**
  %35 = load %struct.VkLayerDispatchTable_*, %struct.VkLayerDispatchTable_** %34, align 8
  %36 = icmp eq %struct.VkLayerDispatchTable_* %35, %21
  br i1 %36, label %49, label %37

37:                                               ; preds = %33, %29
  %38 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %23, i64 0, i32 8
  %39 = load %struct.loader_device*, %struct.loader_device** %38, align 8
  %40 = icmp eq %struct.loader_device* %39, null
  br i1 %40, label %41, label %22

41:                                               ; preds = %37, %15
  %42 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %16, i64 0, i32 5
  %43 = load %struct.loader_icd_term*, %struct.loader_icd_term** %42, align 8
  %44 = icmp eq %struct.loader_icd_term* %43, null
  br i1 %44, label %45, label %15

45:                                               ; preds = %41, %10
  %46 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %11, i64 0, i32 12
  %47 = load %struct.loader_instance*, %struct.loader_instance** %46, align 8
  %48 = icmp eq %struct.loader_instance* %47, null
  br i1 %48, label %49, label %10

49:                                               ; preds = %45, %22, %33, %5
  %50 = phi %struct.loader_device* [ null, %5 ], [ %23, %33 ], [ %23, %22 ], [ null, %45 ]
  %51 = phi %struct.loader_icd_term* [ null, %5 ], [ %16, %33 ], [ %16, %22 ], [ null, %45 ]
  %52 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %51, i64 0, i32 1
  %53 = load %struct.loader_instance*, %struct.loader_instance** %52, align 8
  tail call void %2(%struct.VkDevice_T* nonnull %0, %struct.VkAllocationCallbacks* %1) #9
  %54 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %50, i64 0, i32 1
  %55 = bitcast %struct.VkDevice_T** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  tail call void @loader_remove_logical_device(%struct.loader_instance* %53, %struct.loader_icd_term* %51, %struct.loader_device* %50, %struct.VkAllocationCallbacks* %1)
  br label %56

56:                                               ; preds = %3, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_create_instance_chain(%struct.VkInstanceCreateInfo* nocapture readonly, %struct.VkAllocationCallbacks*, %struct.loader_instance*, %struct.VkInstance_T**) local_unnamed_addr #0 {
  %5 = alloca %struct.VkLayerInstanceCreateInfo, align 8
  %6 = alloca %struct.VkInstanceCreateInfo, align 8
  %7 = alloca %struct.VkNegotiateLayerInterface, align 8
  %8 = alloca %struct.VkLayerInstanceCreateInfo, align 8
  %9 = alloca %struct.VkLayerInstanceCreateInfo, align 8
  %10 = alloca %struct.VkLayerInstanceCreateInfo, align 8
  %11 = bitcast %struct.VkLayerInstanceCreateInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = bitcast %struct.VkInstanceCreateInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #9
  %13 = bitcast %struct.VkInstanceCreateInfo* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 64, i1 false)
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 22, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %176, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %5, i64 0, i32 3
  %19 = bitcast %union.anon.3* %18 to %struct.VkLayerInstanceLink_**
  store %struct.VkLayerInstanceLink_* null, %struct.VkLayerInstanceLink_** %19, align 8
  %20 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %5, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %5, i64 0, i32 0
  store i32 47, i32* %25, align 8
  %26 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %5, i64 0, i32 2
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %6, i64 0, i32 1
  %28 = bitcast i8** %27 to %struct.VkLayerInstanceCreateInfo**
  store %struct.VkLayerInstanceCreateInfo* %5, %struct.VkLayerInstanceCreateInfo** %28, align 8
  %29 = zext i32 %15 to i64
  %30 = mul nuw nsw i64 %29, 24
  %31 = alloca %struct.VkLayerInstanceLink_, i64 %29, align 16
  %32 = bitcast %struct.VkLayerInstanceLink_* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 %30, i1 false)
  %33 = shl nuw nsw i64 %29, 3
  %34 = alloca i8*, i64 %29, align 16
  %35 = bitcast i8** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -86, i64 %33, i1 false)
  %36 = add i32 %15, -1
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %176

38:                                               ; preds = %17
  %39 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 22, i32 2
  %40 = bitcast %struct.VkNegotiateLayerInterface* %7 to i8*
  %41 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %7, i64 0, i32 0
  %42 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %7, i64 0, i32 2
  %43 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %7, i64 0, i32 1
  %44 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %7, i64 0, i32 3
  %45 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %7, i64 0, i32 4
  %46 = getelementptr inbounds %struct.VkNegotiateLayerInterface, %struct.VkNegotiateLayerInterface* %7, i64 0, i32 5
  %47 = bitcast %union.anon.3* %18 to i64*
  %48 = sext i32 %36 to i64
  br label %49

49:                                               ; preds = %38, %166
  %50 = phi i64 [ %48, %38 ], [ %175, %166 ]
  %51 = phi i32 [ %36, %38 ], [ %173, %166 ]
  %52 = phi void ()* (%struct.VkInstance_T*, i8*)* [ @loader_gpdpa_instance_internal, %38 ], [ %172, %166 ]
  %53 = phi void ()* (%struct.VkInstance_T*, i8*)* [ @loader_gpdpa_instance_internal, %38 ], [ %171, %166 ]
  %54 = phi void ()* (%struct.VkDevice_T*, i8*)* [ @loader_gpa_device_internal, %38 ], [ %170, %166 ]
  %55 = phi void ()* (%struct.VkInstance_T*, i8*)* [ @loader_gpa_instance_internal, %38 ], [ %169, %166 ]
  %56 = phi void ()* (%struct.VkInstance_T*, i8*)* [ @loader_gpa_instance_internal, %38 ], [ %168, %166 ]
  %57 = phi i32 [ 0, %38 ], [ %167, %166 ]
  %58 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %39, align 8
  %59 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 0, i32 0, i64 0
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %49
  %62 = zext i32 %57 to i64
  br label %65

63:                                               ; preds = %65
  %64 = icmp eq i64 %71, %62
  br i1 %64, label %72, label %65

65:                                               ; preds = %63, %61
  %66 = phi i64 [ 0, %61 ], [ %71, %63 ]
  %67 = getelementptr inbounds i8*, i8** %34, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 @strcmp(i8* %59, i8* %68) #15
  %70 = icmp eq i32 %69, 0
  %71 = add nuw nsw i64 %66, 1
  br i1 %70, label %166, label %63

72:                                               ; preds = %63, %49
  %73 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 3, i64 0
  %74 = call i8* @dlopen(i8* %73, i32 1) #9
  %75 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 4
  store i8* %74, i8** %75, align 8
  %76 = icmp eq i8* %74, null
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = call i8* @dlerror() #9
  %79 = call i8* @strstr(i8* %78, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.924, i64 0, i64 0)) #15
  %80 = icmp eq i8* %79, null
  %81 = select i1 %80, i32 8, i32 1
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %2, i32 %81, i32 undef, i8* %78) #9
  br label %83

82:                                               ; preds = %72
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %2, i32 16, i32 undef, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1202, i64 0, i64 0), i8* %73) #9
  br label %83

83:                                               ; preds = %77, %82
  %84 = load i8*, i8** %75, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %166, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 5, i32 3
  %88 = load i32 (%struct.VkNegotiateLayerInterface*)*, i32 (%struct.VkNegotiateLayerInterface*)** %87, align 8
  %89 = icmp eq i32 (%struct.VkNegotiateLayerInterface*)* %88, null
  br i1 %89, label %90, label %135

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 5, i32 2, i64 0
  %92 = call i64 @strlen(i8* %91) #15
  %93 = icmp eq i64 %92, 0
  %94 = select i1 %93, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.986, i64 0, i64 0), i8* %91
  %95 = call i8* @dlsym(i8* nonnull %84, i8* %94) #9
  %96 = icmp eq i8* %95, null
  br i1 %96, label %115, label %97

97:                                               ; preds = %90
  %98 = bitcast i8* %95 to i32 (%struct.VkNegotiateLayerInterface*)*
  %99 = bitcast i32 (%struct.VkNegotiateLayerInterface*)** %87 to i8**
  store i8* %95, i8** %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 48, i1 false) #9
  store i32 1, i32* %41, align 8
  store i8* null, i8** %43, align 8
  store i32 2, i32* %42, align 8
  %100 = call i32 %98(%struct.VkNegotiateLayerInterface* nonnull %7) #9
  %101 = icmp eq i32 %100, 0
  %102 = load i32, i32* %42, align 8
  %103 = icmp ne i32 %102, 0
  %104 = and i1 %101, %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %97
  %106 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 2
  store i32 %102, i32* %106, align 4
  %107 = load i32, i32* %42, align 8
  %108 = icmp ugt i32 %107, 1
  br i1 %108, label %110, label %109

109:                                              ; preds = %105, %97
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #9
  br label %115

110:                                              ; preds = %105
  %111 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %44, align 8
  %112 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %45, align 8
  %113 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %46, align 8
  %114 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %111, null
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #9
  br i1 %114, label %115, label %135

115:                                              ; preds = %110, %90, %109
  %116 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %113, %110 ], [ %52, %109 ], [ %52, %90 ]
  %117 = phi void ()* (%struct.VkDevice_T*, i8*)* [ %112, %110 ], [ %54, %109 ], [ %54, %90 ]
  %118 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 5, i32 4
  %119 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %118, align 8
  %120 = icmp eq void ()* (%struct.VkInstance_T*, i8*)* %119, null
  br i1 %120, label %121, label %135

121:                                              ; preds = %115
  %122 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 5, i32 0, i64 0
  %123 = call i64 @strlen(i8* %122) #15
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = call i8* @dlsym(i8* nonnull %84, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.987, i64 0, i64 0)) #9
  %127 = bitcast void ()* (%struct.VkInstance_T*, i8*)** %118 to i8**
  store i8* %126, i8** %127, align 8
  br label %130

128:                                              ; preds = %121
  %129 = call i8* @dlsym(i8* nonnull %84, i8* %122) #9
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi i8* [ %126, %125 ], [ %129, %128 ]
  %132 = bitcast i8* %131 to void ()* (%struct.VkInstance_T*, i8*)*
  %133 = icmp eq i8* %131, null
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %2, i32 8, i32 undef, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.988, i64 0, i64 0), i8* %73)
  br label %166

135:                                              ; preds = %110, %130, %115, %86
  %136 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %55, %86 ], [ %119, %115 ], [ %132, %130 ], [ %111, %110 ]
  %137 = phi void ()* (%struct.VkDevice_T*, i8*)* [ %54, %86 ], [ %117, %115 ], [ %117, %130 ], [ %112, %110 ]
  %138 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %52, %86 ], [ %116, %115 ], [ %116, %130 ], [ %113, %110 ]
  %139 = load i64, i64* %47, align 8
  %140 = zext i32 %57 to i64
  %141 = getelementptr inbounds %struct.VkLayerInstanceLink_, %struct.VkLayerInstanceLink_* %31, i64 %140
  %142 = bitcast %struct.VkLayerInstanceLink_* %141 to i64*
  store i64 %139, i64* %142, align 8
  %143 = getelementptr inbounds %struct.VkLayerInstanceLink_, %struct.VkLayerInstanceLink_* %31, i64 %140, i32 1
  store void ()* (%struct.VkInstance_T*, i8*)* %56, void ()* (%struct.VkInstance_T*, i8*)** %143, align 8
  %144 = getelementptr inbounds %struct.VkLayerInstanceLink_, %struct.VkLayerInstanceLink_* %31, i64 %140, i32 2
  store void ()* (%struct.VkInstance_T*, i8*)* %53, void ()* (%struct.VkInstance_T*, i8*)** %144, align 8
  %145 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = icmp ugt i32 %146, 1
  %148 = icmp ne void ()* (%struct.VkInstance_T*, i8*)* %138, null
  %149 = and i1 %148, %147
  br i1 %149, label %150, label %152

150:                                              ; preds = %135
  %151 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 5, i32 6
  store void ()* (%struct.VkInstance_T*, i8*)* %138, void ()* (%struct.VkInstance_T*, i8*)** %151, align 8
  br label %152

152:                                              ; preds = %150, %135
  %153 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %138, %150 ], [ %53, %135 ]
  %154 = icmp ne void ()* (%struct.VkInstance_T*, i8*)* %136, null
  %155 = and i1 %154, %147
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 5, i32 4
  store void ()* (%struct.VkInstance_T*, i8*)* %136, void ()* (%struct.VkInstance_T*, i8*)** %157, align 8
  br label %158

158:                                              ; preds = %156, %152
  %159 = icmp ne void ()* (%struct.VkDevice_T*, i8*)* %137, null
  %160 = and i1 %159, %147
  br i1 %160, label %161, label %163

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %58, i64 %50, i32 5, i32 5
  store void ()* (%struct.VkDevice_T*, i8*)* %137, void ()* (%struct.VkDevice_T*, i8*)** %162, align 8
  br label %163

163:                                              ; preds = %161, %158
  store %struct.VkLayerInstanceLink_* %141, %struct.VkLayerInstanceLink_** %19, align 8
  %164 = getelementptr inbounds i8*, i8** %34, i64 %140
  store i8* %59, i8** %164, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %2, i32 1, i32 undef, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.989, i64 0, i64 0), i8* %59, i8* %73)
  %165 = add i32 %57, 1
  br label %166

166:                                              ; preds = %65, %134, %83, %163
  %167 = phi i32 [ %165, %163 ], [ %57, %134 ], [ %57, %83 ], [ %57, %65 ]
  %168 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %136, %163 ], [ %56, %134 ], [ %56, %83 ], [ %56, %65 ]
  %169 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %136, %163 ], [ null, %134 ], [ %55, %83 ], [ %55, %65 ]
  %170 = phi void ()* (%struct.VkDevice_T*, i8*)* [ %137, %163 ], [ %117, %134 ], [ %54, %83 ], [ %54, %65 ]
  %171 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %153, %163 ], [ %53, %134 ], [ %53, %83 ], [ %53, %65 ]
  %172 = phi void ()* (%struct.VkInstance_T*, i8*)* [ %138, %163 ], [ %116, %134 ], [ %52, %83 ], [ %52, %65 ]
  %173 = add i32 %51, -1
  %174 = icmp sgt i32 %173, -1
  %175 = add nsw i64 %50, -1
  br i1 %174, label %49, label %176

176:                                              ; preds = %166, %17, %4
  %177 = phi void ()* (%struct.VkInstance_T*, i8*)* [ @loader_gpa_instance_internal, %4 ], [ @loader_gpa_instance_internal, %17 ], [ %168, %166 ]
  %178 = load %struct.VkInstance_T*, %struct.VkInstance_T** %3, align 8
  %179 = call void ()* %177(%struct.VkInstance_T* %178, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.990, i64 0, i64 0)) #9
  %180 = icmp eq void ()* %179, null
  br i1 %180, label %181, label %182

181:                                              ; preds = %176
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %2, i32 8, i32 undef, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.991, i64 0, i64 0))
  br label %220

182:                                              ; preds = %176
  %183 = bitcast void ()* %179 to i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*
  %184 = bitcast %struct.VkLayerInstanceCreateInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %184) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 -86, i64 40, i1 false)
  %185 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %8, i64 0, i32 0
  store i32 47, i32* %185, align 8
  %186 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %8, i64 0, i32 1
  %187 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %6, i64 0, i32 1
  %188 = bitcast i8** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast i8** %186 to i64*
  store i64 %189, i64* %190, align 8
  %191 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %8, i64 0, i32 2
  store i32 1, i32* %191, align 8
  %192 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %8, i64 0, i32 3
  %193 = bitcast %union.anon.3* %192 to i32 (%struct.VkInstance_T*, i8*)**
  store i32 (%struct.VkInstance_T*, i8*)* @vkSetInstanceDispatch, i32 (%struct.VkInstance_T*, i8*)** %193, align 8
  %194 = bitcast %struct.VkLayerInstanceCreateInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %194) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 -86, i64 24, i1 false)
  %195 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %9, i64 0, i32 0
  store i32 47, i32* %195, align 8
  %196 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %9, i64 0, i32 1
  %197 = bitcast i8** %196 to %struct.VkLayerInstanceCreateInfo**
  store %struct.VkLayerInstanceCreateInfo* %8, %struct.VkLayerInstanceCreateInfo** %197, align 8
  %198 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %9, i64 0, i32 2
  store i32 2, i32* %198, align 8
  %199 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %9, i64 0, i32 3, i32 0, i32 0
  store i32 (%struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)**)* @loader_layer_create_device, i32 (%struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)**)** %199, align 8
  %200 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %9, i64 0, i32 3, i32 0, i32 1
  store void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*)* @loader_layer_destroy_device, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*)** %200, align 8
  %201 = bitcast %struct.VkLayerInstanceCreateInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %201) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 -86, i64 40, i1 false)
  %202 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %10, i64 0, i32 0
  store i32 47, i32* %202, align 8
  %203 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %10, i64 0, i32 1
  %204 = bitcast i8** %203 to %struct.VkLayerInstanceCreateInfo**
  store %struct.VkLayerInstanceCreateInfo* %9, %struct.VkLayerInstanceCreateInfo** %204, align 8
  %205 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %10, i64 0, i32 2
  store i32 3, i32* %205, align 8
  %206 = getelementptr inbounds %struct.VkLayerInstanceCreateInfo, %struct.VkLayerInstanceCreateInfo* %10, i64 0, i32 3
  %207 = bitcast %union.anon.3* %206 to i32*
  store i32 0, i32* %207, align 8
  %208 = bitcast i8** %187 to %struct.VkLayerInstanceCreateInfo**
  store %struct.VkLayerInstanceCreateInfo* %10, %struct.VkLayerInstanceCreateInfo** %208, align 8
  %209 = call i32 %183(%struct.VkInstanceCreateInfo* nonnull %6, %struct.VkAllocationCallbacks* %1, %struct.VkInstance_T** %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %201) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %194) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %184) #9
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %220

211:                                              ; preds = %182
  %212 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 0
  %213 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %212, align 8
  %214 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %213, i64 0, i32 0
  %215 = load %struct.VkInstance_T*, %struct.VkInstance_T** %3, align 8
  call void @loader_init_instance_core_dispatch_table(%struct.VkLayerInstanceDispatchTable_* %214, void ()* (%struct.VkInstance_T*, i8*)* %177, %struct.VkInstance_T* %215)
  %216 = bitcast %struct.VkInstance_T** %3 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %2, i64 0, i32 23
  %219 = bitcast %struct.VkInstance_T** %218 to i64*
  store i64 %217, i64* %219, align 8
  br label %220

220:                                              ; preds = %181, %182, %211
  %221 = phi i32 [ -3, %181 ], [ %209, %182 ], [ 0, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  ret i32 %221
}

; Function Attrs: nounwind ssp uwtable
define internal void ()* @loader_gpa_instance_internal(%struct.VkInstance_T* readonly, i8*) #0 {
  %3 = alloca i8, align 1
  %4 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.987, i64 0, i64 0)) #15
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %54, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1198, i64 0, i64 0)) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %54, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.990, i64 0, i64 0)) #15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %54, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %54, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.72, i64 0, i64 0)) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0)) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %54, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74, i64 0, i64 0)) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %54, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i64 0, i64 0)) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0)) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %54, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i64 0, i64 0)) #15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %54, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0)) #15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79, i64 0, i64 0)) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %54, label %39

39:                                               ; preds = %36
  %40 = icmp eq %struct.VkInstance_T* %0, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %39
  %42 = bitcast %struct.VkInstance_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %43 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %42, align 8
  %44 = icmp eq %struct.VkLayerInstanceDispatchTable_* %43, null
  br i1 %44, label %54, label %45

45:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 -86, i8* %3, align 1
  %46 = call i8* @loader_lookup_instance_dispatch_table(%struct.VkLayerInstanceDispatchTable_* nonnull %43, i8* %1, i8* nonnull %3)
  %47 = load i8, i8* %3, align 1, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast i8* %46 to void ()*
  br label %52

51:                                               ; preds = %45
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* null, i32 16, i32 undef, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1199, i64 0, i64 0), i8* %1)
  br label %52

52:                                               ; preds = %51, %49
  %53 = phi void ()* [ %50, %49 ], [ null, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %54

54:                                               ; preds = %52, %41, %39, %36, %33, %30, %27, %24, %21, %18, %15, %12, %9, %6, %2
  %55 = phi void ()* [ bitcast (void ()* (%struct.VkInstance_T*, i8*)* @loader_gpa_instance_internal to void ()*), %2 ], [ bitcast (void ()* (%struct.VkInstance_T*, i8*)* @loader_gpdpa_instance_terminator to void ()*), %6 ], [ bitcast (i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* @terminator_CreateInstance to void ()*), %9 ], [ bitcast (i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* @terminator_CreateDevice to void ()*), %12 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)* @terminator_SetDebugUtilsObjectNameEXT to void ()*), %15 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)* @terminator_SetDebugUtilsObjectTagEXT to void ()*), %18 ], [ bitcast (void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_QueueBeginDebugUtilsLabelEXT to void ()*), %21 ], [ bitcast (void (%struct.VkQueue_T*)* @terminator_QueueEndDebugUtilsLabelEXT to void ()*), %24 ], [ bitcast (void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_QueueInsertDebugUtilsLabelEXT to void ()*), %27 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_CmdBeginDebugUtilsLabelEXT to void ()*), %30 ], [ bitcast (void (%struct.VkCommandBuffer_T*)* @terminator_CmdEndDebugUtilsLabelEXT to void ()*), %33 ], [ bitcast (void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)* @terminator_CmdInsertDebugUtilsLabelEXT to void ()*), %36 ], [ null, %39 ], [ %53, %52 ], [ null, %41 ]
  ret void ()* %55
}

; Function Attrs: nounwind ssp uwtable
define internal void ()* @loader_gpdpa_instance_internal(%struct.VkInstance_T* readonly, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = icmp eq %struct.VkInstance_T* %0, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.VkInstance_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %10 = icmp eq %struct.VkLayerInstanceDispatchTable_* %8, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %12 = call i8* @loader_lookup_instance_dispatch_table(%struct.VkLayerInstanceDispatchTable_* nonnull %8, i8* %1, i8* nonnull %4)
  store i8* %12, i8** %3, align 8
  %13 = load i8, i8* %4, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to void ()*
  br label %38

17:                                               ; preds = %11
  %18 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %19 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %20 = icmp eq %struct.loader_instance* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17, %27
  %22 = phi %struct.loader_instance* [ %29, %27 ], [ %19, %17 ]
  %23 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %22, i64 0, i32 0
  %24 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %23, align 8
  %25 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %24, i64 0, i32 0
  %26 = icmp eq %struct.VkLayerInstanceDispatchTable_* %25, %18
  br i1 %26, label %31, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %22, i64 0, i32 12
  %29 = load %struct.loader_instance*, %struct.loader_instance** %28, align 8
  %30 = icmp eq %struct.loader_instance* %29, null
  br i1 %30, label %31, label %21

31:                                               ; preds = %21, %27, %17
  %32 = phi %struct.loader_instance* [ null, %17 ], [ null, %27 ], [ %22, %21 ]
  %33 = call zeroext i1 @loader_phys_dev_ext_gpa(%struct.loader_instance* %32, i8* %1, i1 zeroext true, i8** null, i8** nonnull %3)
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = bitcast i8** %3 to void ()**
  %36 = load void ()*, void ()** %35, align 8
  br label %38

37:                                               ; preds = %31
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* null, i32 16, i32 undef, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1201, i64 0, i64 0), i8* %1)
  br label %38

38:                                               ; preds = %37, %34, %15
  %39 = phi void ()* [ %16, %15 ], [ %36, %34 ], [ null, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br label %40

40:                                               ; preds = %6, %38
  %41 = phi void ()* [ %39, %38 ], [ null, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %42

42:                                               ; preds = %2, %40
  %43 = phi void ()* [ %41, %40 ], [ null, %2 ]
  ret void ()* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loaderActivateInstanceLayerExtensions(%struct.loader_instance* nocapture readonly, %struct.VkInstance_T*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 0
  %4 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %3, align 8
  %5 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %4, i64 0, i32 0
  %6 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %4, i64 0, i32 0, i32 10
  %7 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %6, align 8
  tail call void @loader_init_instance_extension_dispatch_table(%struct.VkLayerInstanceDispatchTable_* %5, void ()* (%struct.VkInstance_T*, i8*)* %7, %struct.VkInstance_T* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loaderValidateLayers(%struct.loader_instance*, i32, i8** nocapture readonly, %struct.loader_layer_list* nocapture readonly) local_unnamed_addr #0 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %97, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %3, i64 0, i32 1
  %8 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %3, i64 0, i32 2
  br label %9

9:                                                ; preds = %94, %6
  %10 = phi i32 [ 0, %6 ], [ %95, %94 ]
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8*, i8** %2, i64 %11
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %75, label %15

15:                                               ; preds = %9, %66
  %16 = phi i32 [ %70, %66 ], [ 0, %9 ]
  %17 = phi i32 [ %67, %66 ], [ 0, %9 ]
  %18 = phi i32 [ %68, %66 ], [ 0, %9 ]
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %13, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %72, label %23

23:                                               ; preds = %15
  %24 = icmp eq i32 %16, 256
  br i1 %24, label %75, label %25

25:                                               ; preds = %23
  %26 = icmp slt i8 %21, 32
  %27 = icmp eq i8 %21, 127
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %66

29:                                               ; preds = %25
  %30 = sext i8 %21 to i32
  %31 = and i32 %30, -32
  %32 = icmp eq i32 %31, -64
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = and i32 %30, -16
  %35 = icmp eq i32 %34, -32
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = and i32 %30, -8
  %38 = icmp eq i32 %37, -16
  %39 = select i1 %38, i32 %18, i32 2
  %40 = select i1 %38, i32 3, i32 %17
  br label %41

41:                                               ; preds = %36, %33, %29
  %42 = phi i32 [ %18, %29 ], [ %18, %33 ], [ %39, %36 ]
  %43 = phi i32 [ 1, %29 ], [ 2, %33 ], [ %40, %36 ]
  %44 = icmp sgt i32 %43, 0
  %45 = icmp slt i32 %16, 256
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %66

47:                                               ; preds = %41, %53
  %48 = phi i64 [ %51, %53 ], [ %19, %41 ]
  %49 = phi i32 [ %60, %53 ], [ 0, %41 ]
  %50 = phi i32 [ %59, %53 ], [ %42, %41 ]
  %51 = add nsw i64 %48, 1
  %52 = icmp eq i64 %51, 256
  br i1 %52, label %75, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds i8, i8* %13, i64 %51
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, -64
  %57 = icmp eq i8 %56, -128
  %58 = or i32 %50, 2
  %59 = select i1 %57, i32 %50, i32 %58
  %60 = add nuw nsw i32 %49, 1
  %61 = icmp slt i32 %60, %43
  %62 = icmp slt i64 %51, 256
  %63 = and i1 %62, %61
  br i1 %63, label %47, label %64

64:                                               ; preds = %53
  %65 = trunc i64 %51 to i32
  br label %66

66:                                               ; preds = %64, %41, %25
  %67 = phi i32 [ %43, %41 ], [ %43, %64 ], [ 0, %25 ]
  %68 = phi i32 [ %42, %41 ], [ %59, %64 ], [ %18, %25 ]
  %69 = phi i32 [ %16, %41 ], [ %65, %64 ], [ %16, %25 ]
  %70 = add nsw i32 %69, 1
  %71 = icmp slt i32 %69, 256
  br i1 %71, label %15, label %72

72:                                               ; preds = %15, %66
  %73 = phi i32 [ %68, %66 ], [ %18, %15 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %9, %72, %23, %47
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.998, i64 0, i64 0))
  br label %97

76:                                               ; preds = %72
  %77 = load i32, i32* %7, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %76
  %80 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %8, align 8
  %81 = zext i32 %77 to i64
  br label %84

82:                                               ; preds = %84
  %83 = icmp eq i64 %90, %81
  br i1 %83, label %93, label %84

84:                                               ; preds = %82, %79
  %85 = phi i64 [ 0, %79 ], [ %90, %82 ]
  %86 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %80, i64 %85
  %87 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %86, i64 0, i32 0, i32 0, i64 0
  %88 = tail call i32 @strcmp(i8* nonnull %13, i8* %87) #15
  %89 = icmp eq i32 %88, 0
  %90 = add nuw nsw i64 %85, 1
  br i1 %89, label %91, label %82

91:                                               ; preds = %84
  %92 = icmp eq %struct.loader_layer_properties* %86, null
  br i1 %92, label %93, label %94

93:                                               ; preds = %76, %91, %82
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.999, i64 0, i64 0), i32 %10)
  br label %97

94:                                               ; preds = %91
  %95 = add i32 %10, 1
  %96 = icmp eq i32 %95, %1
  br i1 %96, label %97, label %9

97:                                               ; preds = %94, %4, %93, %75
  %98 = phi i32 [ -6, %75 ], [ -6, %93 ], [ 0, %4 ], [ 0, %94 ]
  ret i32 %98
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vk_string_validate(i32, i8* readonly) local_unnamed_addr #11 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %69, label %4

4:                                                ; preds = %2
  %5 = icmp slt i32 %0, 0
  br i1 %5, label %69, label %6

6:                                                ; preds = %4
  %7 = sext i32 %0 to i64
  br label %8

8:                                                ; preds = %6, %63
  %9 = phi i32 [ %67, %63 ], [ 0, %6 ]
  %10 = phi i32 [ %64, %63 ], [ 0, %6 ]
  %11 = phi i32 [ %65, %63 ], [ 0, %6 ]
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %69, label %16

16:                                               ; preds = %8
  %17 = icmp eq i32 %9, %0
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = or i32 %11, 1
  br label %69

20:                                               ; preds = %16
  %21 = icmp slt i8 %14, 32
  %22 = icmp eq i8 %14, 127
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %63

24:                                               ; preds = %20
  %25 = sext i8 %14 to i32
  %26 = and i32 %25, -32
  %27 = icmp eq i32 %26, -64
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = and i32 %25, -16
  %30 = icmp eq i32 %29, -32
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = and i32 %25, -8
  %33 = icmp eq i32 %32, -16
  %34 = select i1 %33, i32 %11, i32 2
  %35 = select i1 %33, i32 3, i32 %10
  br label %36

36:                                               ; preds = %31, %28, %24
  %37 = phi i32 [ %11, %24 ], [ %11, %28 ], [ %34, %31 ]
  %38 = phi i32 [ 1, %24 ], [ 2, %28 ], [ %35, %31 ]
  %39 = icmp sgt i32 %38, 0
  %40 = icmp slt i32 %9, %0
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %63

42:                                               ; preds = %36, %50
  %43 = phi i64 [ %46, %50 ], [ %12, %36 ]
  %44 = phi i32 [ %57, %50 ], [ 0, %36 ]
  %45 = phi i32 [ %56, %50 ], [ %37, %36 ]
  %46 = add nsw i64 %43, 1
  %47 = icmp eq i64 %46, %7
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = or i32 %45, 1
  br label %69

50:                                               ; preds = %42
  %51 = getelementptr inbounds i8, i8* %1, i64 %46
  %52 = load i8, i8* %51, align 1
  %53 = and i8 %52, -64
  %54 = icmp eq i8 %53, -128
  %55 = or i32 %45, 2
  %56 = select i1 %54, i32 %45, i32 %55
  %57 = add nuw nsw i32 %44, 1
  %58 = icmp slt i32 %57, %38
  %59 = icmp slt i64 %46, %7
  %60 = and i1 %59, %58
  br i1 %60, label %42, label %61

61:                                               ; preds = %50
  %62 = trunc i64 %46 to i32
  br label %63

63:                                               ; preds = %20, %61, %36
  %64 = phi i32 [ %38, %36 ], [ %38, %61 ], [ 0, %20 ]
  %65 = phi i32 [ %37, %36 ], [ %56, %61 ], [ %11, %20 ]
  %66 = phi i32 [ %9, %36 ], [ %62, %61 ], [ %9, %20 ]
  %67 = add nsw i32 %66, 1
  %68 = icmp slt i32 %66, %0
  br i1 %68, label %8, label %69

69:                                               ; preds = %63, %8, %48, %4, %18, %2
  %70 = phi i32 [ 4, %2 ], [ %19, %18 ], [ 0, %4 ], [ %49, %48 ], [ %65, %63 ], [ %11, %8 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @loader_validate_instance_extensions(%struct.loader_instance*, %struct.loader_extension_list* nocapture readonly, %struct.loader_layer_list* nocapture readonly, %struct.VkInstanceCreateInfo* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca %struct.loader_layer_list, align 8
  %6 = alloca %struct.loader_layer_list, align 8
  %7 = bitcast %struct.loader_layer_list* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = bitcast %struct.loader_layer_list* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 1
  %10 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false)
  %11 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 0
  store i64 382464, i64* %11, align 8
  %12 = icmp eq %struct.loader_instance* %0, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %15 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %14, align 8
  %16 = icmp eq i8* (i8*, i64, i64, i32)* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i8* %15(i8* %19, i64 382464, i64 8, i32 4) #9
  br label %23

21:                                               ; preds = %13, %4
  %22 = tail call noalias i8* @malloc(i64 382464) #9
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi i8* [ %20, %17 ], [ %22, %21 ]
  %25 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 2
  %26 = bitcast %struct.loader_layer_properties** %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = icmp eq i8* %24, null
  br i1 %27, label %246, label %28

28:                                               ; preds = %23
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 382464, i1 false) #9
  %29 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 1
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 0
  store i64 382464, i64* %30, align 8
  br i1 %12, label %39, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %33 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %32, align 8
  %34 = icmp eq i8* (i8*, i64, i64, i32)* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = tail call i8* %33(i8* %37, i64 382464, i64 8, i32 4) #9
  br label %41

39:                                               ; preds = %31, %28
  %40 = tail call noalias i8* @malloc(i64 382464) #9
  br label %41

41:                                               ; preds = %39, %35
  %42 = phi i8* [ %38, %35 ], [ %40, %39 ]
  %43 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 2
  %44 = bitcast %struct.loader_layer_properties** %43 to i8**
  store i8* %42, i8** %44, align 8
  %45 = icmp eq i8* %42, null
  br i1 %45, label %233, label %46

46:                                               ; preds = %41
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 382464, i1 false) #9
  %47 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 1
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %69, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 2
  br label %53

53:                                               ; preds = %64, %51
  %54 = phi i32 [ %49, %51 ], [ %65, %64 ]
  %55 = phi i64 [ 0, %51 ], [ %66, %64 ]
  %56 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %52, align 8
  %57 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %56, i64 %55, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %56, i64 %55
  call fastcc void @loaderAddImplicitLayer(%struct.loader_instance* %0, %struct.loader_layer_properties* %62, %struct.loader_layer_list* nonnull %5, %struct.loader_layer_list* nonnull %6, %struct.loader_layer_list* %2) #9
  %63 = load i32, i32* %48, align 8
  br label %64

64:                                               ; preds = %61, %53
  %65 = phi i32 [ %63, %61 ], [ %54, %53 ]
  %66 = add nuw nsw i64 %55, 1
  %67 = zext i32 %65 to i64
  %68 = icmp ult i64 %66, %67
  br i1 %68, label %53, label %69

69:                                               ; preds = %64, %46
  %70 = call fastcc i32 @loaderAddEnvironmentLayers(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %5, %struct.loader_layer_list* nonnull %6, %struct.loader_layer_list* %2)
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %233

72:                                               ; preds = %69
  %73 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %3, i64 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %3, i64 0, i32 5
  %76 = load i8**, i8*** %75, align 8
  %77 = call fastcc i32 @loaderAddLayerNamesToList(%struct.loader_instance* %0, %struct.loader_layer_list* nonnull %5, %struct.loader_layer_list* nonnull %6, i32 %74, i8** %76, %struct.loader_layer_list* %2)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %233

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %3, i64 0, i32 6
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %233, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %3, i64 0, i32 7
  %85 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 1
  %86 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %1, i64 0, i32 2
  %87 = load i8**, i8*** %84, align 8
  br label %88

88:                                               ; preds = %83, %229
  %89 = phi i8** [ %87, %83 ], [ %169, %229 ]
  %90 = phi i32 [ 0, %83 ], [ %230, %229 ]
  %91 = phi i8 [ 1, %83 ], [ %166, %229 ]
  %92 = zext i32 %90 to i64
  %93 = getelementptr inbounds i8*, i8** %89, i64 %92
  %94 = load i8*, i8** %93, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %156, label %96

96:                                               ; preds = %88, %147
  %97 = phi i32 [ %151, %147 ], [ 0, %88 ]
  %98 = phi i32 [ %148, %147 ], [ 0, %88 ]
  %99 = phi i32 [ %149, %147 ], [ 0, %88 ]
  %100 = sext i32 %97 to i64
  %101 = getelementptr inbounds i8, i8* %94, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %153, label %104

104:                                              ; preds = %96
  %105 = icmp eq i32 %97, 256
  br i1 %105, label %156, label %106

106:                                              ; preds = %104
  %107 = icmp slt i8 %102, 32
  %108 = icmp eq i8 %102, 127
  %109 = or i1 %107, %108
  br i1 %109, label %110, label %147

110:                                              ; preds = %106
  %111 = sext i8 %102 to i32
  %112 = and i32 %111, -32
  %113 = icmp eq i32 %112, -64
  br i1 %113, label %122, label %114

114:                                              ; preds = %110
  %115 = and i32 %111, -16
  %116 = icmp eq i32 %115, -32
  br i1 %116, label %122, label %117

117:                                              ; preds = %114
  %118 = and i32 %111, -8
  %119 = icmp eq i32 %118, -16
  %120 = select i1 %119, i32 %99, i32 2
  %121 = select i1 %119, i32 3, i32 %98
  br label %122

122:                                              ; preds = %117, %114, %110
  %123 = phi i32 [ %99, %110 ], [ %99, %114 ], [ %120, %117 ]
  %124 = phi i32 [ 1, %110 ], [ 2, %114 ], [ %121, %117 ]
  %125 = icmp sgt i32 %124, 0
  %126 = icmp slt i32 %97, 256
  %127 = and i1 %126, %125
  br i1 %127, label %128, label %147

128:                                              ; preds = %122, %134
  %129 = phi i64 [ %132, %134 ], [ %100, %122 ]
  %130 = phi i32 [ %141, %134 ], [ 0, %122 ]
  %131 = phi i32 [ %140, %134 ], [ %123, %122 ]
  %132 = add nsw i64 %129, 1
  %133 = icmp eq i64 %132, 256
  br i1 %133, label %156, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds i8, i8* %94, i64 %132
  %136 = load i8, i8* %135, align 1
  %137 = and i8 %136, -64
  %138 = icmp eq i8 %137, -128
  %139 = or i32 %131, 2
  %140 = select i1 %138, i32 %131, i32 %139
  %141 = add nuw nsw i32 %130, 1
  %142 = icmp slt i32 %141, %124
  %143 = icmp slt i64 %132, 256
  %144 = and i1 %143, %142
  br i1 %144, label %128, label %145

145:                                              ; preds = %134
  %146 = trunc i64 %132 to i32
  br label %147

147:                                              ; preds = %145, %122, %106
  %148 = phi i32 [ %124, %122 ], [ %124, %145 ], [ 0, %106 ]
  %149 = phi i32 [ %123, %122 ], [ %140, %145 ], [ %99, %106 ]
  %150 = phi i32 [ %97, %122 ], [ %146, %145 ], [ %97, %106 ]
  %151 = add nsw i32 %150, 1
  %152 = icmp slt i32 %150, 256
  br i1 %152, label %96, label %153

153:                                              ; preds = %96, %147
  %154 = phi i32 [ %149, %147 ], [ %99, %96 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %88, %153, %104, %128
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1000, i64 0, i64 0))
  br label %233

157:                                              ; preds = %153
  %158 = call i8* @getenv(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.944, i64 0, i64 0)) #9
  %159 = icmp eq i8* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %157
  %161 = call i64 @strtol(i8* nocapture nonnull %158, i8** null, i32 10) #9
  %162 = trunc i64 %161 to i32
  %163 = icmp eq i32 %162, 0
  %164 = select i1 %163, i8 %91, i8 0
  br label %165

165:                                              ; preds = %160, %157
  %166 = phi i8 [ %91, %157 ], [ %164, %160 ]
  %167 = and i8 %166, 1
  %168 = icmp eq i8 %167, 0
  %169 = load i8**, i8*** %84, align 8
  %170 = getelementptr inbounds i8*, i8** %169, i64 %92
  %171 = load i8*, i8** %170, align 8
  br i1 %168, label %182, label %174

172:                                              ; preds = %174
  %173 = icmp eq i64 %180, 20
  br i1 %173, label %181, label %174

174:                                              ; preds = %165, %172
  %175 = phi i64 [ %180, %172 ], [ 0, %165 ]
  %176 = getelementptr inbounds [21 x i8*], [21 x i8*]* @LOADER_INSTANCE_EXTENSIONS, i64 0, i64 %175
  %177 = load i8*, i8** %176, align 8
  %178 = call i32 @strcmp(i8* %171, i8* %177) #15
  %179 = icmp eq i32 %178, 0
  %180 = add nuw nsw i64 %175, 1
  br i1 %179, label %182, label %172

181:                                              ; preds = %172
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.1001, i64 0, i64 0), i8* %171)
  br label %233

182:                                              ; preds = %174, %165
  %183 = load i32, i32* %85, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %199, label %185

185:                                              ; preds = %182
  %186 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %86, align 8
  %187 = zext i32 %183 to i64
  br label %190

188:                                              ; preds = %190
  %189 = icmp eq i64 %196, %187
  br i1 %189, label %199, label %190

190:                                              ; preds = %188, %185
  %191 = phi i64 [ 0, %185 ], [ %196, %188 ]
  %192 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %186, i64 %191
  %193 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %192, i64 0, i32 0, i64 0
  %194 = call i32 @strcmp(i8* %171, i8* %193) #15
  %195 = icmp eq i32 %194, 0
  %196 = add nuw nsw i64 %191, 1
  br i1 %195, label %197, label %188

197:                                              ; preds = %190
  %198 = icmp eq %struct.VkExtensionProperties* %192, null
  br i1 %198, label %199, label %229

199:                                              ; preds = %188, %182, %197
  %200 = load i32, i32* %47, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %228, label %202

202:                                              ; preds = %199
  %203 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %43, align 8
  %204 = zext i32 %200 to i64
  br label %205

205:                                              ; preds = %202, %225
  %206 = phi i64 [ 0, %202 ], [ %226, %225 ]
  %207 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %203, i64 %206, i32 6, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %225, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %203, i64 %206, i32 6, i32 2
  %212 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %211, align 8
  %213 = zext i32 %208 to i64
  br label %216

214:                                              ; preds = %216
  %215 = icmp eq i64 %222, %213
  br i1 %215, label %225, label %216

216:                                              ; preds = %214, %210
  %217 = phi i64 [ 0, %210 ], [ %222, %214 ]
  %218 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %212, i64 %217
  %219 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %218, i64 0, i32 0, i64 0
  %220 = call i32 @strcmp(i8* %171, i8* %219) #15
  %221 = icmp eq i32 %220, 0
  %222 = add nuw nsw i64 %217, 1
  br i1 %221, label %223, label %214

223:                                              ; preds = %216
  %224 = icmp eq %struct.VkExtensionProperties* %218, null
  br i1 %224, label %225, label %229

225:                                              ; preds = %214, %205, %223
  %226 = add nuw nsw i64 %206, 1
  %227 = icmp ult i64 %226, %204
  br i1 %227, label %205, label %228

228:                                              ; preds = %199, %225
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.1002, i64 0, i64 0), i8* %171)
  br label %233

229:                                              ; preds = %223, %197
  %230 = add i32 %90, 1
  %231 = load i32, i32* %80, align 8
  %232 = icmp ult i32 %230, %231
  br i1 %232, label %88, label %233

233:                                              ; preds = %229, %79, %156, %181, %228, %41, %72, %69
  %234 = phi i32 [ -1, %41 ], [ %77, %72 ], [ %70, %69 ], [ -7, %156 ], [ -7, %181 ], [ -7, %228 ], [ 0, %79 ], [ 0, %229 ]
  %235 = load i8*, i8** %26, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %246, label %237

237:                                              ; preds = %233
  br i1 %12, label %245, label %238

238:                                              ; preds = %237
  %239 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %240 = load void (i8*, i8*)*, void (i8*, i8*)** %239, align 8
  %241 = icmp eq void (i8*, i8*)* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %244 = load i8*, i8** %243, align 8
  call void %240(i8* %244, i8* nonnull %235) #9
  br label %246

245:                                              ; preds = %238, %237
  call void @free(i8* nonnull %235) #9
  br label %246

246:                                              ; preds = %23, %233, %242, %245
  %247 = phi i32 [ %234, %233 ], [ %234, %242 ], [ %234, %245 ], [ -1, %23 ]
  %248 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 1
  store i32 0, i32* %248, align 8
  store i64 0, i64* %11, align 8
  %249 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %6, i64 0, i32 2
  %250 = bitcast %struct.loader_layer_properties** %249 to i8**
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %262, label %253

253:                                              ; preds = %246
  br i1 %12, label %261, label %254

254:                                              ; preds = %253
  %255 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %256 = load void (i8*, i8*)*, void (i8*, i8*)** %255, align 8
  %257 = icmp eq void (i8*, i8*)* %256, null
  br i1 %257, label %261, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %260 = load i8*, i8** %259, align 8
  call void %256(i8* %260, i8* nonnull %251) #9
  br label %262

261:                                              ; preds = %254, %253
  call void @free(i8* nonnull %251) #9
  br label %262

262:                                              ; preds = %261, %258, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret i32 %247
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_CreateInstance(%struct.VkInstanceCreateInfo* readonly, %struct.VkAllocationCallbacks*, %struct.VkInstance_T** nocapture readonly) #0 {
  %4 = alloca %struct.VkInstanceCreateInfo, align 8
  %5 = alloca %struct.loader_extension_list, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.VkApplicationInfo, align 8
  %8 = bitcast %struct.VkInstanceCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  %9 = bitcast %struct.VkInstance_T** %2 to %struct.loader_instance**
  %10 = load %struct.loader_instance*, %struct.loader_instance** %9, align 8
  %11 = bitcast %struct.VkInstanceCreateInfo* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %11, i64 56, i1 false)
  %12 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 4
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 5
  store i8** null, i8*** %13, align 8
  %14 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = shl nuw nsw i64 %16, 3
  %18 = alloca i8*, i64 %16, align 16
  %19 = bitcast i8** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 %17, i1 false)
  %20 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 7
  store i8** %18, i8*** %20, align 8
  %21 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 15, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %399, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 15, i32 2
  %26 = icmp eq %struct.loader_instance* %10, null
  %27 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 33, i32 1
  %28 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 33, i32 0
  %29 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 14
  %30 = bitcast %struct.loader_icd_term** %29 to i64*
  %31 = bitcast %struct.loader_icd_term** %29 to i8**
  %32 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 13
  %33 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 3
  %34 = bitcast %struct.VkApplicationInfo** %33 to i64*
  %35 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 3
  %36 = bitcast %struct.VkApplicationInfo** %35 to i64*
  %37 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 6
  %38 = bitcast %struct.loader_extension_list* %5 to i8*
  %39 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 1
  %40 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 0
  %41 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 2
  %42 = bitcast %struct.VkExtensionProperties** %41 to i8**
  %43 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 33, i32 3
  %44 = icmp eq %struct.VkAllocationCallbacks* %1, null
  %45 = bitcast %struct.VkAllocationCallbacks* %1 to i8*
  %46 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 7
  %47 = bitcast i32* %6 to i8*
  %48 = bitcast %struct.VkApplicationInfo* %7 to i8*
  %49 = icmp eq %struct.VkInstanceCreateInfo* %0, null
  %50 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %7, i64 0, i32 6
  br label %51

51:                                               ; preds = %24, %383
  %52 = phi i64 [ 0, %24 ], [ %386, %383 ]
  %53 = phi i8 [ 0, %24 ], [ %384, %383 ]
  %54 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %25, align 8
  %55 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %54, i64 %52
  br i1 %26, label %62, label %56

56:                                               ; preds = %51
  %57 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %27, align 8
  %58 = icmp eq i8* (i8*, i64, i64, i32)* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = load i8*, i8** %28, align 8
  %61 = call i8* %57(i8* %60, i64 2776, i64 8, i32 4) #9
  br label %64

62:                                               ; preds = %56, %51
  %63 = call noalias i8* @malloc(i64 2776) #9
  br label %64

64:                                               ; preds = %62, %59
  %65 = phi i8* [ %61, %59 ], [ %63, %62 ]
  %66 = icmp eq i8* %65, null
  br i1 %66, label %79, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds i8, i8* %65, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 2760, i1 false) #9
  %69 = bitcast i8* %65 to %struct.loader_icd_term*
  %70 = bitcast i8* %65 to %struct.loader_scanned_icd**
  store %struct.loader_scanned_icd* %55, %struct.loader_scanned_icd** %70, align 8
  %71 = getelementptr inbounds i8, i8* %65, i64 8
  %72 = bitcast i8* %71 to %struct.loader_instance**
  store %struct.loader_instance* %10, %struct.loader_instance** %72, align 8
  %73 = load i64, i64* %30, align 8
  %74 = getelementptr inbounds i8, i8* %65, i64 768
  %75 = bitcast i8* %74 to i64*
  store i64 %73, i64* %75, align 8
  store i8* %65, i8** %31, align 8
  %76 = load i32, i32* %32, align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* %32, align 8
  %78 = load i64, i64* %34, align 8
  store i64 %78, i64* %36, align 8
  store i32 0, i32* %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %10, i32 16, i32 undef, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.943, i64 0, i64 0))
  store i32 0, i32* %39, align 8
  store i64 0, i64* %40, align 8
  br i1 %26, label %87, label %81

79:                                               ; preds = %64
  %80 = trunc i64 %52 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %10, i32 8, i32 undef, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1006, i64 0, i64 0), i32 %80)
  br label %399

81:                                               ; preds = %67
  %82 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %27, align 8
  %83 = icmp eq i8* (i8*, i64, i64, i32)* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = load i8*, i8** %28, align 8
  %86 = call i8* %82(i8* %85, i64 8320, i64 8, i32 4) #9
  br label %89

87:                                               ; preds = %81, %67
  %88 = call noalias i8* @malloc(i64 8320) #9
  br label %89

89:                                               ; preds = %87, %84
  %90 = phi i8* [ %86, %84 ], [ %88, %87 ]
  store i8* %90, i8** %42, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %10, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0)) #9
  br label %379

93:                                               ; preds = %89
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %90, i8 0, i64 8320, i1 false) #9
  store i64 8320, i64* %40, align 8
  %94 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %70, align 8
  %95 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %94, i64 0, i32 7
  %96 = load i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)** %95, align 8
  %97 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %94, i64 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = call fastcc i32 @loader_add_instance_extensions(%struct.loader_instance* %10, i32 (i8*, i32*, %struct.VkExtensionProperties*)* %96, i8* %98, %struct.loader_extension_list* nonnull %5)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %114

101:                                              ; preds = %93
  %102 = load i32, i32* %14, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = load i8*, i8** %42, align 8
  br label %181

106:                                              ; preds = %101
  %107 = load i32, i32* %39, align 8
  %108 = icmp eq i32 %107, 0
  %109 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %41, align 8
  %110 = zext i32 %107 to i64
  %111 = load i8**, i8*** %46, align 8
  %112 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %109, i64 0, i32 0, i64 0
  %113 = zext i32 %102 to i64
  br label %196

114:                                              ; preds = %93
  %115 = load i8*, i8** %42, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %124, label %117

117:                                              ; preds = %114
  br i1 %26, label %123, label %118

118:                                              ; preds = %117
  %119 = load void (i8*, i8*)*, void (i8*, i8*)** %43, align 8
  %120 = icmp eq void (i8*, i8*)* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %118
  %122 = load i8*, i8** %28, align 8
  call void %119(i8* %122, i8* nonnull %115) #9
  br label %124

123:                                              ; preds = %118, %117
  call void @free(i8* nonnull %115) #9
  br label %124

124:                                              ; preds = %114, %121, %123
  store i32 0, i32* %39, align 8
  store i64 0, i64* %40, align 8
  %125 = icmp eq i32 %99, -1
  br i1 %125, label %379, label %126

126:                                              ; preds = %124
  %127 = bitcast i8* %74 to %struct.loader_icd_term**
  %128 = load i64, i64* %75, align 8
  store i64 %128, i64* %30, align 8
  store %struct.loader_icd_term* null, %struct.loader_icd_term** %127, align 8
  %129 = load i32, i32* %32, align 8
  %130 = add i32 %129, -1
  store i32 %130, i32* %32, align 8
  %131 = bitcast i8* %68 to %struct.loader_device**
  %132 = load %struct.loader_device*, %struct.loader_device** %131, align 8
  %133 = icmp eq %struct.loader_device* %132, null
  br i1 %133, label %134, label %141

134:                                              ; preds = %179, %126
  br i1 %26, label %140, label %135

135:                                              ; preds = %134
  %136 = load void (i8*, i8*)*, void (i8*, i8*)** %43, align 8
  %137 = icmp eq void (i8*, i8*)* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = load i8*, i8** %28, align 8
  call void %136(i8* %139, i8* nonnull %65) #9
  br label %383

140:                                              ; preds = %135, %134
  call void @free(i8* nonnull %65) #9
  br label %383

141:                                              ; preds = %126, %179
  %142 = phi %struct.loader_device* [ %144, %179 ], [ %132, %126 ]
  %143 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 8
  %144 = load %struct.loader_device*, %struct.loader_device** %143, align 8
  br i1 %44, label %148, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 6
  %147 = bitcast %struct.VkAllocationCallbacks* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %45, i64 48, i1 false) #9
  br label %148

148:                                              ; preds = %145, %141
  %149 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 5, i32 2
  %150 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %149, align 8
  %151 = icmp eq %struct.loader_layer_properties* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 5
  call void @loaderDeactivateLayers(%struct.loader_instance* %10, %struct.loader_device* nonnull %142, %struct.loader_layer_list* %153) #9
  br label %154

154:                                              ; preds = %152, %148
  %155 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 4, i32 2
  %156 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %155, align 8
  %157 = icmp eq %struct.loader_layer_properties* %156, null
  %158 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %156, i64 0, i32 0, i32 0, i64 0
  br i1 %157, label %170, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 6, i32 3
  %161 = load void (i8*, i8*)*, void (i8*, i8*)** %160, align 8
  %162 = icmp eq void (i8*, i8*)* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 6, i32 0
  %165 = load i8*, i8** %164, align 8
  call void %161(i8* %165, i8* nonnull %158) #9
  br label %167

166:                                              ; preds = %159
  call void @free(i8* nonnull %158) #9
  br label %167

167:                                              ; preds = %166, %163
  %168 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 4, i32 1
  store i32 0, i32* %168, align 8
  %169 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 4, i32 0
  store i64 0, i64* %169, align 8
  br label %170

170:                                              ; preds = %154, %167
  %171 = bitcast %struct.loader_device* %142 to i8*
  %172 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 6, i32 3
  %173 = load void (i8*, i8*)*, void (i8*, i8*)** %172, align 8
  %174 = icmp eq void (i8*, i8*)* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %142, i64 0, i32 6, i32 0
  %177 = load i8*, i8** %176, align 8
  call void %173(i8* %177, i8* nonnull %171) #9
  br label %179

178:                                              ; preds = %170
  call void @free(i8* nonnull %171) #9
  br label %179

179:                                              ; preds = %175, %178
  %180 = icmp eq %struct.loader_device* %144, null
  br i1 %180, label %134, label %141

181:                                              ; preds = %218, %104
  %182 = phi i8* [ %105, %104 ], [ %112, %218 ]
  %183 = icmp eq i8* %182, null
  br i1 %183, label %191, label %184

184:                                              ; preds = %181
  br i1 %26, label %190, label %185

185:                                              ; preds = %184
  %186 = load void (i8*, i8*)*, void (i8*, i8*)** %43, align 8
  %187 = icmp eq void (i8*, i8*)* %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = load i8*, i8** %28, align 8
  call void %186(i8* %189, i8* nonnull %182) #9
  br label %191

190:                                              ; preds = %185, %184
  call void @free(i8* nonnull %182) #9
  br label %191

191:                                              ; preds = %181, %188, %190
  store i32 0, i32* %39, align 8
  store i64 0, i64* %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #9
  store i32 4194304, i32* %6, align 4
  %192 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %70, align 8
  %193 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %192, i64 0, i32 2
  %194 = load i32, i32* %193, align 8
  %195 = icmp ugt i32 %194, 4198399
  br i1 %195, label %221, label %234

196:                                              ; preds = %106, %218
  %197 = phi i64 [ 0, %106 ], [ %219, %218 ]
  %198 = getelementptr inbounds i8*, i8** %111, i64 %197
  %199 = load i8*, i8** %198, align 8
  %200 = ptrtoint i8* %199 to i64
  br i1 %108, label %218, label %203

201:                                              ; preds = %203
  %202 = icmp eq i64 %209, %110
  br i1 %202, label %218, label %203

203:                                              ; preds = %196, %201
  %204 = phi i64 [ %209, %201 ], [ 0, %196 ]
  %205 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %109, i64 %204
  %206 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %205, i64 0, i32 0, i64 0
  %207 = call i32 @strcmp(i8* %199, i8* %206) #15
  %208 = icmp eq i32 %207, 0
  %209 = add nuw nsw i64 %204, 1
  br i1 %208, label %210, label %201

210:                                              ; preds = %203
  %211 = icmp eq %struct.VkExtensionProperties* %205, null
  br i1 %211, label %218, label %212

212:                                              ; preds = %210
  %213 = load i32, i32* %37, align 8
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds i8*, i8** %18, i64 %214
  %216 = bitcast i8** %215 to i64*
  store i64 %200, i64* %216, align 8
  %217 = add i32 %213, 1
  store i32 %217, i32* %37, align 8
  br label %218

218:                                              ; preds = %201, %196, %210, %212
  %219 = add nuw nsw i64 %197, 1
  %220 = icmp ult i64 %219, %113
  br i1 %220, label %196, label %181

221:                                              ; preds = %191
  %222 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %192, i64 0, i32 4
  %223 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %222, align 8
  %224 = call void ()* %223(%struct.VkInstance_T* null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1007, i64 0, i64 0)) #9
  %225 = icmp eq void ()* %224, null
  br i1 %225, label %234, label %226

226:                                              ; preds = %221
  %227 = bitcast void ()* %224 to i32 (i32*)*
  %228 = call i32 %227(i32* nonnull %6) #9
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %234, label %230

230:                                              ; preds = %226
  store i32 4194304, i32* %6, align 4
  %231 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %70, align 8
  %232 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %231, i64 0, i32 0
  %233 = load i8*, i8** %232, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %10, i32 16, i32 undef, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.1008, i64 0, i64 0), i8* %233)
  br label %234

234:                                              ; preds = %230, %221, %226, %191
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 48, i1 false)
  %235 = load i32, i32* %6, align 4
  %236 = and i32 %235, -4096
  br i1 %49, label %243, label %237

237:                                              ; preds = %234
  %238 = load %struct.VkApplicationInfo*, %struct.VkApplicationInfo** %33, align 8
  %239 = icmp eq %struct.VkApplicationInfo* %238, null
  br i1 %239, label %243, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %238, i64 0, i32 6
  %242 = load i32, i32* %241, align 4
  br label %243

243:                                              ; preds = %234, %237, %240
  %244 = phi i32 [ %242, %240 ], [ 4194304, %237 ], [ 4194304, %234 ]
  %245 = icmp ne i32 %244, 0
  %246 = icmp eq i32 %236, 4194304
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %255

248:                                              ; preds = %243
  %249 = load %struct.VkApplicationInfo*, %struct.VkApplicationInfo** %35, align 8
  %250 = icmp eq %struct.VkApplicationInfo* %249, null
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 48, i1 false)
  br label %254

252:                                              ; preds = %248
  %253 = bitcast %struct.VkApplicationInfo* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %253, i64 48, i1 false)
  br label %254

254:                                              ; preds = %252, %251
  store i32 %235, i32* %50, align 4
  store %struct.VkApplicationInfo* %7, %struct.VkApplicationInfo** %35, align 8
  br label %255

255:                                              ; preds = %254, %243
  %256 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %25, align 8
  %257 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %256, i64 %52, i32 6
  %258 = load i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)** %257, align 8
  %259 = getelementptr inbounds i8, i8* %65, i64 24
  %260 = bitcast i8* %259 to %struct.VkInstance_T**
  %261 = call i32 %258(%struct.VkInstanceCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* %1, %struct.VkInstance_T** %260) #9
  switch i32 %261, label %262 [
    i32 -1, label %382
    i32 0, label %318
  ]

262:                                              ; preds = %255
  %263 = trunc i64 %52 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %10, i32 2, i32 undef, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1009, i64 0, i64 0), i32 %263)
  %264 = bitcast i8* %74 to %struct.loader_icd_term**
  %265 = load i64, i64* %75, align 8
  store i64 %265, i64* %30, align 8
  store %struct.loader_icd_term* null, %struct.loader_icd_term** %264, align 8
  %266 = load i32, i32* %32, align 8
  %267 = add i32 %266, -1
  store i32 %267, i32* %32, align 8
  %268 = bitcast i8* %68 to %struct.loader_device**
  %269 = load %struct.loader_device*, %struct.loader_device** %268, align 8
  %270 = icmp eq %struct.loader_device* %269, null
  br i1 %270, label %271, label %278

271:                                              ; preds = %316, %262
  br i1 %26, label %277, label %272

272:                                              ; preds = %271
  %273 = load void (i8*, i8*)*, void (i8*, i8*)** %43, align 8
  %274 = icmp eq void (i8*, i8*)* %273, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = load i8*, i8** %28, align 8
  call void %273(i8* %276, i8* nonnull %65) #9
  br label %380

277:                                              ; preds = %272, %271
  call void @free(i8* nonnull %65) #9
  br label %380

278:                                              ; preds = %262, %316
  %279 = phi %struct.loader_device* [ %281, %316 ], [ %269, %262 ]
  %280 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 8
  %281 = load %struct.loader_device*, %struct.loader_device** %280, align 8
  br i1 %44, label %285, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 6
  %284 = bitcast %struct.VkAllocationCallbacks* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* nonnull align 8 %45, i64 48, i1 false) #9
  br label %285

285:                                              ; preds = %282, %278
  %286 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 5, i32 2
  %287 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %286, align 8
  %288 = icmp eq %struct.loader_layer_properties* %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 5
  call void @loaderDeactivateLayers(%struct.loader_instance* %10, %struct.loader_device* nonnull %279, %struct.loader_layer_list* %290) #9
  br label %291

291:                                              ; preds = %289, %285
  %292 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 4, i32 2
  %293 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %292, align 8
  %294 = icmp eq %struct.loader_layer_properties* %293, null
  %295 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %293, i64 0, i32 0, i32 0, i64 0
  br i1 %294, label %307, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 6, i32 3
  %298 = load void (i8*, i8*)*, void (i8*, i8*)** %297, align 8
  %299 = icmp eq void (i8*, i8*)* %298, null
  br i1 %299, label %303, label %300

300:                                              ; preds = %296
  %301 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 6, i32 0
  %302 = load i8*, i8** %301, align 8
  call void %298(i8* %302, i8* nonnull %295) #9
  br label %304

303:                                              ; preds = %296
  call void @free(i8* nonnull %295) #9
  br label %304

304:                                              ; preds = %303, %300
  %305 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 4, i32 1
  store i32 0, i32* %305, align 8
  %306 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 4, i32 0
  store i64 0, i64* %306, align 8
  br label %307

307:                                              ; preds = %291, %304
  %308 = bitcast %struct.loader_device* %279 to i8*
  %309 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 6, i32 3
  %310 = load void (i8*, i8*)*, void (i8*, i8*)** %309, align 8
  %311 = icmp eq void (i8*, i8*)* %310, null
  br i1 %311, label %315, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %279, i64 0, i32 6, i32 0
  %314 = load i8*, i8** %313, align 8
  call void %310(i8* %314, i8* nonnull %308) #9
  br label %316

315:                                              ; preds = %307
  call void @free(i8* nonnull %308) #9
  br label %316

316:                                              ; preds = %312, %315
  %317 = icmp eq %struct.loader_device* %281, null
  br i1 %317, label %271, label %278

318:                                              ; preds = %255
  %319 = load %struct.VkInstance_T*, %struct.VkInstance_T** %260, align 8
  %320 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %25, align 8
  %321 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %320, i64 %52, i32 4
  %322 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %321, align 8
  %323 = call zeroext i1 @loader_icd_init_entries(%struct.loader_icd_term* nonnull %69, %struct.VkInstance_T* %319, void ()* (%struct.VkInstance_T*, i8*)* %322)
  br i1 %323, label %380, label %324

324:                                              ; preds = %318
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %10, i32 2, i32 undef, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.1010, i64 0, i64 0))
  %325 = bitcast i8* %74 to %struct.loader_icd_term**
  %326 = load i64, i64* %75, align 8
  store i64 %326, i64* %30, align 8
  store %struct.loader_icd_term* null, %struct.loader_icd_term** %325, align 8
  %327 = load i32, i32* %32, align 8
  %328 = add i32 %327, -1
  store i32 %328, i32* %32, align 8
  %329 = bitcast i8* %68 to %struct.loader_device**
  %330 = load %struct.loader_device*, %struct.loader_device** %329, align 8
  %331 = icmp eq %struct.loader_device* %330, null
  br i1 %331, label %332, label %339

332:                                              ; preds = %377, %324
  br i1 %26, label %338, label %333

333:                                              ; preds = %332
  %334 = load void (i8*, i8*)*, void (i8*, i8*)** %43, align 8
  %335 = icmp eq void (i8*, i8*)* %334, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %333
  %337 = load i8*, i8** %28, align 8
  call void %334(i8* %337, i8* nonnull %65) #9
  br label %380

338:                                              ; preds = %333, %332
  call void @free(i8* nonnull %65) #9
  br label %380

339:                                              ; preds = %324, %377
  %340 = phi %struct.loader_device* [ %342, %377 ], [ %330, %324 ]
  %341 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 8
  %342 = load %struct.loader_device*, %struct.loader_device** %341, align 8
  br i1 %44, label %346, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 6
  %345 = bitcast %struct.VkAllocationCallbacks* %344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* nonnull align 8 %45, i64 48, i1 false) #9
  br label %346

346:                                              ; preds = %343, %339
  %347 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 5, i32 2
  %348 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %347, align 8
  %349 = icmp eq %struct.loader_layer_properties* %348, null
  br i1 %349, label %352, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 5
  call void @loaderDeactivateLayers(%struct.loader_instance* %10, %struct.loader_device* nonnull %340, %struct.loader_layer_list* %351) #9
  br label %352

352:                                              ; preds = %350, %346
  %353 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 4, i32 2
  %354 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %353, align 8
  %355 = icmp eq %struct.loader_layer_properties* %354, null
  %356 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %354, i64 0, i32 0, i32 0, i64 0
  br i1 %355, label %368, label %357

357:                                              ; preds = %352
  %358 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 6, i32 3
  %359 = load void (i8*, i8*)*, void (i8*, i8*)** %358, align 8
  %360 = icmp eq void (i8*, i8*)* %359, null
  br i1 %360, label %364, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 6, i32 0
  %363 = load i8*, i8** %362, align 8
  call void %359(i8* %363, i8* nonnull %356) #9
  br label %365

364:                                              ; preds = %357
  call void @free(i8* nonnull %356) #9
  br label %365

365:                                              ; preds = %364, %361
  %366 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 4, i32 1
  store i32 0, i32* %366, align 8
  %367 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 4, i32 0
  store i64 0, i64* %367, align 8
  br label %368

368:                                              ; preds = %352, %365
  %369 = bitcast %struct.loader_device* %340 to i8*
  %370 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 6, i32 3
  %371 = load void (i8*, i8*)*, void (i8*, i8*)** %370, align 8
  %372 = icmp eq void (i8*, i8*)* %371, null
  br i1 %372, label %376, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %340, i64 0, i32 6, i32 0
  %375 = load i8*, i8** %374, align 8
  call void %371(i8* %375, i8* nonnull %369) #9
  br label %377

376:                                              ; preds = %368
  call void @free(i8* nonnull %369) #9
  br label %377

377:                                              ; preds = %373, %376
  %378 = icmp eq %struct.loader_device* %342, null
  br i1 %378, label %332, label %339

379:                                              ; preds = %124, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  br label %399

380:                                              ; preds = %318, %275, %277, %336, %338
  %381 = phi i8 [ %53, %338 ], [ %53, %336 ], [ %53, %277 ], [ %53, %275 ], [ 1, %318 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #9
  br label %383

382:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  br label %399

383:                                              ; preds = %140, %138, %380
  %384 = phi i8 [ %381, %380 ], [ %53, %138 ], [ %53, %140 ]
  %385 = phi i32 [ 0, %380 ], [ %99, %138 ], [ %99, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  %386 = add nuw nsw i64 %52, 1
  %387 = load i32, i32* %21, align 8
  %388 = zext i32 %387 to i64
  %389 = icmp ult i64 %386, %388
  br i1 %389, label %51, label %390

390:                                              ; preds = %383
  %391 = icmp eq i32 %385, 0
  br i1 %391, label %392, label %399

392:                                              ; preds = %390
  %393 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 14
  %394 = load %struct.loader_icd_term*, %struct.loader_icd_term** %393, align 8
  %395 = icmp eq %struct.loader_icd_term* %394, null
  %396 = and i8 %384, 1
  %397 = icmp eq i8 %396, 0
  %398 = or i1 %397, %395
  br i1 %398, label %399, label %480

399:                                              ; preds = %3, %392, %379, %382, %79, %390
  %400 = phi i32 [ %385, %390 ], [ -1, %379 ], [ -1, %382 ], [ -1, %79 ], [ -9, %392 ], [ -9, %3 ]
  %401 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 14
  %402 = load %struct.loader_icd_term*, %struct.loader_icd_term** %401, align 8
  %403 = icmp eq %struct.loader_icd_term* %402, null
  br i1 %403, label %480, label %404

404:                                              ; preds = %399
  %405 = bitcast %struct.loader_icd_term** %401 to i64*
  %406 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 13
  %407 = icmp eq %struct.VkAllocationCallbacks* %1, null
  %408 = bitcast %struct.VkAllocationCallbacks* %1 to i8*
  %409 = icmp eq %struct.loader_instance* %10, null
  %410 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 33, i32 3
  %411 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %10, i64 0, i32 33, i32 0
  br label %412

412:                                              ; preds = %404, %477
  %413 = phi %struct.loader_icd_term* [ %402, %404 ], [ %478, %477 ]
  %414 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %413, i64 0, i32 5
  %415 = bitcast %struct.loader_icd_term** %414 to i64*
  %416 = load i64, i64* %415, align 8
  store i64 %416, i64* %405, align 8
  %417 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %413, i64 0, i32 3
  %418 = load %struct.VkInstance_T*, %struct.VkInstance_T** %417, align 8
  %419 = icmp eq %struct.VkInstance_T* %418, null
  br i1 %419, label %423, label %420

420:                                              ; preds = %412
  %421 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %413, i64 0, i32 4, i32 1
  %422 = load void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)** %421, align 8
  call void %422(%struct.VkInstance_T* nonnull %418, %struct.VkAllocationCallbacks* %1) #9
  br label %423

423:                                              ; preds = %412, %420
  %424 = load i32, i32* %406, align 8
  %425 = add i32 %424, -1
  store i32 %425, i32* %406, align 8
  %426 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %413, i64 0, i32 2
  %427 = load %struct.loader_device*, %struct.loader_device** %426, align 8
  %428 = icmp eq %struct.loader_device* %427, null
  br i1 %428, label %429, label %437

429:                                              ; preds = %475, %423
  %430 = bitcast %struct.loader_icd_term* %413 to i8*
  br i1 %409, label %436, label %431

431:                                              ; preds = %429
  %432 = load void (i8*, i8*)*, void (i8*, i8*)** %410, align 8
  %433 = icmp eq void (i8*, i8*)* %432, null
  br i1 %433, label %436, label %434

434:                                              ; preds = %431
  %435 = load i8*, i8** %411, align 8
  call void %432(i8* %435, i8* nonnull %430) #9
  br label %477

436:                                              ; preds = %431, %429
  call void @free(i8* nonnull %430) #9
  br label %477

437:                                              ; preds = %423, %475
  %438 = phi %struct.loader_device* [ %440, %475 ], [ %427, %423 ]
  %439 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 8
  %440 = load %struct.loader_device*, %struct.loader_device** %439, align 8
  br i1 %407, label %444, label %441

441:                                              ; preds = %437
  %442 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 6
  %443 = bitcast %struct.VkAllocationCallbacks* %442 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %443, i8* nonnull align 8 %408, i64 48, i1 false) #9
  br label %444

444:                                              ; preds = %441, %437
  %445 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 5, i32 2
  %446 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %445, align 8
  %447 = icmp eq %struct.loader_layer_properties* %446, null
  br i1 %447, label %450, label %448

448:                                              ; preds = %444
  %449 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 5
  call void @loaderDeactivateLayers(%struct.loader_instance* %10, %struct.loader_device* nonnull %438, %struct.loader_layer_list* %449) #9
  br label %450

450:                                              ; preds = %448, %444
  %451 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 4, i32 2
  %452 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %451, align 8
  %453 = icmp eq %struct.loader_layer_properties* %452, null
  %454 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %452, i64 0, i32 0, i32 0, i64 0
  br i1 %453, label %466, label %455

455:                                              ; preds = %450
  %456 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 6, i32 3
  %457 = load void (i8*, i8*)*, void (i8*, i8*)** %456, align 8
  %458 = icmp eq void (i8*, i8*)* %457, null
  br i1 %458, label %462, label %459

459:                                              ; preds = %455
  %460 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 6, i32 0
  %461 = load i8*, i8** %460, align 8
  call void %457(i8* %461, i8* nonnull %454) #9
  br label %463

462:                                              ; preds = %455
  call void @free(i8* nonnull %454) #9
  br label %463

463:                                              ; preds = %462, %459
  %464 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 4, i32 1
  store i32 0, i32* %464, align 8
  %465 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 4, i32 0
  store i64 0, i64* %465, align 8
  br label %466

466:                                              ; preds = %450, %463
  %467 = bitcast %struct.loader_device* %438 to i8*
  %468 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 6, i32 3
  %469 = load void (i8*, i8*)*, void (i8*, i8*)** %468, align 8
  %470 = icmp eq void (i8*, i8*)* %469, null
  br i1 %470, label %474, label %471

471:                                              ; preds = %466
  %472 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %438, i64 0, i32 6, i32 0
  %473 = load i8*, i8** %472, align 8
  call void %469(i8* %473, i8* nonnull %467) #9
  br label %475

474:                                              ; preds = %466
  call void @free(i8* nonnull %467) #9
  br label %475

475:                                              ; preds = %471, %474
  %476 = icmp eq %struct.loader_device* %440, null
  br i1 %476, label %429, label %437

477:                                              ; preds = %434, %436
  %478 = load %struct.loader_icd_term*, %struct.loader_icd_term** %401, align 8
  %479 = icmp eq %struct.loader_icd_term* %478, null
  br i1 %479, label %480, label %412

480:                                              ; preds = %477, %399, %392
  %481 = phi i32 [ 0, %392 ], [ %400, %399 ], [ %400, %477 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #9
  ret i32 %481
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_CreateDevice(%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo* nocapture readonly, %struct.VkAllocationCallbacks*, %struct.VkDevice_T** nocapture) #0 {
  %5 = alloca %struct.loader_extension_list, align 8
  %6 = alloca %struct.VkDeviceCreateInfo, align 8
  %7 = alloca %struct.VkPhysicalDeviceProperties, align 8
  %8 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %9 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %8, i64 0, i32 1
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = bitcast %struct.VkDevice_T** %3 to %struct.loader_device**
  %12 = load %struct.loader_device*, %struct.loader_device** %11, align 8
  %13 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 10
  %14 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)** %13, align 8
  %15 = bitcast %struct.loader_extension_list* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 3
  %17 = bitcast %struct.loader_physical_device_term** %16 to %struct.VkPhysicalDevice_T**
  store %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDevice_T** %17, align 8
  %18 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 2
  store %struct.VkExtensionProperties* null, %struct.VkExtensionProperties** %18, align 8
  %19 = icmp eq i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* %14, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 1
  %22 = load %struct.loader_instance*, %struct.loader_instance** %21, align 8
  %23 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 0
  %24 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %23, align 8
  %25 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %24, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %22, i32 8, i32 undef, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1011, i64 0, i64 0), i8* %26)
  br label %332

27:                                               ; preds = %4
  %28 = bitcast %struct.VkDeviceCreateInfo* %6 to i8*
  %29 = bitcast %struct.VkDeviceCreateInfo* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 72, i1 false)
  %30 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = zext i32 %31 to i64
  %35 = shl nuw nsw i64 %34, 3
  %36 = alloca i8*, i64 %34, align 16
  %37 = bitcast i8** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 %35, i1 false)
  br label %38

38:                                               ; preds = %27, %33
  %39 = phi i8** [ %36, %33 ], [ null, %27 ]
  %40 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %6, i64 0, i32 5
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %6, i64 0, i32 6
  store i8** null, i8*** %41, align 8
  %42 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %6, i64 0, i32 7
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %6, i64 0, i32 8
  store i8** %39, i8*** %43, align 8
  %44 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 1
  %45 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %46 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 1
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 0
  store i64 0, i64* %47, align 8
  %48 = icmp eq %struct.loader_instance* %45, null
  br i1 %48, label %57, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %45, i64 0, i32 33, i32 1
  %51 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %50, align 8
  %52 = icmp eq i8* (i8*, i64, i64, i32)* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %45, i64 0, i32 33, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = call i8* %51(i8* %55, i64 8320, i64 8, i32 4) #9
  br label %59

57:                                               ; preds = %49, %38
  %58 = call noalias i8* @malloc(i64 8320) #9
  br label %59

59:                                               ; preds = %57, %53
  %60 = phi i8* [ %56, %53 ], [ %58, %57 ]
  %61 = bitcast %struct.VkExtensionProperties** %18 to i8**
  store i8* %60, i8** %61, align 8
  %62 = icmp eq i8* %60, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %45, i32 8, i32 undef, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.933, i64 0, i64 0)) #9
  %64 = bitcast i8* %60 to %struct.VkExtensionProperties*
  br label %337

65:                                               ; preds = %59
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %60, i8 0, i64 8320, i1 false) #9
  store i64 8320, i64* %47, align 8
  %66 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %67 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 12
  %68 = load i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %67, align 8
  %69 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %8, i64 0, i32 3
  %70 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %69, align 8
  %71 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 0
  %72 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %71, align 8
  %73 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = call i32 @loader_add_device_extensions(%struct.loader_instance* %66, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* %68, %struct.VkPhysicalDevice_T* %70, i8* %74, %struct.loader_extension_list* nonnull %5)
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %332

77:                                               ; preds = %65
  %78 = load i32, i32* %30, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 8
  %82 = load i32, i32* %46, align 8
  %83 = icmp eq i32 %82, 0
  %84 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %18, align 8
  %85 = zext i32 %82 to i64
  br label %97

86:                                               ; preds = %123, %77
  %87 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %6, i64 0, i32 1
  %88 = bitcast i8** %87 to %struct.VkBaseOutStructure**
  %89 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %88, align 8
  %90 = icmp eq %struct.VkBaseOutStructure* %89, null
  %91 = bitcast %struct.VkBaseOutStructure* %89 to i8*
  br i1 %90, label %180, label %92

92:                                               ; preds = %86
  %93 = bitcast %struct.VkDeviceCreateInfo* %6 to %struct.VkBaseOutStructure*
  %94 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %89, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 1000070001
  br i1 %96, label %132, label %175

97:                                               ; preds = %80, %123
  %98 = phi i64 [ 0, %80 ], [ %124, %123 ]
  %99 = load i8**, i8*** %81, align 8
  %100 = getelementptr inbounds i8*, i8** %99, i64 %98
  %101 = load i8*, i8** %100, align 8
  br i1 %83, label %118, label %104

102:                                              ; preds = %104
  %103 = icmp eq i64 %110, %85
  br i1 %103, label %118, label %104

104:                                              ; preds = %97, %102
  %105 = phi i64 [ %110, %102 ], [ 0, %97 ]
  %106 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %84, i64 %105
  %107 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %106, i64 0, i32 0, i64 0
  %108 = call i32 @strcmp(i8* %101, i8* %107) #15
  %109 = icmp eq i32 %108, 0
  %110 = add nuw nsw i64 %105, 1
  br i1 %109, label %111, label %102

111:                                              ; preds = %104
  %112 = icmp eq %struct.VkExtensionProperties* %106, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %111
  %114 = load i32, i32* %42, align 8
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i8*, i8** %39, i64 %115
  store i8* %101, i8** %116, align 8
  %117 = add i32 %114, 1
  store i32 %117, i32* %42, align 8
  br label %123

118:                                              ; preds = %102, %97, %111
  %119 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %120 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %71, align 8
  %121 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %120, i64 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %119, i32 16, i32 undef, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.1013, i64 0, i64 0), i8* %101, i8* %122)
  br label %123

123:                                              ; preds = %118, %113
  %124 = add nuw nsw i64 %98, 1
  %125 = load i32, i32* %30, align 8
  %126 = zext i32 %125 to i64
  %127 = icmp ult i64 %124, %126
  br i1 %127, label %97, label %86

128:                                              ; preds = %175
  %129 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %178, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 1000070001
  br i1 %131, label %132, label %175

132:                                              ; preds = %128, %92
  %133 = phi %struct.VkBaseOutStructure* [ %89, %92 ], [ %178, %128 ]
  %134 = phi %struct.VkBaseOutStructure* [ %93, %92 ], [ %176, %128 ]
  %135 = bitcast %struct.VkBaseOutStructure* %133 to %struct.VkDeviceGroupDeviceCreateInfo*
  %136 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %133, i64 1, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %180, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %133, i64 1, i32 1
  %141 = bitcast %struct.VkBaseOutStructure** %140 to %struct.VkPhysicalDevice_T***
  %142 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %141, align 8
  %143 = icmp eq %struct.VkPhysicalDevice_T** %142, null
  br i1 %143, label %180, label %144

144:                                              ; preds = %139
  %145 = alloca %struct.VkDeviceGroupDeviceCreateInfo, align 16
  %146 = bitcast %struct.VkDeviceGroupDeviceCreateInfo* %145 to i8*
  %147 = bitcast %struct.VkBaseOutStructure* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %146, i8* nonnull align 8 %147, i64 32, i1 false)
  %148 = load i32, i32* %136, align 8
  %149 = zext i32 %148 to i64
  %150 = shl nuw nsw i64 %149, 3
  %151 = alloca %struct.VkPhysicalDevice_T*, i64 %149, align 16
  %152 = bitcast %struct.VkPhysicalDevice_T** %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %152, i8 -86, i64 %150, i1 false)
  %153 = load i32, i32* %136, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %160

155:                                              ; preds = %160, %144
  %156 = getelementptr inbounds %struct.VkDeviceGroupDeviceCreateInfo, %struct.VkDeviceGroupDeviceCreateInfo* %145, i64 0, i32 3
  store %struct.VkPhysicalDevice_T** %151, %struct.VkPhysicalDevice_T*** %156, align 8
  %157 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %134, i64 0, i32 1
  %158 = bitcast %struct.VkBaseOutStructure** %157 to %struct.VkDeviceGroupDeviceCreateInfo**
  store %struct.VkDeviceGroupDeviceCreateInfo* %145, %struct.VkDeviceGroupDeviceCreateInfo** %158, align 8
  %159 = load i8*, i8** %87, align 8
  br label %180

160:                                              ; preds = %144, %160
  %161 = phi i64 [ %171, %160 ], [ 0, %144 ]
  %162 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %141, align 8
  %163 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %162, i64 %161
  %164 = bitcast %struct.VkPhysicalDevice_T** %163 to %struct.loader_physical_device_term**
  %165 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %164, align 8
  %166 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %165, i64 0, i32 3
  %167 = bitcast %struct.VkPhysicalDevice_T** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %151, i64 %161
  %170 = bitcast %struct.VkPhysicalDevice_T** %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = add nuw nsw i64 %161, 1
  %172 = load i32, i32* %136, align 8
  %173 = zext i32 %172 to i64
  %174 = icmp ult i64 %171, %173
  br i1 %174, label %160, label %155

175:                                              ; preds = %92, %128
  %176 = phi %struct.VkBaseOutStructure* [ %178, %128 ], [ %89, %92 ]
  %177 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %176, i64 0, i32 1
  %178 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %177, align 8
  %179 = icmp eq %struct.VkBaseOutStructure* %178, null
  br i1 %179, label %180, label %128

180:                                              ; preds = %175, %86, %139, %132, %155
  %181 = phi i8* [ %159, %155 ], [ %91, %139 ], [ %91, %132 ], [ %91, %86 ], [ %91, %175 ]
  %182 = phi %struct.VkBaseOutStructure* [ %134, %155 ], [ null, %139 ], [ null, %132 ], [ null, %86 ], [ null, %175 ]
  %183 = phi %struct.VkDeviceGroupDeviceCreateInfo* [ %135, %155 ], [ null, %139 ], [ null, %132 ], [ null, %86 ], [ null, %175 ]
  %184 = icmp eq i8* %181, null
  br i1 %184, label %193, label %185

185:                                              ; preds = %180
  %186 = bitcast i8* %181 to %struct.VkBaseInStructure*
  %187 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 16
  %188 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 54
  %189 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 17
  %190 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 47
  %191 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %6, i64 0, i32 9
  %192 = bitcast %struct.VkPhysicalDeviceFeatures** %191 to i8**
  br label %204

193:                                              ; preds = %259, %180
  %194 = load i32, i32* %42, align 8
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %263, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 7, i32 5
  %198 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 7, i32 3
  %199 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 7, i32 2
  %200 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 7, i32 1
  %201 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 7, i32 0
  %202 = load i8**, i8*** %43, align 8
  %203 = zext i32 %194 to i64
  br label %275

204:                                              ; preds = %185, %259
  %205 = phi i8* [ %181, %185 ], [ %261, %259 ]
  %206 = phi %struct.VkBaseInStructure* [ %186, %185 ], [ %260, %259 ]
  %207 = bitcast i8* %205 to i32*
  %208 = load i32, i32* %207, align 4
  switch i32 %208, label %255 [
    i32 1000059000, label %209
    i32 1000070001, label %233
  ]

209:                                              ; preds = %204
  %210 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %189, align 8
  %211 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* %210, null
  br i1 %211, label %212, label %228

212:                                              ; preds = %209
  %213 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %190, align 8
  %214 = icmp eq void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* %213, null
  br i1 %214, label %215, label %228

215:                                              ; preds = %212
  %216 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %217 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %71, align 8
  %218 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %217, i64 0, i32 0
  %219 = load i8*, i8** %218, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %216, i32 1, i32 undef, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.1014, i64 0, i64 0), i8* %219)
  %220 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %221 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %220, i64 0, i32 25
  %222 = bitcast %union.loader_instance_extension_enables* %221 to i16*
  %223 = load i16, i16* %222, align 8
  %224 = and i16 %223, 1
  %225 = icmp eq i16 %224, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %215
  %227 = getelementptr inbounds i8, i8* %205, i64 16
  store i8* %227, i8** %192, align 8
  br label %228

228:                                              ; preds = %215, %226, %212, %209
  %229 = getelementptr inbounds i8, i8* %205, i64 8
  %230 = bitcast i8* %229 to i8**
  %231 = load i8*, i8** %230, align 8
  %232 = bitcast i8* %231 to %struct.VkBaseInStructure*
  br label %259

233:                                              ; preds = %204
  %234 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %187, align 8
  %235 = icmp eq i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)* %234, null
  br i1 %235, label %236, label %248

236:                                              ; preds = %233
  %237 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %188, align 8
  %238 = icmp eq i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)* %237, null
  br i1 %238, label %239, label %248

239:                                              ; preds = %236
  %240 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %241 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %71, align 8
  %242 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %241, i64 0, i32 0
  %243 = load i8*, i8** %242, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %240, i32 1, i32 undef, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.1015, i64 0, i64 0), i8* %243)
  %244 = getelementptr inbounds i8, i8* %205, i64 16
  %245 = bitcast i8* %244 to i32*
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %253

248:                                              ; preds = %233, %236, %239
  %249 = getelementptr inbounds i8, i8* %205, i64 8
  %250 = bitcast i8* %249 to i8**
  %251 = load i8*, i8** %250, align 8
  %252 = bitcast i8* %251 to %struct.VkBaseInStructure*
  br label %259

253:                                              ; preds = %239
  %254 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %254, i32 8, i32 undef, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1016, i64 0, i64 0))
  br label %332

255:                                              ; preds = %204
  %256 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %206, i64 0, i32 1
  %257 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %256, align 8
  %258 = bitcast %struct.VkBaseInStructure* %257 to i8*
  br label %259

259:                                              ; preds = %248, %255, %228
  %260 = phi %struct.VkBaseInStructure* [ %257, %255 ], [ %232, %228 ], [ %252, %248 ]
  %261 = phi i8* [ %258, %255 ], [ %231, %228 ], [ %251, %248 ]
  %262 = icmp eq i8* %261, null
  br i1 %262, label %193, label %204

263:                                              ; preds = %298, %193
  %264 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %265 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %264, i64 0, i32 25
  %266 = bitcast %union.loader_instance_extension_enables* %265 to i16*
  %267 = load i16, i16* %266, align 8
  %268 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 7, i32 4
  %269 = lshr i16 %267, 11
  %270 = trunc i16 %269 to i8
  %271 = and i8 %270, 1
  store i8 %271, i8* %268, align 4
  %272 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 7, i32 2
  %273 = load i8, i8* %272, align 2, !range !4
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %301, label %311

275:                                              ; preds = %196, %298
  %276 = phi i64 [ 0, %196 ], [ %299, %298 ]
  %277 = getelementptr inbounds i8*, i8** %202, i64 %276
  %278 = load i8*, i8** %277, align 8
  %279 = call i32 @strcmp(i8* %278, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1017, i64 0, i64 0)) #15
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %275
  store i8 1, i8* %201, align 8
  br label %298

282:                                              ; preds = %275
  %283 = call i32 @strcmp(i8* %278, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1018, i64 0, i64 0)) #15
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  store i8 1, i8* %200, align 1
  br label %298

286:                                              ; preds = %282
  %287 = call i32 @strcmp(i8* %278, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1019, i64 0, i64 0)) #15
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  store i8 1, i8* %199, align 2
  br label %298

290:                                              ; preds = %286
  %291 = call i32 @strcmp(i8* %278, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1020, i64 0, i64 0)) #15
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  store i8 1, i8* %198, align 1
  br label %298

294:                                              ; preds = %290
  %295 = call i32 @strcmp(i8* %278, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1021, i64 0, i64 0)) #15
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  store i8 1, i8* %197, align 1
  br label %298

298:                                              ; preds = %294, %281, %289, %297, %293, %285
  %299 = add nuw nsw i64 %276, 1
  %300 = icmp ult i64 %299, %203
  br i1 %300, label %275, label %263

301:                                              ; preds = %263
  %302 = bitcast %struct.VkPhysicalDeviceProperties* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 824, i8* nonnull %302) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %302, i8* align 8 bitcast ({ i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] }* @__const.terminator_CreateDevice.properties to i8*), i64 824, i1 false)
  %303 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 4, i32 6
  %304 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %303, align 8
  %305 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %69, align 8
  call void %304(%struct.VkPhysicalDevice_T* %305, %struct.VkPhysicalDeviceProperties* nonnull %7) #9
  %306 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %7, i64 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp ugt i32 %307, 4198399
  br i1 %308, label %309, label %310

309:                                              ; preds = %301
  store i8 1, i8* %272, align 2
  br label %310

310:                                              ; preds = %309, %301
  call void @llvm.lifetime.end.p0i8(i64 824, i8* nonnull %302) #9
  br label %311

311:                                              ; preds = %263, %310
  %312 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %69, align 8
  %313 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 2
  %314 = call i32 %14(%struct.VkPhysicalDevice_T* %312, %struct.VkDeviceCreateInfo* nonnull %6, %struct.VkAllocationCallbacks* %2, %struct.VkDevice_T** %313) #9
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %321, label %316

316:                                              ; preds = %311
  %317 = load %struct.loader_instance*, %struct.loader_instance** %44, align 8
  %318 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %71, align 8
  %319 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %318, i64 0, i32 0
  %320 = load i8*, i8** %319, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %317, i32 8, i32 undef, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1022, i64 0, i64 0), i8* %320)
  br label %332

321:                                              ; preds = %311
  %322 = bitcast %struct.VkDevice_T** %313 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %struct.VkDevice_T** %3 to i64*
  store i64 %323, i64* %324, align 8
  %325 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 2
  %326 = bitcast %struct.loader_device** %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = getelementptr inbounds %struct.loader_device, %struct.loader_device* %12, i64 0, i32 8
  %329 = bitcast %struct.loader_device** %328 to i64*
  store i64 %327, i64* %329, align 8
  store %struct.loader_device* %12, %struct.loader_device** %325, align 8
  %330 = bitcast %struct.VkDevice_T** %3 to %struct.loader_device***
  %331 = load %struct.loader_device**, %struct.loader_device*** %330, align 8
  store %struct.loader_device* %12, %struct.loader_device** %331, align 8
  br label %332

332:                                              ; preds = %20, %316, %321, %65, %253
  %333 = phi %struct.VkBaseOutStructure* [ %182, %253 ], [ %182, %321 ], [ %182, %316 ], [ null, %65 ], [ null, %20 ]
  %334 = phi %struct.VkDeviceGroupDeviceCreateInfo* [ %183, %253 ], [ %183, %321 ], [ %183, %316 ], [ null, %65 ], [ null, %20 ]
  %335 = phi i32 [ -3, %253 ], [ 0, %321 ], [ %314, %316 ], [ %75, %65 ], [ -3, %20 ]
  %336 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %18, align 8
  br label %337

337:                                              ; preds = %332, %63
  %338 = phi %struct.VkExtensionProperties* [ %336, %332 ], [ %64, %63 ]
  %339 = phi %struct.VkBaseOutStructure* [ %333, %332 ], [ null, %63 ]
  %340 = phi %struct.VkDeviceGroupDeviceCreateInfo* [ %334, %332 ], [ null, %63 ]
  %341 = phi i32 [ %335, %332 ], [ -1, %63 ]
  %342 = icmp eq %struct.VkExtensionProperties* %338, null
  %343 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %338, i64 0, i32 0, i64 0
  br i1 %342, label %359, label %344

344:                                              ; preds = %337
  %345 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %10, i64 0, i32 1
  %346 = load %struct.loader_instance*, %struct.loader_instance** %345, align 8
  %347 = icmp eq %struct.loader_instance* %346, null
  br i1 %347, label %355, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %346, i64 0, i32 33, i32 3
  %350 = load void (i8*, i8*)*, void (i8*, i8*)** %349, align 8
  %351 = icmp eq void (i8*, i8*)* %350, null
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %346, i64 0, i32 33, i32 0
  %354 = load i8*, i8** %353, align 8
  call void %350(i8* %354, i8* nonnull %343) #9
  br label %356

355:                                              ; preds = %348, %344
  call void @free(i8* nonnull %343) #9
  br label %356

356:                                              ; preds = %352, %355
  %357 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 1
  store i32 0, i32* %357, align 8
  %358 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %5, i64 0, i32 0
  store i64 0, i64* %358, align 8
  br label %359

359:                                              ; preds = %337, %356
  %360 = icmp eq %struct.VkBaseOutStructure* %339, null
  br i1 %360, label %364, label %361

361:                                              ; preds = %359
  %362 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %339, i64 0, i32 1
  %363 = bitcast %struct.VkBaseOutStructure** %362 to %struct.VkDeviceGroupDeviceCreateInfo**
  store %struct.VkDeviceGroupDeviceCreateInfo* %340, %struct.VkDeviceGroupDeviceCreateInfo** %363, align 8
  br label %364

364:                                              ; preds = %361, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  ret i32 %341
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @setupLoaderTrampPhysDevs(%struct.VkInstance_T*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #9
  store i32 0, i32* %2, align 4
  %4 = bitcast %struct.VkInstance_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %5 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %4, align 8
  %6 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %7 = icmp eq %struct.loader_instance* %6, null
  br i1 %7, label %158, label %8

8:                                                ; preds = %1, %14
  %9 = phi %struct.loader_instance* [ %16, %14 ], [ %6, %1 ]
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 0
  %11 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %10, align 8
  %12 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %11, i64 0, i32 0
  %13 = icmp eq %struct.VkLayerInstanceDispatchTable_* %12, %5
  br i1 %13, label %18, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 12
  %16 = load %struct.loader_instance*, %struct.loader_instance** %15, align 8
  %17 = icmp eq %struct.loader_instance* %16, null
  br i1 %17, label %158, label %8

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 0
  %20 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %11, i64 0, i32 0, i32 3
  %21 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %20, align 8
  %22 = call i32 %21(%struct.VkInstance_T* %0, i32* nonnull %2, %struct.VkPhysicalDevice_T** null) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %9, i32 8, i32 undef, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1023, i64 0, i64 0))
  br label %158

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %2, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw nsw i64 %28, 3
  %30 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 1
  %31 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %30, align 8
  %32 = icmp eq i8* (i8*, i64, i64, i32)* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = call i8* %31(i8* %35, i64 %29, i64 8, i32 4) #9
  %37 = load i32, i32* %2, align 4
  br label %40

38:                                               ; preds = %25
  %39 = call noalias i8* @malloc(i64 %29) #9
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i32 [ %37, %33 ], [ %27, %38 ]
  %42 = phi i8* [ %36, %33 ], [ %39, %38 ]
  %43 = bitcast i8* %42 to %struct.loader_physical_device_tramp**
  %44 = icmp eq i8* %42, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %9, i32 8, i32 undef, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1024, i64 0, i64 0), i32 %41)
  br label %158

46:                                               ; preds = %40
  %47 = zext i32 %41 to i64
  %48 = shl nuw nsw i64 %47, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 %48, i1 false)
  %49 = load i32, i32* %2, align 4
  %50 = zext i32 %49 to i64
  %51 = shl nuw nsw i64 %50, 3
  %52 = alloca %struct.VkPhysicalDevice_T*, i64 %50, align 16
  %53 = bitcast %struct.VkPhysicalDevice_T** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -86, i64 %51, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 0, i64 %51, i1 false)
  %54 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %19, align 8
  %55 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %54, i64 0, i32 0, i32 3
  %56 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %55, align 8
  %57 = call i32 %56(%struct.VkInstance_T* %0, i32* nonnull %2, %struct.VkPhysicalDevice_T** nonnull %52) #9
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %67

59:                                               ; preds = %46
  %60 = load i32, i32* %2, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %160, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 6
  %64 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 7
  %65 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 0
  %66 = bitcast %struct.loader_instance* %9 to i64*
  br label %69

67:                                               ; preds = %46
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %9, i32 8, i32 undef, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.1026, i64 0, i64 0))
  %68 = load i32, i32* %2, align 4
  br label %126

69:                                               ; preds = %62, %121
  %70 = phi i32 [ %60, %62 ], [ %122, %121 ]
  %71 = phi i64 [ 0, %62 ], [ %123, %121 ]
  %72 = load i32, i32* %63, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %91, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %52, i64 %71
  %76 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %75, align 8
  %77 = load %struct.loader_physical_device_tramp**, %struct.loader_physical_device_tramp*** %64, align 8
  %78 = zext i32 %72 to i64
  br label %81

79:                                               ; preds = %81
  %80 = icmp ult i64 %88, %78
  br i1 %80, label %81, label %91

81:                                               ; preds = %74, %79
  %82 = phi i64 [ 0, %74 ], [ %88, %79 ]
  %83 = getelementptr inbounds %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %77, i64 %82
  %84 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %83, align 8
  %85 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %84, i64 0, i32 2
  %86 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %85, align 8
  %87 = icmp eq %struct.VkPhysicalDevice_T* %76, %86
  %88 = add nuw nsw i64 %82, 1
  br i1 %87, label %89, label %79

89:                                               ; preds = %81
  %90 = getelementptr inbounds %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %43, i64 %71
  store %struct.loader_physical_device_tramp* %84, %struct.loader_physical_device_tramp** %90, align 8
  br label %91

91:                                               ; preds = %79, %69, %89
  %92 = getelementptr inbounds %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %43, i64 %71
  %93 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %92, align 8
  %94 = icmp eq %struct.loader_physical_device_tramp* %93, null
  br i1 %94, label %95, label %121

95:                                               ; preds = %91
  %96 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %30, align 8
  %97 = icmp eq i8* (i8*, i64, i64, i32)* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = load i8*, i8** %65, align 8
  %100 = call i8* %96(i8* %99, i64 24, i64 8, i32 4) #9
  br label %103

101:                                              ; preds = %95
  %102 = call noalias i8* @malloc(i64 24) #9
  br label %103

103:                                              ; preds = %98, %101
  %104 = phi i8* [ %100, %98 ], [ %102, %101 ]
  %105 = bitcast %struct.loader_physical_device_tramp** %92 to i8**
  store i8* %104, i8** %105, align 8
  %106 = icmp eq i8* %104, null
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = trunc i64 %71 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %9, i32 8, i32 undef, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1027, i64 0, i64 0), i32 %108)
  store i32 %108, i32* %2, align 4
  br label %126

109:                                              ; preds = %103
  %110 = load i64, i64* %66, align 8
  %111 = bitcast i8* %104 to i64*
  store i64 %110, i64* %111, align 8
  %112 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %92, align 8
  %113 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %112, i64 0, i32 1
  store %struct.loader_instance* %9, %struct.loader_instance** %113, align 8
  %114 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %52, i64 %71
  %115 = bitcast %struct.VkPhysicalDevice_T** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %92, align 8
  %118 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %117, i64 0, i32 2
  %119 = bitcast %struct.VkPhysicalDevice_T** %118 to i64*
  store i64 %116, i64* %119, align 8
  %120 = load i32, i32* %2, align 4
  br label %121

121:                                              ; preds = %91, %109
  %122 = phi i32 [ %70, %91 ], [ %120, %109 ]
  %123 = add nuw nsw i64 %71, 1
  %124 = zext i32 %122 to i64
  %125 = icmp ult i64 %123, %124
  br i1 %125, label %69, label %160

126:                                              ; preds = %67, %107
  %127 = phi i32 [ %108, %107 ], [ %68, %67 ]
  %128 = phi i32 [ -1, %107 ], [ %57, %67 ]
  %129 = icmp eq i32 %127, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 3
  %132 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 0
  br label %141

133:                                              ; preds = %153, %126
  %134 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 3
  %135 = load void (i8*, i8*)*, void (i8*, i8*)** %134, align 8
  %136 = icmp eq void (i8*, i8*)* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 0
  %139 = load i8*, i8** %138, align 8
  call void %135(i8* %139, i8* nonnull %42) #9
  br label %158

140:                                              ; preds = %133
  call void @free(i8* nonnull %42) #9
  br label %158

141:                                              ; preds = %130, %153
  %142 = phi i64 [ 0, %130 ], [ %154, %153 ]
  %143 = getelementptr inbounds %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %43, i64 %142
  %144 = bitcast %struct.loader_physical_device_tramp** %143 to i8**
  %145 = load i8*, i8** %144, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %141
  %148 = load void (i8*, i8*)*, void (i8*, i8*)** %131, align 8
  %149 = icmp eq void (i8*, i8*)* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = load i8*, i8** %132, align 8
  call void %148(i8* %151, i8* nonnull %145) #9
  br label %153

152:                                              ; preds = %147
  call void @free(i8* nonnull %145) #9
  br label %153

153:                                              ; preds = %141, %150, %152
  %154 = add nuw nsw i64 %142, 1
  %155 = load i32, i32* %2, align 4
  %156 = zext i32 %155 to i64
  %157 = icmp ult i64 %154, %156
  br i1 %157, label %141, label %133

158:                                              ; preds = %14, %1, %24, %45, %140, %137
  %159 = phi i32 [ %128, %137 ], [ %128, %140 ], [ %22, %24 ], [ -1, %45 ], [ -3, %1 ], [ -3, %14 ]
  store i32 0, i32* %2, align 4
  br label %231

160:                                              ; preds = %121, %59
  %161 = phi i32 [ 0, %59 ], [ %122, %121 ]
  %162 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 7
  %163 = load %struct.loader_physical_device_tramp**, %struct.loader_physical_device_tramp*** %162, align 8
  %164 = icmp eq %struct.loader_physical_device_tramp** %163, null
  %165 = bitcast %struct.loader_physical_device_tramp** %163 to i8*
  br i1 %164, label %166, label %168

166:                                              ; preds = %160
  %167 = bitcast %struct.loader_physical_device_tramp*** %162 to i8**
  br label %227

168:                                              ; preds = %160
  %169 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 6
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = bitcast %struct.loader_physical_device_tramp*** %162 to i8**
  br label %189

174:                                              ; preds = %168
  %175 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 3
  %176 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 0
  br label %177

177:                                              ; preds = %224, %174
  %178 = phi %struct.loader_physical_device_tramp** [ %163, %174 ], [ %226, %224 ]
  %179 = phi i32 [ %161, %174 ], [ %225, %224 ]
  %180 = phi i64 [ 0, %174 ], [ %220, %224 ]
  %181 = icmp eq i32 %179, 0
  %182 = getelementptr inbounds %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %178, i64 %180
  br i1 %181, label %209, label %183

183:                                              ; preds = %177
  %184 = zext i32 %179 to i64
  %185 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %182, align 8
  br label %203

186:                                              ; preds = %219
  %187 = bitcast %struct.loader_physical_device_tramp*** %162 to i8**
  %188 = load i8*, i8** %187, align 8
  br label %189

189:                                              ; preds = %172, %186
  %190 = phi i8** [ %173, %172 ], [ %187, %186 ]
  %191 = phi i8* [ %165, %172 ], [ %188, %186 ]
  %192 = icmp eq i8* %191, null
  br i1 %192, label %227, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 3
  %195 = load void (i8*, i8*)*, void (i8*, i8*)** %194, align 8
  %196 = icmp eq void (i8*, i8*)* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 33, i32 0
  %199 = load i8*, i8** %198, align 8
  call void %195(i8* %199, i8* nonnull %191) #9
  br label %227

200:                                              ; preds = %193
  call void @free(i8* nonnull %191) #9
  br label %227

201:                                              ; preds = %203
  %202 = icmp ult i64 %208, %184
  br i1 %202, label %203, label %209

203:                                              ; preds = %183, %201
  %204 = phi i64 [ 0, %183 ], [ %208, %201 ]
  %205 = getelementptr inbounds %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %43, i64 %204
  %206 = load %struct.loader_physical_device_tramp*, %struct.loader_physical_device_tramp** %205, align 8
  %207 = icmp eq %struct.loader_physical_device_tramp* %185, %206
  %208 = add nuw nsw i64 %204, 1
  br i1 %207, label %219, label %201

209:                                              ; preds = %201, %177
  %210 = bitcast %struct.loader_physical_device_tramp** %182 to i8**
  %211 = load i8*, i8** %210, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %209
  %214 = load void (i8*, i8*)*, void (i8*, i8*)** %175, align 8
  %215 = icmp eq void (i8*, i8*)* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = load i8*, i8** %176, align 8
  call void %214(i8* %217, i8* nonnull %211) #9
  br label %219

218:                                              ; preds = %213
  call void @free(i8* nonnull %211) #9
  br label %219

219:                                              ; preds = %203, %218, %216, %209
  %220 = add nuw nsw i64 %180, 1
  %221 = load i32, i32* %169, align 8
  %222 = zext i32 %221 to i64
  %223 = icmp ult i64 %220, %222
  br i1 %223, label %224, label %186

224:                                              ; preds = %219
  %225 = load i32, i32* %2, align 4
  %226 = load %struct.loader_physical_device_tramp**, %struct.loader_physical_device_tramp*** %162, align 8
  br label %177

227:                                              ; preds = %166, %200, %197, %189
  %228 = phi i8** [ %167, %166 ], [ %190, %200 ], [ %190, %197 ], [ %190, %189 ]
  %229 = load i32, i32* %2, align 4
  %230 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %9, i64 0, i32 6
  store i32 %229, i32* %230, align 8
  store i8* %42, i8** %228, align 8
  br label %231

231:                                              ; preds = %158, %227
  %232 = phi i32 [ %159, %158 ], [ 0, %227 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #9
  ret i32 %232
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ReadSortedPhysicalDevices(%struct.loader_instance* readonly, %struct.LoaderSortedPhysicalDevice** nocapture, i32* nocapture readonly) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %3
  %7 = load %struct.LoaderSortedPhysicalDevice*, %struct.LoaderSortedPhysicalDevice** %1, align 8
  %8 = icmp eq %struct.LoaderSortedPhysicalDevice* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %6
  %10 = bitcast %struct.LoaderSortedPhysicalDevice* %7 to i8*
  %11 = icmp eq %struct.loader_instance* %0, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %14 = load void (i8*, i8*)*, void (i8*, i8*)** %13, align 8
  %15 = icmp eq void (i8*, i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void %14(i8* %18, i8* nonnull %10) #9
  br label %20

19:                                               ; preds = %12, %9
  tail call void @free(i8* nonnull %10) #9
  br label %20

20:                                               ; preds = %16, %19
  store %struct.LoaderSortedPhysicalDevice* null, %struct.LoaderSortedPhysicalDevice** %1, align 8
  br label %21

21:                                               ; preds = %6, %20, %3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @setupLoaderTermPhysDevs(%struct.loader_instance*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 3
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = mul nuw nsw i64 %5, 24
  %7 = alloca %struct.loader_phys_dev_per_icd, i64 %5, align 16
  %8 = bitcast %struct.loader_phys_dev_per_icd* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 %6, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 %6, i1 false)
  %9 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 14
  %10 = load %struct.loader_icd_term*, %struct.loader_icd_term** %9, align 8
  %11 = icmp eq %struct.loader_icd_term* %10, null
  br i1 %11, label %47, label %12

12:                                               ; preds = %1, %37
  %13 = phi %struct.loader_icd_term* [ %43, %37 ], [ %10, %1 ]
  %14 = phi i32 [ %42, %37 ], [ 0, %1 ]
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.loader_phys_dev_per_icd, %struct.loader_phys_dev_per_icd* %7, i64 %15, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.loader_phys_dev_per_icd, %struct.loader_phys_dev_per_icd* %7, i64 %15, i32 1
  %18 = getelementptr inbounds %struct.loader_phys_dev_per_icd, %struct.loader_phys_dev_per_icd* %7, i64 %15, i32 2
  %19 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 4, i32 2
  %20 = bitcast %struct.VkPhysicalDevice_T*** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  %21 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %19, align 8
  %22 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 3
  %23 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %24 = call i32 %21(%struct.VkInstance_T* %23, i32* %16, %struct.VkPhysicalDevice_T** null) #9
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %12
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.1029, i64 0, i64 0), i32 %14, i32 %24)
  br label %196

27:                                               ; preds = %12
  %28 = load i32, i32* %16, align 8
  %29 = zext i32 %28 to i64
  %30 = shl nuw nsw i64 %29, 3
  %31 = alloca %struct.VkPhysicalDevice_T*, i64 %29, align 16
  %32 = bitcast %struct.VkPhysicalDevice_T** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 %30, i1 false)
  store %struct.VkPhysicalDevice_T** %31, %struct.VkPhysicalDevice_T*** %17, align 8
  %33 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %19, align 8
  %34 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %35 = call i32 %33(%struct.VkInstance_T* %34, i32* %16, %struct.VkPhysicalDevice_T** nonnull %31) #9
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %196

37:                                               ; preds = %27
  %38 = load i32, i32* %16, align 8
  %39 = load i32, i32* %2, align 4
  %40 = add i32 %39, %38
  store i32 %40, i32* %2, align 4
  store %struct.loader_icd_term* %13, %struct.loader_icd_term** %18, align 8
  %41 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %13, i64 0, i32 5
  %42 = add i32 %14, 1
  %43 = load %struct.loader_icd_term*, %struct.loader_icd_term** %41, align 8
  %44 = icmp eq %struct.loader_icd_term* %43, null
  br i1 %44, label %45, label %12

45:                                               ; preds = %37
  %46 = icmp eq i32 %40, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %1, %45
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1031, i64 0, i64 0))
  br label %196

48:                                               ; preds = %45
  %49 = zext i32 %40 to i64
  %50 = shl nuw nsw i64 %49, 3
  %51 = icmp eq %struct.loader_instance* %0, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %54 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %53, align 8
  %55 = icmp eq i8* (i8*, i64, i64, i32)* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = call i8* %54(i8* %58, i64 %50, i64 8, i32 4) #9
  %60 = load i32, i32* %2, align 4
  br label %63

61:                                               ; preds = %52, %48
  %62 = call noalias i8* @malloc(i64 %50) #9
  br label %63

63:                                               ; preds = %56, %61
  %64 = phi i32 [ %60, %56 ], [ %40, %61 ]
  %65 = phi i8* [ %59, %56 ], [ %62, %61 ]
  %66 = bitcast i8* %65 to %struct.loader_physical_device_term**
  %67 = icmp eq i8* %65, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %63
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1032, i64 0, i64 0), i32 %64)
  br label %196

69:                                               ; preds = %63
  %70 = zext i32 %64 to i64
  %71 = shl nuw nsw i64 %70, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 %71, i1 false)
  %72 = load i32, i32* %3, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %198, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 5
  %76 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 4
  %77 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %78 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %79 = bitcast %struct.loader_instance* %0 to i64*
  br label %80

80:                                               ; preds = %74, %160
  %81 = phi i32 [ %72, %74 ], [ %161, %160 ]
  %82 = phi i64 [ 0, %74 ], [ %163, %160 ]
  %83 = phi i32 [ 0, %74 ], [ %162, %160 ]
  %84 = getelementptr inbounds %struct.loader_phys_dev_per_icd, %struct.loader_phys_dev_per_icd* %7, i64 %82, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %160, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %struct.loader_phys_dev_per_icd, %struct.loader_phys_dev_per_icd* %7, i64 %82, i32 1
  %89 = getelementptr inbounds %struct.loader_phys_dev_per_icd, %struct.loader_phys_dev_per_icd* %7, i64 %82, i32 2
  %90 = bitcast %struct.loader_icd_term** %89 to i64*
  %91 = trunc i64 %82 to i8
  br label %92

92:                                               ; preds = %87, %152
  %93 = phi i64 [ 0, %87 ], [ %154, %152 ]
  %94 = phi i32 [ %83, %87 ], [ %153, %152 ]
  %95 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %75, align 8
  %96 = icmp eq %struct.loader_physical_device_term** %95, null
  br i1 %96, label %118, label %97

97:                                               ; preds = %92
  %98 = load i32, i32* %76, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %118, label %100

100:                                              ; preds = %97
  %101 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %88, align 8
  %102 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %101, i64 %93
  %103 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %102, align 8
  %104 = zext i32 %98 to i64
  br label %107

105:                                              ; preds = %107
  %106 = icmp ult i64 %114, %104
  br i1 %106, label %107, label %118

107:                                              ; preds = %100, %105
  %108 = phi i64 [ 0, %100 ], [ %114, %105 ]
  %109 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %95, i64 %108
  %110 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %109, align 8
  %111 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %110, i64 0, i32 3
  %112 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %111, align 8
  %113 = icmp eq %struct.VkPhysicalDevice_T* %103, %112
  %114 = add nuw nsw i64 %108, 1
  br i1 %113, label %115, label %105

115:                                              ; preds = %107
  %116 = zext i32 %94 to i64
  %117 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %66, i64 %116
  store %struct.loader_physical_device_term* %110, %struct.loader_physical_device_term** %117, align 8
  br label %118

118:                                              ; preds = %105, %97, %115, %92
  %119 = zext i32 %94 to i64
  %120 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %66, i64 %119
  %121 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %120, align 8
  %122 = icmp eq %struct.loader_physical_device_term* %121, null
  br i1 %122, label %123, label %152

123:                                              ; preds = %118
  br i1 %51, label %130, label %124

124:                                              ; preds = %123
  %125 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %77, align 8
  %126 = icmp eq i8* (i8*, i64, i64, i32)* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = load i8*, i8** %78, align 8
  %129 = call i8* %125(i8* %128, i64 32, i64 8, i32 4) #9
  br label %132

130:                                              ; preds = %124, %123
  %131 = call noalias i8* @malloc(i64 32) #9
  br label %132

132:                                              ; preds = %127, %130
  %133 = phi i8* [ %129, %127 ], [ %131, %130 ]
  %134 = bitcast %struct.loader_physical_device_term** %120 to i8**
  store i8* %133, i8** %134, align 8
  %135 = icmp eq i8* %133, null
  br i1 %135, label %166, label %136

136:                                              ; preds = %132
  %137 = load i64, i64* %79, align 8
  %138 = bitcast i8* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = load i64, i64* %90, align 8
  %140 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %120, align 8
  %141 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %140, i64 0, i32 1
  %142 = bitcast %struct.loader_icd_term** %141 to i64*
  store i64 %139, i64* %142, align 8
  %143 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %120, align 8
  %144 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %143, i64 0, i32 2
  store i8 %91, i8* %144, align 8
  %145 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %88, align 8
  %146 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %145, i64 %93
  %147 = bitcast %struct.VkPhysicalDevice_T** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %120, align 8
  %150 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %149, i64 0, i32 3
  %151 = bitcast %struct.VkPhysicalDevice_T** %150 to i64*
  store i64 %148, i64* %151, align 8
  br label %152

152:                                              ; preds = %136, %118
  %153 = add i32 %94, 1
  %154 = add nuw nsw i64 %93, 1
  %155 = load i32, i32* %84, align 8
  %156 = zext i32 %155 to i64
  %157 = icmp ult i64 %154, %156
  br i1 %157, label %92, label %158

158:                                              ; preds = %152
  %159 = load i32, i32* %3, align 8
  br label %160

160:                                              ; preds = %158, %80
  %161 = phi i32 [ %81, %80 ], [ %159, %158 ]
  %162 = phi i32 [ %83, %80 ], [ %153, %158 ]
  %163 = add nuw nsw i64 %82, 1
  %164 = zext i32 %161 to i64
  %165 = icmp ult i64 %163, %164
  br i1 %165, label %80, label %198

166:                                              ; preds = %132
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1033, i64 0, i64 0), i32 %94)
  store i32 %94, i32* %2, align 4
  %167 = icmp eq i32 %94, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %166
  %169 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  br label %178

170:                                              ; preds = %191, %166
  br i1 %51, label %177, label %171

171:                                              ; preds = %170
  %172 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %173 = load void (i8*, i8*)*, void (i8*, i8*)** %172, align 8
  %174 = icmp eq void (i8*, i8*)* %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %171
  %176 = load i8*, i8** %78, align 8
  call void %173(i8* %176, i8* nonnull %65) #9
  br label %196

177:                                              ; preds = %171, %170
  call void @free(i8* nonnull %65) #9
  br label %196

178:                                              ; preds = %168, %191
  %179 = phi i64 [ 0, %168 ], [ %192, %191 ]
  %180 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %66, i64 %179
  %181 = bitcast %struct.loader_physical_device_term** %180 to i8**
  %182 = load i8*, i8** %181, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %191, label %184

184:                                              ; preds = %178
  br i1 %51, label %190, label %185

185:                                              ; preds = %184
  %186 = load void (i8*, i8*)*, void (i8*, i8*)** %169, align 8
  %187 = icmp eq void (i8*, i8*)* %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = load i8*, i8** %78, align 8
  call void %186(i8* %189, i8* nonnull %182) #9
  br label %191

190:                                              ; preds = %185, %184
  call void @free(i8* nonnull %182) #9
  br label %191

191:                                              ; preds = %178, %188, %190
  %192 = add nuw nsw i64 %179, 1
  %193 = load i32, i32* %2, align 4
  %194 = zext i32 %193 to i64
  %195 = icmp ult i64 %192, %194
  br i1 %195, label %178, label %170

196:                                              ; preds = %27, %26, %47, %68, %177, %175
  %197 = phi i32 [ -1, %175 ], [ -1, %177 ], [ -3, %47 ], [ -1, %68 ], [ %24, %26 ], [ %35, %27 ]
  store i32 0, i32* %2, align 4
  br label %269

198:                                              ; preds = %160, %69
  %199 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 5
  %200 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %199, align 8
  %201 = icmp eq %struct.loader_physical_device_term** %200, null
  %202 = bitcast %struct.loader_physical_device_term** %200 to i8*
  br i1 %201, label %203, label %205

203:                                              ; preds = %198
  %204 = bitcast %struct.loader_physical_device_term*** %199 to i8**
  br label %265

205:                                              ; preds = %198
  %206 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 4
  %207 = load i32, i32* %206, align 8
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %205
  %210 = bitcast %struct.loader_physical_device_term*** %199 to i8**
  br label %226

211:                                              ; preds = %205
  %212 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %213 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %214

214:                                              ; preds = %263, %211
  %215 = phi %struct.loader_physical_device_term** [ %200, %211 ], [ %264, %263 ]
  %216 = phi i64 [ 0, %211 ], [ %259, %263 ]
  %217 = load i32, i32* %2, align 4
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %215, i64 %216
  br i1 %218, label %247, label %220

220:                                              ; preds = %214
  %221 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %219, align 8
  %222 = zext i32 %217 to i64
  br label %241

223:                                              ; preds = %258
  %224 = bitcast %struct.loader_physical_device_term*** %199 to i8**
  %225 = load i8*, i8** %224, align 8
  br label %226

226:                                              ; preds = %209, %223
  %227 = phi i8** [ %210, %209 ], [ %224, %223 ]
  %228 = phi i8* [ %202, %209 ], [ %225, %223 ]
  %229 = icmp eq i8* %228, null
  br i1 %229, label %265, label %230

230:                                              ; preds = %226
  br i1 %51, label %238, label %231

231:                                              ; preds = %230
  %232 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %233 = load void (i8*, i8*)*, void (i8*, i8*)** %232, align 8
  %234 = icmp eq void (i8*, i8*)* %233, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %237 = load i8*, i8** %236, align 8
  call void %233(i8* %237, i8* nonnull %228) #9
  br label %265

238:                                              ; preds = %231, %230
  call void @free(i8* nonnull %228) #9
  br label %265

239:                                              ; preds = %241
  %240 = icmp ult i64 %246, %222
  br i1 %240, label %241, label %247

241:                                              ; preds = %220, %239
  %242 = phi i64 [ 0, %220 ], [ %246, %239 ]
  %243 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %66, i64 %242
  %244 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %243, align 8
  %245 = icmp eq %struct.loader_physical_device_term* %221, %244
  %246 = add nuw nsw i64 %242, 1
  br i1 %245, label %258, label %239

247:                                              ; preds = %239, %214
  %248 = bitcast %struct.loader_physical_device_term** %219 to i8**
  %249 = load i8*, i8** %248, align 8
  %250 = icmp eq i8* %249, null
  br i1 %250, label %258, label %251

251:                                              ; preds = %247
  br i1 %51, label %257, label %252

252:                                              ; preds = %251
  %253 = load void (i8*, i8*)*, void (i8*, i8*)** %212, align 8
  %254 = icmp eq void (i8*, i8*)* %253, null
  br i1 %254, label %257, label %255

255:                                              ; preds = %252
  %256 = load i8*, i8** %213, align 8
  call void %253(i8* %256, i8* nonnull %249) #9
  br label %258

257:                                              ; preds = %252, %251
  call void @free(i8* nonnull %249) #9
  br label %258

258:                                              ; preds = %241, %257, %255, %247
  %259 = add nuw nsw i64 %216, 1
  %260 = load i32, i32* %206, align 8
  %261 = zext i32 %260 to i64
  %262 = icmp ult i64 %259, %261
  br i1 %262, label %263, label %223

263:                                              ; preds = %258
  %264 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %199, align 8
  br label %214

265:                                              ; preds = %203, %238, %235, %226
  %266 = phi i8** [ %204, %203 ], [ %227, %238 ], [ %227, %235 ], [ %227, %226 ]
  %267 = load i32, i32* %2, align 4
  %268 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 4
  store i32 %267, i32* %268, align 8
  store i8* %65, i8** %266, align 8
  br label %269

269:                                              ; preds = %196, %265
  %270 = phi i32 [ 0, %265 ], [ %197, %196 ]
  ret i32 %270
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @terminator_EnumerateInstanceVersion(%struct.VkEnumerateInstanceVersionChain* nocapture readnone, i32* nocapture) local_unnamed_addr #13 {
  store i32 4202675, i32* %1, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_EnumerateInstanceExtensionProperties(%struct.VkEnumerateInstanceExtensionPropertiesChain* nocapture readnone, i8* readonly, i32* nocapture, %struct.VkExtensionProperties*) local_unnamed_addr #0 {
  %5 = alloca %struct.loader_layer_list, align 8
  %6 = alloca %struct.loader_extension_list, align 8
  %7 = alloca %struct.loader_icd_tramp_list, align 8
  %8 = bitcast %struct.loader_layer_list* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = bitcast %struct.loader_extension_list* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = bitcast %struct.loader_icd_tramp_list* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false)
  %11 = icmp eq i8* %1, null
  br i1 %11, label %97, label %12

12:                                               ; preds = %4
  %13 = load i8, i8* %1, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %97, label %15

15:                                               ; preds = %12, %69
  %16 = phi i64 [ %73, %69 ], [ 0, %12 ]
  %17 = phi i32 [ %65, %69 ], [ 0, %12 ]
  %18 = phi i32 [ %64, %69 ], [ 0, %12 ]
  %19 = phi i32 [ %67, %69 ], [ 0, %12 ]
  %20 = phi i8 [ %72, %69 ], [ %13, %12 ]
  %21 = icmp eq i32 %19, 256
  br i1 %21, label %211, label %22

22:                                               ; preds = %15
  %23 = icmp slt i8 %20, 32
  %24 = icmp eq i8 %20, 127
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %63

26:                                               ; preds = %22
  %27 = sext i8 %20 to i32
  %28 = and i32 %27, -32
  %29 = icmp eq i32 %28, -64
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = and i32 %27, -16
  %32 = icmp eq i32 %31, -32
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = and i32 %27, -8
  %35 = icmp eq i32 %34, -16
  %36 = select i1 %35, i32 %17, i32 2
  %37 = select i1 %35, i32 3, i32 %18
  br label %38

38:                                               ; preds = %33, %30, %26
  %39 = phi i32 [ %17, %26 ], [ %17, %30 ], [ %36, %33 ]
  %40 = phi i32 [ 1, %26 ], [ 2, %30 ], [ %37, %33 ]
  %41 = icmp sgt i32 %40, 0
  %42 = icmp slt i32 %19, 256
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %63

44:                                               ; preds = %38, %50
  %45 = phi i64 [ %48, %50 ], [ %16, %38 ]
  %46 = phi i32 [ %57, %50 ], [ 0, %38 ]
  %47 = phi i32 [ %56, %50 ], [ %39, %38 ]
  %48 = add nsw i64 %45, 1
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %211, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds i8, i8* %1, i64 %48
  %52 = load i8, i8* %51, align 1
  %53 = and i8 %52, -64
  %54 = icmp eq i8 %53, -128
  %55 = or i32 %47, 2
  %56 = select i1 %54, i32 %47, i32 %55
  %57 = add nuw nsw i32 %46, 1
  %58 = icmp slt i32 %57, %40
  %59 = icmp slt i64 %48, 256
  %60 = and i1 %59, %58
  br i1 %60, label %44, label %61

61:                                               ; preds = %50
  %62 = trunc i64 %48 to i32
  br label %63

63:                                               ; preds = %61, %38, %22
  %64 = phi i32 [ %40, %38 ], [ %40, %61 ], [ 0, %22 ]
  %65 = phi i32 [ %39, %38 ], [ %56, %61 ], [ %17, %22 ]
  %66 = phi i32 [ %19, %38 ], [ %62, %61 ], [ %19, %22 ]
  %67 = add nsw i32 %66, 1
  %68 = icmp slt i32 %66, 256
  br i1 %68, label %69, label %75

69:                                               ; preds = %63
  %70 = sext i32 %67 to i64
  %71 = getelementptr inbounds i8, i8* %1, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i32 %67 to i64
  %74 = icmp eq i8 %72, 0
  br i1 %74, label %75, label %15

75:                                               ; preds = %63, %69
  %76 = icmp eq i32 %65, 0
  br i1 %76, label %77, label %211

77:                                               ; preds = %75
  call void @loaderScanForLayers(%struct.loader_instance* null, %struct.loader_layer_list* nonnull %5)
  %78 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %211, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 2
  %83 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %82, align 8
  %84 = zext i32 %79 to i64
  br label %85

85:                                               ; preds = %85, %81
  %86 = phi i64 [ %93, %85 ], [ 0, %81 ]
  %87 = phi %struct.loader_extension_list* [ %92, %85 ], [ null, %81 ]
  %88 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %83, i64 %86, i32 0, i32 0, i64 0
  %89 = call i32 @strcmp(i8* %88, i8* nonnull %1) #15
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %83, i64 %86, i32 6
  %92 = select i1 %90, %struct.loader_extension_list* %91, %struct.loader_extension_list* %87
  %93 = add nuw nsw i64 %86, 1
  %94 = xor i1 %90, true
  %95 = icmp ult i64 %93, %84
  %96 = and i1 %95, %94
  br i1 %96, label %85, label %165

97:                                               ; preds = %12, %4
  tail call void @loader_preload_icds()
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false)
  %98 = call i32 @loader_icd_scan(%struct.loader_instance* null, %struct.loader_icd_tramp_list* nonnull %7)
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %7, i64 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %211

104:                                              ; preds = %100
  %105 = icmp eq i32 %98, -1
  br i1 %105, label %211, label %106

106:                                              ; preds = %97, %104
  %107 = call i32 @loader_get_icd_loader_instance_extensions(%struct.loader_instance* null, %struct.loader_icd_tramp_list* nonnull %7, %struct.loader_extension_list* nonnull %6)
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %211

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %7, i64 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %142, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %7, i64 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %struct.loader_icd_tramp_list, %struct.loader_icd_tramp_list* %7, i64 0, i32 2
  br i1 %116, label %118, label %121

118:                                              ; preds = %113
  %119 = bitcast %struct.loader_scanned_icd** %117 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %125

121:                                              ; preds = %113
  %122 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %117, align 8
  %123 = zext i32 %115 to i64
  %124 = bitcast %struct.loader_scanned_icd* %122 to i8*
  br label %130

125:                                              ; preds = %139, %118
  %126 = phi i8* [ %120, %118 ], [ %124, %139 ]
  %127 = icmp eq i8* %126, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  call void @free(i8* nonnull %126) #9
  br label %129

129:                                              ; preds = %128, %125
  store i64 0, i64* %110, align 8
  store i32 0, i32* %114, align 8
  store %struct.loader_scanned_icd* null, %struct.loader_scanned_icd** %117, align 8
  br label %142

130:                                              ; preds = %139, %121
  %131 = phi i64 [ %140, %139 ], [ 0, %121 ]
  %132 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %122, i64 %131, i32 1
  %133 = load i8*, i8** %132, align 8
  %134 = call i32 @dlclose(i8* %133) #9
  %135 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %122, i64 %131, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %130
  call void @free(i8* nonnull %136) #9
  br label %139

139:                                              ; preds = %138, %130
  %140 = add nuw nsw i64 %131, 1
  %141 = icmp eq i64 %140, %123
  br i1 %141, label %125, label %130

142:                                              ; preds = %109, %129
  call void @loaderScanForImplicitLayers(%struct.loader_instance* null, %struct.loader_layer_list* nonnull %5)
  %143 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %167, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %5, i64 0, i32 2
  br label %148

148:                                              ; preds = %146, %160
  %149 = phi i64 [ 0, %146 ], [ %161, %160 ]
  %150 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %147, align 8
  %151 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %150, i64 %149
  %152 = call zeroext i1 @loaderImplicitLayerIsEnabled(%struct.loader_instance* null, %struct.loader_layer_properties* %151)
  br i1 %152, label %153, label %160

153:                                              ; preds = %148
  %154 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %147, align 8
  %155 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %154, i64 %149, i32 6, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %154, i64 %149, i32 6, i32 2
  %158 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %157, align 8
  %159 = call i32 @loader_add_to_ext_list(%struct.loader_instance* null, %struct.loader_extension_list* nonnull %6, i32 %156, %struct.VkExtensionProperties* %158)
  br label %160

160:                                              ; preds = %148, %153
  %161 = add nuw nsw i64 %149, 1
  %162 = load i32, i32* %143, align 8
  %163 = zext i32 %162 to i64
  %164 = icmp ult i64 %161, %163
  br i1 %164, label %148, label %167

165:                                              ; preds = %85
  %166 = icmp eq %struct.loader_extension_list* %92, null
  br i1 %166, label %211, label %167

167:                                              ; preds = %160, %142, %165
  %168 = phi %struct.loader_extension_list* [ %92, %165 ], [ %6, %142 ], [ %6, %160 ]
  %169 = icmp eq %struct.VkExtensionProperties* %3, null
  br i1 %169, label %170, label %173

170:                                              ; preds = %167
  %171 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %168, i64 0, i32 1
  %172 = load i32, i32* %171, align 8
  store i32 %172, i32* %2, align 4
  br label %211

173:                                              ; preds = %167
  %174 = load i32, i32* %2, align 4
  %175 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %168, i64 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = icmp ult i32 %174, %176
  %178 = select i1 %177, i32 %174, i32 %176
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %173
  %181 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %168, i64 0, i32 2
  %182 = zext i32 %178 to i64
  %183 = and i64 %182, 1
  %184 = icmp eq i32 %178, 1
  br i1 %184, label %187, label %185

185:                                              ; preds = %180
  %186 = sub nsw i64 %182, %183
  br label %198

187:                                              ; preds = %198, %180
  %188 = phi i64 [ 0, %180 ], [ %208, %198 ]
  %189 = icmp eq i64 %183, 0
  br i1 %189, label %194, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %188, i32 0, i64 0
  %192 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %181, align 8
  %193 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %192, i64 %188, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %193, i64 260, i1 false)
  br label %194

194:                                              ; preds = %190, %187, %173
  store i32 %178, i32* %2, align 4
  %195 = load i32, i32* %175, align 8
  %196 = icmp ult i32 %178, %195
  %197 = select i1 %196, i32 5, i32 0
  br label %211

198:                                              ; preds = %198, %185
  %199 = phi i64 [ 0, %185 ], [ %208, %198 ]
  %200 = phi i64 [ %186, %185 ], [ %209, %198 ]
  %201 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %199, i32 0, i64 0
  %202 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %181, align 8
  %203 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %202, i64 %199, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %201, i8* align 4 %203, i64 260, i1 false)
  %204 = or i64 %199, 1
  %205 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %204, i32 0, i64 0
  %206 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %181, align 8
  %207 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %206, i64 %204, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %207, i64 260, i1 false)
  %208 = add nuw nsw i64 %199, 2
  %209 = add i64 %200, -2
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %187, label %198

211:                                              ; preds = %15, %44, %77, %194, %165, %75, %100, %106, %104, %170
  %212 = phi i32 [ 0, %170 ], [ %98, %100 ], [ -1, %104 ], [ %107, %106 ], [ -7, %75 ], [ -6, %165 ], [ %197, %194 ], [ -6, %77 ], [ -7, %44 ], [ -7, %15 ]
  %213 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %6, i64 0, i32 2
  %214 = bitcast %struct.VkExtensionProperties** %213 to i8**
  %215 = load i8*, i8** %214, align 8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %218, label %217

217:                                              ; preds = %211
  call void @free(i8* nonnull %215) #9
  br label %218

218:                                              ; preds = %211, %217
  %219 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %6, i64 0, i32 1
  store i32 0, i32* %219, align 8
  %220 = getelementptr inbounds %struct.loader_extension_list, %struct.loader_extension_list* %6, i64 0, i32 0
  store i64 0, i64* %220, align 8
  call void @loaderDeleteLayerListAndProperties(%struct.loader_instance* null, %struct.loader_layer_list* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret i32 %212
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_EnumerateInstanceLayerProperties(%struct.VkEnumerateInstanceLayerPropertiesChain* nocapture readnone, i32* nocapture, %struct.VkLayerProperties*) local_unnamed_addr #0 {
  %4 = alloca %struct.loader_layer_list, align 8
  %5 = bitcast %struct.loader_layer_list* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  store %struct.loader_instance* null, %struct.loader_instance** @tls_instance, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false)
  call void @loaderScanForLayers(%struct.loader_instance* null, %struct.loader_layer_list* nonnull %4)
  %6 = icmp eq %struct.VkLayerProperties* %2, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %4, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %1, align 4
  br label %44

10:                                               ; preds = %3
  %11 = load i32, i32* %1, align 4
  %12 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %4, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %11, %13
  %15 = select i1 %14, i32 %11, i32 %13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %4, i64 0, i32 2
  %19 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %18, align 8
  %20 = zext i32 %15 to i64
  %21 = and i64 %20, 1
  %22 = icmp eq i32 %15, 1
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = sub nsw i64 %20, %21
  br label %33

25:                                               ; preds = %33, %17
  %26 = phi i64 [ 0, %17 ], [ %41, %33 ]
  %27 = icmp eq i64 %21, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %2, i64 %26, i32 0, i64 0
  %30 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %19, i64 %26, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 8 %30, i64 520, i1 false)
  br label %31

31:                                               ; preds = %28, %25, %10
  store i32 %15, i32* %1, align 4
  %32 = select i1 %14, i32 5, i32 0
  br label %44

33:                                               ; preds = %33, %23
  %34 = phi i64 [ 0, %23 ], [ %41, %33 ]
  %35 = phi i64 [ %24, %23 ], [ %42, %33 ]
  %36 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %2, i64 %34, i32 0, i64 0
  %37 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %19, i64 %34, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 8 %37, i64 520, i1 false)
  %38 = or i64 %34, 1
  %39 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %2, i64 %38, i32 0, i64 0
  %40 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %19, i64 %38, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 8 %40, i64 520, i1 false)
  %41 = add nuw nsw i64 %34, 2
  %42 = add i64 %35, -2
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %25, label %33

44:                                               ; preds = %31, %7
  %45 = phi i32 [ 0, %7 ], [ %32, %31 ]
  call void @loaderDeleteLayerListAndProperties(%struct.loader_instance* null, %struct.loader_layer_list* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_init_library() #0 {
  tail call void @loader_initialize()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @loader_free_library() #0 {
  tail call void @loader_unload_preloaded_icds() #9
  %1 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* nonnull @loader_lock) #9
  %2 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* nonnull @loader_json_lock) #9
  %3 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* nonnull @loader_preload_icd_lock) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @setupLoaderTermPhysDevGroups(%struct.loader_instance*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9
  store i32 0, i32* %2, align 4
  %5 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.1036, i64 0, i64 0))
  br label %511

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 14
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = icmp eq %struct.loader_icd_term* %11, null
  br i1 %12, label %49, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %15 = bitcast %union.loader_instance_extension_enables* %14 to i16*
  br label %16

16:                                               ; preds = %13, %42
  %17 = phi %struct.loader_icd_term* [ %11, %13 ], [ %47, %42 ]
  %18 = phi i32 [ 0, %13 ], [ %46, %42 ]
  %19 = phi i32 [ 0, %13 ], [ %44, %42 ]
  %20 = load i16, i16* %15, align 8
  %21 = and i16 %20, 2
  %22 = icmp eq i16 %21, 0
  %23 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %17, i64 0, i32 4, i32 54
  %24 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %17, i64 0, i32 4, i32 16
  %25 = select i1 %22, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %24, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %23
  %26 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %25, align 8
  store i32 0, i32* %2, align 4
  %27 = icmp eq i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)* %26, null
  br i1 %27, label %28, label %36

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %17, i64 0, i32 4, i32 2
  %30 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %29, align 8
  %31 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %17, i64 0, i32 3
  %32 = load %struct.VkInstance_T*, %struct.VkInstance_T** %31, align 8
  %33 = call i32 %30(%struct.VkInstance_T* %32, i32* nonnull %2, %struct.VkPhysicalDevice_T** null) #9
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %28
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.1037, i64 0, i64 0), i32 %18)
  br label %511

36:                                               ; preds = %16
  %37 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %17, i64 0, i32 3
  %38 = load %struct.VkInstance_T*, %struct.VkInstance_T** %37, align 8
  %39 = call i32 %26(%struct.VkInstance_T* %38, i32* nonnull %2, %struct.VkPhysicalDeviceGroupProperties* null) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.1038, i64 0, i64 0), i32 %18)
  br label %511

42:                                               ; preds = %28, %36
  %43 = load i32, i32* %2, align 4
  %44 = add i32 %43, %19
  %45 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %17, i64 0, i32 5
  %46 = add i32 %18, 1
  %47 = load %struct.loader_icd_term*, %struct.loader_icd_term** %45, align 8
  %48 = icmp eq %struct.loader_icd_term* %47, null
  br i1 %48, label %49, label %16

49:                                               ; preds = %42, %9
  %50 = phi i32 [ 0, %9 ], [ %44, %42 ]
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 3
  %53 = icmp eq %struct.loader_instance* %0, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %56 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %55, align 8
  %57 = icmp eq i8* (i8*, i64, i64, i32)* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = call i8* %56(i8* %60, i64 %52, i64 8, i32 4) #9
  br label %64

62:                                               ; preds = %54, %49
  %63 = call noalias i8* @malloc(i64 %52) #9
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi i8* [ %61, %58 ], [ %63, %62 ]
  %66 = bitcast i8* %65 to %struct.VkPhysicalDeviceGroupProperties**
  %67 = icmp eq i8* %65, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1039, i64 0, i64 0), i32 %50)
  br label %511

69:                                               ; preds = %64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 %52, i1 false)
  %70 = mul nuw nsw i64 %51, 288
  %71 = alloca %struct.VkPhysicalDeviceGroupProperties, i64 %51, align 16
  %72 = bitcast %struct.VkPhysicalDeviceGroupProperties* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %72, i8 -86, i64 %70, i1 false)
  %73 = alloca i8, i64 %51, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 -86, i64 %51, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %72, i8 0, i64 %70, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 0, i64 %51, i1 false)
  %74 = icmp eq i32 %50, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %69
  %76 = and i64 %51, 1
  %77 = icmp eq i32 %50, 1
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = sub nsw i64 %51, %76
  br label %94

80:                                               ; preds = %94, %75
  %81 = phi i64 [ 0, %75 ], [ %104, %94 ]
  %82 = icmp eq i64 %76, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %81, i32 0
  store i32 1000070000, i32* %84, align 16
  %85 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %81, i32 1
  store i8* null, i8** %85, align 8
  %86 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %81, i32 4
  store i32 0, i32* %86, align 8
  br label %87

87:                                               ; preds = %83, %80, %69
  store i32 0, i32* %2, align 4
  %88 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %89 = icmp eq %struct.loader_icd_term* %88, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %87
  %91 = bitcast i32* %3 to i8*
  %92 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 25
  %93 = bitcast %union.loader_instance_extension_enables* %92 to i16*
  br label %110

94:                                               ; preds = %94, %78
  %95 = phi i64 [ 0, %78 ], [ %104, %94 ]
  %96 = phi i64 [ %79, %78 ], [ %105, %94 ]
  %97 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %95, i32 0
  store i32 1000070000, i32* %97, align 16
  %98 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %95, i32 1
  store i8* null, i8** %98, align 8
  %99 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %95, i32 4
  store i32 0, i32* %99, align 8
  %100 = or i64 %95, 1
  %101 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %100, i32 0
  store i32 1000070000, i32* %101, align 16
  %102 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %100, i32 1
  store i8* null, i8** %102, align 8
  %103 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %100, i32 4
  store i32 0, i32* %103, align 8
  %104 = add nuw nsw i64 %95, 2
  %105 = add i64 %96, -2
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %80, label %94

107:                                              ; preds = %283, %87
  br i1 %74, label %444, label %108

108:                                              ; preds = %107
  %109 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 5
  br label %291

110:                                              ; preds = %90, %283
  %111 = phi i32 [ 0, %90 ], [ %286, %283 ]
  %112 = phi %struct.loader_icd_term* [ %88, %90 ], [ %289, %283 ]
  %113 = phi i32 [ 0, %90 ], [ %288, %283 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #9
  %114 = sub i32 %50, %111
  store i32 %114, i32* %3, align 4
  %115 = load i16, i16* %93, align 8
  %116 = and i16 %115, 2
  %117 = icmp eq i16 %116, 0
  %118 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %112, i64 0, i32 4, i32 54
  %119 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %112, i64 0, i32 4, i32 16
  %120 = select i1 %117, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %119, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %118
  %121 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)** %120, align 8
  %122 = icmp eq i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)* %121, null
  br i1 %122, label %123, label %171

123:                                              ; preds = %110
  %124 = zext i32 %114 to i64
  %125 = shl nuw nsw i64 %124, 3
  %126 = alloca %struct.VkPhysicalDevice_T*, i64 %124, align 16
  %127 = bitcast %struct.VkPhysicalDevice_T** %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -86, i64 %125, i1 false)
  %128 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %112, i64 0, i32 4, i32 2
  %129 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %128, align 8
  %130 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %112, i64 0, i32 3
  %131 = load %struct.VkInstance_T*, %struct.VkInstance_T** %130, align 8
  %132 = call i32 %129(%struct.VkInstance_T* %131, i32* nonnull %3, %struct.VkPhysicalDevice_T** nonnull %126) #9
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %266

134:                                              ; preds = %123
  %135 = load i32, i32* %3, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %283, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %2, align 4
  %139 = zext i32 %135 to i64
  %140 = and i64 %139, 1
  %141 = icmp eq i32 %135, 1
  br i1 %141, label %269, label %142

142:                                              ; preds = %137
  %143 = sub nsw i64 %139, %140
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i64 [ 0, %142 ], [ %168, %144 ]
  %146 = phi i64 [ %143, %142 ], [ %169, %144 ]
  %147 = trunc i64 %145 to i32
  %148 = add i32 %138, %147
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %149, i32 2
  store i32 1, i32* %150, align 16
  %151 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %126, i64 %145
  %152 = bitcast %struct.VkPhysicalDevice_T** %151 to i64*
  %153 = load i64, i64* %152, align 16
  %154 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %149, i32 3
  %155 = bitcast [32 x %struct.VkPhysicalDevice_T*]* %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = getelementptr inbounds i8, i8* %73, i64 %149
  store i8 0, i8* %156, align 1
  %157 = or i64 %145, 1
  %158 = trunc i64 %157 to i32
  %159 = add i32 %138, %158
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %160, i32 2
  store i32 1, i32* %161, align 16
  %162 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %126, i64 %157
  %163 = bitcast %struct.VkPhysicalDevice_T** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %160, i32 3
  %166 = bitcast [32 x %struct.VkPhysicalDevice_T*]* %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %73, i64 %160
  store i8 0, i8* %167, align 1
  %168 = add nuw nsw i64 %145, 2
  %169 = add i64 %146, -2
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %269, label %144

171:                                              ; preds = %110
  %172 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %112, i64 0, i32 3
  %173 = load %struct.VkInstance_T*, %struct.VkInstance_T** %172, align 8
  %174 = zext i32 %111 to i64
  %175 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %174
  %176 = call i32 %121(%struct.VkInstance_T* %173, i32* nonnull %3, %struct.VkPhysicalDeviceGroupProperties* %175) #9
  %177 = load i32, i32* %3, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %256, label %179

179:                                              ; preds = %171
  %180 = load i32, i32* %2, align 4
  %181 = zext i32 %177 to i64
  %182 = icmp ult i32 %177, 32
  br i1 %182, label %183, label %185

183:                                              ; preds = %254, %185, %179
  %184 = phi i64 [ 0, %185 ], [ 0, %179 ], [ %193, %254 ]
  br label %258

185:                                              ; preds = %179
  %186 = add nsw i64 %181, -1
  %187 = trunc i64 %186 to i32
  %188 = xor i32 %180, -1
  %189 = icmp ult i32 %188, %187
  %190 = icmp ugt i64 %186, 4294967295
  %191 = or i1 %189, %190
  br i1 %191, label %183, label %192

192:                                              ; preds = %185
  %193 = and i64 %181, 4294967264
  %194 = add nsw i64 %193, -32
  %195 = lshr exact i64 %194, 5
  %196 = add nuw nsw i64 %195, 1
  %197 = and i64 %196, 3
  %198 = icmp ult i64 %194, 96
  br i1 %198, label %238, label %199

199:                                              ; preds = %192
  %200 = sub nsw i64 %196, %197
  br label %201

201:                                              ; preds = %201, %199
  %202 = phi i64 [ 0, %199 ], [ %235, %201 ]
  %203 = phi i64 [ %200, %199 ], [ %236, %201 ]
  %204 = trunc i64 %202 to i32
  %205 = add i32 %180, %204
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %73, i64 %206
  %208 = bitcast i8* %207 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %208, align 1
  %209 = getelementptr inbounds i8, i8* %207, i64 16
  %210 = bitcast i8* %209 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %210, align 1
  %211 = trunc i64 %202 to i32
  %212 = or i32 %211, 32
  %213 = add i32 %180, %212
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %73, i64 %214
  %216 = bitcast i8* %215 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %216, align 1
  %217 = getelementptr inbounds i8, i8* %215, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %218, align 1
  %219 = trunc i64 %202 to i32
  %220 = or i32 %219, 64
  %221 = add i32 %180, %220
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %73, i64 %222
  %224 = bitcast i8* %223 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %224, align 1
  %225 = getelementptr inbounds i8, i8* %223, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %226, align 1
  %227 = trunc i64 %202 to i32
  %228 = or i32 %227, 96
  %229 = add i32 %180, %228
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8, i8* %73, i64 %230
  %232 = bitcast i8* %231 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %232, align 1
  %233 = getelementptr inbounds i8, i8* %231, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %234, align 1
  %235 = add i64 %202, 128
  %236 = add i64 %203, -4
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %201, !llvm.loop !8

238:                                              ; preds = %201, %192
  %239 = phi i64 [ 0, %192 ], [ %235, %201 ]
  %240 = icmp eq i64 %197, 0
  br i1 %240, label %254, label %241

241:                                              ; preds = %238, %241
  %242 = phi i64 [ %251, %241 ], [ %239, %238 ]
  %243 = phi i64 [ %252, %241 ], [ %197, %238 ]
  %244 = trunc i64 %242 to i32
  %245 = add i32 %180, %244
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %73, i64 %246
  %248 = bitcast i8* %247 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %248, align 1
  %249 = getelementptr inbounds i8, i8* %247, i64 16
  %250 = bitcast i8* %249 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %250, align 1
  %251 = add i64 %242, 32
  %252 = add i64 %243, -1
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %241, !llvm.loop !9

254:                                              ; preds = %241, %238
  %255 = icmp eq i64 %193, %181
  br i1 %255, label %256, label %183

256:                                              ; preds = %258, %254, %171
  %257 = icmp eq i32 %176, 0
  br i1 %257, label %283, label %266

258:                                              ; preds = %183, %258
  %259 = phi i64 [ %264, %258 ], [ %184, %183 ]
  %260 = trunc i64 %259 to i32
  %261 = add i32 %180, %260
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds i8, i8* %73, i64 %262
  store i8 0, i8* %263, align 1
  %264 = add nuw nsw i64 %259, 1
  %265 = icmp ult i64 %264, %181
  br i1 %265, label %258, label %256, !llvm.loop !10

266:                                              ; preds = %256, %123
  %267 = phi i8* [ getelementptr inbounds ([128 x i8], [128 x i8]* @.str.1037, i64 0, i64 0), %123 ], [ getelementptr inbounds ([120 x i8], [120 x i8]* @.str.1042, i64 0, i64 0), %256 ]
  %268 = phi i32 [ %132, %123 ], [ %176, %256 ]
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* %267, i32 %113)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #9
  br label %411

269:                                              ; preds = %144, %137
  %270 = phi i64 [ 0, %137 ], [ %168, %144 ]
  %271 = icmp eq i64 %140, 0
  br i1 %271, label %283, label %272

272:                                              ; preds = %269
  %273 = trunc i64 %270 to i32
  %274 = add i32 %138, %273
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %275, i32 2
  store i32 1, i32* %276, align 16
  %277 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %126, i64 %270
  %278 = bitcast %struct.VkPhysicalDevice_T** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %275, i32 3
  %281 = bitcast [32 x %struct.VkPhysicalDevice_T*]* %280 to i64*
  store i64 %279, i64* %281, align 8
  %282 = getelementptr inbounds i8, i8* %73, i64 %275
  store i8 0, i8* %282, align 1
  br label %283

283:                                              ; preds = %272, %269, %134, %256
  %284 = phi i32 [ 0, %134 ], [ %177, %256 ], [ %135, %269 ], [ %135, %272 ]
  %285 = load i32, i32* %2, align 4
  %286 = add i32 %285, %284
  store i32 %286, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #9
  %287 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %112, i64 0, i32 5
  %288 = add i32 %113, 1
  %289 = load %struct.loader_icd_term*, %struct.loader_icd_term** %287, align 8
  %290 = icmp eq %struct.loader_icd_term* %289, null
  br i1 %290, label %107, label %110

291:                                              ; preds = %330, %108
  %292 = phi i64 [ 0, %108 ], [ %331, %330 ]
  %293 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %292, i32 2
  %294 = load i32, i32* %293, align 16
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %330, label %296

296:                                              ; preds = %291
  %297 = load i32, i32* %5, align 8
  %298 = icmp eq i32 %297, 0
  %299 = zext i32 %297 to i64
  %300 = zext i32 %294 to i64
  br label %307

301:                                              ; preds = %330
  br i1 %74, label %444, label %302

302:                                              ; preds = %301
  %303 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 8
  %304 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 9
  %305 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %306 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %333

307:                                              ; preds = %296, %323
  %308 = phi i64 [ 0, %296 ], [ %325, %323 ]
  br i1 %298, label %327, label %309

309:                                              ; preds = %307
  %310 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %292, i32 3, i64 %308
  %311 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %310, align 8
  %312 = load %struct.loader_physical_device_term**, %struct.loader_physical_device_term*** %109, align 8
  br label %315

313:                                              ; preds = %315
  %314 = icmp ult i64 %322, %299
  br i1 %314, label %315, label %327

315:                                              ; preds = %309, %313
  %316 = phi i64 [ 0, %309 ], [ %322, %313 ]
  %317 = getelementptr inbounds %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %312, i64 %316
  %318 = load %struct.loader_physical_device_term*, %struct.loader_physical_device_term** %317, align 8
  %319 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %318, i64 0, i32 3
  %320 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %319, align 8
  %321 = icmp eq %struct.VkPhysicalDevice_T* %311, %320
  %322 = add nuw nsw i64 %316, 1
  br i1 %321, label %323, label %313

323:                                              ; preds = %315
  %324 = bitcast %struct.VkPhysicalDevice_T** %310 to %struct.loader_physical_device_term**
  store %struct.loader_physical_device_term* %318, %struct.loader_physical_device_term** %324, align 8
  %325 = add nuw nsw i64 %308, 1
  %326 = icmp ult i64 %325, %300
  br i1 %326, label %307, label %330

327:                                              ; preds = %307, %313
  %328 = trunc i64 %308 to i32
  %329 = trunc i64 %292 to i32
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.1043, i64 0, i64 0), i32 %328, i32 %329)
  br label %411

330:                                              ; preds = %323, %291
  %331 = add nuw nsw i64 %292, 1
  %332 = icmp eq i64 %331, %51
  br i1 %332, label %301, label %291

333:                                              ; preds = %407, %302
  %334 = phi i64 [ 0, %302 ], [ %409, %407 ]
  %335 = phi i32 [ 0, %302 ], [ %408, %407 ]
  %336 = getelementptr inbounds i8, i8* %73, i64 %334
  %337 = load i8, i8* %336, align 1, !range !4
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %339, label %407

339:                                              ; preds = %333
  %340 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %334
  %341 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %334, i32 2
  %342 = load i32, i32* %341, align 16
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %407, label %344

344:                                              ; preds = %339
  %345 = load i32, i32* %303, align 8
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %384, label %347

347:                                              ; preds = %344
  %348 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %304, align 8
  %349 = zext i32 %342 to i64
  %350 = zext i32 %345 to i64
  br label %351

351:                                              ; preds = %347, %381
  %352 = phi i64 [ 0, %347 ], [ %382, %381 ]
  %353 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %348, i64 %352
  %354 = load %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %353, align 8
  %355 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %354, i64 0, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %342, %356
  br i1 %357, label %358, label %381

358:                                              ; preds = %351, %370
  %359 = phi i64 [ %371, %370 ], [ 0, %351 ]
  %360 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %354, i64 0, i32 3, i64 %359
  %361 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %360, align 8
  br label %364

362:                                              ; preds = %364
  %363 = icmp eq i64 %369, %349
  br i1 %363, label %381, label %364

364:                                              ; preds = %362, %358
  %365 = phi i64 [ 0, %358 ], [ %369, %362 ]
  %366 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties, %struct.VkPhysicalDeviceGroupProperties* %71, i64 %334, i32 3, i64 %365
  %367 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %366, align 8
  %368 = icmp eq %struct.VkPhysicalDevice_T* %367, %361
  %369 = add nuw nsw i64 %365, 1
  br i1 %368, label %370, label %362

370:                                              ; preds = %364
  %371 = add nuw nsw i64 %359, 1
  %372 = icmp eq i64 %371, %349
  br i1 %372, label %373, label %358

373:                                              ; preds = %370
  %374 = and i64 %352, 4294967295
  %375 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %348, i64 %374
  %376 = bitcast %struct.VkPhysicalDeviceGroupProperties** %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = zext i32 %335 to i64
  %379 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %66, i64 %378
  %380 = bitcast %struct.VkPhysicalDeviceGroupProperties** %379 to i64*
  store i64 %377, i64* %380, align 8
  br label %384

381:                                              ; preds = %362, %351
  %382 = add nuw nsw i64 %352, 1
  %383 = icmp ult i64 %382, %350
  br i1 %383, label %351, label %384

384:                                              ; preds = %381, %344, %373
  %385 = zext i32 %335 to i64
  %386 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %66, i64 %385
  %387 = load %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %386, align 8
  %388 = icmp eq %struct.VkPhysicalDeviceGroupProperties* %387, null
  br i1 %388, label %389, label %405

389:                                              ; preds = %384
  br i1 %53, label %396, label %390

390:                                              ; preds = %389
  %391 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %305, align 8
  %392 = icmp eq i8* (i8*, i64, i64, i32)* %391, null
  br i1 %392, label %396, label %393

393:                                              ; preds = %390
  %394 = load i8*, i8** %306, align 8
  %395 = call i8* %391(i8* %394, i64 288, i64 8, i32 4) #9
  br label %398

396:                                              ; preds = %390, %389
  %397 = call noalias i8* @malloc(i64 288) #9
  br label %398

398:                                              ; preds = %393, %396
  %399 = phi i8* [ %395, %393 ], [ %397, %396 ]
  %400 = bitcast %struct.VkPhysicalDeviceGroupProperties** %386 to i8**
  store i8* %399, i8** %400, align 8
  %401 = icmp eq i8* %399, null
  br i1 %401, label %402, label %403

402:                                              ; preds = %398
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1044, i64 0, i64 0), i32 %335)
  br label %411

403:                                              ; preds = %398
  %404 = bitcast %struct.VkPhysicalDeviceGroupProperties* %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %399, i8* align 16 %404, i64 288, i1 false)
  br label %405

405:                                              ; preds = %403, %384
  %406 = add i32 %335, 1
  br label %407

407:                                              ; preds = %333, %339, %405
  %408 = phi i32 [ %335, %333 ], [ %335, %339 ], [ %406, %405 ]
  %409 = add nuw nsw i64 %334, 1
  %410 = icmp eq i64 %409, %51
  br i1 %410, label %444, label %333

411:                                              ; preds = %402, %327, %266
  %412 = phi i32 [ %335, %402 ], [ %50, %327 ], [ %50, %266 ]
  %413 = phi i32 [ -1, %402 ], [ -3, %327 ], [ %268, %266 ]
  %414 = icmp eq i32 %412, 0
  br i1 %414, label %419, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %417 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %418 = zext i32 %412 to i64
  br label %428

419:                                              ; preds = %441, %411
  br i1 %53, label %427, label %420

420:                                              ; preds = %419
  %421 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %422 = load void (i8*, i8*)*, void (i8*, i8*)** %421, align 8
  %423 = icmp eq void (i8*, i8*)* %422, null
  br i1 %423, label %427, label %424

424:                                              ; preds = %420
  %425 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %426 = load i8*, i8** %425, align 8
  call void %422(i8* %426, i8* nonnull %65) #9
  br label %511

427:                                              ; preds = %420, %419
  call void @free(i8* nonnull %65) #9
  br label %511

428:                                              ; preds = %441, %415
  %429 = phi i64 [ 0, %415 ], [ %442, %441 ]
  %430 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %66, i64 %429
  %431 = bitcast %struct.VkPhysicalDeviceGroupProperties** %430 to i8**
  %432 = load i8*, i8** %431, align 8
  %433 = icmp eq i8* %432, null
  br i1 %433, label %441, label %434

434:                                              ; preds = %428
  br i1 %53, label %440, label %435

435:                                              ; preds = %434
  %436 = load void (i8*, i8*)*, void (i8*, i8*)** %416, align 8
  %437 = icmp eq void (i8*, i8*)* %436, null
  br i1 %437, label %440, label %438

438:                                              ; preds = %435
  %439 = load i8*, i8** %417, align 8
  call void %436(i8* %439, i8* nonnull %432) #9
  br label %441

440:                                              ; preds = %435, %434
  call void @free(i8* nonnull %432) #9
  br label %441

441:                                              ; preds = %428, %438, %440
  %442 = add nuw nsw i64 %429, 1
  %443 = icmp eq i64 %442, %418
  br i1 %443, label %419, label %428

444:                                              ; preds = %407, %107, %301
  %445 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 9
  %446 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %445, align 8
  %447 = icmp eq %struct.VkPhysicalDeviceGroupProperties** %446, null
  %448 = bitcast %struct.VkPhysicalDeviceGroupProperties** %446 to i8*
  br i1 %447, label %449, label %451

449:                                              ; preds = %444
  %450 = bitcast %struct.VkPhysicalDeviceGroupProperties*** %445 to i8**
  br label %508

451:                                              ; preds = %444
  %452 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 8
  %453 = load i32, i32* %452, align 8
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %457

455:                                              ; preds = %451
  %456 = bitcast %struct.VkPhysicalDeviceGroupProperties*** %445 to i8**
  br label %469

457:                                              ; preds = %451
  %458 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %459 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  br label %460

460:                                              ; preds = %506, %457
  %461 = phi %struct.VkPhysicalDeviceGroupProperties** [ %446, %457 ], [ %507, %506 ]
  %462 = phi i64 [ 0, %457 ], [ %502, %506 ]
  %463 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %461, i64 %462
  br i1 %74, label %490, label %464

464:                                              ; preds = %460
  %465 = load %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %463, align 8
  br label %484

466:                                              ; preds = %501
  %467 = bitcast %struct.VkPhysicalDeviceGroupProperties*** %445 to i8**
  %468 = load i8*, i8** %467, align 8
  br label %469

469:                                              ; preds = %455, %466
  %470 = phi i8** [ %456, %455 ], [ %467, %466 ]
  %471 = phi i8* [ %448, %455 ], [ %468, %466 ]
  %472 = icmp eq i8* %471, null
  br i1 %472, label %508, label %473

473:                                              ; preds = %469
  br i1 %53, label %481, label %474

474:                                              ; preds = %473
  %475 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %476 = load void (i8*, i8*)*, void (i8*, i8*)** %475, align 8
  %477 = icmp eq void (i8*, i8*)* %476, null
  br i1 %477, label %481, label %478

478:                                              ; preds = %474
  %479 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %480 = load i8*, i8** %479, align 8
  call void %476(i8* %480, i8* nonnull %471) #9
  br label %508

481:                                              ; preds = %474, %473
  call void @free(i8* nonnull %471) #9
  br label %508

482:                                              ; preds = %484
  %483 = icmp eq i64 %489, %51
  br i1 %483, label %490, label %484

484:                                              ; preds = %482, %464
  %485 = phi i64 [ 0, %464 ], [ %489, %482 ]
  %486 = getelementptr inbounds %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %66, i64 %485
  %487 = load %struct.VkPhysicalDeviceGroupProperties*, %struct.VkPhysicalDeviceGroupProperties** %486, align 8
  %488 = icmp eq %struct.VkPhysicalDeviceGroupProperties* %465, %487
  %489 = add nuw nsw i64 %485, 1
  br i1 %488, label %501, label %482

490:                                              ; preds = %482, %460
  %491 = bitcast %struct.VkPhysicalDeviceGroupProperties** %463 to i8**
  %492 = load i8*, i8** %491, align 8
  %493 = icmp eq i8* %492, null
  br i1 %493, label %501, label %494

494:                                              ; preds = %490
  br i1 %53, label %500, label %495

495:                                              ; preds = %494
  %496 = load void (i8*, i8*)*, void (i8*, i8*)** %458, align 8
  %497 = icmp eq void (i8*, i8*)* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %495
  %499 = load i8*, i8** %459, align 8
  call void %496(i8* %499, i8* nonnull %492) #9
  br label %501

500:                                              ; preds = %495, %494
  call void @free(i8* nonnull %492) #9
  br label %501

501:                                              ; preds = %484, %500, %498, %490
  %502 = add nuw nsw i64 %462, 1
  %503 = load i32, i32* %452, align 8
  %504 = zext i32 %503 to i64
  %505 = icmp ult i64 %502, %504
  br i1 %505, label %506, label %466

506:                                              ; preds = %501
  %507 = load %struct.VkPhysicalDeviceGroupProperties**, %struct.VkPhysicalDeviceGroupProperties*** %445, align 8
  br label %460

508:                                              ; preds = %449, %481, %478, %469
  %509 = phi i8** [ %450, %449 ], [ %470, %481 ], [ %470, %478 ], [ %470, %469 ]
  %510 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 8
  store i32 %50, i32* %510, align 8
  store i8* %65, i8** %509, align 8
  br label %511

511:                                              ; preds = %41, %35, %8, %68, %508, %424, %427
  %512 = phi i32 [ 0, %508 ], [ %413, %424 ], [ %413, %427 ], [ %33, %35 ], [ %39, %41 ], [ -3, %8 ], [ -1, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9
  ret i32 %512
}

; Function Attrs: nounwind
declare i8* @dlerror() local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #8

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i64 @mktime(%struct.tm* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #7

declare zeroext i1 @wsi_unsupported_instance_extension(%struct.VkExtensionProperties*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @dlclose(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @geteuid() local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @getuid() local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @getegid() local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @getgid() local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias %struct.__dirstream* @opendir(i8* nocapture readonly) local_unnamed_addr #7

declare %struct.dirent* @readdir64(%struct.__dirstream*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @AddIfManifestFile(%struct.loader_instance*, i8* readonly, %struct.loader_data_files*) unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq %struct.loader_data_files* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1095, i64 0, i64 0))
  br label %89

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %1) #15
  %10 = icmp ult i64 %9, 5
  br i1 %10, label %89, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 %9
  %13 = getelementptr inbounds i8, i8* %12, i64 -5
  %14 = tail call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1096, i64 0, i64 0), i64 5) #15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %89

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %40

20:                                               ; preds = %16
  %21 = icmp eq %struct.loader_instance* %0, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %24 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %23, align 8
  %25 = icmp eq i8* (i8*, i64, i64, i32)* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i8* %24(i8* %28, i64 512, i64 8, i32 0) #9
  br label %32

30:                                               ; preds = %22, %20
  %31 = tail call noalias i8* @malloc(i64 512) #9
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi i8* [ %29, %26 ], [ %31, %30 ]
  %34 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %2, i64 0, i32 2
  %35 = bitcast i8*** %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = icmp eq i8* %33, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1098, i64 0, i64 0)) #9
  br label %89

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %2, i64 0, i32 1
  store i32 64, i32* %39, align 4
  br label %57

40:                                               ; preds = %16
  %41 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %2, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %18, %42
  br i1 %43, label %44, label %57

44:                                               ; preds = %40
  %45 = zext i32 %18 to i64
  %46 = shl nuw nsw i64 %45, 3
  %47 = shl nuw nsw i64 %45, 4
  %48 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %2, i64 0, i32 2
  %49 = bitcast i8*** %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = tail call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %50, i64 %46, i64 %47, i32 0) #9
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %44
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1099, i64 0, i64 0)) #9
  br label %89

54:                                               ; preds = %44
  store i8* %51, i8** %49, align 8
  %55 = load i32, i32* %41, align 4
  %56 = shl i32 %55, 1
  store i32 %56, i32* %41, align 4
  br label %57

57:                                               ; preds = %54, %40, %38
  %58 = tail call i64 @strlen(i8* nonnull %1) #15
  %59 = add i64 %58, 1
  %60 = icmp eq %struct.loader_instance* %0, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %63 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %62, align 8
  %64 = icmp eq i8* (i8*, i64, i64, i32)* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = tail call i8* %63(i8* %67, i64 %59, i64 8, i32 0) #9
  br label %71

69:                                               ; preds = %61, %57
  %70 = tail call noalias i8* @malloc(i64 %59) #9
  br label %71

71:                                               ; preds = %65, %69
  %72 = phi i8* [ %68, %65 ], [ %70, %69 ]
  %73 = getelementptr inbounds %struct.loader_data_files, %struct.loader_data_files* %2, i64 0, i32 2
  %74 = load i8**, i8*** %73, align 8
  %75 = load i32, i32* %17, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8*, i8** %74, i64 %76
  store i8* %72, i8** %77, align 8
  %78 = load i8**, i8*** %73, align 8
  %79 = load i32, i32* %17, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8*, i8** %78, i64 %80
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %71
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1097, i64 0, i64 0), i32 %79)
  br label %89

85:                                               ; preds = %71
  %86 = add i32 %79, 1
  store i32 %86, i32* %17, align 8
  %87 = load i8*, i8** %81, align 8
  %88 = tail call i8* @strcpy(i8* %87, i8* nonnull %1) #9
  br label %89

89:                                               ; preds = %53, %37, %8, %11, %85, %84, %7
  %90 = phi i32 [ -3, %7 ], [ -1, %84 ], [ 0, %85 ], [ 5, %11 ], [ 5, %8 ], [ -1, %37 ], [ -1, %53 ]
  ret i32 %90
}

; Function Attrs: nofree nounwind
declare i32 @closedir(%struct.__dirstream* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @feof(%struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @ftell(%struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @fseek(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #7

declare %struct.cJSON* @cJSON_Parse(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare i8* @dirname(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @loader_platform_combine_path(i8*, i64, ...) unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %8 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %9 = icmp ne i8* %0, null
  br label %10

10:                                               ; preds = %45, %2
  %11 = phi i64 [ 0, %2 ], [ %47, %45 ]
  %12 = load i32, i32* %5, align 16
  %13 = icmp ult i32 %12, 41
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = load i8*, i8** %7, align 16
  %16 = sext i32 %12 to i64
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = add nuw nsw i32 %12, 8
  store i32 %18, i32* %5, align 16
  br label %22

19:                                               ; preds = %10
  %20 = load i8*, i8** %6, align 8
  %21 = getelementptr i8, i8* %20, i64 8
  store i8* %21, i8** %6, align 8
  br label %22

22:                                               ; preds = %19, %14
  %23 = phi i8* [ %17, %14 ], [ %20, %19 ]
  %24 = bitcast i8* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %48, label %27

27:                                               ; preds = %22
  %28 = icmp eq i64 %11, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add i64 %11, 1
  %31 = icmp ult i64 %30, %1
  %32 = and i1 %9, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %0, i64 %11
  %35 = sub i64 %1, %11
  %36 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %34, i64 %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1106, i64 0, i64 0), i32 47) #9
  br label %37

37:                                               ; preds = %33, %29, %27
  %38 = phi i64 [ 0, %27 ], [ %30, %29 ], [ %30, %33 ]
  %39 = icmp ult i64 %38, %1
  %40 = and i1 %9, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %0, i64 %38
  %43 = sub i64 %1, %38
  %44 = call i8* @strncpy(i8* %42, i8* nonnull %25, i64 %43) #9
  br label %45

45:                                               ; preds = %37, %41
  %46 = call i64 @strlen(i8* nonnull %25) #15
  %47 = add i64 %46, %38
  br label %10

48:                                               ; preds = %22
  call void @llvm.va_end(i8* nonnull %4)
  %49 = icmp eq i8* %0, null
  %50 = icmp ult i64 %11, %1
  %51 = or i1 %49, %50
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = add i64 %1, -1
  %54 = getelementptr inbounds i8, i8* %0, i64 %53
  store i8 0, i8* %54, align 1
  br label %55

55:                                               ; preds = %48, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @access(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind
declare i8* @dlopen(i8*, i32) local_unnamed_addr #8

declare i8* @cJSON_PrintUnformatted(%struct.cJSON*) local_unnamed_addr #6

declare i32 @cJSON_GetArraySize(%struct.cJSON*) local_unnamed_addr #6

declare %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loaderReadLayerJson(%struct.loader_instance*, %struct.loader_layer_list*, %struct.cJSON*, i48, i1 zeroext, i8*) unnamed_addr #0 {
  %7 = alloca %struct.VkExtensionProperties, align 4
  %8 = alloca [32 x i8], align 16
  %9 = trunc i48 %3 to i16
  %10 = lshr i48 %3, 16
  %11 = trunc i48 %10 to i16
  %12 = lshr i48 %3, 32
  %13 = trunc i48 %12 to i16
  %14 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 260, i1 false)
  %15 = tail call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1129, i64 0, i64 0)) #9
  %16 = icmp eq %struct.cJSON* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %6
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1130, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1129, i64 0, i64 0))
  br label %915

18:                                               ; preds = %6
  %19 = tail call i8* @cJSON_Print(%struct.cJSON* nonnull %15) #9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1131, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1129, i64 0, i64 0))
  br label %915

22:                                               ; preds = %18
  %23 = tail call i64 @strlen(i8* nonnull %19) #15
  %24 = add i64 %23, -1
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  store i8 0, i8* %25, align 1
  %26 = tail call i64 @strlen(i8* nonnull %19) #15
  %27 = add i64 %26, 1
  %28 = alloca i8, i64 %27, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 %27, i1 false)
  %29 = getelementptr inbounds i8, i8* %19, i64 1
  %30 = call i8* @strcpy(i8* nonnull %28, i8* %29) #9
  call void @cJSON_Free(i8* nonnull %19) #9
  %31 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1132, i64 0, i64 0)) #9
  %32 = icmp eq %struct.cJSON* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %22
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1130, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1132, i64 0, i64 0))
  br label %915

34:                                               ; preds = %22
  %35 = call i8* @cJSON_Print(%struct.cJSON* nonnull %31) #9
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1131, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1132, i64 0, i64 0))
  br label %915

38:                                               ; preds = %34
  %39 = call i64 @strlen(i8* nonnull %35) #15
  %40 = add i64 %39, -1
  %41 = getelementptr inbounds i8, i8* %35, i64 %40
  store i8 0, i8* %41, align 1
  %42 = call i64 @strlen(i8* nonnull %35) #15
  %43 = add i64 %42, 1
  %44 = alloca i8, i64 %43, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -86, i64 %43, i1 false)
  %45 = getelementptr inbounds i8, i8* %35, i64 1
  %46 = call i8* @strcpy(i8* nonnull %44, i8* %45) #9
  call void @cJSON_Free(i8* nonnull %35) #9
  %47 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.961, i64 0, i64 0)) #9
  %48 = icmp eq %struct.cJSON* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %38
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1130, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.961, i64 0, i64 0))
  br label %915

50:                                               ; preds = %38
  %51 = call i8* @cJSON_Print(%struct.cJSON* nonnull %47) #9
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1131, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.961, i64 0, i64 0))
  br label %915

54:                                               ; preds = %50
  %55 = call i64 @strlen(i8* nonnull %51) #15
  %56 = add i64 %55, -1
  %57 = getelementptr inbounds i8, i8* %51, i64 %56
  store i8 0, i8* %57, align 1
  %58 = call i64 @strlen(i8* nonnull %51) #15
  %59 = add i64 %58, 1
  %60 = alloca i8, i64 %59, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %60, i8 -86, i64 %59, i1 false)
  %61 = getelementptr inbounds i8, i8* %51, i64 1
  %62 = call i8* @strcpy(i8* nonnull %60, i8* %61) #9
  call void @cJSON_Free(i8* nonnull %51) #9
  %63 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1133, i64 0, i64 0)) #9
  %64 = icmp eq %struct.cJSON* %63, null
  br i1 %64, label %65, label %66

65:                                               ; preds = %54
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1130, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1133, i64 0, i64 0))
  br label %915

66:                                               ; preds = %54
  %67 = call i8* @cJSON_Print(%struct.cJSON* nonnull %63) #9
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1131, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1133, i64 0, i64 0))
  br label %915

70:                                               ; preds = %66
  %71 = call i64 @strlen(i8* nonnull %67) #15
  %72 = add i64 %71, -1
  %73 = getelementptr inbounds i8, i8* %67, i64 %72
  store i8 0, i8* %73, align 1
  %74 = call i64 @strlen(i8* nonnull %67) #15
  %75 = add i64 %74, 1
  %76 = alloca i8, i64 %75, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %76, i8 -86, i64 %75, i1 false)
  %77 = getelementptr inbounds i8, i8* %67, i64 1
  %78 = call i8* @strcpy(i8* nonnull %76, i8* %77) #9
  call void @cJSON_Free(i8* nonnull %67) #9
  %79 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1134, i64 0, i64 0)) #9
  %80 = icmp eq %struct.cJSON* %79, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %70
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1130, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1134, i64 0, i64 0))
  br label %915

82:                                               ; preds = %70
  %83 = call i8* @cJSON_Print(%struct.cJSON* nonnull %79) #9
  %84 = icmp eq i8* %83, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1131, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1134, i64 0, i64 0))
  br label %915

86:                                               ; preds = %82
  %87 = call i64 @strlen(i8* nonnull %83) #15
  %88 = add i64 %87, -1
  %89 = getelementptr inbounds i8, i8* %83, i64 %88
  store i8 0, i8* %89, align 1
  %90 = call i64 @strlen(i8* nonnull %83) #15
  %91 = add i64 %90, 1
  %92 = alloca i8, i64 %91, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %92, i8 -86, i64 %91, i1 false)
  %93 = getelementptr inbounds i8, i8* %83, i64 1
  %94 = call i8* @strcpy(i8* nonnull %92, i8* %93) #9
  call void @cJSON_Free(i8* nonnull %83) #9
  %95 = call i32 @strcmp(i8* nonnull %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1135, i64 0, i64 0)) #15
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %86
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1136, i64 0, i64 0))
  br label %915

98:                                               ; preds = %86
  %99 = call i32 @strcmp(i8* nonnull %44, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1137, i64 0, i64 0)) #15
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %98
  %102 = call i32 @strcmp(i8* nonnull %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1138, i64 0, i64 0)) #15
  %103 = icmp ne i32 %102, 0
  %104 = icmp eq %struct.loader_layer_list* %1, null
  %105 = or i1 %104, %103
  br i1 %105, label %915, label %108

106:                                              ; preds = %98
  %107 = icmp eq %struct.loader_layer_list* %1, null
  br i1 %107, label %915, label %108

108:                                              ; preds = %101, %106
  %109 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %131

112:                                              ; preds = %108
  %113 = icmp eq %struct.loader_instance* %0, null
  br i1 %113, label %122, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %116 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %115, align 8
  %117 = icmp eq i8* (i8*, i64, i64, i32)* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = call i8* %116(i8* %120, i64 764928, i64 8, i32 4) #9
  br label %124

122:                                              ; preds = %114, %112
  %123 = call noalias i8* @malloc(i64 764928) #9
  br label %124

124:                                              ; preds = %122, %118
  %125 = phi i8* [ %121, %118 ], [ %123, %122 ]
  %126 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %127 = bitcast %struct.loader_layer_properties** %126 to i8**
  store i8* %125, i8** %127, align 8
  %128 = icmp eq i8* %125, null
  br i1 %128, label %129, label %130

129:                                              ; preds = %124
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.1169, i64 0, i64 0)) #9
  br label %915

130:                                              ; preds = %124
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 764928, i1 false) #9
  store i64 764928, i64* %109, align 8
  br label %131

131:                                              ; preds = %130, %108
  %132 = phi i64 [ 764928, %130 ], [ %110, %108 ]
  %133 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, 1
  %136 = zext i32 %135 to i64
  %137 = mul nuw nsw i64 %136, 11952
  %138 = icmp ugt i64 %137, %132
  br i1 %138, label %139, label %154

139:                                              ; preds = %131
  %140 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %141 = bitcast %struct.loader_layer_properties** %140 to i8**
  %142 = load i8*, i8** %141, align 8
  %143 = shl i64 %132, 1
  %144 = call i8* @loader_instance_heap_realloc(%struct.loader_instance* %0, i8* %142, i64 %132, i64 %143, i32 4) #9
  %145 = icmp eq i8* %144, null
  br i1 %145, label %146, label %147

146:                                              ; preds = %139
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1170, i64 0, i64 0)) #9
  br label %915

147:                                              ; preds = %139
  store i8* %144, i8** %141, align 8
  %148 = load i64, i64* %109, align 8
  %149 = getelementptr inbounds i8, i8* %144, i64 %148
  call void @llvm.memset.p0i8.i64(i8* align 1 %149, i8 0, i64 %148, i1 false) #9
  %150 = load i64, i64* %109, align 8
  %151 = shl i64 %150, 1
  store i64 %151, i64* %109, align 8
  %152 = load i32, i32* %133, align 8
  %153 = add i32 %152, 1
  br label %154

154:                                              ; preds = %131, %147
  %155 = phi i32 [ %153, %147 ], [ %135, %131 ]
  %156 = phi i32 [ %152, %147 ], [ %134, %131 ]
  store i32 %155, i32* %133, align 8
  %157 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %1, i64 0, i32 2
  %158 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %157, align 8
  %159 = zext i32 %156 to i64
  %160 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159
  %161 = icmp eq %struct.loader_layer_properties* %160, null
  br i1 %161, label %915, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 1
  %164 = select i1 %4, i32 1, i32 3
  store i32 %164, i32* %163, align 8
  %165 = call i32 @strcmp(i8* nonnull %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0)) #15
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %236

167:                                              ; preds = %162
  %168 = or i48 %10, %3
  %169 = trunc i48 %168 to i16
  %170 = icmp eq i16 %169, 0
  %171 = icmp ult i16 %13, 2
  %172 = and i1 %171, %170
  br i1 %172, label %173, label %174

173:                                              ; preds = %167
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.1139, i64 0, i64 0))
  br label %174

174:                                              ; preds = %173, %167
  %175 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 15
  store i8 1, i8* %175, align 8
  %176 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1140, i64 0, i64 0)) #9
  %177 = icmp eq %struct.cJSON* %176, null
  br i1 %177, label %236, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %179) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %179, i8 -86, i64 32, i1 false)
  %180 = call i8* @cJSON_Print(%struct.cJSON* nonnull %176) #9
  %181 = icmp eq i8* %180, null
  br i1 %181, label %235, label %182

182:                                              ; preds = %178
  %183 = call i64 @strlen(i8* nonnull %180) #15
  %184 = add i64 %183, -1
  %185 = getelementptr inbounds i8, i8* %180, i64 %184
  store i8 0, i8* %185, align 1
  %186 = getelementptr inbounds i8, i8* %180, i64 1
  %187 = call i8* @strcpy(i8* nonnull %179, i8* %186) #9
  call void @cJSON_Free(i8* nonnull %180) #9
  %188 = call i64 @strlen(i8* nonnull %179) #15
  %189 = icmp eq i64 %188, 16
  br i1 %189, label %190, label %234

190:                                              ; preds = %182
  %191 = call i8* @strchr(i8* nonnull %179, i32 45) #15
  %192 = icmp eq i8* %191, null
  br i1 %192, label %234, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 17, i32 4
  %195 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 16
  %196 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 17, i32 3
  %197 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 17, i32 2
  %198 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 17, i32 1
  %199 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 17, i32 0
  br label %200

200:                                              ; preds = %229, %193
  %201 = phi i8* [ %191, %193 ], [ %231, %229 ]
  %202 = phi i8* [ %179, %193 ], [ %230, %229 ]
  %203 = phi i8 [ 0, %193 ], [ %232, %229 ]
  %204 = load i8, i8* %202, align 1
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %234, label %206

206:                                              ; preds = %200
  %207 = icmp ne i8* %201, null
  br i1 %207, label %208, label %209

208:                                              ; preds = %206
  store i8 0, i8* %201, align 1
  br label %209

209:                                              ; preds = %208, %206
  switch i8 %203, label %225 [
    i8 0, label %210
    i8 1, label %213
    i8 2, label %216
    i8 3, label %219
    i8 4, label %222
  ]

210:                                              ; preds = %209
  %211 = call i64 @strtol(i8* nocapture %202, i8** null, i32 10) #9
  %212 = trunc i64 %211 to i16
  store i16 %212, i16* %199, align 2
  br label %225

213:                                              ; preds = %209
  %214 = call i64 @strtol(i8* nocapture %202, i8** null, i32 10) #9
  %215 = trunc i64 %214 to i8
  store i8 %215, i8* %198, align 2
  br label %225

216:                                              ; preds = %209
  %217 = call i64 @strtol(i8* nocapture %202, i8** null, i32 10) #9
  %218 = trunc i64 %217 to i8
  store i8 %218, i8* %197, align 1
  br label %225

219:                                              ; preds = %209
  %220 = call i64 @strtol(i8* nocapture %202, i8** null, i32 10) #9
  %221 = trunc i64 %220 to i8
  store i8 %221, i8* %196, align 2
  br label %225

222:                                              ; preds = %209
  %223 = call i64 @strtol(i8* nocapture %202, i8** null, i32 10) #9
  %224 = trunc i64 %223 to i8
  store i8 %224, i8* %194, align 1
  store i8 1, i8* %195, align 1
  br label %225

225:                                              ; preds = %209, %222, %219, %216, %213, %210
  br i1 %207, label %226, label %229

226:                                              ; preds = %225
  %227 = getelementptr inbounds i8, i8* %201, i64 1
  %228 = call i8* @strchr(i8* %227, i32 45) #15
  br label %229

229:                                              ; preds = %226, %225
  %230 = phi i8* [ %227, %226 ], [ %202, %225 ]
  %231 = phi i8* [ %228, %226 ], [ null, %225 ]
  %232 = add nuw nsw i8 %203, 1
  %233 = icmp eq i8 %232, 5
  br i1 %233, label %234, label %200

234:                                              ; preds = %200, %229, %190, %182
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %179) #9
  br label %236

235:                                              ; preds = %178
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.1141, i64 0, i64 0))
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %179) #9
  br label %849

236:                                              ; preds = %174, %234, %162
  %237 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.956, i64 0, i64 0)) #9
  %238 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1142, i64 0, i64 0)) #9
  %239 = icmp eq %struct.cJSON* %237, null
  %240 = icmp ne %struct.cJSON* %238, null
  br i1 %239, label %271, label %241

241:                                              ; preds = %236
  br i1 %240, label %242, label %243

242:                                              ; preds = %241
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.1143, i64 0, i64 0))
  br label %849

243:                                              ; preds = %241
  %244 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 10
  store i32 0, i32* %244, align 8
  %245 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 11
  store [1024 x i8]* null, [1024 x i8]** %245, align 8
  %246 = call i8* @cJSON_Print(%struct.cJSON* nonnull %237) #9
  %247 = icmp eq i8* %246, null
  br i1 %247, label %248, label %249

248:                                              ; preds = %243
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1144, i64 0, i64 0))
  br label %849

249:                                              ; preds = %243
  %250 = call i64 @strlen(i8* nonnull %246) #15
  %251 = add i64 %250, -1
  %252 = getelementptr inbounds i8, i8* %246, i64 %251
  store i8 0, i8* %252, align 1
  %253 = call i64 @strlen(i8* nonnull %246) #15
  %254 = add i64 %253, 1
  %255 = alloca i8, i64 %254, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %255, i8 -86, i64 %254, i1 false)
  %256 = getelementptr inbounds i8, i8* %246, i64 1
  %257 = call i8* @strcpy(i8* nonnull %255, i8* %256) #9
  call void @cJSON_Free(i8* nonnull %246) #9
  %258 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 3, i64 0
  %259 = call i8* @strchr(i8* nonnull %255, i32 47) #15
  %260 = icmp eq i8* %259, null
  br i1 %260, label %270, label %261

261:                                              ; preds = %249
  %262 = call i64 @strlen(i8* %5) #15
  %263 = add i64 %262, 1
  %264 = alloca i8, i64 %263, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %264, i8 -86, i64 %263, i1 false)
  %265 = call i8* @strcpy(i8* nonnull %264, i8* %5) #9
  %266 = call i8* @dirname(i8* nonnull %264) #9
  %267 = load i8, i8* %255, align 16
  %268 = icmp eq i8 %267, 47
  %269 = select i1 %268, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.947, i64 0, i64 0), i8* %266
  call void (i8*, i64, ...) @loader_platform_combine_path(i8* %258, i64 1024, i8* %269, i8* nonnull %255, i8* null) #9
  br label %330

270:                                              ; preds = %249
  call fastcc void @loader_get_fullpath(i8* nonnull %255, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.947, i64 0, i64 0), i64 1024, i8* %258)
  br label %330

271:                                              ; preds = %236
  br i1 %240, label %272, label %329

272:                                              ; preds = %271
  %273 = icmp eq i16 %9, 1
  br i1 %273, label %274, label %279

274:                                              ; preds = %272
  %275 = icmp eq i16 %11, 0
  %276 = icmp eq i16 %13, 0
  %277 = or i1 %275, %276
  br i1 %277, label %278, label %279

278:                                              ; preds = %274
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1145, i64 0, i64 0))
  br label %279

279:                                              ; preds = %274, %278, %272
  %280 = call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %238) #9
  %281 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 10
  store i32 %280, i32* %281, align 8
  %282 = sext i32 %280 to i64
  %283 = shl nsw i64 %282, 10
  %284 = icmp eq %struct.loader_instance* %0, null
  br i1 %284, label %293, label %285

285:                                              ; preds = %279
  %286 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %287 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %286, align 8
  %288 = icmp eq i8* (i8*, i64, i64, i32)* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = call i8* %287(i8* %291, i64 %283, i64 8, i32 4) #9
  br label %295

293:                                              ; preds = %285, %279
  %294 = call noalias i8* @malloc(i64 %283) #9
  br label %295

295:                                              ; preds = %289, %293
  %296 = phi i8* [ %292, %289 ], [ %294, %293 ]
  %297 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 11
  %298 = bitcast [1024 x i8]** %297 to i8**
  store i8* %296, i8** %298, align 8
  %299 = icmp eq i8* %296, null
  %300 = icmp sgt i32 %280, 0
  %301 = and i1 %300, %299
  br i1 %301, label %849, label %302

302:                                              ; preds = %295
  br i1 %300, label %303, label %326

303:                                              ; preds = %302
  %304 = zext i32 %280 to i64
  br label %305

305:                                              ; preds = %323, %303
  %306 = phi i64 [ 0, %303 ], [ %324, %323 ]
  %307 = trunc i64 %306 to i32
  %308 = call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %238, i32 %307) #9
  %309 = icmp eq %struct.cJSON* %308, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %305
  %311 = call i8* @cJSON_Print(%struct.cJSON* nonnull %308) #9
  %312 = icmp eq i8* %311, null
  br i1 %312, label %849, label %313

313:                                              ; preds = %310
  %314 = call i64 @strlen(i8* nonnull %311) #15
  %315 = add i64 %314, -1
  %316 = getelementptr inbounds i8, i8* %311, i64 %315
  store i8 0, i8* %316, align 1
  %317 = load [1024 x i8]*, [1024 x i8]** %297, align 8
  %318 = getelementptr inbounds [1024 x i8], [1024 x i8]* %317, i64 %306, i64 0
  %319 = getelementptr inbounds i8, i8* %311, i64 1
  %320 = call i8* @strncpy(i8* %318, i8* %319, i64 1023) #9
  %321 = load [1024 x i8]*, [1024 x i8]** %297, align 8
  %322 = getelementptr inbounds [1024 x i8], [1024 x i8]* %321, i64 %306, i64 1023
  store i8 0, i8* %322, align 1
  call void @cJSON_Free(i8* nonnull %311) #9
  br label %323

323:                                              ; preds = %305, %313
  %324 = add nuw nsw i64 %306, 1
  %325 = icmp eq i64 %324, %304
  br i1 %325, label %326, label %305

326:                                              ; preds = %323, %302
  %327 = load i32, i32* %163, align 8
  %328 = or i32 %327, 4
  store i32 %328, i32* %163, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1146, i64 0, i64 0), i8* nonnull %28)
  br label %330

329:                                              ; preds = %271
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.1147, i64 0, i64 0))
  br label %849

330:                                              ; preds = %326, %270, %261
  %331 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 19
  store i32 0, i32* %331, align 4
  %332 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 20
  store [1024 x i8]* null, [1024 x i8]** %332, align 8
  %333 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1148, i64 0, i64 0)) #9
  %334 = icmp eq %struct.cJSON* %333, null
  br i1 %334, label %388, label %335

335:                                              ; preds = %330
  %336 = call i32 @strcmp(i8* nonnull %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0)) #15
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %339, label %338

338:                                              ; preds = %335
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1149, i64 0, i64 0), i8* nonnull %28)
  br label %388

339:                                              ; preds = %335
  %340 = call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %333) #9
  store i32 %340, i32* %331, align 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %388, label %342

342:                                              ; preds = %339
  %343 = zext i32 %340 to i64
  %344 = shl nuw nsw i64 %343, 10
  %345 = icmp eq %struct.loader_instance* %0, null
  br i1 %345, label %354, label %346

346:                                              ; preds = %342
  %347 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %348 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %347, align 8
  %349 = icmp eq i8* (i8*, i64, i64, i32)* %348, null
  br i1 %349, label %354, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = call i8* %348(i8* %352, i64 %344, i64 8, i32 4) #9
  br label %356

354:                                              ; preds = %346, %342
  %355 = call noalias i8* @malloc(i64 %344) #9
  br label %356

356:                                              ; preds = %350, %354
  %357 = phi i8* [ %353, %350 ], [ %355, %354 ]
  %358 = bitcast [1024 x i8]** %332 to i8**
  store i8* %357, i8** %358, align 8
  %359 = icmp eq i8* %357, null
  %360 = load i32, i32* %331, align 4
  br i1 %359, label %361, label %363

361:                                              ; preds = %356
  %362 = icmp eq i32 %360, 0
  br i1 %362, label %388, label %849

363:                                              ; preds = %356
  %364 = icmp sgt i32 %360, 0
  br i1 %364, label %365, label %388

365:                                              ; preds = %363, %383
  %366 = phi i64 [ %384, %383 ], [ 0, %363 ]
  %367 = trunc i64 %366 to i32
  %368 = call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %333, i32 %367) #9
  %369 = icmp eq %struct.cJSON* %368, null
  br i1 %369, label %383, label %370

370:                                              ; preds = %365
  %371 = call i8* @cJSON_Print(%struct.cJSON* nonnull %368) #9
  %372 = icmp eq i8* %371, null
  br i1 %372, label %849, label %373

373:                                              ; preds = %370
  %374 = call i64 @strlen(i8* nonnull %371) #15
  %375 = add i64 %374, -1
  %376 = getelementptr inbounds i8, i8* %371, i64 %375
  store i8 0, i8* %376, align 1
  %377 = load [1024 x i8]*, [1024 x i8]** %332, align 8
  %378 = getelementptr inbounds [1024 x i8], [1024 x i8]* %377, i64 %366, i64 0
  %379 = getelementptr inbounds i8, i8* %371, i64 1
  %380 = call i8* @strncpy(i8* %378, i8* %379, i64 1023) #9
  %381 = load [1024 x i8]*, [1024 x i8]** %332, align 8
  %382 = getelementptr inbounds [1024 x i8], [1024 x i8]* %381, i64 %366, i64 1023
  store i8 0, i8* %382, align 1
  call void @cJSON_Free(i8* nonnull %371) #9
  br label %383

383:                                              ; preds = %373, %365
  %384 = add nuw nsw i64 %366, 1
  %385 = load i32, i32* %331, align 4
  %386 = sext i32 %385 to i64
  %387 = icmp slt i64 %384, %386
  br i1 %387, label %365, label %388

388:                                              ; preds = %383, %361, %363, %339, %330, %338
  %389 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1150, i64 0, i64 0)) #9
  %390 = icmp eq %struct.cJSON* %389, null
  br i1 %390, label %444, label %391

391:                                              ; preds = %388
  %392 = icmp eq i16 %9, 1
  br i1 %392, label %393, label %398

393:                                              ; preds = %391
  %394 = icmp eq i16 %11, 0
  %395 = icmp eq i16 %13, 0
  %396 = or i1 %394, %395
  br i1 %396, label %397, label %398

397:                                              ; preds = %393
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1151, i64 0, i64 0))
  br label %398

398:                                              ; preds = %393, %397, %391
  %399 = call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %389) #9
  %400 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 13
  store i32 %399, i32* %400, align 8
  %401 = icmp sgt i32 %399, 0
  br i1 %401, label %402, label %444

402:                                              ; preds = %398
  %403 = sext i32 %399 to i64
  %404 = shl nsw i64 %403, 10
  %405 = icmp eq %struct.loader_instance* %0, null
  br i1 %405, label %414, label %406

406:                                              ; preds = %402
  %407 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %408 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %407, align 8
  %409 = icmp eq i8* (i8*, i64, i64, i32)* %408, null
  br i1 %409, label %414, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %412 = load i8*, i8** %411, align 8
  %413 = call i8* %408(i8* %412, i64 %404, i64 8, i32 4) #9
  br label %416

414:                                              ; preds = %406, %402
  %415 = call noalias i8* @malloc(i64 %404) #9
  br label %416

416:                                              ; preds = %410, %414
  %417 = phi i8* [ %413, %410 ], [ %415, %414 ]
  %418 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 14
  %419 = bitcast [1024 x i8]** %418 to i8**
  store i8* %417, i8** %419, align 8
  %420 = icmp eq i8* %417, null
  br i1 %420, label %849, label %421

421:                                              ; preds = %416
  %422 = zext i32 %399 to i64
  br label %423

423:                                              ; preds = %441, %421
  %424 = phi i64 [ 0, %421 ], [ %442, %441 ]
  %425 = trunc i64 %424 to i32
  %426 = call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %389, i32 %425) #9
  %427 = icmp eq %struct.cJSON* %426, null
  br i1 %427, label %441, label %428

428:                                              ; preds = %423
  %429 = call i8* @cJSON_Print(%struct.cJSON* nonnull %426) #9
  %430 = icmp eq i8* %429, null
  br i1 %430, label %849, label %431

431:                                              ; preds = %428
  %432 = call i64 @strlen(i8* nonnull %429) #15
  %433 = add i64 %432, -1
  %434 = getelementptr inbounds i8, i8* %429, i64 %433
  store i8 0, i8* %434, align 1
  %435 = load [1024 x i8]*, [1024 x i8]** %418, align 8
  %436 = getelementptr inbounds [1024 x i8], [1024 x i8]* %435, i64 %424, i64 0
  %437 = getelementptr inbounds i8, i8* %429, i64 1
  %438 = call i8* @strncpy(i8* %436, i8* %437, i64 1023) #9
  %439 = load [1024 x i8]*, [1024 x i8]** %418, align 8
  %440 = getelementptr inbounds [1024 x i8], [1024 x i8]* %439, i64 %424, i64 1023
  store i8 0, i8* %440, align 1
  call void @cJSON_Free(i8* nonnull %429) #9
  br label %441

441:                                              ; preds = %423, %431
  %442 = add nuw nsw i64 %424, 1
  %443 = icmp eq i64 %442, %422
  br i1 %443, label %444, label %423

444:                                              ; preds = %441, %398, %388
  br i1 %4, label %445, label %449

445:                                              ; preds = %444
  %446 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1152, i64 0, i64 0)) #9
  %447 = icmp eq %struct.cJSON* %446, null
  br i1 %447, label %448, label %449

448:                                              ; preds = %445
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1153, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1152, i64 0, i64 0))
  br label %849

449:                                              ; preds = %445, %444
  %450 = phi %struct.cJSON* [ %446, %445 ], [ null, %444 ]
  %451 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %160, i64 0, i32 0, i32 0, i64 0
  %452 = call i8* @strncpy(i8* %451, i8* nonnull %28, i64 256) #9
  %453 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 0, i32 0, i64 255
  store i8 0, i8* %453, align 1
  %454 = call fastcc i32 @loader_make_version(i8* nonnull %60)
  %455 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 0, i32 1
  store i32 %454, i32* %455, align 8
  %456 = call i64 @strtol(i8* nocapture nonnull %76, i8** null, i32 10) #9
  %457 = trunc i64 %456 to i32
  %458 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 0, i32 2
  store i32 %457, i32* %458, align 4
  %459 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 0, i32 3, i64 0
  %460 = call i8* @strncpy(i8* %459, i8* nonnull %92, i64 256) #9
  %461 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 0, i32 3, i64 255
  store i8 0, i8* %461, align 1
  br i1 %4, label %462, label %481

462:                                              ; preds = %449
  %463 = icmp eq %struct.cJSON* %450, null
  br i1 %463, label %468, label %464

464:                                              ; preds = %462
  %465 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %450, i64 0, i32 2
  %466 = load %struct.cJSON*, %struct.cJSON** %465, align 8
  %467 = icmp eq %struct.cJSON* %466, null
  br i1 %467, label %468, label %469

468:                                              ; preds = %464, %462
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.1154, i64 0, i64 0))
  br label %849

469:                                              ; preds = %464
  %470 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 8, i32 0, i64 0
  %471 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %466, i64 0, i32 7
  %472 = load i8*, i8** %471, align 8
  %473 = call i8* @strncpy(i8* %470, i8* %472, i64 1024) #9
  %474 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 8, i32 0, i64 1023
  store i8 0, i8* %474, align 1
  %475 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 8, i32 1, i64 0
  %476 = load %struct.cJSON*, %struct.cJSON** %465, align 8
  %477 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %476, i64 0, i32 4
  %478 = load i8*, i8** %477, align 8
  %479 = call i8* @strncpy(i8* %475, i8* %478, i64 1024) #9
  %480 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 8, i32 1, i64 1023
  store i8 0, i8* %480, align 1
  br label %481

481:                                              ; preds = %469, %449
  %482 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1155, i64 0, i64 0)) #9
  %483 = icmp eq %struct.cJSON* %482, null
  br i1 %483, label %556, label %484

484:                                              ; preds = %481
  %485 = icmp ult i16 %9, 2
  %486 = icmp eq i16 %11, 0
  %487 = and i1 %486, %485
  br i1 %487, label %507, label %488

488:                                              ; preds = %484
  %489 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %482, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.986, i64 0, i64 0)) #9
  %490 = icmp eq %struct.cJSON* %489, null
  br i1 %490, label %505, label %491

491:                                              ; preds = %488
  %492 = call i8* @cJSON_Print(%struct.cJSON* nonnull %489) #9
  %493 = icmp eq i8* %492, null
  br i1 %493, label %849, label %494

494:                                              ; preds = %491
  %495 = call i64 @strlen(i8* nonnull %492) #15
  %496 = add i64 %495, -1
  %497 = getelementptr inbounds i8, i8* %492, i64 %496
  store i8 0, i8* %497, align 1
  %498 = call i64 @strlen(i8* nonnull %492) #15
  %499 = add i64 %498, 1
  %500 = alloca i8, i64 %499, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %500, i8 -86, i64 %499, i1 false)
  %501 = getelementptr inbounds i8, i8* %492, i64 1
  %502 = call i8* @strcpy(i8* nonnull %500, i8* %501) #9
  call void @cJSON_Free(i8* nonnull %492) #9
  %503 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 5, i32 2, i64 0
  %504 = call i8* @strncpy(i8* %503, i8* nonnull %500, i64 1024) #9
  br label %505

505:                                              ; preds = %488, %494
  %506 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 5, i32 2, i64 1023
  store i8 0, i8* %506, align 1
  br label %509

507:                                              ; preds = %484
  %508 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 5, i32 2, i64 0
  store i8 0, i8* %508, align 8
  br label %509

509:                                              ; preds = %507, %505
  %510 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %482, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.987, i64 0, i64 0)) #9
  %511 = icmp eq %struct.cJSON* %510, null
  br i1 %511, label %524, label %512

512:                                              ; preds = %509
  %513 = call i8* @cJSON_Print(%struct.cJSON* nonnull %510) #9
  %514 = icmp eq i8* %513, null
  br i1 %514, label %849, label %515

515:                                              ; preds = %512
  %516 = call i64 @strlen(i8* nonnull %513) #15
  %517 = add i64 %516, -1
  %518 = getelementptr inbounds i8, i8* %513, i64 %517
  store i8 0, i8* %518, align 1
  %519 = call i64 @strlen(i8* nonnull %513) #15
  %520 = add i64 %519, 1
  %521 = alloca i8, i64 %520, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %521, i8 -86, i64 %520, i1 false)
  %522 = getelementptr inbounds i8, i8* %513, i64 1
  %523 = call i8* @strcpy(i8* nonnull %521, i8* %522) #9
  call void @cJSON_Free(i8* nonnull %513) #9
  br label %524

524:                                              ; preds = %509, %515
  %525 = phi i8* [ %521, %515 ], [ null, %509 ]
  %526 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %482, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #9
  %527 = icmp eq %struct.cJSON* %526, null
  br i1 %527, label %540, label %528

528:                                              ; preds = %524
  %529 = call i8* @cJSON_Print(%struct.cJSON* nonnull %526) #9
  %530 = icmp eq i8* %529, null
  br i1 %530, label %849, label %531

531:                                              ; preds = %528
  %532 = call i64 @strlen(i8* nonnull %529) #15
  %533 = add i64 %532, -1
  %534 = getelementptr inbounds i8, i8* %529, i64 %533
  store i8 0, i8* %534, align 1
  %535 = call i64 @strlen(i8* nonnull %529) #15
  %536 = add i64 %535, 1
  %537 = alloca i8, i64 %536, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %537, i8 -86, i64 %536, i1 false)
  %538 = getelementptr inbounds i8, i8* %529, i64 1
  %539 = call i8* @strcpy(i8* nonnull %537, i8* %538) #9
  call void @cJSON_Free(i8* nonnull %529) #9
  br label %540

540:                                              ; preds = %524, %531
  %541 = phi i8* [ %537, %531 ], [ null, %524 ]
  %542 = icmp eq i8* %525, null
  br i1 %542, label %547, label %543

543:                                              ; preds = %540
  %544 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 5, i32 0, i64 0
  %545 = call i8* @strncpy(i8* %544, i8* nonnull %525, i64 1024) #9
  br i1 %487, label %547, label %546

546:                                              ; preds = %543
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([277 x i8], [277 x i8]* @.str.1156, i64 0, i64 0), i8* nonnull %28)
  br label %547

547:                                              ; preds = %543, %540, %546
  %548 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 5, i32 0, i64 1023
  store i8 0, i8* %548, align 1
  %549 = icmp eq i8* %541, null
  br i1 %549, label %554, label %550

550:                                              ; preds = %547
  %551 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 5, i32 1, i64 0
  %552 = call i8* @strncpy(i8* %551, i8* nonnull %541, i64 1024) #9
  br i1 %487, label %554, label %553

553:                                              ; preds = %550
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([275 x i8], [275 x i8]* @.str.1157, i64 0, i64 0), i8* nonnull %28)
  br label %554

554:                                              ; preds = %550, %547, %553
  %555 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 5, i32 1, i64 1023
  store i8 0, i8* %555, align 1
  br label %556

556:                                              ; preds = %481, %554
  %557 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1158, i64 0, i64 0)) #9
  %558 = icmp eq %struct.cJSON* %557, null
  br i1 %558, label %621, label %559

559:                                              ; preds = %556
  %560 = call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %557) #9
  %561 = icmp sgt i32 %560, 0
  br i1 %561, label %562, label %621

562:                                              ; preds = %559
  %563 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %7, i64 0, i32 0, i64 255
  %564 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %7, i64 0, i32 1
  %565 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 6
  br label %566

566:                                              ; preds = %618, %562
  %567 = phi i8* [ null, %562 ], [ %614, %618 ]
  %568 = phi i32 [ 0, %562 ], [ %619, %618 ]
  %569 = phi i8* [ %28, %562 ], [ %591, %618 ]
  %570 = call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %557, i32 %568) #9
  %571 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %570, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1129, i64 0, i64 0)) #9
  %572 = icmp eq %struct.cJSON* %571, null
  br i1 %572, label %585, label %573

573:                                              ; preds = %566
  %574 = call i8* @cJSON_Print(%struct.cJSON* nonnull %571) #9
  %575 = icmp eq i8* %574, null
  br i1 %575, label %849, label %576

576:                                              ; preds = %573
  %577 = call i64 @strlen(i8* nonnull %574) #15
  %578 = add i64 %577, -1
  %579 = getelementptr inbounds i8, i8* %574, i64 %578
  store i8 0, i8* %579, align 1
  %580 = call i64 @strlen(i8* nonnull %574) #15
  %581 = add i64 %580, 1
  %582 = alloca i8, i64 %581, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %582, i8 -86, i64 %581, i1 false)
  %583 = getelementptr inbounds i8, i8* %574, i64 1
  %584 = call i8* @strcpy(i8* nonnull %582, i8* %583) #9
  call void @cJSON_Free(i8* nonnull %574) #9
  br label %587

585:                                              ; preds = %566
  %586 = icmp eq i8* %569, null
  br i1 %586, label %590, label %587

587:                                              ; preds = %576, %585
  %588 = phi i8* [ %582, %576 ], [ %569, %585 ]
  %589 = call i8* @strncpy(i8* nonnull %14, i8* nonnull %588, i64 256) #9
  store i8 0, i8* %563, align 1
  br label %590

590:                                              ; preds = %585, %587
  %591 = phi i8* [ null, %585 ], [ %588, %587 ]
  %592 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %570, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1159, i64 0, i64 0)) #9
  %593 = icmp eq %struct.cJSON* %592, null
  br i1 %593, label %606, label %594

594:                                              ; preds = %590
  %595 = call i8* @cJSON_Print(%struct.cJSON* nonnull %592) #9
  %596 = icmp eq i8* %595, null
  br i1 %596, label %849, label %597

597:                                              ; preds = %594
  %598 = call i64 @strlen(i8* nonnull %595) #15
  %599 = add i64 %598, -1
  %600 = getelementptr inbounds i8, i8* %595, i64 %599
  store i8 0, i8* %600, align 1
  %601 = call i64 @strlen(i8* nonnull %595) #15
  %602 = add i64 %601, 1
  %603 = alloca i8, i64 %602, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %603, i8 -86, i64 %602, i1 false)
  %604 = getelementptr inbounds i8, i8* %595, i64 1
  %605 = call i8* @strcpy(i8* nonnull %603, i8* %604) #9
  call void @cJSON_Free(i8* nonnull %595) #9
  br label %608

606:                                              ; preds = %590
  %607 = icmp eq i8* %567, null
  br i1 %607, label %612, label %608

608:                                              ; preds = %597, %606
  %609 = phi i8* [ %603, %597 ], [ %567, %606 ]
  %610 = call i64 @strtol(i8* nocapture nonnull %609, i8** null, i32 10) #9
  %611 = trunc i64 %610 to i32
  br label %612

612:                                              ; preds = %606, %608
  %613 = phi i32 [ %611, %608 ], [ 0, %606 ]
  %614 = phi i8* [ %609, %608 ], [ null, %606 ]
  store i32 %613, i32* %564, align 4
  %615 = call zeroext i1 @wsi_unsupported_instance_extension(%struct.VkExtensionProperties* nonnull %7) #9
  br i1 %615, label %618, label %616

616:                                              ; preds = %612
  %617 = call i32 @loader_add_to_ext_list(%struct.loader_instance* %0, %struct.loader_extension_list* %565, i32 1, %struct.VkExtensionProperties* nonnull %7)
  br label %618

618:                                              ; preds = %616, %612
  %619 = add nuw nsw i32 %568, 1
  %620 = icmp eq i32 %619, %560
  br i1 %620, label %621, label %566

621:                                              ; preds = %618, %559, %556
  %622 = phi i8* [ %28, %556 ], [ %28, %559 ], [ %591, %618 ]
  %623 = phi i8* [ null, %556 ], [ null, %559 ], [ %614, %618 ]
  %624 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1160, i64 0, i64 0)) #9
  %625 = icmp eq %struct.cJSON* %624, null
  br i1 %625, label %727, label %626

626:                                              ; preds = %621
  %627 = call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %624) #9
  %628 = icmp sgt i32 %627, 0
  br i1 %628, label %629, label %727

629:                                              ; preds = %626
  %630 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %7, i64 0, i32 0, i64 255
  %631 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %7, i64 0, i32 1
  %632 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 7
  br label %633

633:                                              ; preds = %723, %629
  %634 = phi i8** [ null, %629 ], [ %724, %723 ]
  %635 = phi i8* [ %623, %629 ], [ %670, %723 ]
  %636 = phi i32 [ 0, %629 ], [ %725, %723 ]
  %637 = phi i8* [ %622, %629 ], [ %654, %723 ]
  %638 = call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %624, i32 %636) #9
  %639 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %638, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1129, i64 0, i64 0)) #9
  %640 = icmp eq %struct.cJSON* %639, null
  br i1 %640, label %653, label %641

641:                                              ; preds = %633
  %642 = call i8* @cJSON_Print(%struct.cJSON* nonnull %639) #9
  %643 = icmp eq i8* %642, null
  br i1 %643, label %849, label %644

644:                                              ; preds = %641
  %645 = call i64 @strlen(i8* nonnull %642) #15
  %646 = add i64 %645, -1
  %647 = getelementptr inbounds i8, i8* %642, i64 %646
  store i8 0, i8* %647, align 1
  %648 = call i64 @strlen(i8* nonnull %642) #15
  %649 = add i64 %648, 1
  %650 = alloca i8, i64 %649, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %650, i8 -86, i64 %649, i1 false)
  %651 = getelementptr inbounds i8, i8* %642, i64 1
  %652 = call i8* @strcpy(i8* nonnull %650, i8* %651) #9
  call void @cJSON_Free(i8* nonnull %642) #9
  br label %653

653:                                              ; preds = %633, %644
  %654 = phi i8* [ %650, %644 ], [ %637, %633 ]
  %655 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %638, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1159, i64 0, i64 0)) #9
  %656 = icmp eq %struct.cJSON* %655, null
  br i1 %656, label %669, label %657

657:                                              ; preds = %653
  %658 = call i8* @cJSON_Print(%struct.cJSON* nonnull %655) #9
  %659 = icmp eq i8* %658, null
  br i1 %659, label %849, label %660

660:                                              ; preds = %657
  %661 = call i64 @strlen(i8* nonnull %658) #15
  %662 = add i64 %661, -1
  %663 = getelementptr inbounds i8, i8* %658, i64 %662
  store i8 0, i8* %663, align 1
  %664 = call i64 @strlen(i8* nonnull %658) #15
  %665 = add i64 %664, 1
  %666 = alloca i8, i64 %665, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %666, i8 -86, i64 %665, i1 false)
  %667 = getelementptr inbounds i8, i8* %658, i64 1
  %668 = call i8* @strcpy(i8* nonnull %666, i8* %667) #9
  call void @cJSON_Free(i8* nonnull %658) #9
  br label %669

669:                                              ; preds = %653, %660
  %670 = phi i8* [ %666, %660 ], [ %635, %653 ]
  %671 = icmp eq i8* %654, null
  br i1 %671, label %674, label %672

672:                                              ; preds = %669
  %673 = call i8* @strncpy(i8* nonnull %14, i8* nonnull %654, i64 256) #9
  store i8 0, i8* %630, align 1
  br label %674

674:                                              ; preds = %669, %672
  %675 = icmp eq i8* %670, null
  br i1 %675, label %679, label %676

676:                                              ; preds = %674
  %677 = call i64 @strtol(i8* nocapture nonnull %670, i8** null, i32 10) #9
  %678 = trunc i64 %677 to i32
  br label %679

679:                                              ; preds = %674, %676
  %680 = phi i32 [ %678, %676 ], [ 0, %674 ]
  store i32 %680, i32* %631, align 4
  %681 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %638, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1161, i64 0, i64 0)) #9
  %682 = icmp eq %struct.cJSON* %681, null
  br i1 %682, label %683, label %685

683:                                              ; preds = %679
  %684 = call i32 @loader_add_to_dev_ext_list(%struct.loader_instance* %0, %struct.loader_device_extension_list* %632, %struct.VkExtensionProperties* nonnull %7, i32 0, i8** null)
  br label %723

685:                                              ; preds = %679
  %686 = call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %681) #9
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %717, label %688

688:                                              ; preds = %685
  %689 = sext i32 %686 to i64
  %690 = shl nsw i64 %689, 3
  %691 = alloca i8*, i64 %689, align 16
  %692 = bitcast i8** %691 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %692, i8 -86, i64 %690, i1 false)
  %693 = icmp sgt i32 %686, 0
  br i1 %693, label %694, label %717

694:                                              ; preds = %688
  %695 = zext i32 %686 to i64
  br label %696

696:                                              ; preds = %714, %694
  %697 = phi i64 [ 0, %694 ], [ %715, %714 ]
  %698 = trunc i64 %697 to i32
  %699 = call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %681, i32 %698) #9
  %700 = icmp eq %struct.cJSON* %699, null
  br i1 %700, label %714, label %701

701:                                              ; preds = %696
  %702 = call i8* @cJSON_Print(%struct.cJSON* nonnull %699) #9
  %703 = icmp eq i8* %702, null
  br i1 %703, label %720, label %704

704:                                              ; preds = %701
  %705 = call i64 @strlen(i8* nonnull %702) #15
  %706 = add i64 %705, -1
  %707 = getelementptr inbounds i8, i8* %702, i64 %706
  store i8 0, i8* %707, align 1
  %708 = call i64 @strlen(i8* nonnull %702) #15
  %709 = add i64 %708, 1
  %710 = alloca i8, i64 %709, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %710, i8 -86, i64 %709, i1 false)
  %711 = getelementptr inbounds i8*, i8** %691, i64 %697
  store i8* %710, i8** %711, align 8
  %712 = getelementptr inbounds i8, i8* %702, i64 1
  %713 = call i8* @strcpy(i8* nonnull %710, i8* %712) #9
  call void @cJSON_Free(i8* nonnull %702) #9
  br label %714

714:                                              ; preds = %696, %704
  %715 = add nuw nsw i64 %697, 1
  %716 = icmp eq i64 %715, %695
  br i1 %716, label %717, label %696

717:                                              ; preds = %714, %685, %688
  %718 = phi i8** [ %691, %688 ], [ %634, %685 ], [ %691, %714 ]
  %719 = call i32 @loader_add_to_dev_ext_list(%struct.loader_instance* %0, %struct.loader_device_extension_list* %632, %struct.VkExtensionProperties* nonnull %7, i32 %686, i8** %718)
  br label %723

720:                                              ; preds = %701
  %721 = and i64 %697, 4294967295
  %722 = getelementptr inbounds i8*, i8** %691, i64 %721
  store i8* null, i8** %722, align 8
  br label %849

723:                                              ; preds = %683, %717
  %724 = phi i8** [ %718, %717 ], [ %634, %683 ]
  %725 = add nuw nsw i32 %636, 1
  %726 = icmp eq i32 %725, %627
  br i1 %726, label %727, label %633

727:                                              ; preds = %723, %626, %621
  %728 = phi i8* [ %622, %621 ], [ %622, %626 ], [ %654, %723 ]
  br i1 %4, label %729, label %746

729:                                              ; preds = %727
  %730 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1162, i64 0, i64 0)) #9
  %731 = icmp eq %struct.cJSON* %730, null
  br i1 %731, label %746, label %732

732:                                              ; preds = %729
  %733 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 9, i32 0, i64 0
  %734 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %730, i64 0, i32 2
  %735 = load %struct.cJSON*, %struct.cJSON** %734, align 8
  %736 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %735, i64 0, i32 7
  %737 = load i8*, i8** %736, align 8
  %738 = call i8* @strncpy(i8* %733, i8* %737, i64 1024) #9
  %739 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 9, i32 0, i64 1023
  store i8 0, i8* %739, align 1
  %740 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 9, i32 1, i64 0
  %741 = load %struct.cJSON*, %struct.cJSON** %734, align 8
  %742 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %741, i64 0, i32 4
  %743 = load i8*, i8** %742, align 8
  %744 = call i8* @strncpy(i8* %740, i8* %743, i64 1024) #9
  %745 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 9, i32 1, i64 1023
  store i8 0, i8* %745, align 1
  br label %746

746:                                              ; preds = %729, %732, %727
  %747 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1163, i64 0, i64 0)) #9
  %748 = icmp eq %struct.cJSON* %747, null
  br i1 %748, label %795, label %749

749:                                              ; preds = %746
  %750 = or i48 %10, %3
  %751 = and i48 %750, 65534
  %752 = icmp eq i48 %751, 0
  br i1 %752, label %753, label %758

753:                                              ; preds = %749
  %754 = icmp eq i16 %11, 1
  %755 = icmp ugt i16 %13, 1
  %756 = and i1 %754, %755
  br i1 %756, label %758, label %757

757:                                              ; preds = %753
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 8, i32 undef, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.1164, i64 0, i64 0), i8* %5)
  br label %795

758:                                              ; preds = %749, %753
  br i1 %4, label %760, label %759

759:                                              ; preds = %758
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.1165, i64 0, i64 0), i8* %5)
  br label %795

760:                                              ; preds = %758
  %761 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %747, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1114, i64 0, i64 0)) #9
  %762 = icmp eq %struct.cJSON* %761, null
  br i1 %762, label %775, label %763

763:                                              ; preds = %760
  %764 = call i8* @cJSON_Print(%struct.cJSON* nonnull %761) #9
  %765 = icmp eq i8* %764, null
  br i1 %765, label %849, label %766

766:                                              ; preds = %763
  %767 = call i64 @strlen(i8* nonnull %764) #15
  %768 = icmp ugt i64 %767, 1023
  %769 = add i64 %767, -2
  %770 = select i1 %768, i64 1021, i64 %769
  %771 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 12, i32 0, i64 0
  %772 = getelementptr inbounds i8, i8* %764, i64 1
  %773 = call i8* @strncpy(i8* %771, i8* %772, i64 %770) #9
  %774 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 12, i32 0, i64 %770
  store i8 0, i8* %774, align 1
  call void @cJSON_Free(i8* nonnull %764) #9
  br label %775

775:                                              ; preds = %766, %760
  %776 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %747, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1166, i64 0, i64 0)) #9
  %777 = icmp eq %struct.cJSON* %776, null
  br i1 %777, label %790, label %778

778:                                              ; preds = %775
  %779 = call i8* @cJSON_Print(%struct.cJSON* nonnull %776) #9
  %780 = icmp eq i8* %779, null
  br i1 %780, label %849, label %781

781:                                              ; preds = %778
  %782 = call i64 @strlen(i8* nonnull %779) #15
  %783 = icmp ugt i64 %782, 1023
  %784 = add i64 %782, -2
  %785 = select i1 %783, i64 1021, i64 %784
  %786 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 12, i32 1, i64 0
  %787 = getelementptr inbounds i8, i8* %779, i64 1
  %788 = call i8* @strncpy(i8* %786, i8* %787, i64 %785) #9
  %789 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 12, i32 1, i64 %785
  store i8 0, i8* %789, align 1
  call void @cJSON_Free(i8* nonnull %779) #9
  br label %790

790:                                              ; preds = %781, %775
  %791 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nonnull %747, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1007, i64 0, i64 0)) #9
  %792 = icmp eq %struct.cJSON* %791, null
  br i1 %792, label %795, label %793

793:                                              ; preds = %790
  %794 = call i8* @cJSON_Print(%struct.cJSON* nonnull %791) #9
  br label %849

795:                                              ; preds = %790, %746, %757, %759
  %796 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 21
  store i32 0, i32* %796, align 8
  %797 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 22
  store [1024 x i8]* null, [1024 x i8]** %797, align 8
  %798 = call %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1167, i64 0, i64 0)) #9
  %799 = icmp eq %struct.cJSON* %798, null
  br i1 %799, label %915, label %800

800:                                              ; preds = %795
  %801 = call i32 @strcmp(i8* %728, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.926, i64 0, i64 0)) #15
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %804, label %803

803:                                              ; preds = %800
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 2, i32 undef, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.1168, i64 0, i64 0), i8* %728)
  br label %915

804:                                              ; preds = %800
  %805 = call i32 @cJSON_GetArraySize(%struct.cJSON* nonnull %798) #9
  store i32 %805, i32* %796, align 8
  %806 = zext i32 %805 to i64
  %807 = shl nuw nsw i64 %806, 10
  %808 = icmp eq %struct.loader_instance* %0, null
  br i1 %808, label %817, label %809

809:                                              ; preds = %804
  %810 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 1
  %811 = load i8* (i8*, i64, i64, i32)*, i8* (i8*, i64, i64, i32)** %810, align 8
  %812 = icmp eq i8* (i8*, i64, i64, i32)* %811, null
  br i1 %812, label %817, label %813

813:                                              ; preds = %809
  %814 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %815 = load i8*, i8** %814, align 8
  %816 = call i8* %811(i8* %815, i64 %807, i64 8, i32 4) #9
  br label %819

817:                                              ; preds = %809, %804
  %818 = call noalias i8* @malloc(i64 %807) #9
  br label %819

819:                                              ; preds = %813, %817
  %820 = phi i8* [ %816, %813 ], [ %818, %817 ]
  %821 = bitcast [1024 x i8]** %797 to i8**
  store i8* %820, i8** %821, align 8
  %822 = icmp eq i8* %820, null
  br i1 %822, label %849, label %823

823:                                              ; preds = %819
  %824 = load i32, i32* %796, align 8
  %825 = icmp sgt i32 %824, 0
  br i1 %825, label %826, label %915

826:                                              ; preds = %823, %844
  %827 = phi i64 [ %845, %844 ], [ 0, %823 ]
  %828 = trunc i64 %827 to i32
  %829 = call %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nonnull %798, i32 %828) #9
  %830 = icmp eq %struct.cJSON* %829, null
  br i1 %830, label %844, label %831

831:                                              ; preds = %826
  %832 = call i8* @cJSON_Print(%struct.cJSON* nonnull %829) #9
  %833 = icmp eq i8* %832, null
  br i1 %833, label %849, label %834

834:                                              ; preds = %831
  %835 = call i64 @strlen(i8* nonnull %832) #15
  %836 = add i64 %835, -1
  %837 = getelementptr inbounds i8, i8* %832, i64 %836
  store i8 0, i8* %837, align 1
  %838 = load [1024 x i8]*, [1024 x i8]** %797, align 8
  %839 = getelementptr inbounds [1024 x i8], [1024 x i8]* %838, i64 %827, i64 0
  %840 = getelementptr inbounds i8, i8* %832, i64 1
  %841 = call i8* @strncpy(i8* %839, i8* %840, i64 1023) #9
  %842 = load [1024 x i8]*, [1024 x i8]** %797, align 8
  %843 = getelementptr inbounds [1024 x i8], [1024 x i8]* %842, i64 %827, i64 1023
  store i8 0, i8* %843, align 1
  call void @cJSON_Free(i8* nonnull %832) #9
  br label %844

844:                                              ; preds = %834, %826
  %845 = add nuw nsw i64 %827, 1
  %846 = load i32, i32* %796, align 8
  %847 = sext i32 %846 to i64
  %848 = icmp slt i64 %845, %847
  br i1 %848, label %826, label %915

849:                                              ; preds = %310, %370, %428, %573, %594, %641, %657, %831, %242, %248, %329, %448, %468, %361, %491, %512, %528, %819, %235, %416, %295, %720, %793, %763, %778
  %850 = phi i32 [ -3, %242 ], [ -1, %248 ], [ -3, %448 ], [ -3, %468 ], [ -3, %329 ], [ -1, %235 ], [ -1, %361 ], [ -1, %491 ], [ -1, %512 ], [ -1, %528 ], [ -1, %819 ], [ -1, %416 ], [ -1, %295 ], [ -1, %720 ], [ -1, %793 ], [ -1, %763 ], [ -1, %778 ], [ -1, %831 ], [ -1, %657 ], [ -1, %641 ], [ -1, %594 ], [ -1, %573 ], [ -1, %428 ], [ -1, %370 ], [ -1, %310 ]
  %851 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 20
  %852 = load [1024 x i8]*, [1024 x i8]** %851, align 8
  %853 = icmp eq [1024 x i8]* %852, null
  br i1 %853, label %865, label %854

854:                                              ; preds = %849
  %855 = getelementptr inbounds [1024 x i8], [1024 x i8]* %852, i64 0, i64 0
  %856 = icmp eq %struct.loader_instance* %0, null
  br i1 %856, label %864, label %857

857:                                              ; preds = %854
  %858 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %859 = load void (i8*, i8*)*, void (i8*, i8*)** %858, align 8
  %860 = icmp eq void (i8*, i8*)* %859, null
  br i1 %860, label %864, label %861

861:                                              ; preds = %857
  %862 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %863 = load i8*, i8** %862, align 8
  call void %859(i8* %863, i8* nonnull %855) #9
  br label %865

864:                                              ; preds = %857, %854
  call void @free(i8* nonnull %855) #9
  br label %865

865:                                              ; preds = %864, %861, %849
  %866 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 11
  %867 = load [1024 x i8]*, [1024 x i8]** %866, align 8
  %868 = icmp eq [1024 x i8]* %867, null
  br i1 %868, label %880, label %869

869:                                              ; preds = %865
  %870 = getelementptr inbounds [1024 x i8], [1024 x i8]* %867, i64 0, i64 0
  %871 = icmp eq %struct.loader_instance* %0, null
  br i1 %871, label %879, label %872

872:                                              ; preds = %869
  %873 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %874 = load void (i8*, i8*)*, void (i8*, i8*)** %873, align 8
  %875 = icmp eq void (i8*, i8*)* %874, null
  br i1 %875, label %879, label %876

876:                                              ; preds = %872
  %877 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %878 = load i8*, i8** %877, align 8
  call void %874(i8* %878, i8* nonnull %870) #9
  br label %880

879:                                              ; preds = %872, %869
  call void @free(i8* nonnull %870) #9
  br label %880

880:                                              ; preds = %879, %876, %865
  %881 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 14
  %882 = load [1024 x i8]*, [1024 x i8]** %881, align 8
  %883 = icmp eq [1024 x i8]* %882, null
  br i1 %883, label %895, label %884

884:                                              ; preds = %880
  %885 = getelementptr inbounds [1024 x i8], [1024 x i8]* %882, i64 0, i64 0
  %886 = icmp eq %struct.loader_instance* %0, null
  br i1 %886, label %894, label %887

887:                                              ; preds = %884
  %888 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %889 = load void (i8*, i8*)*, void (i8*, i8*)** %888, align 8
  %890 = icmp eq void (i8*, i8*)* %889, null
  br i1 %890, label %894, label %891

891:                                              ; preds = %887
  %892 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %893 = load i8*, i8** %892, align 8
  call void %889(i8* %893, i8* nonnull %885) #9
  br label %895

894:                                              ; preds = %887, %884
  call void @free(i8* nonnull %885) #9
  br label %895

895:                                              ; preds = %894, %891, %880
  %896 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 22
  %897 = load [1024 x i8]*, [1024 x i8]** %896, align 8
  %898 = icmp eq [1024 x i8]* %897, null
  br i1 %898, label %910, label %899

899:                                              ; preds = %895
  %900 = getelementptr inbounds [1024 x i8], [1024 x i8]* %897, i64 0, i64 0
  %901 = icmp eq %struct.loader_instance* %0, null
  br i1 %901, label %909, label %902

902:                                              ; preds = %899
  %903 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 3
  %904 = load void (i8*, i8*)*, void (i8*, i8*)** %903, align 8
  %905 = icmp eq void (i8*, i8*)* %904, null
  br i1 %905, label %909, label %906

906:                                              ; preds = %902
  %907 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %0, i64 0, i32 33, i32 0
  %908 = load i8*, i8** %907, align 8
  call void %904(i8* %908, i8* nonnull %900) #9
  br label %910

909:                                              ; preds = %902, %899
  call void @free(i8* nonnull %900) #9
  br label %910

910:                                              ; preds = %909, %906, %895
  %911 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 19
  %912 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 10
  store i32 0, i32* %912, align 8
  store [1024 x i8]* null, [1024 x i8]** %866, align 8
  %913 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %158, i64 %159, i32 13
  store i32 0, i32* %913, align 8
  store [1024 x i8]* null, [1024 x i8]** %881, align 8
  store [1024 x i8]* null, [1024 x i8]** %896, align 8
  %914 = bitcast i32* %911 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %914, i8 0, i64 16, i1 false)
  br label %915

915:                                              ; preds = %844, %823, %146, %129, %101, %154, %106, %97, %85, %81, %69, %65, %53, %49, %37, %33, %21, %17, %803, %795, %910
  %916 = phi i32 [ %850, %910 ], [ 0, %803 ], [ 0, %795 ], [ -3, %101 ], [ -1, %154 ], [ -3, %106 ], [ -3, %97 ], [ -1, %85 ], [ -3, %81 ], [ -1, %69 ], [ -3, %65 ], [ -1, %53 ], [ -3, %49 ], [ -1, %37 ], [ -3, %33 ], [ -1, %21 ], [ -3, %17 ], [ -1, %129 ], [ -1, %146 ], [ 0, %823 ], [ 0, %844 ]
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %14) #9
  ret i32 %916
}

; Function Attrs: nofree nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @verifyMetaLayerComponentLayers(%struct.loader_instance*, %struct.loader_layer_properties*, %struct.loader_layer_list*) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 22
  %7 = lshr i32 %5, 12
  %8 = and i32 %7, 1023
  %9 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 10
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %175, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 11
  %14 = icmp eq %struct.loader_layer_list* %2, null
  %15 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 1
  %16 = getelementptr inbounds %struct.loader_layer_list, %struct.loader_layer_list* %2, i64 0, i32 2
  %17 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 0, i32 0, i64 0
  %18 = icmp ne %struct.loader_instance* %0, null
  %19 = icmp eq %struct.loader_instance* %0, null
  %20 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 6
  %21 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 6, i32 1
  %22 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 6, i32 2
  %23 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 7
  %24 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 7, i32 1
  %25 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 7, i32 2
  br label %26

26:                                               ; preds = %12, %170
  %27 = phi i64 [ 0, %12 ], [ %171, %170 ]
  %28 = load [1024 x i8]*, [1024 x i8]** %13, align 8
  %29 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 %27, i64 0
  br i1 %14, label %47, label %30

30:                                               ; preds = %26
  %31 = load i32, i32* %15, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %30
  %34 = load %struct.loader_layer_properties*, %struct.loader_layer_properties** %16, align 8
  %35 = zext i32 %31 to i64
  br label %38

36:                                               ; preds = %38
  %37 = icmp eq i64 %44, %35
  br i1 %37, label %47, label %38

38:                                               ; preds = %36, %33
  %39 = phi i64 [ 0, %33 ], [ %44, %36 ]
  %40 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %39
  %41 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %40, i64 0, i32 0, i32 0, i64 0
  %42 = tail call i32 @strcmp(i8* %29, i8* %41) #15
  %43 = icmp eq i32 %42, 0
  %44 = add nuw nsw i64 %39, 1
  br i1 %43, label %45, label %36

45:                                               ; preds = %38
  %46 = icmp eq %struct.loader_layer_properties* %40, null
  br i1 %46, label %47, label %52

47:                                               ; preds = %45, %30, %26, %36
  br i1 %19, label %178, label %48

48:                                               ; preds = %47
  %49 = trunc i64 %27 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 2, i32 undef, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.1178, i64 0, i64 0), i8* %17, i8* %29, i32 %49)
  br label %178

50:                                               ; preds = %52
  %51 = icmp eq i64 %58, %35
  br i1 %51, label %61, label %52

52:                                               ; preds = %45, %50
  %53 = phi i64 [ %58, %50 ], [ 0, %45 ]
  %54 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %53
  %55 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %54, i64 0, i32 0, i32 0, i64 0
  %56 = tail call i32 @strcmp(i8* %29, i8* %55) #15
  %57 = icmp eq i32 %56, 0
  %58 = add nuw nsw i64 %53, 1
  br i1 %57, label %59, label %50

59:                                               ; preds = %52
  %60 = icmp eq %struct.loader_layer_properties* %54, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %59, %50
  br i1 %19, label %178, label %62

62:                                               ; preds = %61
  %63 = trunc i64 %27 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 2, i32 undef, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.1179, i64 0, i64 0), i8* %17, i8* %29, i32 %63)
  br label %178

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %53, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = lshr i32 %66, 22
  %68 = lshr i32 %66, 12
  %69 = and i32 %68, 1023
  %70 = icmp eq i32 %67, %6
  %71 = icmp eq i32 %69, %8
  %72 = and i1 %70, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %64
  br i1 %19, label %178, label %74

74:                                               ; preds = %73
  %75 = trunc i64 %27 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 2, i32 undef, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.1180, i64 0, i64 0), i32 %6, i32 %8, i32 %75, i32 %67, i32 %69)
  br label %178

76:                                               ; preds = %64
  %77 = tail call i32 @strcmp(i8* %17, i8* %29) #15
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  br i1 %19, label %178, label %80

80:                                               ; preds = %79
  %81 = trunc i64 %27 to i32
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 2, i32 undef, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1181, i64 0, i64 0), i8* %17, i32 %81)
  br label %178

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %53, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %96, label %87

87:                                               ; preds = %82
  br i1 %18, label %88, label %89

88:                                               ; preds = %87
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 1, i32 undef, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.1182, i64 0, i64 0), i8* %17, i8* %55)
  br label %89

89:                                               ; preds = %88, %87
  %90 = tail call fastcc zeroext i1 @verifyMetaLayerComponentLayers(%struct.loader_instance* %0, %struct.loader_layer_properties* nonnull %54, %struct.loader_layer_list* nonnull %2)
  br i1 %90, label %96, label %91

91:                                               ; preds = %89
  br i1 %18, label %92, label %178

92:                                               ; preds = %91
  %93 = and i64 %27, 4294967295
  %94 = load [1024 x i8]*, [1024 x i8]** %13, align 8
  %95 = getelementptr inbounds [1024 x i8], [1024 x i8]* %94, i64 %93, i64 0
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 2, i32 undef, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.1183, i64 0, i64 0), i8* %17, i8* %95)
  br label %178

96:                                               ; preds = %82, %89
  %97 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %53, i32 6, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %53, i32 6, i32 2
  br label %108

102:                                              ; preds = %134, %96
  %103 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %53, i32 7, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %170, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %34, i64 %53, i32 7, i32 2
  br label %139

108:                                              ; preds = %100, %134
  %109 = phi i64 [ 0, %100 ], [ %135, %134 ]
  br i1 %19, label %115, label %110

110:                                              ; preds = %108
  %111 = load [1024 x i8]*, [1024 x i8]** %13, align 8
  %112 = getelementptr inbounds [1024 x i8], [1024 x i8]* %111, i64 %27, i64 0
  %113 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %101, align 8
  %114 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %113, i64 %109, i32 0, i64 0
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 16, i32 undef, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1184, i64 0, i64 0), i8* %17, i8* %112, i8* %114)
  br label %115

115:                                              ; preds = %108, %110
  %116 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %101, align 8
  %117 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %116, i64 %109
  %118 = load i32, i32* %21, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %115
  %121 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %22, align 8
  %122 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %117, i64 0, i32 0, i64 0
  %123 = zext i32 %118 to i64
  br label %126

124:                                              ; preds = %126
  %125 = icmp eq i64 %131, %123
  br i1 %125, label %132, label %126

126:                                              ; preds = %124, %120
  %127 = phi i64 [ 0, %120 ], [ %131, %124 ]
  %128 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %121, i64 %127, i32 0, i64 0
  %129 = tail call i32 @strcmp(i8* %128, i8* %122) #15
  %130 = icmp eq i32 %129, 0
  %131 = add nuw nsw i64 %127, 1
  br i1 %130, label %134, label %124

132:                                              ; preds = %124, %115
  %133 = tail call i32 @loader_add_to_ext_list(%struct.loader_instance* %0, %struct.loader_extension_list* %20, i32 1, %struct.VkExtensionProperties* %117)
  br label %134

134:                                              ; preds = %126, %132
  %135 = add nuw nsw i64 %109, 1
  %136 = load i32, i32* %97, align 8
  %137 = zext i32 %136 to i64
  %138 = icmp ult i64 %135, %137
  br i1 %138, label %108, label %102

139:                                              ; preds = %106, %165
  %140 = phi i64 [ 0, %106 ], [ %166, %165 ]
  br i1 %19, label %146, label %141

141:                                              ; preds = %139
  %142 = load [1024 x i8]*, [1024 x i8]** %13, align 8
  %143 = getelementptr inbounds [1024 x i8], [1024 x i8]* %142, i64 %27, i64 0
  %144 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %107, align 8
  %145 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %144, i64 %140, i32 0, i32 0, i64 0
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* nonnull %0, i32 16, i32 undef, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1185, i64 0, i64 0), i8* %17, i8* %143, i8* %145)
  br label %146

146:                                              ; preds = %139, %141
  %147 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %107, align 8
  %148 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %147, i64 %140, i32 0
  %149 = load i32, i32* %24, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %163, label %151

151:                                              ; preds = %146
  %152 = load %struct.loader_dev_ext_props*, %struct.loader_dev_ext_props** %25, align 8
  %153 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %148, i64 0, i32 0, i64 0
  %154 = zext i32 %149 to i64
  br label %157

155:                                              ; preds = %157
  %156 = icmp eq i64 %162, %154
  br i1 %156, label %163, label %157

157:                                              ; preds = %155, %151
  %158 = phi i64 [ 0, %151 ], [ %162, %155 ]
  %159 = getelementptr inbounds %struct.loader_dev_ext_props, %struct.loader_dev_ext_props* %152, i64 %158, i32 0, i32 0, i64 0
  %160 = tail call i32 @strcmp(i8* %159, i8* %153) #15
  %161 = icmp eq i32 %160, 0
  %162 = add nuw nsw i64 %158, 1
  br i1 %161, label %165, label %155

163:                                              ; preds = %155, %146
  %164 = tail call i32 @loader_add_to_dev_ext_list(%struct.loader_instance* %0, %struct.loader_device_extension_list* %23, %struct.VkExtensionProperties* %148, i32 0, i8** null)
  br label %165

165:                                              ; preds = %157, %163
  %166 = add nuw nsw i64 %140, 1
  %167 = load i32, i32* %103, align 8
  %168 = zext i32 %167 to i64
  %169 = icmp ult i64 %166, %168
  br i1 %169, label %139, label %170

170:                                              ; preds = %165, %102
  %171 = add nuw nsw i64 %27, 1
  %172 = load i32, i32* %9, align 8
  %173 = zext i32 %172 to i64
  %174 = icmp ult i64 %171, %173
  br i1 %174, label %26, label %175

175:                                              ; preds = %170, %3
  %176 = phi i32 [ 0, %3 ], [ %172, %170 ]
  %177 = getelementptr inbounds %struct.loader_layer_properties, %struct.loader_layer_properties* %1, i64 0, i32 0, i32 0, i64 0
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %0, i32 1, i32 undef, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1186, i64 0, i64 0), i8* %177, i32 %176)
  br label %178

178:                                              ; preds = %91, %92, %80, %79, %74, %73, %62, %61, %48, %47, %175
  %179 = phi i1 [ true, %175 ], [ false, %47 ], [ false, %48 ], [ false, %61 ], [ false, %62 ], [ false, %73 ], [ false, %74 ], [ false, %79 ], [ false, %80 ], [ false, %92 ], [ false, %91 ]
  ret i1 %179
}

; Function Attrs: nounwind ssp uwtable
define internal void ()* @loader_gpdpa_instance_terminator(%struct.VkInstance_T* readonly, i8*) #0 {
  %3 = alloca i8, align 1
  %4 = icmp eq %struct.VkInstance_T* %0, null
  br i1 %4, label %60, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.VkInstance_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %7 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %6, align 8
  %8 = icmp eq %struct.VkLayerInstanceDispatchTable_* %7, null
  br i1 %8, label %60, label %9

9:                                                ; preds = %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 -86, i8* %3, align 1
  %10 = call i8* @loader_lookup_instance_dispatch_table(%struct.VkLayerInstanceDispatchTable_* nonnull %7, i8* %1, i8* nonnull %3)
  %11 = load i8, i8* %3, align 1, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast i8* %10 to void ()*
  br label %58

15:                                               ; preds = %9
  %16 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %6, align 8
  %17 = load %struct.loader_instance*, %struct.loader_instance** getelementptr inbounds (%struct.loader_struct, %struct.loader_struct* @loader, i64 0, i32 0), align 8
  %18 = icmp eq %struct.loader_instance* %17, null
  br i1 %18, label %57, label %19

19:                                               ; preds = %15, %25
  %20 = phi %struct.loader_instance* [ %27, %25 ], [ %17, %15 ]
  %21 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %20, i64 0, i32 0
  %22 = load %struct.loader_instance_dispatch_table*, %struct.loader_instance_dispatch_table** %21, align 8
  %23 = getelementptr inbounds %struct.loader_instance_dispatch_table, %struct.loader_instance_dispatch_table* %22, i64 0, i32 0
  %24 = icmp eq %struct.VkLayerInstanceDispatchTable_* %23, %16
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %20, i64 0, i32 12
  %27 = load %struct.loader_instance*, %struct.loader_instance** %26, align 8
  %28 = icmp eq %struct.loader_instance* %27, null
  br i1 %28, label %57, label %19

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.loader_instance, %struct.loader_instance* %20, i64 0, i32 14
  %31 = load %struct.loader_icd_term*, %struct.loader_icd_term** %30, align 8
  %32 = icmp eq %struct.loader_icd_term* %31, null
  br i1 %32, label %57, label %33

33:                                               ; preds = %29, %47
  %34 = phi %struct.loader_icd_term* [ %49, %47 ], [ %31, %29 ]
  %35 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %34, i64 0, i32 0
  %36 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %35, align 8
  %37 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %36, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, 3
  br i1 %39, label %40, label %47

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %36, i64 0, i32 5
  %42 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %41, align 8
  %43 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %34, i64 0, i32 3
  %44 = load %struct.VkInstance_T*, %struct.VkInstance_T** %43, align 8
  %45 = tail call void ()* %42(%struct.VkInstance_T* %44, i8* %1) #9
  %46 = icmp eq void ()* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %40, %33
  %48 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %34, i64 0, i32 5
  %49 = load %struct.loader_icd_term*, %struct.loader_icd_term** %48, align 8
  %50 = icmp eq %struct.loader_icd_term* %49, null
  br i1 %50, label %57, label %33

51:                                               ; preds = %40
  %52 = tail call i64 @strlen(i8* %1) #15
  %53 = tail call i32 @murmurhash(i8* %1, i64 %52, i32 0) #9
  %54 = urem i32 %53, 250
  %55 = tail call i8* @loader_get_phys_dev_ext_termin(i32 %54) #9
  %56 = bitcast i8* %55 to void ()*
  br label %58

57:                                               ; preds = %25, %47, %15, %29
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* null, i32 16, i32 undef, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1200, i64 0, i64 0), i8* %1)
  br label %58

58:                                               ; preds = %57, %51, %13
  %59 = phi void ()* [ %14, %13 ], [ %56, %51 ], [ null, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %60

60:                                               ; preds = %58, %5, %2
  %61 = phi void ()* [ null, %2 ], [ %59, %58 ], [ null, %5 ]
  ret void ()* %61
}

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind readonly }
attributes #16 = { cold }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !3}
