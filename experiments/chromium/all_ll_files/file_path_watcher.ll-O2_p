; ModuleID = '../../base/files/file_path_watcher.cc'
source_filename = "../../base/files/file_path_watcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::FilePathWatcher" = type <{ %"class.std::__1::unique_ptr", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::FilePathWatcher::PlatformDelegate"* }
%"class.base::FilePathWatcher::PlatformDelegate" = type <{ i32 (...)**, %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::RepeatingCallback" = type opaque

@_ZTVN4base15FilePathWatcher16PlatformDelegateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::FilePathWatcher::PlatformDelegate"*)* @_ZN4base15FilePathWatcher16PlatformDelegateD2Ev to i8*), i8* bitcast (void (%"class.base::FilePathWatcher::PlatformDelegate"*)* @_ZN4base15FilePathWatcher16PlatformDelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN4base15FilePathWatcherD1Ev = hidden unnamed_addr alias void (%"class.base::FilePathWatcher"*), void (%"class.base::FilePathWatcher"*)* @_ZN4base15FilePathWatcherD2Ev
@_ZN4base15FilePathWatcher16PlatformDelegateD1Ev = hidden unnamed_addr alias void (%"class.base::FilePathWatcher::PlatformDelegate"*), void (%"class.base::FilePathWatcher::PlatformDelegate"*)* @_ZN4base15FilePathWatcher16PlatformDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15FilePathWatcherD2Ev(%"class.base::FilePathWatcher"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::FilePathWatcher", %"class.base::FilePathWatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePathWatcher::PlatformDelegate"** %2, align 8
  %4 = bitcast %"class.base::FilePathWatcher::PlatformDelegate"* %3 to void (%"class.base::FilePathWatcher::PlatformDelegate"*)***
  %5 = load void (%"class.base::FilePathWatcher::PlatformDelegate"*)**, void (%"class.base::FilePathWatcher::PlatformDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::FilePathWatcher::PlatformDelegate"*)*, void (%"class.base::FilePathWatcher::PlatformDelegate"*)** %5, i64 3
  %7 = load void (%"class.base::FilePathWatcher::PlatformDelegate"*)*, void (%"class.base::FilePathWatcher::PlatformDelegate"*)** %6, align 8
  tail call void %7(%"class.base::FilePathWatcher::PlatformDelegate"* %3) #6
  %8 = load %"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePathWatcher::PlatformDelegate"** %2, align 8
  store %"class.base::FilePathWatcher::PlatformDelegate"* null, %"class.base::FilePathWatcher::PlatformDelegate"** %2, align 8
  %9 = icmp eq %"class.base::FilePathWatcher::PlatformDelegate"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.base::FilePathWatcher::PlatformDelegate"* %8 to void (%"class.base::FilePathWatcher::PlatformDelegate"*)***
  %12 = load void (%"class.base::FilePathWatcher::PlatformDelegate"*)**, void (%"class.base::FilePathWatcher::PlatformDelegate"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::FilePathWatcher::PlatformDelegate"*)*, void (%"class.base::FilePathWatcher::PlatformDelegate"*)** %12, i64 1
  %14 = load void (%"class.base::FilePathWatcher::PlatformDelegate"*)*, void (%"class.base::FilePathWatcher::PlatformDelegate"*)** %13, align 8
  tail call void %14(%"class.base::FilePathWatcher::PlatformDelegate"* nonnull %8) #6
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4base15FilePathWatcher23RecursiveWatchAvailableEv() local_unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base15FilePathWatcher16PlatformDelegateC2Ev(%"class.base::FilePathWatcher::PlatformDelegate"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::FilePathWatcher::PlatformDelegate", %"class.base::FilePathWatcher::PlatformDelegate"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base15FilePathWatcher16PlatformDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::FilePathWatcher::PlatformDelegate", %"class.base::FilePathWatcher::PlatformDelegate"* %0, i64 0, i32 1, i32 0
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %3, align 8
  %4 = getelementptr inbounds %"class.base::FilePathWatcher::PlatformDelegate", %"class.base::FilePathWatcher::PlatformDelegate"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base15FilePathWatcher16PlatformDelegateD2Ev(%"class.base::FilePathWatcher::PlatformDelegate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::FilePathWatcher::PlatformDelegate", %"class.base::FilePathWatcher::PlatformDelegate"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base15FilePathWatcher16PlatformDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::FilePathWatcher::PlatformDelegate", %"class.base::FilePathWatcher::PlatformDelegate"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #6
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base15FilePathWatcher16PlatformDelegateD0Ev(%"class.base::FilePathWatcher::PlatformDelegate"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15FilePathWatcher5WatchERKNS_8FilePathENS0_4TypeERKNS_17RepeatingCallbackIFvS3_bEEE(%"class.base::FilePathWatcher"* nocapture readonly, %"class.base::FilePath"* dereferenceable(24), i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::FilePathWatcher", %"class.base::FilePathWatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePathWatcher::PlatformDelegate"** %5, align 8
  %7 = bitcast %"class.base::FilePathWatcher::PlatformDelegate"* %6 to i1 (%"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePath"*, i32, %"class.base::RepeatingCallback"*)***
  %8 = load i1 (%"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePath"*, i32, %"class.base::RepeatingCallback"*)**, i1 (%"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePath"*, i32, %"class.base::RepeatingCallback"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePath"*, i32, %"class.base::RepeatingCallback"*)*, i1 (%"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePath"*, i32, %"class.base::RepeatingCallback"*)** %8, i64 2
  %10 = load i1 (%"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePath"*, i32, %"class.base::RepeatingCallback"*)*, i1 (%"class.base::FilePathWatcher::PlatformDelegate"*, %"class.base::FilePath"*, i32, %"class.base::RepeatingCallback"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.base::FilePathWatcher::PlatformDelegate"* %6, %"class.base::FilePath"* dereferenceable(24) %1, i32 %2, %"class.base::RepeatingCallback"* %3) #6
  ret i1 %11
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
