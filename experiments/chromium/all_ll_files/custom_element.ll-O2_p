; ModuleID = '../../third_party/blink/renderer/core/html/custom/custom_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/custom/custom_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::StaticSingleton.1610" = type { %"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1195", i32, [4 x i8], %"class.std::__1::unique_ptr.1333", %"class.std::__1::unique_ptr.1333", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1339", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1345", %"class.std::__1::unique_ptr.1351", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1363", %"class.std::__1::unique_ptr.1369", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.74", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1195" = type { %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1198", %"class.std::__1::unique_ptr.1204", %"class.std::__1::unique_ptr.1210", %"class.std::__1::unique_ptr.1216", %"class.std::__1::unique_ptr.1222", %"class.std::__1::unique_ptr.1228", %"class.std::__1::unique_ptr.1239", %"class.std::__1::unique_ptr.1246", %"class.std::__1::unique_ptr.1246", %"class.std::__1::unique_ptr.1253", %"class.std::__1::unique_ptr.1260", %"class.std::__1::unique_ptr.1267", %"class.std::__1::unique_ptr.1267", %"class.std::__1::unique_ptr.1274", %"class.std::__1::unique_ptr.1281", %"class.std::__1::unique_ptr.1288", %"class.std::__1::unique_ptr.1313", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1231" = type { %"struct.std::__1::__atomic_base.1232" }
%"struct.std::__1::__atomic_base.1232" = type { %"struct.std::__1::__atomic_base.1233" }
%"struct.std::__1::__atomic_base.1233" = type { %"struct.std::__1::__cxx_atomic_impl.1234" }
%"struct.std::__1::__cxx_atomic_impl.1234" = type { %"struct.std::__1::__cxx_atomic_base_impl.1235" }
%"struct.std::__1::__cxx_atomic_base_impl.1235" = type { i64 }
%"class.std::__1::unique_ptr.1239" = type { %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"class.blink::Worklist.1242"* }
%"class.blink::Worklist.1242" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.std::__1::unique_ptr.1246" = type { %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.blink::Worklist.1249"* }
%"class.blink::Worklist.1249" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.blink::Worklist.1256"* }
%"class.blink::Worklist.1256" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.blink::Worklist.1263"* }
%"class.blink::Worklist.1263" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.blink::Worklist.1270"* }
%"class.blink::Worklist.1270" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.std::__1::unique_ptr.1274" = type { %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"class.blink::Worklist.1277"* }
%"class.blink::Worklist.1277" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.std::__1::unique_ptr.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.blink::Worklist.1284"* }
%"class.blink::Worklist.1284" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1231" }
%"class.std::__1::unique_ptr.1288" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1291", %"class.std::__1::__compressed_pair.1299", %"class.std::__1::__compressed_pair.1304", %"class.std::__1::__compressed_pair.1306", [4 x i8] }>
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293", %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64 }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { float }
%"class.std::__1::unique_ptr.1313" = type { %"class.std::__1::__compressed_pair.1314" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.1315" }
%"struct.std::__1::__compressed_pair_elem.1315" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1316", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1316" = type { %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1325" }
%"class.WTF::Vector.1325" = type { %"class.WTF::VectorBuffer.1326" }
%"class.WTF::VectorBuffer.1326" = type { %"class.WTF::VectorBufferBase.1327" }
%"class.WTF::VectorBufferBase.1327" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1339" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { %"struct.std::__1::pair.1344"*, i32, i32 }
%"struct.std::__1::pair.1344" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1345" = type { %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1351" = type { %"class.std::__1::__compressed_pair.1352" }
%"class.std::__1::__compressed_pair.1352" = type { %"struct.std::__1::__compressed_pair_elem.1353" }
%"struct.std::__1::__compressed_pair_elem.1353" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1357" }
%"class.std::__1::unique_ptr.1357" = type { %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1242"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1249"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1256"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1263"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1270"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1591", i64 }
%"class.std::__1::vector.1591" = type { %"class.std::__1::__vector_base.1592" }
%"class.std::__1::__vector_base.1592" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1593" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.1594" }
%"struct.std::__1::__compressed_pair_elem.1594" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1363" = type { %"class.std::__1::__compressed_pair.1364" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1369" = type { %"class.std::__1::__compressed_pair.1370" }
%"class.std::__1::__compressed_pair.1370" = type { %"struct.std::__1::__compressed_pair_elem.1371" }
%"struct.std::__1::__compressed_pair_elem.1371" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1375 }
%class.scoped_refptr.1375 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CustomElementRegistry" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::HeapVector", %"class.WTF::HashMap", %"class.blink::Member.3", %"class.blink::Member.555", %"class.blink::HeapHashMap.558", %"class.blink::Member.565" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.3" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.361", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.369", %"class.blink::Member.371", %"class.blink::Member.373", i8, %"class.blink::Member.375", %"class.blink::Member.377", %"class.blink::Member.379", %"class.blink::Member.379", %"class.blink::Member.379", %"class.blink::Member.379", %"class.blink::Member.379", %"class.blink::Member.379", %"class.blink::Member.381", %"class.blink::Member.383", %"class.blink::Member.385", %"class.blink::Member.387", %"class.blink::Member.389", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.328", %"class.blink::Member.391", %class.scoped_refptr.393, %"class.blink::HeapHashSet.455", %"class.blink::Member.462", %"class.blink::HeapHashMap.475", %"class.std::__1::unique_ptr.482", %"class.blink::Member.494", %"class.blink::Member.523", %"class.blink::Member.533", %"class.blink::Member.539", %"class.WTF::Vector.542", %"class.util::TokenType", %"class.WTF::HashSet.547", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.20", %"class.blink::Member.22", %"class.blink::Member.24", %"class.blink::Member.26", i8, %"class.WTF::Vector.28" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.6" }
%"class.blink::HeapVector.6" = type { %"class.WTF::Vector.9" }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11", [32 x i8] }
%"class.WTF::VectorBufferBase.11" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.13" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::HeapVector.15"* }
%"class.blink::HeapVector.15" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.18"* }
%"class.WTF::Vector.18" = type opaque
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.693", %"class.blink::Member.695", %"class.blink::Member.697", i8, i32, i8, i32, %"class.blink::Member.699", %"class.blink::Member.22", %"class.blink::FrameLifecycle", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.500", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.707", i8, %"class.base::UnguessableToken", %"class.absl::optional.709", %"class.absl::optional.714", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.20", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.727", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.735", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.743", %"class.blink::FrameLoader", %"class.blink::Member.770", %"class.blink::Member.590", %"class.blink::Member.772", %"class.blink::Member.774", %"class.blink::Member.776", %"class.blink::Member.778", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.780", %class.scoped_refptr.782, %"class.blink::Member.783", %"class.blink::Member.785", %"class.blink::Member.787", %"class.blink::Member.789", %"class.blink::Member.791", %"class.blink::Member.793", %"class.blink::Member.795", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.797", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.800", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.806", %"class.std::__1::unique_ptr.807", %"class.absl::optional.714", i32, [4 x i8], %"class.std::__1::unique_ptr.813", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.821", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.826", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.831", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.834", %"class.blink::Member.836", %"class.blink::Member.838", %"class.blink::Member.840", %"class.mojo::StructPtr.843", %"class.blink::Member.852", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.854", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.727" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.728" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.728" = type { %"class.WTF::HashMap.731" }
%"class.WTF::HashMap.731" = type { %"class.WTF::HashTable.732" }
%"class.WTF::HashTable.732" = type <{ %"struct.WTF::KeyValuePair.734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.734" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.485", %"class.base::WeakPtrFactory.490" }
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.489" = type opaque
%"class.base::WeakPtrFactory.490" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.55", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.32" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.741" }
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.498" }
%"class.blink::WeakMember.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.220" }
%"class.WTF::HashTable.220" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.157", %"class.base::RepeatingCallback.1627", i64, %"class.std::__1::map.1628", i8*, i64, %"class.base::WeakPtrFactory.1637" }
%"class.base::RepeatingCallback.157" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.62", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.1627" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1628" = type { %"class.std::__1::__tree.1629" }
%"class.std::__1::__tree.1629" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1630", %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.base::WeakPtrFactory.1637" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.743" = type { %"class.WTF::HashSet.746" }
%"class.WTF::HashSet.746" = type { %"class.WTF::HashTable.747" }
%"class.WTF::HashTable.747" = type <{ %"class.blink::WeakMember.749"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.749" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.500", %"class.blink::Member.750", %"class.blink::Member.752", %"class.std::__1::unique_ptr.754", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.766" }
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.757" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.766" = type { %"class.WTF::HashTable.767" }
%"class.WTF::HashTable.767" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.861", %"class.blink::Member.500", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.869", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.874", %"class.blink::Member.876", %"class.blink::Member.876", %"class.std::__1::unique_ptr.879", i32, [4 x i8], %"class.WTF::HashSet.882", %"class.blink::Member.889", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.891", %"class.blink::HeapHashSet.898", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.906", i8, %"class.blink::Member.912", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.924", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.938", i8, %"class.std::__1::unique_ptr.944", %"class.std::__1::unique_ptr.1061", %"class.WTF::Vector.1067", i32, %class.scoped_refptr.1072, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1073", %"class.blink::Member.1075", %"class.blink::Member.1077", %"class.blink::HeapHashSet.1079", %"class.blink::HeapHashSet.1086", %"class.std::__1::unique_ptr.1093", %"class.std::__1::unique_ptr.1100", %"class.WTF::Vector.1111" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.861" = type { %"class.WTF::HashTable.862" }
%"class.WTF::HashTable.862" = type <{ %class.scoped_refptr.865*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.865 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.868", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.866, %"class.base::WeakPtrFactory.867" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.866 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.38" }>
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.867" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.868" = type { %"class.blink::MemberBase.771" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.869" = type { %"class.absl::optional_internal::optional_data.870" }
%"class.absl::optional_internal::optional_data.870" = type { %"class.absl::optional_internal::optional_data_base.871" }
%"class.absl::optional_internal::optional_data_base.871" = type { %"class.absl::optional_internal::optional_data_dtor_base.872" }
%"class.absl::optional_internal::optional_data_dtor_base.872" = type { i8, %union.anon.873 }
%union.anon.873 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::HeapHashSet.878"* }
%"class.blink::HeapHashSet.878" = type opaque
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.WTF::HashSet.882"* }
%"class.WTF::HashSet.882" = type { %"class.WTF::HashTable.883" }
%"class.WTF::HashTable.883" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.891" = type { %"class.WTF::HashSet.894" }
%"class.WTF::HashSet.894" = type { %"class.WTF::HashTable.895" }
%"class.WTF::HashTable.895" = type <{ %"class.blink::Member.897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.897" = type opaque
%"class.blink::HeapHashSet.898" = type { %"class.WTF::HashSet.901" }
%"class.WTF::HashSet.901" = type { %"class.WTF::HashTable.902" }
%"class.WTF::HashTable.902" = type <{ %"class.blink::Member.904"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1139", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1150", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.590" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1141", %"class.blink::Member.1142", %"class.blink::Member.1144", %"class.blink::Member.1146", %"class.blink::Member.1148", %"class.WTF::Vector.1111", i16, %class.scoped_refptr.866 }
%"class.blink::ThreadState::PrefinalizerRegistration.1141" = type { i8 }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1150" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1151", { i64, i64 } }
%"class.blink::WeakMember.1151" = type { %"class.blink::MemberBase.905" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.916", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"struct.WTF::KeyValuePair.919"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.919" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.920", i32, i32 }
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.921" }
%"class.WTF::VectorBuffer.921" = type { %"class.WTF::VectorBufferBase.922" }
%"class.WTF::VectorBufferBase.922" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.924" = type { %"class.WTF::LinkedHashSet.927" }
%"class.WTF::LinkedHashSet.927" = type { %"class.WTF::HashMap.928", %"class.WTF::VectorBackedLinkedList.932" }
%"class.WTF::HashMap.928" = type { %"class.WTF::HashTable.929" }
%"class.WTF::HashTable.929" = type <{ %"struct.WTF::KeyValuePair.931"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.931" = type opaque
%"class.WTF::VectorBackedLinkedList.932" = type { %"class.WTF::Vector.933", i32, i32 }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { %"class.WTF::VectorBackedLinkedListNode.936"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.936" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.947, %class.scoped_refptr.947, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1038", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1043", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.947 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.948", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.955" }
%"class.WTF::RefCounted.948" = type { %"class.base::RefCounted.949" }
%"class.base::RefCounted.949" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.950", i32, [4 x i8] }>
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.955" = type { %"class.WTF::VectorBuffer.956" }
%"class.WTF::VectorBuffer.956" = type { %"class.WTF::VectorBufferBase.957" }
%"class.WTF::VectorBufferBase.957" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.961", %"class.std::__1::unique_ptr.1010", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.958, %class.scoped_refptr.959, %class.scoped_refptr.960 }
%class.scoped_refptr.958 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.974", i8, i8, %class.scoped_refptr.958, i32, i32 }
%"class.WTF::RefCounted.974" = type { %"class.base::RefCounted.975" }
%"class.base::RefCounted.975" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.959 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1134" }
%"class.blink::PaintPropertyNode.1134" = type { %"class.WTF::RefCounted.1135", i8, i8, %class.scoped_refptr.959, i32, i32 }
%"class.WTF::RefCounted.1135" = type { %"class.base::RefCounted.1136" }
%"class.base::RefCounted.1136" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.960 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1131" }
%"class.blink::PaintPropertyNode.1131" = type { %"class.WTF::RefCounted.1132", i8, i8, %class.scoped_refptr.960, i32, i32 }
%"class.WTF::RefCounted.1132" = type { %"class.base::RefCounted.1133" }
%"class.base::RefCounted.1133" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.964", %"class.WTF::Vector.969", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.966" }
%"class.WTF::VectorBufferBase.966" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.969" = type { %"class.WTF::VectorBuffer.970" }
%"class.WTF::VectorBuffer.970" = type { %"class.WTF::VectorBufferBase.971" }
%"class.WTF::VectorBufferBase.971" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.989" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.982, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.983", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.976" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.982 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1116", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1116" = type { %"class.WTF::RefCounted.1117", i8, i8, %class.scoped_refptr.982, i32, i32 }
%"class.WTF::RefCounted.1117" = type { %"class.base::RefCounted.1118" }
%"class.base::RefCounted.1118" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1119" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1119" = type { %"class.absl::optional_internal::optional_data.1120" }
%"class.absl::optional_internal::optional_data.1120" = type { %"class.absl::optional_internal::optional_data_base.1121" }
%"class.absl::optional_internal::optional_data_base.1121" = type { %"class.absl::optional_internal::optional_data_dtor_base.1122" }
%"class.absl::optional_internal::optional_data_dtor_base.1122" = type { i8, %union.anon.1123 }
%union.anon.1123 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1124", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.992", %"class.std::__1::unique_ptr.998", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1013", %"class.absl::optional.1013" }
%"class.absl::optional.1013" = type { %"class.absl::optional_internal::optional_data.1014" }
%"class.absl::optional_internal::optional_data.1014" = type { %"class.absl::optional_internal::optional_data_base.1015" }
%"class.absl::optional_internal::optional_data_base.1015" = type { %"class.absl::optional_internal::optional_data_dtor_base.1016" }
%"class.absl::optional_internal::optional_data_dtor_base.1016" = type { i8, [3 x i8], %union.anon.1017 }
%union.anon.1017 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.955"*, %"class.absl::optional.1023", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1023" = type { %"class.absl::optional_internal::optional_data.1024" }
%"class.absl::optional_internal::optional_data.1024" = type { %"class.absl::optional_internal::optional_data_base.1025" }
%"class.absl::optional_internal::optional_data_base.1025" = type { %"class.absl::optional_internal::optional_data_dtor_base.1026" }
%"class.absl::optional_internal::optional_data_dtor_base.1026" = type { i8, %union.anon.1027 }
%union.anon.1027 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1028", %"class.WTF::Vector.1033" }
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030", [128 x i8] }
%"class.WTF::VectorBufferBase.1030" = type { i32*, i32, i32 }
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035", [128 x i8] }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1043" = type { %"class.WTF::HashTable.1044" }
%"class.WTF::HashTable.1044" = type <{ %"struct.WTF::KeyValuePair.1047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1047" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1048", %"class.WTF::Vector.1053" }
%"class.WTF::HashMap.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"struct.WTF::KeyValuePair.1052"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1052" = type opaque
%"class.WTF::Vector.1053" = type { %"class.WTF::VectorBuffer.1054" }
%"class.WTF::VectorBuffer.1054" = type { %"class.WTF::VectorBufferBase.1055" }
%"class.WTF::VectorBufferBase.1055" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1067" = type { %"class.WTF::VectorBuffer.1068" }
%"class.WTF::VectorBuffer.1068" = type { %"class.WTF::VectorBufferBase.1069" }
%"class.WTF::VectorBufferBase.1069" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1072 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1079" = type { %"class.WTF::HashSet.1082" }
%"class.WTF::HashSet.1082" = type { %"class.WTF::HashTable.1083" }
%"class.WTF::HashTable.1083" = type <{ %"class.blink::WeakMember.1085"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1085" = type opaque
%"class.blink::HeapHashSet.1086" = type { %"class.WTF::HashSet.1089" }
%"class.WTF::HashSet.1089" = type { %"class.WTF::HashTable.1090" }
%"class.WTF::HashTable.1090" = type <{ %"class.blink::WeakMember.1092"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1092" = type opaque
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1096" }
%"class.base::time_internal::TimeBase.1096" = type { i64 }
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1103", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1103" = type { %"class.absl::optional_internal::optional_data.1104" }
%"class.absl::optional_internal::optional_data.1104" = type { %"class.absl::optional_internal::optional_data_base.1105" }
%"class.absl::optional_internal::optional_data_base.1105" = type { %"class.absl::optional_internal::optional_data_dtor_base.1106" }
%"class.absl::optional_internal::optional_data_dtor_base.1106" = type { i8, %union.anon.1107 }
%union.anon.1107 = type { %"class.base::Time" }
%"class.WTF::Vector.1111" = type { %"class.WTF::VectorBuffer.1112" }
%"class.WTF::VectorBuffer.1112" = type { %"class.WTF::VectorBufferBase.1113" }
%"class.WTF::VectorBufferBase.1113" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::Element"* }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.782 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.797" = type { %"class.blink::Member.798" }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1640" }
%"class.mojo::Remote.1640" = type { %"class.mojo::internal::InterfacePtrState.1641" }
%"class.mojo::internal::InterfacePtrState.1641" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1642" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.31, %"class.std::__1::unique_ptr.154", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.37, i32 }>
%class.scoped_refptr.31 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.37, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.116", %"class.absl::optional.121", %"class.absl::optional.78", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.145", i8, [7 x i8], %class.scoped_refptr.37, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.37, %"class.std::__1::unique_ptr.63", %"class.absl::optional", %"struct.std::__1::atomic.74", i8, i8, i8, i8, i32, i32, %"class.absl::optional.78", %"class.std::__1::unique_ptr.83", i8, i64, %class.scoped_refptr.112, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.115" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.37, i8, %"class.mojo::ScopedHandleBase.66", %class.scoped_refptr.67, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.68" }
%"class.mojo::ScopedHandleBase.66" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.67 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.68" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.72 }
%union.anon.72 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.73", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.73" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.86", i8, i64, %class.scoped_refptr.87, %class.scoped_refptr.108 }
%"class.base::RepeatingCallback.86" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.87 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.97", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.97" = type { %"class.std::__1::__tree.98" }
%"class.std::__1::__tree.98" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%class.scoped_refptr.108 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.112 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1598", [4 x i8], %"class.base::RepeatingCallback.157", %class.scoped_refptr.37, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1598" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.115" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, %union.anon.120 }
%union.anon.120 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, [7 x i8], %union.anon.125 }
%union.anon.125 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%union.anon.82 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.130 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.130 = type { %"class.std::__1::map.133" }
%"class.std::__1::map.133" = type { %"class.std::__1::__tree.134" }
%"class.std::__1::__tree.134" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.144"*, i64 }
%"class.std::__1::unique_ptr.144" = type opaque
%"class.std::__1::map.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.157", %"class.base::OnceCallback.158", %"class.absl::optional.159", %"class.absl::optional.164", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.171", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.179", %"class.std::__1::map.190", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.199", i8, %class.scoped_refptr.37, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.200" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.158" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.159" = type { %"class.absl::optional_internal::optional_data.160" }
%"class.absl::optional_internal::optional_data.160" = type { %"class.absl::optional_internal::optional_data_base.161" }
%"class.absl::optional_internal::optional_data_base.161" = type { %"class.absl::optional_internal::optional_data_dtor_base.162" }
%"class.absl::optional_internal::optional_data_dtor_base.162" = type { i8, %union.anon.163 }
%union.anon.163 = type { %"class.base::TimeDelta" }
%"class.absl::optional.164" = type { %"class.absl::optional_internal::optional_data.165" }
%"class.absl::optional_internal::optional_data.165" = type { %"class.absl::optional_internal::optional_data_base.166" }
%"class.absl::optional_internal::optional_data_base.166" = type { %"class.absl::optional_internal::optional_data_dtor_base.167" }
%"class.absl::optional_internal::optional_data_dtor_base.167" = type { i8, %union.anon.168 }
%union.anon.168 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.37, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.169" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.169" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.174", %class.scoped_refptr.175 }
%"class.base::RepeatingCallback.174" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.175 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.179" = type { %"class.std::__1::__tree.180" }
%"class.std::__1::__tree.180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.190" = type { %"class.std::__1::__tree.191" }
%"class.std::__1::__tree.191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.base::OnceCallback.199" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.200" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.37 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.806" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.819" }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1650" }
%"class.mojo::AssociatedRemote.1650" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1651" }
%"class.mojo::internal::AssociatedInterfacePtrState.1651" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1652" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.154", i32 }>
%"class.std::__1::unique_ptr.1652" = type { %"class.std::__1::__compressed_pair.1653" }
%"class.std::__1::__compressed_pair.1653" = type { %"struct.std::__1::__compressed_pair_elem.1654" }
%"struct.std::__1::__compressed_pair_elem.1654" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.821" = type { %"class.blink::Member.822" }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1660" }
%"class.mojo::AssociatedRemote.1660" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1661" }
%"class.mojo::internal::AssociatedInterfacePtrState.1661" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1662" }
%"class.std::__1::unique_ptr.1662" = type { %"class.std::__1::__compressed_pair.1663" }
%"class.std::__1::__compressed_pair.1663" = type { %"struct.std::__1::__compressed_pair_elem.1664" }
%"struct.std::__1::__compressed_pair_elem.1664" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.824" }
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1670", %"class.blink::Member.500", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1670" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1671" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.154" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1671" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.826" = type { %"class.blink::Member.827" }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1674", %"class.blink::Member.500", %"class.mojo::AssociatedReceiver.1675" }
%"class.blink::ThreadState::PrefinalizerRegistration.1674" = type { i8 }
%"class.mojo::AssociatedReceiver.1675" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1676" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1676" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.829" }
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1679", %"class.blink::Member.500", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1679" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.31, %"class.std::__1::unique_ptr.154", %"class.base::WeakPtrFactory.1680" }
%"class.base::WeakPtrFactory.1680" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.831" = type { %"class.blink::Member.832" }
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1683", %"class.blink::Member.500", %"class.mojo::AssociatedReceiver.1684" }
%"class.blink::ThreadState::PrefinalizerRegistration.1683" = type { i8 }
%"class.mojo::AssociatedReceiver.1684" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1685" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1685" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::HeapHashMap.842"* }
%"class.blink::HeapHashMap.842" = type opaque
%"class.mojo::StructPtr.843" = type { %"class.std::__1::unique_ptr.844" }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.847", %"class.mojo::InlinedStructPtr.848" }
%"class.mojo::InlinedStructPtr.847" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.848" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, %union.anon.858 }
%union.anon.858 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.20", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.701"*, %"struct.std::__1::pair.701"*, %"class.std::__1::__compressed_pair.702" }
%"struct.std::__1::pair.701" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"struct.std::__1::pair.701"* }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.709" = type { %"class.absl::optional_internal::optional_data.710" }
%"class.absl::optional_internal::optional_data.710" = type { %"class.absl::optional_internal::optional_data_base.711" }
%"class.absl::optional_internal::optional_data_base.711" = type { %"class.absl::optional_internal::optional_data_dtor_base.712" }
%"class.absl::optional_internal::optional_data_dtor_base.712" = type { i8, %union.anon.713 }
%union.anon.713 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.714" = type { %"class.absl::optional_internal::optional_data.715" }
%"class.absl::optional_internal::optional_data.715" = type { %"class.absl::optional_internal::optional_data_base.716" }
%"class.absl::optional_internal::optional_data_base.716" = type { %"class.absl::optional_internal::optional_data_dtor_base.717" }
%"class.absl::optional_internal::optional_data_dtor_base.717" = type { i8, %union.anon.718 }
%union.anon.718 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.720" }
%"class.blink::HeapHashSet.720" = type { %"class.WTF::HashSet.723" }
%"class.WTF::HashSet.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"class.blink::WeakMember.726"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.726" = type opaque
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.277", i32, i8, [3 x i8], %"class.blink::HeapVector.279", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.287", %"class.blink::Member.289", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.298", %"class.blink::Member.357", %"class.blink::Member.359", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.214" }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.217"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.217" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.222" }
%"class.blink::Supplementable.222" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.223" }
%"class.blink::HeapHashMap.223" = type { %"class.WTF::HashMap.226" }
%"class.WTF::HashMap.226" = type { %"class.WTF::HashTable.227" }
%"class.WTF::HashTable.227" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type { i8*, %"class.blink::Member.1615" }
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1617" }
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.230, %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.265", %"class.blink::Member.271", i32, [4 x i8], %"class.WTF::HashSet.273", i32, i32 }
%class.scoped_refptr.230 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.232", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.237 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.231" }
%"class.base::RefCounted.231" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.232" = type { %"class.absl::optional_internal::optional_data.233" }
%"class.absl::optional_internal::optional_data.233" = type { %"class.absl::optional_internal::optional_data_base.234" }
%"class.absl::optional_internal::optional_data_base.234" = type { %"class.absl::optional_internal::optional_data_dtor_base.235" }
%"class.absl::optional_internal::optional_data_dtor_base.235" = type { i8, %union.anon.236 }
%union.anon.236 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.237 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.241", %"class.std::__1::map.252", %"class.std::__1::map.261"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.232" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.241" = type { %"class.std::__1::__tree.242" }
%"class.std::__1::__tree.242" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.252" = type { %"class.std::__1::__tree.253" }
%"class.std::__1::__tree.253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.261" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.277", i32, i8, [3 x i8], %"class.blink::HeapVector.279", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.287", %"class.blink::Member.289", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.298", %"class.blink::Member.357", %"class.blink::Member.359", i8, [7 x i8] }>
%"class.WTF::HashSet.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.279" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::Member.285"*, i32, i32 }
%"class.blink::Member.285" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.291", i32, i32 }
%"class.blink::HeapHashMap.291" = type { %"class.WTF::HashMap.294" }
%"class.WTF::HashMap.294" = type { %"class.WTF::HashTable.295" }
%"class.WTF::HashTable.295" = type <{ %"struct.WTF::KeyValuePair.297"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.297" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.301" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.304" }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306" }
%"class.WTF::VectorBufferBase.306" = type { %"class.mojo::StructPtr.307"*, i32, i32 }
%"class.mojo::StructPtr.307" = type { %"class.std::__1::unique_ptr.308" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.311", %"class.WTF::HashMap.318", %"class.WTF::HashMap.323", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.328", i32, %"class.mojo::StructPtr.333", %"class.WTF::Vector.328" }
%"class.mojo::StructPtr.311" = type { %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.318" = type { %"class.WTF::HashTable.319" }
%"class.WTF::HashTable.319" = type <{ %"struct.WTF::KeyValuePair.322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.322" = type opaque
%"class.WTF::HashMap.323" = type { %"class.WTF::HashTable.324" }
%"class.WTF::HashTable.324" = type <{ %"struct.WTF::KeyValuePair.327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.327" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.333" = type { %"class.std::__1::unique_ptr.334" }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.328", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.361" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.362" }
%"class.blink::HeapHashMap.362" = type { %"class.WTF::HashMap.365" }
%"class.WTF::HashMap.365" = type { %"class.WTF::HashTable.366" }
%"class.WTF::HashTable.366" = type <{ %"struct.WTF::KeyValuePair.368"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.368" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1152", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1111", %"class.WTF::Vector.1111", i8, i32, %"class.blink::Member.527", %"class.blink::Member.271", %"class.blink::Member.1160", %"class.blink::Member.1162", %"class.blink::Member.1164", %"class.blink::Member.1166", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1168", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.654", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1178", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1378", %"class.blink::HeapVector.631", %"class.blink::Member.590", %"class.blink::Member.519", %"class.blink::Member.590", %"class.blink::Member.590", %"class.blink::Member.590", %"class.blink::UserActionElementSet", %"class.blink::Member.1387", double, double, i64, i64, %"class.blink::HeapHashSet.1389", %"class.blink::HeapHashSet.1396", i16, i8, %"class.blink::Member.1403", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.590", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.590", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1429", %"class.blink::HeapVector.1431", %"class.std::__1::unique_ptr.1439", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1445", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1458", %"class.WTF::Vector.1460", i8, i8, %"class.std::__1::unique_ptr.1465", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.631", %"class.blink::HeapVector.1471", i32, i8, %"class.blink::HeapTaskRunnerTimer.1378", %"class.blink::HeapTaskRunnerTimer.1378", %"class.blink::DocumentTiming", %"class.blink::Member.1479", i8, i32, %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::HeapTaskRunnerTimer.1378", %"class.blink::Member.1487", %"class.WTF::HashMap.1489", %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", %"class.blink::Member.371", %"class.blink::Member.371", %"class.blink::HeapTaskRunnerTimer.1378", %"class.blink::HeapHashSet.1502", i8, i32, %"class.blink::Member.1509", %"class.blink::Member.1511", i32, %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.std::__1::unique_ptr.1519", i64, %"class.std::__1::unique_ptr.1525", i32, i32, %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::Member.1535", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1537", %"class.WTF::Vector.542", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1539", %"class.blink::Member.1546", %"class.std::__1::unique_ptr.1548", %"class.blink::Member.1554", i8, i8, %"class.WTF::String", %"class.blink::Member.1556", i8, [7 x i8], %"class.blink::HeapHashMap.1558", %"class.blink::HeapObserverSet.1565", %"class.blink::Member.1573", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1575", i32, i8, i8, %"class.blink::WeakMember.1577", %"class.blink::Member.1578" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.504", %"class.blink::Member.504" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.504", %"class.blink::Member.506", %"class.blink::Member.504", %"class.blink::Member.504", %"class.blink::Member.508" }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.614", %"class.blink::Member.371", %"class.blink::Member.506", %"class.blink::Member.616", %"class.blink::Member.616", %"class.blink::Member.637", %"class.blink::Member.639", %"class.blink::Member.641", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.646", %"class.blink::HeapVector.648" }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.620" }
%"class.blink::HeapHashMap.620" = type { %"class.WTF::HashMap.623" }
%"class.WTF::HashMap.623" = type { %"class.WTF::HashTable.624" }
%"class.WTF::HashTable.624" = type <{ %"struct.WTF::KeyValuePair.626"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.626" = type { %"class.WTF::AtomicString", %"class.blink::Member.627" }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.590", i32, %"class.blink::HeapVector.631" }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.643" }
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::HeapHashMap.645"* }
%"class.blink::HeapHashMap.645" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.648" = type { %"class.WTF::Vector.651" }
%"class.WTF::Vector.651" = type { %"class.WTF::VectorBuffer.652" }
%"class.WTF::VectorBuffer.652" = type { %"class.WTF::VectorBufferBase.653" }
%"class.WTF::VectorBufferBase.653" = type { %"class.blink::Member.654"*, i32, i32 }
%"class.blink::Supplementable.1152" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1153" }
%"class.blink::HeapHashMap.1153" = type { %"class.WTF::HashMap.1156" }
%"class.WTF::HashMap.1156" = type { %"class.WTF::HashTable.1157" }
%"class.WTF::HashTable.1157" = type <{ %"struct.WTF::KeyValuePair.1159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1159" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.656", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.658, %"class.WTF::Vector.659", %"class.WTF::Vector.659", %"class.blink::Member.504", %"class.blink::Member.664", %"class.blink::HeapHashSet.668", %"class.blink::Member.371", %"class.WTF::HashSet.675", %"class.WTF::TextPosition", %"class.blink::Member.679", %"class.blink::HeapVector.681", %"class.blink::Member.688" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.658 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.659" = type { %"class.WTF::VectorBuffer.660" }
%"class.WTF::VectorBuffer.660" = type { %"class.WTF::VectorBufferBase.661" }
%"class.WTF::VectorBufferBase.661" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.666" }
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.668" = type { %"class.WTF::HashSet.671" }
%"class.WTF::HashSet.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"class.blink::WeakMember.674"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.674" = type { %"class.blink::MemberBase.507" }
%"class.WTF::HashSet.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.681" = type { %"class.WTF::Vector.684" }
%"class.WTF::Vector.684" = type { %"class.WTF::VectorBuffer.685" }
%"class.WTF::VectorBuffer.685" = type { %"class.WTF::VectorBufferBase.686" }
%"class.WTF::VectorBufferBase.686" = type { %"class.blink::Member.664"*, i32, i32 }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1178" = type { %"class.WTF::VectorBuffer.1179" }
%"class.WTF::VectorBuffer.1179" = type { %"class.WTF::VectorBufferBase.1180" }
%"class.WTF::VectorBufferBase.1180" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1181 }
%class.scoped_refptr.1181 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1182", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1182" = type { %"class.base::RefCounted.1183" }
%"class.base::RefCounted.1183" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1186" }
%"class.blink::HeapHashMap.1186" = type { %"class.WTF::HashMap.1189" }
%"class.WTF::HashMap.1189" = type { %"class.WTF::HashTable.1190" }
%"class.WTF::HashTable.1190" = type <{ %"struct.WTF::KeyValuePair.1192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1192" = type { %"class.blink::WeakMember.1193", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.371", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.504", %"class.blink::Member.504", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1380" }
%"class.blink::HeapHashMap.1380" = type { %"class.WTF::HashMap.1383" }
%"class.WTF::HashMap.1383" = type { %"class.WTF::HashTable.1384" }
%"class.WTF::HashTable.1384" = type <{ %"struct.WTF::KeyValuePair.1386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1386" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1389" = type { %"class.WTF::HashSet.1392" }
%"class.WTF::HashSet.1392" = type { %"class.WTF::HashTable.1393" }
%"class.WTF::HashTable.1393" = type <{ %"class.blink::WeakMember.1395"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1395" = type opaque
%"class.blink::HeapHashSet.1396" = type { %"class.WTF::HashSet.1399" }
%"class.WTF::HashSet.1399" = type { %"class.WTF::HashTable.1400" }
%"class.WTF::HashTable.1400" = type <{ %"class.blink::WeakMember.1402"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1402" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.506", %"class.blink::HeapVector.648" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1431" = type { %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Member.1437"*, i32, i32 }
%"class.blink::Member.1437" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1445" = type { %"class.WTF::HashSet.1448" }
%"class.WTF::HashSet.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"class.blink::WeakMember.1451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1451" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1452", i32, [4 x i8] }>
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.std::__1::pair.1455"*, i32, i32 }
%"struct.std::__1::pair.1455" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.631" = type { %"class.WTF::Vector.634" }
%"class.WTF::Vector.634" = type { %"class.WTF::VectorBuffer.635" }
%"class.WTF::VectorBuffer.635" = type { %"class.WTF::VectorBufferBase.589" }
%"class.WTF::VectorBufferBase.589" = type { %"class.blink::Member.590"*, i32, i32 }
%"class.blink::HeapVector.1471" = type { %"class.WTF::Vector.1474" }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"class.blink::Member.1477"*, i32, i32 }
%"class.blink::Member.1477" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.371" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1493" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1378" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1379", { i64, i64 } }
%"class.blink::WeakMember.1379" = type { %"class.blink::MemberBase.372" }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1525" = type { %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type opaque
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1548" = type { %"class.std::__1::__compressed_pair.1549" }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"struct.std::__1::__compressed_pair_elem.1550" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1558" = type { %"class.WTF::HashMap.1561" }
%"class.WTF::HashMap.1561" = type { %"class.WTF::HashTable.1562" }
%"class.WTF::HashTable.1562" = type <{ %"struct.WTF::KeyValuePair.1564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1564" = type opaque
%"class.blink::HeapObserverSet.1565" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1566" }
%"class.blink::HeapHashSet.1566" = type { %"class.WTF::HashSet.1569" }
%"class.WTF::HashSet.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %"class.blink::WeakMember.1572"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1572" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.371", %"class.blink::HeapHashSet.1582", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1589", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1582" = type { %"class.WTF::HashSet.1585" }
%"class.WTF::HashSet.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ %"class.blink::Member.1588"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1588" = type opaque
%"class.blink::HeapTaskRunnerTimer.1589" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1590", { i64, i64 } }
%"class.blink::WeakMember.1590" = type { %"class.blink::MemberBase.1576" }
%"class.blink::WeakMember.1577" = type { %"class.blink::MemberBase.505" }
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.328" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330" }
%"class.WTF::VectorBufferBase.330" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.395", i64, %"class.WTF::Vector.399", %"class.WTF::Vector.404", %"class.WTF::Vector.410", %"class.WTF::Vector.428", %class.scoped_refptr.230, %"class.WTF::HashMap.434", %"class.WTF::Vector.439", %"class.WTF::Vector.399", %"class.WTF::Vector.445", %"class.WTF::HashMap.450", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.394" }
%"class.base::RefCountedThreadSafe.394" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { i8* }
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406", [8 x i8] }
%"class.WTF::VectorBufferBase.406" = type { %class.scoped_refptr.407*, i32, i32 }
%class.scoped_refptr.407 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.410" = type { %"class.WTF::VectorBuffer.411" }
%"class.WTF::VectorBuffer.411" = type { %"class.WTF::VectorBufferBase.412" }
%"class.WTF::VectorBufferBase.412" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.420" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.413 }
%class.scoped_refptr.413 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.431", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.431" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type opaque
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.mojo::ScopedHandleBase.442"*, i32, i32 }
%"class.mojo::ScopedHandleBase.442" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401", [16 x i8] }
%"class.WTF::VectorBufferBase.401" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"struct.WTF::KeyValuePair.454"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.454" = type { i8**, %"class.std::__1::unique_ptr.1619" }
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.455" = type { %"class.WTF::HashSet.458" }
%"class.WTF::HashSet.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"class.blink::WeakMember.461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.461" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.469", %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.464" }
%"class.absl::optional.464" = type { %"class.absl::optional_internal::optional_data.465" }
%"class.absl::optional_internal::optional_data.465" = type { %"class.absl::optional_internal::optional_data_base.466" }
%"class.absl::optional_internal::optional_data_base.466" = type { %"class.absl::optional_internal::optional_data_dtor_base.467" }
%"class.absl::optional_internal::optional_data_dtor_base.467" = type { i8, %union.anon.468 }
%union.anon.468 = type { i64 }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::Event"* }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.475" = type { %"class.WTF::HashMap.478" }
%"class.WTF::HashMap.478" = type { %"class.WTF::HashTable.479" }
%"class.WTF::HashTable.479" = type <{ %"struct.WTF::KeyValuePair.481"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.481" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.500", %"class.blink::CachedTextInputInfo", %"class.blink::Member.519", %"class.blink::Member.521", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.502", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.512", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.512" = type { %"class.WTF::HashMap.515" }
%"class.WTF::HashMap.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"struct.WTF::KeyValuePair.518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.518" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.504", i32, i32 }
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::Member.531" }
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.527", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.537" }
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::HeapHashMap.541"* }
%"class.blink::HeapHashMap.541" = type opaque
%"class.WTF::Vector.542" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { i64*, i32, i32 }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::HeapHashMap.557"* }
%"class.blink::HeapHashMap.557" = type opaque
%"class.blink::HeapHashMap.558" = type { %"class.WTF::HashMap.561" }
%"class.WTF::HashMap.561" = type { %"class.WTF::HashTable.562" }
%"class.WTF::HashTable.562" = type <{ %"struct.WTF::KeyValuePair.564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.564" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::CustomElementReactionStack"* }
%"class.blink::CustomElementReactionStack" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap.569", %"class.blink::HeapVector.576", %"class.blink::Member.582" }
%"class.blink::HeapHashMap.569" = type { %"class.WTF::HashMap.572" }
%"class.WTF::HashMap.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type opaque
%"class.blink::HeapVector.576" = type { %"class.WTF::Vector.579" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::Member.582"*, i32, i32 }
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::HeapVector.584"* }
%"class.blink::HeapVector.584" = type { %"class.WTF::Vector.587" }
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase.589", [8 x i8] }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.595" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.592 }
%class.scoped_refptr.592 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.593", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.593" = type { %"class.base::RefCounted.594" }
%"class.base::RefCounted.594" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.599", %"class.blink::Member.601", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.599" = type { %"class.WTF::SingleThreadedBitField.600" }
%"class.WTF::SingleThreadedBitField.600" = type { i32 }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.603 }
%class.scoped_refptr.603 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.604", %"class.WTF::AtomicString", %"class.WTF::Vector.606" }
%"class.WTF::RefCounted.604" = type { %"class.base::RefCounted.605" }
%"class.base::RefCounted.605" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608", [32 x i8] }
%"class.WTF::VectorBufferBase.608" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::CustomElementDefinition" = type { %"class.blink::NameClient", %"class.blink::CustomElementDescriptor", %"class.blink::HeapVector.584", %"class.WTF::HashSet.675", i8, i8, i8, i8, i8, %"class.blink::HeapVector.648" }
%"class.blink::CustomElementDescriptor" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::Vector.1601" = type { %"class.WTF::VectorBuffer.1602" }
%"class.WTF::VectorBuffer.1602" = type { %"class.WTF::VectorBufferBase.608" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1607" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1607" = type { %"class.v8::TracedReference.1608" }
%"class.v8::TracedReference.1608" = type { %"class.v8::BasicTracedReference.1609" }
%"class.v8::BasicTracedReference.1609" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HTMLUnknownElement" = type { %"class.blink::HTMLElement" }
%"class.blink::CustomElementReaction" = type opaque
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_18HTMLUnknownElementEE4CallIJRKNS_13QualifiedNameERNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names = internal global i64 0, align 8
@.str = private unnamed_addr constant [20 x i8] c"Name cannot be used\00", align 1
@_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names = internal global %"class.WTF::StaticSingleton.1610" zeroinitializer, align 8
@_ZGVZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names = internal global i64 0, align 8
@_ZN5blink10html_names17xhtmlNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/core/html/custom/custom_element.cc\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"ShouldCreateCustomElement(tag_name)\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"HTMLUnknownElement with built-in tag name: \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"annotation-xml\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"color-profile\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"font-face\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"font-face-src\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"font-face-uri\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"font-face-format\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"font-face-name\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"missing-glyph\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.18 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 12, i32 0, i32 0
  %7 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %6, align 8
  %8 = icmp eq %"class.blink::LocalDOMWindow"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::CustomElementRegistry"* @_ZNK5blink14LocalDOMWindow14customElementsEv(%"class.blink::LocalDOMWindow"* nonnull %7) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi %"class.blink::CustomElementRegistry"* [ %10, %9 ], [ null, %1 ]
  ret %"class.blink::CustomElementRegistry"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_8DocumentE(%"class.blink::Document"* nocapture readonly dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %2, align 8
  %4 = icmp eq %"class.blink::LocalDOMWindow"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::CustomElementRegistry"* @_ZNK5blink14LocalDOMWindow14customElementsEv(%"class.blink::LocalDOMWindow"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.blink::CustomElementRegistry"* [ %6, %5 ], [ null, %1 ]
  ret %"class.blink::CustomElementRegistry"* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::CustomElementRegistry"* @_ZNK5blink14LocalDOMWindow14customElementsEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CustomElementDefinition"* @_ZN5blink13CustomElement20DefinitionForElementEPKNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 917504
  %7 = icmp eq i32 %6, 131072
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* nonnull %0) #11
  br label %10

10:                                               ; preds = %1, %3, %8
  %11 = phi %"class.blink::CustomElementDefinition"* [ %9, %8 ], [ null, %3 ], [ null, %1 ]
  ret %"class.blink::CustomElementDefinition"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.1601"* @_ZN5blink13CustomElement26EmbedderCustomElementNamesEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.WTF::Vector.1601"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to %"class.WTF::Vector.1601"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement28AddEmbedderCustomElementNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to %"class.WTF::AtomicString"**), align 8
  %10 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  br label %17

17:                                               ; preds = %22, %14
  %18 = phi %"class.WTF::AtomicString"* [ %9, %14 ], [ %23, %22 ]
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, %16
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 1
  %24 = icmp ult %"class.WTF::AtomicString"* %23, %12
  br i1 %24, label %17, label %32

25:                                               ; preds = %17
  %26 = ptrtoint %"class.WTF::AtomicString"* %18 to i64
  %27 = ptrtoint %"class.WTF::AtomicString"* %9 to i64
  %28 = sub i64 %26, %27
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %71

32:                                               ; preds = %22, %25, %8
  %33 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to i8*) acquire, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %39, !prof !2

35:                                               ; preds = %32
  %36 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  br label %39

39:                                               ; preds = %32, %35, %38
  %40 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %41 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %70, label %43, !prof !3

43:                                               ; preds = %39
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to %"class.WTF::AtomicString"**), align 8
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 %45, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #11
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  tail call void @llvm.trap() #11
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %43
  %68 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  br label %71

70:                                               ; preds = %39
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1601"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to %"class.WTF::Vector.1601"*), %"class.WTF::AtomicString"* dereferenceable(8) %0) #11
  br label %71

71:                                               ; preds = %25, %70, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement38AddEmbedderCustomElementNameForTestingERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %0) #11
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, %4
  %8 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  br i1 %7, label %9, label %72

9:                                                ; preds = %2
  %10 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %13, i64* %14, align 8
  br label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  br label %22

22:                                               ; preds = %11, %15
  %23 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %23, i32* %24, align 8
  %25 = call zeroext i1 @_ZN5blink8Document11IsValidNameERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %3) #11
  br i1 %25, label %26, label %58

26:                                               ; preds = %22
  %27 = call zeroext i1 @_ZN5blink21IsKnownBuiltinTagNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %0) #11
  br i1 %27, label %44, label %28

28:                                               ; preds = %26
  %29 = call zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8) %0, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br i1 %10, label %43, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %43

43:                                               ; preds = %28, %39, %42
  br i1 %29, label %87, label %88

44:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br i1 %10, label %87, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %87

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %87

58:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br i1 %10, label %87, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %87

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %87

72:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %73 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %87

87:                                               ; preds = %86, %83, %72, %71, %68, %58, %57, %54, %44, %43
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)) #11
  br label %89

88:                                               ; preds = %43
  call void @_ZN5blink13CustomElement28AddEmbedderCustomElementNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %0)
  br label %89

89:                                               ; preds = %88, %87
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink8Document11IsValidNameERKN3WTF10StringViewE(%"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink21IsKnownBuiltinTagNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  br i1 %1, label %3, label %34

3:                                                ; preds = %2
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names) #11
  br label %10

10:                                               ; preds = %3, %6, %9
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names to %"class.WTF::AtomicString"**), align 8
  %12 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink13CustomElement26EmbedderCustomElementNamesEvE7s_names, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  br label %19

19:                                               ; preds = %24, %16
  %20 = phi %"class.WTF::AtomicString"* [ %11, %16 ], [ %25, %24 ]
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, %18
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 1
  %26 = icmp ult %"class.WTF::AtomicString"* %25, %14
  br i1 %26, label %19, label %34

27:                                               ; preds = %19
  %28 = ptrtoint %"class.WTF::AtomicString"* %20 to i64
  %29 = ptrtoint %"class.WTF::AtomicString"* %11 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 3
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %167

34:                                               ; preds = %24, %27, %10, %2
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %167, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  br i1 %42, label %58, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp ugt i32 %46, 1
  br i1 %47, label %48, label %167

48:                                               ; preds = %44
  %49 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = add i32 %46, -1
  %52 = zext i32 %51 to i64
  %53 = tail call i8* @memchr(i8* %50, i32 45, i64 %52) #12
  %54 = icmp eq i8* %53, null
  %55 = ptrtoint i8* %53 to i64
  %56 = ptrtoint %"class.WTF::StringImpl"* %43 to i64
  %57 = sub i64 %55, %56
  br i1 %54, label %167, label %72

58:                                               ; preds = %38
  %59 = bitcast %"class.WTF::StringImpl"* %43 to i16*
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp ugt i32 %61, 1
  br i1 %62, label %63, label %167

63:                                               ; preds = %58, %68
  %64 = phi i64 [ %69, %68 ], [ 1, %58 ]
  %65 = getelementptr inbounds i16, i16* %59, i64 %64
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, 45
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = add nuw nsw i64 %64, 1
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %61, %70
  br i1 %71, label %167, label %63

72:                                               ; preds = %63, %48
  %73 = phi i32 [ %46, %48 ], [ %61, %63 ]
  %74 = phi i64 [ %57, %48 ], [ %64, %63 ]
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, -1
  %77 = icmp eq i32 %73, 0
  %78 = or i1 %76, %77
  br i1 %78, label %167, label %79

79:                                               ; preds = %72
  %80 = load atomic i32, i32* %39 monotonic, align 4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  br label %90

87:                                               ; preds = %79
  %88 = bitcast %"class.WTF::StringImpl"* %43 to i16*
  %89 = load i16, i16* %88, align 2
  br label %90

90:                                               ; preds = %83, %87
  %91 = phi i16 [ %86, %83 ], [ %89, %87 ]
  %92 = add i16 %91, -97
  %93 = icmp ult i16 %92, 26
  br i1 %93, label %94, label %167

94:                                               ; preds = %90
  %95 = load atomic i32, i32* %39 monotonic, align 4
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %121, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  %100 = zext i32 %73 to i64
  %101 = icmp ugt i32 %73, 1
  br i1 %101, label %102, label %164

102:                                              ; preds = %98, %118
  %103 = phi i64 [ %119, %118 ], [ 1, %98 ]
  %104 = getelementptr inbounds i8, i8* %99, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = add i8 %105, -97
  %107 = icmp ult i8 %106, 26
  %108 = add i8 %105, -48
  %109 = icmp ult i8 %108, 10
  %110 = or i1 %107, %109
  br i1 %110, label %118, label %111

111:                                              ; preds = %102
  switch i8 %105, label %112 [
    i8 -73, label %118
    i8 95, label %118
    i8 46, label %118
    i8 45, label %118
  ]

112:                                              ; preds = %111
  %113 = icmp ult i8 %105, -64
  %114 = icmp eq i8 %105, -41
  %115 = or i1 %113, %114
  %116 = icmp ne i8 %105, -9
  %117 = xor i1 %116, %115
  br i1 %117, label %118, label %167

118:                                              ; preds = %102, %111, %111, %111, %111, %112
  %119 = add nuw nsw i64 %103, 1
  %120 = icmp ult i64 %119, %100
  br i1 %120, label %102, label %164

121:                                              ; preds = %94
  %122 = bitcast %"class.WTF::StringImpl"* %43 to i16*
  br label %123

123:                                              ; preds = %162, %121
  %124 = phi %"class.WTF::StringImpl"* [ %36, %121 ], [ %163, %162 ]
  %125 = phi i32 [ 1, %121 ], [ %159, %162 ]
  %126 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  br label %130

130:                                              ; preds = %123, %127
  %131 = phi i32 [ %129, %127 ], [ 0, %123 ]
  %132 = icmp ult i32 %125, %131
  br i1 %132, label %133, label %164

133:                                              ; preds = %130
  %134 = add nuw i32 %125, 1
  %135 = zext i32 %125 to i64
  %136 = getelementptr inbounds i16, i16* %122, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = and i32 %138, 64512
  %140 = icmp eq i32 %139, 55296
  br i1 %140, label %141, label %158

141:                                              ; preds = %133
  br i1 %126, label %146, label %142

142:                                              ; preds = %141
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %134, %144
  br i1 %145, label %158, label %146

146:                                              ; preds = %141, %142
  %147 = zext i32 %134 to i64
  %148 = getelementptr inbounds i16, i16* %122, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i32
  %151 = and i32 %150, 64512
  %152 = icmp eq i32 %151, 56320
  br i1 %152, label %153, label %158

153:                                              ; preds = %146
  %154 = add i32 %125, 2
  %155 = shl nuw nsw i32 %138, 10
  %156 = add nsw i32 %155, -56613888
  %157 = add nsw i32 %156, %150
  br label %158

158:                                              ; preds = %146, %153, %142, %133
  %159 = phi i32 [ %134, %133 ], [ %154, %153 ], [ %134, %146 ], [ %134, %142 ]
  %160 = phi i32 [ %138, %133 ], [ %157, %153 ], [ %138, %146 ], [ %138, %142 ]
  %161 = tail call zeroext i1 @_ZN5blink9Character32IsPotentialCustomElementNameCharEi(i32 %160) #11
  br i1 %161, label %162, label %167

162:                                              ; preds = %158
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  br label %123

164:                                              ; preds = %118, %130, %98
  %165 = tail call zeroext i1 @_ZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %0)
  %166 = xor i1 %165, true
  br label %167

167:                                              ; preds = %68, %112, %158, %27, %72, %48, %58, %44, %34, %90, %164
  %168 = phi i1 [ %166, %164 ], [ true, %27 ], [ false, %72 ], [ false, %90 ], [ false, %34 ], [ false, %44 ], [ false, %58 ], [ false, %48 ], [ false, %158 ], [ false, %112 ], [ false, %68 ]
  ret i1 %168
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca [8 x %"class.WTF::AtomicString"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %162, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %162, label %8

8:                                                ; preds = %5
  %9 = bitcast [8 x %"class.WTF::AtomicString"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #11
  %10 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 14) #11
  %11 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i64 13) #11
  %12 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 9) #11
  %13 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 3
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i64 13) #11
  %14 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i64 13) #11
  %15 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 5
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i64 16) #11
  %16 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 6
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i64 14) #11
  %17 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.1610", %"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), i32 8) #11
  %18 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #11
  %19 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* dereferenceable(8) %11, %"class.WTF::AtomicString"* dereferenceable(8) %11) #11
  %20 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.WTF::AtomicString"* dereferenceable(8) %12) #11
  %21 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.WTF::AtomicString"* dereferenceable(8) %13) #11
  %22 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* dereferenceable(8) %14, %"class.WTF::AtomicString"* dereferenceable(8) %14) #11
  %23 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* dereferenceable(8) %15, %"class.WTF::AtomicString"* dereferenceable(8) %15) #11
  %24 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* dereferenceable(8) %16, %"class.WTF::AtomicString"* dereferenceable(8) %16) #11
  %25 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"* bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::HashTable.676"*), %"class.WTF::AtomicString"* dereferenceable(8) %17, %"class.WTF::AtomicString"* dereferenceable(8) %17) #11
  %26 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 7, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %41, %38, %8
  %43 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #11
  br label %59

59:                                               ; preds = %58, %55, %42
  %60 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #11
  br label %76

76:                                               ; preds = %75, %72, %59
  %77 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 4, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #11
  br label %93

93:                                               ; preds = %92, %89, %76
  %94 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #11
  br label %110

110:                                              ; preds = %109, %106, %93
  %111 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 2, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #11
  br label %127

127:                                              ; preds = %126, %123, %110
  %128 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #11
  br label %144

144:                                              ; preds = %143, %140, %127
  %145 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #11
  br label %161

161:                                              ; preds = %144, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names) #11
  br label %162

162:                                              ; preds = %5, %161, %1
  %163 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names to %"class.WTF::AtomicString"**), align 8
  %164 = icmp eq %"class.WTF::AtomicString"* %163, null
  br i1 %164, label %213, label %165

165:                                              ; preds = %162
  %166 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.1610", %"class.WTF::StaticSingleton.1610"* @_ZZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringEE31s_hyphenated_spec_element_names, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %167 = add i32 %166, -1
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = lshr i32 %172, 8
  %174 = and i32 %173, %167
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %163, i64 %175
  %177 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %213, label %180

180:                                              ; preds = %165
  %181 = xor i32 %173, -1
  %182 = lshr i32 %172, 31
  %183 = add nsw i32 %182, %181
  %184 = shl i32 %183, 12
  %185 = xor i32 %184, %183
  %186 = lshr i32 %185, 7
  %187 = xor i32 %186, %185
  %188 = shl i32 %187, 2
  %189 = xor i32 %188, %187
  %190 = lshr i32 %189, 20
  %191 = xor i32 %190, %189
  %192 = or i32 %191, 1
  %193 = zext i32 %192 to i64
  br label %194

194:                                              ; preds = %204, %180
  %195 = phi %"class.WTF::StringImpl"* [ %178, %180 ], [ %211, %204 ]
  %196 = phi %"class.WTF::AtomicString"* [ %176, %180 ], [ %209, %204 ]
  %197 = phi i64 [ %175, %180 ], [ %208, %204 ]
  %198 = phi i64 [ 0, %180 ], [ %206, %204 ]
  %199 = bitcast %"class.WTF::AtomicString"* %196 to i8**
  %200 = load i8*, i8** %199, align 8
  %201 = icmp ne i8* %200, inttoptr (i64 -1 to i8*)
  %202 = icmp eq %"class.WTF::StringImpl"* %195, %170
  %203 = and i1 %202, %201
  br i1 %203, label %213, label %204

204:                                              ; preds = %194
  %205 = icmp eq i64 %198, 0
  %206 = select i1 %205, i64 %193, i64 %198
  %207 = add i64 %206, %197
  %208 = and i64 %207, %168
  %209 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %163, i64 %208
  %210 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %209, i64 0, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %213, label %194

213:                                              ; preds = %194, %204, %162, %165
  %214 = phi %"class.WTF::AtomicString"* [ null, %162 ], [ null, %165 ], [ null, %204 ], [ %196, %194 ]
  %215 = icmp ne %"class.WTF::AtomicString"* %214, null
  ret i1 %215
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CustomElement25ShouldCreateCustomElementERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8) %0, i1 zeroext true) #11
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CustomElement25ShouldCreateCustomElementERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 3
  %5 = tail call zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8) %4, i1 zeroext true) #11
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br label %14

14:                                               ; preds = %6, %1
  %15 = phi i1 [ false, %1 ], [ %13, %6 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CustomElement36ShouldCreateCustomizedBuiltinElementERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN5blink21htmlElementTypeForTagERKN3WTF12AtomicStringEPKNS_8DocumentE(%"class.WTF::AtomicString"* dereferenceable(8) %0, %"class.blink::Document"* %1) #11
  %4 = icmp ne i32 %3, 72
  ret i1 %4
}

declare i32 @_ZN5blink21htmlElementTypeForTagERKN3WTF12AtomicStringEPKNS_8DocumentE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CustomElement36ShouldCreateCustomizedBuiltinElementERKNS_13QualifiedNameERKNS_8DocumentE(%"class.blink::QualifiedName"* nocapture readonly dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3
  %6 = tail call i32 @_ZN5blink21htmlElementTypeForTagERKN3WTF12AtomicStringEPKNS_8DocumentE(%"class.WTF::AtomicString"* dereferenceable(8) %5, %"class.blink::Document"* %1) #11
  %7 = icmp eq i32 %6, 72
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi i1 [ false, %2 ], [ %15, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZN5blink13CustomElement19CreateCustomElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CustomElementDescriptor", align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %47, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %29

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #11
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %10, %25
  %30 = phi %"class.WTF::StringImpl"* [ %27, %25 ], [ %8, %10 ]
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #11
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %3, %25, %29, %45
  %48 = phi %"class.WTF::StringImpl"* [ null, %25 ], [ %30, %29 ], [ %30, %45 ], [ null, %3 ]
  %49 = bitcast %"class.blink::CustomElementDescriptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49)
  %50 = getelementptr inbounds %"class.blink::CustomElementDescriptor", %"class.blink::CustomElementDescriptor"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::CustomElementDescriptor", %"class.blink::CustomElementDescriptor"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 12, i32 0, i32 0
  %53 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %52, align 8
  %54 = icmp eq %"class.blink::LocalDOMWindow"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %47
  %56 = tail call %"class.blink::CustomElementRegistry"* @_ZNK5blink14LocalDOMWindow14customElementsEv(%"class.blink::LocalDOMWindow"* nonnull %53) #11
  %57 = icmp eq %"class.blink::CustomElementRegistry"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry13DefinitionForERKNS_23CustomElementDescriptorE(%"class.blink::CustomElementRegistry"* nonnull %56, %"class.blink::CustomElementDescriptor"* nonnull dereferenceable(16) %4) #11
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  br label %61

61:                                               ; preds = %58, %55, %47
  %62 = phi %"class.WTF::StringImpl"* [ %48, %47 ], [ %48, %55 ], [ %60, %58 ]
  %63 = phi %"class.blink::CustomElementDefinition"* [ null, %47 ], [ null, %55 ], [ %59, %58 ]
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %78

78:                                               ; preds = %77, %74, %61
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #11
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49)
  %95 = icmp eq %"class.blink::CustomElementDefinition"* %63, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = call %"class.blink::HTMLElement"* @_ZN5blink23CustomElementDefinition13CreateElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::CustomElementDefinition"* nonnull %63, %"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %2) #11
  br label %102

98:                                               ; preds = %94
  %99 = call %"class.blink::Element"* @_ZN5blink8Document16CreateRawElementERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::Document"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %2) #11
  %100 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %99, i64 0, i32 0, i32 0
  call void @_ZN5blink4Node21SetCustomElementStateENS_18CustomElementStateE(%"class.blink::Node"* %100, i32 393216) #11
  %101 = bitcast %"class.blink::Element"* %99 to %"class.blink::HTMLElement"*
  br label %102

102:                                              ; preds = %96, %98
  %103 = phi %"class.blink::HTMLElement"* [ %101, %98 ], [ %97, %96 ]
  ret %"class.blink::HTMLElement"* %103
}

declare %"class.blink::HTMLElement"* @_ZN5blink23CustomElementDefinition13CreateElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::CustomElementDefinition"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink13CustomElement36CreateUncustomizedOrUndefinedElementERNS_8DocumentERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::Element"* @_ZN5blink8Document16CreateRawElementERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::Document"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %2) #11
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void @_ZN5blink7Element10SetIsValueERKN3WTF12AtomicStringE(%"class.blink::Element"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  br label %10

10:                                               ; preds = %9, %4
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, %17
  br i1 %18, label %19, label %28

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3
  %21 = tail call zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8) %20, i1 zeroext true) #11
  %22 = xor i1 %21, true
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  %25 = and i1 %24, %22
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4Node21SetCustomElementStateENS_18CustomElementStateE(%"class.blink::Node"* %27, i32 393216) #11
  br label %28

28:                                               ; preds = %10, %19, %26
  ret %"class.blink::Element"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZN5blink13CustomElement19CreateFailedElementERNS_8DocumentERKNS_13QualifiedNameE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 3
  %7 = tail call zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8) %6, i1 zeroext true) #11
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %2, %8
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 186, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0)) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i64 43) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_13QualifiedNameE(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %21

21:                                               ; preds = %8, %16
  %22 = call %"class.blink::HTMLUnknownElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18HTMLUnknownElementEE4CallIJRKNS_13QualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %23 = getelementptr inbounds %"class.blink::HTMLUnknownElement", %"class.blink::HTMLUnknownElement"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink4Node21SetCustomElementStateENS_18CustomElementStateE(%"class.blink::Node"* %23, i32 524288) #11
  %24 = getelementptr inbounds %"class.blink::HTMLUnknownElement", %"class.blink::HTMLUnknownElement"* %22, i64 0, i32 0
  ret %"class.blink::HTMLElement"* %24
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_13QualifiedNameE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN5blink4Node21SetCustomElementStateENS_18CustomElementStateE(%"class.blink::Node"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement7EnqueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::Element"* dereferenceable(104), %"class.blink::CustomElementReaction"*) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::CEReactionsScope"*, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %4 = icmp eq %"class.blink::CEReactionsScope"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink16CEReactionsScope21EnqueueToCurrentQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CEReactionsScope"* nonnull %3, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %1) #11
  br label %8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(56) %"class.blink::CustomElementReactionStack"* @_ZN5blink26CustomElementReactionStack7CurrentEv() #11
  tail call void @_ZN5blink26CustomElementReactionStack20EnqueueToBackupQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CustomElementReactionStack"* %7, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %1) #11
  br label %8

8:                                                ; preds = %5, %6
  ret void
}

declare void @_ZN5blink16CEReactionsScope21EnqueueToCurrentQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CEReactionsScope"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::CustomElementReaction"*) local_unnamed_addr #2

declare dereferenceable(56) %"class.blink::CustomElementReactionStack"* @_ZN5blink26CustomElementReactionStack7CurrentEv() local_unnamed_addr #2

declare void @_ZN5blink26CustomElementReactionStack20EnqueueToBackupQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CustomElementReactionStack"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::CustomElementReaction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement24EnqueueConnectedCallbackERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %3 = bitcast %"class.blink::CustomElementDefinition"* %2 to i1 (%"class.blink::CustomElementDefinition"*)***
  %4 = load i1 (%"class.blink::CustomElementDefinition"*)**, i1 (%"class.blink::CustomElementDefinition"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %4, i64 6
  %6 = load i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::CustomElementDefinition"* %2) #11
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @_ZN5blink23CustomElementDefinition24EnqueueConnectedCallbackERNS_7ElementE(%"class.blink::CustomElementDefinition"* %2, %"class.blink::Element"* dereferenceable(104) %0) #11
  br label %9

9:                                                ; preds = %8, %1
  ret void
}

declare void @_ZN5blink23CustomElementDefinition24EnqueueConnectedCallbackERNS_7ElementE(%"class.blink::CustomElementDefinition"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement27EnqueueDisconnectedCallbackERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %3 = bitcast %"class.blink::CustomElementDefinition"* %2 to i1 (%"class.blink::CustomElementDefinition"*)***
  %4 = load i1 (%"class.blink::CustomElementDefinition"*)**, i1 (%"class.blink::CustomElementDefinition"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %4, i64 7
  %6 = load i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::CustomElementDefinition"* %2) #11
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @_ZN5blink23CustomElementDefinition27EnqueueDisconnectedCallbackERNS_7ElementE(%"class.blink::CustomElementDefinition"* %2, %"class.blink::Element"* dereferenceable(104) %0) #11
  br label %9

9:                                                ; preds = %8, %1
  ret void
}

declare void @_ZN5blink23CustomElementDefinition27EnqueueDisconnectedCallbackERNS_7ElementE(%"class.blink::CustomElementDefinition"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement22EnqueueAdoptedCallbackERNS_7ElementERNS_8DocumentES4_(%"class.blink::Element"* dereferenceable(104), %"class.blink::Document"* dereferenceable(2848), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %5 = bitcast %"class.blink::CustomElementDefinition"* %4 to i1 (%"class.blink::CustomElementDefinition"*)***
  %6 = load i1 (%"class.blink::CustomElementDefinition"*)**, i1 (%"class.blink::CustomElementDefinition"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %6, i64 8
  %8 = load i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::CustomElementDefinition"* %4) #11
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void @_ZN5blink23CustomElementDefinition22EnqueueAdoptedCallbackERNS_7ElementERNS_8DocumentES4_(%"class.blink::CustomElementDefinition"* %4, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::Document"* dereferenceable(2848) %2) #11
  br label %11

11:                                               ; preds = %10, %3
  ret void
}

declare void @_ZN5blink23CustomElementDefinition22EnqueueAdoptedCallbackERNS_7ElementERNS_8DocumentES4_(%"class.blink::CustomElementDefinition"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::Document"* dereferenceable(2848), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement31EnqueueAttributeChangedCallbackERNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringES9_(%"class.blink::Element"* dereferenceable(104), %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %6 = tail call zeroext i1 @_ZNK5blink23CustomElementDefinition27HasAttributeChangedCallbackERKNS_13QualifiedNameE(%"class.blink::CustomElementDefinition"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @_ZN5blink23CustomElementDefinition31EnqueueAttributeChangedCallbackERNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringES9_(%"class.blink::CustomElementDefinition"* %5, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  br label %8

8:                                                ; preds = %7, %4
  ret void
}

declare zeroext i1 @_ZNK5blink23CustomElementDefinition27HasAttributeChangedCallbackERKNS_13QualifiedNameE(%"class.blink::CustomElementDefinition"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink23CustomElementDefinition31EnqueueAttributeChangedCallbackERNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringES9_(%"class.blink::CustomElementDefinition"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement29EnqueueFormAssociatedCallbackERNS_7ElementEPNS_15HTMLFormElementE(%"class.blink::Element"* dereferenceable(104), %"class.blink::HTMLFormElement"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %4 = bitcast %"class.blink::CustomElementDefinition"* %3 to i1 (%"class.blink::CustomElementDefinition"*)***
  %5 = load i1 (%"class.blink::CustomElementDefinition"*)**, i1 (%"class.blink::CustomElementDefinition"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %5, i64 9
  %7 = load i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::CustomElementDefinition"* %3) #11
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = tail call %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory20CreateFormAssociatedERNS_23CustomElementDefinitionEPNS_15HTMLFormElementE(%"class.blink::CustomElementDefinition"* dereferenceable(96) %3, %"class.blink::HTMLFormElement"* %1) #11
  %11 = load %"class.blink::CEReactionsScope"*, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %12 = icmp eq %"class.blink::CEReactionsScope"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN5blink16CEReactionsScope21EnqueueToCurrentQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CEReactionsScope"* nonnull %11, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %10) #11
  br label %16

14:                                               ; preds = %9
  %15 = tail call dereferenceable(56) %"class.blink::CustomElementReactionStack"* @_ZN5blink26CustomElementReactionStack7CurrentEv() #11
  tail call void @_ZN5blink26CustomElementReactionStack20EnqueueToBackupQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CustomElementReactionStack"* %15, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %10) #11
  br label %16

16:                                               ; preds = %14, %13, %2
  ret void
}

declare %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory20CreateFormAssociatedERNS_23CustomElementDefinitionEPNS_15HTMLFormElementE(%"class.blink::CustomElementDefinition"* dereferenceable(96), %"class.blink::HTMLFormElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement24EnqueueFormResetCallbackERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %3 = bitcast %"class.blink::CustomElementDefinition"* %2 to i1 (%"class.blink::CustomElementDefinition"*)***
  %4 = load i1 (%"class.blink::CustomElementDefinition"*)**, i1 (%"class.blink::CustomElementDefinition"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %4, i64 10
  %6 = load i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::CustomElementDefinition"* %2) #11
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = tail call %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory15CreateFormResetERNS_23CustomElementDefinitionE(%"class.blink::CustomElementDefinition"* dereferenceable(96) %2) #11
  %10 = load %"class.blink::CEReactionsScope"*, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %11 = icmp eq %"class.blink::CEReactionsScope"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink16CEReactionsScope21EnqueueToCurrentQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CEReactionsScope"* nonnull %10, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %9) #11
  br label %15

13:                                               ; preds = %8
  %14 = tail call dereferenceable(56) %"class.blink::CustomElementReactionStack"* @_ZN5blink26CustomElementReactionStack7CurrentEv() #11
  tail call void @_ZN5blink26CustomElementReactionStack20EnqueueToBackupQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CustomElementReactionStack"* %14, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %9) #11
  br label %15

15:                                               ; preds = %13, %12, %1
  ret void
}

declare %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory15CreateFormResetERNS_23CustomElementDefinitionE(%"class.blink::CustomElementDefinition"* dereferenceable(96)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement27EnqueueFormDisabledCallbackERNS_7ElementEb(%"class.blink::Element"* dereferenceable(104), i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %4 = bitcast %"class.blink::CustomElementDefinition"* %3 to i1 (%"class.blink::CustomElementDefinition"*)***
  %5 = load i1 (%"class.blink::CustomElementDefinition"*)**, i1 (%"class.blink::CustomElementDefinition"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %5, i64 11
  %7 = load i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::CustomElementDefinition"* %3) #11
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = tail call %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory18CreateFormDisabledERNS_23CustomElementDefinitionEb(%"class.blink::CustomElementDefinition"* dereferenceable(96) %3, i1 zeroext %1) #11
  %11 = load %"class.blink::CEReactionsScope"*, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %12 = icmp eq %"class.blink::CEReactionsScope"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN5blink16CEReactionsScope21EnqueueToCurrentQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CEReactionsScope"* nonnull %11, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %10) #11
  br label %16

14:                                               ; preds = %9
  %15 = tail call dereferenceable(56) %"class.blink::CustomElementReactionStack"* @_ZN5blink26CustomElementReactionStack7CurrentEv() #11
  tail call void @_ZN5blink26CustomElementReactionStack20EnqueueToBackupQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CustomElementReactionStack"* %15, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %10) #11
  br label %16

16:                                               ; preds = %14, %13, %2
  ret void
}

declare %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory18CreateFormDisabledERNS_23CustomElementDefinitionEb(%"class.blink::CustomElementDefinition"* dereferenceable(96), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement31EnqueueFormStateRestoreCallbackERNS_7ElementEPKNS_32V8UnionFileOrFormDataOrUSVStringERKN3WTF6StringE(%"class.blink::Element"* dereferenceable(104), %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %0) #11
  %5 = bitcast %"class.blink::CustomElementDefinition"* %4 to i1 (%"class.blink::CustomElementDefinition"*)***
  %6 = load i1 (%"class.blink::CustomElementDefinition"*)**, i1 (%"class.blink::CustomElementDefinition"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %6, i64 12
  %8 = load i1 (%"class.blink::CustomElementDefinition"*)*, i1 (%"class.blink::CustomElementDefinition"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::CustomElementDefinition"* %4) #11
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = tail call %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory22CreateFormStateRestoreERNS_23CustomElementDefinitionEPKNS_32V8UnionFileOrFormDataOrUSVStringERKN3WTF6StringE(%"class.blink::CustomElementDefinition"* dereferenceable(96) %4, %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, %"class.WTF::String"* dereferenceable(8) %2) #11
  %12 = load %"class.blink::CEReactionsScope"*, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %13 = icmp eq %"class.blink::CEReactionsScope"* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZN5blink16CEReactionsScope21EnqueueToCurrentQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CEReactionsScope"* nonnull %12, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %11) #11
  br label %17

15:                                               ; preds = %10
  %16 = tail call dereferenceable(56) %"class.blink::CustomElementReactionStack"* @_ZN5blink26CustomElementReactionStack7CurrentEv() #11
  tail call void @_ZN5blink26CustomElementReactionStack20EnqueueToBackupQueueERNS_7ElementERNS_21CustomElementReactionE(%"class.blink::CustomElementReactionStack"* %16, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CustomElementReaction"* %11) #11
  br label %17

17:                                               ; preds = %15, %14, %3
  ret void
}

declare %"class.blink::CustomElementReaction"* @_ZN5blink28CustomElementReactionFactory22CreateFormStateRestoreERNS_23CustomElementDefinitionEPKNS_32V8UnionFileOrFormDataOrUSVStringERKN3WTF6StringE(%"class.blink::CustomElementDefinition"* dereferenceable(96), %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CustomElement12TryToUpgradeERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CustomElementDescriptor", align 8
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 12, i32 0, i32 0
  %8 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %7, align 8
  %9 = icmp eq %"class.blink::LocalDOMWindow"* %8, null
  br i1 %9, label %103, label %10

10:                                               ; preds = %1
  %11 = tail call %"class.blink::CustomElementRegistry"* @_ZNK5blink14LocalDOMWindow14customElementsEv(%"class.blink::LocalDOMWindow"* nonnull %8) #11
  %12 = icmp eq %"class.blink::CustomElementRegistry"* %11, null
  br i1 %12, label %103, label %13

13:                                               ; preds = %10
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element7IsValueEv(%"class.blink::Element"* %0) #11
  %15 = bitcast %"class.blink::CustomElementDescriptor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3
  %22 = select i1 %18, %"class.WTF::AtomicString"* %21, %"class.WTF::AtomicString"* %14
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CustomElementDescriptor", %"class.blink::CustomElementDescriptor"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %42, %27, %13
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::CustomElementDescriptor", %"class.blink::CustomElementDescriptor"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %47, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #11
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !3

63:                                               ; preds = %54
  tail call void @llvm.trap() #11
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %44, %49, %64
  %67 = call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry13DefinitionForERKNS_23CustomElementDescriptorE(%"class.blink::CustomElementRegistry"* nonnull %11, %"class.blink::CustomElementDescriptor"* nonnull dereferenceable(16) %2) #11
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #11
  br label %83

83:                                               ; preds = %82, %79, %66
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #11
  br label %99

99:                                               ; preds = %83, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  %100 = icmp eq %"class.blink::CustomElementDefinition"* %67, null
  br i1 %100, label %102, label %101

101:                                              ; preds = %99
  call void @_ZN5blink23CustomElementDefinition22EnqueueUpgradeReactionERNS_7ElementE(%"class.blink::CustomElementDefinition"* nonnull %67, %"class.blink::Element"* dereferenceable(104) %0) #11
  br label %103

102:                                              ; preds = %99
  call void @_ZN5blink21CustomElementRegistry12AddCandidateERNS_7ElementE(%"class.blink::CustomElementRegistry"* nonnull %11, %"class.blink::Element"* dereferenceable(104) %0) #11
  br label %103

103:                                              ; preds = %1, %101, %102, %10
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element7IsValueEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry13DefinitionForERKNS_23CustomElementDescriptorE(%"class.blink::CustomElementRegistry"*, %"class.blink::CustomElementDescriptor"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink23CustomElementDefinition22EnqueueUpgradeReactionERNS_7ElementE(%"class.blink::CustomElementDefinition"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN5blink21CustomElementRegistry12AddCandidateERNS_7ElementE(%"class.blink::CustomElementRegistry"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

declare %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink9Character32IsPotentialCustomElementNameCharEi(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1601"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1601", %"class.WTF::Vector.1601"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1601", %"class.WTF::Vector.1601"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %8 = icmp ugt %"class.WTF::AtomicString"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::AtomicString"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1601", %"class.WTF::Vector.1601"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::AtomicString"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1601"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::AtomicString"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::AtomicString"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.1601"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.1601"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %56 = ptrtoint %"class.WTF::AtomicString"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1601", %"class.WTF::Vector.1601"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::AtomicString"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1601"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::AtomicString"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::AtomicString"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.1601"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.1601"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::AtomicString"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::AtomicString"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::AtomicString"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::AtomicString"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %101, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %100, i64 %103, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #11
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #11
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.676"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #11
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.676"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #11
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.676"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.676"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.676"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #11
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #11
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.676"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.676"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #11
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.676"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.676"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.676", %"class.WTF::HashTable.676"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.676"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #11
  ret %"class.WTF::AtomicString"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink8Document16CreateRawElementERKNS_13QualifiedNameENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) local_unnamed_addr #2

declare void @_ZN5blink7Element10SetIsValueERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLUnknownElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18HTMLUnknownElementEE4CallIJRKNS_13QualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #11
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLUnknownElement"*
  tail call void @_ZN5blink18HTMLUnknownElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLUnknownElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %0, %"class.blink::Document"* dereferenceable(2848) %1) #11
  %53 = getelementptr inbounds i8, i8* %51, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLUnknownElement"* %52
}

declare void @_ZN5blink18HTMLUnknownElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLUnknownElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
