; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkUniformHandler.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkUniformHandler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkUniformHandler = type <{ %class.GrGLSLUniformHandler, %class.GrTBlockList.271, %class.GrTBlockList.271, %class.SkTArray.273, %"struct.GrGLSLUniformHandler::UniformInfo", %class.GrSwizzle, i8, i8, [2 x i32], [4 x i8] }>
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::vector.254", i32, %class.SkSTArray.268 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.10, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.10 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.11, i32, [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [132 x i8] }
%class.SkTArray.13 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.14, i32, [4 x i8] }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.223, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.17, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.17 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.18, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.217" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.214 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.19, [4 x i8] }>
%union.anon.19 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.22, %"class.std::__1::unique_ptr.24", i32, %class.GrDirectContext*, %class.SkSTArray.211, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.22 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.23, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.23 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.65", %"class.std::__1::shared_ptr.65", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.67", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.73" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.35", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.37" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.64"* }
%"class.std::__1::vector.64" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.65" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.65", %"class.std::__1::vector.274", i8, %"class.std::__1::vector.282", %"class.std::__1::forward_list", %class.SkTHashMap.295, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.std::__1::unique_ptr.276"*, %"class.std::__1::unique_ptr.276"*, %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.std::__1::unique_ptr.276"* }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.std::__1::unique_ptr.284"*, %"class.std::__1::unique_ptr.284"*, %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::unique_ptr.284"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.295 = type { %class.SkTHashTable.296 }
%class.SkTHashTable.296 = type { i32, i32, %class.SkAutoTArray.297 }
%class.SkAutoTArray.297 = type { %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.567" }
%"struct.std::__1::pair.567" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.65", %"class.std::__1::shared_ptr.66" }
%"class.std::__1::shared_ptr.66" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.61", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i64 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { i64*, i64*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %class.sk_sp.146, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.186", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.84", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.83 }
%class.sk_sp.83 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.87, %class.SkTHashMap, %class.SkTHashMap.95, %class.SkTArray.104, %class.SkTArray, i32, i8, [3 x i8] }>
%class.SkTArray.87 = type { %"class.std::__1::unique_ptr.88"*, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.550" }
%"struct.std::__1::pair.550" = type { i32, %class.SkTArray.551* }
%class.SkTArray.551 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.104 = type { %"class.std::__1::unique_ptr.105"*, i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.551, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.118 }
%class.SkFibBlockSizes.118 = type { i32 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.146 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.158, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.174, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.150 }
%class.SkTHashTable.150 = type { i32, i32, %class.SkAutoTArray.151 }
%class.SkAutoTArray.151 = type { %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.158 = type { %class.SkTHashTable.159 }
%class.SkTHashTable.159 = type { i32, i32, %class.SkAutoTArray.160 }
%class.SkAutoTArray.160 = type { %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.167, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.167 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.168" }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.173, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.173 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.174 = type { %class.SkTHashTable.175 }
%class.SkTHashTable.175 = type { i32, i32, %class.SkAutoTArray.176 }
%class.SkAutoTArray.176 = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.22, %class.sk_sp.189, %class.sk_sp.189 }
%class.sk_sp.189 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.211 = type { %class.SkAlignedSTStorage.212, %class.SkTArray.213 }
%class.SkAlignedSTStorage.212 = type { [64 x i8] }
%class.SkTArray.213 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.214 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.215, void (i8*)*, i8* }
%class.SkNVRefCnt.215 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.18, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__cxx_atomic_impl.220" }
%"struct.std::__1::__cxx_atomic_impl.220" = type { %"struct.std::__1::__cxx_atomic_base_impl.221" }
%"struct.std::__1::__cxx_atomic_base_impl.221" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.222 }
%union.anon.222 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.223 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.224, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.224 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.225"*, [24 x i8] }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.228, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.228 = type { %class.SkAlignedSTStorage.229, %class.SkTArray.230 }
%class.SkAlignedSTStorage.229 = type { [8 x i8] }
%class.SkTArray.230 = type { %"class.std::__1::unique_ptr.231"*, i64 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.240, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.240 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.244 }
%class.SkTArray.244 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.259 }
%class.SkTArray.259 = type { %"class.std::__1::unique_ptr.256"*, i64 }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::unique_ptr.256"* }
%class.SkSTArray.268 = type { %class.SkAlignedSTStorage.269, %class.SkTArray.270 }
%class.SkAlignedSTStorage.269 = type { [160 x i8] }
%class.SkTArray.270 = type { %class.GrShaderVar*, i64 }
%class.GrTBlockList.271 = type { %class.GrSBlockAllocator.272 }
%class.GrSBlockAllocator.272 = type { [128 x i8] }
%class.SkTArray.273 = type { %class.GrSwizzle*, i64 }
%"struct.GrGLSLUniformHandler::UniformInfo" = type { %class.GrShaderVar, i32, %class.GrFragmentProcessor*, %class.SkString }
%class.GrSwizzle = type { i16 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.304, %class.sk_sp.448, %class.sk_sp.449, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.524, %class.SkSTArray.524, %class.SkTArray.527, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.534" }
%class.sk_sp.304 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337", %"class.GrVkInterface::VkPtr.338", %"class.GrVkInterface::VkPtr.339", %"class.GrVkInterface::VkPtr.340", %"class.GrVkInterface::VkPtr.341", %"class.GrVkInterface::VkPtr.342", %"class.GrVkInterface::VkPtr.343", %"class.GrVkInterface::VkPtr.344", %"class.GrVkInterface::VkPtr.345", %"class.GrVkInterface::VkPtr.345", %"class.GrVkInterface::VkPtr.345", %"class.GrVkInterface::VkPtr.346", %"class.GrVkInterface::VkPtr.347", %"class.GrVkInterface::VkPtr.348", %"class.GrVkInterface::VkPtr.349", %"class.GrVkInterface::VkPtr.350", %"class.GrVkInterface::VkPtr.351", %"class.GrVkInterface::VkPtr.352", %"class.GrVkInterface::VkPtr.353", %"class.GrVkInterface::VkPtr.354", %"class.GrVkInterface::VkPtr.355", %"class.GrVkInterface::VkPtr.356", %"class.GrVkInterface::VkPtr.357", %"class.GrVkInterface::VkPtr.358", %"class.GrVkInterface::VkPtr.359", %"class.GrVkInterface::VkPtr.360", %"class.GrVkInterface::VkPtr.361", %"class.GrVkInterface::VkPtr.362", %"class.GrVkInterface::VkPtr.363", %"class.GrVkInterface::VkPtr.364", %"class.GrVkInterface::VkPtr.365", %"class.GrVkInterface::VkPtr.366", %"class.GrVkInterface::VkPtr.367", %"class.GrVkInterface::VkPtr.368", %"class.GrVkInterface::VkPtr.369", %"class.GrVkInterface::VkPtr.370", %"class.GrVkInterface::VkPtr.371", %"class.GrVkInterface::VkPtr.372", %"class.GrVkInterface::VkPtr.373", %"class.GrVkInterface::VkPtr.374", %"class.GrVkInterface::VkPtr.375", %"class.GrVkInterface::VkPtr.376", %"class.GrVkInterface::VkPtr.377", %"class.GrVkInterface::VkPtr.378", %"class.GrVkInterface::VkPtr.379", %"class.GrVkInterface::VkPtr.380", %"class.GrVkInterface::VkPtr.381", %"class.GrVkInterface::VkPtr.382", %"class.GrVkInterface::VkPtr.383", %"class.GrVkInterface::VkPtr.384", %"class.GrVkInterface::VkPtr.385", %"class.GrVkInterface::VkPtr.386", %"class.GrVkInterface::VkPtr.387", %"class.GrVkInterface::VkPtr.388", %"class.GrVkInterface::VkPtr.389", %"class.GrVkInterface::VkPtr.390", %"class.GrVkInterface::VkPtr.391", %"class.GrVkInterface::VkPtr.392", %"class.GrVkInterface::VkPtr.393", %"class.GrVkInterface::VkPtr.394", %"class.GrVkInterface::VkPtr.395", %"class.GrVkInterface::VkPtr.396", %"class.GrVkInterface::VkPtr.397", %"class.GrVkInterface::VkPtr.398", %"class.GrVkInterface::VkPtr.399", %"class.GrVkInterface::VkPtr.399", %"class.GrVkInterface::VkPtr.399", %"class.GrVkInterface::VkPtr.400", %"class.GrVkInterface::VkPtr.401", %"class.GrVkInterface::VkPtr.402", %"class.GrVkInterface::VkPtr.403", %"class.GrVkInterface::VkPtr.404", %"class.GrVkInterface::VkPtr.405", %"class.GrVkInterface::VkPtr.405", %"class.GrVkInterface::VkPtr.406", %"class.GrVkInterface::VkPtr.407", %"class.GrVkInterface::VkPtr.408", %"class.GrVkInterface::VkPtr.409", %"class.GrVkInterface::VkPtr.410", %"class.GrVkInterface::VkPtr.411", %"class.GrVkInterface::VkPtr.412", %"class.GrVkInterface::VkPtr.413", %"class.GrVkInterface::VkPtr.414", %"class.GrVkInterface::VkPtr.415", %"class.GrVkInterface::VkPtr.416", %"class.GrVkInterface::VkPtr.417", %"class.GrVkInterface::VkPtr.418", %"class.GrVkInterface::VkPtr.419", %"class.GrVkInterface::VkPtr.419", %"class.GrVkInterface::VkPtr.420", %"class.GrVkInterface::VkPtr.421", %"class.GrVkInterface::VkPtr.422", %"class.GrVkInterface::VkPtr.423", %"class.GrVkInterface::VkPtr.422", %"class.GrVkInterface::VkPtr.424", %"class.GrVkInterface::VkPtr.425", %"class.GrVkInterface::VkPtr.426", %"class.GrVkInterface::VkPtr.427", %"class.GrVkInterface::VkPtr.428", %"class.GrVkInterface::VkPtr.429", %"class.GrVkInterface::VkPtr.430", %"class.GrVkInterface::VkPtr.431", %"class.GrVkInterface::VkPtr.432", %"class.GrVkInterface::VkPtr.433", %"class.GrVkInterface::VkPtr.434", %"class.GrVkInterface::VkPtr.435", %"class.GrVkInterface::VkPtr.436", %"class.GrVkInterface::VkPtr.437", %"class.GrVkInterface::VkPtr.438", %"class.GrVkInterface::VkPtr.439", %"class.GrVkInterface::VkPtr.440", %"class.GrVkInterface::VkPtr.441", %"class.GrVkInterface::VkPtr.442", %"class.GrVkInterface::VkPtr.443", %"class.GrVkInterface::VkPtr.444", %"class.GrVkInterface::VkPtr.445", %"class.GrVkInterface::VkPtr.446", %"class.GrVkInterface::VkPtr.447" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.306" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.309" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.313" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.315" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.316" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.317" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.318" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.320" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.321" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.322" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.323" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.324" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.325" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.327" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.329" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.330" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.331" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.335" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.336" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.338" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.339" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.340" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.341" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.342" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.343" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.344" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.345" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.346" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.347" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.348" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.349" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.350" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.351" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.352" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.353" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.354" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.355" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.356" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.357" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.358" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.359" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.360" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.361" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.362" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.363" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.364" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.365" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.366" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.367" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.368" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.369" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.GrVkInterface::VkPtr.370" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.371" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.372" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.373" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.374" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.375" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.376" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.377" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.378" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.379" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.380" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.381" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.382" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.383" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.384" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.385" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.386" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.387" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.388" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.389" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.390" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.391" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.392" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.393" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.394" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.395" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.396" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.397" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.398" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.399" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.400" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.401" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.402" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.403" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.404" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.405" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.406" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.407" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.408" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.409" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.410" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.411" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.412" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.413" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.414" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.415" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.416" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.417" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.418" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.419" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.420" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.421" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.423" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.422" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.424" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.425" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.426" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.427" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.428" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.429" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.430" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.431" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.432" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.433" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.434" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.435" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.436" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.437" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.438" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.439" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.440" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.441" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.442" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.443" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.444" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.445" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.446" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"class.GrVkInterface::VkPtr.447" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.448 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.449 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.457, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.23, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.450, %"class.std::__1::unique_ptr.451", i32, [4 x i8] }>
%class.SkTDArray.450 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.SkSTArray.457 = type { %class.SkAlignedSTStorage.458, %class.SkTArray.459 }
%class.SkAlignedSTStorage.458 = type { [48 x i8] }
%class.SkTArray.459 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.460, %class.SkSTArray.462, %class.SkTArray.468, %class.SkSTArray.469, %class.SkMutex, %class.SkSTArray.469, %class.SkTDynamicHash.472, %class.SkTDynamicHash.481, %class.sk_sp.490, %class.SkSTArray.499, %class.GrResourceHandle.506, %class.GrResourceHandle.506 }
%class.SkTArray.460 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.461, %class.GrVkRenderPass* }
%class.sk_sp.461 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type opaque
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.462 = type { %class.SkAlignedSTStorage.463, %class.SkTArray.464 }
%class.SkAlignedSTStorage.463 = type { [224 x i8] }
%class.SkTArray.464 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.465, i32, [4 x i8] }>
%class.SkSTArray.465 = type { %class.SkAlignedSTStorage.466, %class.SkTArray.467 }
%class.SkAlignedSTStorage.466 = type { [32 x i8] }
%class.SkTArray.467 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.468 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.469 = type { %class.SkAlignedSTStorage.470, %class.SkTArray.471 }
%class.SkAlignedSTStorage.470 = type { [32 x i8] }
%class.SkTArray.471 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.472 = type { %class.SkTHashTable.473 }
%class.SkTHashTable.473 = type { i32, i32, %class.SkAutoTArray.474 }
%class.SkAutoTArray.474 = type { %"class.std::__1::unique_ptr.475" }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.481 = type { %class.SkTHashTable.482 }
%class.SkTHashTable.482 = type { i32, i32, %class.SkAutoTArray.483 }
%class.SkAutoTArray.483 = type { %"class.std::__1::unique_ptr.484" }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.490 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.491, %class.SkTInternalLList }
%class.SkTHashTable.491 = type { i32, i32, %class.SkAutoTArray.492 }
%class.SkAutoTArray.492 = type { %"class.std::__1::unique_ptr.493" }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.499 = type { %class.SkAlignedSTStorage.500, %class.SkTArray.501 }
%class.SkAlignedSTStorage.500 = type { [32 x i8] }
%class.SkTArray.501 = type { %"class.std::__1::unique_ptr.502"*, i64 }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.505, %class.SkSTArray.507, %class.SkSTArray.510 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.505 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle.506, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.SkSTArray.507 = type { %class.SkAlignedSTStorage.508, %class.SkTArray.509 }
%class.SkAlignedSTStorage.508 = type { [16 x i8] }
%class.SkTArray.509 = type { i32*, i64 }
%class.SkSTArray.510 = type { %class.SkAlignedSTStorage.511, %class.SkTArray.512 }
%class.SkAlignedSTStorage.511 = type { [32 x i8] }
%class.SkTArray.512 = type { %class.GrVkSampler**, i64 }
%class.GrResourceHandle.506 = type { i32 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.516", %class.GrGpu* }
%"class.std::__1::vector.516" = type { %"class.std::__1::__vector_base.517" }
%"class.std::__1::__vector_base.517" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.519" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.518, i8*, i64 }
%class.sk_sp.518 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type opaque
%class.SkSTArray.524 = type { %class.SkAlignedSTStorage.525, %class.SkTArray.526 }
%class.SkAlignedSTStorage.525 = type { [8 x i8] }
%class.SkTArray.526 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.527 = type { %"class.std::__1::unique_ptr.528"*, i64 }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%struct.VkSampler_T = type opaque
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.GrVkUniformHandler::VkUniformInfo" = type { %"struct.GrGLSLUniformHandler::UniformInfo", [2 x i32], %class.GrVkSampler* }
%class.GrVkPipelineStateBuilder = type { %class.GrGLSLProgramBuilder, %class.GrVkGpu*, [8 x i8], %class.GrVkVaryingHandler, %class.GrVkUniformHandler }
%class.GrVkVaryingHandler = type { %class.GrGLSLVaryingHandler }
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.541, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.541 = type { %class.GrSBlockAllocator.542 }
%class.GrSBlockAllocator.542 = type { [80 x i8] }

$_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE9push_backEOS1_ = comdat any

$_ZNK18GrVkUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE = comdat any

$_ZNK18GrVkUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE = comdat any

$_ZNK18GrVkUniformHandler11numUniformsEv = comdat any

$_ZN18GrVkUniformHandler7uniformEi = comdat any

$_ZNK18GrVkUniformHandler7uniformEi = comdat any

$_ZNK18GrVkUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE = comdat any

$_ZNK18GrVkUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE = comdat any

$_ZNK18GrVkUniformHandler20inputSamplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE = comdat any

$_ZNK18GrVkUniformHandler19inputSamplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE = comdat any

$_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE5resetEv = comdat any

$_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

@_ZTV18GrVkUniformHandler = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrVkUniformHandler*)* @_ZN18GrVkUniformHandlerD2Ev to i8*), i8* bitcast (void (%class.GrVkUniformHandler*)* @_ZN18GrVkUniformHandlerD0Ev to i8*), i8* bitcast (%class.GrShaderVar* (%class.GrVkUniformHandler*, i32)* @_ZNK18GrVkUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE to i8*), i8* bitcast (i8* (%class.GrVkUniformHandler*, i32)* @_ZNK18GrVkUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE to i8*), i8* bitcast (i32 (%class.GrVkUniformHandler*)* @_ZNK18GrVkUniformHandler11numUniformsEv to i8*), i8* bitcast (%"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrVkUniformHandler*, i32)* @_ZN18GrVkUniformHandler7uniformEi to i8*), i8* bitcast (%"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrVkUniformHandler*, i32)* @_ZNK18GrVkUniformHandler7uniformEi to i8*), i8* bitcast (i8* (%class.GrVkUniformHandler*, i32)* @_ZNK18GrVkUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (void (%class.GrSwizzle*, %class.GrVkUniformHandler*, i32)* @_ZNK18GrVkUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (i8* (%class.GrVkUniformHandler*, i32)* @_ZNK18GrVkUniformHandler20inputSamplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (void (%class.GrSwizzle*, %class.GrVkUniformHandler*, i32)* @_ZNK18GrVkUniformHandler19inputSamplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (i32 (%class.GrVkUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)* @_ZN18GrVkUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps to i8*), i8* bitcast (i32 (%class.GrVkUniformHandler*, %class.GrSwizzle*, i8*)* @_ZN18GrVkUniformHandler15addInputSamplerERK9GrSwizzlePKc to i8*), i8* bitcast (i32 (%class.GrVkUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)* @_ZN18GrVkUniformHandler23internalAddUniformArrayEPK19GrFragmentProcessorj8GrSLTypePKcbiPS5_ to i8*), i8* bitcast (void (%class.GrVkUniformHandler*, i32, %class.SkString*)* @_ZNK18GrVkUniformHandler18appendUniformDeclsE13GrShaderFlagsP8SkString to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"sk_\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"set=%d, binding=%d\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"input_attachment_index=%d, set=%d, binding=%d\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"layout(offset=%d) \00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"layout (push_constant) \00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"layout (set=%d, binding=%d) \00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"uniform uniformBuffer\0A{\0A\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"%s\0A};\0A\00", align 1
@.str.9 = private unnamed_addr constant [57 x i8] c"../../third_party/skia/src/gpu/vk/GrVkUniformHandler.cpp\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"Unexpected type\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/include/private/GrTypesPriv.h\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"Unexpected texture type\00", align 1
@switch.table._ZL18get_aligned_offsetPj8GrSLTypeii = private unnamed_addr constant [38 x i32] [i32 0, i32 1, i32 3, i32 3, i32 0, i32 1, i32 3, i32 3, i32 1, i32 3, i32 7, i32 7, i32 1, i32 3, i32 7, i32 7, i32 3, i32 7, i32 15, i32 15, i32 7, i32 15, i32 15, i32 3, i32 7, i32 15, i32 15, i32 7, i32 15, i32 15, i32 3, i32 7, i32 15, i32 15, i32 3, i32 7, i32 15, i32 15], align 4
@switch.table._ZN18GrVkUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps = private unnamed_addr constant [3 x i32] [i32 43, i32 45, i32 44], align 4

@_ZN18GrVkUniformHandlerD1Ev = hidden unnamed_addr alias void (%class.GrVkUniformHandler*), void (%class.GrVkUniformHandler*)* @_ZN18GrVkUniformHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrVkUniformHandlerD2Ev(%class.GrVkUniformHandler*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV18GrVkUniformHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2
  %4 = bitcast %class.GrTBlockList.271* %3 to %class.GrBlockAllocator*
  %5 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to %"class.GrBlockAllocator::Block"*
  %7 = bitcast i8* %5 to %"class.GrBlockAllocator::Block"**
  %8 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %7, align 8, !noalias !2
  %9 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 40
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8, !noalias !2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %1, %16
  %14 = phi %"class.GrBlockAllocator::Block"* [ %22, %16 ], [ %8, %1 ]
  %15 = icmp eq %"class.GrBlockAllocator::Block"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.GrBlockAllocator::Block"* %14 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !2
  %19 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %14, i64 0, i32 4
  %20 = load i32, i32* %19, align 8, !noalias !2
  %21 = icmp eq i32 %20, 0
  %22 = inttoptr i64 %18 to %"class.GrBlockAllocator::Block"*
  br i1 %21, label %13, label %26

23:                                               ; preds = %1
  %24 = ptrtoint %"class.GrBlockAllocator::Block"* %8 to i64
  %25 = icmp eq i8* %5, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %16, %23
  %27 = phi i32 [ %11, %23 ], [ %20, %16 ]
  %28 = phi %"class.GrBlockAllocator::Block"* [ %6, %23 ], [ %14, %16 ]
  %29 = phi i64 [ %24, %23 ], [ %18, %16 ]
  br label %48

30:                                               ; preds = %13, %77, %97, %87, %23
  %31 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %31) #10
  %32 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %32) #10
  %33 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %33) #10
  %34 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %34) #10
  %35 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 3, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 3
  %41 = bitcast %class.SkTArray.273* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @_Z7sk_freePv(i8* %42) #10
  br label %43

43:                                               ; preds = %30, %39
  tail call void @_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE5resetEv(%class.GrTBlockList.271* %3) #10
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %4) #10
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %6) #10
  %44 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1
  tail call void @_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE5resetEv(%class.GrTBlockList.271* %44) #10
  %45 = bitcast %class.GrTBlockList.271* %44 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %45) #10
  %46 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %47 = bitcast i8* %46 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %47) #10
  ret void

48:                                               ; preds = %26, %97
  %49 = phi i32 [ %101, %97 ], [ %27, %26 ]
  %50 = phi i32 [ %100, %97 ], [ 32, %26 ]
  %51 = phi %"class.GrBlockAllocator::Block"* [ %99, %97 ], [ %28, %26 ]
  %52 = phi i64 [ %98, %97 ], [ %29, %26 ]
  %53 = sext i32 %50 to i64
  %54 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %51, i64 2, i32 1
  %55 = bitcast %"class.GrBlockAllocator::Block"** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 %53
  %57 = bitcast i8* %56 to %class.GrVkSampler**
  %58 = load %class.GrVkSampler*, %class.GrVkSampler** %57, align 8
  %59 = icmp eq %class.GrVkSampler* %58, null
  br i1 %59, label %74, label %60

60:                                               ; preds = %48
  %61 = bitcast %class.GrVkSampler* %58 to %class.GrManagedResource*
  %62 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = bitcast %class.GrVkSampler* %58 to void (%class.GrManagedResource*)***
  %67 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %67, i64 4
  %69 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %68, align 8
  tail call void %69(%class.GrManagedResource* nonnull %61) #10
  %70 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %66, align 8
  %71 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %70, i64 1
  %72 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %71, align 8
  tail call void %72(%class.GrManagedResource* nonnull %61) #10
  br label %73

73:                                               ; preds = %60, %65
  store %class.GrVkSampler* null, %class.GrVkSampler** %57, align 8
  br label %74

74:                                               ; preds = %48, %73
  %75 = add i32 %50, 80
  %76 = icmp sgt i32 %75, %49
  br i1 %76, label %77, label %97

77:                                               ; preds = %74
  %78 = inttoptr i64 %52 to %"class.GrBlockAllocator::Block"*
  %79 = icmp eq i64 %52, 0
  br i1 %79, label %30, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %78, i64 0, i32 0
  %82 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %81, align 8
  %83 = ptrtoint %"class.GrBlockAllocator::Block"* %82 to i64
  %84 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %78, i64 0, i32 4
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %97

87:                                               ; preds = %80, %90
  %88 = phi %"class.GrBlockAllocator::Block"* [ %96, %90 ], [ %82, %80 ]
  %89 = icmp eq %"class.GrBlockAllocator::Block"* %88, null
  br i1 %89, label %30, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.GrBlockAllocator::Block"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %88, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  %96 = inttoptr i64 %92 to %"class.GrBlockAllocator::Block"*
  br i1 %95, label %87, label %97

97:                                               ; preds = %90, %80, %74
  %98 = phi i64 [ %52, %74 ], [ %83, %80 ], [ %92, %90 ]
  %99 = phi %"class.GrBlockAllocator::Block"* [ %51, %74 ], [ %78, %80 ], [ %88, %90 ]
  %100 = phi i32 [ %75, %74 ], [ 32, %80 ], [ 32, %90 ]
  %101 = phi i32 [ %49, %74 ], [ %85, %80 ], [ %94, %90 ]
  %102 = icmp eq %"class.GrBlockAllocator::Block"* %99, null
  br i1 %102, label %30, label %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrVkUniformHandlerD0Ev(%class.GrVkUniformHandler*) unnamed_addr #0 align 2 {
  tail call void @_ZN18GrVkUniformHandlerD2Ev(%class.GrVkUniformHandler* %0) #10
  %2 = bitcast %class.GrVkUniformHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN18GrVkUniformHandler23internalAddUniformArrayEPK19GrFragmentProcessorj8GrSLTypePKcbiPS5_(%class.GrVkUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1 zeroext, i32, i8**) unnamed_addr #0 align 2 {
  %9 = alloca %class.SkString, align 8
  %10 = alloca %"struct.GrVkUniformHandler::VkUniformInfo", align 8
  %11 = alloca %class.SkString, align 8
  %12 = load i8, i8* %4, align 1
  %13 = icmp eq i8 %12, 117
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14, %8
  br label %18

18:                                               ; preds = %14, %17
  %19 = phi i8 [ 0, %17 ], [ 117, %14 ]
  %20 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %21, align 8
  %22 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  %23 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %22, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %9, %class.GrGLSLProgramBuilder* %23, i8 signext %19, i8* %4, i1 zeroext %5) #10
  %24 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 8, i64 0
  %25 = call fastcc i32 @_ZL18get_aligned_offsetPj8GrSLTypeii(i32* %24, i32 %3, i32 %6, i32 0)
  %26 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 8, i64 1
  %27 = call fastcc i32 @_ZL18get_aligned_offsetPj8GrSLTypeii(i32* %26, i32 %3, i32 %6, i32 1)
  %28 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1
  %29 = bitcast %"struct.GrVkUniformHandler::VkUniformInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #10
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %11, %class.SkString* nonnull dereferenceable(8) %9) #10
  %30 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 %3, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 2
  store i32 %6, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %33, %class.SkString* nonnull dereferenceable(8) %11) #10
  %34 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %34) #10
  %35 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %35) #10
  %36 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 1
  store i32 %2, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* %1, %class.GrFragmentProcessor** %37, align 8
  %38 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %38, i8* %4) #10
  %39 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 1, i64 0
  store i32 %25, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 1, i64 1
  store i32 %27, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 2
  store %class.GrVkSampler* null, %class.GrVkSampler** %41, align 8
  %42 = call dereferenceable(80) %"struct.GrVkUniformHandler::VkUniformInfo"* @_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.271* %28, %"struct.GrVkUniformHandler::VkUniformInfo"* nonnull dereferenceable(80) %10)
  call void @_ZN8SkStringD1Ev(%class.SkString* %38) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %35) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %34) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %33) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #10
  %43 = icmp eq i8** %7, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %18
  %45 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %42, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %46 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %45, align 8
  %47 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %46, i64 0, i32 2
  store i8* %47, i8** %7, align 8
  br label %48

48:                                               ; preds = %18, %44
  %49 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 44
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, -1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  ret i32 %52
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

declare void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* sret, %class.GrGLSLProgramBuilder*, i8 signext, i8*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL18get_aligned_offsetPj8GrSLTypeii(i32* nocapture, i32, i32, i32) unnamed_addr #0 {
  %5 = add i32 %1, -5
  %6 = icmp ult i32 %5, 38
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.9, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

8:                                                ; preds = %4
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds [38 x i32], [38 x i32]* @switch.table._ZL18get_aligned_offsetPj8GrSLTypeii, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %3, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = icmp ne i32 %2, 0
  %15 = icmp eq i32 %1, 25
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 15, i32 %11
  br label %18

18:                                               ; preds = %13, %8
  %19 = phi i32 [ %11, %8 ], [ %17, %13 ]
  %20 = load i32, i32* %0, align 4
  %21 = and i32 %20, %19
  %22 = icmp eq i32 %21, 0
  %23 = add nuw nsw i32 %19, 1
  %24 = sub nsw i32 %23, %21
  %25 = select i1 %22, i32 0, i32 %24
  %26 = add i32 %25, %20
  %27 = icmp eq i32 %2, 0
  %28 = tail call fastcc i32 @_ZL19grsltype_to_vk_size8GrSLTypei(i32 %1, i32 %3)
  br i1 %27, label %33, label %29

29:                                               ; preds = %18
  %30 = icmp ugt i32 %28, 16
  %31 = select i1 %30, i32 %28, i32 16
  %32 = mul i32 %31, %2
  br label %33

33:                                               ; preds = %18, %29
  %34 = phi i32 [ %32, %29 ], [ %28, %18 ]
  %35 = add i32 %34, %26
  store i32 %35, i32* %0, align 4
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(80) %"struct.GrVkUniformHandler::VkUniformInfo"* @_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.271*, %"struct.GrVkUniformHandler::VkUniformInfo"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.GrTBlockList.271* %0 to %"class.GrBlockAllocator::Block"**
  %4 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !5
  %5 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4, !noalias !5
  %7 = add i32 %6, 7
  %8 = and i32 %7, -8
  %9 = add nsw i32 %8, 80
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 2
  %11 = load i32, i32* %10, align 8, !noalias !5
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %2
  %14 = bitcast %class.GrTBlockList.271* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %14, i32 112, i32 536870944) #10, !noalias !5
  %15 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !5
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 4, !noalias !5
  %18 = add i32 %17, 7
  %19 = and i32 %18, -8
  %20 = add nsw i32 %19, 80
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi %"class.GrBlockAllocator::Block"* [ %15, %13 ], [ %4, %2 ]
  %23 = phi i32 [ %19, %13 ], [ %8, %2 ]
  %24 = phi i32 [ %20, %13 ], [ %9, %2 ]
  %25 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %22, i64 0, i32 3
  store i32 %24, i32* %25, align 4, !noalias !5
  %26 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !5
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %26, i64 0, i32 4
  store i32 %23, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrTBlockList.271, %class.GrTBlockList.271* %0, i64 0, i32 0, i32 0, i64 44
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = bitcast %"class.GrBlockAllocator::Block"* %26 to i8*
  %33 = sext i32 %23 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrVkUniformHandler::VkUniformInfo"*
  %36 = bitcast %"struct.GrVkUniformHandler::VkUniformInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %36, i64 12, i1 false) #10
  %37 = getelementptr inbounds i8, i8* %34, i64 16
  %38 = bitcast i8* %37 to %class.SkString*
  %39 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %1, i64 0, i32 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %38, %class.SkString* dereferenceable(8) %39) #10
  %40 = getelementptr inbounds i8, i8* %34, i64 24
  %41 = bitcast i8* %40 to %class.SkString*
  %42 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %1, i64 0, i32 0, i32 0, i32 4
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %41, %class.SkString* dereferenceable(8) %42) #10
  %43 = getelementptr inbounds i8, i8* %34, i64 32
  %44 = bitcast i8* %43 to %class.SkString*
  %45 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %1, i64 0, i32 0, i32 0, i32 5
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %44, %class.SkString* dereferenceable(8) %45) #10
  %46 = getelementptr inbounds i8, i8* %34, i64 40
  %47 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %1, i64 0, i32 0, i32 1
  %48 = bitcast i32* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 16, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %34, i64 56
  %50 = bitcast i8* %49 to %class.SkString*
  %51 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %1, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %50, %class.SkString* dereferenceable(8) %51) #10
  %52 = getelementptr inbounds i8, i8* %34, i64 64
  %53 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %1, i64 0, i32 1
  %54 = bitcast [2 x i32]* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %54, i64 16, i1 false) #10
  ret %"struct.GrVkUniformHandler::VkUniformInfo"* %35
}

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #4

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN18GrVkUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps(%class.GrVkUniformHandler*, %class.GrBackendFormat* dereferenceable(72), i64, i32, %class.GrSwizzle* nocapture readonly dereferenceable(2), i8*, %class.GrShaderCaps* nocapture readnone) unnamed_addr #0 align 2 {
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = alloca %"struct.GrVkUniformHandler::VkUniformInfo", align 8
  %11 = alloca %class.SkString, align 8
  %12 = alloca %class.SkString, align 8
  %13 = alloca %class.SkString, align 8
  %14 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %15, align 8
  %16 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  %17 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %16, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %8, %class.GrGLSLProgramBuilder* %17, i8 signext 117, i8* %5, i1 zeroext true) #10
  %18 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %19, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %9) #10
  %20 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 44
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 %22) #10
  %23 = bitcast %"struct.GrVkUniformHandler::VkUniformInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #10
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %11, %class.SkString* nonnull dereferenceable(8) %8) #10
  %24 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, -1
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %29, label %28

28:                                               ; preds = %7
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11, i64 0, i64 0), i32 573, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #13
  unreachable

29:                                               ; preds = %7
  %30 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN18GrVkUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %12, %class.SkString* nonnull dereferenceable(8) %9) #10
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %13) #10
  %34 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %37, %class.SkString* nonnull dereferenceable(8) %11) #10
  %38 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* %38, %class.SkString* nonnull dereferenceable(8) %12) #10
  %39 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 0, i32 5
  call void @_ZN8SkStringC1EOS_(%class.SkString* %39, %class.SkString* nonnull dereferenceable(8) %13) #10
  %40 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 1
  store i32 16, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %41, align 8
  %42 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %42, i8* %5) #10
  %43 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %10, i64 0, i32 1, i64 0
  %44 = bitcast i32* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false)
  %45 = call dereferenceable(80) %"struct.GrVkUniformHandler::VkUniformInfo"* @_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.271* %30, %"struct.GrVkUniformHandler::VkUniformInfo"* nonnull dereferenceable(80) %10)
  call void @_ZN8SkStringD1Ev(%class.SkString* %42) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %39) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %38) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %37) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #10
  %46 = call %struct.GrVkYcbcrConversionInfo* @_ZNK15GrBackendFormat24getVkYcbcrConversionInfoEv(%class.GrBackendFormat* %1) #10
  %47 = icmp eq %struct.GrVkYcbcrConversionInfo* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %29
  %49 = getelementptr inbounds %struct.GrVkYcbcrConversionInfo, %struct.GrVkYcbcrConversionInfo* %46, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %48
  %53 = bitcast %class.GrGLSLProgramBuilder** %16 to %class.GrVkPipelineStateBuilder**
  %54 = load %class.GrVkPipelineStateBuilder*, %class.GrVkPipelineStateBuilder** %53, align 8
  %55 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %54, i64 0, i32 1
  %56 = load %class.GrVkGpu*, %class.GrVkGpu** %55, align 16
  %57 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %56, i64 0, i32 9
  %58 = call %class.GrVkSampler* @_ZN20GrVkResourceProvider29findOrCreateCompatibleSamplerE14GrSamplerStateRK23GrVkYcbcrConversionInfo(%class.GrVkResourceProvider* %57, i64 %2, i32 %3, %struct.GrVkYcbcrConversionInfo* nonnull dereferenceable(48) %46) #10
  %59 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %45, i64 0, i32 2
  store %class.GrVkSampler* %58, %class.GrVkSampler** %59, align 8
  %60 = icmp eq %class.GrVkSampler* %58, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %48, %52, %29
  %62 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 3
  call void @_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.273* %62, i32 1, i32 1) #10
  %63 = getelementptr inbounds %class.SkTArray.273, %class.SkTArray.273* %62, i64 0, i32 0
  %64 = load %class.GrSwizzle*, %class.GrSwizzle** %63, align 8
  %65 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 3, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = lshr i64 %66, 1
  %68 = and i64 %67, 2147483647
  %69 = add i64 %66, 2
  %70 = and i64 %69, 4294967294
  %71 = and i64 %66, -4294967295
  %72 = or i64 %70, %71
  store i64 %72, i64* %65, align 8
  %73 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %64, i64 %68, i32 0
  %74 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %4, i64 0, i32 0
  %75 = load i16, i16* %74, align 2
  store i16 %75, i16* %73, align 2
  %76 = load i32, i32* %21, align 4
  %77 = add nsw i32 %76, -1
  br label %78

78:                                               ; preds = %52, %61
  %79 = phi i32 [ %77, %61 ], [ -1, %52 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  ret i32 %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #4

declare %struct.GrVkYcbcrConversionInfo* @_ZNK15GrBackendFormat24getVkYcbcrConversionInfoEv(%class.GrBackendFormat*) local_unnamed_addr #4

declare %class.GrVkSampler* @_ZN20GrVkResourceProvider29findOrCreateCompatibleSamplerE14GrSamplerStateRK23GrVkYcbcrConversionInfo(%class.GrVkResourceProvider*, i64, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN18GrVkUniformHandler15addInputSamplerERK9GrSwizzlePKc(%class.GrVkUniformHandler*, %class.GrSwizzle* nocapture readonly dereferenceable(2), i8*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"struct.GrGLSLUniformHandler::UniformInfo", align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %11, align 8
  %12 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  %13 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %12, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %4, %class.GrGLSLProgramBuilder* %13, i8 signext 117, i8* %2, i1 zeroext true) #10
  %14 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %15, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #10
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %5, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 2, i32 0) #10
  %16 = bitcast %"struct.GrGLSLUniformHandler::UniformInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #10
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %7, %class.SkString* nonnull dereferenceable(8) %4) #10
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %8, %class.SkString* nonnull dereferenceable(8) %5) #10
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %9) #10
  %17 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 0, i32 0
  store i32 48, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 0, i32 1
  store i32 4, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %20, %class.SkString* nonnull dereferenceable(8) %7) #10
  %21 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 0, i32 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* %21, %class.SkString* nonnull dereferenceable(8) %8) #10
  %22 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 0, i32 5
  call void @_ZN8SkStringC1EOS_(%class.SkString* %22, %class.SkString* nonnull dereferenceable(8) %9) #10
  %23 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 1
  store i32 16, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %24, align 8
  %25 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %6, i64 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %25, i8* %2) #10
  %26 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4
  %27 = bitcast %"struct.GrGLSLUniformHandler::UniformInfo"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %16, i64 12, i1 false) #10
  %28 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0, i32 3
  %29 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %28, %class.SkString* dereferenceable(8) %20) #10
  %30 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0, i32 4
  %31 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %30, %class.SkString* dereferenceable(8) %21) #10
  %32 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0, i32 5
  %33 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %32, %class.SkString* dereferenceable(8) %22) #10
  %34 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 1
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #10
  %37 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 3
  %38 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %37, %class.SkString* dereferenceable(8) %25) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %25) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %22) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %21) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %20) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #10
  %39 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %1, i64 0, i32 0
  %40 = load i16, i16* %39, align 2
  %41 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 5, i32 0
  store i16 %40, i16* %41, align 2
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18GrVkUniformHandler18appendUniformDeclsE13GrShaderFlagsP8SkString(%class.GrVkUniformHandler*, i32, %class.SkString*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to %"class.GrBlockAllocator::Block"**
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !8
  %8 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 40
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 8, !noalias !8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %3, %15
  %13 = phi %"class.GrBlockAllocator::Block"* [ %21, %15 ], [ %7, %3 ]
  %14 = icmp eq %"class.GrBlockAllocator::Block"* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %12
  %16 = bitcast %"class.GrBlockAllocator::Block"* %13 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !8
  %18 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %13, i64 0, i32 4
  %19 = load i32, i32* %18, align 8, !noalias !8
  %20 = icmp eq i32 %19, 0
  %21 = inttoptr i64 %17 to %"class.GrBlockAllocator::Block"*
  br i1 %20, label %12, label %26

22:                                               ; preds = %3
  %23 = bitcast i8* %5 to %"class.GrBlockAllocator::Block"*
  %24 = ptrtoint %"class.GrBlockAllocator::Block"* %7 to i64
  %25 = icmp eq i8* %5, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %15, %22
  %27 = phi i32 [ %10, %22 ], [ %19, %15 ]
  %28 = phi i64 [ %24, %22 ], [ %17, %15 ]
  %29 = phi %"class.GrBlockAllocator::Block"* [ %23, %22 ], [ %13, %15 ]
  %30 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  br label %36

31:                                               ; preds = %12, %61, %81, %71, %22
  %32 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0
  %33 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 48
  br i1 %35, label %87, label %101

36:                                               ; preds = %26, %81
  %37 = phi i32 [ %27, %26 ], [ %85, %81 ]
  %38 = phi i32 [ 32, %26 ], [ %84, %81 ]
  %39 = phi i64 [ %28, %26 ], [ %83, %81 ]
  %40 = phi %"class.GrBlockAllocator::Block"* [ %29, %26 ], [ %82, %81 ]
  %41 = bitcast %"class.GrBlockAllocator::Block"* %40 to i8*
  %42 = sext i32 %38 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 40
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, %1
  br i1 %47, label %48, label %58

48:                                               ; preds = %36
  %49 = bitcast i8* %43 to %class.GrShaderVar*
  %50 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %30, align 8
  %51 = bitcast %class.GrGLSLProgramBuilder* %50 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %52 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %51, align 16
  %53 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %52, i64 2
  %54 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %53, align 8
  %55 = tail call %class.GrCaps* %54(%class.GrGLSLProgramBuilder* %50) #10
  %56 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %55, i64 0, i32 2, i32 0
  %57 = load %class.GrShaderCaps*, %class.GrShaderCaps** %56, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %49, %class.GrShaderCaps* %57, %class.SkString* %2) #10
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %58

58:                                               ; preds = %48, %36
  %59 = add i32 %38, 80
  %60 = icmp sgt i32 %59, %37
  br i1 %60, label %61, label %81

61:                                               ; preds = %58
  %62 = inttoptr i64 %39 to %"class.GrBlockAllocator::Block"*
  %63 = icmp eq i64 %39, 0
  br i1 %63, label %31, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %62, i64 0, i32 0
  %66 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %65, align 8
  %67 = ptrtoint %"class.GrBlockAllocator::Block"* %66 to i64
  %68 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %62, i64 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %81

71:                                               ; preds = %64, %74
  %72 = phi %"class.GrBlockAllocator::Block"* [ %80, %74 ], [ %66, %64 ]
  %73 = icmp eq %"class.GrBlockAllocator::Block"* %72, null
  br i1 %73, label %31, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.GrBlockAllocator::Block"* %72 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %72, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  %80 = inttoptr i64 %76 to %"class.GrBlockAllocator::Block"*
  br i1 %79, label %71, label %81

81:                                               ; preds = %74, %64, %58
  %82 = phi %"class.GrBlockAllocator::Block"* [ %40, %58 ], [ %62, %64 ], [ %72, %74 ]
  %83 = phi i64 [ %39, %58 ], [ %67, %64 ], [ %76, %74 ]
  %84 = phi i32 [ %59, %58 ], [ 32, %64 ], [ 32, %74 ]
  %85 = phi i32 [ %37, %58 ], [ %69, %64 ], [ %78, %74 ]
  %86 = icmp eq %"class.GrBlockAllocator::Block"* %82, null
  br i1 %86, label %31, label %36

87:                                               ; preds = %31
  %88 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, %1
  br i1 %90, label %91, label %101

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  %93 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %92, align 8
  %94 = bitcast %class.GrGLSLProgramBuilder* %93 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %95 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %94, align 16
  %96 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %95, i64 2
  %97 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %96, align 8
  %98 = tail call %class.GrCaps* %97(%class.GrGLSLProgramBuilder* %93) #10
  %99 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %98, i64 0, i32 2, i32 0
  %100 = load %class.GrShaderCaps*, %class.GrShaderCaps** %99, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %32, %class.GrShaderCaps* %100, %class.SkString* %2) #10
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %101

101:                                              ; preds = %87, %91, %31
  %102 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 8, i64 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %122, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 6
  %107 = load i8, i8* %106, align 2, !range !11
  %108 = icmp eq i8 %107, 0
  %109 = select i1 %108, i32 0, i32 4
  %110 = add i32 %109, %103
  %111 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  %112 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %111, align 8
  %113 = bitcast %class.GrGLSLProgramBuilder* %112 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %114 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %113, align 16
  %115 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %114, i64 2
  %116 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %115, align 8
  %117 = tail call %class.GrCaps* %116(%class.GrGLSLProgramBuilder* %112) #10
  %118 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %117, i64 0, i32 16
  %119 = load i32, i32* %118, align 8
  %120 = icmp ule i32 %110, %119
  %121 = zext i1 %120 to i8
  br label %122

122:                                              ; preds = %101, %105
  %123 = phi i8 [ 0, %101 ], [ %121, %105 ]
  %124 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 7
  store i8 %123, i8* %124, align 1
  %125 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #10
  %126 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %126, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #10
  %127 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %128 = bitcast i8* %127 to %"class.GrBlockAllocator::Block"**
  %129 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %128, align 8, !noalias !12
  %130 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 8, !noalias !12
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %144

134:                                              ; preds = %122, %137
  %135 = phi %"class.GrBlockAllocator::Block"* [ %143, %137 ], [ %129, %122 ]
  %136 = icmp eq %"class.GrBlockAllocator::Block"* %135, null
  br i1 %136, label %153, label %137

137:                                              ; preds = %134
  %138 = bitcast %"class.GrBlockAllocator::Block"* %135 to i64*
  %139 = load i64, i64* %138, align 8, !noalias !12
  %140 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %135, i64 0, i32 4
  %141 = load i32, i32* %140, align 8, !noalias !12
  %142 = icmp eq i32 %141, 0
  %143 = inttoptr i64 %139 to %"class.GrBlockAllocator::Block"*
  br i1 %142, label %134, label %148

144:                                              ; preds = %122
  %145 = bitcast i8* %127 to %"class.GrBlockAllocator::Block"*
  %146 = ptrtoint %"class.GrBlockAllocator::Block"* %129 to i64
  %147 = icmp eq i8* %127, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %137, %144
  %149 = phi %"class.GrBlockAllocator::Block"* [ %145, %144 ], [ %135, %137 ]
  %150 = phi i64 [ %146, %144 ], [ %139, %137 ]
  %151 = phi i32 [ %132, %144 ], [ %141, %137 ]
  %152 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  br label %158

153:                                              ; preds = %134, %195, %215, %205, %144
  %154 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %126, align 8
  %155 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %154, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %229, label %221

158:                                              ; preds = %148, %215
  %159 = phi %"class.GrBlockAllocator::Block"* [ %149, %148 ], [ %219, %215 ]
  %160 = phi i64 [ %150, %148 ], [ %218, %215 ]
  %161 = phi i32 [ 32, %148 ], [ %217, %215 ]
  %162 = phi i32 [ %151, %148 ], [ %216, %215 ]
  %163 = bitcast %"class.GrBlockAllocator::Block"* %159 to i8*
  %164 = sext i32 %161 to i64
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  %166 = bitcast i8* %165 to %"struct.GrVkUniformHandler::VkUniformInfo"*
  %167 = getelementptr inbounds i8, i8* %165, i64 40
  %168 = bitcast i8* %167 to i32*
  %169 = load i32, i32* %168, align 8
  %170 = and i32 %169, %1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %192, label %172

172:                                              ; preds = %158
  %173 = bitcast i8* %165 to %class.GrShaderVar*
  %174 = bitcast i8* %165 to i32*
  %175 = load i32, i32* %174, align 8
  switch i32 %175, label %176 [
    i32 21, label %179
    i32 22, label %179
    i32 23, label %179
    i32 24, label %179
    i32 25, label %179
    i32 26, label %179
    i32 27, label %179
    i32 28, label %179
    i32 29, label %179
    i32 30, label %179
    i32 31, label %179
    i32 32, label %179
    i32 33, label %179
    i32 34, label %179
    i32 0, label %177
    i32 43, label %177
    i32 44, label %177
    i32 45, label %177
    i32 1, label %177
    i32 2, label %177
    i32 3, label %177
    i32 4, label %177
    i32 5, label %177
    i32 6, label %177
    i32 7, label %177
    i32 8, label %177
    i32 9, label %177
    i32 10, label %177
    i32 11, label %177
    i32 12, label %177
    i32 13, label %177
    i32 14, label %177
    i32 15, label %177
    i32 16, label %177
    i32 17, label %177
    i32 18, label %177
    i32 19, label %177
    i32 20, label %177
    i32 35, label %177
    i32 36, label %177
    i32 37, label %177
    i32 38, label %177
    i32 39, label %177
    i32 40, label %177
    i32 41, label %177
    i32 42, label %177
    i32 46, label %177
    i32 47, label %177
    i32 48, label %177
  ]

176:                                              ; preds = %172
  call void @llvm.trap() #10
  unreachable

177:                                              ; preds = %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172
  switch i32 %175, label %178 [
    i32 5, label %179
    i32 6, label %179
    i32 7, label %179
    i32 8, label %179
    i32 9, label %179
    i32 10, label %179
    i32 11, label %179
    i32 12, label %179
    i32 13, label %179
    i32 14, label %179
    i32 15, label %179
    i32 16, label %179
    i32 17, label %179
    i32 18, label %179
    i32 19, label %179
    i32 20, label %179
    i32 35, label %179
    i32 36, label %179
    i32 37, label %179
    i32 38, label %179
    i32 39, label %179
    i32 40, label %179
    i32 41, label %179
    i32 42, label %179
    i32 21, label %192
    i32 22, label %192
    i32 23, label %192
    i32 24, label %192
    i32 25, label %192
    i32 26, label %192
    i32 27, label %192
    i32 28, label %192
    i32 29, label %192
    i32 30, label %192
    i32 31, label %192
    i32 32, label %192
    i32 33, label %192
    i32 34, label %192
    i32 0, label %192
    i32 43, label %192
    i32 44, label %192
    i32 45, label %192
    i32 1, label %192
    i32 2, label %192
    i32 3, label %192
    i32 4, label %192
    i32 46, label %192
    i32 47, label %192
    i32 48, label %192
  ]

178:                                              ; preds = %177
  call void @llvm.trap() #10
  unreachable

179:                                              ; preds = %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172, %172
  %180 = load i8, i8* %124, align 1, !range !11
  %181 = zext i8 %180 to i64
  %182 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %166, i64 0, i32 1, i64 %181
  %183 = load i32, i32* %182, align 4
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i32 %183) #10
  %184 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %152, align 8
  %185 = bitcast %class.GrGLSLProgramBuilder* %184 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %186 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %185, align 16
  %187 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %186, i64 2
  %188 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %187, align 8
  %189 = call %class.GrCaps* %188(%class.GrGLSLProgramBuilder* %184) #10
  %190 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %189, i64 0, i32 2, i32 0
  %191 = load %class.GrShaderCaps*, %class.GrShaderCaps** %190, align 8
  call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %173, %class.GrShaderCaps* %191, %class.SkString* nonnull %4) #10
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %192

192:                                              ; preds = %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %177, %158, %179
  %193 = add i32 %161, 80
  %194 = icmp sgt i32 %193, %162
  br i1 %194, label %195, label %215

195:                                              ; preds = %192
  %196 = inttoptr i64 %160 to %"class.GrBlockAllocator::Block"*
  %197 = icmp eq i64 %160, 0
  br i1 %197, label %153, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %196, i64 0, i32 0
  %200 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %199, align 8
  %201 = ptrtoint %"class.GrBlockAllocator::Block"* %200 to i64
  %202 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %196, i64 0, i32 4
  %203 = load i32, i32* %202, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %215

205:                                              ; preds = %198, %208
  %206 = phi %"class.GrBlockAllocator::Block"* [ %214, %208 ], [ %200, %198 ]
  %207 = icmp eq %"class.GrBlockAllocator::Block"* %206, null
  br i1 %207, label %153, label %208

208:                                              ; preds = %205
  %209 = bitcast %"class.GrBlockAllocator::Block"* %206 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %206, i64 0, i32 4
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %212, 0
  %214 = inttoptr i64 %210 to %"class.GrBlockAllocator::Block"*
  br i1 %213, label %205, label %215

215:                                              ; preds = %208, %198, %192
  %216 = phi i32 [ %162, %192 ], [ %203, %198 ], [ %212, %208 ]
  %217 = phi i32 [ %193, %192 ], [ 32, %198 ], [ 32, %208 ]
  %218 = phi i64 [ %160, %192 ], [ %201, %198 ], [ %210, %208 ]
  %219 = phi %"class.GrBlockAllocator::Block"* [ %159, %192 ], [ %196, %198 ], [ %206, %208 ]
  %220 = icmp eq %"class.GrBlockAllocator::Block"* %219, null
  br i1 %220, label %153, label %158

221:                                              ; preds = %153
  %222 = load i8, i8* %124, align 1, !range !11
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %226

225:                                              ; preds = %221
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 0, i32 0) #10
  br label %226

226:                                              ; preds = %225, %224
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #10
  %227 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %126, align 8
  %228 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %227, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %228) #10
  br label %229

229:                                              ; preds = %226, %153
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #10
  ret void
}

declare void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar*, %class.GrShaderCaps*, %class.SkString*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18GrVkUniformHandler27determineIfUsePushConstantsEv(%class.GrVkUniformHandler* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 8, i64 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 2, !range !11
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 0, i32 4
  %10 = add i32 %9, %3
  %11 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 0, i32 1
  %12 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %11, align 8
  %13 = bitcast %class.GrGLSLProgramBuilder* %12 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %14 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %13, align 16
  %15 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %14, i64 2
  %16 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %15, align 8
  %17 = tail call %class.GrCaps* %16(%class.GrGLSLProgramBuilder* %12) #10
  %18 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %17, i64 0, i32 16
  %19 = load i32, i32* %18, align 8
  %20 = icmp ule i32 %10, %19
  %21 = zext i1 %20 to i8
  br label %22

22:                                               ; preds = %1, %5
  %23 = phi i8 [ 0, %1 ], [ %21, %5 ]
  %24 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 7
  store i8 %23, i8* %24, align 1
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK18GrVkUniformHandler17getRTHeightOffsetEv(%class.GrVkUniformHandler* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1, !range !11
  %4 = zext i8 %3 to i64
  %5 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 8, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 3
  %8 = icmp eq i32 %7, 0
  %9 = sub nuw nsw i32 4, %7
  %10 = select i1 %8, i32 0, i32 %9
  %11 = add i32 %10, %6
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %class.GrShaderVar* @_ZNK18GrVkUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 80
  %18 = mul i32 %7, 80
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 48
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 80
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %class.GrShaderVar*
  ret %class.GrShaderVar* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK18GrVkUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.GrVkUniformHandler* %0 to %class.GrShaderVar* (%class.GrVkUniformHandler*, i32)***
  %4 = load %class.GrShaderVar* (%class.GrVkUniformHandler*, i32)**, %class.GrShaderVar* (%class.GrVkUniformHandler*, i32)*** %3, align 16
  %5 = getelementptr inbounds %class.GrShaderVar* (%class.GrVkUniformHandler*, i32)*, %class.GrShaderVar* (%class.GrVkUniformHandler*, i32)** %4, i64 2
  %6 = load %class.GrShaderVar* (%class.GrVkUniformHandler*, i32)*, %class.GrShaderVar* (%class.GrVkUniformHandler*, i32)** %5, align 8
  %7 = tail call dereferenceable(40) %class.GrShaderVar* %6(%class.GrVkUniformHandler* %0, i32 %1) #10
  %8 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %9, i64 0, i32 2
  ret i8* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK18GrVkUniformHandler11numUniformsEv(%class.GrVkUniformHandler*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 44
  %3 = bitcast i8* %2 to i32*
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* @_ZN18GrVkUniformHandler7uniformEi(%class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 80
  %18 = mul i32 %7, 80
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 48
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 80
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrGLSLUniformHandler::UniformInfo"*
  ret %"struct.GrGLSLUniformHandler::UniformInfo"* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* @_ZNK18GrVkUniformHandler7uniformEi(%class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 80
  %18 = mul i32 %7, 80
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 48
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 80
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrGLSLUniformHandler::UniformInfo"*
  ret %"struct.GrGLSLUniformHandler::UniformInfo"* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK18GrVkUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 80
  %18 = mul i32 %7, 80
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 48
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 80
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  %36 = bitcast i8* %35 to %"struct.SkString::Rec"**
  %37 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %36, align 8
  %38 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 2
  ret i8* %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18GrVkUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrSwizzle* noalias sret, %class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %1, i64 0, i32 3, i32 0
  %5 = load %class.GrSwizzle*, %class.GrSwizzle** %4, align 8
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %5, i64 %6, i32 0
  %9 = load i16, i16* %8, align 2
  store i16 %9, i16* %7, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK18GrVkUniformHandler20inputSamplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %0, i64 0, i32 4, i32 0, i32 3, i32 0, i32 0
  %4 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %4, i64 0, i32 2
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18GrVkUniformHandler19inputSamplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrSwizzle* noalias sret, %class.GrVkUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.GrVkUniformHandler, %class.GrVkUniformHandler* %1, i64 0, i32 5, i32 0
  %6 = load i16, i16* %5, align 2
  store i16 %6, i16* %4, align 2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i32 @_ZL19grsltype_to_vk_size8GrSLTypei(i32, i32) unnamed_addr #7 {
  switch i32 %0, label %30 [
    i32 5, label %31
    i32 6, label %3
    i32 7, label %4
    i32 8, label %5
    i32 9, label %31
    i32 10, label %6
    i32 11, label %7
    i32 12, label %8
    i32 13, label %9
    i32 14, label %10
    i32 15, label %11
    i32 16, label %12
    i32 17, label %13
    i32 18, label %14
    i32 19, label %15
    i32 20, label %16
    i32 28, label %17
    i32 21, label %17
    i32 29, label %18
    i32 22, label %18
    i32 30, label %19
    i32 23, label %19
    i32 31, label %20
    i32 24, label %20
    i32 35, label %21
    i32 39, label %21
    i32 36, label %22
    i32 40, label %22
    i32 37, label %23
    i32 41, label %23
    i32 38, label %24
    i32 42, label %24
    i32 32, label %25
    i32 25, label %25
    i32 33, label %28
    i32 26, label %28
    i32 34, label %29
    i32 27, label %29
  ]

3:                                                ; preds = %2
  br label %31

4:                                                ; preds = %2
  br label %31

5:                                                ; preds = %2
  br label %31

6:                                                ; preds = %2
  br label %31

7:                                                ; preds = %2
  br label %31

8:                                                ; preds = %2
  br label %31

9:                                                ; preds = %2
  br label %31

10:                                               ; preds = %2
  br label %31

11:                                               ; preds = %2
  br label %31

12:                                               ; preds = %2
  br label %31

13:                                               ; preds = %2
  br label %31

14:                                               ; preds = %2
  br label %31

15:                                               ; preds = %2
  br label %31

16:                                               ; preds = %2
  br label %31

17:                                               ; preds = %2, %2
  br label %31

18:                                               ; preds = %2, %2
  br label %31

19:                                               ; preds = %2, %2
  br label %31

20:                                               ; preds = %2, %2
  br label %31

21:                                               ; preds = %2, %2
  br label %31

22:                                               ; preds = %2, %2
  br label %31

23:                                               ; preds = %2, %2
  br label %31

24:                                               ; preds = %2, %2
  br label %31

25:                                               ; preds = %2, %2
  %26 = icmp eq i32 %1, 1
  %27 = select i1 %26, i32 16, i32 32
  br label %31

28:                                               ; preds = %2, %2
  br label %31

29:                                               ; preds = %2, %2
  br label %31

30:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.9, i64 0, i64 0), i32 185, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

31:                                               ; preds = %25, %2, %2, %29, %28, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3
  %32 = phi i32 [ 64, %29 ], [ 48, %28 ], [ 16, %24 ], [ 12, %23 ], [ 8, %22 ], [ 4, %21 ], [ 16, %20 ], [ 12, %19 ], [ 8, %18 ], [ 4, %17 ], [ 8, %16 ], [ 6, %15 ], [ 4, %14 ], [ 2, %13 ], [ 8, %12 ], [ 6, %11 ], [ 4, %10 ], [ 2, %9 ], [ 4, %8 ], [ 3, %7 ], [ 2, %6 ], [ 4, %5 ], [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 1, %2 ], [ %27, %25 ]
  ret i32 %32
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EE5resetEv(%class.GrTBlockList.271*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrTBlockList.271* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !15
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !15
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !15
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !15
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !15
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !15
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %61, %81, %1
  %41 = bitcast %class.GrTBlockList.271* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #10
  ret void

42:                                               ; preds = %77, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %78, %77 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %79, %77 ]
  %45 = phi i32 [ %22, %19 ], [ %80, %77 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %59, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 56
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #10
  %53 = getelementptr inbounds i8, i8* %50, i64 32
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #10
  %55 = getelementptr inbounds i8, i8* %50, i64 24
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #10
  %57 = getelementptr inbounds i8, i8* %50, i64 16
  %58 = bitcast i8* %57 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #10
  %59 = add i32 %48, -80
  %60 = icmp slt i32 %59, 32
  br i1 %60, label %61, label %47

61:                                               ; preds = %47
  %62 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %62, label %40, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %65 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %64, align 8
  %66 = icmp eq %"class.GrBlockAllocator::Block"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %65, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %65
  br label %72

72:                                               ; preds = %67, %63
  %73 = phi %"class.GrBlockAllocator::Block"* [ null, %63 ], [ %71, %67 ]
  %74 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %93, %72
  %78 = phi %"class.GrBlockAllocator::Block"* [ %44, %72 ], [ %82, %93 ]
  %79 = phi %"class.GrBlockAllocator::Block"* [ %73, %72 ], [ %94, %93 ]
  %80 = phi i32 [ %75, %72 ], [ %96, %93 ]
  br label %42

81:                                               ; preds = %72, %93
  %82 = phi %"class.GrBlockAllocator::Block"* [ %94, %93 ], [ %73, %72 ]
  %83 = icmp eq %"class.GrBlockAllocator::Block"* %82, null
  br i1 %83, label %40, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %82, i64 0, i32 1
  %86 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %85, align 8
  %87 = icmp eq %"class.GrBlockAllocator::Block"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %86, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %86
  br label %93

93:                                               ; preds = %88, %84
  %94 = phi %"class.GrBlockAllocator::Block"* [ null, %84 ], [ %92, %88 ]
  %95 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %82, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %81, label %77
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

declare void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.273*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.273, %class.SkTArray.273* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 2) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.273, %class.SkTArray.273* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw i64 %51, 1
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.GrSwizzle*, %class.GrSwizzle** %49, align 8
  %55 = bitcast i8* %53 to i16*
  %56 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %54, i64 %51, i32 0
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %55, align 2
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray.273* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #10
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK18BlockIndexIteratorIRN18GrVkUniformHandler13VkUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK18BlockIndexIteratorIRN18GrVkUniformHandler13VkUniformInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!7 = distinct !{!7, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!14 = distinct !{!14, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK18BlockIndexIteratorIRN18GrVkUniformHandler13VkUniformInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNK18BlockIndexIteratorIRN18GrVkUniformHandler13VkUniformInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
