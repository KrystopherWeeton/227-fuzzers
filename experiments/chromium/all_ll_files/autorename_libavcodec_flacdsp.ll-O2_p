; ModuleID = '../../third_party/ffmpeg/libavcodec/autorename_libavcodec_flacdsp.c'
source_filename = "../../third_party/ffmpeg/libavcodec/autorename_libavcodec_flacdsp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.FLACDSPContext = type { [4 x void (i8**, i32**, i32, i32, i32)*], void (i32*, i32*, i32, i32, i32)*, void (i32*, i32*, i32, i32, i32)*, void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)* }

@switch.table.ff_flacdsp_init = private unnamed_addr constant [7 x void (i8**, i32**, i32, i32, i32)*] [void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_indep_c_16, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_indep_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_indep_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_indep_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_indep_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_indep_c_16p, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_indep_c_32p], align 8
@switch.table.ff_flacdsp_init.1 = private unnamed_addr constant [7 x void (i8**, i32**, i32, i32, i32)*] [void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ls_c_16, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ls_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ls_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ls_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ls_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ls_c_16p, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ls_c_32p], align 8
@switch.table.ff_flacdsp_init.2 = private unnamed_addr constant [7 x void (i8**, i32**, i32, i32, i32)*] [void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_rs_c_16, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_rs_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_rs_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_rs_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_rs_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_rs_c_16p, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_rs_c_32p], align 8
@switch.table.ff_flacdsp_init.3 = private unnamed_addr constant [7 x void (i8**, i32**, i32, i32, i32)*] [void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ms_c_16, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ms_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ms_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ms_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ms_c_32, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ms_c_16p, void (i8**, i32**, i32, i32, i32)* @flac_decorrelate_ms_c_32p], align 8

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @ff_flacdsp_init(%struct.FLACDSPContext*, i32, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 1
  %6 = bitcast void (i32*, i32*, i32, i32, i32)** %5 to <2 x void (i32*, i32*, i32, i32, i32)*>*
  store <2 x void (i32*, i32*, i32, i32, i32)*> <void (i32*, i32*, i32, i32, i32)* @flac_lpc_16_c, void (i32*, i32*, i32, i32, i32)* @flac_lpc_32_c>, <2 x void (i32*, i32*, i32, i32, i32)*>* %6, align 8
  %7 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 3
  %8 = bitcast void (i32*, i32*, i32, i32, i32*, i32)** %7 to <2 x void (i32*, i32*, i32, i32, i32*, i32)*>*
  store <2 x void (i32*, i32*, i32, i32, i32*, i32)*> <void (i32*, i32*, i32, i32, i32*, i32)* @flac_lpc_encode_c_16, void (i32*, i32*, i32, i32, i32*, i32)* @flac_lpc_encode_c_32>, <2 x void (i32*, i32*, i32, i32, i32*, i32)*>* %8, align 8
  %9 = add i32 %1, -1
  %10 = icmp ult i32 %9, 7
  br i1 %10, label %11, label %40

11:                                               ; preds = %4
  %12 = trunc i32 %9 to i8
  %13 = lshr i8 99, %12
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %40, label %16

16:                                               ; preds = %11
  %17 = sext i32 %9 to i64
  %18 = getelementptr inbounds [7 x void (i8**, i32**, i32, i32, i32)*], [7 x void (i8**, i32**, i32, i32, i32)*]* @switch.table.ff_flacdsp_init, i64 0, i64 %17
  %19 = bitcast void (i8**, i32**, i32, i32, i32)** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sext i32 %9 to i64
  %22 = getelementptr inbounds [7 x void (i8**, i32**, i32, i32, i32)*], [7 x void (i8**, i32**, i32, i32, i32)*]* @switch.table.ff_flacdsp_init.1, i64 0, i64 %21
  %23 = bitcast void (i8**, i32**, i32, i32, i32)** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sext i32 %9 to i64
  %26 = getelementptr inbounds [7 x void (i8**, i32**, i32, i32, i32)*], [7 x void (i8**, i32**, i32, i32, i32)*]* @switch.table.ff_flacdsp_init.2, i64 0, i64 %25
  %27 = bitcast void (i8**, i32**, i32, i32, i32)** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sext i32 %9 to i64
  %30 = getelementptr inbounds [7 x void (i8**, i32**, i32, i32, i32)*], [7 x void (i8**, i32**, i32, i32, i32)*]* @switch.table.ff_flacdsp_init.3, i64 0, i64 %29
  %31 = bitcast void (i8**, i32**, i32, i32, i32)** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %struct.FLACDSPContext* %0 to i64*
  store i64 %20, i64* %33, align 8
  %34 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 1
  %35 = bitcast void (i8**, i32**, i32, i32, i32)** %34 to i64*
  store i64 %24, i64* %35, align 8
  %36 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 2
  %37 = bitcast void (i8**, i32**, i32, i32, i32)** %36 to i64*
  store i64 %28, i64* %37, align 8
  %38 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 3
  %39 = bitcast void (i8**, i32**, i32, i32, i32)** %38 to i64*
  store i64 %32, i64* %39, align 8
  br label %40

40:                                               ; preds = %11, %4, %16
  tail call void @ff_flacdsp_init_x86(%struct.FLACDSPContext* %0, i32 %1, i32 %2, i32 %3) #3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_lpc_16_c(i32* nocapture, i32* nocapture readonly, i32, i32, i32) #1 {
  %6 = add nsw i32 %4, -1
  %7 = icmp sgt i32 %6, %2
  br i1 %7, label %8, label %93

8:                                                ; preds = %5
  %9 = icmp sgt i32 %2, 1
  %10 = add i32 %4, -2
  %11 = sub i32 %10, %2
  %12 = and i32 %11, -2
  %13 = add i32 %12, %2
  %14 = zext i32 %2 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %15, 1
  %17 = icmp eq i32 %2, 2
  %18 = sub nsw i64 %15, %16
  %19 = icmp eq i64 %16, 0
  br label %20

20:                                               ; preds = %8, %70
  %21 = phi i32 [ %2, %8 ], [ %88, %70 ]
  %22 = phi i32* [ %0, %8 ], [ %89, %70 ]
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %1, align 4
  %25 = mul i32 %24, %23
  br i1 %9, label %26, label %70

26:                                               ; preds = %20
  br i1 %17, label %53, label %27

27:                                               ; preds = %26, %27
  %28 = phi i64 [ %47, %27 ], [ 1, %26 ]
  %29 = phi i32 [ %50, %27 ], [ %25, %26 ]
  %30 = phi i32 [ %48, %27 ], [ %24, %26 ]
  %31 = phi i32 [ %45, %27 ], [ 0, %26 ]
  %32 = phi i64 [ %51, %27 ], [ %18, %26 ]
  %33 = getelementptr inbounds i32, i32* %22, i64 %28
  %34 = load i32, i32* %33, align 4
  %35 = mul i32 %34, %30
  %36 = add i32 %35, %31
  %37 = getelementptr inbounds i32, i32* %1, i64 %28
  %38 = add nuw nsw i64 %28, 1
  %39 = load i32, i32* %37, align 4
  %40 = mul i32 %39, %34
  %41 = add i32 %40, %29
  %42 = getelementptr inbounds i32, i32* %22, i64 %38
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 %43, %39
  %45 = add i32 %44, %36
  %46 = getelementptr inbounds i32, i32* %1, i64 %38
  %47 = add nuw nsw i64 %28, 2
  %48 = load i32, i32* %46, align 4
  %49 = mul i32 %48, %43
  %50 = add i32 %49, %41
  %51 = add i64 %32, -2
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %27

53:                                               ; preds = %27, %26
  %54 = phi i32 [ undef, %26 ], [ %45, %27 ]
  %55 = phi i32 [ undef, %26 ], [ %48, %27 ]
  %56 = phi i32 [ undef, %26 ], [ %50, %27 ]
  %57 = phi i64 [ 1, %26 ], [ %47, %27 ]
  %58 = phi i32 [ %25, %26 ], [ %50, %27 ]
  %59 = phi i32 [ %24, %26 ], [ %48, %27 ]
  %60 = phi i32 [ 0, %26 ], [ %45, %27 ]
  br i1 %19, label %70, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds i32, i32* %22, i64 %57
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds i32, i32* %1, i64 %57
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 %65, %63
  %67 = add i32 %66, %58
  %68 = mul i32 %63, %59
  %69 = add i32 %68, %60
  br label %70

70:                                               ; preds = %61, %53, %20
  %71 = phi i32 [ 1, %20 ], [ %2, %53 ], [ %2, %61 ]
  %72 = phi i32 [ 0, %20 ], [ %54, %53 ], [ %69, %61 ]
  %73 = phi i32 [ %24, %20 ], [ %55, %53 ], [ %65, %61 ]
  %74 = phi i32 [ %25, %20 ], [ %56, %53 ], [ %67, %61 ]
  %75 = ashr i32 %74, %3
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds i32, i32* %22, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, %75
  store i32 %79, i32* %77, align 4
  %80 = mul i32 %79, %73
  %81 = add i32 %80, %72
  %82 = ashr i32 %81, %3
  %83 = add nuw nsw i32 %71, 1
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %22, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %82, %86
  store i32 %87, i32* %85, align 4
  %88 = add nsw i32 %21, 2
  %89 = getelementptr inbounds i32, i32* %22, i64 2
  %90 = icmp slt i32 %88, %6
  br i1 %90, label %20, label %91

91:                                               ; preds = %70
  %92 = add i32 %13, 2
  br label %93

93:                                               ; preds = %91, %5
  %94 = phi i32* [ %0, %5 ], [ %89, %91 ]
  %95 = phi i32 [ %2, %5 ], [ %92, %91 ]
  %96 = icmp slt i32 %95, %4
  br i1 %96, label %97, label %168

97:                                               ; preds = %93
  %98 = icmp sgt i32 %2, 0
  br i1 %98, label %99, label %161

99:                                               ; preds = %97
  %100 = zext i32 %2 to i64
  %101 = add nsw i64 %100, -1
  %102 = and i64 %100, 3
  %103 = icmp ult i64 %101, 3
  br i1 %103, label %140, label %104

104:                                              ; preds = %99
  %105 = sub nsw i64 %100, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %137, %106 ]
  %108 = phi i32 [ 0, %104 ], [ %136, %106 ]
  %109 = phi i64 [ %105, %104 ], [ %138, %106 ]
  %110 = getelementptr inbounds i32, i32* %1, i64 %107
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds i32, i32* %94, i64 %107
  %113 = load i32, i32* %112, align 4
  %114 = mul i32 %113, %111
  %115 = add i32 %114, %108
  %116 = or i64 %107, 1
  %117 = getelementptr inbounds i32, i32* %1, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds i32, i32* %94, i64 %116
  %120 = load i32, i32* %119, align 4
  %121 = mul i32 %120, %118
  %122 = add i32 %121, %115
  %123 = or i64 %107, 2
  %124 = getelementptr inbounds i32, i32* %1, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds i32, i32* %94, i64 %123
  %127 = load i32, i32* %126, align 4
  %128 = mul i32 %127, %125
  %129 = add i32 %128, %122
  %130 = or i64 %107, 3
  %131 = getelementptr inbounds i32, i32* %1, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds i32, i32* %94, i64 %130
  %134 = load i32, i32* %133, align 4
  %135 = mul i32 %134, %132
  %136 = add i32 %135, %129
  %137 = add nuw nsw i64 %107, 4
  %138 = add i64 %109, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %106

140:                                              ; preds = %106, %99
  %141 = phi i32 [ undef, %99 ], [ %136, %106 ]
  %142 = phi i64 [ 0, %99 ], [ %137, %106 ]
  %143 = phi i32 [ 0, %99 ], [ %136, %106 ]
  %144 = icmp eq i64 %102, 0
  br i1 %144, label %158, label %145

145:                                              ; preds = %140, %145
  %146 = phi i64 [ %155, %145 ], [ %142, %140 ]
  %147 = phi i32 [ %154, %145 ], [ %143, %140 ]
  %148 = phi i64 [ %156, %145 ], [ %102, %140 ]
  %149 = getelementptr inbounds i32, i32* %1, i64 %146
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %94, i64 %146
  %152 = load i32, i32* %151, align 4
  %153 = mul i32 %152, %150
  %154 = add i32 %153, %147
  %155 = add nuw nsw i64 %146, 1
  %156 = add i64 %148, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %145, !llvm.loop !2

158:                                              ; preds = %145, %140
  %159 = phi i32 [ %141, %140 ], [ %154, %145 ]
  %160 = zext i32 %2 to i64
  br label %161

161:                                              ; preds = %158, %97
  %162 = phi i32 [ %159, %158 ], [ 0, %97 ]
  %163 = phi i64 [ %160, %158 ], [ 0, %97 ]
  %164 = getelementptr inbounds i32, i32* %94, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = ashr i32 %162, %3
  %167 = add i32 %165, %166
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %161, %93
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_lpc_32_c(i32* nocapture, i32* nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp slt i32 %2, %4
  br i1 %6, label %7, label %96

7:                                                ; preds = %5
  %8 = icmp sgt i32 %2, 0
  %9 = zext i32 %3 to i64
  %10 = add i32 %2, -1
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %13 = zext i32 %2 to i64
  %14 = add nsw i64 %13, -1
  %15 = and i64 %13, 3
  %16 = icmp ult i64 %14, 3
  %17 = sub nsw i64 %13, %15
  %18 = icmp eq i64 %15, 0
  br label %19

19:                                               ; preds = %84, %7
  %20 = phi i32 [ %2, %7 ], [ %93, %84 ]
  %21 = phi i32* [ %0, %7 ], [ %94, %84 ]
  br i1 %8, label %22, label %84

22:                                               ; preds = %19
  br i1 %16, label %65, label %23

23:                                               ; preds = %22, %23
  %24 = phi i64 [ %62, %23 ], [ 0, %22 ]
  %25 = phi i64 [ %61, %23 ], [ 0, %22 ]
  %26 = phi i64 [ %63, %23 ], [ %17, %22 ]
  %27 = getelementptr inbounds i32, i32* %1, i64 %24
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %21, i64 %24
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = mul nsw i64 %32, %29
  %34 = add nsw i64 %33, %25
  %35 = or i64 %24, 1
  %36 = getelementptr inbounds i32, i32* %1, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %21, i64 %35
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = add nsw i64 %42, %34
  %44 = or i64 %24, 2
  %45 = getelementptr inbounds i32, i32* %1, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %21, i64 %44
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %50, %47
  %52 = add nsw i64 %51, %43
  %53 = or i64 %24, 3
  %54 = getelementptr inbounds i32, i32* %1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %21, i64 %53
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %59, %56
  %61 = add nsw i64 %60, %52
  %62 = add nuw nsw i64 %24, 4
  %63 = add i64 %26, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %23

65:                                               ; preds = %23, %22
  %66 = phi i64 [ undef, %22 ], [ %61, %23 ]
  %67 = phi i64 [ 0, %22 ], [ %62, %23 ]
  %68 = phi i64 [ 0, %22 ], [ %61, %23 ]
  br i1 %18, label %84, label %69

69:                                               ; preds = %65, %69
  %70 = phi i64 [ %81, %69 ], [ %67, %65 ]
  %71 = phi i64 [ %80, %69 ], [ %68, %65 ]
  %72 = phi i64 [ %82, %69 ], [ %15, %65 ]
  %73 = getelementptr inbounds i32, i32* %1, i64 %70
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %21, i64 %70
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = mul nsw i64 %78, %75
  %80 = add nsw i64 %79, %71
  %81 = add nuw nsw i64 %70, 1
  %82 = add i64 %72, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %69, !llvm.loop !4

84:                                               ; preds = %65, %69, %19
  %85 = phi i64 [ 0, %19 ], [ %12, %69 ], [ %12, %65 ]
  %86 = phi i64 [ 0, %19 ], [ %66, %65 ], [ %80, %69 ]
  %87 = ashr i64 %86, %9
  %88 = and i64 %85, 4294967295
  %89 = getelementptr inbounds i32, i32* %21, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = trunc i64 %87 to i32
  %92 = add i32 %90, %91
  store i32 %92, i32* %89, align 4
  %93 = add nsw i32 %20, 1
  %94 = getelementptr inbounds i32, i32* %21, i64 1
  %95 = icmp eq i32 %93, %4
  br i1 %95, label %96, label %19

96:                                               ; preds = %84, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_lpc_encode_c_16(i32* nocapture, i32* readonly, i32, i32, i32* readonly, i32) #1 {
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %48

8:                                                ; preds = %6
  %9 = zext i32 %3 to i64
  %10 = add nsw i64 %9, -1
  %11 = and i64 %9, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %36, label %13

13:                                               ; preds = %8
  %14 = sub nsw i64 %9, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %33, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %34, %15 ]
  %18 = getelementptr inbounds i32, i32* %1, i64 %16
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds i32, i32* %0, i64 %16
  store i32 %19, i32* %20, align 4
  %21 = or i64 %16, 1
  %22 = getelementptr inbounds i32, i32* %1, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds i32, i32* %0, i64 %21
  store i32 %23, i32* %24, align 4
  %25 = or i64 %16, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %0, i64 %25
  store i32 %27, i32* %28, align 4
  %29 = or i64 %16, 3
  %30 = getelementptr inbounds i32, i32* %1, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i32, i32* %0, i64 %29
  store i32 %31, i32* %32, align 4
  %33 = add nuw nsw i64 %16, 4
  %34 = add i64 %17, -4
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %15

36:                                               ; preds = %15, %8
  %37 = phi i64 [ 0, %8 ], [ %33, %15 ]
  %38 = icmp eq i64 %11, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %36, %39
  %40 = phi i64 [ %45, %39 ], [ %37, %36 ]
  %41 = phi i64 [ %46, %39 ], [ %11, %36 ]
  %42 = getelementptr inbounds i32, i32* %1, i64 %40
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds i32, i32* %0, i64 %40
  store i32 %43, i32* %44, align 4
  %45 = add nuw nsw i64 %40, 1
  %46 = add i64 %41, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %39, !llvm.loop !5

48:                                               ; preds = %36, %39, %6
  switch i32 %3, label %501 [
    i32 1, label %49
    i32 2, label %74
    i32 3, label %108
    i32 4, label %151
    i32 5, label %203
    i32 6, label %264
    i32 7, label %334
    i32 8, label %413
  ]

49:                                               ; preds = %48
  %50 = icmp sgt i32 %2, 1
  br i1 %50, label %51, label %906

51:                                               ; preds = %49
  %52 = sext i32 %2 to i64
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 1, %51 ], [ %72, %53 ]
  %55 = add nsw i64 %54, -1
  %56 = getelementptr inbounds i32, i32* %1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = load i32, i32* %4, align 4
  %59 = mul nsw i32 %58, %57
  %60 = getelementptr inbounds i32, i32* %1, i64 %54
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %61, %58
  %63 = ashr i32 %59, %5
  %64 = sub nsw i32 %61, %63
  %65 = getelementptr inbounds i32, i32* %0, i64 %54
  store i32 %64, i32* %65, align 4
  %66 = add nuw nsw i64 %54, 1
  %67 = getelementptr inbounds i32, i32* %1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = ashr i32 %62, %5
  %70 = sub nsw i32 %68, %69
  %71 = getelementptr inbounds i32, i32* %0, i64 %66
  store i32 %70, i32* %71, align 4
  %72 = add nuw nsw i64 %54, 2
  %73 = icmp slt i64 %72, %52
  br i1 %73, label %53, label %906

74:                                               ; preds = %48
  %75 = icmp sgt i32 %2, 2
  br i1 %75, label %76, label %906

76:                                               ; preds = %74
  %77 = getelementptr inbounds i32, i32* %4, i64 1
  %78 = sext i32 %2 to i64
  br label %79

79:                                               ; preds = %79, %76
  %80 = phi i64 [ 2, %76 ], [ %106, %79 ]
  %81 = add nsw i64 %80, -2
  %82 = getelementptr inbounds i32, i32* %1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load i32, i32* %77, align 4
  %85 = mul nsw i32 %84, %83
  %86 = add nsw i64 %80, -1
  %87 = getelementptr inbounds i32, i32* %1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = mul nsw i32 %88, %84
  %90 = load i32, i32* %4, align 4
  %91 = mul nsw i32 %90, %88
  %92 = add nsw i32 %91, %85
  %93 = getelementptr inbounds i32, i32* %1, i64 %80
  %94 = load i32, i32* %93, align 4
  %95 = mul nsw i32 %94, %90
  %96 = add nsw i32 %95, %89
  %97 = ashr i32 %92, %5
  %98 = sub nsw i32 %94, %97
  %99 = getelementptr inbounds i32, i32* %0, i64 %80
  store i32 %98, i32* %99, align 4
  %100 = or i64 %80, 1
  %101 = getelementptr inbounds i32, i32* %1, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = ashr i32 %96, %5
  %104 = sub nsw i32 %102, %103
  %105 = getelementptr inbounds i32, i32* %0, i64 %100
  store i32 %104, i32* %105, align 4
  %106 = add nuw nsw i64 %80, 2
  %107 = icmp slt i64 %106, %78
  br i1 %107, label %79, label %906

108:                                              ; preds = %48
  %109 = icmp sgt i32 %2, 3
  br i1 %109, label %110, label %906

110:                                              ; preds = %108
  %111 = getelementptr inbounds i32, i32* %4, i64 2
  %112 = getelementptr inbounds i32, i32* %4, i64 1
  %113 = sext i32 %2 to i64
  br label %114

114:                                              ; preds = %114, %110
  %115 = phi i64 [ 3, %110 ], [ %149, %114 ]
  %116 = add nsw i64 %115, -3
  %117 = getelementptr inbounds i32, i32* %1, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* %111, align 4
  %120 = mul nsw i32 %119, %118
  %121 = add nsw i64 %115, -2
  %122 = getelementptr inbounds i32, i32* %1, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i32 %123, %119
  %125 = load i32, i32* %112, align 4
  %126 = mul nsw i32 %125, %123
  %127 = add nsw i32 %126, %120
  %128 = add nsw i64 %115, -1
  %129 = getelementptr inbounds i32, i32* %1, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = mul nsw i32 %130, %125
  %132 = add nsw i32 %131, %124
  %133 = load i32, i32* %4, align 4
  %134 = mul nsw i32 %133, %130
  %135 = add nsw i32 %127, %134
  %136 = getelementptr inbounds i32, i32* %1, i64 %115
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %133
  %139 = add nsw i32 %132, %138
  %140 = ashr i32 %135, %5
  %141 = sub nsw i32 %137, %140
  %142 = getelementptr inbounds i32, i32* %0, i64 %115
  store i32 %141, i32* %142, align 4
  %143 = add nuw nsw i64 %115, 1
  %144 = getelementptr inbounds i32, i32* %1, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = ashr i32 %139, %5
  %147 = sub nsw i32 %145, %146
  %148 = getelementptr inbounds i32, i32* %0, i64 %143
  store i32 %147, i32* %148, align 4
  %149 = add nuw nsw i64 %115, 2
  %150 = icmp slt i64 %149, %113
  br i1 %150, label %114, label %906

151:                                              ; preds = %48
  %152 = icmp sgt i32 %2, 4
  br i1 %152, label %153, label %906

153:                                              ; preds = %151
  %154 = getelementptr inbounds i32, i32* %4, i64 3
  %155 = getelementptr inbounds i32, i32* %4, i64 2
  %156 = getelementptr inbounds i32, i32* %4, i64 1
  %157 = sext i32 %2 to i64
  br label %158

158:                                              ; preds = %158, %153
  %159 = phi i64 [ 4, %153 ], [ %201, %158 ]
  %160 = add nsw i64 %159, -4
  %161 = getelementptr inbounds i32, i32* %1, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = load i32, i32* %154, align 4
  %164 = mul nsw i32 %163, %162
  %165 = add nsw i64 %159, -3
  %166 = getelementptr inbounds i32, i32* %1, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = mul nsw i32 %167, %163
  %169 = load i32, i32* %155, align 4
  %170 = mul nsw i32 %169, %167
  %171 = add nsw i32 %170, %164
  %172 = add nsw i64 %159, -2
  %173 = getelementptr inbounds i32, i32* %1, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = mul nsw i32 %174, %169
  %176 = add nsw i32 %175, %168
  %177 = load i32, i32* %156, align 4
  %178 = mul nsw i32 %177, %174
  %179 = add nsw i32 %171, %178
  %180 = add nsw i64 %159, -1
  %181 = getelementptr inbounds i32, i32* %1, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = mul nsw i32 %182, %177
  %184 = add nsw i32 %176, %183
  %185 = load i32, i32* %4, align 4
  %186 = mul nsw i32 %185, %182
  %187 = add nsw i32 %179, %186
  %188 = getelementptr inbounds i32, i32* %1, i64 %159
  %189 = load i32, i32* %188, align 4
  %190 = mul nsw i32 %189, %185
  %191 = add nsw i32 %184, %190
  %192 = ashr i32 %187, %5
  %193 = sub nsw i32 %189, %192
  %194 = getelementptr inbounds i32, i32* %0, i64 %159
  store i32 %193, i32* %194, align 4
  %195 = or i64 %159, 1
  %196 = getelementptr inbounds i32, i32* %1, i64 %195
  %197 = load i32, i32* %196, align 4
  %198 = ashr i32 %191, %5
  %199 = sub nsw i32 %197, %198
  %200 = getelementptr inbounds i32, i32* %0, i64 %195
  store i32 %199, i32* %200, align 4
  %201 = add nuw nsw i64 %159, 2
  %202 = icmp slt i64 %201, %157
  br i1 %202, label %158, label %906

203:                                              ; preds = %48
  %204 = icmp sgt i32 %2, 5
  br i1 %204, label %205, label %906

205:                                              ; preds = %203
  %206 = getelementptr inbounds i32, i32* %4, i64 4
  %207 = getelementptr inbounds i32, i32* %4, i64 3
  %208 = getelementptr inbounds i32, i32* %4, i64 2
  %209 = getelementptr inbounds i32, i32* %4, i64 1
  %210 = sext i32 %2 to i64
  br label %211

211:                                              ; preds = %211, %205
  %212 = phi i64 [ 5, %205 ], [ %262, %211 ]
  %213 = add nsw i64 %212, -5
  %214 = getelementptr inbounds i32, i32* %1, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = load i32, i32* %206, align 4
  %217 = mul nsw i32 %216, %215
  %218 = add nsw i64 %212, -4
  %219 = getelementptr inbounds i32, i32* %1, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %216
  %222 = load i32, i32* %207, align 4
  %223 = mul nsw i32 %222, %220
  %224 = add nsw i32 %223, %217
  %225 = add nsw i64 %212, -3
  %226 = getelementptr inbounds i32, i32* %1, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = mul nsw i32 %227, %222
  %229 = add nsw i32 %228, %221
  %230 = load i32, i32* %208, align 4
  %231 = mul nsw i32 %230, %227
  %232 = add nsw i32 %224, %231
  %233 = add nsw i64 %212, -2
  %234 = getelementptr inbounds i32, i32* %1, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = mul nsw i32 %235, %230
  %237 = add nsw i32 %229, %236
  %238 = load i32, i32* %209, align 4
  %239 = mul nsw i32 %238, %235
  %240 = add nsw i32 %232, %239
  %241 = add nsw i64 %212, -1
  %242 = getelementptr inbounds i32, i32* %1, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = mul nsw i32 %243, %238
  %245 = add nsw i32 %237, %244
  %246 = load i32, i32* %4, align 4
  %247 = mul nsw i32 %246, %243
  %248 = add nsw i32 %240, %247
  %249 = getelementptr inbounds i32, i32* %1, i64 %212
  %250 = load i32, i32* %249, align 4
  %251 = mul nsw i32 %250, %246
  %252 = add nsw i32 %245, %251
  %253 = ashr i32 %248, %5
  %254 = sub nsw i32 %250, %253
  %255 = getelementptr inbounds i32, i32* %0, i64 %212
  store i32 %254, i32* %255, align 4
  %256 = add nuw nsw i64 %212, 1
  %257 = getelementptr inbounds i32, i32* %1, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = ashr i32 %252, %5
  %260 = sub nsw i32 %258, %259
  %261 = getelementptr inbounds i32, i32* %0, i64 %256
  store i32 %260, i32* %261, align 4
  %262 = add nuw nsw i64 %212, 2
  %263 = icmp slt i64 %262, %210
  br i1 %263, label %211, label %906

264:                                              ; preds = %48
  %265 = icmp sgt i32 %2, 6
  br i1 %265, label %266, label %906

266:                                              ; preds = %264
  %267 = getelementptr inbounds i32, i32* %4, i64 5
  %268 = getelementptr inbounds i32, i32* %4, i64 4
  %269 = getelementptr inbounds i32, i32* %4, i64 3
  %270 = getelementptr inbounds i32, i32* %4, i64 2
  %271 = getelementptr inbounds i32, i32* %4, i64 1
  %272 = sext i32 %2 to i64
  br label %273

273:                                              ; preds = %273, %266
  %274 = phi i64 [ 6, %266 ], [ %332, %273 ]
  %275 = add nsw i64 %274, -6
  %276 = getelementptr inbounds i32, i32* %1, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = load i32, i32* %267, align 4
  %279 = mul nsw i32 %278, %277
  %280 = add nsw i64 %274, -5
  %281 = getelementptr inbounds i32, i32* %1, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = mul nsw i32 %282, %278
  %284 = load i32, i32* %268, align 4
  %285 = mul nsw i32 %284, %282
  %286 = add nsw i32 %285, %279
  %287 = add nsw i64 %274, -4
  %288 = getelementptr inbounds i32, i32* %1, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %289, %284
  %291 = add nsw i32 %290, %283
  %292 = load i32, i32* %269, align 4
  %293 = mul nsw i32 %292, %289
  %294 = add nsw i32 %286, %293
  %295 = add nsw i64 %274, -3
  %296 = getelementptr inbounds i32, i32* %1, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = mul nsw i32 %297, %292
  %299 = add nsw i32 %291, %298
  %300 = load i32, i32* %270, align 4
  %301 = mul nsw i32 %300, %297
  %302 = add nsw i32 %294, %301
  %303 = add nsw i64 %274, -2
  %304 = getelementptr inbounds i32, i32* %1, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = mul nsw i32 %305, %300
  %307 = add nsw i32 %299, %306
  %308 = load i32, i32* %271, align 4
  %309 = mul nsw i32 %308, %305
  %310 = add nsw i32 %302, %309
  %311 = add nsw i64 %274, -1
  %312 = getelementptr inbounds i32, i32* %1, i64 %311
  %313 = load i32, i32* %312, align 4
  %314 = mul nsw i32 %313, %308
  %315 = add nsw i32 %307, %314
  %316 = load i32, i32* %4, align 4
  %317 = mul nsw i32 %316, %313
  %318 = add nsw i32 %310, %317
  %319 = getelementptr inbounds i32, i32* %1, i64 %274
  %320 = load i32, i32* %319, align 4
  %321 = mul nsw i32 %320, %316
  %322 = add nsw i32 %315, %321
  %323 = ashr i32 %318, %5
  %324 = sub nsw i32 %320, %323
  %325 = getelementptr inbounds i32, i32* %0, i64 %274
  store i32 %324, i32* %325, align 4
  %326 = or i64 %274, 1
  %327 = getelementptr inbounds i32, i32* %1, i64 %326
  %328 = load i32, i32* %327, align 4
  %329 = ashr i32 %322, %5
  %330 = sub nsw i32 %328, %329
  %331 = getelementptr inbounds i32, i32* %0, i64 %326
  store i32 %330, i32* %331, align 4
  %332 = add nuw nsw i64 %274, 2
  %333 = icmp slt i64 %332, %272
  br i1 %333, label %273, label %906

334:                                              ; preds = %48
  %335 = icmp sgt i32 %2, 7
  br i1 %335, label %336, label %906

336:                                              ; preds = %334
  %337 = getelementptr inbounds i32, i32* %4, i64 6
  %338 = getelementptr inbounds i32, i32* %4, i64 5
  %339 = getelementptr inbounds i32, i32* %4, i64 4
  %340 = getelementptr inbounds i32, i32* %4, i64 3
  %341 = getelementptr inbounds i32, i32* %4, i64 2
  %342 = getelementptr inbounds i32, i32* %4, i64 1
  %343 = sext i32 %2 to i64
  br label %344

344:                                              ; preds = %344, %336
  %345 = phi i64 [ 7, %336 ], [ %411, %344 ]
  %346 = add nsw i64 %345, -7
  %347 = getelementptr inbounds i32, i32* %1, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = load i32, i32* %337, align 4
  %350 = mul nsw i32 %349, %348
  %351 = add nsw i64 %345, -6
  %352 = getelementptr inbounds i32, i32* %1, i64 %351
  %353 = load i32, i32* %352, align 4
  %354 = mul nsw i32 %353, %349
  %355 = load i32, i32* %338, align 4
  %356 = mul nsw i32 %355, %353
  %357 = add nsw i32 %356, %350
  %358 = add nsw i64 %345, -5
  %359 = getelementptr inbounds i32, i32* %1, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = mul nsw i32 %360, %355
  %362 = add nsw i32 %361, %354
  %363 = load i32, i32* %339, align 4
  %364 = mul nsw i32 %363, %360
  %365 = add nsw i32 %357, %364
  %366 = add nsw i64 %345, -4
  %367 = getelementptr inbounds i32, i32* %1, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = mul nsw i32 %368, %363
  %370 = add nsw i32 %362, %369
  %371 = load i32, i32* %340, align 4
  %372 = mul nsw i32 %371, %368
  %373 = add nsw i32 %365, %372
  %374 = add nsw i64 %345, -3
  %375 = getelementptr inbounds i32, i32* %1, i64 %374
  %376 = load i32, i32* %375, align 4
  %377 = mul nsw i32 %376, %371
  %378 = add nsw i32 %370, %377
  %379 = load i32, i32* %341, align 4
  %380 = mul nsw i32 %379, %376
  %381 = add nsw i32 %373, %380
  %382 = add nsw i64 %345, -2
  %383 = getelementptr inbounds i32, i32* %1, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = mul nsw i32 %384, %379
  %386 = add nsw i32 %378, %385
  %387 = load i32, i32* %342, align 4
  %388 = mul nsw i32 %387, %384
  %389 = add nsw i32 %381, %388
  %390 = add nsw i64 %345, -1
  %391 = getelementptr inbounds i32, i32* %1, i64 %390
  %392 = load i32, i32* %391, align 4
  %393 = mul nsw i32 %392, %387
  %394 = add nsw i32 %386, %393
  %395 = load i32, i32* %4, align 4
  %396 = mul nsw i32 %395, %392
  %397 = add nsw i32 %389, %396
  %398 = getelementptr inbounds i32, i32* %1, i64 %345
  %399 = load i32, i32* %398, align 4
  %400 = mul nsw i32 %399, %395
  %401 = add nsw i32 %394, %400
  %402 = ashr i32 %397, %5
  %403 = sub nsw i32 %399, %402
  %404 = getelementptr inbounds i32, i32* %0, i64 %345
  store i32 %403, i32* %404, align 4
  %405 = add nuw nsw i64 %345, 1
  %406 = getelementptr inbounds i32, i32* %1, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = ashr i32 %401, %5
  %409 = sub nsw i32 %407, %408
  %410 = getelementptr inbounds i32, i32* %0, i64 %405
  store i32 %409, i32* %410, align 4
  %411 = add nuw nsw i64 %345, 2
  %412 = icmp slt i64 %411, %343
  br i1 %412, label %344, label %906

413:                                              ; preds = %48
  %414 = icmp sgt i32 %2, 8
  br i1 %414, label %415, label %906

415:                                              ; preds = %413
  %416 = getelementptr inbounds i32, i32* %4, i64 7
  %417 = getelementptr inbounds i32, i32* %4, i64 6
  %418 = getelementptr inbounds i32, i32* %4, i64 5
  %419 = getelementptr inbounds i32, i32* %4, i64 4
  %420 = getelementptr inbounds i32, i32* %4, i64 3
  %421 = getelementptr inbounds i32, i32* %4, i64 2
  %422 = getelementptr inbounds i32, i32* %4, i64 1
  %423 = sext i32 %2 to i64
  br label %424

424:                                              ; preds = %424, %415
  %425 = phi i64 [ 8, %415 ], [ %499, %424 ]
  %426 = add nsw i64 %425, -8
  %427 = getelementptr inbounds i32, i32* %1, i64 %426
  %428 = load i32, i32* %427, align 4
  %429 = load i32, i32* %416, align 4
  %430 = mul nsw i32 %429, %428
  %431 = add nsw i64 %425, -7
  %432 = getelementptr inbounds i32, i32* %1, i64 %431
  %433 = load i32, i32* %432, align 4
  %434 = mul nsw i32 %433, %429
  %435 = load i32, i32* %417, align 4
  %436 = mul nsw i32 %435, %433
  %437 = add nsw i32 %436, %430
  %438 = add nsw i64 %425, -6
  %439 = getelementptr inbounds i32, i32* %1, i64 %438
  %440 = load i32, i32* %439, align 4
  %441 = mul nsw i32 %440, %435
  %442 = add nsw i32 %441, %434
  %443 = load i32, i32* %418, align 4
  %444 = mul nsw i32 %443, %440
  %445 = add nsw i32 %437, %444
  %446 = add nsw i64 %425, -5
  %447 = getelementptr inbounds i32, i32* %1, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = mul nsw i32 %448, %443
  %450 = add nsw i32 %442, %449
  %451 = load i32, i32* %419, align 4
  %452 = mul nsw i32 %451, %448
  %453 = add nsw i32 %445, %452
  %454 = add nsw i64 %425, -4
  %455 = getelementptr inbounds i32, i32* %1, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = mul nsw i32 %456, %451
  %458 = add nsw i32 %450, %457
  %459 = load i32, i32* %420, align 4
  %460 = mul nsw i32 %459, %456
  %461 = add nsw i32 %453, %460
  %462 = add nsw i64 %425, -3
  %463 = getelementptr inbounds i32, i32* %1, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = mul nsw i32 %464, %459
  %466 = add nsw i32 %458, %465
  %467 = load i32, i32* %421, align 4
  %468 = mul nsw i32 %467, %464
  %469 = add nsw i32 %461, %468
  %470 = add nsw i64 %425, -2
  %471 = getelementptr inbounds i32, i32* %1, i64 %470
  %472 = load i32, i32* %471, align 4
  %473 = mul nsw i32 %472, %467
  %474 = add nsw i32 %466, %473
  %475 = load i32, i32* %422, align 4
  %476 = mul nsw i32 %475, %472
  %477 = add nsw i32 %469, %476
  %478 = add nsw i64 %425, -1
  %479 = getelementptr inbounds i32, i32* %1, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = mul nsw i32 %480, %475
  %482 = add nsw i32 %474, %481
  %483 = load i32, i32* %4, align 4
  %484 = mul nsw i32 %483, %480
  %485 = add nsw i32 %477, %484
  %486 = getelementptr inbounds i32, i32* %1, i64 %425
  %487 = load i32, i32* %486, align 4
  %488 = mul nsw i32 %487, %483
  %489 = add nsw i32 %482, %488
  %490 = ashr i32 %485, %5
  %491 = sub nsw i32 %487, %490
  %492 = getelementptr inbounds i32, i32* %0, i64 %425
  store i32 %491, i32* %492, align 4
  %493 = or i64 %425, 1
  %494 = getelementptr inbounds i32, i32* %1, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = ashr i32 %489, %5
  %497 = sub nsw i32 %495, %496
  %498 = getelementptr inbounds i32, i32* %0, i64 %493
  store i32 %497, i32* %498, align 4
  %499 = add nuw nsw i64 %425, 2
  %500 = icmp slt i64 %499, %423
  br i1 %500, label %424, label %906

501:                                              ; preds = %48
  %502 = icmp slt i32 %3, %2
  br i1 %502, label %503, label %906

503:                                              ; preds = %501
  %504 = getelementptr inbounds i32, i32* %4, i64 31
  %505 = getelementptr inbounds i32, i32* %4, i64 30
  %506 = getelementptr inbounds i32, i32* %4, i64 29
  %507 = getelementptr inbounds i32, i32* %4, i64 28
  %508 = getelementptr inbounds i32, i32* %4, i64 27
  %509 = getelementptr inbounds i32, i32* %4, i64 26
  %510 = getelementptr inbounds i32, i32* %4, i64 25
  %511 = getelementptr inbounds i32, i32* %4, i64 24
  %512 = getelementptr inbounds i32, i32* %4, i64 23
  %513 = getelementptr inbounds i32, i32* %4, i64 22
  %514 = getelementptr inbounds i32, i32* %4, i64 21
  %515 = getelementptr inbounds i32, i32* %4, i64 20
  %516 = getelementptr inbounds i32, i32* %4, i64 19
  %517 = getelementptr inbounds i32, i32* %4, i64 18
  %518 = getelementptr inbounds i32, i32* %4, i64 17
  %519 = getelementptr inbounds i32, i32* %4, i64 16
  %520 = getelementptr inbounds i32, i32* %4, i64 15
  %521 = getelementptr inbounds i32, i32* %4, i64 14
  %522 = getelementptr inbounds i32, i32* %4, i64 13
  %523 = getelementptr inbounds i32, i32* %4, i64 12
  %524 = getelementptr inbounds i32, i32* %4, i64 11
  %525 = getelementptr inbounds i32, i32* %4, i64 10
  %526 = getelementptr inbounds i32, i32* %4, i64 9
  %527 = getelementptr inbounds i32, i32* %4, i64 8
  %528 = getelementptr inbounds i32, i32* %4, i64 7
  %529 = getelementptr inbounds i32, i32* %4, i64 6
  %530 = getelementptr inbounds i32, i32* %4, i64 5
  %531 = getelementptr inbounds i32, i32* %4, i64 4
  %532 = getelementptr inbounds i32, i32* %4, i64 3
  %533 = getelementptr inbounds i32, i32* %4, i64 2
  %534 = getelementptr inbounds i32, i32* %4, i64 1
  %535 = sext i32 %3 to i64
  %536 = sext i32 %2 to i64
  br label %537

537:                                              ; preds = %891, %503
  %538 = phi i64 [ %535, %503 ], [ %904, %891 ]
  %539 = sub nsw i64 %538, %535
  %540 = getelementptr inbounds i32, i32* %1, i64 %539
  %541 = load i32, i32* %540, align 4
  switch i32 %3, label %542 [
    i32 32, label %545
    i32 31, label %552
    i32 30, label %564
    i32 29, label %576
    i32 28, label %588
    i32 27, label %600
    i32 26, label %612
    i32 25, label %624
    i32 24, label %636
    i32 23, label %648
    i32 22, label %660
    i32 21, label %672
    i32 20, label %684
    i32 19, label %696
    i32 18, label %708
    i32 17, label %720
    i32 16, label %732
    i32 15, label %744
    i32 14, label %756
    i32 13, label %768
    i32 12, label %780
    i32 11, label %792
    i32 10, label %804
    i32 9, label %816
  ]

542:                                              ; preds = %537
  %543 = getelementptr inbounds i32, i32* %1, i64 %538
  %544 = load i32, i32* %543, align 4
  br label %891

545:                                              ; preds = %537
  %546 = load i32, i32* %504, align 4
  %547 = mul nsw i32 %546, %541
  %548 = add nsw i64 %538, -31
  %549 = getelementptr inbounds i32, i32* %1, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = mul nsw i32 %550, %546
  br label %552

552:                                              ; preds = %545, %537
  %553 = phi i32 [ 0, %537 ], [ %551, %545 ]
  %554 = phi i32 [ 0, %537 ], [ %547, %545 ]
  %555 = phi i32 [ %541, %537 ], [ %550, %545 ]
  %556 = load i32, i32* %505, align 4
  %557 = mul nsw i32 %556, %555
  %558 = add nsw i32 %557, %554
  %559 = add nsw i64 %538, -30
  %560 = getelementptr inbounds i32, i32* %1, i64 %559
  %561 = load i32, i32* %560, align 4
  %562 = mul nsw i32 %561, %556
  %563 = add nsw i32 %562, %553
  br label %564

564:                                              ; preds = %552, %537
  %565 = phi i32 [ 0, %537 ], [ %563, %552 ]
  %566 = phi i32 [ 0, %537 ], [ %558, %552 ]
  %567 = phi i32 [ %541, %537 ], [ %561, %552 ]
  %568 = load i32, i32* %506, align 4
  %569 = mul nsw i32 %568, %567
  %570 = add nsw i32 %569, %566
  %571 = add nsw i64 %538, -29
  %572 = getelementptr inbounds i32, i32* %1, i64 %571
  %573 = load i32, i32* %572, align 4
  %574 = mul nsw i32 %573, %568
  %575 = add nsw i32 %574, %565
  br label %576

576:                                              ; preds = %564, %537
  %577 = phi i32 [ 0, %537 ], [ %575, %564 ]
  %578 = phi i32 [ 0, %537 ], [ %570, %564 ]
  %579 = phi i32 [ %541, %537 ], [ %573, %564 ]
  %580 = load i32, i32* %507, align 4
  %581 = mul nsw i32 %580, %579
  %582 = add nsw i32 %581, %578
  %583 = add nsw i64 %538, -28
  %584 = getelementptr inbounds i32, i32* %1, i64 %583
  %585 = load i32, i32* %584, align 4
  %586 = mul nsw i32 %585, %580
  %587 = add nsw i32 %586, %577
  br label %588

588:                                              ; preds = %576, %537
  %589 = phi i32 [ 0, %537 ], [ %587, %576 ]
  %590 = phi i32 [ 0, %537 ], [ %582, %576 ]
  %591 = phi i32 [ %541, %537 ], [ %585, %576 ]
  %592 = load i32, i32* %508, align 4
  %593 = mul nsw i32 %592, %591
  %594 = add nsw i32 %593, %590
  %595 = add nsw i64 %538, -27
  %596 = getelementptr inbounds i32, i32* %1, i64 %595
  %597 = load i32, i32* %596, align 4
  %598 = mul nsw i32 %597, %592
  %599 = add nsw i32 %598, %589
  br label %600

600:                                              ; preds = %588, %537
  %601 = phi i32 [ 0, %537 ], [ %599, %588 ]
  %602 = phi i32 [ 0, %537 ], [ %594, %588 ]
  %603 = phi i32 [ %541, %537 ], [ %597, %588 ]
  %604 = load i32, i32* %509, align 4
  %605 = mul nsw i32 %604, %603
  %606 = add nsw i32 %605, %602
  %607 = add nsw i64 %538, -26
  %608 = getelementptr inbounds i32, i32* %1, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = mul nsw i32 %609, %604
  %611 = add nsw i32 %610, %601
  br label %612

612:                                              ; preds = %600, %537
  %613 = phi i32 [ 0, %537 ], [ %611, %600 ]
  %614 = phi i32 [ 0, %537 ], [ %606, %600 ]
  %615 = phi i32 [ %541, %537 ], [ %609, %600 ]
  %616 = load i32, i32* %510, align 4
  %617 = mul nsw i32 %616, %615
  %618 = add nsw i32 %617, %614
  %619 = add nsw i64 %538, -25
  %620 = getelementptr inbounds i32, i32* %1, i64 %619
  %621 = load i32, i32* %620, align 4
  %622 = mul nsw i32 %621, %616
  %623 = add nsw i32 %622, %613
  br label %624

624:                                              ; preds = %612, %537
  %625 = phi i32 [ 0, %537 ], [ %623, %612 ]
  %626 = phi i32 [ 0, %537 ], [ %618, %612 ]
  %627 = phi i32 [ %541, %537 ], [ %621, %612 ]
  %628 = load i32, i32* %511, align 4
  %629 = mul nsw i32 %628, %627
  %630 = add nsw i32 %629, %626
  %631 = add nsw i64 %538, -24
  %632 = getelementptr inbounds i32, i32* %1, i64 %631
  %633 = load i32, i32* %632, align 4
  %634 = mul nsw i32 %633, %628
  %635 = add nsw i32 %634, %625
  br label %636

636:                                              ; preds = %624, %537
  %637 = phi i32 [ 0, %537 ], [ %635, %624 ]
  %638 = phi i32 [ 0, %537 ], [ %630, %624 ]
  %639 = phi i32 [ %541, %537 ], [ %633, %624 ]
  %640 = load i32, i32* %512, align 4
  %641 = mul nsw i32 %640, %639
  %642 = add nsw i32 %641, %638
  %643 = add nsw i64 %538, -23
  %644 = getelementptr inbounds i32, i32* %1, i64 %643
  %645 = load i32, i32* %644, align 4
  %646 = mul nsw i32 %645, %640
  %647 = add nsw i32 %646, %637
  br label %648

648:                                              ; preds = %636, %537
  %649 = phi i32 [ 0, %537 ], [ %647, %636 ]
  %650 = phi i32 [ 0, %537 ], [ %642, %636 ]
  %651 = phi i32 [ %541, %537 ], [ %645, %636 ]
  %652 = load i32, i32* %513, align 4
  %653 = mul nsw i32 %652, %651
  %654 = add nsw i32 %653, %650
  %655 = add nsw i64 %538, -22
  %656 = getelementptr inbounds i32, i32* %1, i64 %655
  %657 = load i32, i32* %656, align 4
  %658 = mul nsw i32 %657, %652
  %659 = add nsw i32 %658, %649
  br label %660

660:                                              ; preds = %648, %537
  %661 = phi i32 [ 0, %537 ], [ %659, %648 ]
  %662 = phi i32 [ 0, %537 ], [ %654, %648 ]
  %663 = phi i32 [ %541, %537 ], [ %657, %648 ]
  %664 = load i32, i32* %514, align 4
  %665 = mul nsw i32 %664, %663
  %666 = add nsw i32 %665, %662
  %667 = add nsw i64 %538, -21
  %668 = getelementptr inbounds i32, i32* %1, i64 %667
  %669 = load i32, i32* %668, align 4
  %670 = mul nsw i32 %669, %664
  %671 = add nsw i32 %670, %661
  br label %672

672:                                              ; preds = %660, %537
  %673 = phi i32 [ 0, %537 ], [ %671, %660 ]
  %674 = phi i32 [ 0, %537 ], [ %666, %660 ]
  %675 = phi i32 [ %541, %537 ], [ %669, %660 ]
  %676 = load i32, i32* %515, align 4
  %677 = mul nsw i32 %676, %675
  %678 = add nsw i32 %677, %674
  %679 = add nsw i64 %538, -20
  %680 = getelementptr inbounds i32, i32* %1, i64 %679
  %681 = load i32, i32* %680, align 4
  %682 = mul nsw i32 %681, %676
  %683 = add nsw i32 %682, %673
  br label %684

684:                                              ; preds = %672, %537
  %685 = phi i32 [ 0, %537 ], [ %683, %672 ]
  %686 = phi i32 [ 0, %537 ], [ %678, %672 ]
  %687 = phi i32 [ %541, %537 ], [ %681, %672 ]
  %688 = load i32, i32* %516, align 4
  %689 = mul nsw i32 %688, %687
  %690 = add nsw i32 %689, %686
  %691 = add nsw i64 %538, -19
  %692 = getelementptr inbounds i32, i32* %1, i64 %691
  %693 = load i32, i32* %692, align 4
  %694 = mul nsw i32 %693, %688
  %695 = add nsw i32 %694, %685
  br label %696

696:                                              ; preds = %684, %537
  %697 = phi i32 [ 0, %537 ], [ %695, %684 ]
  %698 = phi i32 [ 0, %537 ], [ %690, %684 ]
  %699 = phi i32 [ %541, %537 ], [ %693, %684 ]
  %700 = load i32, i32* %517, align 4
  %701 = mul nsw i32 %700, %699
  %702 = add nsw i32 %701, %698
  %703 = add nsw i64 %538, -18
  %704 = getelementptr inbounds i32, i32* %1, i64 %703
  %705 = load i32, i32* %704, align 4
  %706 = mul nsw i32 %705, %700
  %707 = add nsw i32 %706, %697
  br label %708

708:                                              ; preds = %696, %537
  %709 = phi i32 [ 0, %537 ], [ %707, %696 ]
  %710 = phi i32 [ 0, %537 ], [ %702, %696 ]
  %711 = phi i32 [ %541, %537 ], [ %705, %696 ]
  %712 = load i32, i32* %518, align 4
  %713 = mul nsw i32 %712, %711
  %714 = add nsw i32 %713, %710
  %715 = add nsw i64 %538, -17
  %716 = getelementptr inbounds i32, i32* %1, i64 %715
  %717 = load i32, i32* %716, align 4
  %718 = mul nsw i32 %717, %712
  %719 = add nsw i32 %718, %709
  br label %720

720:                                              ; preds = %708, %537
  %721 = phi i32 [ 0, %537 ], [ %719, %708 ]
  %722 = phi i32 [ 0, %537 ], [ %714, %708 ]
  %723 = phi i32 [ %541, %537 ], [ %717, %708 ]
  %724 = load i32, i32* %519, align 4
  %725 = mul nsw i32 %724, %723
  %726 = add nsw i32 %725, %722
  %727 = add nsw i64 %538, -16
  %728 = getelementptr inbounds i32, i32* %1, i64 %727
  %729 = load i32, i32* %728, align 4
  %730 = mul nsw i32 %729, %724
  %731 = add nsw i32 %730, %721
  br label %732

732:                                              ; preds = %720, %537
  %733 = phi i32 [ 0, %537 ], [ %731, %720 ]
  %734 = phi i32 [ 0, %537 ], [ %726, %720 ]
  %735 = phi i32 [ %541, %537 ], [ %729, %720 ]
  %736 = load i32, i32* %520, align 4
  %737 = mul nsw i32 %736, %735
  %738 = add nsw i32 %737, %734
  %739 = add nsw i64 %538, -15
  %740 = getelementptr inbounds i32, i32* %1, i64 %739
  %741 = load i32, i32* %740, align 4
  %742 = mul nsw i32 %741, %736
  %743 = add nsw i32 %742, %733
  br label %744

744:                                              ; preds = %732, %537
  %745 = phi i32 [ 0, %537 ], [ %743, %732 ]
  %746 = phi i32 [ 0, %537 ], [ %738, %732 ]
  %747 = phi i32 [ %541, %537 ], [ %741, %732 ]
  %748 = load i32, i32* %521, align 4
  %749 = mul nsw i32 %748, %747
  %750 = add nsw i32 %749, %746
  %751 = add nsw i64 %538, -14
  %752 = getelementptr inbounds i32, i32* %1, i64 %751
  %753 = load i32, i32* %752, align 4
  %754 = mul nsw i32 %753, %748
  %755 = add nsw i32 %754, %745
  br label %756

756:                                              ; preds = %744, %537
  %757 = phi i32 [ 0, %537 ], [ %755, %744 ]
  %758 = phi i32 [ 0, %537 ], [ %750, %744 ]
  %759 = phi i32 [ %541, %537 ], [ %753, %744 ]
  %760 = load i32, i32* %522, align 4
  %761 = mul nsw i32 %760, %759
  %762 = add nsw i32 %761, %758
  %763 = add nsw i64 %538, -13
  %764 = getelementptr inbounds i32, i32* %1, i64 %763
  %765 = load i32, i32* %764, align 4
  %766 = mul nsw i32 %765, %760
  %767 = add nsw i32 %766, %757
  br label %768

768:                                              ; preds = %756, %537
  %769 = phi i32 [ 0, %537 ], [ %767, %756 ]
  %770 = phi i32 [ 0, %537 ], [ %762, %756 ]
  %771 = phi i32 [ %541, %537 ], [ %765, %756 ]
  %772 = load i32, i32* %523, align 4
  %773 = mul nsw i32 %772, %771
  %774 = add nsw i32 %773, %770
  %775 = add nsw i64 %538, -12
  %776 = getelementptr inbounds i32, i32* %1, i64 %775
  %777 = load i32, i32* %776, align 4
  %778 = mul nsw i32 %777, %772
  %779 = add nsw i32 %778, %769
  br label %780

780:                                              ; preds = %768, %537
  %781 = phi i32 [ 0, %537 ], [ %779, %768 ]
  %782 = phi i32 [ 0, %537 ], [ %774, %768 ]
  %783 = phi i32 [ %541, %537 ], [ %777, %768 ]
  %784 = load i32, i32* %524, align 4
  %785 = mul nsw i32 %784, %783
  %786 = add nsw i32 %785, %782
  %787 = add nsw i64 %538, -11
  %788 = getelementptr inbounds i32, i32* %1, i64 %787
  %789 = load i32, i32* %788, align 4
  %790 = mul nsw i32 %789, %784
  %791 = add nsw i32 %790, %781
  br label %792

792:                                              ; preds = %780, %537
  %793 = phi i32 [ 0, %537 ], [ %791, %780 ]
  %794 = phi i32 [ 0, %537 ], [ %786, %780 ]
  %795 = phi i32 [ %541, %537 ], [ %789, %780 ]
  %796 = load i32, i32* %525, align 4
  %797 = mul nsw i32 %796, %795
  %798 = add nsw i32 %797, %794
  %799 = add nsw i64 %538, -10
  %800 = getelementptr inbounds i32, i32* %1, i64 %799
  %801 = load i32, i32* %800, align 4
  %802 = mul nsw i32 %801, %796
  %803 = add nsw i32 %802, %793
  br label %804

804:                                              ; preds = %792, %537
  %805 = phi i32 [ 0, %537 ], [ %803, %792 ]
  %806 = phi i32 [ 0, %537 ], [ %798, %792 ]
  %807 = phi i32 [ %541, %537 ], [ %801, %792 ]
  %808 = load i32, i32* %526, align 4
  %809 = mul nsw i32 %808, %807
  %810 = add nsw i32 %809, %806
  %811 = add nsw i64 %538, -9
  %812 = getelementptr inbounds i32, i32* %1, i64 %811
  %813 = load i32, i32* %812, align 4
  %814 = mul nsw i32 %813, %808
  %815 = add nsw i32 %814, %805
  br label %816

816:                                              ; preds = %804, %537
  %817 = phi i32 [ 0, %537 ], [ %815, %804 ]
  %818 = phi i32 [ 0, %537 ], [ %810, %804 ]
  %819 = phi i32 [ %541, %537 ], [ %813, %804 ]
  %820 = load i32, i32* %527, align 4
  %821 = mul nsw i32 %820, %819
  %822 = add nsw i32 %821, %818
  %823 = add nsw i64 %538, -8
  %824 = getelementptr inbounds i32, i32* %1, i64 %823
  %825 = load i32, i32* %824, align 4
  %826 = mul nsw i32 %825, %820
  %827 = add nsw i32 %826, %817
  %828 = load i32, i32* %528, align 4
  %829 = mul nsw i32 %828, %825
  %830 = add nsw i32 %822, %829
  %831 = add nsw i64 %538, -7
  %832 = getelementptr inbounds i32, i32* %1, i64 %831
  %833 = load i32, i32* %832, align 4
  %834 = mul nsw i32 %833, %828
  %835 = add nsw i32 %827, %834
  %836 = load i32, i32* %529, align 4
  %837 = mul nsw i32 %836, %833
  %838 = add nsw i32 %830, %837
  %839 = add nsw i64 %538, -6
  %840 = getelementptr inbounds i32, i32* %1, i64 %839
  %841 = load i32, i32* %840, align 4
  %842 = mul nsw i32 %841, %836
  %843 = add nsw i32 %835, %842
  %844 = load i32, i32* %530, align 4
  %845 = mul nsw i32 %844, %841
  %846 = add nsw i32 %838, %845
  %847 = add nsw i64 %538, -5
  %848 = getelementptr inbounds i32, i32* %1, i64 %847
  %849 = load i32, i32* %848, align 4
  %850 = mul nsw i32 %849, %844
  %851 = add nsw i32 %843, %850
  %852 = load i32, i32* %531, align 4
  %853 = mul nsw i32 %852, %849
  %854 = add nsw i32 %846, %853
  %855 = add nsw i64 %538, -4
  %856 = getelementptr inbounds i32, i32* %1, i64 %855
  %857 = load i32, i32* %856, align 4
  %858 = mul nsw i32 %857, %852
  %859 = add nsw i32 %851, %858
  %860 = load i32, i32* %532, align 4
  %861 = mul nsw i32 %860, %857
  %862 = add nsw i32 %854, %861
  %863 = add nsw i64 %538, -3
  %864 = getelementptr inbounds i32, i32* %1, i64 %863
  %865 = load i32, i32* %864, align 4
  %866 = mul nsw i32 %865, %860
  %867 = add nsw i32 %859, %866
  %868 = load i32, i32* %533, align 4
  %869 = mul nsw i32 %868, %865
  %870 = add nsw i32 %862, %869
  %871 = add nsw i64 %538, -2
  %872 = getelementptr inbounds i32, i32* %1, i64 %871
  %873 = load i32, i32* %872, align 4
  %874 = mul nsw i32 %873, %868
  %875 = add nsw i32 %867, %874
  %876 = load i32, i32* %534, align 4
  %877 = mul nsw i32 %876, %873
  %878 = add nsw i32 %870, %877
  %879 = add nsw i64 %538, -1
  %880 = getelementptr inbounds i32, i32* %1, i64 %879
  %881 = load i32, i32* %880, align 4
  %882 = mul nsw i32 %881, %876
  %883 = add nsw i32 %875, %882
  %884 = load i32, i32* %4, align 4
  %885 = mul nsw i32 %884, %881
  %886 = add nsw i32 %878, %885
  %887 = getelementptr inbounds i32, i32* %1, i64 %538
  %888 = load i32, i32* %887, align 4
  %889 = mul nsw i32 %888, %884
  %890 = add nsw i32 %883, %889
  br label %891

891:                                              ; preds = %542, %816
  %892 = phi i32 [ %544, %542 ], [ %888, %816 ]
  %893 = phi i32 [ 0, %542 ], [ %890, %816 ]
  %894 = phi i32 [ 0, %542 ], [ %886, %816 ]
  %895 = ashr i32 %894, %5
  %896 = sub nsw i32 %892, %895
  %897 = getelementptr inbounds i32, i32* %0, i64 %538
  store i32 %896, i32* %897, align 4
  %898 = add nsw i64 %538, 1
  %899 = getelementptr inbounds i32, i32* %1, i64 %898
  %900 = load i32, i32* %899, align 4
  %901 = ashr i32 %893, %5
  %902 = sub nsw i32 %900, %901
  %903 = getelementptr inbounds i32, i32* %0, i64 %898
  store i32 %902, i32* %903, align 4
  %904 = add nsw i64 %538, 2
  %905 = icmp slt i64 %904, %536
  br i1 %905, label %537, label %906

906:                                              ; preds = %424, %344, %273, %211, %158, %114, %79, %53, %891, %501, %413, %334, %264, %203, %151, %108, %74, %49
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_lpc_encode_c_32(i32* nocapture, i32* readonly, i32, i32, i32* readonly, i32) #1 {
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %48

8:                                                ; preds = %6
  %9 = zext i32 %3 to i64
  %10 = add nsw i64 %9, -1
  %11 = and i64 %9, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %36, label %13

13:                                               ; preds = %8
  %14 = sub nsw i64 %9, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %33, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %34, %15 ]
  %18 = getelementptr inbounds i32, i32* %1, i64 %16
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds i32, i32* %0, i64 %16
  store i32 %19, i32* %20, align 4
  %21 = or i64 %16, 1
  %22 = getelementptr inbounds i32, i32* %1, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds i32, i32* %0, i64 %21
  store i32 %23, i32* %24, align 4
  %25 = or i64 %16, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %0, i64 %25
  store i32 %27, i32* %28, align 4
  %29 = or i64 %16, 3
  %30 = getelementptr inbounds i32, i32* %1, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i32, i32* %0, i64 %29
  store i32 %31, i32* %32, align 4
  %33 = add nuw nsw i64 %16, 4
  %34 = add i64 %17, -4
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %15

36:                                               ; preds = %15, %8
  %37 = phi i64 [ 0, %8 ], [ %33, %15 ]
  %38 = icmp eq i64 %11, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %36, %39
  %40 = phi i64 [ %45, %39 ], [ %37, %36 ]
  %41 = phi i64 [ %46, %39 ], [ %11, %36 ]
  %42 = getelementptr inbounds i32, i32* %1, i64 %40
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds i32, i32* %0, i64 %40
  store i32 %43, i32* %44, align 4
  %45 = add nuw nsw i64 %40, 1
  %46 = add i64 %41, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %39, !llvm.loop !6

48:                                               ; preds = %36, %39, %6
  switch i32 %3, label %685 [
    i32 1, label %49
    i32 2, label %90
    i32 3, label %142
    i32 4, label %205
    i32 5, label %279
    i32 6, label %364
    i32 7, label %460
    i32 8, label %567
  ]

49:                                               ; preds = %48
  %50 = icmp sgt i32 %2, 1
  br i1 %50, label %51, label %1214

51:                                               ; preds = %49
  %52 = zext i32 %5 to i64
  %53 = sext i32 %2 to i64
  br label %54

54:                                               ; preds = %54, %51
  %55 = phi i64 [ 1, %51 ], [ %88, %54 ]
  %56 = add nsw i64 %55, -1
  %57 = getelementptr inbounds i32, i32* %1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = load i32, i32* %4, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %61, %59
  %63 = getelementptr inbounds i32, i32* %1, i64 %55
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = mul nsw i64 %65, %61
  %67 = ashr i64 %62, %52
  %68 = add nsw i64 %67, 2147483648
  %69 = icmp ugt i64 %68, 4294967295
  %70 = ashr i64 %67, 63
  %71 = xor i64 %70, 2147483647
  %72 = select i1 %69, i64 %71, i64 %67
  %73 = trunc i64 %72 to i32
  %74 = sub nsw i32 %64, %73
  %75 = getelementptr inbounds i32, i32* %0, i64 %55
  store i32 %74, i32* %75, align 4
  %76 = add nuw nsw i64 %55, 1
  %77 = getelementptr inbounds i32, i32* %1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = ashr i64 %66, %52
  %80 = add nsw i64 %79, 2147483648
  %81 = icmp ugt i64 %80, 4294967295
  %82 = ashr i64 %79, 63
  %83 = xor i64 %82, 2147483647
  %84 = select i1 %81, i64 %83, i64 %79
  %85 = trunc i64 %84 to i32
  %86 = sub nsw i32 %78, %85
  %87 = getelementptr inbounds i32, i32* %0, i64 %76
  store i32 %86, i32* %87, align 4
  %88 = add nuw nsw i64 %55, 2
  %89 = icmp slt i64 %88, %53
  br i1 %89, label %54, label %1214

90:                                               ; preds = %48
  %91 = icmp sgt i32 %2, 2
  br i1 %91, label %92, label %1214

92:                                               ; preds = %90
  %93 = getelementptr inbounds i32, i32* %4, i64 1
  %94 = zext i32 %5 to i64
  %95 = sext i32 %2 to i64
  br label %96

96:                                               ; preds = %96, %92
  %97 = phi i64 [ 2, %92 ], [ %140, %96 ]
  %98 = add nsw i64 %97, -2
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = load i32, i32* %93, align 4
  %103 = sext i32 %102 to i64
  %104 = mul nsw i64 %103, %101
  %105 = add nsw i64 %97, -1
  %106 = getelementptr inbounds i32, i32* %1, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = mul nsw i64 %108, %103
  %110 = load i32, i32* %4, align 4
  %111 = sext i32 %110 to i64
  %112 = mul nsw i64 %111, %108
  %113 = add nsw i64 %112, %104
  %114 = getelementptr inbounds i32, i32* %1, i64 %97
  %115 = load i32, i32* %114, align 4
  %116 = sext i32 %115 to i64
  %117 = mul nsw i64 %116, %111
  %118 = add nsw i64 %117, %109
  %119 = ashr i64 %113, %94
  %120 = add nsw i64 %119, 2147483648
  %121 = icmp ugt i64 %120, 4294967295
  %122 = ashr i64 %119, 63
  %123 = xor i64 %122, 2147483647
  %124 = select i1 %121, i64 %123, i64 %119
  %125 = trunc i64 %124 to i32
  %126 = sub nsw i32 %115, %125
  %127 = getelementptr inbounds i32, i32* %0, i64 %97
  store i32 %126, i32* %127, align 4
  %128 = or i64 %97, 1
  %129 = getelementptr inbounds i32, i32* %1, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = ashr i64 %118, %94
  %132 = add nsw i64 %131, 2147483648
  %133 = icmp ugt i64 %132, 4294967295
  %134 = ashr i64 %131, 63
  %135 = xor i64 %134, 2147483647
  %136 = select i1 %133, i64 %135, i64 %131
  %137 = trunc i64 %136 to i32
  %138 = sub nsw i32 %130, %137
  %139 = getelementptr inbounds i32, i32* %0, i64 %128
  store i32 %138, i32* %139, align 4
  %140 = add nuw nsw i64 %97, 2
  %141 = icmp slt i64 %140, %95
  br i1 %141, label %96, label %1214

142:                                              ; preds = %48
  %143 = icmp sgt i32 %2, 3
  br i1 %143, label %144, label %1214

144:                                              ; preds = %142
  %145 = getelementptr inbounds i32, i32* %4, i64 2
  %146 = getelementptr inbounds i32, i32* %4, i64 1
  %147 = zext i32 %5 to i64
  %148 = sext i32 %2 to i64
  br label %149

149:                                              ; preds = %149, %144
  %150 = phi i64 [ 3, %144 ], [ %203, %149 ]
  %151 = add nsw i64 %150, -3
  %152 = getelementptr inbounds i32, i32* %1, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = load i32, i32* %145, align 4
  %156 = sext i32 %155 to i64
  %157 = mul nsw i64 %156, %154
  %158 = add nsw i64 %150, -2
  %159 = getelementptr inbounds i32, i32* %1, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = mul nsw i64 %161, %156
  %163 = load i32, i32* %146, align 4
  %164 = sext i32 %163 to i64
  %165 = mul nsw i64 %164, %161
  %166 = add nsw i64 %165, %157
  %167 = add nsw i64 %150, -1
  %168 = getelementptr inbounds i32, i32* %1, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = mul nsw i64 %170, %164
  %172 = add nsw i64 %171, %162
  %173 = load i32, i32* %4, align 4
  %174 = sext i32 %173 to i64
  %175 = mul nsw i64 %174, %170
  %176 = add nsw i64 %166, %175
  %177 = getelementptr inbounds i32, i32* %1, i64 %150
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = mul nsw i64 %179, %174
  %181 = add nsw i64 %172, %180
  %182 = ashr i64 %176, %147
  %183 = add nsw i64 %182, 2147483648
  %184 = icmp ugt i64 %183, 4294967295
  %185 = ashr i64 %182, 63
  %186 = xor i64 %185, 2147483647
  %187 = select i1 %184, i64 %186, i64 %182
  %188 = trunc i64 %187 to i32
  %189 = sub nsw i32 %178, %188
  %190 = getelementptr inbounds i32, i32* %0, i64 %150
  store i32 %189, i32* %190, align 4
  %191 = add nuw nsw i64 %150, 1
  %192 = getelementptr inbounds i32, i32* %1, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = ashr i64 %181, %147
  %195 = add nsw i64 %194, 2147483648
  %196 = icmp ugt i64 %195, 4294967295
  %197 = ashr i64 %194, 63
  %198 = xor i64 %197, 2147483647
  %199 = select i1 %196, i64 %198, i64 %194
  %200 = trunc i64 %199 to i32
  %201 = sub nsw i32 %193, %200
  %202 = getelementptr inbounds i32, i32* %0, i64 %191
  store i32 %201, i32* %202, align 4
  %203 = add nuw nsw i64 %150, 2
  %204 = icmp slt i64 %203, %148
  br i1 %204, label %149, label %1214

205:                                              ; preds = %48
  %206 = icmp sgt i32 %2, 4
  br i1 %206, label %207, label %1214

207:                                              ; preds = %205
  %208 = getelementptr inbounds i32, i32* %4, i64 3
  %209 = getelementptr inbounds i32, i32* %4, i64 2
  %210 = getelementptr inbounds i32, i32* %4, i64 1
  %211 = zext i32 %5 to i64
  %212 = sext i32 %2 to i64
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 4, %207 ], [ %277, %213 ]
  %215 = add nsw i64 %214, -4
  %216 = getelementptr inbounds i32, i32* %1, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = load i32, i32* %208, align 4
  %220 = sext i32 %219 to i64
  %221 = mul nsw i64 %220, %218
  %222 = add nsw i64 %214, -3
  %223 = getelementptr inbounds i32, i32* %1, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = mul nsw i64 %225, %220
  %227 = load i32, i32* %209, align 4
  %228 = sext i32 %227 to i64
  %229 = mul nsw i64 %228, %225
  %230 = add nsw i64 %229, %221
  %231 = add nsw i64 %214, -2
  %232 = getelementptr inbounds i32, i32* %1, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = mul nsw i64 %234, %228
  %236 = add nsw i64 %235, %226
  %237 = load i32, i32* %210, align 4
  %238 = sext i32 %237 to i64
  %239 = mul nsw i64 %238, %234
  %240 = add nsw i64 %230, %239
  %241 = add nsw i64 %214, -1
  %242 = getelementptr inbounds i32, i32* %1, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = mul nsw i64 %244, %238
  %246 = add nsw i64 %236, %245
  %247 = load i32, i32* %4, align 4
  %248 = sext i32 %247 to i64
  %249 = mul nsw i64 %248, %244
  %250 = add nsw i64 %240, %249
  %251 = getelementptr inbounds i32, i32* %1, i64 %214
  %252 = load i32, i32* %251, align 4
  %253 = sext i32 %252 to i64
  %254 = mul nsw i64 %253, %248
  %255 = add nsw i64 %246, %254
  %256 = ashr i64 %250, %211
  %257 = add nsw i64 %256, 2147483648
  %258 = icmp ugt i64 %257, 4294967295
  %259 = ashr i64 %256, 63
  %260 = xor i64 %259, 2147483647
  %261 = select i1 %258, i64 %260, i64 %256
  %262 = trunc i64 %261 to i32
  %263 = sub nsw i32 %252, %262
  %264 = getelementptr inbounds i32, i32* %0, i64 %214
  store i32 %263, i32* %264, align 4
  %265 = or i64 %214, 1
  %266 = getelementptr inbounds i32, i32* %1, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = ashr i64 %255, %211
  %269 = add nsw i64 %268, 2147483648
  %270 = icmp ugt i64 %269, 4294967295
  %271 = ashr i64 %268, 63
  %272 = xor i64 %271, 2147483647
  %273 = select i1 %270, i64 %272, i64 %268
  %274 = trunc i64 %273 to i32
  %275 = sub nsw i32 %267, %274
  %276 = getelementptr inbounds i32, i32* %0, i64 %265
  store i32 %275, i32* %276, align 4
  %277 = add nuw nsw i64 %214, 2
  %278 = icmp slt i64 %277, %212
  br i1 %278, label %213, label %1214

279:                                              ; preds = %48
  %280 = icmp sgt i32 %2, 5
  br i1 %280, label %281, label %1214

281:                                              ; preds = %279
  %282 = getelementptr inbounds i32, i32* %4, i64 4
  %283 = getelementptr inbounds i32, i32* %4, i64 3
  %284 = getelementptr inbounds i32, i32* %4, i64 2
  %285 = getelementptr inbounds i32, i32* %4, i64 1
  %286 = zext i32 %5 to i64
  %287 = sext i32 %2 to i64
  br label %288

288:                                              ; preds = %288, %281
  %289 = phi i64 [ 5, %281 ], [ %362, %288 ]
  %290 = add nsw i64 %289, -5
  %291 = getelementptr inbounds i32, i32* %1, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = sext i32 %292 to i64
  %294 = load i32, i32* %282, align 4
  %295 = sext i32 %294 to i64
  %296 = mul nsw i64 %295, %293
  %297 = add nsw i64 %289, -4
  %298 = getelementptr inbounds i32, i32* %1, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = mul nsw i64 %300, %295
  %302 = load i32, i32* %283, align 4
  %303 = sext i32 %302 to i64
  %304 = mul nsw i64 %303, %300
  %305 = add nsw i64 %304, %296
  %306 = add nsw i64 %289, -3
  %307 = getelementptr inbounds i32, i32* %1, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = sext i32 %308 to i64
  %310 = mul nsw i64 %309, %303
  %311 = add nsw i64 %310, %301
  %312 = load i32, i32* %284, align 4
  %313 = sext i32 %312 to i64
  %314 = mul nsw i64 %313, %309
  %315 = add nsw i64 %305, %314
  %316 = add nsw i64 %289, -2
  %317 = getelementptr inbounds i32, i32* %1, i64 %316
  %318 = load i32, i32* %317, align 4
  %319 = sext i32 %318 to i64
  %320 = mul nsw i64 %319, %313
  %321 = add nsw i64 %311, %320
  %322 = load i32, i32* %285, align 4
  %323 = sext i32 %322 to i64
  %324 = mul nsw i64 %323, %319
  %325 = add nsw i64 %315, %324
  %326 = add nsw i64 %289, -1
  %327 = getelementptr inbounds i32, i32* %1, i64 %326
  %328 = load i32, i32* %327, align 4
  %329 = sext i32 %328 to i64
  %330 = mul nsw i64 %329, %323
  %331 = add nsw i64 %321, %330
  %332 = load i32, i32* %4, align 4
  %333 = sext i32 %332 to i64
  %334 = mul nsw i64 %333, %329
  %335 = add nsw i64 %325, %334
  %336 = getelementptr inbounds i32, i32* %1, i64 %289
  %337 = load i32, i32* %336, align 4
  %338 = sext i32 %337 to i64
  %339 = mul nsw i64 %338, %333
  %340 = add nsw i64 %331, %339
  %341 = ashr i64 %335, %286
  %342 = add nsw i64 %341, 2147483648
  %343 = icmp ugt i64 %342, 4294967295
  %344 = ashr i64 %341, 63
  %345 = xor i64 %344, 2147483647
  %346 = select i1 %343, i64 %345, i64 %341
  %347 = trunc i64 %346 to i32
  %348 = sub nsw i32 %337, %347
  %349 = getelementptr inbounds i32, i32* %0, i64 %289
  store i32 %348, i32* %349, align 4
  %350 = add nuw nsw i64 %289, 1
  %351 = getelementptr inbounds i32, i32* %1, i64 %350
  %352 = load i32, i32* %351, align 4
  %353 = ashr i64 %340, %286
  %354 = add nsw i64 %353, 2147483648
  %355 = icmp ugt i64 %354, 4294967295
  %356 = ashr i64 %353, 63
  %357 = xor i64 %356, 2147483647
  %358 = select i1 %355, i64 %357, i64 %353
  %359 = trunc i64 %358 to i32
  %360 = sub nsw i32 %352, %359
  %361 = getelementptr inbounds i32, i32* %0, i64 %350
  store i32 %360, i32* %361, align 4
  %362 = add nuw nsw i64 %289, 2
  %363 = icmp slt i64 %362, %287
  br i1 %363, label %288, label %1214

364:                                              ; preds = %48
  %365 = icmp sgt i32 %2, 6
  br i1 %365, label %366, label %1214

366:                                              ; preds = %364
  %367 = getelementptr inbounds i32, i32* %4, i64 5
  %368 = getelementptr inbounds i32, i32* %4, i64 4
  %369 = getelementptr inbounds i32, i32* %4, i64 3
  %370 = getelementptr inbounds i32, i32* %4, i64 2
  %371 = getelementptr inbounds i32, i32* %4, i64 1
  %372 = zext i32 %5 to i64
  %373 = sext i32 %2 to i64
  br label %374

374:                                              ; preds = %374, %366
  %375 = phi i64 [ 6, %366 ], [ %458, %374 ]
  %376 = add nsw i64 %375, -6
  %377 = getelementptr inbounds i32, i32* %1, i64 %376
  %378 = load i32, i32* %377, align 4
  %379 = sext i32 %378 to i64
  %380 = load i32, i32* %367, align 4
  %381 = sext i32 %380 to i64
  %382 = mul nsw i64 %381, %379
  %383 = add nsw i64 %375, -5
  %384 = getelementptr inbounds i32, i32* %1, i64 %383
  %385 = load i32, i32* %384, align 4
  %386 = sext i32 %385 to i64
  %387 = mul nsw i64 %386, %381
  %388 = load i32, i32* %368, align 4
  %389 = sext i32 %388 to i64
  %390 = mul nsw i64 %389, %386
  %391 = add nsw i64 %390, %382
  %392 = add nsw i64 %375, -4
  %393 = getelementptr inbounds i32, i32* %1, i64 %392
  %394 = load i32, i32* %393, align 4
  %395 = sext i32 %394 to i64
  %396 = mul nsw i64 %395, %389
  %397 = add nsw i64 %396, %387
  %398 = load i32, i32* %369, align 4
  %399 = sext i32 %398 to i64
  %400 = mul nsw i64 %399, %395
  %401 = add nsw i64 %391, %400
  %402 = add nsw i64 %375, -3
  %403 = getelementptr inbounds i32, i32* %1, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = sext i32 %404 to i64
  %406 = mul nsw i64 %405, %399
  %407 = add nsw i64 %397, %406
  %408 = load i32, i32* %370, align 4
  %409 = sext i32 %408 to i64
  %410 = mul nsw i64 %409, %405
  %411 = add nsw i64 %401, %410
  %412 = add nsw i64 %375, -2
  %413 = getelementptr inbounds i32, i32* %1, i64 %412
  %414 = load i32, i32* %413, align 4
  %415 = sext i32 %414 to i64
  %416 = mul nsw i64 %415, %409
  %417 = add nsw i64 %407, %416
  %418 = load i32, i32* %371, align 4
  %419 = sext i32 %418 to i64
  %420 = mul nsw i64 %419, %415
  %421 = add nsw i64 %411, %420
  %422 = add nsw i64 %375, -1
  %423 = getelementptr inbounds i32, i32* %1, i64 %422
  %424 = load i32, i32* %423, align 4
  %425 = sext i32 %424 to i64
  %426 = mul nsw i64 %425, %419
  %427 = add nsw i64 %417, %426
  %428 = load i32, i32* %4, align 4
  %429 = sext i32 %428 to i64
  %430 = mul nsw i64 %429, %425
  %431 = add nsw i64 %421, %430
  %432 = getelementptr inbounds i32, i32* %1, i64 %375
  %433 = load i32, i32* %432, align 4
  %434 = sext i32 %433 to i64
  %435 = mul nsw i64 %434, %429
  %436 = add nsw i64 %427, %435
  %437 = ashr i64 %431, %372
  %438 = add nsw i64 %437, 2147483648
  %439 = icmp ugt i64 %438, 4294967295
  %440 = ashr i64 %437, 63
  %441 = xor i64 %440, 2147483647
  %442 = select i1 %439, i64 %441, i64 %437
  %443 = trunc i64 %442 to i32
  %444 = sub nsw i32 %433, %443
  %445 = getelementptr inbounds i32, i32* %0, i64 %375
  store i32 %444, i32* %445, align 4
  %446 = or i64 %375, 1
  %447 = getelementptr inbounds i32, i32* %1, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = ashr i64 %436, %372
  %450 = add nsw i64 %449, 2147483648
  %451 = icmp ugt i64 %450, 4294967295
  %452 = ashr i64 %449, 63
  %453 = xor i64 %452, 2147483647
  %454 = select i1 %451, i64 %453, i64 %449
  %455 = trunc i64 %454 to i32
  %456 = sub nsw i32 %448, %455
  %457 = getelementptr inbounds i32, i32* %0, i64 %446
  store i32 %456, i32* %457, align 4
  %458 = add nuw nsw i64 %375, 2
  %459 = icmp slt i64 %458, %373
  br i1 %459, label %374, label %1214

460:                                              ; preds = %48
  %461 = icmp sgt i32 %2, 7
  br i1 %461, label %462, label %1214

462:                                              ; preds = %460
  %463 = getelementptr inbounds i32, i32* %4, i64 6
  %464 = getelementptr inbounds i32, i32* %4, i64 5
  %465 = getelementptr inbounds i32, i32* %4, i64 4
  %466 = getelementptr inbounds i32, i32* %4, i64 3
  %467 = getelementptr inbounds i32, i32* %4, i64 2
  %468 = getelementptr inbounds i32, i32* %4, i64 1
  %469 = zext i32 %5 to i64
  %470 = sext i32 %2 to i64
  br label %471

471:                                              ; preds = %471, %462
  %472 = phi i64 [ 7, %462 ], [ %565, %471 ]
  %473 = add nsw i64 %472, -7
  %474 = getelementptr inbounds i32, i32* %1, i64 %473
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = load i32, i32* %463, align 4
  %478 = sext i32 %477 to i64
  %479 = mul nsw i64 %478, %476
  %480 = add nsw i64 %472, -6
  %481 = getelementptr inbounds i32, i32* %1, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = sext i32 %482 to i64
  %484 = mul nsw i64 %483, %478
  %485 = load i32, i32* %464, align 4
  %486 = sext i32 %485 to i64
  %487 = mul nsw i64 %486, %483
  %488 = add nsw i64 %487, %479
  %489 = add nsw i64 %472, -5
  %490 = getelementptr inbounds i32, i32* %1, i64 %489
  %491 = load i32, i32* %490, align 4
  %492 = sext i32 %491 to i64
  %493 = mul nsw i64 %492, %486
  %494 = add nsw i64 %493, %484
  %495 = load i32, i32* %465, align 4
  %496 = sext i32 %495 to i64
  %497 = mul nsw i64 %496, %492
  %498 = add nsw i64 %488, %497
  %499 = add nsw i64 %472, -4
  %500 = getelementptr inbounds i32, i32* %1, i64 %499
  %501 = load i32, i32* %500, align 4
  %502 = sext i32 %501 to i64
  %503 = mul nsw i64 %502, %496
  %504 = add nsw i64 %494, %503
  %505 = load i32, i32* %466, align 4
  %506 = sext i32 %505 to i64
  %507 = mul nsw i64 %506, %502
  %508 = add nsw i64 %498, %507
  %509 = add nsw i64 %472, -3
  %510 = getelementptr inbounds i32, i32* %1, i64 %509
  %511 = load i32, i32* %510, align 4
  %512 = sext i32 %511 to i64
  %513 = mul nsw i64 %512, %506
  %514 = add nsw i64 %504, %513
  %515 = load i32, i32* %467, align 4
  %516 = sext i32 %515 to i64
  %517 = mul nsw i64 %516, %512
  %518 = add nsw i64 %508, %517
  %519 = add nsw i64 %472, -2
  %520 = getelementptr inbounds i32, i32* %1, i64 %519
  %521 = load i32, i32* %520, align 4
  %522 = sext i32 %521 to i64
  %523 = mul nsw i64 %522, %516
  %524 = add nsw i64 %514, %523
  %525 = load i32, i32* %468, align 4
  %526 = sext i32 %525 to i64
  %527 = mul nsw i64 %526, %522
  %528 = add nsw i64 %518, %527
  %529 = add nsw i64 %472, -1
  %530 = getelementptr inbounds i32, i32* %1, i64 %529
  %531 = load i32, i32* %530, align 4
  %532 = sext i32 %531 to i64
  %533 = mul nsw i64 %532, %526
  %534 = add nsw i64 %524, %533
  %535 = load i32, i32* %4, align 4
  %536 = sext i32 %535 to i64
  %537 = mul nsw i64 %536, %532
  %538 = add nsw i64 %528, %537
  %539 = getelementptr inbounds i32, i32* %1, i64 %472
  %540 = load i32, i32* %539, align 4
  %541 = sext i32 %540 to i64
  %542 = mul nsw i64 %541, %536
  %543 = add nsw i64 %534, %542
  %544 = ashr i64 %538, %469
  %545 = add nsw i64 %544, 2147483648
  %546 = icmp ugt i64 %545, 4294967295
  %547 = ashr i64 %544, 63
  %548 = xor i64 %547, 2147483647
  %549 = select i1 %546, i64 %548, i64 %544
  %550 = trunc i64 %549 to i32
  %551 = sub nsw i32 %540, %550
  %552 = getelementptr inbounds i32, i32* %0, i64 %472
  store i32 %551, i32* %552, align 4
  %553 = add nuw nsw i64 %472, 1
  %554 = getelementptr inbounds i32, i32* %1, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = ashr i64 %543, %469
  %557 = add nsw i64 %556, 2147483648
  %558 = icmp ugt i64 %557, 4294967295
  %559 = ashr i64 %556, 63
  %560 = xor i64 %559, 2147483647
  %561 = select i1 %558, i64 %560, i64 %556
  %562 = trunc i64 %561 to i32
  %563 = sub nsw i32 %555, %562
  %564 = getelementptr inbounds i32, i32* %0, i64 %553
  store i32 %563, i32* %564, align 4
  %565 = add nuw nsw i64 %472, 2
  %566 = icmp slt i64 %565, %470
  br i1 %566, label %471, label %1214

567:                                              ; preds = %48
  %568 = icmp sgt i32 %2, 8
  br i1 %568, label %569, label %1214

569:                                              ; preds = %567
  %570 = getelementptr inbounds i32, i32* %4, i64 7
  %571 = getelementptr inbounds i32, i32* %4, i64 6
  %572 = getelementptr inbounds i32, i32* %4, i64 5
  %573 = getelementptr inbounds i32, i32* %4, i64 4
  %574 = getelementptr inbounds i32, i32* %4, i64 3
  %575 = getelementptr inbounds i32, i32* %4, i64 2
  %576 = getelementptr inbounds i32, i32* %4, i64 1
  %577 = zext i32 %5 to i64
  %578 = sext i32 %2 to i64
  br label %579

579:                                              ; preds = %579, %569
  %580 = phi i64 [ 8, %569 ], [ %683, %579 ]
  %581 = add nsw i64 %580, -8
  %582 = getelementptr inbounds i32, i32* %1, i64 %581
  %583 = load i32, i32* %582, align 4
  %584 = load i32, i32* %570, align 4
  %585 = sext i32 %584 to i64
  %586 = sext i32 %583 to i64
  %587 = mul nsw i64 %585, %586
  %588 = add nsw i64 %580, -7
  %589 = getelementptr inbounds i32, i32* %1, i64 %588
  %590 = load i32, i32* %589, align 4
  %591 = sext i32 %590 to i64
  %592 = mul nsw i64 %591, %585
  %593 = load i32, i32* %571, align 4
  %594 = sext i32 %593 to i64
  %595 = mul nsw i64 %594, %591
  %596 = add nsw i64 %595, %587
  %597 = add nsw i64 %580, -6
  %598 = getelementptr inbounds i32, i32* %1, i64 %597
  %599 = load i32, i32* %598, align 4
  %600 = sext i32 %599 to i64
  %601 = mul nsw i64 %600, %594
  %602 = add nsw i64 %601, %592
  %603 = load i32, i32* %572, align 4
  %604 = sext i32 %603 to i64
  %605 = mul nsw i64 %604, %600
  %606 = add nsw i64 %596, %605
  %607 = add nsw i64 %580, -5
  %608 = getelementptr inbounds i32, i32* %1, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = sext i32 %609 to i64
  %611 = mul nsw i64 %610, %604
  %612 = add nsw i64 %602, %611
  %613 = load i32, i32* %573, align 4
  %614 = sext i32 %613 to i64
  %615 = mul nsw i64 %614, %610
  %616 = add nsw i64 %606, %615
  %617 = add nsw i64 %580, -4
  %618 = getelementptr inbounds i32, i32* %1, i64 %617
  %619 = load i32, i32* %618, align 4
  %620 = sext i32 %619 to i64
  %621 = mul nsw i64 %620, %614
  %622 = add nsw i64 %612, %621
  %623 = load i32, i32* %574, align 4
  %624 = sext i32 %623 to i64
  %625 = mul nsw i64 %624, %620
  %626 = add nsw i64 %616, %625
  %627 = add nsw i64 %580, -3
  %628 = getelementptr inbounds i32, i32* %1, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = sext i32 %629 to i64
  %631 = mul nsw i64 %630, %624
  %632 = add nsw i64 %622, %631
  %633 = load i32, i32* %575, align 4
  %634 = sext i32 %633 to i64
  %635 = mul nsw i64 %634, %630
  %636 = add nsw i64 %626, %635
  %637 = add nsw i64 %580, -2
  %638 = getelementptr inbounds i32, i32* %1, i64 %637
  %639 = load i32, i32* %638, align 4
  %640 = sext i32 %639 to i64
  %641 = mul nsw i64 %640, %634
  %642 = add nsw i64 %632, %641
  %643 = load i32, i32* %576, align 4
  %644 = sext i32 %643 to i64
  %645 = mul nsw i64 %644, %640
  %646 = add nsw i64 %636, %645
  %647 = add nsw i64 %580, -1
  %648 = getelementptr inbounds i32, i32* %1, i64 %647
  %649 = load i32, i32* %648, align 4
  %650 = sext i32 %649 to i64
  %651 = mul nsw i64 %650, %644
  %652 = add nsw i64 %642, %651
  %653 = load i32, i32* %4, align 4
  %654 = sext i32 %653 to i64
  %655 = mul nsw i64 %654, %650
  %656 = add nsw i64 %646, %655
  %657 = getelementptr inbounds i32, i32* %1, i64 %580
  %658 = load i32, i32* %657, align 4
  %659 = sext i32 %658 to i64
  %660 = mul nsw i64 %659, %654
  %661 = add nsw i64 %652, %660
  %662 = ashr i64 %656, %577
  %663 = add nsw i64 %662, 2147483648
  %664 = icmp ugt i64 %663, 4294967295
  %665 = ashr i64 %662, 63
  %666 = xor i64 %665, 2147483647
  %667 = select i1 %664, i64 %666, i64 %662
  %668 = trunc i64 %667 to i32
  %669 = sub nsw i32 %658, %668
  %670 = getelementptr inbounds i32, i32* %0, i64 %580
  store i32 %669, i32* %670, align 4
  %671 = or i64 %580, 1
  %672 = getelementptr inbounds i32, i32* %1, i64 %671
  %673 = load i32, i32* %672, align 4
  %674 = ashr i64 %661, %577
  %675 = add nsw i64 %674, 2147483648
  %676 = icmp ugt i64 %675, 4294967295
  %677 = ashr i64 %674, 63
  %678 = xor i64 %677, 2147483647
  %679 = select i1 %676, i64 %678, i64 %674
  %680 = trunc i64 %679 to i32
  %681 = sub nsw i32 %673, %680
  %682 = getelementptr inbounds i32, i32* %0, i64 %671
  store i32 %681, i32* %682, align 4
  %683 = add nuw nsw i64 %580, 2
  %684 = icmp slt i64 %683, %578
  br i1 %684, label %579, label %1214

685:                                              ; preds = %48
  %686 = icmp slt i32 %3, %2
  br i1 %686, label %687, label %1214

687:                                              ; preds = %685
  %688 = getelementptr inbounds i32, i32* %4, i64 31
  %689 = getelementptr inbounds i32, i32* %4, i64 30
  %690 = getelementptr inbounds i32, i32* %4, i64 29
  %691 = getelementptr inbounds i32, i32* %4, i64 28
  %692 = getelementptr inbounds i32, i32* %4, i64 27
  %693 = getelementptr inbounds i32, i32* %4, i64 26
  %694 = getelementptr inbounds i32, i32* %4, i64 25
  %695 = getelementptr inbounds i32, i32* %4, i64 24
  %696 = getelementptr inbounds i32, i32* %4, i64 23
  %697 = getelementptr inbounds i32, i32* %4, i64 22
  %698 = getelementptr inbounds i32, i32* %4, i64 21
  %699 = getelementptr inbounds i32, i32* %4, i64 20
  %700 = getelementptr inbounds i32, i32* %4, i64 19
  %701 = getelementptr inbounds i32, i32* %4, i64 18
  %702 = getelementptr inbounds i32, i32* %4, i64 17
  %703 = getelementptr inbounds i32, i32* %4, i64 16
  %704 = getelementptr inbounds i32, i32* %4, i64 15
  %705 = getelementptr inbounds i32, i32* %4, i64 14
  %706 = getelementptr inbounds i32, i32* %4, i64 13
  %707 = getelementptr inbounds i32, i32* %4, i64 12
  %708 = getelementptr inbounds i32, i32* %4, i64 11
  %709 = getelementptr inbounds i32, i32* %4, i64 10
  %710 = getelementptr inbounds i32, i32* %4, i64 9
  %711 = getelementptr inbounds i32, i32* %4, i64 8
  %712 = getelementptr inbounds i32, i32* %4, i64 7
  %713 = getelementptr inbounds i32, i32* %4, i64 6
  %714 = getelementptr inbounds i32, i32* %4, i64 5
  %715 = getelementptr inbounds i32, i32* %4, i64 4
  %716 = getelementptr inbounds i32, i32* %4, i64 3
  %717 = getelementptr inbounds i32, i32* %4, i64 2
  %718 = getelementptr inbounds i32, i32* %4, i64 1
  %719 = zext i32 %5 to i64
  %720 = sext i32 %3 to i64
  %721 = sext i32 %2 to i64
  br label %722

722:                                              ; preds = %1187, %687
  %723 = phi i64 [ %720, %687 ], [ %1212, %1187 ]
  %724 = sub nsw i64 %723, %720
  %725 = getelementptr inbounds i32, i32* %1, i64 %724
  %726 = load i32, i32* %725, align 4
  switch i32 %3, label %727 [
    i32 32, label %776
    i32 31, label %730
    i32 30, label %732
    i32 29, label %734
    i32 28, label %736
    i32 27, label %738
    i32 26, label %740
    i32 25, label %742
    i32 24, label %744
    i32 23, label %746
    i32 22, label %748
    i32 21, label %750
    i32 20, label %752
    i32 19, label %754
    i32 18, label %756
    i32 17, label %758
    i32 16, label %760
    i32 15, label %762
    i32 14, label %764
    i32 13, label %766
    i32 12, label %768
    i32 11, label %770
    i32 10, label %772
    i32 9, label %774
  ]

727:                                              ; preds = %722
  %728 = getelementptr inbounds i32, i32* %1, i64 %723
  %729 = load i32, i32* %728, align 4
  br label %1187

730:                                              ; preds = %722
  %731 = sext i32 %726 to i64
  br label %786

732:                                              ; preds = %722
  %733 = sext i32 %726 to i64
  br label %800

734:                                              ; preds = %722
  %735 = sext i32 %726 to i64
  br label %814

736:                                              ; preds = %722
  %737 = sext i32 %726 to i64
  br label %828

738:                                              ; preds = %722
  %739 = sext i32 %726 to i64
  br label %842

740:                                              ; preds = %722
  %741 = sext i32 %726 to i64
  br label %856

742:                                              ; preds = %722
  %743 = sext i32 %726 to i64
  br label %870

744:                                              ; preds = %722
  %745 = sext i32 %726 to i64
  br label %884

746:                                              ; preds = %722
  %747 = sext i32 %726 to i64
  br label %898

748:                                              ; preds = %722
  %749 = sext i32 %726 to i64
  br label %912

750:                                              ; preds = %722
  %751 = sext i32 %726 to i64
  br label %926

752:                                              ; preds = %722
  %753 = sext i32 %726 to i64
  br label %940

754:                                              ; preds = %722
  %755 = sext i32 %726 to i64
  br label %954

756:                                              ; preds = %722
  %757 = sext i32 %726 to i64
  br label %968

758:                                              ; preds = %722
  %759 = sext i32 %726 to i64
  br label %982

760:                                              ; preds = %722
  %761 = sext i32 %726 to i64
  br label %996

762:                                              ; preds = %722
  %763 = sext i32 %726 to i64
  br label %1010

764:                                              ; preds = %722
  %765 = sext i32 %726 to i64
  br label %1024

766:                                              ; preds = %722
  %767 = sext i32 %726 to i64
  br label %1038

768:                                              ; preds = %722
  %769 = sext i32 %726 to i64
  br label %1052

770:                                              ; preds = %722
  %771 = sext i32 %726 to i64
  br label %1066

772:                                              ; preds = %722
  %773 = sext i32 %726 to i64
  br label %1080

774:                                              ; preds = %722
  %775 = sext i32 %726 to i64
  br label %1094

776:                                              ; preds = %722
  %777 = load i32, i32* %688, align 4
  %778 = sext i32 %777 to i64
  %779 = sext i32 %726 to i64
  %780 = mul nsw i64 %778, %779
  %781 = add nsw i64 %723, -31
  %782 = getelementptr inbounds i32, i32* %1, i64 %781
  %783 = load i32, i32* %782, align 4
  %784 = sext i32 %783 to i64
  %785 = mul nsw i64 %784, %778
  br label %786

786:                                              ; preds = %776, %730
  %787 = phi i64 [ %731, %730 ], [ %784, %776 ]
  %788 = phi i64 [ 0, %730 ], [ %785, %776 ]
  %789 = phi i64 [ 0, %730 ], [ %780, %776 ]
  %790 = load i32, i32* %689, align 4
  %791 = sext i32 %790 to i64
  %792 = mul nsw i64 %787, %791
  %793 = add nsw i64 %792, %789
  %794 = add nsw i64 %723, -30
  %795 = getelementptr inbounds i32, i32* %1, i64 %794
  %796 = load i32, i32* %795, align 4
  %797 = sext i32 %796 to i64
  %798 = mul nsw i64 %797, %791
  %799 = add nsw i64 %798, %788
  br label %800

800:                                              ; preds = %786, %732
  %801 = phi i64 [ %733, %732 ], [ %797, %786 ]
  %802 = phi i64 [ 0, %732 ], [ %799, %786 ]
  %803 = phi i64 [ 0, %732 ], [ %793, %786 ]
  %804 = load i32, i32* %690, align 4
  %805 = sext i32 %804 to i64
  %806 = mul nsw i64 %801, %805
  %807 = add nsw i64 %806, %803
  %808 = add nsw i64 %723, -29
  %809 = getelementptr inbounds i32, i32* %1, i64 %808
  %810 = load i32, i32* %809, align 4
  %811 = sext i32 %810 to i64
  %812 = mul nsw i64 %811, %805
  %813 = add nsw i64 %812, %802
  br label %814

814:                                              ; preds = %800, %734
  %815 = phi i64 [ %735, %734 ], [ %811, %800 ]
  %816 = phi i64 [ 0, %734 ], [ %813, %800 ]
  %817 = phi i64 [ 0, %734 ], [ %807, %800 ]
  %818 = load i32, i32* %691, align 4
  %819 = sext i32 %818 to i64
  %820 = mul nsw i64 %815, %819
  %821 = add nsw i64 %820, %817
  %822 = add nsw i64 %723, -28
  %823 = getelementptr inbounds i32, i32* %1, i64 %822
  %824 = load i32, i32* %823, align 4
  %825 = sext i32 %824 to i64
  %826 = mul nsw i64 %825, %819
  %827 = add nsw i64 %826, %816
  br label %828

828:                                              ; preds = %814, %736
  %829 = phi i64 [ %737, %736 ], [ %825, %814 ]
  %830 = phi i64 [ 0, %736 ], [ %827, %814 ]
  %831 = phi i64 [ 0, %736 ], [ %821, %814 ]
  %832 = load i32, i32* %692, align 4
  %833 = sext i32 %832 to i64
  %834 = mul nsw i64 %829, %833
  %835 = add nsw i64 %834, %831
  %836 = add nsw i64 %723, -27
  %837 = getelementptr inbounds i32, i32* %1, i64 %836
  %838 = load i32, i32* %837, align 4
  %839 = sext i32 %838 to i64
  %840 = mul nsw i64 %839, %833
  %841 = add nsw i64 %840, %830
  br label %842

842:                                              ; preds = %828, %738
  %843 = phi i64 [ %739, %738 ], [ %839, %828 ]
  %844 = phi i64 [ 0, %738 ], [ %841, %828 ]
  %845 = phi i64 [ 0, %738 ], [ %835, %828 ]
  %846 = load i32, i32* %693, align 4
  %847 = sext i32 %846 to i64
  %848 = mul nsw i64 %843, %847
  %849 = add nsw i64 %848, %845
  %850 = add nsw i64 %723, -26
  %851 = getelementptr inbounds i32, i32* %1, i64 %850
  %852 = load i32, i32* %851, align 4
  %853 = sext i32 %852 to i64
  %854 = mul nsw i64 %853, %847
  %855 = add nsw i64 %854, %844
  br label %856

856:                                              ; preds = %842, %740
  %857 = phi i64 [ %741, %740 ], [ %853, %842 ]
  %858 = phi i64 [ 0, %740 ], [ %855, %842 ]
  %859 = phi i64 [ 0, %740 ], [ %849, %842 ]
  %860 = load i32, i32* %694, align 4
  %861 = sext i32 %860 to i64
  %862 = mul nsw i64 %857, %861
  %863 = add nsw i64 %862, %859
  %864 = add nsw i64 %723, -25
  %865 = getelementptr inbounds i32, i32* %1, i64 %864
  %866 = load i32, i32* %865, align 4
  %867 = sext i32 %866 to i64
  %868 = mul nsw i64 %867, %861
  %869 = add nsw i64 %868, %858
  br label %870

870:                                              ; preds = %856, %742
  %871 = phi i64 [ %743, %742 ], [ %867, %856 ]
  %872 = phi i64 [ 0, %742 ], [ %869, %856 ]
  %873 = phi i64 [ 0, %742 ], [ %863, %856 ]
  %874 = load i32, i32* %695, align 4
  %875 = sext i32 %874 to i64
  %876 = mul nsw i64 %871, %875
  %877 = add nsw i64 %876, %873
  %878 = add nsw i64 %723, -24
  %879 = getelementptr inbounds i32, i32* %1, i64 %878
  %880 = load i32, i32* %879, align 4
  %881 = sext i32 %880 to i64
  %882 = mul nsw i64 %881, %875
  %883 = add nsw i64 %882, %872
  br label %884

884:                                              ; preds = %870, %744
  %885 = phi i64 [ %745, %744 ], [ %881, %870 ]
  %886 = phi i64 [ 0, %744 ], [ %883, %870 ]
  %887 = phi i64 [ 0, %744 ], [ %877, %870 ]
  %888 = load i32, i32* %696, align 4
  %889 = sext i32 %888 to i64
  %890 = mul nsw i64 %885, %889
  %891 = add nsw i64 %890, %887
  %892 = add nsw i64 %723, -23
  %893 = getelementptr inbounds i32, i32* %1, i64 %892
  %894 = load i32, i32* %893, align 4
  %895 = sext i32 %894 to i64
  %896 = mul nsw i64 %895, %889
  %897 = add nsw i64 %896, %886
  br label %898

898:                                              ; preds = %884, %746
  %899 = phi i64 [ %747, %746 ], [ %895, %884 ]
  %900 = phi i64 [ 0, %746 ], [ %897, %884 ]
  %901 = phi i64 [ 0, %746 ], [ %891, %884 ]
  %902 = load i32, i32* %697, align 4
  %903 = sext i32 %902 to i64
  %904 = mul nsw i64 %899, %903
  %905 = add nsw i64 %904, %901
  %906 = add nsw i64 %723, -22
  %907 = getelementptr inbounds i32, i32* %1, i64 %906
  %908 = load i32, i32* %907, align 4
  %909 = sext i32 %908 to i64
  %910 = mul nsw i64 %909, %903
  %911 = add nsw i64 %910, %900
  br label %912

912:                                              ; preds = %898, %748
  %913 = phi i64 [ %749, %748 ], [ %909, %898 ]
  %914 = phi i64 [ 0, %748 ], [ %911, %898 ]
  %915 = phi i64 [ 0, %748 ], [ %905, %898 ]
  %916 = load i32, i32* %698, align 4
  %917 = sext i32 %916 to i64
  %918 = mul nsw i64 %913, %917
  %919 = add nsw i64 %918, %915
  %920 = add nsw i64 %723, -21
  %921 = getelementptr inbounds i32, i32* %1, i64 %920
  %922 = load i32, i32* %921, align 4
  %923 = sext i32 %922 to i64
  %924 = mul nsw i64 %923, %917
  %925 = add nsw i64 %924, %914
  br label %926

926:                                              ; preds = %912, %750
  %927 = phi i64 [ %751, %750 ], [ %923, %912 ]
  %928 = phi i64 [ 0, %750 ], [ %925, %912 ]
  %929 = phi i64 [ 0, %750 ], [ %919, %912 ]
  %930 = load i32, i32* %699, align 4
  %931 = sext i32 %930 to i64
  %932 = mul nsw i64 %927, %931
  %933 = add nsw i64 %932, %929
  %934 = add nsw i64 %723, -20
  %935 = getelementptr inbounds i32, i32* %1, i64 %934
  %936 = load i32, i32* %935, align 4
  %937 = sext i32 %936 to i64
  %938 = mul nsw i64 %937, %931
  %939 = add nsw i64 %938, %928
  br label %940

940:                                              ; preds = %926, %752
  %941 = phi i64 [ %753, %752 ], [ %937, %926 ]
  %942 = phi i64 [ 0, %752 ], [ %939, %926 ]
  %943 = phi i64 [ 0, %752 ], [ %933, %926 ]
  %944 = load i32, i32* %700, align 4
  %945 = sext i32 %944 to i64
  %946 = mul nsw i64 %941, %945
  %947 = add nsw i64 %946, %943
  %948 = add nsw i64 %723, -19
  %949 = getelementptr inbounds i32, i32* %1, i64 %948
  %950 = load i32, i32* %949, align 4
  %951 = sext i32 %950 to i64
  %952 = mul nsw i64 %951, %945
  %953 = add nsw i64 %952, %942
  br label %954

954:                                              ; preds = %940, %754
  %955 = phi i64 [ %755, %754 ], [ %951, %940 ]
  %956 = phi i64 [ 0, %754 ], [ %953, %940 ]
  %957 = phi i64 [ 0, %754 ], [ %947, %940 ]
  %958 = load i32, i32* %701, align 4
  %959 = sext i32 %958 to i64
  %960 = mul nsw i64 %955, %959
  %961 = add nsw i64 %960, %957
  %962 = add nsw i64 %723, -18
  %963 = getelementptr inbounds i32, i32* %1, i64 %962
  %964 = load i32, i32* %963, align 4
  %965 = sext i32 %964 to i64
  %966 = mul nsw i64 %965, %959
  %967 = add nsw i64 %966, %956
  br label %968

968:                                              ; preds = %954, %756
  %969 = phi i64 [ %757, %756 ], [ %965, %954 ]
  %970 = phi i64 [ 0, %756 ], [ %967, %954 ]
  %971 = phi i64 [ 0, %756 ], [ %961, %954 ]
  %972 = load i32, i32* %702, align 4
  %973 = sext i32 %972 to i64
  %974 = mul nsw i64 %969, %973
  %975 = add nsw i64 %974, %971
  %976 = add nsw i64 %723, -17
  %977 = getelementptr inbounds i32, i32* %1, i64 %976
  %978 = load i32, i32* %977, align 4
  %979 = sext i32 %978 to i64
  %980 = mul nsw i64 %979, %973
  %981 = add nsw i64 %980, %970
  br label %982

982:                                              ; preds = %968, %758
  %983 = phi i64 [ %759, %758 ], [ %979, %968 ]
  %984 = phi i64 [ 0, %758 ], [ %981, %968 ]
  %985 = phi i64 [ 0, %758 ], [ %975, %968 ]
  %986 = load i32, i32* %703, align 4
  %987 = sext i32 %986 to i64
  %988 = mul nsw i64 %983, %987
  %989 = add nsw i64 %988, %985
  %990 = add nsw i64 %723, -16
  %991 = getelementptr inbounds i32, i32* %1, i64 %990
  %992 = load i32, i32* %991, align 4
  %993 = sext i32 %992 to i64
  %994 = mul nsw i64 %993, %987
  %995 = add nsw i64 %994, %984
  br label %996

996:                                              ; preds = %982, %760
  %997 = phi i64 [ %761, %760 ], [ %993, %982 ]
  %998 = phi i64 [ 0, %760 ], [ %995, %982 ]
  %999 = phi i64 [ 0, %760 ], [ %989, %982 ]
  %1000 = load i32, i32* %704, align 4
  %1001 = sext i32 %1000 to i64
  %1002 = mul nsw i64 %997, %1001
  %1003 = add nsw i64 %1002, %999
  %1004 = add nsw i64 %723, -15
  %1005 = getelementptr inbounds i32, i32* %1, i64 %1004
  %1006 = load i32, i32* %1005, align 4
  %1007 = sext i32 %1006 to i64
  %1008 = mul nsw i64 %1007, %1001
  %1009 = add nsw i64 %1008, %998
  br label %1010

1010:                                             ; preds = %996, %762
  %1011 = phi i64 [ %763, %762 ], [ %1007, %996 ]
  %1012 = phi i64 [ 0, %762 ], [ %1009, %996 ]
  %1013 = phi i64 [ 0, %762 ], [ %1003, %996 ]
  %1014 = load i32, i32* %705, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = mul nsw i64 %1011, %1015
  %1017 = add nsw i64 %1016, %1013
  %1018 = add nsw i64 %723, -14
  %1019 = getelementptr inbounds i32, i32* %1, i64 %1018
  %1020 = load i32, i32* %1019, align 4
  %1021 = sext i32 %1020 to i64
  %1022 = mul nsw i64 %1021, %1015
  %1023 = add nsw i64 %1022, %1012
  br label %1024

1024:                                             ; preds = %1010, %764
  %1025 = phi i64 [ %765, %764 ], [ %1021, %1010 ]
  %1026 = phi i64 [ 0, %764 ], [ %1023, %1010 ]
  %1027 = phi i64 [ 0, %764 ], [ %1017, %1010 ]
  %1028 = load i32, i32* %706, align 4
  %1029 = sext i32 %1028 to i64
  %1030 = mul nsw i64 %1025, %1029
  %1031 = add nsw i64 %1030, %1027
  %1032 = add nsw i64 %723, -13
  %1033 = getelementptr inbounds i32, i32* %1, i64 %1032
  %1034 = load i32, i32* %1033, align 4
  %1035 = sext i32 %1034 to i64
  %1036 = mul nsw i64 %1035, %1029
  %1037 = add nsw i64 %1036, %1026
  br label %1038

1038:                                             ; preds = %1024, %766
  %1039 = phi i64 [ %767, %766 ], [ %1035, %1024 ]
  %1040 = phi i64 [ 0, %766 ], [ %1037, %1024 ]
  %1041 = phi i64 [ 0, %766 ], [ %1031, %1024 ]
  %1042 = load i32, i32* %707, align 4
  %1043 = sext i32 %1042 to i64
  %1044 = mul nsw i64 %1039, %1043
  %1045 = add nsw i64 %1044, %1041
  %1046 = add nsw i64 %723, -12
  %1047 = getelementptr inbounds i32, i32* %1, i64 %1046
  %1048 = load i32, i32* %1047, align 4
  %1049 = sext i32 %1048 to i64
  %1050 = mul nsw i64 %1049, %1043
  %1051 = add nsw i64 %1050, %1040
  br label %1052

1052:                                             ; preds = %1038, %768
  %1053 = phi i64 [ %769, %768 ], [ %1049, %1038 ]
  %1054 = phi i64 [ 0, %768 ], [ %1051, %1038 ]
  %1055 = phi i64 [ 0, %768 ], [ %1045, %1038 ]
  %1056 = load i32, i32* %708, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = mul nsw i64 %1053, %1057
  %1059 = add nsw i64 %1058, %1055
  %1060 = add nsw i64 %723, -11
  %1061 = getelementptr inbounds i32, i32* %1, i64 %1060
  %1062 = load i32, i32* %1061, align 4
  %1063 = sext i32 %1062 to i64
  %1064 = mul nsw i64 %1063, %1057
  %1065 = add nsw i64 %1064, %1054
  br label %1066

1066:                                             ; preds = %1052, %770
  %1067 = phi i64 [ %771, %770 ], [ %1063, %1052 ]
  %1068 = phi i64 [ 0, %770 ], [ %1065, %1052 ]
  %1069 = phi i64 [ 0, %770 ], [ %1059, %1052 ]
  %1070 = load i32, i32* %709, align 4
  %1071 = sext i32 %1070 to i64
  %1072 = mul nsw i64 %1067, %1071
  %1073 = add nsw i64 %1072, %1069
  %1074 = add nsw i64 %723, -10
  %1075 = getelementptr inbounds i32, i32* %1, i64 %1074
  %1076 = load i32, i32* %1075, align 4
  %1077 = sext i32 %1076 to i64
  %1078 = mul nsw i64 %1077, %1071
  %1079 = add nsw i64 %1078, %1068
  br label %1080

1080:                                             ; preds = %1066, %772
  %1081 = phi i64 [ %773, %772 ], [ %1077, %1066 ]
  %1082 = phi i64 [ 0, %772 ], [ %1079, %1066 ]
  %1083 = phi i64 [ 0, %772 ], [ %1073, %1066 ]
  %1084 = load i32, i32* %710, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = mul nsw i64 %1081, %1085
  %1087 = add nsw i64 %1086, %1083
  %1088 = add nsw i64 %723, -9
  %1089 = getelementptr inbounds i32, i32* %1, i64 %1088
  %1090 = load i32, i32* %1089, align 4
  %1091 = sext i32 %1090 to i64
  %1092 = mul nsw i64 %1091, %1085
  %1093 = add nsw i64 %1092, %1082
  br label %1094

1094:                                             ; preds = %1080, %774
  %1095 = phi i64 [ %775, %774 ], [ %1091, %1080 ]
  %1096 = phi i64 [ 0, %774 ], [ %1093, %1080 ]
  %1097 = phi i64 [ 0, %774 ], [ %1087, %1080 ]
  %1098 = load i32, i32* %711, align 4
  %1099 = sext i32 %1098 to i64
  %1100 = mul nsw i64 %1095, %1099
  %1101 = add nsw i64 %1100, %1097
  %1102 = add nsw i64 %723, -8
  %1103 = getelementptr inbounds i32, i32* %1, i64 %1102
  %1104 = load i32, i32* %1103, align 4
  %1105 = sext i32 %1104 to i64
  %1106 = mul nsw i64 %1105, %1099
  %1107 = add nsw i64 %1106, %1096
  %1108 = load i32, i32* %712, align 4
  %1109 = sext i32 %1108 to i64
  %1110 = mul nsw i64 %1109, %1105
  %1111 = add nsw i64 %1101, %1110
  %1112 = add nsw i64 %723, -7
  %1113 = getelementptr inbounds i32, i32* %1, i64 %1112
  %1114 = load i32, i32* %1113, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = mul nsw i64 %1115, %1109
  %1117 = add nsw i64 %1107, %1116
  %1118 = load i32, i32* %713, align 4
  %1119 = sext i32 %1118 to i64
  %1120 = mul nsw i64 %1119, %1115
  %1121 = add nsw i64 %1111, %1120
  %1122 = add nsw i64 %723, -6
  %1123 = getelementptr inbounds i32, i32* %1, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = sext i32 %1124 to i64
  %1126 = mul nsw i64 %1125, %1119
  %1127 = add nsw i64 %1117, %1126
  %1128 = load i32, i32* %714, align 4
  %1129 = sext i32 %1128 to i64
  %1130 = mul nsw i64 %1129, %1125
  %1131 = add nsw i64 %1121, %1130
  %1132 = add nsw i64 %723, -5
  %1133 = getelementptr inbounds i32, i32* %1, i64 %1132
  %1134 = load i32, i32* %1133, align 4
  %1135 = sext i32 %1134 to i64
  %1136 = mul nsw i64 %1135, %1129
  %1137 = add nsw i64 %1127, %1136
  %1138 = load i32, i32* %715, align 4
  %1139 = sext i32 %1138 to i64
  %1140 = mul nsw i64 %1139, %1135
  %1141 = add nsw i64 %1131, %1140
  %1142 = add nsw i64 %723, -4
  %1143 = getelementptr inbounds i32, i32* %1, i64 %1142
  %1144 = load i32, i32* %1143, align 4
  %1145 = sext i32 %1144 to i64
  %1146 = mul nsw i64 %1145, %1139
  %1147 = add nsw i64 %1137, %1146
  %1148 = load i32, i32* %716, align 4
  %1149 = sext i32 %1148 to i64
  %1150 = mul nsw i64 %1149, %1145
  %1151 = add nsw i64 %1141, %1150
  %1152 = add nsw i64 %723, -3
  %1153 = getelementptr inbounds i32, i32* %1, i64 %1152
  %1154 = load i32, i32* %1153, align 4
  %1155 = sext i32 %1154 to i64
  %1156 = mul nsw i64 %1155, %1149
  %1157 = add nsw i64 %1147, %1156
  %1158 = load i32, i32* %717, align 4
  %1159 = sext i32 %1158 to i64
  %1160 = mul nsw i64 %1159, %1155
  %1161 = add nsw i64 %1151, %1160
  %1162 = add nsw i64 %723, -2
  %1163 = getelementptr inbounds i32, i32* %1, i64 %1162
  %1164 = load i32, i32* %1163, align 4
  %1165 = sext i32 %1164 to i64
  %1166 = mul nsw i64 %1165, %1159
  %1167 = add nsw i64 %1157, %1166
  %1168 = load i32, i32* %718, align 4
  %1169 = sext i32 %1168 to i64
  %1170 = mul nsw i64 %1169, %1165
  %1171 = add nsw i64 %1161, %1170
  %1172 = add nsw i64 %723, -1
  %1173 = getelementptr inbounds i32, i32* %1, i64 %1172
  %1174 = load i32, i32* %1173, align 4
  %1175 = sext i32 %1174 to i64
  %1176 = mul nsw i64 %1175, %1169
  %1177 = add nsw i64 %1167, %1176
  %1178 = load i32, i32* %4, align 4
  %1179 = sext i32 %1178 to i64
  %1180 = mul nsw i64 %1179, %1175
  %1181 = add nsw i64 %1171, %1180
  %1182 = getelementptr inbounds i32, i32* %1, i64 %723
  %1183 = load i32, i32* %1182, align 4
  %1184 = sext i32 %1183 to i64
  %1185 = mul nsw i64 %1184, %1179
  %1186 = add nsw i64 %1177, %1185
  br label %1187

1187:                                             ; preds = %727, %1094
  %1188 = phi i32 [ %729, %727 ], [ %1183, %1094 ]
  %1189 = phi i64 [ 0, %727 ], [ %1186, %1094 ]
  %1190 = phi i64 [ 0, %727 ], [ %1181, %1094 ]
  %1191 = ashr i64 %1190, %719
  %1192 = add nsw i64 %1191, 2147483648
  %1193 = icmp ugt i64 %1192, 4294967295
  %1194 = ashr i64 %1191, 63
  %1195 = xor i64 %1194, 2147483647
  %1196 = select i1 %1193, i64 %1195, i64 %1191
  %1197 = trunc i64 %1196 to i32
  %1198 = sub nsw i32 %1188, %1197
  %1199 = getelementptr inbounds i32, i32* %0, i64 %723
  store i32 %1198, i32* %1199, align 4
  %1200 = add nsw i64 %723, 1
  %1201 = getelementptr inbounds i32, i32* %1, i64 %1200
  %1202 = load i32, i32* %1201, align 4
  %1203 = ashr i64 %1189, %719
  %1204 = add nsw i64 %1203, 2147483648
  %1205 = icmp ugt i64 %1204, 4294967295
  %1206 = ashr i64 %1203, 63
  %1207 = xor i64 %1206, 2147483647
  %1208 = select i1 %1205, i64 %1207, i64 %1203
  %1209 = trunc i64 %1208 to i32
  %1210 = sub nsw i32 %1202, %1209
  %1211 = getelementptr inbounds i32, i32* %0, i64 %1200
  store i32 %1210, i32* %1211, align 4
  %1212 = add nsw i64 %723, 2
  %1213 = icmp slt i64 %1212, %721
  br i1 %1213, label %722, label %1214

1214:                                             ; preds = %579, %471, %374, %288, %213, %149, %96, %54, %1187, %685, %567, %460, %364, %279, %205, %142, %90, %49
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_indep_c_32(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %77

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = icmp sgt i32 %2, 0
  %11 = zext i32 %3 to i64
  %12 = zext i32 %2 to i64
  %13 = add nsw i64 %12, -1
  %14 = and i64 %12, 3
  %15 = icmp ult i64 %13, 3
  %16 = sub nsw i64 %12, %14
  %17 = icmp eq i64 %14, 0
  br label %18

18:                                               ; preds = %73, %7
  %19 = phi i64 [ 0, %7 ], [ %75, %73 ]
  %20 = phi i32* [ %9, %7 ], [ %74, %73 ]
  br i1 %10, label %21, label %73

21:                                               ; preds = %18
  br i1 %15, label %56, label %22

22:                                               ; preds = %21, %22
  %23 = phi i64 [ %53, %22 ], [ 0, %21 ]
  %24 = phi i32* [ %52, %22 ], [ %20, %21 ]
  %25 = phi i64 [ %54, %22 ], [ %16, %21 ]
  %26 = getelementptr inbounds i32*, i32** %1, i64 %23
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %19
  %29 = load i32, i32* %28, align 4
  %30 = shl i32 %29, %4
  %31 = getelementptr inbounds i32, i32* %24, i64 1
  store i32 %30, i32* %24, align 4
  %32 = or i64 %23, 1
  %33 = getelementptr inbounds i32*, i32** %1, i64 %32
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %19
  %36 = load i32, i32* %35, align 4
  %37 = shl i32 %36, %4
  %38 = getelementptr inbounds i32, i32* %24, i64 2
  store i32 %37, i32* %31, align 4
  %39 = or i64 %23, 2
  %40 = getelementptr inbounds i32*, i32** %1, i64 %39
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 %19
  %43 = load i32, i32* %42, align 4
  %44 = shl i32 %43, %4
  %45 = getelementptr inbounds i32, i32* %24, i64 3
  store i32 %44, i32* %38, align 4
  %46 = or i64 %23, 3
  %47 = getelementptr inbounds i32*, i32** %1, i64 %46
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 %19
  %50 = load i32, i32* %49, align 4
  %51 = shl i32 %50, %4
  %52 = getelementptr inbounds i32, i32* %24, i64 4
  store i32 %51, i32* %45, align 4
  %53 = add nuw nsw i64 %23, 4
  %54 = add i64 %25, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %22

56:                                               ; preds = %22, %21
  %57 = phi i32* [ undef, %21 ], [ %52, %22 ]
  %58 = phi i64 [ 0, %21 ], [ %53, %22 ]
  %59 = phi i32* [ %20, %21 ], [ %52, %22 ]
  br i1 %17, label %73, label %60

60:                                               ; preds = %56, %60
  %61 = phi i64 [ %70, %60 ], [ %58, %56 ]
  %62 = phi i32* [ %69, %60 ], [ %59, %56 ]
  %63 = phi i64 [ %71, %60 ], [ %14, %56 ]
  %64 = getelementptr inbounds i32*, i32** %1, i64 %61
  %65 = load i32*, i32** %64, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %19
  %67 = load i32, i32* %66, align 4
  %68 = shl i32 %67, %4
  %69 = getelementptr inbounds i32, i32* %62, i64 1
  store i32 %68, i32* %62, align 4
  %70 = add nuw nsw i64 %61, 1
  %71 = add i64 %63, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %60, !llvm.loop !7

73:                                               ; preds = %56, %60, %18
  %74 = phi i32* [ %20, %18 ], [ %57, %56 ], [ %69, %60 ]
  %75 = add nuw nsw i64 %19, 1
  %76 = icmp eq i64 %75, %11
  br i1 %76, label %77, label %18

77:                                               ; preds = %73, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ls_c_32(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %61

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32*, i32** %1, i64 1
  %11 = zext i32 %3 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %46, label %14

14:                                               ; preds = %7
  %15 = sub nsw i64 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %43, %16 ]
  %18 = phi i32* [ %9, %14 ], [ %42, %16 ]
  %19 = phi i64 [ %15, %14 ], [ %44, %16 ]
  %20 = load i32*, i32** %1, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %17
  %25 = load i32, i32* %24, align 4
  %26 = shl i32 %22, %4
  %27 = getelementptr inbounds i32, i32* %18, i64 1
  store i32 %26, i32* %18, align 4
  %28 = sub i32 %22, %25
  %29 = shl i32 %28, %4
  %30 = getelementptr inbounds i32, i32* %18, i64 2
  store i32 %29, i32* %27, align 4
  %31 = or i64 %17, 1
  %32 = load i32*, i32** %1, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %31
  %34 = load i32, i32* %33, align 4
  %35 = load i32*, i32** %10, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %31
  %37 = load i32, i32* %36, align 4
  %38 = shl i32 %34, %4
  %39 = getelementptr inbounds i32, i32* %18, i64 3
  store i32 %38, i32* %30, align 4
  %40 = sub i32 %34, %37
  %41 = shl i32 %40, %4
  %42 = getelementptr inbounds i32, i32* %18, i64 4
  store i32 %41, i32* %39, align 4
  %43 = add nuw nsw i64 %17, 2
  %44 = add i64 %19, -2
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %16

46:                                               ; preds = %16, %7
  %47 = phi i64 [ 0, %7 ], [ %43, %16 ]
  %48 = phi i32* [ %9, %7 ], [ %42, %16 ]
  %49 = icmp eq i64 %12, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %46
  %51 = load i32*, i32** %1, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %47
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %10, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %47
  %56 = load i32, i32* %55, align 4
  %57 = shl i32 %53, %4
  %58 = getelementptr inbounds i32, i32* %48, i64 1
  store i32 %57, i32* %48, align 4
  %59 = sub i32 %53, %56
  %60 = shl i32 %59, %4
  store i32 %60, i32* %58, align 4
  br label %61

61:                                               ; preds = %50, %46, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_rs_c_32(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %61

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32*, i32** %1, i64 1
  %11 = zext i32 %3 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %46, label %14

14:                                               ; preds = %7
  %15 = sub nsw i64 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %43, %16 ]
  %18 = phi i32* [ %9, %14 ], [ %42, %16 ]
  %19 = phi i64 [ %15, %14 ], [ %44, %16 ]
  %20 = load i32*, i32** %1, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %17
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %22
  %27 = shl i32 %26, %4
  %28 = getelementptr inbounds i32, i32* %18, i64 1
  store i32 %27, i32* %18, align 4
  %29 = shl i32 %25, %4
  %30 = getelementptr inbounds i32, i32* %18, i64 2
  store i32 %29, i32* %28, align 4
  %31 = or i64 %17, 1
  %32 = load i32*, i32** %1, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %31
  %34 = load i32, i32* %33, align 4
  %35 = load i32*, i32** %10, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %31
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, %34
  %39 = shl i32 %38, %4
  %40 = getelementptr inbounds i32, i32* %18, i64 3
  store i32 %39, i32* %30, align 4
  %41 = shl i32 %37, %4
  %42 = getelementptr inbounds i32, i32* %18, i64 4
  store i32 %41, i32* %40, align 4
  %43 = add nuw nsw i64 %17, 2
  %44 = add i64 %19, -2
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %16

46:                                               ; preds = %16, %7
  %47 = phi i64 [ 0, %7 ], [ %43, %16 ]
  %48 = phi i32* [ %9, %7 ], [ %42, %16 ]
  %49 = icmp eq i64 %12, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %46
  %51 = load i32*, i32** %1, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %47
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %10, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %47
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, %53
  %58 = shl i32 %57, %4
  %59 = getelementptr inbounds i32, i32* %48, i64 1
  store i32 %58, i32* %48, align 4
  %60 = shl i32 %56, %4
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %50, %46, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ms_c_32(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %67

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32*, i32** %1, i64 1
  %11 = zext i32 %3 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %50, label %14

14:                                               ; preds = %7
  %15 = sub nsw i64 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %47, %16 ]
  %18 = phi i32* [ %9, %14 ], [ %46, %16 ]
  %19 = phi i64 [ %15, %14 ], [ %48, %16 ]
  %20 = load i32*, i32** %1, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %17
  %25 = load i32, i32* %24, align 4
  %26 = ashr i32 %25, 1
  %27 = sub i32 %22, %26
  %28 = add i32 %27, %25
  %29 = shl i32 %28, %4
  %30 = getelementptr inbounds i32, i32* %18, i64 1
  store i32 %29, i32* %18, align 4
  %31 = shl i32 %27, %4
  %32 = getelementptr inbounds i32, i32* %18, i64 2
  store i32 %31, i32* %30, align 4
  %33 = or i64 %17, 1
  %34 = load i32*, i32** %1, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %33
  %36 = load i32, i32* %35, align 4
  %37 = load i32*, i32** %10, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %33
  %39 = load i32, i32* %38, align 4
  %40 = ashr i32 %39, 1
  %41 = sub i32 %36, %40
  %42 = add i32 %41, %39
  %43 = shl i32 %42, %4
  %44 = getelementptr inbounds i32, i32* %18, i64 3
  store i32 %43, i32* %32, align 4
  %45 = shl i32 %41, %4
  %46 = getelementptr inbounds i32, i32* %18, i64 4
  store i32 %45, i32* %44, align 4
  %47 = add nuw nsw i64 %17, 2
  %48 = add i64 %19, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %16

50:                                               ; preds = %16, %7
  %51 = phi i64 [ 0, %7 ], [ %47, %16 ]
  %52 = phi i32* [ %9, %7 ], [ %46, %16 ]
  %53 = icmp eq i64 %12, 0
  br i1 %53, label %67, label %54

54:                                               ; preds = %50
  %55 = load i32*, i32** %1, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %51
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %10, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %51
  %60 = load i32, i32* %59, align 4
  %61 = ashr i32 %60, 1
  %62 = sub i32 %57, %61
  %63 = add i32 %62, %60
  %64 = shl i32 %63, %4
  %65 = getelementptr inbounds i32, i32* %52, i64 1
  store i32 %64, i32* %52, align 4
  %66 = shl i32 %62, %4
  store i32 %66, i32* %65, align 4
  br label %67

67:                                               ; preds = %54, %50, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_indep_c_32p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %58

7:                                                ; preds = %5
  %8 = icmp sgt i32 %2, 0
  %9 = zext i32 %3 to i64
  %10 = zext i32 %2 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %2, 1
  %13 = sub nsw i64 %10, %11
  %14 = icmp eq i64 %11, 0
  br label %15

15:                                               ; preds = %55, %7
  %16 = phi i64 [ 0, %7 ], [ %56, %55 ]
  br i1 %8, label %17, label %55

17:                                               ; preds = %15
  br i1 %12, label %43, label %18

18:                                               ; preds = %17, %18
  %19 = phi i64 [ %40, %18 ], [ 0, %17 ]
  %20 = phi i64 [ %41, %18 ], [ %13, %17 ]
  %21 = getelementptr inbounds i32*, i32** %1, i64 %19
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %16
  %24 = load i32, i32* %23, align 4
  %25 = shl i32 %24, %4
  %26 = getelementptr inbounds i8*, i8** %0, i64 %19
  %27 = bitcast i8** %26 to i32**
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 %16
  store i32 %25, i32* %29, align 4
  %30 = or i64 %19, 1
  %31 = getelementptr inbounds i32*, i32** %1, i64 %30
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %16
  %34 = load i32, i32* %33, align 4
  %35 = shl i32 %34, %4
  %36 = getelementptr inbounds i8*, i8** %0, i64 %30
  %37 = bitcast i8** %36 to i32**
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 %16
  store i32 %35, i32* %39, align 4
  %40 = add nuw nsw i64 %19, 2
  %41 = add i64 %20, -2
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %18

43:                                               ; preds = %18, %17
  %44 = phi i64 [ 0, %17 ], [ %40, %18 ]
  br i1 %14, label %55, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds i32*, i32** %1, i64 %44
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 %16
  %49 = load i32, i32* %48, align 4
  %50 = shl i32 %49, %4
  %51 = getelementptr inbounds i8*, i8** %0, i64 %44
  %52 = bitcast i8** %51 to i32**
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %16
  store i32 %50, i32* %54, align 4
  br label %55

55:                                               ; preds = %45, %43, %15
  %56 = add nuw nsw i64 %16, 1
  %57 = icmp eq i64 %56, %9
  br i1 %57, label %58, label %15

58:                                               ; preds = %55, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ls_c_32p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = bitcast i8** %0 to i32**
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %30

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32*, i32** %1, i64 1
  %10 = getelementptr inbounds i8*, i8** %0, i64 1
  %11 = bitcast i8** %10 to i32**
  %12 = zext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i64 [ 0, %8 ], [ %28, %13 ]
  %15 = load i32*, i32** %1, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %14
  %20 = load i32, i32* %19, align 4
  %21 = shl i32 %17, %4
  %22 = load i32*, i32** %6, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %14
  store i32 %21, i32* %23, align 4
  %24 = sub i32 %17, %20
  %25 = shl i32 %24, %4
  %26 = load i32*, i32** %11, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 %14
  store i32 %25, i32* %27, align 4
  %28 = add nuw nsw i64 %14, 1
  %29 = icmp eq i64 %28, %12
  br i1 %29, label %30, label %13

30:                                               ; preds = %13, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_rs_c_32p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = bitcast i8** %0 to i32**
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %30

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32*, i32** %1, i64 1
  %10 = getelementptr inbounds i8*, i8** %0, i64 1
  %11 = bitcast i8** %10 to i32**
  %12 = zext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i64 [ 0, %8 ], [ %28, %13 ]
  %15 = load i32*, i32** %1, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %14
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, %17
  %22 = shl i32 %21, %4
  %23 = load i32*, i32** %6, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %14
  store i32 %22, i32* %24, align 4
  %25 = shl i32 %20, %4
  %26 = load i32*, i32** %11, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 %14
  store i32 %25, i32* %27, align 4
  %28 = add nuw nsw i64 %14, 1
  %29 = icmp eq i64 %28, %12
  br i1 %29, label %30, label %13

30:                                               ; preds = %13, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ms_c_32p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = bitcast i8** %0 to i32**
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32*, i32** %1, i64 1
  %10 = getelementptr inbounds i8*, i8** %0, i64 1
  %11 = bitcast i8** %10 to i32**
  %12 = zext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i64 [ 0, %8 ], [ %30, %13 ]
  %15 = load i32*, i32** %1, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %14
  %20 = load i32, i32* %19, align 4
  %21 = ashr i32 %20, 1
  %22 = sub i32 %17, %21
  %23 = add i32 %22, %20
  %24 = shl i32 %23, %4
  %25 = load i32*, i32** %6, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 %14
  store i32 %24, i32* %26, align 4
  %27 = shl i32 %22, %4
  %28 = load i32*, i32** %11, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 %14
  store i32 %27, i32* %29, align 4
  %30 = add nuw nsw i64 %14, 1
  %31 = icmp eq i64 %30, %12
  br i1 %31, label %32, label %13

32:                                               ; preds = %13, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_indep_c_16(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %82

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i16**
  %9 = load i16*, i16** %8, align 8
  %10 = icmp sgt i32 %2, 0
  %11 = zext i32 %3 to i64
  %12 = zext i32 %2 to i64
  %13 = add nsw i64 %12, -1
  %14 = and i64 %12, 3
  %15 = icmp ult i64 %13, 3
  %16 = sub nsw i64 %12, %14
  %17 = icmp eq i64 %14, 0
  br label %18

18:                                               ; preds = %78, %7
  %19 = phi i64 [ 0, %7 ], [ %80, %78 ]
  %20 = phi i16* [ %9, %7 ], [ %79, %78 ]
  br i1 %10, label %21, label %78

21:                                               ; preds = %18
  br i1 %15, label %60, label %22

22:                                               ; preds = %21, %22
  %23 = phi i64 [ %57, %22 ], [ 0, %21 ]
  %24 = phi i16* [ %56, %22 ], [ %20, %21 ]
  %25 = phi i64 [ %58, %22 ], [ %16, %21 ]
  %26 = getelementptr inbounds i32*, i32** %1, i64 %23
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %19
  %29 = load i32, i32* %28, align 4
  %30 = shl i32 %29, %4
  %31 = trunc i32 %30 to i16
  %32 = getelementptr inbounds i16, i16* %24, i64 1
  store i16 %31, i16* %24, align 2
  %33 = or i64 %23, 1
  %34 = getelementptr inbounds i32*, i32** %1, i64 %33
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %19
  %37 = load i32, i32* %36, align 4
  %38 = shl i32 %37, %4
  %39 = trunc i32 %38 to i16
  %40 = getelementptr inbounds i16, i16* %24, i64 2
  store i16 %39, i16* %32, align 2
  %41 = or i64 %23, 2
  %42 = getelementptr inbounds i32*, i32** %1, i64 %41
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 %19
  %45 = load i32, i32* %44, align 4
  %46 = shl i32 %45, %4
  %47 = trunc i32 %46 to i16
  %48 = getelementptr inbounds i16, i16* %24, i64 3
  store i16 %47, i16* %40, align 2
  %49 = or i64 %23, 3
  %50 = getelementptr inbounds i32*, i32** %1, i64 %49
  %51 = load i32*, i32** %50, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %19
  %53 = load i32, i32* %52, align 4
  %54 = shl i32 %53, %4
  %55 = trunc i32 %54 to i16
  %56 = getelementptr inbounds i16, i16* %24, i64 4
  store i16 %55, i16* %48, align 2
  %57 = add nuw nsw i64 %23, 4
  %58 = add i64 %25, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %22

60:                                               ; preds = %22, %21
  %61 = phi i16* [ undef, %21 ], [ %56, %22 ]
  %62 = phi i64 [ 0, %21 ], [ %57, %22 ]
  %63 = phi i16* [ %20, %21 ], [ %56, %22 ]
  br i1 %17, label %78, label %64

64:                                               ; preds = %60, %64
  %65 = phi i64 [ %75, %64 ], [ %62, %60 ]
  %66 = phi i16* [ %74, %64 ], [ %63, %60 ]
  %67 = phi i64 [ %76, %64 ], [ %14, %60 ]
  %68 = getelementptr inbounds i32*, i32** %1, i64 %65
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %19
  %71 = load i32, i32* %70, align 4
  %72 = shl i32 %71, %4
  %73 = trunc i32 %72 to i16
  %74 = getelementptr inbounds i16, i16* %66, i64 1
  store i16 %73, i16* %66, align 2
  %75 = add nuw nsw i64 %65, 1
  %76 = add i64 %67, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %64, !llvm.loop !8

78:                                               ; preds = %60, %64, %18
  %79 = phi i16* [ %20, %18 ], [ %61, %60 ], [ %74, %64 ]
  %80 = add nuw nsw i64 %19, 1
  %81 = icmp eq i64 %80, %11
  br i1 %81, label %82, label %18

82:                                               ; preds = %78, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ls_c_16(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %67

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i16**
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds i32*, i32** %1, i64 1
  %11 = zext i32 %3 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %50, label %14

14:                                               ; preds = %7
  %15 = sub nsw i64 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %47, %16 ]
  %18 = phi i16* [ %9, %14 ], [ %46, %16 ]
  %19 = phi i64 [ %15, %14 ], [ %48, %16 ]
  %20 = load i32*, i32** %1, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %17
  %25 = load i32, i32* %24, align 4
  %26 = shl i32 %22, %4
  %27 = trunc i32 %26 to i16
  %28 = getelementptr inbounds i16, i16* %18, i64 1
  store i16 %27, i16* %18, align 2
  %29 = sub i32 %22, %25
  %30 = shl i32 %29, %4
  %31 = trunc i32 %30 to i16
  %32 = getelementptr inbounds i16, i16* %18, i64 2
  store i16 %31, i16* %28, align 2
  %33 = or i64 %17, 1
  %34 = load i32*, i32** %1, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %33
  %36 = load i32, i32* %35, align 4
  %37 = load i32*, i32** %10, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %33
  %39 = load i32, i32* %38, align 4
  %40 = shl i32 %36, %4
  %41 = trunc i32 %40 to i16
  %42 = getelementptr inbounds i16, i16* %18, i64 3
  store i16 %41, i16* %32, align 2
  %43 = sub i32 %36, %39
  %44 = shl i32 %43, %4
  %45 = trunc i32 %44 to i16
  %46 = getelementptr inbounds i16, i16* %18, i64 4
  store i16 %45, i16* %42, align 2
  %47 = add nuw nsw i64 %17, 2
  %48 = add i64 %19, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %16

50:                                               ; preds = %16, %7
  %51 = phi i64 [ 0, %7 ], [ %47, %16 ]
  %52 = phi i16* [ %9, %7 ], [ %46, %16 ]
  %53 = icmp eq i64 %12, 0
  br i1 %53, label %67, label %54

54:                                               ; preds = %50
  %55 = load i32*, i32** %1, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %51
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %10, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %51
  %60 = load i32, i32* %59, align 4
  %61 = shl i32 %57, %4
  %62 = trunc i32 %61 to i16
  %63 = getelementptr inbounds i16, i16* %52, i64 1
  store i16 %62, i16* %52, align 2
  %64 = sub i32 %57, %60
  %65 = shl i32 %64, %4
  %66 = trunc i32 %65 to i16
  store i16 %66, i16* %63, align 2
  br label %67

67:                                               ; preds = %54, %50, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_rs_c_16(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %67

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i16**
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds i32*, i32** %1, i64 1
  %11 = zext i32 %3 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %50, label %14

14:                                               ; preds = %7
  %15 = sub nsw i64 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %47, %16 ]
  %18 = phi i16* [ %9, %14 ], [ %46, %16 ]
  %19 = phi i64 [ %15, %14 ], [ %48, %16 ]
  %20 = load i32*, i32** %1, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %17
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %22
  %27 = shl i32 %26, %4
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds i16, i16* %18, i64 1
  store i16 %28, i16* %18, align 2
  %30 = shl i32 %25, %4
  %31 = trunc i32 %30 to i16
  %32 = getelementptr inbounds i16, i16* %18, i64 2
  store i16 %31, i16* %29, align 2
  %33 = or i64 %17, 1
  %34 = load i32*, i32** %1, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %33
  %36 = load i32, i32* %35, align 4
  %37 = load i32*, i32** %10, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %33
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, %36
  %41 = shl i32 %40, %4
  %42 = trunc i32 %41 to i16
  %43 = getelementptr inbounds i16, i16* %18, i64 3
  store i16 %42, i16* %32, align 2
  %44 = shl i32 %39, %4
  %45 = trunc i32 %44 to i16
  %46 = getelementptr inbounds i16, i16* %18, i64 4
  store i16 %45, i16* %43, align 2
  %47 = add nuw nsw i64 %17, 2
  %48 = add i64 %19, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %16

50:                                               ; preds = %16, %7
  %51 = phi i64 [ 0, %7 ], [ %47, %16 ]
  %52 = phi i16* [ %9, %7 ], [ %46, %16 ]
  %53 = icmp eq i64 %12, 0
  br i1 %53, label %67, label %54

54:                                               ; preds = %50
  %55 = load i32*, i32** %1, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %51
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %10, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %51
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, %57
  %62 = shl i32 %61, %4
  %63 = trunc i32 %62 to i16
  %64 = getelementptr inbounds i16, i16* %52, i64 1
  store i16 %63, i16* %52, align 2
  %65 = shl i32 %60, %4
  %66 = trunc i32 %65 to i16
  store i16 %66, i16* %64, align 2
  br label %67

67:                                               ; preds = %54, %50, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ms_c_16(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %73

7:                                                ; preds = %5
  %8 = bitcast i8** %0 to i16**
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds i32*, i32** %1, i64 1
  %11 = zext i32 %3 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %54, label %14

14:                                               ; preds = %7
  %15 = sub nsw i64 %11, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %51, %16 ]
  %18 = phi i16* [ %9, %14 ], [ %50, %16 ]
  %19 = phi i64 [ %15, %14 ], [ %52, %16 ]
  %20 = load i32*, i32** %1, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %17
  %25 = load i32, i32* %24, align 4
  %26 = ashr i32 %25, 1
  %27 = sub i32 %22, %26
  %28 = add i32 %27, %25
  %29 = shl i32 %28, %4
  %30 = trunc i32 %29 to i16
  %31 = getelementptr inbounds i16, i16* %18, i64 1
  store i16 %30, i16* %18, align 2
  %32 = shl i32 %27, %4
  %33 = trunc i32 %32 to i16
  %34 = getelementptr inbounds i16, i16* %18, i64 2
  store i16 %33, i16* %31, align 2
  %35 = or i64 %17, 1
  %36 = load i32*, i32** %1, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 %35
  %38 = load i32, i32* %37, align 4
  %39 = load i32*, i32** %10, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %35
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  %43 = sub i32 %38, %42
  %44 = add i32 %43, %41
  %45 = shl i32 %44, %4
  %46 = trunc i32 %45 to i16
  %47 = getelementptr inbounds i16, i16* %18, i64 3
  store i16 %46, i16* %34, align 2
  %48 = shl i32 %43, %4
  %49 = trunc i32 %48 to i16
  %50 = getelementptr inbounds i16, i16* %18, i64 4
  store i16 %49, i16* %47, align 2
  %51 = add nuw nsw i64 %17, 2
  %52 = add i64 %19, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %16

54:                                               ; preds = %16, %7
  %55 = phi i64 [ 0, %7 ], [ %51, %16 ]
  %56 = phi i16* [ %9, %7 ], [ %50, %16 ]
  %57 = icmp eq i64 %12, 0
  br i1 %57, label %73, label %58

58:                                               ; preds = %54
  %59 = load i32*, i32** %1, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 %55
  %61 = load i32, i32* %60, align 4
  %62 = load i32*, i32** %10, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 %55
  %64 = load i32, i32* %63, align 4
  %65 = ashr i32 %64, 1
  %66 = sub i32 %61, %65
  %67 = add i32 %66, %64
  %68 = shl i32 %67, %4
  %69 = trunc i32 %68 to i16
  %70 = getelementptr inbounds i16, i16* %56, i64 1
  store i16 %69, i16* %56, align 2
  %71 = shl i32 %66, %4
  %72 = trunc i32 %71 to i16
  store i16 %72, i16* %70, align 2
  br label %73

73:                                               ; preds = %58, %54, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_indep_c_16p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %61

7:                                                ; preds = %5
  %8 = icmp sgt i32 %2, 0
  %9 = zext i32 %3 to i64
  %10 = zext i32 %2 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %2, 1
  %13 = sub nsw i64 %10, %11
  %14 = icmp eq i64 %11, 0
  br label %15

15:                                               ; preds = %58, %7
  %16 = phi i64 [ 0, %7 ], [ %59, %58 ]
  br i1 %8, label %17, label %58

17:                                               ; preds = %15
  br i1 %12, label %45, label %18

18:                                               ; preds = %17, %18
  %19 = phi i64 [ %42, %18 ], [ 0, %17 ]
  %20 = phi i64 [ %43, %18 ], [ %13, %17 ]
  %21 = getelementptr inbounds i32*, i32** %1, i64 %19
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %16
  %24 = load i32, i32* %23, align 4
  %25 = shl i32 %24, %4
  %26 = trunc i32 %25 to i16
  %27 = getelementptr inbounds i8*, i8** %0, i64 %19
  %28 = bitcast i8** %27 to i16**
  %29 = load i16*, i16** %28, align 8
  %30 = getelementptr inbounds i16, i16* %29, i64 %16
  store i16 %26, i16* %30, align 2
  %31 = or i64 %19, 1
  %32 = getelementptr inbounds i32*, i32** %1, i64 %31
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %16
  %35 = load i32, i32* %34, align 4
  %36 = shl i32 %35, %4
  %37 = trunc i32 %36 to i16
  %38 = getelementptr inbounds i8*, i8** %0, i64 %31
  %39 = bitcast i8** %38 to i16**
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds i16, i16* %40, i64 %16
  store i16 %37, i16* %41, align 2
  %42 = add nuw nsw i64 %19, 2
  %43 = add i64 %20, -2
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %18

45:                                               ; preds = %18, %17
  %46 = phi i64 [ 0, %17 ], [ %42, %18 ]
  br i1 %14, label %58, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i32*, i32** %1, i64 %46
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %16
  %51 = load i32, i32* %50, align 4
  %52 = shl i32 %51, %4
  %53 = trunc i32 %52 to i16
  %54 = getelementptr inbounds i8*, i8** %0, i64 %46
  %55 = bitcast i8** %54 to i16**
  %56 = load i16*, i16** %55, align 8
  %57 = getelementptr inbounds i16, i16* %56, i64 %16
  store i16 %53, i16* %57, align 2
  br label %58

58:                                               ; preds = %47, %45, %15
  %59 = add nuw nsw i64 %16, 1
  %60 = icmp eq i64 %59, %9
  br i1 %60, label %61, label %15

61:                                               ; preds = %58, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ls_c_16p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = bitcast i8** %0 to i16**
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32*, i32** %1, i64 1
  %10 = getelementptr inbounds i8*, i8** %0, i64 1
  %11 = bitcast i8** %10 to i16**
  %12 = zext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i64 [ 0, %8 ], [ %30, %13 ]
  %15 = load i32*, i32** %1, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %14
  %20 = load i32, i32* %19, align 4
  %21 = shl i32 %17, %4
  %22 = trunc i32 %21 to i16
  %23 = load i16*, i16** %6, align 8
  %24 = getelementptr inbounds i16, i16* %23, i64 %14
  store i16 %22, i16* %24, align 2
  %25 = sub i32 %17, %20
  %26 = shl i32 %25, %4
  %27 = trunc i32 %26 to i16
  %28 = load i16*, i16** %11, align 8
  %29 = getelementptr inbounds i16, i16* %28, i64 %14
  store i16 %27, i16* %29, align 2
  %30 = add nuw nsw i64 %14, 1
  %31 = icmp eq i64 %30, %12
  br i1 %31, label %32, label %13

32:                                               ; preds = %13, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_rs_c_16p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = bitcast i8** %0 to i16**
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32*, i32** %1, i64 1
  %10 = getelementptr inbounds i8*, i8** %0, i64 1
  %11 = bitcast i8** %10 to i16**
  %12 = zext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i64 [ 0, %8 ], [ %30, %13 ]
  %15 = load i32*, i32** %1, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %14
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, %17
  %22 = shl i32 %21, %4
  %23 = trunc i32 %22 to i16
  %24 = load i16*, i16** %6, align 8
  %25 = getelementptr inbounds i16, i16* %24, i64 %14
  store i16 %23, i16* %25, align 2
  %26 = shl i32 %20, %4
  %27 = trunc i32 %26 to i16
  %28 = load i16*, i16** %11, align 8
  %29 = getelementptr inbounds i16, i16* %28, i64 %14
  store i16 %27, i16* %29, align 2
  %30 = add nuw nsw i64 %14, 1
  %31 = icmp eq i64 %30, %12
  br i1 %31, label %32, label %13

32:                                               ; preds = %13, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @flac_decorrelate_ms_c_16p(i8** nocapture readonly, i32** nocapture readonly, i32, i32, i32) #1 {
  %6 = bitcast i8** %0 to i16**
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %34

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32*, i32** %1, i64 1
  %10 = getelementptr inbounds i8*, i8** %0, i64 1
  %11 = bitcast i8** %10 to i16**
  %12 = zext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i64 [ 0, %8 ], [ %32, %13 ]
  %15 = load i32*, i32** %1, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %14
  %20 = load i32, i32* %19, align 4
  %21 = ashr i32 %20, 1
  %22 = sub i32 %17, %21
  %23 = add i32 %22, %20
  %24 = shl i32 %23, %4
  %25 = trunc i32 %24 to i16
  %26 = load i16*, i16** %6, align 8
  %27 = getelementptr inbounds i16, i16* %26, i64 %14
  store i16 %25, i16* %27, align 2
  %28 = shl i32 %22, %4
  %29 = trunc i32 %28 to i16
  %30 = load i16*, i16** %11, align 8
  %31 = getelementptr inbounds i16, i16* %30, i64 %14
  store i16 %29, i16* %31, align 2
  %32 = add nuw nsw i64 %14, 1
  %33 = icmp eq i64 %32, %12
  br i1 %33, label %34, label %13

34:                                               ; preds = %13, %5
  ret void
}

declare void @ff_flacdsp_init_x86(%struct.FLACDSPContext*, i32, i32, i32) local_unnamed_addr #2

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
