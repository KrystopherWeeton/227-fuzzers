; ModuleID = '../../native_client/src/shared/platform/posix/condition_variable.c'
source_filename = "../../native_client/src/shared/platform/posix/condition_variable.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_condattr_t = type { i32 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.timespec = type { i64, i64 }
%struct.timeval = type { i64, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCondVarCtor(%struct.NaClCondVar*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClCondVar, %struct.NaClCondVar* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %2, %union.pthread_condattr_t* null) #5
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind
declare i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_condattr_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClCondVarDtor(%struct.NaClCondVar*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClCondVar, %struct.NaClCondVar* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %2) #5
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_destroy(%union.pthread_cond_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCondVarSignal(%struct.NaClCondVar*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClCondVar, %struct.NaClCondVar* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %2) #5
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCondVarBroadcast(%struct.NaClCondVar*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClCondVar, %struct.NaClCondVar* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %2) #5
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @pthread_cond_broadcast(%union.pthread_cond_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCondVarWait(%struct.NaClCondVar*, %struct.NaClMutex*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClCondVar, %struct.NaClCondVar* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.NaClMutex, %struct.NaClMutex* %1, i64 0, i32 0
  %5 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %3, %union.pthread_mutex_t* %4) #5
  ret i32 0
}

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCondVarTimedWaitRelative(%struct.NaClCondVar*, %struct.NaClMutex*, %struct.nacl_abi_timespec* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca %struct.timespec, align 8
  %5 = alloca %struct.timeval, align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %2, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = bitcast %struct.timeval* %5 to i8*
  %13 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #5
  %14 = bitcast i64* %6 to i8*
  %15 = bitcast %struct.timeval* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  store i64 0, i64* %6, align 8
  %16 = call i32 @gettimeofday(%struct.timeval* nonnull %5, i8* nonnull %14) #5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %40

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 0
  %20 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 1
  %21 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, i32 0
  %22 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, i32 1
  %23 = sext i32 %10 to i64
  %24 = udiv i64 %23, 1000
  %25 = load i64, i64* %19, align 8
  %26 = load i64, i64* %20, align 8
  %27 = add i64 %25, %8
  %28 = mul i64 %27, 1000000
  %29 = add i64 %26, %24
  %30 = add i64 %29, %28
  %31 = udiv i64 %30, 1000000
  store i64 %31, i64* %21, align 8
  %32 = mul i64 %31, -1000000
  %33 = add i64 %32, %30
  %34 = mul i64 %33, 1000
  store i64 %34, i64* %22, align 8
  %35 = getelementptr inbounds %struct.NaClCondVar, %struct.NaClCondVar* %0, i64 0, i32 0
  %36 = getelementptr inbounds %struct.NaClMutex, %struct.NaClMutex* %1, i64 0, i32 0
  %37 = call i32 @pthread_cond_timedwait(%union.pthread_cond_t* %35, %union.pthread_mutex_t* %36, %struct.timespec* nonnull %4) #5
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i32 0, i32 7
  br label %40

40:                                               ; preds = %3, %18
  %41 = phi i32 [ %39, %18 ], [ 1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  ret i32 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #4

declare i32 @pthread_cond_timedwait(%union.pthread_cond_t*, %union.pthread_mutex_t*, %struct.timespec*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCondVarTimedWaitAbsolute(%struct.NaClCondVar*, %struct.NaClMutex*, %struct.nacl_abi_timespec* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca %struct.timespec, align 8
  %5 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, i32 0
  %7 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, i32 1
  %8 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %7, align 8
  %13 = getelementptr inbounds %struct.NaClCondVar, %struct.NaClCondVar* %0, i64 0, i32 0
  %14 = getelementptr inbounds %struct.NaClMutex, %struct.NaClMutex* %1, i64 0, i32 0
  %15 = call i32 @pthread_cond_timedwait(%union.pthread_cond_t* %13, %union.pthread_mutex_t* %14, %struct.timespec* nonnull %4) #5
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 0, i32 7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret i32 %17
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
