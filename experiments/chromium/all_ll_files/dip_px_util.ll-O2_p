; ModuleID = '../../chrome/browser/apps/app_service/dip_px_util.cc'
source_filename = "../../chrome/browser/apps/app_service/dip_px_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.0" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9apps_util14ConvertDipToPxEib(i32, i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca %"class.display::Display", align 8
  %4 = alloca %"class.gfx::Size", align 4
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  %6 = icmp eq %"class.display::Screen"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %8) #4
  %9 = bitcast %"class.display::Screen"* %5 to void (%"class.display::Display"*, %"class.display::Screen"*)***
  %10 = load void (%"class.display::Display"*, %"class.display::Screen"*)**, void (%"class.display::Display"*, %"class.display::Screen"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %10, i64 12
  %12 = load void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %11, align 8
  call void %12(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* nonnull %5) #4
  %13 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 4
  %14 = load float, float* %13, align 8
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %8) #4
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi float [ %14, %7 ], [ 1.000000e+00, %2 ]
  br i1 %1, label %17, label %20

17:                                               ; preds = %15
  %18 = call i32 @_ZN2ui23GetSupportedScaleFactorEf(float %16) #4
  %19 = call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %18) #4
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi float [ %19, %17 ], [ %16, %15 ]
  %22 = bitcast %"class.gfx::Size"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  %23 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 0
  %24 = icmp sgt i32 %0, 0
  %25 = select i1 %24, i32 %0, i32 0
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 %25, i32* %26, align 4
  %27 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %4, float %21) #4
  %28 = trunc i64 %27 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9apps_util14ConvertPxToDipEib(i32, i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca %"class.display::Display", align 8
  %4 = alloca %"class.gfx::Size", align 4
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  %6 = icmp eq %"class.display::Screen"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %8) #4
  %9 = bitcast %"class.display::Screen"* %5 to void (%"class.display::Display"*, %"class.display::Screen"*)***
  %10 = load void (%"class.display::Display"*, %"class.display::Screen"*)**, void (%"class.display::Display"*, %"class.display::Screen"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %10, i64 12
  %12 = load void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %11, align 8
  call void %12(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* nonnull %5) #4
  %13 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 4
  %14 = load float, float* %13, align 8
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %8) #4
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi float [ %14, %7 ], [ 1.000000e+00, %2 ]
  br i1 %1, label %17, label %20

17:                                               ; preds = %15
  %18 = call i32 @_ZN2ui23GetSupportedScaleFactorEf(float %16) #4
  %19 = call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %18) #4
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi float [ %19, %17 ], [ %16, %15 ]
  %22 = fdiv float 1.000000e+00, %21
  %23 = bitcast %"class.gfx::Size"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  %24 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 0
  %25 = icmp sgt i32 %0, 0
  %26 = select i1 %25, i32 %0, i32 0
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 %26, i32* %27, align 4
  %28 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %4, float %22) #4
  %29 = trunc i64 %28 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9apps_util30GetPrimaryDisplayUIScaleFactorEv() local_unnamed_addr #0 {
  %1 = alloca %"class.display::Display", align 8
  %2 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  %3 = icmp eq %"class.display::Screen"* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %0
  %5 = bitcast %"class.display::Display"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %5) #4
  %6 = bitcast %"class.display::Screen"* %2 to void (%"class.display::Display"*, %"class.display::Screen"*)***
  %7 = load void (%"class.display::Display"*, %"class.display::Screen"*)**, void (%"class.display::Display"*, %"class.display::Screen"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %7, i64 12
  %9 = load void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %8, align 8
  call void %9(%"class.display::Display"* nonnull sret %1, %"class.display::Screen"* nonnull %2) #4
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 4
  %11 = load float, float* %10, align 8
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %5) #4
  br label %12

12:                                               ; preds = %0, %4
  %13 = phi float [ %11, %4 ], [ 1.000000e+00, %0 ]
  %14 = call i32 @_ZN2ui23GetSupportedScaleFactorEf(float %13) #4
  ret i32 %14
}

declare i32 @_ZN2ui23GetSupportedScaleFactorEf(float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32) local_unnamed_addr #1

declare i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
