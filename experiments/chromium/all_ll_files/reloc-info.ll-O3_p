; ModuleID = '../../v8/src/codegen/reloc-info.cc'
source_filename = "../../v8/src/codegen/reloc-info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::CodeReference" = type { i32, %union.anon }
%union.anon = type { i8* }
%"class.v8::internal::EmbeddedData" = type <{ i8*, i32, [4 x i8], i8*, i32, [4 x i8] }>
%"class.v8::internal::CodeDesc" = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %"class.v8::internal::Assembler"* }
%"class.v8::internal::Assembler" = type { %"class.v8::internal::AssemblerBase", %"class.v8::internal::RelocInfoWriter", %"class.std::__1::deque", i32, %"class.std::__1::deque", %"class.std::__1::map.384", %"class.v8::internal::ConstPool" }
%"class.v8::internal::AssemblerBase" = type { i32 (...)**, %"class.std::__1::unique_ptr.318", i8*, %"class.std::__1::forward_list", i8*, %"class.v8::internal::CodeCommentsWriter", %"class.std::__1::vector.336", %"class.std::__1::vector.343", %"class.std::__1::unordered_map.351", %"struct.v8::internal::AssemblerOptions", i64, i8, i8, %"class.v8::internal::JumpOptimizationInfo"* }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.v8::internal::AssemblerBuffer"* }
%"class.v8::internal::AssemblerBuffer" = type { i32 (...)** }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.v8::internal::CodeCommentsWriter" = type { i32, %"class.std::__1::vector.329" }
%"class.std::__1::vector.329" = type { %"class.std::__1::__vector_base.330" }
%"class.std::__1::__vector_base.330" = type { %"struct.v8::internal::CodeCommentEntry"*, %"struct.v8::internal::CodeCommentEntry"*, %"class.std::__1::__compressed_pair.331" }
%"struct.v8::internal::CodeCommentEntry" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.239 }
%union.anon.239 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.v8::internal::CodeCommentEntry"* }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"class.std::__1::__compressed_pair.338" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.v8::internal::Handle"* }
%"class.std::__1::vector.343" = type { %"class.std::__1::__vector_base.344" }
%"class.std::__1::__vector_base.344" = type { %"class.v8::internal::Handle.345"*, %"class.v8::internal::Handle.345"*, %"class.std::__1::__compressed_pair.346" }
%"class.v8::internal::Handle.345" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.v8::internal::Handle.345"* }
%"class.std::__1::unordered_map.351" = type { %"class.std::__1::__hash_table.352" }
%"class.std::__1::__hash_table.352" = type <{ %"class.std::__1::unique_ptr.353", %"class.std::__1::__compressed_pair.363", %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.371", [4 x i8] }>
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355", %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"struct.std::__1::__hash_node_base.356"** }
%"struct.std::__1::__hash_node_base.356" = type { %"struct.std::__1::__hash_node_base.356"* }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.std::__1::__bucket_list_deallocator.358" }
%"class.std::__1::__bucket_list_deallocator.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.356" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { float }
%"struct.v8::internal::AssemblerOptions" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::JumpOptimizationInfo" = type { i32, i8, %"class.std::__1::vector.86", i64 }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { i32*, i32*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i32* }
%"class.v8::internal::RelocInfoWriter" = type { i8*, i8* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.380" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { i32** }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.384" = type { %"class.std::__1::__tree.385" }
%"class.std::__1::__tree.385" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::ConstPool" = type { %"class.v8::internal::Assembler"*, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.395" }
%"class.std::__1::__tree.395" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.415", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.446", %"class.std::__1::vector.450", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.560", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.576", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.580", %"class.std::__1::vector.580", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.593", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"class.std::__1::unique_ptr.774", %"class.std::__1::unique_ptr.813", %"class.std::__1::unique_ptr.843", %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.859", %"class.std::__1::unique_ptr.865", %"class.std::__1::unique_ptr.865", %"class.std::__1::unique_ptr.871", %"class.std::__1::unique_ptr.877", %"class.std::__1::unique_ptr.877", %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", %"class.std::__1::shared_ptr.895", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.900", %"class.std::__1::unique_ptr.926", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.932", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.945", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.745", i8, [7 x i8], %"class.std::__1::unordered_map.951", %"class.std::__1::unordered_map.977", %"class.std::__1::unordered_map.951", %"class.std::__1::unordered_map.1001", %"class.std::__1::vector.1029", i8, %"class.std::__1::unique_ptr.1036", i32, i32 }
%"class.std::__1::unordered_map.415" = type { %"class.std::__1::__hash_table.416" }
%"class.std::__1::__hash_table.416" = type <{ %"class.std::__1::unique_ptr.417", %"class.std::__1::__compressed_pair.427", %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.435", [4 x i8] }>
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419", %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.std::__1::__hash_node_base.420"** }
%"struct.std::__1::__hash_node_base.420" = type { %"struct.std::__1::__hash_node_base.420"* }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.std::__1::__bucket_list_deallocator.422" }
%"class.std::__1::__bucket_list_deallocator.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"struct.std::__1::__hash_node_base.420" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.441", %"struct.std::__1::atomic.441", %"struct.std::__1::atomic.441" }
%"struct.std::__1::atomic.441" = type { %"struct.std::__1::__atomic_base.442" }
%"struct.std::__1::__atomic_base.442" = type { %"struct.std::__1::__atomic_base.443" }
%"struct.std::__1::__atomic_base.443" = type { %"struct.std::__1::__cxx_atomic_impl.444" }
%"struct.std::__1::__cxx_atomic_impl.444" = type { %"struct.std::__1::__cxx_atomic_base_impl.445" }
%"struct.std::__1::__cxx_atomic_base_impl.445" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.409", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.1042", %"class.std::__1::unique_ptr.1063", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.1249", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.1259", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.1269", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.1274", %"struct.std::__1::atomic.566", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1349", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.343"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1396", i32, i8, i8, i32, i32, %"class.std::__1::vector.1402", %"class.std::__1::vector.1402", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1409", i64, %"class.std::__1::unordered_map.1410", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.938", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.575", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1462", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1500", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1534", %"class.std::__1::vector.1538", %"class.std::__1::vector.1538", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.403", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.403" = type { %"struct.std::__1::__atomic_base.404" }
%"struct.std::__1::__atomic_base.404" = type { %"struct.std::__1::__cxx_atomic_impl.405" }
%"struct.std::__1::__cxx_atomic_impl.405" = type { %"struct.std::__1::__cxx_atomic_base_impl.406" }
%"struct.std::__1::__cxx_atomic_base_impl.406" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.407", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.407" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.938" }
%"class.std::__1::shared_ptr.1042" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.553", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.1043", %"class.std::__1::unique_ptr.1057" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.555" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.441", %"struct.std::__1::atomic.489", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.489" = type { %"struct.std::__1::__atomic_base.490" }
%"struct.std::__1::__atomic_base.490" = type { %"struct.std::__1::__cxx_atomic_impl.491" }
%"struct.std::__1::__cxx_atomic_impl.491" = type { %"struct.std::__1::__cxx_atomic_base_impl.492" }
%"struct.std::__1::__cxx_atomic_base_impl.492" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.1046" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.553", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.1046" = type { %"class.std::__1::__vector_base.1047" }
%"class.std::__1::__vector_base.1047" = type { %"class.std::__1::unique_ptr.1048"*, %"class.std::__1::unique_ptr.1048"*, %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1547" }
%"class.std::__1::__compressed_pair.1547" = type { %"struct.std::__1::__compressed_pair_elem.1548" }
%"struct.std::__1::__compressed_pair_elem.1548" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.std::__1::unique_ptr.1048"* }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.1066", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.1066" = type { %"struct.std::__1::__atomic_base.1067" }
%"struct.std::__1::__atomic_base.1067" = type { %"struct.std::__1::__cxx_atomic_impl.1068" }
%"struct.std::__1::__cxx_atomic_impl.1068" = type { %"struct.std::__1::__cxx_atomic_base_impl.1069" }
%"struct.std::__1::__cxx_atomic_base_impl.1069" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.20", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.20" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.21", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::unique_ptr"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.28 }
%union.anon.28 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1073", %"class.std::__1::unique_ptr.1079", %"struct.std::__1::atomic.566", %"class.std::__1::unique_ptr.1085", %"class.std::__1::unique_ptr.1091", %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1103", %"class.std::__1::unique_ptr.1109", %"class.std::__1::set.1115", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.1109" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.1115" = type { %"class.std::__1::__tree.1116" }
%"class.std::__1::__tree.1116" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1117", %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.1125" }
%"class.v8::internal::TaggedImpl.1125" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.1124" }
%"class.v8::internal::TaggedImpl.1124" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.1165", %"class.std::__1::unique_ptr.1172" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.1126", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.1152", %"class.v8::internal::Handle.1164", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.1126" = type { %"class.std::__1::__vector_base.1127" }
%"class.std::__1::__vector_base.1127" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.1147" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.1128", i32, i32, i32, [4 x i8], %"class.std::__1::deque.1129", %"class.v8::base::Optional.1142", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.1128" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque.1129" = type { %"class.std::__1::__deque_base.1130" }
%"class.std::__1::__deque_base.1130" = type { %"struct.std::__1::__split_buffer.1131", i64, %"class.std::__1::__compressed_pair.1138" }
%"struct.std::__1::__split_buffer.1131" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.1133" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.345", %union.anon.1132 }
%union.anon.1132 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::base::Optional.1142" = type { %"class.v8::base::internal::OptionalBase.1143" }
%"class.v8::base::internal::OptionalBase.1143" = type { %"struct.v8::base::internal::OptionalStorage.1144" }
%"struct.v8::base::internal::OptionalStorage.1144" = type { %"struct.v8::base::internal::OptionalStorageBase.1145" }
%"struct.v8::base::internal::OptionalStorageBase.1145" = type { i8, %union.anon.1146 }
%union.anon.1146 = type { i8 }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.1152" = type { %"class.std::__1::__deque_base.1153" }
%"class.std::__1::__deque_base.1153" = type { %"struct.std::__1::__split_buffer.1154", i64, %"class.std::__1::__compressed_pair.1160" }
%"struct.std::__1::__split_buffer.1154" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.1155" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::Handle.1164" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.1167" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.1172" = type { %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.1178", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.1184", %"class.v8::internal::DetachableVector.1185", %"class.v8::internal::DetachableVector.1184", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.1185" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.1184" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.39", %"class.std::__1::set.47" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.39" = type { %"class.std::__1::__tree.40" }
%"class.std::__1::__tree.40" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::set.47" = type { %"class.std::__1::__tree.48" }
%"class.std::__1::__tree.48" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1186", %"class.std::__1::vector.1192", %"class.std::__1::unique_ptr.1199", %"class.std::__1::vector.1206", %"class.std::__1::unique_ptr.1213", i64, %"class.std::__1::vector.1219", %"class.std::__1::vector.1227", %"class.std::__1::vector.1235", i8, i8, i32 }
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.1192" = type { %"class.std::__1::__vector_base.1193" }
%"class.std::__1::__vector_base.1193" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.1194" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.v8::internal::GlobalHandles::NodeSpace.1202"* }
%"class.v8::internal::GlobalHandles::NodeSpace.1202" = type opaque
%"class.std::__1::vector.1206" = type { %"class.std::__1::__vector_base.1207" }
%"class.std::__1::__vector_base.1207" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.1208" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.1219" = type { %"class.std::__1::__vector_base.1220" }
%"class.std::__1::__vector_base.1220" = type { %"struct.std::__1::pair.1221"*, %"struct.std::__1::pair.1221"*, %"class.std::__1::__compressed_pair.1222" }
%"struct.std::__1::pair.1221" = type opaque
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"struct.std::__1::pair.1221"* }
%"class.std::__1::vector.1227" = type { %"class.std::__1::__vector_base.1228" }
%"class.std::__1::__vector_base.1228" = type { %"struct.std::__1::pair.1229"*, %"struct.std::__1::pair.1229"*, %"class.std::__1::__compressed_pair.1230" }
%"struct.std::__1::pair.1229" = type opaque
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"struct.std::__1::pair.1229"* }
%"class.std::__1::vector.1235" = type { %"class.std::__1::__vector_base.1236" }
%"class.std::__1::__vector_base.1236" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.1237" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.1242", %"class.std::__1::vector.1249" }
%"class.std::__1::vector.1242" = type { %"class.std::__1::__vector_base.1243" }
%"class.std::__1::__vector_base.1243" = type { i64**, i64**, %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.1253" }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.1249" = type { %"class.std::__1::__vector_base.1250" }
%"class.std::__1::__vector_base.1250" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.1259" = type { %"struct.std::__1::__atomic_base.1260" }
%"struct.std::__1::__atomic_base.1260" = type { %"struct.std::__1::__cxx_atomic_impl.1261" }
%"struct.std::__1::__cxx_atomic_impl.1261" = type { %"struct.std::__1::__cxx_atomic_base_impl.1262" }
%"struct.std::__1::__cxx_atomic_base_impl.1262" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.1269" = type { %"struct.std::__1::__atomic_base.1270" }
%"struct.std::__1::__atomic_base.1270" = type { %"struct.std::__1::__cxx_atomic_impl.1271" }
%"struct.std::__1::__cxx_atomic_impl.1271" = type { %"struct.std::__1::__cxx_atomic_base_impl.1272" }
%"struct.std::__1::__cxx_atomic_base_impl.1272" = type { i32 }
%"class.std::__1::unordered_map.1274" = type { %"class.std::__1::__hash_table.1275" }
%"class.std::__1::__hash_table.1275" = type <{ %"class.std::__1::unique_ptr.1276", %"class.std::__1::__compressed_pair.1286", %"class.std::__1::__compressed_pair.1291", %"class.std::__1::__compressed_pair.1294", [4 x i8] }>
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278", %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"struct.std::__1::__hash_node_base.1279"** }
%"struct.std::__1::__hash_node_base.1279" = type { %"struct.std::__1::__hash_node_base.1279"* }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.std::__1::__bucket_list_deallocator.1281" }
%"class.std::__1::__bucket_list_deallocator.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"struct.std::__1::__hash_node_base.1279" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::atomic.566" = type { %"struct.std::__1::__atomic_base.567" }
%"struct.std::__1::__atomic_base.567" = type { %"struct.std::__1::__cxx_atomic_impl.568" }
%"struct.std::__1::__cxx_atomic_impl.568" = type { %"struct.std::__1::__cxx_atomic_base_impl.569" }
%"struct.std::__1::__cxx_atomic_base_impl.569" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.1300", %"class.v8::internal::Handle.1306", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.1307", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.1300" = type { %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.1306" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1307" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.1308", %"class.std::__1::vector.1314", %"class.std::__1::unique_ptr.1322", %"class.std::__1::unique_ptr.1328", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1334", %"class.std::__1::vector.1340", %"struct.std::__1::pair.1348" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1308" = type { %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.1314" = type { %"class.std::__1::__vector_base.1315" }
%"class.std::__1::__vector_base.1315" = type { %"class.std::__1::unique_ptr.1316"*, %"class.std::__1::unique_ptr.1316"*, %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::unique_ptr.1316" = type opaque
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"class.std::__1::unique_ptr.1316"* }
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.1340" = type { %"class.std::__1::__vector_base.1341" }
%"class.std::__1::__vector_base.1341" = type { %"struct.std::__1::pair.1342"*, %"struct.std::__1::pair.1342"*, %"class.std::__1::__compressed_pair.1343" }
%"struct.std::__1::pair.1342" = type opaque
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { %"struct.std::__1::pair.1342"* }
%"struct.std::__1::pair.1348" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.408"*, i16, i8*)*, i8* }
%"class.v8::Local.408" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1349" = type { %"class.std::__1::__compressed_pair.1350" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1352", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1352" = type { %"class.std::__1::__hash_table.1353" }
%"class.std::__1::__hash_table.1353" = type <{ %"class.std::__1::unique_ptr.1354", %"class.std::__1::__compressed_pair.1364", %"class.std::__1::__compressed_pair.1369", %"class.std::__1::__compressed_pair.1373", [4 x i8] }>
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356", %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"struct.std::__1::__hash_node_base.1357"** }
%"struct.std::__1::__hash_node_base.1357" = type { %"struct.std::__1::__hash_node_base.1357"* }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.std::__1::__bucket_list_deallocator.1359" }
%"class.std::__1::__bucket_list_deallocator.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"struct.std::__1::__hash_node_base.1357" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1381" }
%"class.std::__1::deque.1381" = type { %"class.std::__1::__deque_base.1382" }
%"class.std::__1::__deque_base.1382" = type { %"struct.std::__1::__split_buffer.1383", i64, %"class.std::__1::__compressed_pair.1390" }
%"struct.std::__1::__split_buffer.1383" = type { %"struct.std::__1::pair.1384"**, %"struct.std::__1::pair.1384"**, %"struct.std::__1::pair.1384"**, %"class.std::__1::__compressed_pair.1385" }
%"struct.std::__1::pair.1384" = type opaque
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.1386" }
%"struct.std::__1::__compressed_pair_elem.1386" = type { %"struct.std::__1::pair.1384"** }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.1395" }
%"class.v8::internal::PointerToIndexHashMap.1395" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.1264", i32, %"class.v8::Local.408" }
%"class.v8::Local.1264" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1396" = type { %"class.std::__1::__compressed_pair.1397" }
%"class.std::__1::__compressed_pair.1397" = type { %"struct.std::__1::__compressed_pair_elem.1398" }
%"struct.std::__1::__compressed_pair_elem.1398" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.1242", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1402" = type { %"class.std::__1::__vector_base.1403" }
%"class.std::__1::__vector_base.1403" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1404" }
%"class.std::__1::__compressed_pair.1404" = type { %"struct.std::__1::__compressed_pair_elem.1405" }
%"struct.std::__1::__compressed_pair_elem.1405" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1409" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1410" = type { %"class.std::__1::__hash_table.1411" }
%"class.std::__1::__hash_table.1411" = type <{ %"class.std::__1::unique_ptr.1412", %"class.std::__1::__compressed_pair.1422", %"class.std::__1::__compressed_pair.1427", %"class.std::__1::__compressed_pair.1430", [4 x i8] }>
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414", %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"struct.std::__1::__hash_node_base.1415"** }
%"struct.std::__1::__hash_node_base.1415" = type { %"struct.std::__1::__hash_node_base.1415"* }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.std::__1::__bucket_list_deallocator.1417" }
%"class.std::__1::__bucket_list_deallocator.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1422" = type { %"struct.std::__1::__compressed_pair_elem.1423" }
%"struct.std::__1::__compressed_pair_elem.1423" = type { %"struct.std::__1::__hash_node_base.1415" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1430" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.938" = type { %"class.std::__1::__vector_base.939" }
%"class.std::__1::__vector_base.939" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.575" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1434", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1459", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1460", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1434" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%"class.std::__1::weak_ptr.1459" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.575" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1460" = type { %"class.v8::PersistentBase.1461" }
%"class.v8::PersistentBase.1461" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1435", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1435" = type { %"class.std::__1::__hash_table.1436" }
%"class.std::__1::__hash_table.1436" = type <{ %"class.std::__1::unique_ptr.1437", %"class.std::__1::__compressed_pair.1447", %"class.std::__1::__compressed_pair.1452", %"class.std::__1::__compressed_pair.1455", [4 x i8] }>
%"class.std::__1::unique_ptr.1437" = type { %"class.std::__1::__compressed_pair.1438" }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.1439", %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1439" = type { %"struct.std::__1::__hash_node_base.1440"** }
%"struct.std::__1::__hash_node_base.1440" = type { %"struct.std::__1::__hash_node_base.1440"* }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.std::__1::__bucket_list_deallocator.1442" }
%"class.std::__1::__bucket_list_deallocator.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.1448" }
%"struct.std::__1::__compressed_pair_elem.1448" = type { %"struct.std::__1::__hash_node_base.1440" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1462" = type { %"class.std::__1::__compressed_pair.1463" }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.1464" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1491", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1467", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1471", %"class.std::__1::unique_ptr.1477", %"class.std::__1::unique_ptr.889", %"class.std::__1::vector.1483", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1467" = type { %"struct.std::__1::__atomic_base.1468" }
%"struct.std::__1::__atomic_base.1468" = type { %"struct.std::__1::__cxx_atomic_impl.1469" }
%"struct.std::__1::__cxx_atomic_impl.1469" = type { %"struct.std::__1::__cxx_atomic_base_impl.1470" }
%"struct.std::__1::__cxx_atomic_base_impl.1470" = type { i32 }
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.1242" }
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1483" = type { %"class.std::__1::__vector_base.1484" }
%"class.std::__1::__vector_base.1484" = type { %"struct.std::__1::pair.1485"*, %"struct.std::__1::pair.1485"*, %"class.std::__1::__compressed_pair.1486" }
%"struct.std::__1::pair.1485" = type opaque
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"struct.std::__1::pair.1485"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.512" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.457", %"class.std::__1::vector.457", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.457" = type { %"class.std::__1::__vector_base.458" }
%"class.std::__1::__vector_base.458" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.459" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.464" }
%"class.std::__1::__hash_table.464" = type <{ %"class.std::__1::unique_ptr.465", %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.480", %"class.std::__1::__compressed_pair.484", [4 x i8] }>
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467", %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::__hash_node_base.468"** }
%"struct.std::__1::__hash_node_base.468" = type { %"struct.std::__1::__hash_node_base.468"* }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.std::__1::__bucket_list_deallocator.470" }
%"class.std::__1::__bucket_list_deallocator.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"struct.std::__1::__hash_node_base.468" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.441", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.500"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.508", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.441", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.493" }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.495" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.500" = type { %"class.std::__1::__tree.501" }
%"class.std::__1::__tree.501" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::atomic.508" = type { %"struct.std::__1::__atomic_base.509" }
%"struct.std::__1::__atomic_base.509" = type { %"struct.std::__1::__cxx_atomic_impl.510" }
%"struct.std::__1::__cxx_atomic_impl.510" = type { %"struct.std::__1::__cxx_atomic_base_impl.511" }
%"struct.std::__1::__cxx_atomic_base_impl.511" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.228", i8, [7 x i8] }>
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { i64*, i64*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1491" = type { %"class.std::__1::__compressed_pair.1492" }
%"class.std::__1::__compressed_pair.1492" = type { %"struct.std::__1::__compressed_pair_elem.1493" }
%"struct.std::__1::__compressed_pair_elem.1493" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1500" = type { %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.1265", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.1265" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1508" }
%"class.std::__1::unordered_map.1508" = type { %"class.std::__1::__hash_table.1509" }
%"class.std::__1::__hash_table.1509" = type <{ %"class.std::__1::unique_ptr.1510", %"class.std::__1::__compressed_pair.1520", %"class.std::__1::__compressed_pair.1525", %"class.std::__1::__compressed_pair.1528", [4 x i8] }>
%"class.std::__1::unique_ptr.1510" = type { %"class.std::__1::__compressed_pair.1511" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.1512", %"struct.std::__1::__compressed_pair_elem.1514" }
%"struct.std::__1::__compressed_pair_elem.1512" = type { %"struct.std::__1::__hash_node_base.1513"** }
%"struct.std::__1::__hash_node_base.1513" = type { %"struct.std::__1::__hash_node_base.1513"* }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"class.std::__1::__bucket_list_deallocator.1515" }
%"class.std::__1::__bucket_list_deallocator.1515" = type { %"class.std::__1::__compressed_pair.1516" }
%"class.std::__1::__compressed_pair.1516" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"struct.std::__1::__hash_node_base.1513" }
%"class.std::__1::__compressed_pair.1525" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1528" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::atomic.1534" = type { %"struct.std::__1::__atomic_base.1535" }
%"struct.std::__1::__atomic_base.1535" = type { %"struct.std::__1::__cxx_atomic_impl.1536" }
%"struct.std::__1::__cxx_atomic_impl.1536" = type { %"struct.std::__1::__cxx_atomic_base_impl.1537" }
%"struct.std::__1::__cxx_atomic_base_impl.1537" = type { %"class.std::__1::vector.1538"* }
%"class.std::__1::vector.1538" = type { %"class.std::__1::__vector_base.1539" }
%"class.std::__1::__vector_base.1539" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1540" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1540" = type { %"struct.std::__1::__compressed_pair_elem.1541" }
%"struct.std::__1::__compressed_pair_elem.1541" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.446" = type { %"struct.std::__1::__atomic_base.447" }
%"struct.std::__1::__atomic_base.447" = type { %"struct.std::__1::__cxx_atomic_impl.448" }
%"struct.std::__1::__cxx_atomic_impl.448" = type { %"struct.std::__1::__cxx_atomic_base_impl.449" }
%"struct.std::__1::__cxx_atomic_base_impl.449" = type { i32 }
%"class.std::__1::vector.450" = type { %"class.std::__1::__vector_base.451" }
%"class.std::__1::__vector_base.451" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.452" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.518" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.518" = type { %"class.std::__1::__vector_base.519" }
%"class.std::__1::__vector_base.519" = type { %"struct.std::__1::pair.520"*, %"struct.std::__1::pair.520"*, %"class.std::__1::__compressed_pair.521" }
%"struct.std::__1::pair.520" = type { i32, i64 }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.std::__1::pair.520"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.526" }
%"class.std::__1::unordered_map.526" = type { %"class.std::__1::__hash_table.527" }
%"class.std::__1::__hash_table.527" = type <{ %"class.std::__1::unique_ptr.528", %"class.std::__1::__compressed_pair.538", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", [4 x i8] }>
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530", %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"struct.std::__1::__hash_node_base.531"** }
%"struct.std::__1::__hash_node_base.531" = type { %"struct.std::__1::__hash_node_base.531"* }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.std::__1::__bucket_list_deallocator.533" }
%"class.std::__1::__bucket_list_deallocator.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"struct.std::__1::__hash_node_base.531" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.566", %"struct.std::__1::atomic.570", %"class.std::__1::shared_ptr.574", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.570" = type { %"struct.std::__1::__atomic_base.571" }
%"struct.std::__1::__atomic_base.571" = type { %"struct.std::__1::__cxx_atomic_impl.572" }
%"struct.std::__1::__cxx_atomic_impl.572" = type { %"struct.std::__1::__cxx_atomic_base_impl.573" }
%"struct.std::__1::__cxx_atomic_base_impl.573" = type { i8 }
%"class.std::__1::shared_ptr.574" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.576" = type { %"struct.std::__1::__atomic_base.577" }
%"struct.std::__1::__atomic_base.577" = type { %"struct.std::__1::__cxx_atomic_impl.578" }
%"struct.std::__1::__cxx_atomic_impl.578" = type { %"struct.std::__1::__cxx_atomic_base_impl.579" }
%"struct.std::__1::__cxx_atomic_base_impl.579" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.580" = type { %"class.std::__1::__vector_base.581" }
%"class.std::__1::__vector_base.581" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.582" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.635", %"class.std::__1::unique_ptr.641", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.695", %"class.std::__1::vector.695", %"class.std::__1::vector.695", %"class.std::__1::vector.702", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.596", %"class.std::__1::vector.597", %"class.std::__1::vector.604", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.596" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.597" = type { %"class.std::__1::__vector_base.598" }
%"class.std::__1::__vector_base.598" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.599" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.604" = type { %"class.std::__1::__vector_base.605" }
%"class.std::__1::__vector_base.605" = type { %"class.std::__1::unique_ptr.606"*, %"class.std::__1::unique_ptr.606"*, %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::unique_ptr.606" = type opaque
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.std::__1::unique_ptr.606"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.612", %"class.v8::internal::Worklist.614", %"class.v8::internal::Worklist.614", %"class.v8::internal::Worklist.614", %"class.v8::internal::Worklist.616", %"class.v8::internal::Worklist.618", %"class.v8::internal::Worklist.620", %"class.v8::internal::Worklist.622", %"class.v8::internal::Worklist.624", %"class.v8::internal::Worklist.626" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.612" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.614" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.616" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.618" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.620" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.622" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.624" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.626" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.628", i8, i64 }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.644" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.596"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.644" = type { %"class.std::__1::__hash_table.645" }
%"class.std::__1::__hash_table.645" = type <{ %"class.std::__1::unique_ptr.646", %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.664", [4 x i8] }>
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648", %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"struct.std::__1::__hash_node_base.649"** }
%"struct.std::__1::__hash_node_base.649" = type { %"struct.std::__1::__hash_node_base.649"* }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.std::__1::__bucket_list_deallocator.651" }
%"class.std::__1::__bucket_list_deallocator.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"struct.std::__1::__hash_node_base.649" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.671" }
%"class.std::__1::unordered_map.671" = type { %"class.std::__1::__hash_table.672" }
%"class.std::__1::__hash_table.672" = type <{ %"class.std::__1::unique_ptr.673", %"class.std::__1::__compressed_pair.683", %"class.std::__1::__compressed_pair.688", %"class.std::__1::__compressed_pair.691", [4 x i8] }>
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675", %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"struct.std::__1::__hash_node_base.676"** }
%"struct.std::__1::__hash_node_base.676" = type { %"struct.std::__1::__hash_node_base.676"* }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.std::__1::__bucket_list_deallocator.678" }
%"class.std::__1::__bucket_list_deallocator.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"struct.std::__1::__hash_node_base.676" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::vector.695" = type { %"class.std::__1::__vector_base.696" }
%"class.std::__1::__vector_base.696" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.702" = type { %"class.std::__1::__vector_base.703" }
%"class.std::__1::__vector_base.703" = type { %"struct.std::__1::pair.704"*, %"struct.std::__1::pair.704"*, %"class.std::__1::__compressed_pair.705" }
%"struct.std::__1::pair.704" = type opaque
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"struct.std::__1::pair.704"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.710", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.695"], [3 x %"class.std::__1::vector.695"], i8, %"struct.std::__1::atomic.566", [6 x i8], %"class.std::__1::vector.695", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.720"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.695", %"class.std::__1::vector.695", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.720" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.745", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.738"], %"class.std::__1::unique_ptr.710" }
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.777", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.781", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.786" }
%"struct.std::__1::atomic.777" = type { %"struct.std::__1::__atomic_base.778" }
%"struct.std::__1::__atomic_base.778" = type { %"struct.std::__1::__cxx_atomic_impl.779" }
%"struct.std::__1::__cxx_atomic_impl.779" = type { %"struct.std::__1::__cxx_atomic_base_impl.780" }
%"struct.std::__1::__cxx_atomic_base_impl.780" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.781" = type { %"struct.std::__1::__atomic_base.782" }
%"struct.std::__1::__atomic_base.782" = type { %"struct.std::__1::__cxx_atomic_impl.783" }
%"struct.std::__1::__cxx_atomic_impl.783" = type { %"struct.std::__1::__cxx_atomic_base_impl.784" }
%"struct.std::__1::__cxx_atomic_base_impl.784" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.786" = type { %"class.std::__1::__hash_table.787" }
%"class.std::__1::__hash_table.787" = type <{ %"class.std::__1::unique_ptr.788", %"class.std::__1::__compressed_pair.798", %"class.std::__1::__compressed_pair.803", %"class.std::__1::__compressed_pair.806", [4 x i8] }>
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790", %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::__hash_node_base.791"** }
%"struct.std::__1::__hash_node_base.791" = type { %"struct.std::__1::__hash_node_base.791"* }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.std::__1::__bucket_list_deallocator.793" }
%"class.std::__1::__bucket_list_deallocator.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::__hash_node_base.791" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.710", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.566", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.816", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.816" = type { %"class.std::__1::__hash_table.817" }
%"class.std::__1::__hash_table.817" = type <{ %"class.std::__1::unique_ptr.818", %"class.std::__1::__compressed_pair.828", %"class.std::__1::__compressed_pair.833", %"class.std::__1::__compressed_pair.836", [4 x i8] }>
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820", %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::__hash_node_base.821"** }
%"struct.std::__1::__hash_node_base.821" = type { %"struct.std::__1::__hash_node_base.821"* }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.std::__1::__bucket_list_deallocator.823" }
%"class.std::__1::__bucket_list_deallocator.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::__hash_node_base.821" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.852" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.895" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.896", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.36", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.896" = type { %"struct.std::__1::__atomic_base.897" }
%"struct.std::__1::__atomic_base.897" = type { %"struct.std::__1::__cxx_atomic_impl.898" }
%"struct.std::__1::__cxx_atomic_impl.898" = type { %"struct.std::__1::__cxx_atomic_base_impl.899" }
%"struct.std::__1::__cxx_atomic_base_impl.899" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.900" = type { %"class.std::__1::__hash_table.901" }
%"class.std::__1::__hash_table.901" = type <{ %"class.std::__1::unique_ptr.902", %"class.std::__1::__compressed_pair.912", %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.920", [4 x i8] }>
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904", %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"struct.std::__1::__hash_node_base.905"** }
%"struct.std::__1::__hash_node_base.905" = type { %"struct.std::__1::__hash_node_base.905"* }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::__bucket_list_deallocator.907" }
%"class.std::__1::__bucket_list_deallocator.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"struct.std::__1::__hash_node_base.905" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.938", %"class.std::__1::vector.938" }
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.745" = type { %"class.std::__1::__hash_table.746" }
%"class.std::__1::__hash_table.746" = type <{ %"class.std::__1::unique_ptr.747", %"class.std::__1::__compressed_pair.757", %"class.std::__1::__compressed_pair.762", %"class.std::__1::__compressed_pair.766", [4 x i8] }>
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749", %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.std::__1::__hash_node_base.750"** }
%"struct.std::__1::__hash_node_base.750" = type { %"struct.std::__1::__hash_node_base.750"* }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.std::__1::__bucket_list_deallocator.752" }
%"class.std::__1::__bucket_list_deallocator.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"struct.std::__1::__hash_node_base.750" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unordered_map.977" = type { %"class.std::__1::__hash_table.978" }
%"class.std::__1::__hash_table.978" = type <{ %"class.std::__1::unique_ptr.979", %"class.std::__1::__compressed_pair.989", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.997", [4 x i8] }>
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981", %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.982"** }
%"struct.std::__1::__hash_node_base.982" = type { %"struct.std::__1::__hash_node_base.982"* }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.std::__1::__bucket_list_deallocator.984" }
%"class.std::__1::__bucket_list_deallocator.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::__hash_node_base.982" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unordered_map.951" = type { %"class.std::__1::__hash_table.952" }
%"class.std::__1::__hash_table.952" = type <{ %"class.std::__1::unique_ptr.953", %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.968", %"class.std::__1::__compressed_pair.971", [4 x i8] }>
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955", %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"struct.std::__1::__hash_node_base.956"** }
%"struct.std::__1::__hash_node_base.956" = type { %"struct.std::__1::__hash_node_base.956"* }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.std::__1::__bucket_list_deallocator.958" }
%"class.std::__1::__bucket_list_deallocator.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::__hash_node_base.956" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::unordered_map.1001" = type { %"class.std::__1::__hash_table.1002" }
%"class.std::__1::__hash_table.1002" = type <{ %"class.std::__1::unique_ptr.1003", %"class.std::__1::__compressed_pair.1013", %"class.std::__1::__compressed_pair.1018", %"class.std::__1::__compressed_pair.1023", [4 x i8] }>
%"class.std::__1::unique_ptr.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005", %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.1006"** }
%"struct.std::__1::__hash_node_base.1006" = type { %"struct.std::__1::__hash_node_base.1006"* }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.std::__1::__bucket_list_deallocator.1008" }
%"class.std::__1::__bucket_list_deallocator.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"struct.std::__1::__hash_node_base.1006" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::vector.1029" = type { %"class.std::__1::__vector_base.1030" }
%"class.std::__1::__vector_base.1030" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }

@.str = private unnamed_addr constant [23 x i8] c"DEOPTIMIZATION PADDING\00", align 1
@_ZN2v88internal9RelocInfo20kFillerCommentStringE = hidden local_unnamed_addr constant i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), align 8
@_ZN2v88internal9RelocInfo16kMaxSmallPCDeltaE = hidden local_unnamed_addr constant i32 63, align 4
@_ZN2v88internal9RelocInfo10kApplyMaskE = external local_unnamed_addr constant i32, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"address < start || address >= end\00", align 1

@_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi = hidden unnamed_addr alias void (%"class.v8::internal::RelocIterator"*, i64, i32), void (%"class.v8::internal::RelocIterator"*, i64, i32)* @_ZN2v88internal13RelocIteratorC2ENS0_4CodeEi
@_ZN2v88internal13RelocIteratorC1ENS0_4CodeENS0_9ByteArrayEi = hidden unnamed_addr alias void (%"class.v8::internal::RelocIterator"*, i64, i64, i32), void (%"class.v8::internal::RelocIterator"*, i64, i64, i32)* @_ZN2v88internal13RelocIteratorC2ENS0_4CodeENS0_9ByteArrayEi
@_ZN2v88internal13RelocIteratorC1ENS0_13CodeReferenceEi = hidden unnamed_addr alias void (%"class.v8::internal::RelocIterator"*, %"class.v8::internal::CodeReference"*, i32), void (%"class.v8::internal::RelocIterator"*, %"class.v8::internal::CodeReference"*, i32)* @_ZN2v88internal13RelocIteratorC2ENS0_13CodeReferenceEi
@_ZN2v88internal13RelocIteratorC1EPNS0_12EmbeddedDataENS0_4CodeEi = hidden unnamed_addr alias void (%"class.v8::internal::RelocIterator"*, %"class.v8::internal::EmbeddedData"*, i64, i32), void (%"class.v8::internal::RelocIterator"*, %"class.v8::internal::EmbeddedData"*, i64, i32)* @_ZN2v88internal13RelocIteratorC2EPNS0_12EmbeddedDataENS0_4CodeEi
@_ZN2v88internal13RelocIteratorC1ERKNS0_8CodeDescEi = hidden unnamed_addr alias void (%"class.v8::internal::RelocIterator"*, %"class.v8::internal::CodeDesc"*, i32), void (%"class.v8::internal::RelocIterator"*, %"class.v8::internal::CodeDesc"*, i32)* @_ZN2v88internal13RelocIteratorC2ERKNS0_8CodeDescEi
@_ZN2v88internal13RelocIteratorC1ENS0_6VectorIhEENS2_IKhEEmi = hidden unnamed_addr alias void (%"class.v8::internal::RelocIterator"*, i8*, i64, i8*, i64, i64, i32), void (%"class.v8::internal::RelocIterator"*, i8*, i64, i8*, i64, i64, i32)* @_ZN2v88internal13RelocIteratorC2ENS0_6VectorIhEENS2_IKhEEmi
@_ZN2v88internal13RelocIteratorC1ENS0_4CodeEmmPKhS4_i = hidden unnamed_addr alias void (%"class.v8::internal::RelocIterator"*, i64, i64, i64, i8*, i8*, i32), void (%"class.v8::internal::RelocIterator"*, i64, i64, i64, i8*, i8*, i32)* @_ZN2v88internal13RelocIteratorC2ENS0_4CodeEmmPKhS4_i

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal15RelocInfoWriter5WriteEPKNS0_9RelocInfoE(%"class.v8::internal::RelocInfoWriter"* nocapture, %"class.v8::internal::RelocInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = trunc i64 %10 to i32
  switch i8 %4, label %104 [
    i8 4, label %12
    i8 1, label %42
    i8 7, label %73
  ]

12:                                               ; preds = %2
  %13 = icmp ult i32 %11, 64
  br i1 %13, label %35, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 -1
  store i8* %17, i8** %15, align 8
  store i8 79, i8* %17, align 1
  %18 = lshr i32 %11, 6
  %19 = trunc i32 %18 to i8
  %20 = load i8*, i8** %15, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 -1
  store i8* %21, i8** %15, align 8
  store i8 %19, i8* %21, align 1
  %22 = icmp ult i32 %11, 8192
  br i1 %22, label %33, label %23

23:                                               ; preds = %14, %23
  %24 = phi i32 [ %28, %23 ], [ %18, %14 ]
  %25 = load i8*, i8** %15, align 8
  %26 = load i8, i8* %25, align 1
  %27 = or i8 %26, -128
  store i8 %27, i8* %25, align 1
  %28 = lshr i32 %24, 7
  %29 = trunc i32 %28 to i8
  %30 = load i8*, i8** %15, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 -1
  store i8* %31, i8** %15, align 8
  store i8 %29, i8* %31, align 1
  %32 = icmp ugt i32 %24, 16383
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %14
  %34 = and i32 %11, 63
  br label %35

35:                                               ; preds = %12, %33
  %36 = phi i32 [ %34, %33 ], [ %11, %12 ]
  %37 = trunc i32 %36 to i8
  %38 = shl i8 %37, 2
  %39 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 -1
  store i8* %41, i8** %39, align 8
  store i8 %38, i8* %41, align 1
  br label %165

42:                                               ; preds = %2
  %43 = icmp ult i32 %11, 64
  br i1 %43, label %65, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 -1
  store i8* %47, i8** %45, align 8
  store i8 79, i8* %47, align 1
  %48 = lshr i32 %11, 6
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %45, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 -1
  store i8* %51, i8** %45, align 8
  store i8 %49, i8* %51, align 1
  %52 = icmp ult i32 %11, 8192
  br i1 %52, label %63, label %53

53:                                               ; preds = %44, %53
  %54 = phi i32 [ %58, %53 ], [ %48, %44 ]
  %55 = load i8*, i8** %45, align 8
  %56 = load i8, i8* %55, align 1
  %57 = or i8 %56, -128
  store i8 %57, i8* %55, align 1
  %58 = lshr i32 %54, 7
  %59 = trunc i32 %58 to i8
  %60 = load i8*, i8** %45, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 -1
  store i8* %61, i8** %45, align 8
  store i8 %59, i8* %61, align 1
  %62 = icmp ugt i32 %54, 16383
  br i1 %62, label %53, label %63

63:                                               ; preds = %53, %44
  %64 = and i32 %11, 63
  br label %65

65:                                               ; preds = %42, %63
  %66 = phi i32 [ %64, %63 ], [ %11, %42 ]
  %67 = trunc i32 %66 to i8
  %68 = shl i8 %67, 2
  %69 = or i8 %68, 1
  %70 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 -1
  store i8* %72, i8** %70, align 8
  store i8 %69, i8* %72, align 1
  br label %165

73:                                               ; preds = %2
  %74 = icmp ult i32 %11, 64
  br i1 %74, label %96, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 -1
  store i8* %78, i8** %76, align 8
  store i8 79, i8* %78, align 1
  %79 = lshr i32 %11, 6
  %80 = trunc i32 %79 to i8
  %81 = load i8*, i8** %76, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 -1
  store i8* %82, i8** %76, align 8
  store i8 %80, i8* %82, align 1
  %83 = icmp ult i32 %11, 8192
  br i1 %83, label %94, label %84

84:                                               ; preds = %75, %84
  %85 = phi i32 [ %89, %84 ], [ %79, %75 ]
  %86 = load i8*, i8** %76, align 8
  %87 = load i8, i8* %86, align 1
  %88 = or i8 %87, -128
  store i8 %88, i8* %86, align 1
  %89 = lshr i32 %85, 7
  %90 = trunc i32 %89 to i8
  %91 = load i8*, i8** %76, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 -1
  store i8* %92, i8** %76, align 8
  store i8 %90, i8* %92, align 1
  %93 = icmp ugt i32 %85, 16383
  br i1 %93, label %84, label %94

94:                                               ; preds = %84, %75
  %95 = and i32 %11, 63
  br label %96

96:                                               ; preds = %73, %94
  %97 = phi i32 [ %95, %94 ], [ %11, %73 ]
  %98 = trunc i32 %97 to i8
  %99 = shl i8 %98, 2
  %100 = or i8 %99, 2
  %101 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 -1
  store i8* %103, i8** %101, align 8
  store i8 %100, i8* %103, align 1
  br label %165

104:                                              ; preds = %2
  %105 = icmp ult i32 %11, 64
  br i1 %105, label %127, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 -1
  store i8* %109, i8** %107, align 8
  store i8 79, i8* %109, align 1
  %110 = lshr i32 %11, 6
  %111 = trunc i32 %110 to i8
  %112 = load i8*, i8** %107, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 -1
  store i8* %113, i8** %107, align 8
  store i8 %111, i8* %113, align 1
  %114 = icmp ult i32 %11, 8192
  br i1 %114, label %125, label %115

115:                                              ; preds = %106, %115
  %116 = phi i32 [ %120, %115 ], [ %110, %106 ]
  %117 = load i8*, i8** %107, align 8
  %118 = load i8, i8* %117, align 1
  %119 = or i8 %118, -128
  store i8 %119, i8* %117, align 1
  %120 = lshr i32 %116, 7
  %121 = trunc i32 %120 to i8
  %122 = load i8*, i8** %107, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 -1
  store i8* %123, i8** %107, align 8
  store i8 %121, i8* %123, align 1
  %124 = icmp ugt i32 %116, 16383
  br i1 %124, label %115, label %125

125:                                              ; preds = %115, %106
  %126 = and i32 %11, 63
  br label %127

127:                                              ; preds = %104, %125
  %128 = phi i32 [ %126, %125 ], [ %11, %104 ]
  %129 = shl i8 %4, 2
  %130 = or i8 %129, 3
  %131 = getelementptr inbounds %"class.v8::internal::RelocInfoWriter", %"class.v8::internal::RelocInfoWriter"* %0, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 -1
  store i8* %133, i8** %131, align 8
  store i8 %130, i8* %133, align 1
  %134 = trunc i32 %128 to i8
  %135 = load i8*, i8** %131, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 -1
  store i8* %136, i8** %131, align 8
  store i8 %134, i8* %136, align 1
  switch i8 %4, label %143 [
    i8 17, label %137
    i8 13, label %146
    i8 14, label %146
    i8 18, label %146
  ]

137:                                              ; preds = %127
  %138 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %1, i64 0, i32 2
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %139 to i8
  %141 = load i8*, i8** %131, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 -1
  store i8* %142, i8** %131, align 8
  store i8 %140, i8* %142, align 1
  br label %165

143:                                              ; preds = %127
  %144 = add i8 %4, -15
  %145 = icmp ult i8 %144, 2
  br i1 %145, label %146, label %165

146:                                              ; preds = %127, %127, %127, %143
  %147 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %1, i64 0, i32 2
  %148 = load i64, i64* %147, align 8
  %149 = trunc i64 %148 to i32
  %150 = trunc i64 %148 to i8
  %151 = load i8*, i8** %131, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 -1
  store i8* %152, i8** %131, align 8
  store i8 %150, i8* %152, align 1
  %153 = lshr i32 %149, 8
  %154 = trunc i32 %153 to i8
  %155 = load i8*, i8** %131, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 -1
  store i8* %156, i8** %131, align 8
  store i8 %154, i8* %156, align 1
  %157 = lshr i32 %149, 16
  %158 = trunc i32 %157 to i8
  %159 = load i8*, i8** %131, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 -1
  store i8* %160, i8** %131, align 8
  store i8 %158, i8* %160, align 1
  %161 = lshr i32 %149, 24
  %162 = trunc i32 %161 to i8
  %163 = load i8*, i8** %131, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 -1
  store i8* %164, i8** %131, align 8
  store i8 %162, i8* %164, align 1
  br label %165

165:                                              ; preds = %65, %137, %146, %143, %96, %35
  %166 = load i64, i64* %5, align 8
  store i64 %166, i64* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIterator14AdvanceReadIntEv(%"class.v8::internal::RelocIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 -1
  store i8* %4, i8** %2, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = getelementptr inbounds i8, i8* %3, i64 -2
  store i8* %7, i8** %2, align 8
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 8
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds i8, i8* %3, i64 -3
  store i8* %12, i8** %2, align 8
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 16
  %16 = or i32 %15, %11
  %17 = getelementptr inbounds i8, i8* %3, i64 -4
  store i8* %17, i8** %2, align 8
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw i32 %19, 24
  %21 = or i32 %20, %16
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  store i64 %22, i64* %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIterator15AdvanceReadDataEv(%"class.v8::internal::RelocIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 -1
  store i8* %4, i8** %2, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 -2
  store i8* %7, i8** %2, align 8
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  %10 = shl nuw nsw i64 %9, 8
  %11 = or i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %3, i64 -3
  store i8* %12, i8** %2, align 8
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i64
  %15 = shl nuw nsw i64 %14, 16
  %16 = or i64 %15, %11
  %17 = getelementptr inbounds i8, i8* %3, i64 -4
  store i8* %17, i8** %2, align 8
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = shl nuw nsw i64 %19, 24
  %21 = or i64 %20, %16
  %22 = getelementptr inbounds i8, i8* %3, i64 -5
  store i8* %22, i8** %2, align 8
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  %25 = shl nuw nsw i64 %24, 32
  %26 = or i64 %25, %21
  %27 = getelementptr inbounds i8, i8* %3, i64 -6
  store i8* %27, i8** %2, align 8
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 40
  %31 = or i64 %30, %26
  %32 = getelementptr inbounds i8, i8* %3, i64 -7
  store i8* %32, i8** %2, align 8
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 48
  %36 = or i64 %35, %31
  %37 = getelementptr inbounds i8, i8* %3, i64 -8
  store i8* %37, i8** %2, align 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl nuw i64 %39, 56
  %41 = or i64 %40, %36
  %42 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  store i64 %41, i64* %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIterator21AdvanceReadLongPCJumpEv(%"class.v8::internal::RelocIterator"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 -1
  store i8* %4, i8** %2, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp sgt i8 %5, -1
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = and i32 %6, 127
  %10 = getelementptr inbounds i8, i8* %3, i64 -2
  store i8* %10, i8** %2, align 8
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 127
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 7
  %15 = or i32 %14, %9
  %16 = icmp slt i8 %11, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %8, %24, %32, %40, %1
  %18 = phi i32 [ %6, %1 ], [ %15, %8 ], [ %30, %24 ], [ %38, %32 ], [ %45, %40 ]
  %19 = shl i32 %18, 6
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %20
  store i64 %23, i64* %21, align 8
  ret void

24:                                               ; preds = %8
  %25 = getelementptr inbounds i8, i8* %3, i64 -3
  store i8* %25, i8** %2, align 8
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 127
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 14
  %30 = or i32 %29, %15
  %31 = icmp slt i8 %26, 0
  br i1 %31, label %32, label %17

32:                                               ; preds = %24
  %33 = getelementptr inbounds i8, i8* %3, i64 -4
  store i8* %33, i8** %2, align 8
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 127
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 21
  %38 = or i32 %37, %30
  %39 = icmp slt i8 %34, 0
  br i1 %39, label %40, label %17

40:                                               ; preds = %32
  %41 = getelementptr inbounds i8, i8* %3, i64 -5
  store i8* %41, i8** %2, align 8
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl i32 %43, 28
  %45 = or i32 %44, %38
  br label %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %128

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  br label %10

10:                                               ; preds = %7, %125
  %11 = phi i8* [ %3, %7 ], [ %126, %125 ]
  %12 = getelementptr inbounds i8, i8* %11, i64 -1
  store i8* %12, i8** %2, align 8
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 3
  %15 = zext i8 %14 to i32
  switch i32 %15, label %46 [
    i32 0, label %16
    i32 1, label %26
    i32 2, label %36
  ]

16:                                               ; preds = %10
  %17 = lshr i8 %13, 2
  %18 = zext i8 %17 to i64
  %19 = load i64, i64* %8, align 8
  %20 = add i64 %19, %18
  store i64 %20, i64* %8, align 8
  %21 = load i32, i32* %9, align 4
  %22 = and i32 %21, 16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %125, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 1
  store i8 4, i8* %25, align 8
  br label %130

26:                                               ; preds = %10
  %27 = lshr i8 %13, 2
  %28 = zext i8 %27 to i64
  %29 = load i64, i64* %8, align 8
  %30 = add i64 %29, %28
  store i64 %30, i64* %8, align 8
  %31 = load i32, i32* %9, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %125, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 1
  store i8 1, i8* %35, align 8
  br label %130

36:                                               ; preds = %10
  %37 = lshr i8 %13, 2
  %38 = zext i8 %37 to i64
  %39 = load i64, i64* %8, align 8
  %40 = add i64 %39, %38
  store i64 %40, i64* %8, align 8
  %41 = load i32, i32* %9, align 4
  %42 = trunc i32 %41 to i8
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %125, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 1
  store i8 7, i8* %45, align 8
  br label %130

46:                                               ; preds = %10
  %47 = lshr i8 %13, 2
  %48 = icmp eq i8 %47, 19
  %49 = getelementptr inbounds i8, i8* %11, i64 -2
  store i8* %49, i8** %2, align 8
  %50 = load i8, i8* %49, align 1
  br i1 %48, label %51, label %70

51:                                               ; preds = %46
  %52 = zext i8 %50 to i32
  %53 = icmp sgt i8 %50, -1
  br i1 %53, label %63, label %54

54:                                               ; preds = %51
  %55 = and i32 %52, 127
  %56 = getelementptr inbounds i8, i8* %11, i64 -3
  store i8* %56, i8** %2, align 8
  %57 = load i8, i8* %56, align 1
  %58 = and i8 %57, 127
  %59 = zext i8 %58 to i32
  %60 = shl nuw nsw i32 %59, 7
  %61 = or i32 %60, %55
  %62 = icmp slt i8 %57, 0
  br i1 %62, label %131, label %63

63:                                               ; preds = %54, %131, %139, %147, %51
  %64 = phi i8* [ %49, %51 ], [ %56, %54 ], [ %132, %131 ], [ %140, %139 ], [ %148, %147 ]
  %65 = phi i32 [ %52, %51 ], [ %61, %54 ], [ %137, %131 ], [ %145, %139 ], [ %152, %147 ]
  %66 = shl i32 %65, 6
  %67 = zext i32 %66 to i64
  %68 = load i64, i64* %8, align 8
  %69 = add i64 %68, %67
  store i64 %69, i64* %8, align 8
  br label %125

70:                                               ; preds = %46
  %71 = zext i8 %50 to i64
  %72 = load i64, i64* %8, align 8
  %73 = add i64 %72, %71
  store i64 %73, i64* %8, align 8
  switch i8 %47, label %84 [
    i8 17, label %74
    i8 13, label %87
    i8 14, label %87
    i8 18, label %87
  ]

74:                                               ; preds = %70
  %75 = getelementptr inbounds i8, i8* %11, i64 -3
  store i8* %75, i8** %2, align 8
  %76 = load i32, i32* %9, align 4
  %77 = and i32 %76, 131072
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %125, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 1
  store i8 17, i8* %80, align 8
  %81 = load i8, i8* %75, align 1
  %82 = zext i8 %81 to i64
  %83 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  store i64 %82, i64* %83, align 8
  br label %130

84:                                               ; preds = %70
  %85 = add nsw i8 %47, -15
  %86 = icmp ult i8 %85, 2
  br i1 %86, label %87, label %117

87:                                               ; preds = %70, %70, %70, %84
  %88 = load i32, i32* %9, align 4
  %89 = zext i8 %47 to i32
  %90 = shl i32 1, %89
  %91 = and i32 %88, %90
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %115, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 1
  store i8 %47, i8* %94, align 8
  %95 = getelementptr inbounds i8, i8* %11, i64 -3
  store i8* %95, i8** %2, align 8
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = getelementptr inbounds i8, i8* %11, i64 -4
  store i8* %98, i8** %2, align 8
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 8
  %102 = or i32 %101, %97
  %103 = getelementptr inbounds i8, i8* %11, i64 -5
  store i8* %103, i8** %2, align 8
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw nsw i32 %105, 16
  %107 = or i32 %102, %106
  %108 = getelementptr inbounds i8, i8* %11, i64 -6
  store i8* %108, i8** %2, align 8
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = shl nuw i32 %110, 24
  %112 = or i32 %107, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  store i64 %113, i64* %114, align 8
  br label %130

115:                                              ; preds = %87
  %116 = getelementptr inbounds i8, i8* %11, i64 -6
  store i8* %116, i8** %2, align 8
  br label %125

117:                                              ; preds = %84
  %118 = load i32, i32* %9, align 4
  %119 = zext i8 %47 to i32
  %120 = shl i32 1, %119
  %121 = and i32 %118, %120
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 1
  store i8 %47, i8* %124, align 8
  br label %130

125:                                              ; preds = %63, %115, %74, %117, %16, %26, %36
  %126 = phi i8* [ %64, %63 ], [ %116, %115 ], [ %75, %74 ], [ %49, %117 ], [ %12, %16 ], [ %12, %26 ], [ %12, %36 ]
  %127 = icmp ugt i8* %126, %5
  br i1 %127, label %10, label %128

128:                                              ; preds = %125, %1
  %129 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 3
  store i8 1, i8* %129, align 8
  br label %130

130:                                              ; preds = %123, %93, %79, %44, %34, %24, %128
  ret void

131:                                              ; preds = %54
  %132 = getelementptr inbounds i8, i8* %11, i64 -4
  store i8* %132, i8** %2, align 8
  %133 = load i8, i8* %132, align 1
  %134 = and i8 %133, 127
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 14
  %137 = or i32 %136, %61
  %138 = icmp slt i8 %133, 0
  br i1 %138, label %139, label %63

139:                                              ; preds = %131
  %140 = getelementptr inbounds i8, i8* %11, i64 -5
  store i8* %140, i8** %2, align 8
  %141 = load i8, i8* %140, align 1
  %142 = and i8 %141, 127
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 21
  %145 = or i32 %144, %137
  %146 = icmp slt i8 %141, 0
  br i1 %146, label %147, label %63

147:                                              ; preds = %139
  %148 = getelementptr inbounds i8, i8* %11, i64 -6
  store i8* %148, i8** %2, align 8
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = shl i32 %150, 28
  %152 = or i32 %151, %145
  br label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIteratorC2ENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, i64, i32) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = and i64 %1, -4294967296
  %6 = add i64 %1, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %12, align 8
  %13 = add i64 %1, 63
  %14 = call zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nonnull %4) #7
  br i1 %14, label %15, label %40

15:                                               ; preds = %3
  %16 = load i64, i64* %12, align 8
  %17 = add i64 %16, 27
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 536870912
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22, !prof !2

22:                                               ; preds = %15
  %23 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %4) #7
  %24 = load i64, i64* %12, align 8
  br label %32

25:                                               ; preds = %15
  %26 = add i64 %16, 63
  %27 = add i64 %16, 19
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = add i64 %26, %30
  br label %32

32:                                               ; preds = %25, %22
  %33 = phi i64 [ %24, %22 ], [ %16, %25 ]
  %34 = phi i64 [ %23, %22 ], [ %31, %25 ]
  %35 = add i64 %33, 43
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = add i64 %34, %38
  br label %40

40:                                               ; preds = %32, %3
  %41 = phi i64 [ %39, %32 ], [ 0, %3 ]
  %42 = add i64 %10, 7
  %43 = inttoptr i64 %42 to i8*
  %44 = add i64 %10, 3
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = ashr i32 %46, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %43, i64 %48
  %50 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  store i8* %43, i8** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  %53 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  %54 = bitcast i64* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 25, i1 false) #7
  store i32 %2, i32* %53, align 4
  %55 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  store i64 %13, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 4
  store i64 %41, i64* %57, align 8
  %58 = icmp eq i32 %2, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %40
  %60 = bitcast %"class.v8::internal::RelocIterator"* %0 to i64*
  store i64 %42, i64* %60, align 8
  br label %61

61:                                               ; preds = %40, %59
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* %0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIteratorC2ENS0_4CodeENS0_9ByteArrayEi(%"class.v8::internal::RelocIterator"*, i64, i64, i32) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::Code", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = add i64 %1, 63
  %8 = call zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nonnull %5) #7
  br i1 %8, label %9, label %34

9:                                                ; preds = %4
  %10 = load i64, i64* %6, align 8
  %11 = add i64 %10, 27
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 536870912
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16, !prof !2

16:                                               ; preds = %9
  %17 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %5) #7
  %18 = load i64, i64* %6, align 8
  br label %26

19:                                               ; preds = %9
  %20 = add i64 %10, 63
  %21 = add i64 %10, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = add i64 %20, %24
  br label %26

26:                                               ; preds = %19, %16
  %27 = phi i64 [ %18, %16 ], [ %10, %19 ]
  %28 = phi i64 [ %17, %16 ], [ %25, %19 ]
  %29 = add i64 %27, 43
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = add i64 %28, %32
  br label %34

34:                                               ; preds = %4, %26
  %35 = phi i64 [ %33, %26 ], [ 0, %4 ]
  %36 = add i64 %2, 7
  %37 = inttoptr i64 %36 to i8*
  %38 = add i64 %2, 3
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = ashr i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  %44 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  store i8* %37, i8** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  %47 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  %48 = bitcast i64* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 25, i1 false) #7
  store i32 %3, i32* %47, align 4
  %49 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  store i64 %7, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 4
  store i64 %35, i64* %51, align 8
  %52 = icmp eq i32 %3, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %34
  %54 = bitcast %"class.v8::internal::RelocIterator"* %0 to i64*
  store i64 %36, i64* %54, align 8
  br label %55

55:                                               ; preds = %34, %53
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIteratorC2ENS0_4CodeEmmPKhS4_i(%"class.v8::internal::RelocIterator"*, i64, i64, i64, i8*, i8*, i32) unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  store i8* %4, i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  store i8* %5, i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  %11 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  %12 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  store i32 %6, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 4
  store i64 %3, i64* %15, align 8
  %16 = icmp eq i32 %6, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %7
  %18 = ptrtoint i8* %5 to i64
  %19 = bitcast %"class.v8::internal::RelocIterator"* %0 to i64*
  store i64 %18, i64* %19, align 8
  br label %20

20:                                               ; preds = %17, %7
  tail call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIteratorC2ENS0_13CodeReferenceEi(%"class.v8::internal::RelocIterator"*, %"class.v8::internal::CodeReference"* byval(%"class.v8::internal::CodeReference") align 8, i32) unnamed_addr #2 align 2 {
  %4 = call i64 @_ZNK2v88internal13CodeReference17instruction_startEv(%"class.v8::internal::CodeReference"* nonnull %1) #7
  %5 = call i64 @_ZNK2v88internal13CodeReference13constant_poolEv(%"class.v8::internal::CodeReference"* nonnull %1) #7
  %6 = call i8* @_ZNK2v88internal13CodeReference14relocation_endEv(%"class.v8::internal::CodeReference"* nonnull %1) #7
  %7 = call i8* @_ZNK2v88internal13CodeReference16relocation_startEv(%"class.v8::internal::CodeReference"* nonnull %1) #7
  %8 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  %11 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  %12 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false) #7
  store i32 %2, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 4
  store i64 %5, i64* %15, align 8
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = ptrtoint i8* %7 to i64
  %19 = bitcast %"class.v8::internal::RelocIterator"* %0 to i64*
  store i64 %18, i64* %19, align 8
  br label %20

20:                                               ; preds = %3, %17
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* %0) #7
  ret void
}

declare i64 @_ZNK2v88internal13CodeReference17instruction_startEv(%"class.v8::internal::CodeReference"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal13CodeReference13constant_poolEv(%"class.v8::internal::CodeReference"*) local_unnamed_addr #3

declare i8* @_ZNK2v88internal13CodeReference14relocation_endEv(%"class.v8::internal::CodeReference"*) local_unnamed_addr #3

declare i8* @_ZNK2v88internal13CodeReference16relocation_startEv(%"class.v8::internal::CodeReference"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIteratorC2EPNS0_12EmbeddedDataENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, %"class.v8::internal::EmbeddedData"*, i64, i32) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::Code", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = add i64 %2, 31
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = tail call i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* %1, i32 %9) #7
  %11 = call zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nonnull %5) #7
  %12 = load i64, i64* %6, align 8
  br i1 %11, label %13, label %37

13:                                               ; preds = %4
  %14 = add i64 %12, 27
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 536870912
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19, !prof !2

19:                                               ; preds = %13
  %20 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %5) #7
  %21 = load i64, i64* %6, align 8
  br label %29

22:                                               ; preds = %13
  %23 = add i64 %12, 63
  %24 = add i64 %12, 19
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = add i64 %23, %27
  br label %29

29:                                               ; preds = %22, %19
  %30 = phi i64 [ %21, %19 ], [ %12, %22 ]
  %31 = phi i64 [ %20, %19 ], [ %28, %22 ]
  %32 = add i64 %30, 43
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = add i64 %31, %35
  br label %37

37:                                               ; preds = %4, %29
  %38 = phi i64 [ %30, %29 ], [ %12, %4 ]
  %39 = phi i64 [ %36, %29 ], [ 0, %4 ]
  %40 = and i64 %38, -4294967296
  %41 = add i64 %38, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i8*
  %48 = add i64 %45, 3
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = ashr i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %47, i64 %52
  %54 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  store i8* %53, i8** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  store i8* %47, i8** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  %57 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  %58 = bitcast i64* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 25, i1 false) #7
  store i32 %3, i32* %57, align 4
  %59 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  store i64 %10, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 4
  store i64 %39, i64* %61, align 8
  %62 = icmp eq i32 %3, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %37
  %64 = bitcast %"class.v8::internal::RelocIterator"* %0 to i64*
  store i64 %46, i64* %64, align 8
  br label %65

65:                                               ; preds = %37, %63
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* %0) #7
  ret void
}

declare i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIteratorC2ERKNS0_8CodeDescEi(%"class.v8::internal::RelocIterator"*, %"class.v8::internal::CodeDesc"* nocapture readonly dereferenceable(80), i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %1, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %1, i64 0, i32 12
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = sub nsw i64 0, %13
  %15 = getelementptr inbounds i8, i8* %10, i64 %14
  %16 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  store i8* %10, i8** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  %19 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  %20 = bitcast i64* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 25, i1 false) #7
  store i32 %2, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  store i64 %6, i64* %22, align 8
  %23 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %23, align 8
  %24 = icmp eq i32 %2, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %3
  %26 = ptrtoint i8* %15 to i64
  %27 = bitcast %"class.v8::internal::RelocIterator"* %0 to i64*
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %3, %25
  tail call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13RelocIteratorC2ENS0_6VectorIhEENS2_IKhEEmi(%"class.v8::internal::RelocIterator"*, i8*, i64, i8*, i64, i64, i32) unnamed_addr #2 align 2 {
  %8 = ptrtoint i8* %1 to i64
  %9 = getelementptr inbounds i8, i8* %3, i64 %4
  %10 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 1
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 4
  %14 = bitcast i64* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false) #7
  store i32 %6, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 0
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %0, i64 0, i32 2, i32 4
  store i64 %5, i64* %17, align 8
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %7
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast %"class.v8::internal::RelocIterator"* %0 to i64*
  store i64 %20, i64* %21, align 8
  br label %22

22:                                               ; preds = %7, %19
  tail call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* %0) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal9RelocInfo29OffHeapTargetIsCodedSpeciallyEv() local_unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal9RelocInfo17wasm_call_addressEv(%"class.v8::internal::RelocInfo"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = inttoptr i64 %3 to i32*
  %5 = load i32, i32* %4, align 1
  %6 = sext i32 %5 to i64
  %7 = add i64 %3, 4
  %8 = add i64 %7, %6
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9RelocInfo21set_wasm_call_addressEmNS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"* nocapture readonly, i64, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 %1, %5
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, -4
  %9 = inttoptr i64 %5 to i32*
  store i32 %8, i32* %9, align 1
  %10 = icmp eq i32 %2, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = inttoptr i64 %5 to i8*
  tail call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %12, i64 4) #7
  br label %13

13:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal9RelocInfo22wasm_stub_call_addressEv(%"class.v8::internal::RelocInfo"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = inttoptr i64 %3 to i32*
  %5 = load i32, i32* %4, align 1
  %6 = sext i32 %5 to i64
  %7 = add i64 %3, 4
  %8 = add i64 %7, %6
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9RelocInfo26set_wasm_stub_call_addressEmNS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"* nocapture readonly, i64, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 %1, %5
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, -4
  %9 = inttoptr i64 %5 to i32*
  store i32 %8, i32* %9, align 1
  %10 = icmp eq i32 %2, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = inttoptr i64 %5 to i8*
  tail call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %12, i64 4) #7
  br label %13

13:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"*, i64, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %1, %6
  %8 = trunc i64 %7 to i32
  %9 = add i32 %8, -4
  %10 = inttoptr i64 %6 to i32*
  store i32 %9, i32* %10, align 1
  %11 = icmp eq i32 %3, 1
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = inttoptr i64 %6 to i8*
  tail call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %13, i64 4) #7
  br label %14

14:                                               ; preds = %4, %12
  %15 = icmp eq i32 %2, 4
  br i1 %15, label %16, label %48

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %48, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 8
  %24 = icmp slt i8 %23, 3
  br i1 %24, label %25, label %48

25:                                               ; preds = %21
  %26 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #7
  %27 = ptrtoint i8* %26 to i64
  %28 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #7
  %29 = icmp ule i64 %27, %1
  %30 = zext i32 %28 to i64
  %31 = add i64 %30, %27
  %32 = icmp ugt i64 %31, %1
  %33 = and i1 %29, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

35:                                               ; preds = %25
  %36 = load i64, i64* %17, align 8
  %37 = and i64 %36, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 262144
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %35
  %44 = add i64 %1, -63
  %45 = or i64 %37, 16
  %46 = inttoptr i64 %45 to %"class.v8::internal::Heap"**
  %47 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"* %47, i64 %36, %"class.v8::internal::RelocInfo"* %0, i64 %44) #7
  br label %48

48:                                               ; preds = %14, %16, %43, %35, %21
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal9RelocInfo23HasTargetAddressAddressEv(%"class.v8::internal::RelocInfo"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = sext i8 %3 to i32
  %5 = shl i32 1, %4
  %6 = and i32 %5, 5082
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal9RelocInfo30RequiresRelocationAfterCodegenERKNS0_8CodeDescE(%"class.v8::internal::CodeDesc"* nocapture readonly dereferenceable(80)) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::RelocIterator", align 8
  %3 = bitcast %"class.v8::internal::RelocIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #7
  %4 = load i32, i32* @_ZN2v88internal9RelocInfo10kApplyMaskE, align 4
  %5 = or i32 %4, 318
  %6 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %7, i64 %11
  %13 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %0, i64 0, i32 12
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds i8, i8* %12, i64 %16
  %18 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %2, i64 0, i32 0
  store i8* %12, i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %2, i64 0, i32 1
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %2, i64 0, i32 2, i32 2
  %21 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %2, i64 0, i32 4
  %22 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false) #7
  store i32 %5, i32* %21, align 4
  %23 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %2, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %2, i64 0, i32 2, i32 0
  store i64 %8, i64* %24, align 8
  %25 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %25, align 8
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %2) #7
  %26 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %2, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !4
  %28 = icmp eq i8 %27, 0
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #7
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal9RelocInfo18RequiresRelocationENS0_4CodeE(i64) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.v8::internal::Code", align 8
  %3 = alloca %"class.v8::internal::RelocIterator", align 8
  %4 = bitcast %"class.v8::internal::RelocIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #7
  %5 = load i32, i32* @_ZN2v88internal9RelocInfo10kApplyMaskE, align 4
  %6 = and i64 %0, -4294967296
  %7 = add i64 %0, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = bitcast %"class.v8::internal::Code"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %13, align 8
  %14 = add i64 %0, 63
  %15 = call zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nonnull %2) #7
  br i1 %15, label %16, label %41

16:                                               ; preds = %1
  %17 = load i64, i64* %13, align 8
  %18 = add i64 %17, 27
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 536870912
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23, !prof !2

23:                                               ; preds = %16
  %24 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %2) #7
  %25 = load i64, i64* %13, align 8
  br label %33

26:                                               ; preds = %16
  %27 = add i64 %17, 63
  %28 = add i64 %17, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = add i64 %27, %31
  br label %33

33:                                               ; preds = %26, %23
  %34 = phi i64 [ %25, %23 ], [ %17, %26 ]
  %35 = phi i64 [ %24, %23 ], [ %32, %26 ]
  %36 = add i64 %34, 43
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = add i64 %35, %39
  br label %41

41:                                               ; preds = %33, %1
  %42 = phi i64 [ %40, %33 ], [ 0, %1 ]
  %43 = add i64 %11, 7
  %44 = inttoptr i64 %43 to i8*
  %45 = add i64 %11, 3
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = ashr i32 %47, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %44, i64 %49
  %51 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 1
  store i8* %44, i8** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 2
  %54 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 4
  %55 = bitcast i64* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 25, i1 false) #7
  store i32 %5, i32* %54, align 4
  %56 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 0
  store i64 %14, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 4
  store i64 %42, i64* %58, align 8
  %59 = icmp eq i32 %5, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %41
  %61 = bitcast %"class.v8::internal::RelocIterator"* %3 to i64*
  store i64 %43, i64* %61, align 8
  br label %62

62:                                               ; preds = %41, %60
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %63 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 3
  %64 = load i8, i8* %63, align 8, !range !4
  %65 = icmp eq i8 %64, 0
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #7
  ret i1 %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare void @_ZN2v88internal21FlushInstructionCacheEPvm(i8*, i64) local_unnamed_addr #3

declare i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() local_unnamed_addr #3

declare i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
