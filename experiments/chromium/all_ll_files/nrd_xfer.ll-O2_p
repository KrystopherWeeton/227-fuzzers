; ModuleID = '../../native_client/src/trusted/desc/nrd_xfer.c'
source_filename = "../../native_client/src/trusted/desc/nrd_xfer.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.NaClInternalHeader = type { %struct.NaClInternalRealHeader, [8 x i8] }
%struct.NaClInternalRealHeader = type { i32, i32 }
%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClDescEffector = type { %struct.NaClDescEffectorVtbl* }
%struct.NaClDescEffectorVtbl = type { void (%struct.NaClDescEffector*, i64, i64)* }
%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type { %struct.NaClImcMsgIoVec*, i32, %struct.NaClDesc**, i32, i32 }
%struct.NaClImcMsgIoVec = type { i8*, i64 }
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescXferableDataDesc = type { %struct.NaClDescImcConnectedDesc }
%struct.NaClDescImcConnectedDesc = type { %struct.NaClDesc, i32 }

@.str = private unnamed_addr constant [30 x i8] c"illegal type tag %lu (0x%lx)\0A\00", align 1
@NaClDescInternalize = external local_unnamed_addr global [18 x i32 (%struct.NaClDesc**, %struct.NaClDescXferState*)*], align 16
@.str.1 = private unnamed_addr constant [42 x i8] c"No internalization function for type %lu\0A\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"non-zero xfer_status %d, desc type tag %s (%lu)\0A\00", align 1
@NaClImcSendTypedMessage.kNoHandles = internal constant %struct.NaClInternalHeader { %struct.NaClInternalRealHeader { i32 -742334975, i32 0 }, [8 x i8] zeroinitializer }, align 4
@.str.3 = private unnamed_addr constant [57 x i8] c"Entered NaClImcSendTypedMessage(0x%08lx, 0x%08lx, 0x%x)\0A\00", align 1
@.str.4 = private unnamed_addr constant [63 x i8] c"WARNING: NaClImcSendTypedMessage: unknown IMC flag used: 0x%x\0A\00", align 1
@.str.5 = private unnamed_addr constant [51 x i8] c"not an IMC socket and trying to send descriptors!\0A\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"gather/scatter array too large\0A\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"handle vector too long\0A\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"NaClImcSendTypedMessage: ExternalizeSize returned %ld\0A\00", align 1
@.str.9 = private unnamed_addr constant [83 x i8] c"User had %d descriptors, which expanded into %luhandles, more than the max of %d.\0A\00", align 1
@.str.10 = private unnamed_addr constant [58 x i8] c"NaClImcSendTypedMessage: Buffer size overflow (%lu bytes)\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"NaClImcSendTypedMessage: out of memory for iov\00", align 1
@.str.12 = private unnamed_addr constant [70 x i8] c"NaClImcSendTypedMessage: Externalize for descriptor %lu returned %ld\0A\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"Invoking LowLevelSendMsg, flags 0x%x\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"LowLevelSendMsg returned %ld\0A\00", align 1
@.str.15 = private unnamed_addr constant [40 x i8] c"NaClImcSendTypedMessage: returning %ld\0A\00", align 1
@.str.16 = private unnamed_addr constant [51 x i8] c"Entered NaClImcRecvTypedMsg(0x%08lx, 0x%08lx, %d)\0A\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"WARNING: NaClImcRecvTypedMsg: unknown IMC flag used: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"integer overflow in iov length summation\0A\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"no memory for receive buffer\0A\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"Connected socket, may transfer descriptors\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"Transferable Data Only socket\0A\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"LowLevelRecvMsg failed, returned %ld\0A\00", align 1
@.str.23 = private unnamed_addr constant [75 x i8] c"only received %ld (0x%lx) bytes, but internal header is %lu (0x%lx) bytes\0A\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"protocol version mismatch: got %x, but can only handle %x\0A\00", align 1
@.str.25 = private unnamed_addr constant [122 x i8] c"internal header (size %lu (0x%lx)) says there are %d (0x%x) NRD xfer descriptor bytes, but we received %ld (0x%lx) bytes\0A\00", align 1
@.str.27 = private unnamed_addr constant [48 x i8] c"NaClDescInternalizeFromXferBuffer: returned %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [71 x i8] c"NaClImcRecvTypedMsg: trusted peer tried to send too many descriptors!\0A\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"NaClImcRecvTypedMsg: returning %ld\0A\00", align 1
@.str.30 = private unnamed_addr constant [63 x i8] c"NaClCommonSysImc_Socket_Pair: IMC socket pair creation failed\0A\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @NaClNrdXferIncrTagOverhead(i64* nocapture, i64* nocapture readnone) local_unnamed_addr #0 {
  %3 = load i64, i64* %0, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @NaClNrdXferReadTypeTag(%struct.NaClDescXferState* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %4, i8** %2, align 8
  %5 = load i8, i8* %3, align 1
  %6 = zext i8 %5 to i32
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @NaClNrdXferWriteTypeTag(%struct.NaClDescXferState* nocapture, %struct.NaClDesc* nocapture readonly) local_unnamed_addr #0 {
  %3 = bitcast %struct.NaClDesc* %1 to %struct.NaClDescVtbl**
  %4 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %3, align 8
  %5 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %4, i64 0, i32 37
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i8
  %8 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  store i8* %10, i8** %8, align 8
  store i8 %7, i8* %9, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescInternalizeFromXferBuffer(%struct.NaClDesc**, %struct.NaClDescXferState*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %5, i8** %3, align 8
  %6 = load i8, i8* %4, align 1
  %7 = zext i8 %6 to i32
  %8 = zext i8 %6 to i64
  %9 = icmp eq i8 %6, -1
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = icmp ugt i8 %6, 17
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 %8, i64 %8) #6
  br label %25

13:                                               ; preds = %10
  %14 = getelementptr inbounds [18 x i32 (%struct.NaClDesc**, %struct.NaClDescXferState*)*], [18 x i32 (%struct.NaClDesc**, %struct.NaClDescXferState*)*]* @NaClDescInternalize, i64 0, i64 %8
  %15 = load i32 (%struct.NaClDesc**, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc**, %struct.NaClDescXferState*)** %14, align 8
  %16 = icmp eq i32 (%struct.NaClDesc**, %struct.NaClDescXferState*)* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i64 %8) #6
  br label %25

18:                                               ; preds = %13
  %19 = tail call i32 %15(%struct.NaClDesc** %0, %struct.NaClDescXferState* %1) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = tail call i8* @NaClDescTypeString(i32 %7) #6
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 %19, i8* %22, i64 %8) #6
  br label %23

23:                                               ; preds = %18, %21
  %24 = zext i1 %20 to i32
  br label %25

25:                                               ; preds = %2, %23, %17, %12
  %26 = phi i32 [ -5, %12 ], [ -5, %17 ], [ %24, %23 ], [ 0, %2 ]
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #3

declare i8* @NaClDescTypeString(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescExternalizeToXferBuffer(%struct.NaClDescXferState*, %struct.NaClDesc*) local_unnamed_addr #1 {
  %3 = bitcast %struct.NaClDesc* %1 to %struct.NaClDescVtbl**
  %4 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %3, align 8
  %5 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %4, i64 0, i32 37
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i8
  %8 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  store i8* %10, i8** %8, align 8
  store i8 %7, i8* %9, align 1
  %11 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %3, align 8
  %12 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %11, i64 0, i32 15
  %13 = load i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)** %12, align 8
  %14 = tail call i32 %13(%struct.NaClDesc* %1, %struct.NaClDescXferState* %0) #6
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClImcSendTypedMessage(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) local_unnamed_addr #1 {
  %4 = alloca %struct.NaClMessageHeader, align 8
  %5 = alloca [257 x %struct.NaClImcMsgIoVec], align 16
  %6 = alloca [8 x i32], align 16
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.NaClDescXferState, align 8
  %10 = bitcast %struct.NaClMessageHeader* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast [257 x %struct.NaClImcMsgIoVec]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4112, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 4112, i1 false)
  %12 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %14 = bitcast i64* %7 to i8*
  %15 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  store i64 -6148914691236517206, i64* %7, align 8
  %16 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  store i64 -6148914691236517206, i64* %8, align 8
  %17 = bitcast %struct.NaClDescXferState* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  %18 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %9, i64 0, i32 0
  %19 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %9, i64 0, i32 1
  %20 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %9, i64 0, i32 2
  %21 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %9, i64 0, i32 3
  %22 = ptrtoint %struct.NaClDesc* %0 to i64
  %23 = ptrtoint %struct.NaClImcTypedMsgHdr* %1 to i64
  %24 = bitcast %struct.NaClDescXferState* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), i64 %22, i64 %23, i32 %2) #6
  %25 = icmp ugt i32 %2, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0), i32 %2) #6
  %27 = and i32 %2, 1
  br label %28

28:                                               ; preds = %26, %3
  %29 = phi i32 [ %27, %26 ], [ %2, %3 ]
  %30 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %28
  %34 = bitcast %struct.NaClDesc* %0 to %struct.NaClDescVtbl**
  %35 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %34, align 8
  %36 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %35, i64 0, i32 37
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 14
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %207

40:                                               ; preds = %33, %28
  %41 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp ugt i32 %42, 256
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %207

45:                                               ; preds = %40
  %46 = icmp ugt i32 %31, 8
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %207

48:                                               ; preds = %45
  %49 = getelementptr inbounds [257 x %struct.NaClImcMsgIoVec], [257 x %struct.NaClImcMsgIoVec]* %5, i64 0, i64 1
  %50 = bitcast %struct.NaClImcMsgIoVec* %49 to i8*
  %51 = bitcast %struct.NaClImcTypedMsgHdr* %1 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = zext i32 %42 to i64
  %54 = shl nuw nsw i64 %53, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %50, i8* align 1 %52, i64 %54, i1 false)
  %55 = icmp eq i32 %42, 0
  br i1 %55, label %69, label %58

56:                                               ; preds = %58
  %57 = icmp eq i64 %61, %53
  br i1 %57, label %67, label %58

58:                                               ; preds = %48, %56
  %59 = phi i64 [ %66, %56 ], [ 0, %48 ]
  %60 = phi i64 [ %61, %56 ], [ 0, %48 ]
  %61 = add nuw nsw i64 %60, 1
  %62 = getelementptr inbounds [257 x %struct.NaClImcMsgIoVec], [257 x %struct.NaClImcMsgIoVec]* %5, i64 0, i64 %61, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = xor i64 %63, -1
  %65 = icmp ugt i64 %59, %64
  %66 = add i64 %63, %59
  br i1 %65, label %207, label %56

67:                                               ; preds = %56
  %68 = icmp ugt i64 %66, 131072
  br i1 %68, label %207, label %69

69:                                               ; preds = %48, %67
  %70 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 2
  %71 = load %struct.NaClDesc**, %struct.NaClDesc*** %70, align 8
  %72 = bitcast %struct.NaClMessageHeader* %4 to [257 x %struct.NaClImcMsgIoVec]**
  store [257 x %struct.NaClImcMsgIoVec]* %5, [257 x %struct.NaClImcMsgIoVec]** %72, align 8
  %73 = add i32 %42, 1
  %74 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %4, i64 0, i32 1
  store i32 %73, i32* %74, align 8
  br i1 %32, label %75, label %80

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %4, i64 0, i32 2
  store i32* null, i32** %76, align 8
  %77 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %4, i64 0, i32 3
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds [257 x %struct.NaClImcMsgIoVec], [257 x %struct.NaClImcMsgIoVec]* %5, i64 0, i64 0, i32 0
  store i8* bitcast (%struct.NaClInternalHeader* @NaClImcSendTypedMessage.kNoHandles to i8*), i8** %78, align 16
  %79 = getelementptr inbounds [257 x %struct.NaClImcMsgIoVec], [257 x %struct.NaClImcMsgIoVec]* %5, i64 0, i64 0, i32 1
  store i64 16, i64* %79, align 8
  br label %180

80:                                               ; preds = %69, %104
  %81 = phi i64 [ %107, %104 ], [ 0, %69 ]
  %82 = phi i64 [ %106, %104 ], [ 0, %69 ]
  %83 = phi i64 [ %108, %104 ], [ 0, %69 ]
  store i64 0, i64* %7, align 8
  store i64 0, i64* %8, align 8
  %84 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %71, i64 %83
  %85 = load %struct.NaClDesc*, %struct.NaClDesc** %84, align 8
  %86 = bitcast %struct.NaClDesc* %85 to %struct.NaClDescVtbl**
  %87 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %86, align 8
  %88 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %87, i64 0, i32 14
  %89 = load i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, i64*, i64*)** %88, align 8
  %90 = call i32 %89(%struct.NaClDesc* %85, i64* nonnull %7, i64* nonnull %8) #6
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %80
  %93 = sext i32 %90 to i64
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i64 %93) #6
  br label %204

94:                                               ; preds = %80
  %95 = load i64, i64* %7, align 8
  %96 = icmp ult i64 %95, 4294967295
  %97 = sub i64 4294967295, %82
  %98 = icmp ult i64 %95, %97
  %99 = and i1 %96, %98
  br i1 %99, label %100, label %204

100:                                              ; preds = %94
  %101 = load i64, i64* %8, align 8
  %102 = sub i64 4294967295, %81
  %103 = icmp ugt i64 %101, %102
  br i1 %103, label %204, label %104

104:                                              ; preds = %100
  %105 = add i64 %82, 1
  %106 = add i64 %105, %95
  %107 = add i64 %101, %81
  %108 = add nuw nsw i64 %83, 1
  %109 = load i32, i32* %30, align 8
  %110 = zext i32 %109 to i64
  %111 = icmp ult i64 %108, %110
  br i1 %111, label %80, label %112

112:                                              ; preds = %104
  %113 = add i64 %106, 16
  %114 = and i64 %113, -16
  %115 = icmp ugt i64 %107, 8
  br i1 %115, label %116, label %117

116:                                              ; preds = %112
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.9, i64 0, i64 0), i32 %109, i64 %107, i32 8) #6
  br label %117

117:                                              ; preds = %116, %112
  %118 = icmp ugt i64 %114, 4294967279
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10, i64 0, i64 0), i64 %114) #6
  br label %204

120:                                              ; preds = %117
  %121 = add nuw nsw i64 %114, 16
  %122 = call noalias i8* @malloc(i64 %121) #6
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0)) #6
  br label %204

125:                                              ; preds = %120
  %126 = getelementptr inbounds [257 x %struct.NaClImcMsgIoVec], [257 x %struct.NaClImcMsgIoVec]* %5, i64 0, i64 0, i32 0
  store i8* %122, i8** %126, align 16
  %127 = and i64 %121, 4294967280
  %128 = getelementptr inbounds [257 x %struct.NaClImcMsgIoVec], [257 x %struct.NaClImcMsgIoVec]* %5, i64 0, i64 0, i32 1
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %122, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 0, i64* %130, align 4
  %131 = bitcast i8* %122 to i32*
  store i32 -742334975, i32* %131, align 4
  %132 = trunc i64 %114 to i32
  %133 = getelementptr inbounds i8, i8* %122, i64 4
  %134 = bitcast i8* %133 to i32*
  store i32 %132, i32* %134, align 4
  %135 = getelementptr inbounds i8, i8* %122, i64 16
  store i8* %135, i8** %18, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 %114
  store i8* %136, i8** %19, align 8
  store i32* %13, i32** %20, align 8
  %137 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 8
  store i32* %137, i32** %21, align 8
  %138 = load i32, i32* %30, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %164, label %140

140:                                              ; preds = %125, %158
  %141 = phi i8* [ %163, %158 ], [ %135, %125 ]
  %142 = phi i64 [ %159, %158 ], [ 0, %125 ]
  %143 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %71, i64 %142
  %144 = load %struct.NaClDesc*, %struct.NaClDesc** %143, align 8
  %145 = bitcast %struct.NaClDesc* %144 to %struct.NaClDescVtbl**
  %146 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %145, align 8
  %147 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %146, i64 0, i32 37
  %148 = load i32, i32* %147, align 8
  %149 = trunc i32 %148 to i8
  %150 = getelementptr inbounds i8, i8* %141, i64 1
  store i8* %150, i8** %18, align 8
  store i8 %149, i8* %141, align 1
  %151 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %145, align 8
  %152 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %151, i64 0, i32 15
  %153 = load i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)** %152, align 8
  %154 = call i32 %153(%struct.NaClDesc* %144, %struct.NaClDescXferState* nonnull %9) #6
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %140
  %157 = sext i32 %154 to i64
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.12, i64 0, i64 0), i64 %142, i64 %157) #6
  br label %204

158:                                              ; preds = %140
  %159 = add nuw nsw i64 %142, 1
  %160 = load i32, i32* %30, align 8
  %161 = zext i32 %160 to i64
  %162 = icmp ult i64 %159, %161
  %163 = load i8*, i8** %18, align 8
  br i1 %162, label %140, label %164

164:                                              ; preds = %158, %125
  %165 = phi i8* [ %135, %125 ], [ %163, %158 ]
  %166 = getelementptr inbounds i8, i8* %165, i64 1
  store i8* %166, i8** %18, align 8
  store i8 -1, i8* %165, align 1
  %167 = load i8*, i8** %18, align 8
  %168 = load i8*, i8** %19, align 8
  %169 = icmp ult i8* %167, %168
  br i1 %169, label %170, label %176

170:                                              ; preds = %164, %170
  %171 = phi i8* [ %173, %170 ], [ %167, %164 ]
  %172 = getelementptr inbounds i8, i8* %171, i64 1
  store i8* %172, i8** %18, align 8
  store i8 0, i8* %171, align 1
  %173 = load i8*, i8** %18, align 8
  %174 = load i8*, i8** %19, align 8
  %175 = icmp ult i8* %173, %174
  br i1 %175, label %170, label %176

176:                                              ; preds = %170, %164
  %177 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %4, i64 0, i32 2
  store i32* %13, i32** %177, align 8
  %178 = trunc i64 %107 to i32
  %179 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %4, i64 0, i32 3
  store i32 %178, i32* %179, align 8
  br label %180

180:                                              ; preds = %176, %75
  %181 = phi i8* [ null, %75 ], [ %122, %176 ]
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i32 %29) #6
  %182 = bitcast %struct.NaClDesc* %0 to %struct.NaClDescVtbl**
  %183 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %182, align 8
  %184 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %183, i64 0, i32 25
  %185 = load i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)** %184, align 8
  %186 = call i64 %185(%struct.NaClDesc* %0, %struct.NaClMessageHeader* nonnull %4, i32 %29) #6
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i64 %186) #6
  %187 = icmp ult i64 %186, -65536
  br i1 %187, label %197, label %188

188:                                              ; preds = %180
  %189 = and i32 %29, 1
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %188
  %192 = call i32 @NaClWouldBlock() #6
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %204

194:                                              ; preds = %191, %188
  %195 = icmp eq i64 %186, -90
  %196 = select i1 %195, i64 -90, i64 -5
  br label %204

197:                                              ; preds = %180
  %198 = and i64 %186, 4294967295
  %199 = getelementptr inbounds [257 x %struct.NaClImcMsgIoVec], [257 x %struct.NaClImcMsgIoVec]* %5, i64 0, i64 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = icmp ult i64 %198, %200
  %202 = sub i64 %186, %200
  %203 = select i1 %201, i64 -105, i64 %202
  br label %204

204:                                              ; preds = %100, %94, %197, %194, %191, %156, %124, %119, %92
  %205 = phi i64 [ %93, %92 ], [ -75, %119 ], [ -12, %124 ], [ %157, %156 ], [ -11, %191 ], [ %196, %194 ], [ %203, %197 ], [ -75, %94 ], [ -75, %100 ]
  %206 = phi i8* [ null, %92 ], [ null, %119 ], [ null, %124 ], [ %122, %156 ], [ %181, %191 ], [ %181, %194 ], [ %181, %197 ], [ null, %94 ], [ null, %100 ]
  call void @free(i8* %206) #6
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0), i64 %205) #6
  br label %207

207:                                              ; preds = %58, %67, %204, %47, %44, %39
  %208 = phi i64 [ -22, %39 ], [ -22, %44 ], [ -22, %47 ], [ %205, %204 ], [ -22, %67 ], [ -22, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 4112, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  ret i64 %208
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare i32 @NaClWouldBlock() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClImcRecvTypedMessage(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) local_unnamed_addr #1 {
  %4 = alloca [8 x i32], align 16
  %5 = bitcast [8 x i32]* %4 to i8*
  %6 = alloca %struct.NaClIOVec, align 8
  %7 = alloca %struct.NaClMessageHeader, align 8
  %8 = alloca %struct.NaClDescXferState, align 8
  %9 = alloca [8 x %struct.NaClDesc*], align 16
  %10 = bitcast [8 x %struct.NaClDesc*]* %9 to i8*
  %11 = alloca %struct.NaClDesc*, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 0
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 1
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 2
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 3
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 4
  %17 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 5
  %18 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 6
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 7
  %20 = bitcast %struct.NaClIOVec* %6 to i8*
  %21 = bitcast [8 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  %22 = getelementptr inbounds %struct.NaClIOVec, %struct.NaClIOVec* %6, i64 0, i32 0
  %23 = getelementptr inbounds %struct.NaClIOVec, %struct.NaClIOVec* %6, i64 0, i32 1
  %24 = bitcast %struct.NaClMessageHeader* %7 to i8*
  %25 = bitcast %struct.NaClIOVec* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %26 = bitcast %struct.NaClDescXferState* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #6
  %27 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %8, i64 0, i32 0
  %28 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %8, i64 0, i32 1
  %29 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %8, i64 0, i32 2
  %30 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %8, i64 0, i32 3
  %31 = bitcast %struct.NaClDescXferState* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 64, i1 false)
  %32 = ptrtoint %struct.NaClDesc* %0 to i64
  %33 = ptrtoint %struct.NaClImcTypedMsgHdr* %1 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0), i64 %32, i64 %33, i32 %2) #6
  %34 = icmp ugt i32 %2, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 %2) #6
  %36 = and i32 %2, 1
  br label %37

37:                                               ; preds = %35, %3
  %38 = phi i32 [ %36, %35 ], [ %2, %3 ]
  %39 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp ugt i32 %40, 256
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %262

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp ugt i32 %45, 8
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = zext i32 %40 to i64
  %49 = icmp eq i32 %40, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 0
  %52 = load %struct.NaClImcMsgIoVec*, %struct.NaClImcMsgIoVec** %51, align 8
  br label %54

53:                                               ; preds = %43
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %262

54:                                               ; preds = %62, %50
  %55 = phi i64 [ 0, %50 ], [ %64, %62 ]
  %56 = phi i64 [ 0, %50 ], [ %63, %62 ]
  %57 = getelementptr inbounds %struct.NaClImcMsgIoVec, %struct.NaClImcMsgIoVec* %52, i64 %55, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = xor i64 %58, -1
  %60 = icmp ugt i64 %56, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %54
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %262

62:                                               ; preds = %54
  %63 = add i64 %58, %56
  %64 = add nuw nsw i64 %55, 1
  %65 = icmp eq i64 %64, %48
  br i1 %65, label %66, label %54

66:                                               ; preds = %62
  %67 = icmp ult i64 %63, 131072
  br i1 %67, label %68, label %70

68:                                               ; preds = %47, %66
  %69 = phi i64 [ %63, %66 ], [ 0, %47 ]
  br label %70

70:                                               ; preds = %66, %68
  %71 = phi i64 [ %69, %68 ], [ 131072, %66 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 64, i1 false)
  %72 = tail call noalias i8* @malloc(i64 131320) #6
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %247

75:                                               ; preds = %70
  store i8* %72, i8** %22, align 8
  store i64 131320, i64* %23, align 8
  %76 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %7, i64 0, i32 0
  store %struct.NaClIOVec* %6, %struct.NaClIOVec** %76, align 8
  %77 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %7, i64 0, i32 1
  store i32 1, i32* %77, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -1, i64 32, i1 false)
  %78 = bitcast %struct.NaClDesc* %0 to %struct.NaClDescVtbl**
  %79 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %78, align 8
  %80 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %79, i64 0, i32 37
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 14
  %83 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %7, i64 0, i32 2
  %84 = select i1 %82, i32* %12, i32* null
  %85 = select i1 %82, i32 8, i32 0
  %86 = select i1 %82, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i64 0, i64 0)
  store i32* %84, i32** %83, align 8
  %87 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %7, i64 0, i32 3
  store i32 %85, i32* %87, align 8
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* %86) #6
  %88 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %7, i64 0, i32 4
  store i32 0, i32* %88, align 4
  %89 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %78, align 8
  %90 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %89, i64 0, i32 26
  %91 = load i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)** %90, align 8
  %92 = call i64 %91(%struct.NaClDesc* %0, %struct.NaClMessageHeader* nonnull %7, i32 %38) #6
  %93 = icmp ult i64 %92, -65536
  br i1 %93, label %95, label %94

94:                                               ; preds = %75
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i64 %92) #6
  br label %247

95:                                               ; preds = %75
  %96 = icmp ult i64 %92, 16
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.23, i64 0, i64 0), i64 %92, i64 %92, i64 16, i64 16) #6
  br label %247

98:                                               ; preds = %95
  %99 = bitcast i8* %72 to i32*
  %100 = load i32, i32* %99, align 1
  %101 = getelementptr inbounds i8, i8* %72, i64 4
  %102 = bitcast i8* %101 to i32*
  %103 = load i32, i32* %102, align 1
  %104 = icmp eq i32 %100, -742334975
  br i1 %104, label %106, label %105

105:                                              ; preds = %98
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 %100, i32 -742334975) #6
  br label %247

106:                                              ; preds = %98
  %107 = zext i32 %103 to i64
  %108 = add nuw nsw i64 %107, 16
  %109 = icmp ult i64 %92, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %106
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.25, i64 0, i64 0), i64 16, i64 16, i32 %103, i32 %103, i64 %92, i64 %92) #6
  br label %247

111:                                              ; preds = %106
  %112 = sub nsw i64 %92, %107
  %113 = add i64 %112, -16
  %114 = icmp ult i64 %71, %113
  br i1 %114, label %115, label %118

115:                                              ; preds = %111
  %116 = load i32, i32* %88, align 4
  %117 = or i32 %116, 1
  store i32 %117, i32* %88, align 4
  br label %118

118:                                              ; preds = %115, %111
  %119 = icmp ult i64 %113, %71
  %120 = select i1 %119, i64 %113, i64 %71
  %121 = getelementptr inbounds i8, i8* %72, i64 16
  %122 = add nuw nsw i64 %107, 16
  %123 = getelementptr inbounds i8, i8* %72, i64 %122
  %124 = load i32, i32* %39, align 8
  %125 = icmp ne i32 %124, 0
  %126 = icmp ne i64 %120, 0
  %127 = and i1 %126, %125
  br i1 %127, label %128, label %149

128:                                              ; preds = %118
  %129 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 0
  br label %130

130:                                              ; preds = %128, %130
  %131 = phi i64 [ 0, %128 ], [ %143, %130 ]
  %132 = phi i8* [ %123, %128 ], [ %141, %130 ]
  %133 = phi i64 [ %120, %128 ], [ %142, %130 ]
  %134 = load %struct.NaClImcMsgIoVec*, %struct.NaClImcMsgIoVec** %129, align 8
  %135 = getelementptr inbounds %struct.NaClImcMsgIoVec, %struct.NaClImcMsgIoVec* %134, i64 %131, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = icmp ult i64 %136, %133
  %138 = select i1 %137, i64 %136, i64 %133
  %139 = getelementptr inbounds %struct.NaClImcMsgIoVec, %struct.NaClImcMsgIoVec* %134, i64 %131, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %140, i8* align 1 %132, i64 %138, i1 false)
  %141 = getelementptr inbounds i8, i8* %132, i64 %138
  %142 = sub i64 %133, %138
  %143 = add nuw nsw i64 %131, 1
  %144 = load i32, i32* %39, align 8
  %145 = zext i32 %144 to i64
  %146 = icmp ult i64 %143, %145
  %147 = icmp ne i64 %142, 0
  %148 = and i1 %147, %146
  br i1 %148, label %130, label %149

149:                                              ; preds = %130, %118
  store i8* %121, i8** %27, align 8
  store i8* %123, i8** %28, align 8
  store i32* %12, i32** %29, align 8
  %150 = getelementptr inbounds %struct.NaClMessageHeader, %struct.NaClMessageHeader* %7, i64 0, i32 3
  %151 = load i32, i32* %150, align 8
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %152
  store i32* %153, i32** %30, align 8
  %154 = icmp eq i32 %103, 0
  br i1 %154, label %244, label %155

155:                                              ; preds = %149
  %156 = bitcast %struct.NaClDesc** %11 to i8*
  %157 = bitcast %struct.NaClDesc** %11 to i64*
  br label %158

158:                                              ; preds = %155, %169
  %159 = phi i64 [ 0, %155 ], [ %173, %169 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #6
  store %struct.NaClDesc* inttoptr (i64 -6148914691236517206 to %struct.NaClDesc*), %struct.NaClDesc** %11, align 8
  %160 = call i32 @NaClDescInternalizeFromXferBuffer(%struct.NaClDesc** nonnull %11, %struct.NaClDescXferState* nonnull %8)
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.27, i64 0, i64 0), i32 %160) #6
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #6
  br label %177

163:                                              ; preds = %158
  %164 = icmp ugt i64 %159, 7
  br i1 %164, label %165, label %166

165:                                              ; preds = %163
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.28, i64 0, i64 0)) #6
  br label %166

166:                                              ; preds = %165, %163
  %167 = icmp eq i32 %160, 1
  br i1 %167, label %169, label %168

168:                                              ; preds = %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #6
  br label %247

169:                                              ; preds = %166
  %170 = load i64, i64* %157, align 8
  %171 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 %159
  %172 = bitcast %struct.NaClDesc** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = add i64 %159, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #6
  %174 = load i8*, i8** %27, align 8
  %175 = load i8*, i8** %28, align 8
  %176 = icmp ult i8* %174, %175
  br i1 %176, label %158, label %177

177:                                              ; preds = %169, %162
  %178 = phi i64 [ %159, %162 ], [ %173, %169 ]
  %179 = load i32, i32* %44, align 8
  %180 = zext i32 %179 to i64
  %181 = icmp ugt i64 %178, %180
  br i1 %181, label %182, label %186

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 4
  %184 = load i32, i32* %183, align 4
  %185 = or i32 %184, 2
  store i32 %185, i32* %183, align 4
  br label %186

186:                                              ; preds = %182, %177
  %187 = phi i64 [ %180, %182 ], [ %178, %177 ]
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %244, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %struct.NaClImcTypedMsgHdr, %struct.NaClImcTypedMsgHdr* %1, i64 0, i32 2
  %191 = add i64 %187, -1
  %192 = and i64 %187, 3
  %193 = icmp ult i64 %191, 3
  br i1 %193, label %229, label %194

194:                                              ; preds = %189
  %195 = sub i64 %187, %192
  br label %196

196:                                              ; preds = %196, %194
  %197 = phi i64 [ 0, %194 ], [ %226, %196 ]
  %198 = phi i64 [ %195, %194 ], [ %227, %196 ]
  %199 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 %197
  %200 = bitcast %struct.NaClDesc** %199 to i64*
  %201 = load i64, i64* %200, align 16
  %202 = load %struct.NaClDesc**, %struct.NaClDesc*** %190, align 8
  %203 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %202, i64 %197
  %204 = bitcast %struct.NaClDesc** %203 to i64*
  store i64 %201, i64* %204, align 8
  store %struct.NaClDesc* null, %struct.NaClDesc** %199, align 16
  %205 = or i64 %197, 1
  %206 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 %205
  %207 = bitcast %struct.NaClDesc** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = load %struct.NaClDesc**, %struct.NaClDesc*** %190, align 8
  %210 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %209, i64 %205
  %211 = bitcast %struct.NaClDesc** %210 to i64*
  store i64 %208, i64* %211, align 8
  store %struct.NaClDesc* null, %struct.NaClDesc** %206, align 8
  %212 = or i64 %197, 2
  %213 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 %212
  %214 = bitcast %struct.NaClDesc** %213 to i64*
  %215 = load i64, i64* %214, align 16
  %216 = load %struct.NaClDesc**, %struct.NaClDesc*** %190, align 8
  %217 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %216, i64 %212
  %218 = bitcast %struct.NaClDesc** %217 to i64*
  store i64 %215, i64* %218, align 8
  store %struct.NaClDesc* null, %struct.NaClDesc** %213, align 16
  %219 = or i64 %197, 3
  %220 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 %219
  %221 = bitcast %struct.NaClDesc** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = load %struct.NaClDesc**, %struct.NaClDesc*** %190, align 8
  %224 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %223, i64 %219
  %225 = bitcast %struct.NaClDesc** %224 to i64*
  store i64 %222, i64* %225, align 8
  store %struct.NaClDesc* null, %struct.NaClDesc** %220, align 8
  %226 = add nuw i64 %197, 4
  %227 = add i64 %198, -4
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %196

229:                                              ; preds = %196, %189
  %230 = phi i64 [ 0, %189 ], [ %226, %196 ]
  %231 = icmp eq i64 %192, 0
  br i1 %231, label %244, label %232

232:                                              ; preds = %229, %232
  %233 = phi i64 [ %241, %232 ], [ %230, %229 ]
  %234 = phi i64 [ %242, %232 ], [ %192, %229 ]
  %235 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 %233
  %236 = bitcast %struct.NaClDesc** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = load %struct.NaClDesc**, %struct.NaClDesc*** %190, align 8
  %239 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %238, i64 %233
  %240 = bitcast %struct.NaClDesc** %239 to i64*
  store i64 %237, i64* %240, align 8
  store %struct.NaClDesc* null, %struct.NaClDesc** %235, align 8
  %241 = add nuw i64 %233, 1
  %242 = add i64 %234, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %232, !llvm.loop !2

244:                                              ; preds = %229, %232, %149, %186
  %245 = phi i64 [ 0, %186 ], [ 0, %149 ], [ %187, %232 ], [ %187, %229 ]
  %246 = trunc i64 %245 to i32
  store i32 %246, i32* %44, align 8
  br label %247

247:                                              ; preds = %168, %244, %110, %105, %97, %94, %74
  %248 = phi i64 [ -12, %74 ], [ %92, %94 ], [ -5, %97 ], [ -5, %105 ], [ -5, %110 ], [ %120, %244 ], [ -5, %168 ]
  call void @free(i8* %72) #6
  %249 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 0
  %250 = load %struct.NaClDesc*, %struct.NaClDesc** %249, align 16
  %251 = icmp eq %struct.NaClDesc* %250, null
  br i1 %251, label %253, label %252

252:                                              ; preds = %247
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %250) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %249, align 16
  br label %253

253:                                              ; preds = %247, %252
  %254 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 1
  %255 = load %struct.NaClDesc*, %struct.NaClDesc** %254, align 8
  %256 = icmp eq %struct.NaClDesc* %255, null
  br i1 %256, label %298, label %297

257:                                              ; preds = %328
  %258 = call i32 @NaClClose(i32 %329) #6
  br label %259

259:                                              ; preds = %328, %257
  %260 = load i32, i32* %13, align 4
  %261 = icmp eq i32 %260, -1
  br i1 %261, label %266, label %264

262:                                              ; preds = %296, %61, %53, %42
  %263 = phi i64 [ -22, %42 ], [ -22, %53 ], [ -22, %61 ], [ %248, %296 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret i64 %263

264:                                              ; preds = %259
  %265 = call i32 @NaClClose(i32 %260) #6
  br label %266

266:                                              ; preds = %264, %259
  %267 = load i32, i32* %14, align 8
  %268 = icmp eq i32 %267, -1
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = call i32 @NaClClose(i32 %267) #6
  br label %271

271:                                              ; preds = %269, %266
  %272 = load i32, i32* %15, align 4
  %273 = icmp eq i32 %272, -1
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = call i32 @NaClClose(i32 %272) #6
  br label %276

276:                                              ; preds = %274, %271
  %277 = load i32, i32* %16, align 16
  %278 = icmp eq i32 %277, -1
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = call i32 @NaClClose(i32 %277) #6
  br label %281

281:                                              ; preds = %279, %276
  %282 = load i32, i32* %17, align 4
  %283 = icmp eq i32 %282, -1
  br i1 %283, label %286, label %284

284:                                              ; preds = %281
  %285 = call i32 @NaClClose(i32 %282) #6
  br label %286

286:                                              ; preds = %284, %281
  %287 = load i32, i32* %18, align 8
  %288 = icmp eq i32 %287, -1
  br i1 %288, label %291, label %289

289:                                              ; preds = %286
  %290 = call i32 @NaClClose(i32 %287) #6
  br label %291

291:                                              ; preds = %289, %286
  %292 = load i32, i32* %19, align 4
  %293 = icmp eq i32 %292, -1
  br i1 %293, label %296, label %294

294:                                              ; preds = %291
  %295 = call i32 @NaClClose(i32 %292) #6
  br label %296

296:                                              ; preds = %294, %291
  call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0), i64 %248) #6
  br label %262

297:                                              ; preds = %253
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %255) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %254, align 8
  br label %298

298:                                              ; preds = %297, %253
  %299 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 2
  %300 = load %struct.NaClDesc*, %struct.NaClDesc** %299, align 16
  %301 = icmp eq %struct.NaClDesc* %300, null
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %300) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %299, align 16
  br label %303

303:                                              ; preds = %302, %298
  %304 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 3
  %305 = load %struct.NaClDesc*, %struct.NaClDesc** %304, align 8
  %306 = icmp eq %struct.NaClDesc* %305, null
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %305) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %304, align 8
  br label %308

308:                                              ; preds = %307, %303
  %309 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 4
  %310 = load %struct.NaClDesc*, %struct.NaClDesc** %309, align 16
  %311 = icmp eq %struct.NaClDesc* %310, null
  br i1 %311, label %313, label %312

312:                                              ; preds = %308
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %310) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %309, align 16
  br label %313

313:                                              ; preds = %312, %308
  %314 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 5
  %315 = load %struct.NaClDesc*, %struct.NaClDesc** %314, align 8
  %316 = icmp eq %struct.NaClDesc* %315, null
  br i1 %316, label %318, label %317

317:                                              ; preds = %313
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %315) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %314, align 8
  br label %318

318:                                              ; preds = %317, %313
  %319 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 6
  %320 = load %struct.NaClDesc*, %struct.NaClDesc** %319, align 16
  %321 = icmp eq %struct.NaClDesc* %320, null
  br i1 %321, label %323, label %322

322:                                              ; preds = %318
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %320) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %319, align 16
  br label %323

323:                                              ; preds = %322, %318
  %324 = getelementptr inbounds [8 x %struct.NaClDesc*], [8 x %struct.NaClDesc*]* %9, i64 0, i64 7
  %325 = load %struct.NaClDesc*, %struct.NaClDesc** %324, align 8
  %326 = icmp eq %struct.NaClDesc* %325, null
  br i1 %326, label %328, label %327

327:                                              ; preds = %323
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %325) #6
  store %struct.NaClDesc* null, %struct.NaClDesc** %324, align 8
  br label %328

328:                                              ; preds = %327, %323
  %329 = load i32, i32* %12, align 16
  %330 = icmp eq i32 %329, -1
  br i1 %330, label %259, label %257
}

declare void @NaClDescUnref(%struct.NaClDesc*) local_unnamed_addr #3

declare i32 @NaClClose(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCommonDescSocketPair(%struct.NaClDesc** nocapture) local_unnamed_addr #1 {
  %2 = alloca [2 x i32], align 4
  %3 = bitcast [2 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 0
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 1
  store i32 -1, i32* %4, align 4
  store i32 -1, i32* %5, align 4
  %6 = call i32 @NaClSocketPair(i32* nonnull %4) #6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.30, i64 0, i64 0)) #6
  br label %33

9:                                                ; preds = %1
  %10 = call noalias i8* @malloc(i64 88) #6
  %11 = bitcast i8* %10 to %struct.NaClDescXferableDataDesc*
  %12 = icmp eq i8* %10, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %9
  %14 = call noalias i8* @malloc(i64 88) #6
  %15 = bitcast i8* %14 to %struct.NaClDescXferableDataDesc*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  call void @free(i8* nonnull %10) #6
  br label %33

18:                                               ; preds = %13
  %19 = load i32, i32* %4, align 4
  %20 = call i32 @NaClDescXferableDataDescCtor(%struct.NaClDescXferableDataDesc* nonnull %11, i32 %19) #6
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  call void @free(i8* nonnull %10) #6
  call void @free(i8* nonnull %14) #6
  br label %33

23:                                               ; preds = %18
  store i32 -1, i32* %4, align 4
  %24 = load i32, i32* %5, align 4
  %25 = call i32 @NaClDescXferableDataDescCtor(%struct.NaClDescXferableDataDesc* nonnull %15, i32 %24) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  store i32 -1, i32* %5, align 4
  %28 = bitcast %struct.NaClDesc** %0 to i8**
  store i8* %10, i8** %28, align 8
  %29 = getelementptr inbounds %struct.NaClDesc*, %struct.NaClDesc** %0, i64 1
  %30 = bitcast %struct.NaClDesc** %29 to i8**
  store i8* %14, i8** %30, align 8
  br label %33

31:                                               ; preds = %23
  call void @free(i8* nonnull %14) #6
  %32 = bitcast i8* %10 to %struct.NaClDesc*
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %32) #6
  br label %33

33:                                               ; preds = %9, %22, %27, %17, %8, %31
  %34 = phi i8* [ %10, %31 ], [ null, %8 ], [ null, %17 ], [ null, %27 ], [ null, %22 ], [ null, %9 ]
  %35 = phi i32 [ -23, %31 ], [ -23, %8 ], [ -12, %17 ], [ 0, %27 ], [ -23, %22 ], [ -12, %9 ]
  %36 = load i32, i32* %4, align 4
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = call i32 @NaClClose(i32 %36) #6
  br label %40

40:                                               ; preds = %33, %38
  %41 = load i32, i32* %5, align 4
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = call i32 @NaClClose(i32 %41) #6
  br label %45

45:                                               ; preds = %40, %43
  call void @free(i8* %34) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6
  ret i32 %35
}

declare i32 @NaClSocketPair(i32*) local_unnamed_addr #3

declare i32 @NaClDescXferableDataDescCtor(%struct.NaClDescXferableDataDesc*, i32) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
