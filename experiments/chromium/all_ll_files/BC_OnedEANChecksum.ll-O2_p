; ModuleID = '../../third_party/pdfium/fxbarcode/oned/BC_OnedEANChecksum.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/oned/BC_OnedEANChecksum.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z15EANCalcChecksumRKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %21

12:                                               ; preds = %40
  %13 = mul i32 %43, 3
  br label %14

14:                                               ; preds = %1, %12, %5
  %15 = phi i32 [ 0, %5 ], [ %13, %12 ], [ 0, %1 ]
  %16 = phi i32 [ 0, %5 ], [ %45, %12 ], [ 0, %1 ]
  %17 = add nsw i32 %15, %16
  %18 = srem i32 %17, 10
  %19 = sub nsw i32 10, %18
  %20 = srem i32 %19, 10
  ret i32 %20

21:                                               ; preds = %9, %40
  %22 = phi i64 [ %28, %40 ], [ %7, %9 ]
  %23 = phi i64 [ %46, %40 ], [ 1, %9 ]
  %24 = phi i32 [ %45, %40 ], [ 0, %9 ]
  %25 = phi i32 [ %43, %40 ], [ 0, %9 ]
  %26 = and i64 %23, 1
  %27 = icmp eq i64 %26, 0
  %28 = add i64 %22, -1
  %29 = icmp ugt i64 %11, %28
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %21
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !4
  unreachable

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 3, i64 %28
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = sext i8 %33 to i32
  %37 = add nsw i32 %36, -48
  %38 = icmp ult i32 %37, 10
  %39 = select i1 %38, i32 %37, i32 0
  br label %40

40:                                               ; preds = %31, %35
  %41 = phi i32 [ %39, %35 ], [ 0, %31 ]
  %42 = select i1 %27, i32 0, i32 %41
  %43 = add nsw i32 %42, %25
  %44 = select i1 %27, i32 %41, i32 0
  %45 = add nsw i32 %44, %24
  %46 = add i64 %23, 1
  %47 = icmp eq i64 %28, 0
  br i1 %47, label %12, label %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143849142}
!4 = !{i32 -2143849121}
