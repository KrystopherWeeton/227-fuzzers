; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_parser_token_stream.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_parser_token_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserTokenStream" = type <{ %"class.WTF::Vector", %"class.blink::CSSTokenizer"*, %"class.blink::CSSParserToken", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [768 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.1", %"class.WTF::Vector.6", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3", [32 x i8] }
%"class.WTF::VectorBufferBase.3" = type { i32*, i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSParserTokenStream13StringRangeAtEjj(%"class.WTF::StringView"* noalias sret, %"class.blink::CSSParserTokenStream"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %6 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %5, align 8
  tail call void @_ZNK5blink12CSSTokenizer13StringRangeAtEjj(%"class.WTF::StringView"* sret %0, %"class.blink::CSSTokenizer"* %6, i32 %2, i32 %3) #3
  ret void
}

declare void @_ZNK5blink12CSSTokenizer13StringRangeAtEjj(%"class.WTF::StringView"* sret, %"class.blink::CSSTokenizer"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %3 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %2, align 8
  %4 = tail call i32 @_ZNK5blink12CSSTokenizer15BlockStackDepthEv(%"class.blink::CSSTokenizer"* %3) #3
  ret i32 %4
}

declare i32 @_ZNK5blink12CSSTokenizer15BlockStackDepthEv(%"class.blink::CSSTokenizer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %8 = bitcast %"class.blink::CSSParserToken"* %6 to i32*
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %10 = load i8, i8* %3, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %18, %1
  store i8 1, i8* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #3
  %13 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %5, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %13) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %4, i64 24, i1 false) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #3
  br label %14

14:                                               ; preds = %1, %12
  %15 = load i32, i32* %8, align 8
  %16 = and i32 %15, 63
  %17 = icmp eq i32 %16, 17
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  store i8 0, i8* %3, align 4
  %19 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %5, align 8
  %20 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %19, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %19, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %20, align 4
  %24 = icmp ult i32 %22, %23
  %25 = select i1 %24, i32 %22, i32 %23
  store i32 %25, i32* %9, align 8
  br label %12

26:                                               ; preds = %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* noalias nocapture sret, %"class.blink::CSSParserTokenStream"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 0
  store i24 -5592406, i24* %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  store i32 -1431655766, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  store i8 1, i8* %9, align 4
  %13 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #3
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %15 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %15) #3
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %13, i64 24, i1 false) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #3
  br label %18

18:                                               ; preds = %2, %12
  store i8 0, i8* %9, align 4
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %20 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %20, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %20, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %21, align 4
  %25 = icmp ult i32 %23, %24
  %26 = select i1 %25, i32 %23, i32 %24
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %29 = bitcast %"class.blink::CSSParserToken"* %0 to i8*
  %30 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
  %31 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  %32 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  store i8 1, i8* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #3
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %20) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %31, i64 24, i1 false) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #3
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 63
  %35 = icmp eq i32 %34, 17
  br i1 %35, label %36, label %47

36:                                               ; preds = %18, %36
  store i8 0, i8* %9, align 4
  %37 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %19, align 8
  %38 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %37, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %37, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %38, align 4
  %42 = icmp ult i32 %40, %41
  %43 = select i1 %42, i32 %40, i32 %41
  store i32 %43, i32* %27, align 8
  store i8 1, i8* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #3
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %37) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %31, i64 24, i1 false) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #3
  %44 = load i32, i32* %32, align 8
  %45 = and i32 %44, 63
  %46 = icmp eq i32 %45, 17
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20CSSParserTokenStream23ConsumeCommentOrNothingEv(%"class.blink::CSSParserTokenStream"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #3
  %4 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 0
  store i24 -5592406, i24* %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 1
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 2
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %2, i64 0, i32 3, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %9 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer26TokenizeSingleWithCommentsEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %9) #3
  %10 = bitcast %"class.blink::CSSParserToken"* %2 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 63
  %13 = icmp eq i32 %12, 32
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::CSSParserToken"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %3, i64 24, i1 false)
  %17 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  store i8 1, i8* %17, align 4
  br label %28

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  store i8 0, i8* %19, align 4
  %20 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %21 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %20, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %20, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %21, align 4
  %25 = icmp ult i32 %23, %24
  %26 = select i1 %25, i32 %23, i32 %24
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  store i32 %26, i32* %27, align 8
  br label %28

28:                                               ; preds = %18, %14
  %29 = phi i1 [ false, %14 ], [ true, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #3
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink12CSSTokenizer26TokenizeSingleWithCommentsEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSParserTokenStream30UncheckedConsumeComponentValueEv(%"class.blink::CSSParserTokenStream"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::CSSParserToken"* %6 to i32*
  %8 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  %9 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %10 = load i32, i32* %7, align 8
  br label %11

11:                                               ; preds = %30, %1
  %12 = phi i32 [ %10, %1 ], [ %32, %30 ]
  %13 = phi i32 [ 0, %1 ], [ %31, %30 ]
  store i8 0, i8* %3, align 4
  %14 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %4, align 8
  %15 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %14, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %15, align 4
  %19 = icmp ult i32 %17, %18
  %20 = select i1 %19, i32 %17, i32 %18
  store i32 %20, i32* %5, align 8
  %21 = lshr i32 %12, 6
  %22 = and i32 %21, 3
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %11
  %25 = add i32 %13, 1
  br label %30

26:                                               ; preds = %11
  %27 = icmp eq i32 %22, 2
  %28 = zext i1 %27 to i32
  %29 = sub i32 %13, %28
  br label %30

30:                                               ; preds = %26, %24
  %31 = phi i32 [ %25, %24 ], [ %29, %26 ]
  store i8 1, i8* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #3
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %14) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %8, i64 24, i1 false) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #3
  %32 = load i32, i32* %7, align 8
  %33 = and i32 %32, 63
  %34 = icmp ne i32 %33, 31
  %35 = icmp ne i32 %31, 0
  %36 = and i1 %35, %34
  br i1 %36, label %11, label %37

37:                                               ; preds = %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::CSSParserToken"* %6 to i32*
  %8 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  %9 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %10 = load i32, i32* %7, align 8
  br label %11

11:                                               ; preds = %32, %1
  %12 = phi i32 [ %10, %1 ], [ %34, %32 ]
  %13 = phi i32 [ 1, %1 ], [ %33, %32 ]
  store i8 0, i8* %3, align 4
  %14 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %4, align 8
  %15 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %14, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %15, align 4
  %19 = icmp ult i32 %17, %18
  %20 = select i1 %19, i32 %17, i32 %18
  store i32 %20, i32* %5, align 8
  %21 = lshr i32 %12, 6
  %22 = and i32 %21, 3
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %11
  %25 = add i32 %13, 1
  br label %29

26:                                               ; preds = %11
  %27 = icmp eq i32 %22, 2
  %28 = add i32 %13, -1
  br i1 %27, label %29, label %32

29:                                               ; preds = %26, %24
  %30 = phi i32 [ %25, %24 ], [ %28, %26 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26, %29
  %33 = phi i32 [ %30, %29 ], [ %13, %26 ]
  store i8 1, i8* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #3
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %14) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %8, i64 24, i1 false) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #3
  %34 = load i32, i32* %7, align 8
  %35 = and i32 %34, 63
  %36 = icmp eq i32 %35, 31
  br i1 %36, label %37, label %11

37:                                               ; preds = %32, %29
  ret void
}

declare void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
