; ModuleID = '../../third_party/ffmpeg/libavcodec/avfft.c'
source_filename = "../../third_party/ffmpeg/libavcodec/avfft.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.RDFTContext = type { i32, i32, i32, float*, float*, i32, %struct.FFTContext, void (%struct.RDFTContext*, float*)* }
%struct.DCTContext = type { i32, i32, %struct.RDFTContext, float*, float*, void (%struct.DCTContext*, float*)*, void (float*, float*)* }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.FFTContext* @av_fft_init(i32, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.FFTContext*, align 8
  %4 = bitcast %struct.FFTContext** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  %5 = tail call noalias i8* @av_mallocz(i64 104) #4
  %6 = bitcast %struct.FFTContext** %3 to i8**
  store i8* %5, i8** %6, align 8
  %7 = icmp eq i8* %5, null
  %8 = bitcast i8* %5 to %struct.FFTContext*
  br i1 %7, label %14, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @ff_fft_init(%struct.FFTContext* nonnull %8, i32 %0, i32 %1) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  call void @av_freep(i8* nonnull %4) #4
  %13 = load %struct.FFTContext*, %struct.FFTContext** %3, align 8
  br label %14

14:                                               ; preds = %9, %2, %12
  %15 = phi %struct.FFTContext* [ %8, %9 ], [ %8, %2 ], [ %13, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret %struct.FFTContext* %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare i32 @ff_fft_init(%struct.FFTContext*, i32, i32) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_fft_permute(%struct.FFTContext*, %struct.FFTComplex*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 8
  %4 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %3, align 8
  tail call void %4(%struct.FFTContext* %0, %struct.FFTComplex* %1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_fft_calc(%struct.FFTContext*, %struct.FFTComplex*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 9
  %4 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %3, align 8
  tail call void %4(%struct.FFTContext* %0, %struct.FFTComplex* %1) #4
  ret void
}

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @av_fft_end(%struct.FFTContext*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FFTContext* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  tail call void @ff_fft_end(%struct.FFTContext* nonnull %0) #4
  %4 = bitcast %struct.FFTContext* %0 to i8*
  tail call void @av_free(i8* nonnull %4) #4
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare void @ff_fft_end(%struct.FFTContext*) local_unnamed_addr #2

declare void @av_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.FFTContext* @av_mdct_init(i32, i32, double) local_unnamed_addr #0 {
  %4 = alloca %struct.FFTContext*, align 8
  %5 = bitcast %struct.FFTContext** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = tail call noalias i8* @av_malloc(i64 104) #4
  %7 = bitcast %struct.FFTContext** %4 to i8**
  store i8* %6, i8** %7, align 8
  %8 = icmp eq i8* %6, null
  %9 = bitcast i8* %6 to %struct.FFTContext*
  br i1 %8, label %15, label %10

10:                                               ; preds = %3
  %11 = tail call i32 @ff_mdct_init(%struct.FFTContext* nonnull %9, i32 %0, i32 %1, double %2) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  call void @av_freep(i8* nonnull %5) #4
  %14 = load %struct.FFTContext*, %struct.FFTContext** %4, align 8
  br label %15

15:                                               ; preds = %10, %3, %13
  %16 = phi %struct.FFTContext* [ %9, %10 ], [ %9, %3 ], [ %14, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret %struct.FFTContext* %16
}

declare noalias i8* @av_malloc(i64) local_unnamed_addr #2

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @av_imdct_calc(%struct.FFTContext*, float*, float*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 10
  %5 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %4, align 8
  tail call void %5(%struct.FFTContext* %0, float* %1, float* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_imdct_half(%struct.FFTContext*, float*, float*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 11
  %5 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %4, align 8
  tail call void %5(%struct.FFTContext* %0, float* %1, float* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_mdct_calc(%struct.FFTContext*, float*, float*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 12
  %5 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %4, align 8
  tail call void %5(%struct.FFTContext* %0, float* %1, float* %2) #4
  ret void
}

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @av_mdct_end(%struct.FFTContext*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FFTContext* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  tail call void @ff_mdct_end(%struct.FFTContext* nonnull %0) #4
  %4 = bitcast %struct.FFTContext* %0 to i8*
  tail call void @av_free(i8* nonnull %4) #4
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare void @ff_mdct_end(%struct.FFTContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.RDFTContext* @av_rdft_init(i32, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.RDFTContext*, align 8
  %4 = bitcast %struct.RDFTContext** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  %5 = tail call noalias i8* @av_malloc(i64 152) #4
  %6 = bitcast %struct.RDFTContext** %3 to i8**
  store i8* %5, i8** %6, align 8
  %7 = icmp eq i8* %5, null
  %8 = bitcast i8* %5 to %struct.RDFTContext*
  br i1 %7, label %14, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @ff_rdft_init(%struct.RDFTContext* nonnull %8, i32 %0, i32 %1) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  call void @av_freep(i8* nonnull %4) #4
  %13 = load %struct.RDFTContext*, %struct.RDFTContext** %3, align 8
  br label %14

14:                                               ; preds = %9, %2, %12
  %15 = phi %struct.RDFTContext* [ %8, %9 ], [ %8, %2 ], [ %13, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret %struct.RDFTContext* %15
}

declare i32 @ff_rdft_init(%struct.RDFTContext*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @av_rdft_calc(%struct.RDFTContext*, float*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.RDFTContext, %struct.RDFTContext* %0, i64 0, i32 7
  %4 = load void (%struct.RDFTContext*, float*)*, void (%struct.RDFTContext*, float*)** %3, align 8
  tail call void %4(%struct.RDFTContext* %0, float* %1) #4
  ret void
}

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @av_rdft_end(%struct.RDFTContext*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.RDFTContext* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  tail call void @ff_rdft_end(%struct.RDFTContext* nonnull %0) #4
  %4 = bitcast %struct.RDFTContext* %0 to i8*
  tail call void @av_free(i8* nonnull %4) #4
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare void @ff_rdft_end(%struct.RDFTContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.DCTContext* @av_dct_init(i32, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.DCTContext*, align 8
  %4 = bitcast %struct.DCTContext** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  %5 = tail call noalias i8* @av_malloc(i64 192) #4
  %6 = bitcast %struct.DCTContext** %3 to i8**
  store i8* %5, i8** %6, align 8
  %7 = icmp eq i8* %5, null
  %8 = bitcast i8* %5 to %struct.DCTContext*
  br i1 %7, label %14, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @ff_dct_init(%struct.DCTContext* nonnull %8, i32 %0, i32 %1) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  call void @av_freep(i8* nonnull %4) #4
  %13 = load %struct.DCTContext*, %struct.DCTContext** %3, align 8
  br label %14

14:                                               ; preds = %9, %2, %12
  %15 = phi %struct.DCTContext* [ %8, %9 ], [ %8, %2 ], [ %13, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret %struct.DCTContext* %15
}

declare i32 @ff_dct_init(%struct.DCTContext*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @av_dct_calc(%struct.DCTContext*, float*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.DCTContext, %struct.DCTContext* %0, i64 0, i32 5
  %4 = load void (%struct.DCTContext*, float*)*, void (%struct.DCTContext*, float*)** %3, align 8
  tail call void %4(%struct.DCTContext* %0, float* %1) #4
  ret void
}

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @av_dct_end(%struct.DCTContext*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.DCTContext* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  tail call void @ff_dct_end(%struct.DCTContext* nonnull %0) #4
  %4 = bitcast %struct.DCTContext* %0 to i8*
  tail call void @av_free(i8* nonnull %4) #4
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare void @ff_dct_end(%struct.DCTContext*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
