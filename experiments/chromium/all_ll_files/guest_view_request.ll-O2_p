; ModuleID = '../../components/guest_view/renderer/guest_view_request.cc'
source_filename = "../../components/guest_view/renderer/guest_view_request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.guest_view::GuestViewRequest" = type { i32 (...)**, %"class.guest_view::GuestViewContainer"*, %"class.v8::Global", %"class.v8::Isolate"* }
%"class.guest_view::GuestViewContainer" = type { i32 (...)**, i32, %"class.content::RenderFrame"*, %"class.std::__1::unique_ptr", i8, %"class.base::circular_deque", %"class.std::__1::unique_ptr.7", %"class.v8::Global", %"class.v8::Isolate"*, %"class.v8::Global", %"class.v8::Isolate"*, %"class.base::WeakPtrFactory" }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.guest_view::GuestViewContainer::RenderFrameLifetimeObserver"* }
%"class.guest_view::GuestViewContainer::RenderFrameLifetimeObserver" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.7"*, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.guest_view::GuestViewRequest"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.22" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Context" = type { i8 }

@_ZTVN10guest_view16GuestViewRequestE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.guest_view::GuestViewRequest"*)* @_ZN10guest_view16GuestViewRequestD2Ev to i8*), i8* bitcast (void (%"class.guest_view::GuestViewRequest"*)* @_ZN10guest_view16GuestViewRequestD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN10guest_view16GuestViewRequestD1Ev = hidden unnamed_addr alias void (%"class.guest_view::GuestViewRequest"*), void (%"class.guest_view::GuestViewRequest"*)* @_ZN10guest_view16GuestViewRequestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10guest_view16GuestViewRequestC2EPNS_18GuestViewContainerEN2v85LocalINS3_8FunctionEEEPNS3_7IsolateE(%"class.guest_view::GuestViewRequest"* nocapture, %"class.guest_view::GuestViewContainer"*, %"class.v8::Function"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10guest_view16GuestViewRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 1
  store %"class.guest_view::GuestViewContainer"* %1, %"class.guest_view::GuestViewContainer"** %6, align 8
  %7 = icmp eq %"class.v8::Function"* %2, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Function"* %2 to i64*
  %10 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::Isolate"*
  %11 = tail call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %10, i64* nonnull %9) #7
  %12 = bitcast i64* %11 to %"class.v8::Function"*
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi %"class.v8::Function"* [ %12, %8 ], [ null, %4 ]
  %15 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.v8::Function"* %14, %"class.v8::Function"** %15, align 8
  %16 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 3
  store %"class.v8::Isolate"* %3, %"class.v8::Isolate"** %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10guest_view16GuestViewRequestD2Ev(%"class.guest_view::GuestViewRequest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10guest_view16GuestViewRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::Function"*, %"class.v8::Function"** %3, align 8
  %5 = icmp eq %"class.v8::Function"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::Function"* %4 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %7) #7
  store %"class.v8::Function"* null, %"class.v8::Function"** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10guest_view16GuestViewRequestD0Ev(%"class.guest_view::GuestViewRequest"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10guest_view16GuestViewRequest26ExecuteCallbackIfAvailableEiNSt3__110unique_ptrIA_N2v85LocalINS3_5ValueEEENS1_14default_deleteIS7_EEEE(%"class.guest_view::GuestViewRequest"* nocapture readonly, i32, %"class.v8::Local.22"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = alloca %"class.v8::MicrotasksScope", align 8
  %6 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.v8::Function"*, %"class.v8::Function"** %6, align 8
  %8 = icmp eq %"class.v8::Function"* %7, null
  br i1 %8, label %36, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.guest_view::GuestViewRequest", %"class.guest_view::GuestViewRequest"* %0, i64 0, i32 3
  %12 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %13) #7
  %14 = load %"class.v8::Function"*, %"class.v8::Function"** %6, align 8
  %15 = icmp eq %"class.v8::Function"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.v8::Isolate"** %11 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = bitcast %"class.v8::Function"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %18, i64 %20) #7
  %22 = bitcast i64* %21 to %"class.v8::Function"*
  br label %23

23:                                               ; preds = %9, %16
  %24 = phi %"class.v8::Function"* [ %22, %16 ], [ null, %9 ]
  %25 = bitcast %"class.v8::Function"* %24 to %"class.v8::Object"*
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %25) #7
  %27 = icmp eq %"class.v8::Context"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* nonnull %26) #7
  %29 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #7
  %30 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %5, %"class.v8::Isolate"* %31, i32 1) #7
  %32 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* nonnull %26) #7
  %33 = bitcast %"class.v8::Object"* %32 to %"class.v8::Value"*
  %34 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* %24, %"class.v8::Context"* nonnull %26, %"class.v8::Value"* %33, i32 %1, %"class.v8::Local.22"* %2) #7
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #7
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* nonnull %26) #7
  br label %35

35:                                               ; preds = %23, %28
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  br label %36

36:                                               ; preds = %3, %35
  %37 = icmp eq %"class.v8::Local.22"* %2, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.v8::Local.22"* %2 to i8*
  call void @_ZdaPv(i8* %39) #9
  br label %40

40:                                               ; preds = %36, %38
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #4

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #4

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"*, %"class.v8::Context"*, %"class.v8::Value"*, i32, %"class.v8::Local.22"*) local_unnamed_addr #4

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #4

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #4

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
