; ModuleID = '../../ui/gfx/color_analysis.cc'
source_filename = "../../ui/gfx/color_analysis.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.color_utils::HSL" = type { double, double, double }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.color_utils::KMeanImageSampler" = type { i32 (...)** }
%"class.color_utils::GridSampler" = type <{ %"class.color_utils::KMeanImageSampler", i32, [4 x i8] }>
%"class.color_utils::(anonymous namespace)::KMeanCluster" = type { [3 x i8], [3 x i32], i32, i32 }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i8*, i8*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i8* }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.16 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.10, i32, i32 }
%class.sk_sp.10 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.16 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.color_utils::Swatch"*, %"struct.color_utils::Swatch"*, %"class.std::__1::__compressed_pair.22" }
%"struct.color_utils::Swatch" = type { i32, i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.color_utils::Swatch"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.28", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.color_utils::(anonymous namespace)::ColorBox" = type <{ %"class.std::__1::vector.48"*, %"class.gfx::Range", i8, i8, i8, i8, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { i32*, i32*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%"class.gfx::Range" = type { i32, i32 }
%class.anon = type { i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.83" = type { i8 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.std::__1::priority_queue" = type { %"class.std::__1::vector.54", i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.color_utils::(anonymous namespace)::ColorBox"* }
%"struct.std::__1::pair" = type { i32, i32 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.color_utils::ColorProfile"*, %"struct.color_utils::ColorProfile"*, %"class.std::__1::__compressed_pair.63" }
%"struct.color_utils::ColorProfile" = type { i32, i32 }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.color_utils::ColorProfile"* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"class.std::__1::__compressed_pair.70" }
%"struct.color_utils::(anonymous namespace)::ColorBracket" = type { %"struct.color_utils::HSL", %"struct.color_utils::HSL", %"struct.color_utils::HSL" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.color_utils::(anonymous namespace)::ColorBracket"* }
%"class.gfx::Matrix3F" = type { [9 x float] }
%"class.gfx::Vector3dF" = type { float, float, float }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbRKjEJEEES5_E3RunEPNS0_13BindStateBaseES4_ = comdat any

$_ZN4base8internal9BindStateIPFbRKjEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN11color_utils17KMeanImageSamplerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.color_utils::KMeanImageSampler"*)* @_ZN11color_utils17KMeanImageSamplerD2Ev to i8*), i8* bitcast (void (%"class.color_utils::KMeanImageSampler"*)* @_ZN11color_utils17KMeanImageSamplerD0Ev to i8*)] }, align 8
@_ZTVN11color_utils11GridSamplerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.color_utils::GridSampler"*, i32, i32)* @_ZN11color_utils11GridSampler9GetSampleEii to i8*), i8* bitcast (void (%"class.color_utils::KMeanImageSampler"*)* @_ZN11color_utils17KMeanImageSamplerD2Ev to i8*), i8* bitcast (void (%"class.color_utils::GridSampler"*)* @_ZN11color_utils11GridSamplerD0Ev to i8*)] }, align 8
@_ZN11color_utils12_GLOBAL__N_121kDefaultLowerHSLBoundE = internal constant %"struct.color_utils::HSL" { double -1.000000e+00, double -1.000000e+00, double 1.500000e-01 }, align 8
@_ZN11color_utils12_GLOBAL__N_121kDefaultUpperHSLBoundE = internal constant %"struct.color_utils::HSL" { double -1.000000e+00, double -1.000000e+00, double 8.500000e-01 }, align 8
@_ZN11color_utils31kMaxConsideredPixelsForSwatchesE = hidden local_unnamed_addr constant i32 10007, align 4
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE = private unnamed_addr constant [4 x double] [double 0.000000e+00, double 0x3FE19999A0000000, double 0x3FD3333340000000, double 0.000000e+00], align 8
@switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.1 = private unnamed_addr constant [4 x double] [double 1.000000e+00, double 1.000000e+00, double 0x3FE6666660000000, double 0x3FDCCCCCC0000000], align 8
@switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.2 = private unnamed_addr constant [4 x double] [double 5.000000e-01, double 0x3FE7AE1480000000, double 5.000000e-01, double 0x3FD0A3D700000000], align 8
@switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.3 = private unnamed_addr constant [3 x double] [double 0.000000e+00, double 0x3FD6666660000000, double 0.000000e+00], align 8
@switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.4 = private unnamed_addr constant [3 x double] [double 1.000000e+00, double 1.000000e+00, double 0x3FD99999A0000000], align 8
@switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.5 = private unnamed_addr constant [3 x double] [double 5.000000e-01, double 1.000000e+00, double 0x3FD3333340000000], align 8

@_ZN11color_utils17KMeanImageSamplerD1Ev = hidden unnamed_addr alias void (%"class.color_utils::KMeanImageSampler"*), void (%"class.color_utils::KMeanImageSampler"*)* @_ZN11color_utils17KMeanImageSamplerD2Ev
@_ZN11color_utils11GridSamplerC1Ev = hidden unnamed_addr alias void (%"class.color_utils::GridSampler"*), void (%"class.color_utils::GridSampler"*)* @_ZN11color_utils11GridSamplerC2Ev
@_ZN11color_utils11GridSamplerD2Ev = hidden unnamed_addr alias void (%"class.color_utils::GridSampler"*), bitcast (void (%"class.color_utils::KMeanImageSampler"*)* @_ZN11color_utils17KMeanImageSamplerD2Ev to void (%"class.color_utils::GridSampler"*)*)
@_ZN11color_utils11GridSamplerD1Ev = hidden unnamed_addr alias void (%"class.color_utils::GridSampler"*), bitcast (void (%"class.color_utils::KMeanImageSampler"*)* @_ZN11color_utils17KMeanImageSamplerD2Ev to void (%"class.color_utils::GridSampler"*)*)

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11color_utils17KMeanImageSamplerC2Ev(%"class.color_utils::KMeanImageSampler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.color_utils::KMeanImageSampler", %"class.color_utils::KMeanImageSampler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11color_utils17KMeanImageSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11color_utils17KMeanImageSamplerD2Ev(%"class.color_utils::KMeanImageSampler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN11color_utils17KMeanImageSamplerD0Ev(%"class.color_utils::KMeanImageSampler"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11color_utils11GridSamplerC2Ev(%"class.color_utils::GridSampler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11color_utils11GridSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11color_utils11GridSamplerD0Ev(%"class.color_utils::GridSampler"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.color_utils::GridSampler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN11color_utils11GridSampler9GetSampleEii(%"class.color_utils::GridSampler"* nocapture, i32, i32) unnamed_addr #6 align 2 {
  %4 = icmp sgt i32 %1, 2
  %5 = zext i1 %4 to i32
  %6 = icmp sgt i32 %2, 2
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sdiv i32 %9, 4
  %11 = shl nuw nsw i32 %5, 1
  %12 = sub nsw i32 %1, %11
  %13 = sdiv i32 %12, 4
  %14 = mul nsw i32 %10, %13
  %15 = add nsw i32 %14, %5
  %16 = srem i32 %9, 4
  %17 = shl nuw nsw i32 %7, 1
  %18 = sub nsw i32 %2, %17
  %19 = sdiv i32 %18, 4
  %20 = mul nsw i32 %16, %19
  %21 = add nsw i32 %20, %7
  %22 = mul nsw i32 %21, %1
  %23 = add nsw i32 %15, %22
  %24 = add nsw i32 %9, 1
  store i32 %24, i32* %8, align 8
  %25 = mul nsw i32 %2, %1
  %26 = srem i32 %23, %25
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN11color_utils16FindClosestColorEPKhiij(i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #8 {
  %5 = mul i32 %2, %1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %4
  %8 = lshr i32 %3, 8
  %9 = lshr i32 %3, 16
  %10 = and i32 %3, 255
  %11 = and i32 %8, 255
  %12 = and i32 %9, 255
  br label %15

13:                                               ; preds = %48, %4
  %14 = phi i32 [ %3, %4 ], [ %50, %48 ]
  ret i32 %14

15:                                               ; preds = %48, %7
  %16 = phi i32 [ 0, %7 ], [ %51, %48 ]
  %17 = phi i8* [ %0, %7 ], [ %21, %48 ]
  %18 = phi i32 [ %3, %7 ], [ %50, %48 ]
  %19 = phi i32 [ 2147483647, %7 ], [ %49, %48 ]
  %20 = getelementptr inbounds i8, i8* %17, i64 3
  %21 = getelementptr inbounds i8, i8* %17, i64 4
  %22 = load i8, i8* %20, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %17, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %17, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = load i8, i8* %17, align 1
  %30 = zext i8 %29 to i32
  %31 = sub nsw i32 %10, %30
  %32 = mul nsw i32 %31, %31
  %33 = zext i8 %28 to i32
  %34 = sub nsw i32 %11, %33
  %35 = mul nsw i32 %34, %34
  %36 = zext i8 %26 to i32
  %37 = sub nsw i32 %12, %36
  %38 = mul nsw i32 %37, %37
  %39 = add nuw nsw i32 %35, %38
  %40 = add nuw nsw i32 %39, %32
  %41 = icmp slt i32 %40, %19
  br i1 %41, label %42, label %48

42:                                               ; preds = %24
  %43 = shl nuw nsw i32 %36, 16
  %44 = shl nuw nsw i32 %33, 8
  %45 = or i32 %43, %44
  %46 = or i32 %45, %30
  %47 = or i32 %46, -16777216
  br label %48

48:                                               ; preds = %24, %42, %15
  %49 = phi i32 [ %19, %15 ], [ %40, %42 ], [ %19, %24 ]
  %50 = phi i32 [ %18, %15 ], [ %47, %42 ], [ %18, %24 ]
  %51 = add nuw nsw i32 %16, 1
  %52 = icmp eq i32 %51, %5
  br i1 %52, label %13, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11color_utils27CalculateKMeanColorOfBufferEPhiiRKNS_3HSLES3_PNS_17KMeanImageSamplerEb(i8* readonly, i32, i32, %"struct.color_utils::HSL"* dereferenceable(24), %"struct.color_utils::HSL"* dereferenceable(24), %"class.color_utils::KMeanImageSampler"*, i1 zeroext) local_unnamed_addr #4 {
  %8 = alloca i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, align 8
  %9 = alloca [21 x i8], align 1
  %10 = alloca %"struct.color_utils::HSL", align 8
  %11 = icmp sgt i32 %1, 0
  %12 = icmp sgt i32 %2, 0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %263

14:                                               ; preds = %7
  %15 = getelementptr inbounds [21 x i8], [21 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %15)
  %16 = getelementptr inbounds [21 x i8], [21 x i8]* %9, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 20, i1 false)
  %17 = tail call i8* @_Znwm(i64 96) #16
  %18 = bitcast i8* %17 to %"class.color_utils::(anonymous namespace)::KMeanCluster"*
  store i8 0, i8* %17, align 4
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %17, i64 2
  store i8 0, i8* %20, align 2
  %21 = getelementptr inbounds i8, i8* %17, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* nonnull align 1 %15, i64 21, i1 false)
  %22 = getelementptr inbounds i8, i8* %17, i64 24
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds i8, i8* %17, i64 25
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds i8, i8* %17, i64 26
  store i8 0, i8* %24, align 2
  %25 = getelementptr inbounds i8, i8* %17, i64 27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* nonnull align 1 %15, i64 21, i1 false)
  %26 = getelementptr inbounds i8, i8* %17, i64 48
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds i8, i8* %17, i64 49
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds i8, i8* %17, i64 50
  store i8 0, i8* %28, align 2
  %29 = getelementptr inbounds i8, i8* %17, i64 51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* nonnull align 1 %15, i64 21, i1 false)
  %30 = getelementptr inbounds i8, i8* %17, i64 72
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds i8, i8* %17, i64 73
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %17, i64 74
  store i8 0, i8* %32, align 2
  %33 = getelementptr inbounds i8, i8* %17, i64 75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* nonnull align 1 %15, i64 21, i1 false)
  %34 = ptrtoint i8* %17 to i64
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %15)
  %35 = getelementptr inbounds i8, i8* %17, i64 96
  %36 = ptrtoint i8* %35 to i64
  %37 = bitcast %"class.color_utils::KMeanImageSampler"* %5 to i32 (%"class.color_utils::KMeanImageSampler"*, i32, i32)***
  %38 = mul nsw i32 %2, %1
  br label %39

39:                                               ; preds = %14, %105
  %40 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %18, %14 ], [ %109, %105 ]
  %41 = phi i64 [ %36, %14 ], [ %107, %105 ]
  %42 = phi i64 [ %34, %14 ], [ %106, %105 ]
  %43 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, %18
  br label %44

44:                                               ; preds = %90, %39
  %45 = phi i32 [ 0, %39 ], [ %91, %90 ]
  %46 = load i32 (%"class.color_utils::KMeanImageSampler"*, i32, i32)**, i32 (%"class.color_utils::KMeanImageSampler"*, i32, i32)*** %37, align 8
  %47 = load i32 (%"class.color_utils::KMeanImageSampler"*, i32, i32)*, i32 (%"class.color_utils::KMeanImageSampler"*, i32, i32)** %46, align 8
  %48 = tail call i32 %47(%"class.color_utils::KMeanImageSampler"* %5, i32 %1, i32 %2) #17
  %49 = srem i32 %48, %38
  %50 = shl nsw i32 %49, 2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = or i32 %50, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %0, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = or i32 %50, 2
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = or i32 %50, 3
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %90, label %67

67:                                               ; preds = %44
  br i1 %43, label %84, label %68

68:                                               ; preds = %67, %81
  %69 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %82, %81 ], [ %18, %67 ]
  %70 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 0, i32 0, i64 0
  %71 = load i8, i8* %70, align 4
  %72 = icmp eq i8 %71, %61
  br i1 %72, label %73, label %81

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 0, i32 0, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, %57
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 0, i32 0, i64 2
  %79 = load i8, i8* %78, align 2
  %80 = icmp eq i8 %79, %53
  br i1 %80, label %90, label %81

81:                                               ; preds = %68, %73, %77
  %82 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 1
  %83 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %82, %40
  br i1 %83, label %84, label %68

84:                                               ; preds = %67, %81
  %85 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, i64 0, i32 0, i64 0
  store i8 %61, i8* %85, align 4
  %86 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, i64 0, i32 0, i64 1
  store i8 %57, i8* %86, align 1
  %87 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, i64 0, i32 0, i64 2
  store i8 %53, i8* %87, align 2
  %88 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, i64 1
  %89 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %88 to i64
  br label %105

90:                                               ; preds = %77, %44
  %91 = add nuw nsw i32 %45, 1
  %92 = icmp eq i32 %91, 10
  br i1 %92, label %93, label %44

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, i64 1
  %95 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %94 to i64
  %96 = sub i64 %41, %95
  %97 = sdiv exact i64 %96, 24
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, i64 0, i32 0, i64 0
  %101 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %94, i64 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %101, i64 %96, i1 false) #17
  br label %102

102:                                              ; preds = %93, %99
  %103 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %40, i64 %97
  %104 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %103 to i64
  br label %105

105:                                              ; preds = %84, %102
  %106 = phi i64 [ %42, %102 ], [ %89, %84 ]
  %107 = phi i64 [ %104, %102 ], [ %41, %84 ]
  %108 = inttoptr i64 %107 to %"class.color_utils::(anonymous namespace)::KMeanCluster"*
  %109 = inttoptr i64 %106 to %"class.color_utils::(anonymous namespace)::KMeanCluster"*
  %110 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %109, %108
  br i1 %110, label %111, label %39

111:                                              ; preds = %105
  %112 = inttoptr i64 %107 to %"class.color_utils::(anonymous namespace)::KMeanCluster"*
  %113 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %112, %18
  br i1 %113, label %262, label %114

114:                                              ; preds = %111
  %115 = mul nsw i32 %2, %1
  %116 = shl i32 %115, 2
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %0, i64 %117
  %119 = icmp sgt i32 %116, 0
  br label %124

120:                                              ; preds = %182
  %121 = bitcast i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121)
  store i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)* @_ZN11color_utils12_GLOBAL__N_112KMeanCluster24SortKMeanClusterByWeightERKS1_S3_, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %8, align 8
  call fastcc void @_ZNSt3__16__sortIRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEvT0_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* nonnull %18, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %112, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** nonnull dereferenceable(8) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121)
  %122 = bitcast %"struct.color_utils::HSL"* %10 to i8*
  %123 = bitcast %"struct.color_utils::HSL"* %10 to i8*
  br label %236

124:                                              ; preds = %114, %182
  %125 = phi i32 [ 0, %114 ], [ %183, %182 ]
  br i1 %119, label %127, label %126

126:                                              ; preds = %180, %124
  br label %188

127:                                              ; preds = %124, %180
  %128 = phi i8* [ %130, %180 ], [ %0, %124 ]
  %129 = getelementptr inbounds i8, i8* %128, i64 3
  %130 = getelementptr inbounds i8, i8* %128, i64 4
  %131 = load i8, i8* %129, align 1
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %180, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds i8, i8* %128, i64 2
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds i8, i8* %128, i64 1
  %137 = load i8, i8* %136, align 1
  %138 = load i8, i8* %128, align 1
  %139 = zext i8 %135 to i32
  %140 = zext i8 %137 to i32
  %141 = zext i8 %138 to i32
  br label %152

142:                                              ; preds = %152
  %143 = inttoptr i64 %175 to %"class.color_utils::(anonymous namespace)::KMeanCluster"*
  %144 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %143, i64 0, i32 1, i64 0
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4
  %147 = insertelement <4 x i32> <i32 undef, i32 undef, i32 undef, i32 1>, i32 %139, i32 0
  %148 = insertelement <4 x i32> %147, i32 %140, i32 1
  %149 = insertelement <4 x i32> %148, i32 %141, i32 2
  %150 = add <4 x i32> %146, %149
  %151 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %151, align 4
  br label %180

152:                                              ; preds = %133, %152
  %153 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %18, %133 ], [ %177, %152 ]
  %154 = phi i32 [ -1, %133 ], [ %176, %152 ]
  %155 = phi i64 [ %34, %133 ], [ %175, %152 ]
  %156 = phi i64 [ %34, %133 ], [ %178, %152 ]
  %157 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %153, i64 0, i32 0, i64 0
  %158 = load i8, i8* %157, align 4
  %159 = zext i8 %158 to i32
  %160 = sub nsw i32 %139, %159
  %161 = mul nsw i32 %160, %160
  %162 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %153, i64 0, i32 0, i64 1
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = sub nsw i32 %140, %164
  %166 = mul nsw i32 %165, %165
  %167 = add nuw nsw i32 %166, %161
  %168 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %153, i64 0, i32 0, i64 2
  %169 = load i8, i8* %168, align 2
  %170 = zext i8 %169 to i32
  %171 = sub nsw i32 %141, %170
  %172 = mul nsw i32 %171, %171
  %173 = add nuw nsw i32 %167, %172
  %174 = icmp ult i32 %173, %154
  %175 = select i1 %174, i64 %156, i64 %155
  %176 = select i1 %174, i32 %173, i32 %154
  %177 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %153, i64 1
  %178 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %177 to i64
  %179 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %177, %112
  br i1 %179, label %142, label %152

180:                                              ; preds = %127, %142
  %181 = icmp ult i8* %130, %118
  br i1 %181, label %127, label %126

182:                                              ; preds = %232
  %183 = add nuw nsw i32 %125, 1
  %184 = icmp ult i32 %183, 50
  %185 = and i8 %233, 1
  %186 = icmp eq i8 %185, 0
  %187 = and i1 %184, %186
  br i1 %187, label %124, label %120

188:                                              ; preds = %126, %232
  %189 = phi i8 [ %233, %232 ], [ 1, %126 ]
  %190 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %234, %232 ], [ %18, %126 ]
  %191 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 2
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %232, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 1, i64 0
  %196 = load i32, i32* %195, align 4
  %197 = udiv i32 %196, %192
  %198 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 0, i64 0
  %199 = load i8, i8* %198, align 4
  %200 = zext i8 %199 to i32
  %201 = icmp eq i32 %197, %200
  %202 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 1, i64 1
  %203 = load i32, i32* %202, align 4
  %204 = udiv i32 %203, %192
  br i1 %201, label %205, label %218

205:                                              ; preds = %194
  %206 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 0, i64 1
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = icmp eq i32 %204, %208
  br i1 %209, label %210, label %218

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 1, i64 2
  %212 = load i32, i32* %211, align 4
  %213 = udiv i32 %212, %192
  %214 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 0, i64 2
  %215 = load i8, i8* %214, align 2
  %216 = zext i8 %215 to i32
  %217 = icmp eq i32 %213, %216
  br label %218

218:                                              ; preds = %194, %205, %210
  %219 = phi i1 [ false, %205 ], [ %217, %210 ], [ false, %194 ]
  %220 = zext i1 %219 to i8
  %221 = and i8 %189, %220
  %222 = trunc i32 %197 to i8
  store i8 %222, i8* %198, align 4
  %223 = trunc i32 %204 to i8
  %224 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 0, i64 1
  store i8 %223, i8* %224, align 1
  %225 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 1, i64 2
  %226 = load i32, i32* %225, align 4
  %227 = udiv i32 %226, %192
  %228 = trunc i32 %227 to i8
  %229 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 0, i64 2
  store i8 %228, i8* %229, align 2
  %230 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 0, i32 3
  store i32 %192, i32* %230, align 4
  %231 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %231, align 4
  br label %232

232:                                              ; preds = %188, %218
  %233 = phi i8 [ %221, %218 ], [ 0, %188 ]
  %234 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %190, i64 1
  %235 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %234, %112
  br i1 %235, label %182, label %188

236:                                              ; preds = %120, %255
  %237 = phi i32 [ -1, %120 ], [ %257, %255 ]
  %238 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %18, %120 ], [ %258, %255 ]
  %239 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %238, i64 0, i32 0, i64 0
  %240 = load i8, i8* %239, align 4
  %241 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %238, i64 0, i32 0, i64 1
  %242 = load i8, i8* %241, align 1
  %243 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %238, i64 0, i32 0, i64 2
  %244 = load i8, i8* %243, align 2
  %245 = zext i8 %240 to i32
  %246 = zext i8 %242 to i32
  %247 = zext i8 %244 to i32
  %248 = shl nuw nsw i32 %245, 16
  %249 = shl nuw nsw i32 %246, 8
  %250 = or i32 %248, %249
  %251 = or i32 %250, %247
  %252 = or i32 %251, -16777216
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -1, i64 24, i1 false)
  call void @_ZN11color_utils12SkColorToHSLEjPNS_3HSLE(i32 %252, %"struct.color_utils::HSL"* nonnull %10) #17
  %253 = call zeroext i1 @_ZN11color_utils16IsWithinHSLRangeERKNS_3HSLES2_S2_(%"struct.color_utils::HSL"* nonnull dereferenceable(24) %10, %"struct.color_utils::HSL"* dereferenceable(24) %3, %"struct.color_utils::HSL"* dereferenceable(24) %4) #17
  br i1 %253, label %254, label %255

254:                                              ; preds = %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #17
  br label %260

255:                                              ; preds = %236
  %256 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %238, %18
  %257 = select i1 %256, i32 %252, i32 %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #17
  %258 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %238, i64 1
  %259 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %258, %112
  br i1 %259, label %260, label %236

260:                                              ; preds = %255, %254
  %261 = phi i32 [ %252, %254 ], [ %257, %255 ]
  call void @_ZdlPv(i8* nonnull %17) #16
  br label %263

262:                                              ; preds = %111
  tail call void @_ZdlPv(i8* nonnull %17) #16
  br label %312

263:                                              ; preds = %260, %7
  %264 = phi i32 [ -1, %7 ], [ %261, %260 ]
  br i1 %6, label %265, label %312

265:                                              ; preds = %263
  %266 = mul i32 %2, %1
  %267 = icmp sgt i32 %266, 0
  br i1 %267, label %268, label %312

268:                                              ; preds = %265
  %269 = lshr i32 %264, 8
  %270 = lshr i32 %264, 16
  %271 = and i32 %264, 255
  %272 = and i32 %269, 255
  %273 = and i32 %270, 255
  br label %274

274:                                              ; preds = %307, %268
  %275 = phi i32 [ 0, %268 ], [ %310, %307 ]
  %276 = phi i8* [ %0, %268 ], [ %280, %307 ]
  %277 = phi i32 [ %264, %268 ], [ %309, %307 ]
  %278 = phi i32 [ 2147483647, %268 ], [ %308, %307 ]
  %279 = getelementptr inbounds i8, i8* %276, i64 3
  %280 = getelementptr inbounds i8, i8* %276, i64 4
  %281 = load i8, i8* %279, align 1
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %307, label %283

283:                                              ; preds = %274
  %284 = getelementptr inbounds i8, i8* %276, i64 2
  %285 = load i8, i8* %284, align 1
  %286 = getelementptr inbounds i8, i8* %276, i64 1
  %287 = load i8, i8* %286, align 1
  %288 = load i8, i8* %276, align 1
  %289 = zext i8 %288 to i32
  %290 = sub nsw i32 %271, %289
  %291 = mul nsw i32 %290, %290
  %292 = zext i8 %287 to i32
  %293 = sub nsw i32 %272, %292
  %294 = mul nsw i32 %293, %293
  %295 = zext i8 %285 to i32
  %296 = sub nsw i32 %273, %295
  %297 = mul nsw i32 %296, %296
  %298 = add nuw nsw i32 %294, %297
  %299 = add nuw nsw i32 %298, %291
  %300 = icmp slt i32 %299, %278
  br i1 %300, label %301, label %307

301:                                              ; preds = %283
  %302 = shl nuw nsw i32 %295, 16
  %303 = shl nuw nsw i32 %292, 8
  %304 = or i32 %302, %303
  %305 = or i32 %304, %289
  %306 = or i32 %305, -16777216
  br label %307

307:                                              ; preds = %301, %283, %274
  %308 = phi i32 [ %278, %274 ], [ %299, %301 ], [ %278, %283 ]
  %309 = phi i32 [ %277, %274 ], [ %306, %301 ], [ %277, %283 ]
  %310 = add nuw nsw i32 %275, 1
  %311 = icmp eq i32 %310, %266
  br i1 %311, label %312, label %274

312:                                              ; preds = %307, %265, %262, %263
  %313 = phi i32 [ -1, %262 ], [ %264, %263 ], [ %264, %265 ], [ %309, %307 ]
  ret i32 %313
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN11color_utils12_GLOBAL__N_112KMeanCluster24SortKMeanClusterByWeightERKS1_S3_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* nocapture readonly dereferenceable(24), %"class.color_utils::(anonymous namespace)::KMeanCluster"* nocapture readonly dereferenceable(24)) #8 align 2 {
  %3 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %4, %6
  ret i1 %7
}

declare void @_ZN11color_utils12SkColorToHSLEjPNS_3HSLE(i32, %"struct.color_utils::HSL"*) local_unnamed_addr #9

declare zeroext i1 @_ZN11color_utils16IsWithinHSLRangeERKNS_3HSLES2_S2_(%"struct.color_utils::HSL"* dereferenceable(24), %"struct.color_utils::HSL"* dereferenceable(24), %"struct.color_utils::HSL"* dereferenceable(24)) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11color_utils24CalculateKMeanColorOfPNGE13scoped_refptrIN4base16RefCountedMemoryEERKNS_3HSLES6_PNS_17KMeanImageSamplerE(%"class.base::RefCountedMemory"*, %"struct.color_utils::HSL"* dereferenceable(24), %"struct.color_utils::HSL"* dereferenceable(24), %"class.color_utils::KMeanImageSampler"*) local_unnamed_addr #4 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::vector.3", align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  store i32 0, i32* %5, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17
  store i32 0, i32* %6, align 4
  %10 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #17
  %13 = icmp eq %"class.base::RefCountedMemory"* %0, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.base::RefCountedMemory"* %0 to i64 (%"class.base::RefCountedMemory"*)***
  %16 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %16, i64 1
  %18 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::RefCountedMemory"* nonnull %0) #17
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.base::RefCountedMemory"* %0 to i8* (%"class.base::RefCountedMemory"*)***
  %23 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i8* %24(%"class.base::RefCountedMemory"* nonnull %0) #17
  %26 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %15, align 8
  %27 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %26, i64 1
  %28 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i64 %28(%"class.base::RefCountedMemory"* nonnull %0) #17
  %30 = call zeroext i1 @_ZN3gfx8PNGCodec6DecodeEPKhmNS0_11ColorFormatEPNSt3__16vectorIhNS4_9allocatorIhEEEEPiSA_(i8* %25, i64 %29, i32 1, %"class.std::__1::vector.3"* nonnull %7, i32* nonnull %5, i32* nonnull %6) #17
  br i1 %30, label %31, label %36

31:                                               ; preds = %21
  %32 = load i8*, i8** %11, align 8
  %33 = load i32, i32* %5, align 4
  %34 = load i32, i32* %6, align 4
  %35 = call i32 @_ZN11color_utils27CalculateKMeanColorOfBufferEPhiiRKNS_3HSLES3_PNS_17KMeanImageSamplerEb(i8* %32, i32 %33, i32 %34, %"struct.color_utils::HSL"* dereferenceable(24) %1, %"struct.color_utils::HSL"* dereferenceable(24) %2, %"class.color_utils::KMeanImageSampler"* %3, i1 zeroext true)
  br label %36

36:                                               ; preds = %21, %4, %14, %31
  %37 = phi i32 [ %35, %31 ], [ -1, %14 ], [ -1, %4 ], [ -1, %21 ]
  %38 = load i8*, i8** %11, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = ptrtoint i8* %38 to i64
  %42 = bitcast i8** %12 to i64*
  store i64 %41, i64* %42, align 8
  call void @_ZdlPv(i8* nonnull %38) #16
  br label %43

43:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  br i1 %13, label %56, label %44

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe"* %50 to %"class.base::RefCountedMemory"*
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %50 to void (%"class.base::RefCountedMemory"*)***
  %53 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %53, i64 3
  %55 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %54, align 8
  call void %55(%"class.base::RefCountedMemory"* nonnull %51) #17
  br label %56

56:                                               ; preds = %43, %44, %49
  ret i32 %37
}

declare zeroext i1 @_ZN3gfx8PNGCodec6DecodeEPKhmNS0_11ColorFormatEPNSt3__16vectorIhNS4_9allocatorIhEEEEPiSA_(i8*, i64, i32, %"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11color_utils24CalculateKMeanColorOfPNGE13scoped_refptrIN4base16RefCountedMemoryEE(%"class.base::RefCountedMemory"*) local_unnamed_addr #4 {
  %2 = alloca %"class.color_utils::GridSampler", align 8
  %3 = bitcast %"class.color_utils::GridSampler"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #17
  %4 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %2, i64 0, i32 1
  %6 = bitcast %"class.color_utils::GridSampler"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11color_utils11GridSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 0, i32* %5, align 8
  %7 = icmp eq %"class.base::RefCountedMemory"* %0, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %2, i64 0, i32 0
  %13 = call i32 @_ZN11color_utils24CalculateKMeanColorOfPNGE13scoped_refptrIN4base16RefCountedMemoryEERKNS_3HSLES6_PNS_17KMeanImageSamplerE(%"class.base::RefCountedMemory"* %0, %"struct.color_utils::HSL"* nonnull dereferenceable(24) @_ZN11color_utils12_GLOBAL__N_121kDefaultLowerHSLBoundE, %"struct.color_utils::HSL"* nonnull dereferenceable(24) @_ZN11color_utils12_GLOBAL__N_121kDefaultUpperHSLBoundE, %"class.color_utils::KMeanImageSampler"* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #17
  br i1 %7, label %26, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %26

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe"* %20 to %"class.base::RefCountedMemory"*
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %20 to void (%"class.base::RefCountedMemory"*)***
  %23 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %23, i64 3
  %25 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %24, align 8
  call void %25(%"class.base::RefCountedMemory"* nonnull %21) #17
  br label %26

26:                                               ; preds = %11, %14, %19
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11color_utils27CalculateKMeanColorOfBitmapERK8SkBitmapiRKNS_3HSLES5_b(%class.SkBitmap* nocapture readonly dereferenceable(56), i32, %"struct.color_utils::HSL"* dereferenceable(24), %"struct.color_utils::HSL"* dereferenceable(24), i1 zeroext) local_unnamed_addr #4 {
  %6 = alloca %"class.color_utils::GridSampler", align 8
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %1, 0
  %10 = select i1 %9, i32 %1, i32 0
  %11 = icmp slt i32 %8, %10
  %12 = select i1 %11, i32 %8, i32 %10
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = mul nsw i32 %12, %14
  %16 = sext i32 %15 to i64
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 4)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #16
  %22 = icmp sgt i32 %15, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %5
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %25 = bitcast i8** %24 to i32**
  %26 = load i32*, i32** %25, align 8
  %27 = bitcast i8* %21 to i32*
  br label %38

28:                                               ; preds = %38
  %29 = load i32, i32* %13, align 4
  br label %30

30:                                               ; preds = %28, %5
  %31 = phi i32 [ %29, %28 ], [ %14, %5 ]
  %32 = bitcast %"class.color_utils::GridSampler"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #17
  %33 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %6, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %6, i64 0, i32 1
  %35 = bitcast %"class.color_utils::GridSampler"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11color_utils11GridSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i32 0, i32* %34, align 8
  %36 = getelementptr inbounds %"class.color_utils::GridSampler", %"class.color_utils::GridSampler"* %6, i64 0, i32 0
  %37 = call i32 @_ZN11color_utils27CalculateKMeanColorOfBufferEPhiiRKNS_3HSLES3_PNS_17KMeanImageSamplerEb(i8* nonnull %21, i32 %31, i32 %12, %"struct.color_utils::HSL"* dereferenceable(24) %2, %"struct.color_utils::HSL"* dereferenceable(24) %3, %"class.color_utils::KMeanImageSampler"* nonnull %36, i1 zeroext %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #17
  call void @_ZdaPv(i8* nonnull %21) #16
  ret i32 %37

38:                                               ; preds = %23, %38
  %39 = phi i32 [ %46, %38 ], [ 0, %23 ]
  %40 = phi i32* [ %45, %38 ], [ %27, %23 ]
  %41 = phi i32* [ %42, %38 ], [ %26, %23 ]
  %42 = getelementptr inbounds i32, i32* %41, i64 1
  %43 = load i32, i32* %41, align 4
  %44 = tail call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %43) #17
  %45 = getelementptr inbounds i32, i32* %40, i64 1
  store i32 %44, i32* %40, align 4
  %46 = add nuw nsw i32 %39, 1
  %47 = icmp slt i32 %46, %15
  br i1 %47, label %38, label %28
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #11

declare i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11color_utils27CalculateKMeanColorOfBitmapERK8SkBitmap(%class.SkBitmap* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @_ZN11color_utils27CalculateKMeanColorOfBitmapERK8SkBitmapiRKNS_3HSLES5_b(%class.SkBitmap* dereferenceable(56) %0, i32 %3, %"struct.color_utils::HSL"* nonnull dereferenceable(24) @_ZN11color_utils12_GLOBAL__N_121kDefaultLowerHSLBoundE, %"struct.color_utils::HSL"* nonnull dereferenceable(24) @_ZN11color_utils12_GLOBAL__N_121kDefaultUpperHSLBoundE, i1 zeroext true)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11color_utils22CalculateColorSwatchesERK8SkBitmapmRKN3gfx4RectEN4absl8optionalIN4base17RepeatingCallbackIFbRKjEEEEE(%"class.std::__1::vector.20"* noalias nocapture sret, %class.SkBitmap* dereferenceable(56), i64, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.absl::optional"* nocapture readonly) local_unnamed_addr #4 {
  %6 = alloca %"class.color_utils::(anonymous namespace)::ColorBox", align 8
  %7 = alloca %"class.color_utils::(anonymous namespace)::ColorBox", align 8
  %8 = alloca %class.anon, align 4
  %9 = alloca %"class.color_utils::(anonymous namespace)::ColorBox", align 8
  %10 = alloca %"class.color_utils::(anonymous namespace)::ColorBox", align 8
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple.83", align 1
  %13 = alloca %"class.color_utils::(anonymous namespace)::ColorBox", align 8
  %14 = alloca %"class.std::__1::unordered_map", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::__1::vector.48", align 16
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__1::priority_queue", align 8
  %19 = alloca %"class.std::__1::vector.48"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::__1::vector.20", align 8
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = mul nsw i32 %25, %23
  %27 = sdiv i32 %26, 10007
  %28 = icmp sgt i32 %27, 1
  %29 = select i1 %28, i32 %27, i32 1
  %30 = bitcast %"class.std::__1::unordered_map"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %14, i64 0, i32 0, i32 4, i64 0
  %36 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %14, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %14, i64 0, i32 0, i32 3
  %38 = bitcast %"class.std::__1::__compressed_pair.45"* %37 to i32*
  %39 = bitcast i8* %35 to i32*
  store i32 -1431655766, i32* %39, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %38, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* nonnull %36, i64 10007) #17
  %40 = icmp sgt i32 %26, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %5
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %44 = bitcast i32* %15 to i8*
  %45 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1
  %46 = bitcast %"class.std::__1::tuple"* %11 to i8*
  %47 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::tuple.83", %"class.std::__1::tuple.83"* %12, i64 0, i32 0
  br label %84

49:                                               ; preds = %103, %5
  %50 = bitcast %"class.std::__1::vector.48"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #17
  %51 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %16, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %16, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 0, i64 24, i1 false) #17
  %54 = load i64, i64* %34, align 8
  %55 = bitcast i32** %53 to i64*
  %56 = bitcast %"class.std::__1::vector.48"* %16 to i64*
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %72, label %58

58:                                               ; preds = %49
  %59 = icmp ugt i64 %54, 4611686018427387903
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  call void @abort() #15
  unreachable

61:                                               ; preds = %58
  %62 = shl i64 %54, 2
  %63 = call i8* @_Znwm(i64 %62) #16
  %64 = bitcast i8* %63 to i32*
  %65 = getelementptr inbounds i32, i32* %64, i64 %54
  %66 = ptrtoint i32* %65 to i64
  %67 = insertelement <2 x i8*> undef, i8* %63, i32 0
  %68 = shufflevector <2 x i8*> %67, <2 x i8*> undef, <2 x i32> zeroinitializer
  %69 = ptrtoint <2 x i8*> %68 to <2 x i64>
  %70 = bitcast %"class.std::__1::vector.48"* %16 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %70, align 16
  store i64 %66, i64* %55, align 16
  %71 = bitcast i8* %63 to i32*
  br label %72

72:                                               ; preds = %61, %49
  %73 = phi i8* [ null, %49 ], [ %63, %61 ]
  %74 = phi i32* [ null, %49 ], [ %71, %61 ]
  %75 = phi i32* [ null, %49 ], [ %64, %61 ]
  %76 = bitcast %"struct.std::__1::__hash_node_base"** %33 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %110, label %79

79:                                               ; preds = %72
  %80 = bitcast i32* %17 to i8*
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast i32** %52 to i64*
  br label %115

84:                                               ; preds = %41, %103
  %85 = phi i32 [ 0, %41 ], [ %104, %103 ]
  %86 = load i32, i32* %42, align 4
  %87 = load i32, i32* %22, align 4
  %88 = srem i32 %85, %87
  %89 = add nsw i32 %88, %86
  %90 = load i32, i32* %43, align 4
  %91 = sdiv i32 %85, %87
  %92 = add nsw i32 %91, %90
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #17
  store i32 -1431655766, i32* %15, align 4
  %93 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %45, i32 %89, i32 %92) #17
  store i32 %93, i32* %15, align 4
  %94 = icmp ult i32 %93, 16777216
  br i1 %94, label %103, label %95

95:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #17
  store i32* %15, i32** %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #17
  %96 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %36, i32* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.83"* nonnull dereferenceable(1) %12) #17
  %97 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %96, 0
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 2
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to %"struct.std::__1::pair"*
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #17
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %100, align 4
  br label %103

103:                                              ; preds = %84, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #17
  %104 = add nuw nsw i32 %85, %29
  %105 = icmp slt i32 %104, %26
  br i1 %105, label %84, label %49

106:                                              ; preds = %181
  %107 = load i32*, i32** %51, align 16
  %108 = bitcast i32* %107 to i8*
  %109 = load i32*, i32** %52, align 8
  br label %110

110:                                              ; preds = %106, %72
  %111 = phi i8* [ %108, %106 ], [ %73, %72 ]
  %112 = phi i32* [ %107, %106 ], [ %74, %72 ]
  %113 = phi i32* [ %109, %106 ], [ %75, %72 ]
  %114 = icmp eq i32* %112, %113
  br i1 %114, label %185, label %187

115:                                              ; preds = %79, %181
  %116 = phi i64 [ %77, %79 ], [ %183, %181 ]
  %117 = inttoptr i64 %116 to %"struct.std::__1::__hash_node"*
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %117, i64 0, i32 2, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #17
  store i32 %119, i32* %17, align 4
  %120 = load i8, i8* %81, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %115
  %123 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %82, align 8
  %124 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %123, i64 0, i32 1
  %125 = bitcast void ()** %124 to i1 (%"class.base::internal::BindStateBase"*, i32*)**
  %126 = load i1 (%"class.base::internal::BindStateBase"*, i32*)*, i1 (%"class.base::internal::BindStateBase"*, i32*)** %125, align 8
  %127 = call zeroext i1 %126(%"class.base::internal::BindStateBase"* %123, i32* nonnull dereferenceable(4) %17) #17
  br i1 %127, label %128, label %181

128:                                              ; preds = %115, %122
  %129 = load i32*, i32** %52, align 8
  %130 = load i32*, i32** %53, align 16
  %131 = icmp eq i32* %129, %130
  %132 = ptrtoint i32* %130 to i64
  br i1 %131, label %137, label %133

133:                                              ; preds = %128
  %134 = load i32, i32* %17, align 4
  store i32 %134, i32* %129, align 4
  %135 = getelementptr inbounds i32, i32* %129, i64 1
  %136 = ptrtoint i32* %135 to i64
  store i64 %136, i64* %83, align 8
  br label %181

137:                                              ; preds = %128
  %138 = ptrtoint i32* %129 to i64
  %139 = load i64, i64* %56, align 16
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 2
  %142 = add nsw i64 %141, 1
  %143 = icmp ugt i64 %142, 4611686018427387903
  br i1 %143, label %144, label %146

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::vector.48"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %145) #15
  unreachable

146:                                              ; preds = %137
  %147 = sub i64 %132, %139
  %148 = ashr exact i64 %147, 2
  %149 = icmp ult i64 %148, 2305843009213693951
  br i1 %149, label %150, label %158

150:                                              ; preds = %146
  %151 = ashr exact i64 %147, 1
  %152 = icmp ult i64 %151, %142
  %153 = select i1 %152, i64 %142, i64 %151
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %150
  %156 = icmp ugt i64 %153, 4611686018427387903
  br i1 %156, label %157, label %158

157:                                              ; preds = %155
  call void @abort() #15
  unreachable

158:                                              ; preds = %155, %146
  %159 = phi i64 [ %153, %155 ], [ 4611686018427387903, %146 ]
  %160 = shl i64 %159, 2
  %161 = call i8* @_Znwm(i64 %160) #16
  %162 = bitcast i8* %161 to i32*
  br label %163

163:                                              ; preds = %158, %150
  %164 = phi i64 [ %159, %158 ], [ 0, %150 ]
  %165 = phi i8* [ %161, %158 ], [ null, %150 ]
  %166 = phi i32* [ %162, %158 ], [ null, %150 ]
  %167 = getelementptr inbounds i32, i32* %166, i64 %141
  %168 = getelementptr inbounds i32, i32* %166, i64 %164
  %169 = ptrtoint i32* %168 to i64
  %170 = load i32, i32* %17, align 4
  store i32 %170, i32* %167, align 4
  %171 = getelementptr inbounds i32, i32* %167, i64 1
  %172 = ptrtoint i32* %171 to i64
  %173 = ptrtoint i32* %166 to i64
  %174 = icmp sgt i64 %140, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %163
  %176 = inttoptr i64 %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %176, i64 %140, i1 false) #17
  br label %177

177:                                              ; preds = %175, %163
  store i64 %173, i64* %56, align 16
  store i64 %172, i64* %83, align 8
  store i64 %169, i64* %55, align 16
  %178 = icmp eq i64 %139, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = inttoptr i64 %139 to i8*
  call void @_ZdlPv(i8* %180) #16
  br label %181

181:                                              ; preds = %179, %177, %133, %122
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #17
  %182 = inttoptr i64 %116 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %106, label %115

185:                                              ; preds = %110
  %186 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 24, i1 false) #17
  br label %1486

187:                                              ; preds = %110
  %188 = bitcast %"class.std::__1::priority_queue"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %188) #17
  %189 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %18, i64 0, i32 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %18, i64 0, i32 0, i32 0, i32 1
  %191 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %18, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %192 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %18, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 24, i1 false) #17
  %193 = bitcast i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)** %192 to i64*
  store i64 ptrtoint (i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)* @_ZN11color_utils12_GLOBAL__N_18ColorBox15CompareByVolumeERKS1_S3_ to i64), i64* %193, align 8
  %194 = bitcast %"class.std::__1::vector.48"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #17
  store %"class.std::__1::vector.48"* %16, %"class.std::__1::vector.48"** %19, align 8
  %195 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"** %190 to i64*
  %196 = bitcast %"class.std::__1::priority_queue"* %18 to i64*
  %197 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"** %191 to i64*
  %198 = call i8* @_Znwm(i64 32) #16
  %199 = bitcast i8* %198 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %200 = getelementptr inbounds i8, i8* %198, i64 32
  %201 = bitcast i8* %200 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %202 = ptrtoint i8* %200 to i64
  call fastcc void @_ZNSt3__116allocator_traitsINS_9allocatorIN11color_utils12_GLOBAL__N_18ColorBoxEEEE9constructIS4_JPNS_6vectorIjNS1_IjEEEEEvEEvRS5_PT_DpOT0_(%"class.color_utils::(anonymous namespace)::ColorBox"* nonnull %199, %"class.std::__1::vector.48"** nonnull dereferenceable(8) %19) #17
  %203 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %189, align 8
  %204 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %203 to i64
  %205 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %206 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %205, %203
  br i1 %206, label %253, label %207

207:                                              ; preds = %187
  %208 = getelementptr %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %205, i64 -1, i32 0
  %209 = ptrtoint %"class.std::__1::vector.48"** %208 to i64
  %210 = sub i64 %209, %204
  %211 = lshr i64 %210, 5
  %212 = add nuw nsw i64 %211, 1
  %213 = and i64 %212, 3
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %225, label %215

215:                                              ; preds = %207, %215
  %216 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %219, %215 ], [ %199, %207 ]
  %217 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %220, %215 ], [ %205, %207 ]
  %218 = phi i64 [ %223, %215 ], [ %213, %207 ]
  %219 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %216, i64 -1
  %220 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %217, i64 -1
  %221 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %219 to i8*
  %222 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 32, i1 false) #17
  %223 = add i64 %218, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %215, !llvm.loop !3

225:                                              ; preds = %215, %207
  %226 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ undef, %207 ], [ %219, %215 ]
  %227 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %199, %207 ], [ %219, %215 ]
  %228 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %205, %207 ], [ %220, %215 ]
  %229 = icmp ult i64 %210, 96
  br i1 %229, label %250, label %230

230:                                              ; preds = %225, %230
  %231 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %245, %230 ], [ %227, %225 ]
  %232 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %246, %230 ], [ %228, %225 ]
  %233 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %231, i64 -1
  %234 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %232, i64 -1
  %235 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %233 to i8*
  %236 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 8 %236, i64 32, i1 false) #17
  %237 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %231, i64 -2
  %238 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %232, i64 -2
  %239 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %237 to i8*
  %240 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 8 %240, i64 32, i1 false) #17
  %241 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %231, i64 -3
  %242 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %232, i64 -3
  %243 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %241 to i8*
  %244 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %244, i64 32, i1 false) #17
  %245 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %231, i64 -4
  %246 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %232, i64 -4
  %247 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %245 to i8*
  %248 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 32, i1 false) #17
  %249 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %246, %203
  br i1 %249, label %250, label %230

250:                                              ; preds = %230, %225
  %251 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %226, %225 ], [ %245, %230 ]
  %252 = load i64, i64* %196, align 8
  br label %253

253:                                              ; preds = %187, %250
  %254 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %251, %250 ], [ %199, %187 ]
  %255 = phi i64 [ %252, %250 ], [ %204, %187 ]
  %256 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %254 to i64
  store i64 %256, i64* %196, align 8
  store i64 %202, i64* %195, align 8
  store i64 %202, i64* %197, align 8
  %257 = icmp eq i64 %255, 0
  br i1 %257, label %263, label %258

258:                                              ; preds = %253
  %259 = inttoptr i64 %255 to i8*
  call void @_ZdlPv(i8* %259) #16
  %260 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %261 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %260 to i64
  %262 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %189, align 8
  br label %263

263:                                              ; preds = %258, %253
  %264 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %254, %253 ], [ %262, %258 ]
  %265 = phi i64 [ %202, %253 ], [ %261, %258 ]
  %266 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %201, %253 ], [ %260, %258 ]
  %267 = load i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)*, i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)** %192, align 8
  %268 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %264 to i64
  %269 = sub i64 %265, %268
  %270 = icmp sgt i64 %269, 32
  br i1 %270, label %271, label %295

271:                                              ; preds = %263
  %272 = lshr exact i64 %269, 5
  %273 = add nsw i64 %272, -2
  %274 = sdiv i64 %273, 2
  %275 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %264, i64 %274
  %276 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %266, i64 -1
  %277 = call zeroext i1 %267(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %275, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %276) #17
  br i1 %277, label %278, label %295

278:                                              ; preds = %271
  %279 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %279) #17
  %280 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %276 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %279, i8* align 8 %280, i64 32, i1 false) #17
  br label %281

281:                                              ; preds = %288, %278
  %282 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %276, %278 ], [ %283, %288 ]
  %283 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %275, %278 ], [ %291, %288 ]
  %284 = phi i64 [ %274, %278 ], [ %290, %288 ]
  %285 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %282 to i8*
  %286 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %285, i8* align 8 %286, i64 28, i1 false) #17
  %287 = icmp eq i64 %284, 0
  br i1 %287, label %293, label %288

288:                                              ; preds = %281
  %289 = add nsw i64 %284, -1
  %290 = sdiv i64 %289, 2
  %291 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %264, i64 %290
  %292 = call zeroext i1 %267(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %291, %"class.color_utils::(anonymous namespace)::ColorBox"* nonnull dereferenceable(32) %10) #17
  br i1 %292, label %281, label %293

293:                                              ; preds = %288, %281
  %294 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* nonnull align 8 %279, i64 28, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %279) #17
  br label %295

295:                                              ; preds = %263, %271, %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #17
  %296 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"** %190 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"class.std::__1::priority_queue"* %18 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = sub i64 %297, %299
  %301 = ashr exact i64 %300, 5
  %302 = icmp ult i64 %301, %2
  %303 = inttoptr i64 %299 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %304 = inttoptr i64 %297 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  br i1 %302, label %305, label %1147

305:                                              ; preds = %295
  %306 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %9 to i8*
  %307 = bitcast %class.anon* %8 to i8*
  %308 = getelementptr inbounds %class.anon, %class.anon* %8, i64 0, i32 0
  %309 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"** %191 to i64*
  %310 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %7 to i8*
  %311 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %6 to i8*
  br label %312

312:                                              ; preds = %305, %1136
  %313 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %303, %305 ], [ %1142, %1136 ]
  %314 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %304, %305 ], [ %1143, %1136 ]
  %315 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 0
  %316 = load %"class.std::__1::vector.48"*, %"class.std::__1::vector.48"** %315, align 8
  %317 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 1
  %318 = bitcast %"class.gfx::Range"* %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = trunc i64 %319 to i32
  %321 = lshr i64 %319, 32
  %322 = trunc i64 %321 to i32
  %323 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 2
  %324 = load i8, i8* %323, align 8
  %325 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 3
  %326 = load i8, i8* %325, align 1
  %327 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 4
  %328 = load i8, i8* %327, align 2
  %329 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 5
  %330 = load i8, i8* %329, align 1
  %331 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 6
  %332 = load i8, i8* %331, align 4
  %333 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 7
  %334 = load i8, i8* %333, align 1
  %335 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 8, i64 0
  %336 = load i8, i8* %335, align 2
  %337 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 8, i64 1
  %338 = load i8, i8* %337, align 1
  %339 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 9
  %340 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 10, i64 0
  %341 = load i8, i8* %340, align 4
  %342 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 10, i64 1
  %343 = load i8, i8* %342, align 1
  %344 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 10, i64 2
  %345 = load i8, i8* %344, align 2
  %346 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 10, i64 3
  %347 = load i8, i8* %346, align 1
  %348 = icmp ugt i32 %320, %322
  %349 = select i1 %348, i32 %320, i32 %322
  %350 = icmp ult i32 %320, %322
  %351 = select i1 %350, i32 %320, i32 %322
  %352 = sub i32 %349, %351
  %353 = icmp ugt i32 %352, 1
  %354 = ptrtoint %"class.std::__1::vector.48"* %316 to i64
  br i1 %353, label %355, label %1147

355:                                              ; preds = %312
  %356 = load i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)*, i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)** %192, align 8
  %357 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %313 to i64
  %358 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %314 to i64
  %359 = sub i64 %358, %357
  %360 = ashr exact i64 %359, 5
  %361 = icmp sgt i64 %359, 32
  br i1 %361, label %362, label %428

362:                                              ; preds = %355
  %363 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1
  %364 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 0, i32 1, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = load i32, i32* %339, align 8
  %367 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %313 to i8*
  %368 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %367, i8* align 8 %368, i64 28, i1 false) #17
  %369 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %363 to i64*
  store i64 %354, i64* %369, align 8
  %370 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 1, i32 0
  store i32 %320, i32* %370, align 8
  %371 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 1, i32 1
  store i32 %365, i32* %371, align 4
  %372 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 2
  store i8 %324, i8* %372, align 8
  %373 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 3
  store i8 %326, i8* %373, align 1
  %374 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 4
  store i8 %328, i8* %374, align 2
  %375 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 5
  store i8 %330, i8* %375, align 1
  %376 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 6
  store i8 %332, i8* %376, align 4
  %377 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 7
  store i8 %334, i8* %377, align 1
  %378 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 8, i64 0
  store i8 %336, i8* %378, align 2
  %379 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 8, i64 1
  store i8 %338, i8* %379, align 1
  %380 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %314, i64 -1, i32 9
  store i32 %366, i32* %380, align 8
  %381 = add nsw i64 %360, -1
  %382 = icmp eq i64 %359, 64
  br i1 %382, label %428, label %383

383:                                              ; preds = %362
  %384 = add nsw i64 %360, -3
  %385 = sdiv i64 %384, 2
  %386 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 1
  %387 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %386 to i64
  %388 = icmp sgt i64 %381, 2
  br i1 %388, label %389, label %395

389:                                              ; preds = %383
  %390 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 2
  %391 = call zeroext i1 %356(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %386, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %390) #17
  %392 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %390 to i64
  %393 = select i1 %391, i64 %392, i64 %387
  %394 = select i1 %391, i64 2, i64 1
  br label %395

395:                                              ; preds = %389, %383
  %396 = phi i64 [ %387, %383 ], [ %393, %389 ]
  %397 = phi i64 [ 1, %383 ], [ %394, %389 ]
  %398 = inttoptr i64 %396 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %399 = call zeroext i1 %356(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %398, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %313) #17
  br i1 %399, label %428, label %400

400:                                              ; preds = %395
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %306) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %306, i8* align 8 %367, i64 32, i1 false) #17
  br label %401

401:                                              ; preds = %421, %400
  %402 = phi i64 [ %396, %400 ], [ %422, %421 ]
  %403 = phi i64 [ %357, %400 ], [ %402, %421 ]
  %404 = phi i64 [ %397, %400 ], [ %423, %421 ]
  %405 = inttoptr i64 %403 to i8*
  %406 = inttoptr i64 %402 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %405, i8* align 8 %406, i64 28, i1 false) #17
  %407 = icmp slt i64 %385, %404
  br i1 %407, label %426, label %408

408:                                              ; preds = %401
  %409 = shl nsw i64 %404, 1
  %410 = or i64 %409, 1
  %411 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %313, i64 %410
  %412 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %411 to i64
  %413 = add nsw i64 %410, 1
  %414 = icmp slt i64 %413, %381
  br i1 %414, label %415, label %421

415:                                              ; preds = %408
  %416 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %411, i64 1
  %417 = call zeroext i1 %356(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %411, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %416) #17
  %418 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %416 to i64
  %419 = select i1 %417, i64 %418, i64 %412
  %420 = select i1 %417, i64 %413, i64 %410
  br label %421

421:                                              ; preds = %415, %408
  %422 = phi i64 [ %412, %408 ], [ %419, %415 ]
  %423 = phi i64 [ %410, %408 ], [ %420, %415 ]
  %424 = inttoptr i64 %422 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %425 = call zeroext i1 %356(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %424, %"class.color_utils::(anonymous namespace)::ColorBox"* nonnull dereferenceable(32) %9) #17
  br i1 %425, label %426, label %401

426:                                              ; preds = %421, %401
  %427 = inttoptr i64 %402 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %427, i8* nonnull align 8 %306, i64 28, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %306) #17
  br label %428

428:                                              ; preds = %355, %362, %395, %426
  %429 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %430 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %429, i64 -1
  store %"class.color_utils::(anonymous namespace)::ColorBox"* %430, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %431 = sub i8 %330, %324
  %432 = sub i8 %332, %326
  %433 = sub i8 %334, %328
  %434 = icmp ult i8 %431, %432
  %435 = select i1 %434, i8 %432, i8 %431
  %436 = icmp ult i8 %435, %433
  %437 = select i1 %436, i8 %433, i8 %435
  %438 = icmp eq i8 %437, %431
  %439 = icmp eq i8 %437, %432
  %440 = select i1 %439, i32 1, i32 2
  %441 = select i1 %438, i32 0, i32 %440
  %442 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %316, i64 0, i32 0, i32 0
  %443 = load i32*, i32** %442, align 8, !noalias !5
  %444 = and i64 %319, 4294967295
  %445 = getelementptr inbounds i32, i32* %443, i64 %444
  %446 = getelementptr inbounds i32, i32* %443, i64 %321
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %307) #17, !noalias !5
  store i32 %441, i32* %308, align 4, !noalias !5
  call fastcc void @_ZNSt3__16__sortIRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEvT0_S7_T_(i32* %445, i32* %446, %class.anon* nonnull dereferenceable(4) %8) #17, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %307) #17, !noalias !5
  %447 = add i32 %322, -1
  %448 = add i32 %320, 1
  %449 = icmp ult i32 %448, %447
  br i1 %449, label %450, label %497

450:                                              ; preds = %428
  %451 = zext i32 %448 to i64
  %452 = zext i8 %328 to i32
  %453 = zext i8 %334 to i32
  %454 = add nuw nsw i32 %453, %452
  %455 = lshr i32 %454, 1
  %456 = zext i8 %326 to i32
  %457 = zext i8 %332 to i32
  %458 = add nuw nsw i32 %457, %456
  %459 = lshr i32 %458, 1
  %460 = zext i8 %324 to i32
  %461 = zext i8 %330 to i32
  %462 = add nuw nsw i32 %461, %460
  %463 = lshr i32 %462, 1
  br label %464

464:                                              ; preds = %487, %450
  %465 = phi i64 [ %451, %450 ], [ %489, %487 ]
  %466 = phi i32 [ %448, %450 ], [ %488, %487 ]
  switch i32 %441, label %487 [
    i32 0, label %480
    i32 1, label %467
    i32 2, label %474
  ]

467:                                              ; preds = %464
  %468 = load i32*, i32** %442, align 8, !noalias !5
  %469 = getelementptr inbounds i32, i32* %468, i64 %465
  %470 = load i32, i32* %469, align 4, !noalias !5
  %471 = lshr i32 %470, 8
  %472 = and i32 %471, 255
  %473 = icmp ugt i32 %472, %459
  br i1 %473, label %495, label %487

474:                                              ; preds = %464
  %475 = load i32*, i32** %442, align 8, !noalias !5
  %476 = getelementptr inbounds i32, i32* %475, i64 %465
  %477 = load i32, i32* %476, align 4, !noalias !5
  %478 = and i32 %477, 255
  %479 = icmp ugt i32 %478, %455
  br i1 %479, label %493, label %487

480:                                              ; preds = %464
  %481 = load i32*, i32** %442, align 8, !noalias !5
  %482 = getelementptr inbounds i32, i32* %481, i64 %465
  %483 = load i32, i32* %482, align 4, !noalias !5
  %484 = lshr i32 %483, 16
  %485 = and i32 %484, 255
  %486 = icmp ugt i32 %485, %463
  br i1 %486, label %491, label %487

487:                                              ; preds = %480, %474, %467, %464
  %488 = add i32 %466, 1
  %489 = add nuw nsw i64 %465, 1
  %490 = icmp eq i32 %488, %447
  br i1 %490, label %497, label %464

491:                                              ; preds = %480
  %492 = trunc i64 %465 to i32
  br label %497

493:                                              ; preds = %474
  %494 = trunc i64 %465 to i32
  br label %497

495:                                              ; preds = %467
  %496 = trunc i64 %465 to i32
  br label %497

497:                                              ; preds = %487, %495, %493, %491, %428
  %498 = phi i32 [ %447, %428 ], [ %492, %491 ], [ %494, %493 ], [ %496, %495 ], [ %447, %487 ]
  %499 = and i64 %319, -4294967296
  %500 = zext i32 %498 to i64
  %501 = shl nuw i64 %500, 32
  %502 = or i64 %501, %444
  %503 = icmp ugt i32 %498, %320
  br i1 %503, label %504, label %639

504:                                              ; preds = %497
  %505 = load i32*, i32** %442, align 8, !noalias !5
  %506 = sub nsw i64 %500, %444
  %507 = icmp ult i64 %506, 4
  br i1 %507, label %508, label %516

508:                                              ; preds = %550, %504
  %509 = phi i8 [ 0, %504 ], [ %592, %550 ]
  %510 = phi i8 [ 0, %504 ], [ %585, %550 ]
  %511 = phi i8 [ 0, %504 ], [ %578, %550 ]
  %512 = phi i8 [ -1, %504 ], [ %571, %550 ]
  %513 = phi i8 [ -1, %504 ], [ %564, %550 ]
  %514 = phi i8 [ -1, %504 ], [ %557, %550 ]
  %515 = phi i64 [ %444, %504 ], [ %518, %550 ]
  br label %610

516:                                              ; preds = %504
  %517 = and i64 %506, -4
  %518 = add nsw i64 %444, %517
  br label %519

519:                                              ; preds = %519, %516
  %520 = phi i64 [ 0, %516 ], [ %548, %519 ]
  %521 = phi <4 x i8> [ zeroinitializer, %516 ], [ %547, %519 ]
  %522 = phi <4 x i8> [ zeroinitializer, %516 ], [ %545, %519 ]
  %523 = phi <4 x i8> [ zeroinitializer, %516 ], [ %543, %519 ]
  %524 = phi <4 x i8> [ <i8 -1, i8 -1, i8 -1, i8 -1>, %516 ], [ %541, %519 ]
  %525 = phi <4 x i8> [ <i8 -1, i8 -1, i8 -1, i8 -1>, %516 ], [ %538, %519 ]
  %526 = phi <4 x i8> [ <i8 -1, i8 -1, i8 -1, i8 -1>, %516 ], [ %534, %519 ]
  %527 = add i64 %444, %520
  %528 = getelementptr inbounds i32, i32* %505, i64 %527
  %529 = bitcast i32* %528 to <4 x i32>*
  %530 = load <4 x i32>, <4 x i32>* %529, align 4, !noalias !5
  %531 = lshr <4 x i32> %530, <i32 16, i32 16, i32 16, i32 16>
  %532 = trunc <4 x i32> %531 to <4 x i8>
  %533 = icmp ult <4 x i8> %526, %532
  %534 = select <4 x i1> %533, <4 x i8> %526, <4 x i8> %532
  %535 = lshr <4 x i32> %530, <i32 8, i32 8, i32 8, i32 8>
  %536 = trunc <4 x i32> %535 to <4 x i8>
  %537 = icmp ult <4 x i8> %525, %536
  %538 = select <4 x i1> %537, <4 x i8> %525, <4 x i8> %536
  %539 = trunc <4 x i32> %530 to <4 x i8>
  %540 = icmp ult <4 x i8> %524, %539
  %541 = select <4 x i1> %540, <4 x i8> %524, <4 x i8> %539
  %542 = icmp ugt <4 x i8> %523, %532
  %543 = select <4 x i1> %542, <4 x i8> %523, <4 x i8> %532
  %544 = icmp ugt <4 x i8> %522, %536
  %545 = select <4 x i1> %544, <4 x i8> %522, <4 x i8> %536
  %546 = icmp ugt <4 x i8> %521, %539
  %547 = select <4 x i1> %546, <4 x i8> %521, <4 x i8> %539
  %548 = add i64 %520, 4
  %549 = icmp eq i64 %548, %517
  br i1 %549, label %550, label %519, !llvm.loop !8

550:                                              ; preds = %519
  %551 = shufflevector <4 x i8> %534, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %552 = icmp ult <4 x i8> %534, %551
  %553 = select <4 x i1> %552, <4 x i8> %534, <4 x i8> %551
  %554 = shufflevector <4 x i8> %553, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %555 = icmp ult <4 x i8> %553, %554
  %556 = select <4 x i1> %555, <4 x i8> %553, <4 x i8> %554
  %557 = extractelement <4 x i8> %556, i32 0
  %558 = shufflevector <4 x i8> %538, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %559 = icmp ult <4 x i8> %538, %558
  %560 = select <4 x i1> %559, <4 x i8> %538, <4 x i8> %558
  %561 = shufflevector <4 x i8> %560, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %562 = icmp ult <4 x i8> %560, %561
  %563 = select <4 x i1> %562, <4 x i8> %560, <4 x i8> %561
  %564 = extractelement <4 x i8> %563, i32 0
  %565 = shufflevector <4 x i8> %541, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %566 = icmp ult <4 x i8> %541, %565
  %567 = select <4 x i1> %566, <4 x i8> %541, <4 x i8> %565
  %568 = shufflevector <4 x i8> %567, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %569 = icmp ult <4 x i8> %567, %568
  %570 = select <4 x i1> %569, <4 x i8> %567, <4 x i8> %568
  %571 = extractelement <4 x i8> %570, i32 0
  %572 = shufflevector <4 x i8> %543, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %573 = icmp ugt <4 x i8> %543, %572
  %574 = select <4 x i1> %573, <4 x i8> %543, <4 x i8> %572
  %575 = shufflevector <4 x i8> %574, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %576 = icmp ugt <4 x i8> %574, %575
  %577 = select <4 x i1> %576, <4 x i8> %574, <4 x i8> %575
  %578 = extractelement <4 x i8> %577, i32 0
  %579 = shufflevector <4 x i8> %545, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %580 = icmp ugt <4 x i8> %545, %579
  %581 = select <4 x i1> %580, <4 x i8> %545, <4 x i8> %579
  %582 = shufflevector <4 x i8> %581, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %583 = icmp ugt <4 x i8> %581, %582
  %584 = select <4 x i1> %583, <4 x i8> %581, <4 x i8> %582
  %585 = extractelement <4 x i8> %584, i32 0
  %586 = shufflevector <4 x i8> %547, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %587 = icmp ugt <4 x i8> %547, %586
  %588 = select <4 x i1> %587, <4 x i8> %547, <4 x i8> %586
  %589 = shufflevector <4 x i8> %588, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %590 = icmp ugt <4 x i8> %588, %589
  %591 = select <4 x i1> %590, <4 x i8> %588, <4 x i8> %589
  %592 = extractelement <4 x i8> %591, i32 0
  %593 = icmp eq i64 %506, %517
  br i1 %593, label %594, label %508

594:                                              ; preds = %610, %550
  %595 = phi i8 [ %557, %550 ], [ %623, %610 ]
  %596 = phi i8 [ %564, %550 ], [ %627, %610 ]
  %597 = phi i8 [ %571, %550 ], [ %630, %610 ]
  %598 = phi i8 [ %578, %550 ], [ %632, %610 ]
  %599 = phi i8 [ %585, %550 ], [ %634, %610 ]
  %600 = phi i8 [ %592, %550 ], [ %636, %610 ]
  %601 = zext i8 %598 to i32
  %602 = zext i8 %595 to i32
  %603 = add nuw nsw i32 %601, 1
  %604 = zext i8 %599 to i32
  %605 = zext i8 %596 to i32
  %606 = add nuw nsw i32 %604, 1
  %607 = zext i8 %600 to i32
  %608 = zext i8 %597 to i32
  %609 = add nuw nsw i32 %607, 1
  br label %639

610:                                              ; preds = %508, %610
  %611 = phi i8 [ %636, %610 ], [ %509, %508 ]
  %612 = phi i8 [ %634, %610 ], [ %510, %508 ]
  %613 = phi i8 [ %632, %610 ], [ %511, %508 ]
  %614 = phi i8 [ %630, %610 ], [ %512, %508 ]
  %615 = phi i8 [ %627, %610 ], [ %513, %508 ]
  %616 = phi i8 [ %623, %610 ], [ %514, %508 ]
  %617 = phi i64 [ %637, %610 ], [ %515, %508 ]
  %618 = getelementptr inbounds i32, i32* %505, i64 %617
  %619 = load i32, i32* %618, align 4, !noalias !5
  %620 = lshr i32 %619, 16
  %621 = trunc i32 %620 to i8
  %622 = icmp ult i8 %616, %621
  %623 = select i1 %622, i8 %616, i8 %621
  %624 = lshr i32 %619, 8
  %625 = trunc i32 %624 to i8
  %626 = icmp ult i8 %615, %625
  %627 = select i1 %626, i8 %615, i8 %625
  %628 = trunc i32 %619 to i8
  %629 = icmp ult i8 %614, %628
  %630 = select i1 %629, i8 %614, i8 %628
  %631 = icmp ugt i8 %613, %621
  %632 = select i1 %631, i8 %613, i8 %621
  %633 = icmp ugt i8 %612, %625
  %634 = select i1 %633, i8 %612, i8 %625
  %635 = icmp ugt i8 %611, %628
  %636 = select i1 %635, i8 %611, i8 %628
  %637 = add nuw nsw i64 %617, 1
  %638 = icmp eq i64 %637, %500
  br i1 %638, label %594, label %610, !llvm.loop !10

639:                                              ; preds = %594, %497
  %640 = phi i8 [ %595, %594 ], [ -1, %497 ]
  %641 = phi i8 [ %596, %594 ], [ -1, %497 ]
  %642 = phi i8 [ %597, %594 ], [ -1, %497 ]
  %643 = phi i8 [ %598, %594 ], [ 0, %497 ]
  %644 = phi i8 [ %599, %594 ], [ 0, %497 ]
  %645 = phi i8 [ %600, %594 ], [ 0, %497 ]
  %646 = phi i32 [ %608, %594 ], [ 255, %497 ]
  %647 = phi i32 [ %609, %594 ], [ 1, %497 ]
  %648 = phi i32 [ %605, %594 ], [ 255, %497 ]
  %649 = phi i32 [ %606, %594 ], [ 1, %497 ]
  %650 = phi i32 [ %602, %594 ], [ 255, %497 ]
  %651 = phi i32 [ %603, %594 ], [ 1, %497 ]
  %652 = sub nsw i32 %651, %650
  %653 = sub nsw i32 %649, %648
  %654 = sub nsw i32 %647, %646
  %655 = mul nsw i32 %653, %654
  %656 = mul i32 %655, %652
  %657 = icmp ult i32 %498, %322
  br i1 %657, label %658, label %793

658:                                              ; preds = %639
  %659 = load i32*, i32** %442, align 8, !noalias !5
  %660 = sub nsw i64 %321, %500
  %661 = icmp ult i64 %660, 4
  br i1 %661, label %662, label %670

662:                                              ; preds = %704, %658
  %663 = phi i8 [ 0, %658 ], [ %746, %704 ]
  %664 = phi i8 [ 0, %658 ], [ %739, %704 ]
  %665 = phi i8 [ 0, %658 ], [ %732, %704 ]
  %666 = phi i8 [ -1, %658 ], [ %725, %704 ]
  %667 = phi i8 [ -1, %658 ], [ %718, %704 ]
  %668 = phi i8 [ -1, %658 ], [ %711, %704 ]
  %669 = phi i64 [ %500, %658 ], [ %672, %704 ]
  br label %764

670:                                              ; preds = %658
  %671 = and i64 %660, -4
  %672 = add nsw i64 %671, %500
  br label %673

673:                                              ; preds = %673, %670
  %674 = phi i64 [ 0, %670 ], [ %702, %673 ]
  %675 = phi <4 x i8> [ zeroinitializer, %670 ], [ %701, %673 ]
  %676 = phi <4 x i8> [ zeroinitializer, %670 ], [ %699, %673 ]
  %677 = phi <4 x i8> [ zeroinitializer, %670 ], [ %697, %673 ]
  %678 = phi <4 x i8> [ <i8 -1, i8 -1, i8 -1, i8 -1>, %670 ], [ %695, %673 ]
  %679 = phi <4 x i8> [ <i8 -1, i8 -1, i8 -1, i8 -1>, %670 ], [ %692, %673 ]
  %680 = phi <4 x i8> [ <i8 -1, i8 -1, i8 -1, i8 -1>, %670 ], [ %688, %673 ]
  %681 = add i64 %674, %500
  %682 = getelementptr inbounds i32, i32* %659, i64 %681
  %683 = bitcast i32* %682 to <4 x i32>*
  %684 = load <4 x i32>, <4 x i32>* %683, align 4, !noalias !5
  %685 = lshr <4 x i32> %684, <i32 16, i32 16, i32 16, i32 16>
  %686 = trunc <4 x i32> %685 to <4 x i8>
  %687 = icmp ult <4 x i8> %680, %686
  %688 = select <4 x i1> %687, <4 x i8> %680, <4 x i8> %686
  %689 = lshr <4 x i32> %684, <i32 8, i32 8, i32 8, i32 8>
  %690 = trunc <4 x i32> %689 to <4 x i8>
  %691 = icmp ult <4 x i8> %679, %690
  %692 = select <4 x i1> %691, <4 x i8> %679, <4 x i8> %690
  %693 = trunc <4 x i32> %684 to <4 x i8>
  %694 = icmp ult <4 x i8> %678, %693
  %695 = select <4 x i1> %694, <4 x i8> %678, <4 x i8> %693
  %696 = icmp ugt <4 x i8> %677, %686
  %697 = select <4 x i1> %696, <4 x i8> %677, <4 x i8> %686
  %698 = icmp ugt <4 x i8> %676, %690
  %699 = select <4 x i1> %698, <4 x i8> %676, <4 x i8> %690
  %700 = icmp ugt <4 x i8> %675, %693
  %701 = select <4 x i1> %700, <4 x i8> %675, <4 x i8> %693
  %702 = add i64 %674, 4
  %703 = icmp eq i64 %702, %671
  br i1 %703, label %704, label %673, !llvm.loop !12

704:                                              ; preds = %673
  %705 = shufflevector <4 x i8> %688, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %706 = icmp ult <4 x i8> %688, %705
  %707 = select <4 x i1> %706, <4 x i8> %688, <4 x i8> %705
  %708 = shufflevector <4 x i8> %707, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %709 = icmp ult <4 x i8> %707, %708
  %710 = select <4 x i1> %709, <4 x i8> %707, <4 x i8> %708
  %711 = extractelement <4 x i8> %710, i32 0
  %712 = shufflevector <4 x i8> %692, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %713 = icmp ult <4 x i8> %692, %712
  %714 = select <4 x i1> %713, <4 x i8> %692, <4 x i8> %712
  %715 = shufflevector <4 x i8> %714, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %716 = icmp ult <4 x i8> %714, %715
  %717 = select <4 x i1> %716, <4 x i8> %714, <4 x i8> %715
  %718 = extractelement <4 x i8> %717, i32 0
  %719 = shufflevector <4 x i8> %695, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %720 = icmp ult <4 x i8> %695, %719
  %721 = select <4 x i1> %720, <4 x i8> %695, <4 x i8> %719
  %722 = shufflevector <4 x i8> %721, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %723 = icmp ult <4 x i8> %721, %722
  %724 = select <4 x i1> %723, <4 x i8> %721, <4 x i8> %722
  %725 = extractelement <4 x i8> %724, i32 0
  %726 = shufflevector <4 x i8> %697, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %727 = icmp ugt <4 x i8> %697, %726
  %728 = select <4 x i1> %727, <4 x i8> %697, <4 x i8> %726
  %729 = shufflevector <4 x i8> %728, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %730 = icmp ugt <4 x i8> %728, %729
  %731 = select <4 x i1> %730, <4 x i8> %728, <4 x i8> %729
  %732 = extractelement <4 x i8> %731, i32 0
  %733 = shufflevector <4 x i8> %699, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %734 = icmp ugt <4 x i8> %699, %733
  %735 = select <4 x i1> %734, <4 x i8> %699, <4 x i8> %733
  %736 = shufflevector <4 x i8> %735, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %737 = icmp ugt <4 x i8> %735, %736
  %738 = select <4 x i1> %737, <4 x i8> %735, <4 x i8> %736
  %739 = extractelement <4 x i8> %738, i32 0
  %740 = shufflevector <4 x i8> %701, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %741 = icmp ugt <4 x i8> %701, %740
  %742 = select <4 x i1> %741, <4 x i8> %701, <4 x i8> %740
  %743 = shufflevector <4 x i8> %742, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %744 = icmp ugt <4 x i8> %742, %743
  %745 = select <4 x i1> %744, <4 x i8> %742, <4 x i8> %743
  %746 = extractelement <4 x i8> %745, i32 0
  %747 = icmp eq i64 %660, %671
  br i1 %747, label %748, label %662

748:                                              ; preds = %764, %704
  %749 = phi i8 [ %711, %704 ], [ %777, %764 ]
  %750 = phi i8 [ %718, %704 ], [ %781, %764 ]
  %751 = phi i8 [ %725, %704 ], [ %784, %764 ]
  %752 = phi i8 [ %732, %704 ], [ %786, %764 ]
  %753 = phi i8 [ %739, %704 ], [ %788, %764 ]
  %754 = phi i8 [ %746, %704 ], [ %790, %764 ]
  %755 = zext i8 %752 to i32
  %756 = zext i8 %749 to i32
  %757 = add nuw nsw i32 %755, 1
  %758 = zext i8 %753 to i32
  %759 = zext i8 %750 to i32
  %760 = add nuw nsw i32 %758, 1
  %761 = zext i8 %754 to i32
  %762 = zext i8 %751 to i32
  %763 = add nuw nsw i32 %761, 1
  br label %793

764:                                              ; preds = %662, %764
  %765 = phi i8 [ %790, %764 ], [ %663, %662 ]
  %766 = phi i8 [ %788, %764 ], [ %664, %662 ]
  %767 = phi i8 [ %786, %764 ], [ %665, %662 ]
  %768 = phi i8 [ %784, %764 ], [ %666, %662 ]
  %769 = phi i8 [ %781, %764 ], [ %667, %662 ]
  %770 = phi i8 [ %777, %764 ], [ %668, %662 ]
  %771 = phi i64 [ %791, %764 ], [ %669, %662 ]
  %772 = getelementptr inbounds i32, i32* %659, i64 %771
  %773 = load i32, i32* %772, align 4, !noalias !5
  %774 = lshr i32 %773, 16
  %775 = trunc i32 %774 to i8
  %776 = icmp ult i8 %770, %775
  %777 = select i1 %776, i8 %770, i8 %775
  %778 = lshr i32 %773, 8
  %779 = trunc i32 %778 to i8
  %780 = icmp ult i8 %769, %779
  %781 = select i1 %780, i8 %769, i8 %779
  %782 = trunc i32 %773 to i8
  %783 = icmp ult i8 %768, %782
  %784 = select i1 %783, i8 %768, i8 %782
  %785 = icmp ugt i8 %767, %775
  %786 = select i1 %785, i8 %767, i8 %775
  %787 = icmp ugt i8 %766, %779
  %788 = select i1 %787, i8 %766, i8 %779
  %789 = icmp ugt i8 %765, %782
  %790 = select i1 %789, i8 %765, i8 %782
  %791 = add nuw nsw i64 %771, 1
  %792 = icmp eq i64 %791, %321
  br i1 %792, label %748, label %764, !llvm.loop !13

793:                                              ; preds = %639, %748
  %794 = phi i8 [ %754, %748 ], [ 0, %639 ]
  %795 = phi i8 [ %753, %748 ], [ 0, %639 ]
  %796 = phi i8 [ %752, %748 ], [ 0, %639 ]
  %797 = phi i8 [ %751, %748 ], [ -1, %639 ]
  %798 = phi i8 [ %750, %748 ], [ -1, %639 ]
  %799 = phi i8 [ %749, %748 ], [ -1, %639 ]
  %800 = phi i32 [ %762, %748 ], [ 255, %639 ]
  %801 = phi i32 [ %763, %748 ], [ 1, %639 ]
  %802 = phi i32 [ %759, %748 ], [ 255, %639 ]
  %803 = phi i32 [ %760, %748 ], [ 1, %639 ]
  %804 = phi i32 [ %756, %748 ], [ 255, %639 ]
  %805 = phi i32 [ %757, %748 ], [ 1, %639 ]
  %806 = sub nsw i32 %805, %804
  %807 = sub nsw i32 %803, %802
  %808 = sub nsw i32 %801, %800
  %809 = mul nsw i32 %807, %808
  %810 = mul i32 %809, %806
  %811 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %812 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %191, align 8
  %813 = icmp ult %"class.color_utils::(anonymous namespace)::ColorBox"* %811, %812
  %814 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %812 to i64
  br i1 %813, label %815, label %832

815:                                              ; preds = %793
  %816 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 0
  store %"class.std::__1::vector.48"* %316, %"class.std::__1::vector.48"** %816, align 8
  %817 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 1
  %818 = bitcast %"class.gfx::Range"* %817 to i64*
  store i64 %502, i64* %818, align 8
  %819 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 2
  store i8 %640, i8* %819, align 8
  %820 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 3
  store i8 %641, i8* %820, align 1
  %821 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 4
  store i8 %642, i8* %821, align 2
  %822 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 5
  store i8 %643, i8* %822, align 1
  %823 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 6
  store i8 %644, i8* %823, align 4
  %824 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 7
  store i8 %645, i8* %824, align 1
  %825 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 8
  %826 = bitcast [2 x i8]* %825 to i16*
  store i16 -21846, i16* %826, align 2
  %827 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 9
  store i32 %656, i32* %827, align 8
  %828 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 0, i32 10
  %829 = bitcast [4 x i8]* %828 to i32*
  store i32 -1431655766, i32* %829, align 4
  %830 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 1
  %831 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %830 to i64
  store i64 %831, i64* %296, align 8
  br label %939

832:                                              ; preds = %793
  %833 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %811 to i64
  %834 = load i64, i64* %298, align 8
  %835 = sub i64 %833, %834
  %836 = ashr exact i64 %835, 5
  %837 = add nsw i64 %836, 1
  %838 = icmp ugt i64 %837, 576460752303423487
  %839 = inttoptr i64 %834 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  br i1 %838, label %840, label %842

840:                                              ; preds = %832
  %841 = bitcast %"class.std::__1::priority_queue"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %841) #15
  unreachable

842:                                              ; preds = %832
  %843 = sub i64 %814, %834
  %844 = ashr exact i64 %843, 5
  %845 = icmp ult i64 %844, 288230376151711743
  br i1 %845, label %846, label %854

846:                                              ; preds = %842
  %847 = ashr exact i64 %843, 4
  %848 = icmp ult i64 %847, %837
  %849 = select i1 %848, i64 %837, i64 %847
  %850 = icmp eq i64 %849, 0
  br i1 %850, label %859, label %851

851:                                              ; preds = %846
  %852 = icmp ugt i64 %849, 576460752303423487
  br i1 %852, label %853, label %854

853:                                              ; preds = %851
  call void @abort() #15
  unreachable

854:                                              ; preds = %851, %842
  %855 = phi i64 [ %849, %851 ], [ 576460752303423487, %842 ]
  %856 = shl i64 %855, 5
  %857 = call i8* @_Znwm(i64 %856) #16
  %858 = bitcast i8* %857 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  br label %859

859:                                              ; preds = %854, %846
  %860 = phi i64 [ %855, %854 ], [ 0, %846 ]
  %861 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %858, %854 ], [ null, %846 ]
  %862 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836
  %863 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %860
  %864 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %863 to i64
  %865 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %862, i64 0, i32 0
  store %"class.std::__1::vector.48"* %316, %"class.std::__1::vector.48"** %865, align 8
  %866 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 1
  %867 = bitcast %"class.gfx::Range"* %866 to i64*
  store i64 %502, i64* %867, align 8
  %868 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 2
  store i8 %640, i8* %868, align 8
  %869 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 3
  store i8 %641, i8* %869, align 1
  %870 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 4
  store i8 %642, i8* %870, align 2
  %871 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 5
  store i8 %643, i8* %871, align 1
  %872 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 6
  store i8 %644, i8* %872, align 4
  %873 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 7
  store i8 %645, i8* %873, align 1
  %874 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 8
  %875 = bitcast [2 x i8]* %874 to i16*
  store i16 -21846, i16* %875, align 2
  %876 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 9
  store i32 %656, i32* %876, align 8
  %877 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %861, i64 %836, i32 10
  %878 = bitcast [4 x i8]* %877 to i32*
  store i32 -1431655766, i32* %878, align 4
  %879 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %862, i64 1
  %880 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %879 to i64
  %881 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %811, %839
  br i1 %881, label %930, label %882

882:                                              ; preds = %859
  %883 = getelementptr %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %811, i64 -1
  %884 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %883 to i8*
  %885 = sub i64 0, %834
  %886 = getelementptr i8, i8* %884, i64 %885
  %887 = ptrtoint i8* %886 to i64
  %888 = lshr i64 %887, 5
  %889 = add nuw nsw i64 %888, 1
  %890 = and i64 %889, 3
  %891 = icmp eq i64 %890, 0
  br i1 %891, label %902, label %892

892:                                              ; preds = %882, %892
  %893 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %896, %892 ], [ %862, %882 ]
  %894 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %897, %892 ], [ %811, %882 ]
  %895 = phi i64 [ %900, %892 ], [ %890, %882 ]
  %896 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %893, i64 -1
  %897 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %894, i64 -1
  %898 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %896 to i8*
  %899 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %897 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %898, i8* align 8 %899, i64 32, i1 false) #17
  %900 = add i64 %895, -1
  %901 = icmp eq i64 %900, 0
  br i1 %901, label %902, label %892, !llvm.loop !14

902:                                              ; preds = %892, %882
  %903 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ undef, %882 ], [ %896, %892 ]
  %904 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %862, %882 ], [ %896, %892 ]
  %905 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %811, %882 ], [ %897, %892 ]
  %906 = icmp ult i8* %886, inttoptr (i64 96 to i8*)
  br i1 %906, label %927, label %907

907:                                              ; preds = %902, %907
  %908 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %922, %907 ], [ %904, %902 ]
  %909 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %923, %907 ], [ %905, %902 ]
  %910 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %908, i64 -1
  %911 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %909, i64 -1
  %912 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %910 to i8*
  %913 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %911 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %912, i8* align 8 %913, i64 32, i1 false) #17
  %914 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %908, i64 -2
  %915 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %909, i64 -2
  %916 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %914 to i8*
  %917 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %915 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %916, i8* align 8 %917, i64 32, i1 false) #17
  %918 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %908, i64 -3
  %919 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %909, i64 -3
  %920 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %918 to i8*
  %921 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %919 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %920, i8* align 8 %921, i64 32, i1 false) #17
  %922 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %908, i64 -4
  %923 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %909, i64 -4
  %924 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %922 to i8*
  %925 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %923 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %924, i8* align 8 %925, i64 32, i1 false) #17
  %926 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %923, %839
  br i1 %926, label %927, label %907

927:                                              ; preds = %907, %902
  %928 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %903, %902 ], [ %922, %907 ]
  %929 = load i64, i64* %298, align 8
  br label %930

930:                                              ; preds = %859, %927
  %931 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %928, %927 ], [ %862, %859 ]
  %932 = phi i64 [ %929, %927 ], [ %833, %859 ]
  %933 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %931 to i64
  store i64 %933, i64* %298, align 8
  store i64 %880, i64* %296, align 8
  store i64 %864, i64* %309, align 8
  %934 = icmp eq i64 %932, 0
  br i1 %934, label %939, label %935

935:                                              ; preds = %930
  %936 = inttoptr i64 %932 to i8*
  call void @_ZdlPv(i8* %936) #16
  %937 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %938 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %937 to i64
  br label %939

939:                                              ; preds = %935, %930, %815
  %940 = phi i64 [ %831, %815 ], [ %880, %930 ], [ %938, %935 ]
  %941 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %830, %815 ], [ %879, %930 ], [ %937, %935 ]
  %942 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %189, align 8
  %943 = load i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)*, i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)** %192, align 8
  %944 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %942 to i64
  %945 = sub i64 %940, %944
  %946 = icmp sgt i64 %945, 32
  br i1 %946, label %947, label %970

947:                                              ; preds = %939
  %948 = lshr exact i64 %945, 5
  %949 = add nsw i64 %948, -2
  %950 = sdiv i64 %949, 2
  %951 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %942, i64 %950
  %952 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %941, i64 -1
  %953 = call zeroext i1 %943(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %951, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %952) #17
  br i1 %953, label %954, label %970

954:                                              ; preds = %947
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %310) #17
  %955 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %952 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %310, i8* align 8 %955, i64 32, i1 false) #17
  br label %956

956:                                              ; preds = %963, %954
  %957 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %952, %954 ], [ %958, %963 ]
  %958 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %951, %954 ], [ %966, %963 ]
  %959 = phi i64 [ %950, %954 ], [ %965, %963 ]
  %960 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %957 to i8*
  %961 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %958 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %960, i8* align 8 %961, i64 28, i1 false) #17
  %962 = icmp eq i64 %959, 0
  br i1 %962, label %968, label %963

963:                                              ; preds = %956
  %964 = add nsw i64 %959, -1
  %965 = sdiv i64 %964, 2
  %966 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %942, i64 %965
  %967 = call zeroext i1 %943(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %966, %"class.color_utils::(anonymous namespace)::ColorBox"* nonnull dereferenceable(32) %7) #17
  br i1 %967, label %956, label %968

968:                                              ; preds = %963, %956
  %969 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %958 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %969, i8* nonnull align 8 %310, i64 28, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %310) #17
  br label %970

970:                                              ; preds = %939, %947, %968
  %971 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %972 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %191, align 8
  %973 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %971, %972
  %974 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %972 to i64
  br i1 %973, label %995, label %975

975:                                              ; preds = %970
  %976 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 0
  store %"class.std::__1::vector.48"* %316, %"class.std::__1::vector.48"** %976, align 8
  %977 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 1
  %978 = bitcast %"class.gfx::Range"* %977 to i64*
  %979 = or i64 %499, %500
  store i64 %979, i64* %978, align 8
  %980 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 2
  store i8 %799, i8* %980, align 8
  %981 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 3
  store i8 %798, i8* %981, align 1
  %982 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 4
  store i8 %797, i8* %982, align 2
  %983 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 5
  store i8 %796, i8* %983, align 1
  %984 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 6
  store i8 %795, i8* %984, align 4
  %985 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 7
  store i8 %794, i8* %985, align 1
  %986 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 8, i64 0
  store i8 %336, i8* %986, align 2
  %987 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 8, i64 1
  store i8 %338, i8* %987, align 1
  %988 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 9
  store i32 %810, i32* %988, align 8
  %989 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 10, i64 0
  store i8 %341, i8* %989, align 4
  %990 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 10, i64 1
  store i8 %343, i8* %990, align 1
  %991 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 10, i64 2
  store i8 %345, i8* %991, align 2
  %992 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 0, i32 10, i64 3
  store i8 %347, i8* %992, align 1
  %993 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 1
  %994 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %993 to i64
  store i64 %994, i64* %296, align 8
  br label %1105

995:                                              ; preds = %970
  %996 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %971 to i64
  %997 = load i64, i64* %298, align 8
  %998 = sub i64 %996, %997
  %999 = ashr exact i64 %998, 5
  %1000 = add nsw i64 %999, 1
  %1001 = icmp ugt i64 %1000, 576460752303423487
  %1002 = inttoptr i64 %997 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  br i1 %1001, label %1003, label %1005

1003:                                             ; preds = %995
  %1004 = bitcast %"class.std::__1::priority_queue"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1004) #15
  unreachable

1005:                                             ; preds = %995
  %1006 = sub i64 %974, %997
  %1007 = ashr exact i64 %1006, 5
  %1008 = icmp ult i64 %1007, 288230376151711743
  br i1 %1008, label %1009, label %1017

1009:                                             ; preds = %1005
  %1010 = ashr exact i64 %1006, 4
  %1011 = icmp ult i64 %1010, %1000
  %1012 = select i1 %1011, i64 %1000, i64 %1010
  %1013 = icmp eq i64 %1012, 0
  br i1 %1013, label %1022, label %1014

1014:                                             ; preds = %1009
  %1015 = icmp ugt i64 %1012, 576460752303423487
  br i1 %1015, label %1016, label %1017

1016:                                             ; preds = %1014
  call void @abort() #15
  unreachable

1017:                                             ; preds = %1014, %1005
  %1018 = phi i64 [ %1012, %1014 ], [ 576460752303423487, %1005 ]
  %1019 = shl i64 %1018, 5
  %1020 = call i8* @_Znwm(i64 %1019) #16
  %1021 = bitcast i8* %1020 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  br label %1022

1022:                                             ; preds = %1017, %1009
  %1023 = phi i64 [ %1018, %1017 ], [ 0, %1009 ]
  %1024 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1021, %1017 ], [ null, %1009 ]
  %1025 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999
  %1026 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %1023
  %1027 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1026 to i64
  %1028 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1025, i64 0, i32 0
  store %"class.std::__1::vector.48"* %316, %"class.std::__1::vector.48"** %1028, align 8
  %1029 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 1
  %1030 = bitcast %"class.gfx::Range"* %1029 to i64*
  %1031 = or i64 %499, %500
  store i64 %1031, i64* %1030, align 8
  %1032 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 2
  store i8 %799, i8* %1032, align 8
  %1033 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 3
  store i8 %798, i8* %1033, align 1
  %1034 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 4
  store i8 %797, i8* %1034, align 2
  %1035 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 5
  store i8 %796, i8* %1035, align 1
  %1036 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 6
  store i8 %795, i8* %1036, align 4
  %1037 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 7
  store i8 %794, i8* %1037, align 1
  %1038 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 8, i64 0
  store i8 %336, i8* %1038, align 2
  %1039 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 8, i64 1
  store i8 %338, i8* %1039, align 1
  %1040 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 9
  store i32 %810, i32* %1040, align 8
  %1041 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 10, i64 0
  store i8 %341, i8* %1041, align 4
  %1042 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 10, i64 1
  store i8 %343, i8* %1042, align 1
  %1043 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 10, i64 2
  store i8 %345, i8* %1043, align 2
  %1044 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1024, i64 %999, i32 10, i64 3
  store i8 %347, i8* %1044, align 1
  %1045 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1025, i64 1
  %1046 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1045 to i64
  %1047 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %971, %1002
  br i1 %1047, label %1096, label %1048

1048:                                             ; preds = %1022
  %1049 = getelementptr %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %971, i64 -1
  %1050 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1049 to i8*
  %1051 = sub i64 0, %997
  %1052 = getelementptr i8, i8* %1050, i64 %1051
  %1053 = ptrtoint i8* %1052 to i64
  %1054 = lshr i64 %1053, 5
  %1055 = add nuw nsw i64 %1054, 1
  %1056 = and i64 %1055, 3
  %1057 = icmp eq i64 %1056, 0
  br i1 %1057, label %1068, label %1058

1058:                                             ; preds = %1048, %1058
  %1059 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1062, %1058 ], [ %1025, %1048 ]
  %1060 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1063, %1058 ], [ %971, %1048 ]
  %1061 = phi i64 [ %1066, %1058 ], [ %1056, %1048 ]
  %1062 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1059, i64 -1
  %1063 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1060, i64 -1
  %1064 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1062 to i8*
  %1065 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1063 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1064, i8* align 8 %1065, i64 32, i1 false) #17
  %1066 = add i64 %1061, -1
  %1067 = icmp eq i64 %1066, 0
  br i1 %1067, label %1068, label %1058, !llvm.loop !15

1068:                                             ; preds = %1058, %1048
  %1069 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ undef, %1048 ], [ %1062, %1058 ]
  %1070 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1025, %1048 ], [ %1062, %1058 ]
  %1071 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %971, %1048 ], [ %1063, %1058 ]
  %1072 = icmp ult i8* %1052, inttoptr (i64 96 to i8*)
  br i1 %1072, label %1093, label %1073

1073:                                             ; preds = %1068, %1073
  %1074 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1088, %1073 ], [ %1070, %1068 ]
  %1075 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1089, %1073 ], [ %1071, %1068 ]
  %1076 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1074, i64 -1
  %1077 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1075, i64 -1
  %1078 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1076 to i8*
  %1079 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1077 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1078, i8* align 8 %1079, i64 32, i1 false) #17
  %1080 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1074, i64 -2
  %1081 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1075, i64 -2
  %1082 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1080 to i8*
  %1083 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1081 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1082, i8* align 8 %1083, i64 32, i1 false) #17
  %1084 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1074, i64 -3
  %1085 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1075, i64 -3
  %1086 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1084 to i8*
  %1087 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1085 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1086, i8* align 8 %1087, i64 32, i1 false) #17
  %1088 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1074, i64 -4
  %1089 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1075, i64 -4
  %1090 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1088 to i8*
  %1091 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1089 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1090, i8* align 8 %1091, i64 32, i1 false) #17
  %1092 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %1089, %1002
  br i1 %1092, label %1093, label %1073

1093:                                             ; preds = %1073, %1068
  %1094 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1069, %1068 ], [ %1088, %1073 ]
  %1095 = load i64, i64* %298, align 8
  br label %1096

1096:                                             ; preds = %1022, %1093
  %1097 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1094, %1093 ], [ %1025, %1022 ]
  %1098 = phi i64 [ %1095, %1093 ], [ %996, %1022 ]
  %1099 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1097 to i64
  store i64 %1099, i64* %298, align 8
  store i64 %1046, i64* %296, align 8
  store i64 %1027, i64* %309, align 8
  %1100 = icmp eq i64 %1098, 0
  br i1 %1100, label %1105, label %1101

1101:                                             ; preds = %1096
  %1102 = inttoptr i64 %1098 to i8*
  call void @_ZdlPv(i8* %1102) #16
  %1103 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %1104 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1103 to i64
  br label %1105

1105:                                             ; preds = %1101, %1096, %975
  %1106 = phi i64 [ %994, %975 ], [ %1046, %1096 ], [ %1104, %1101 ]
  %1107 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %993, %975 ], [ %1045, %1096 ], [ %1103, %1101 ]
  %1108 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %189, align 8
  %1109 = load i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)*, i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)** %192, align 8
  %1110 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1108 to i64
  %1111 = sub i64 %1106, %1110
  %1112 = icmp sgt i64 %1111, 32
  br i1 %1112, label %1113, label %1136

1113:                                             ; preds = %1105
  %1114 = lshr exact i64 %1111, 5
  %1115 = add nsw i64 %1114, -2
  %1116 = sdiv i64 %1115, 2
  %1117 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1108, i64 %1116
  %1118 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1107, i64 -1
  %1119 = call zeroext i1 %1109(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1117, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1118) #17
  br i1 %1119, label %1120, label %1136

1120:                                             ; preds = %1113
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %311) #17
  %1121 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %311, i8* align 8 %1121, i64 32, i1 false) #17
  br label %1122

1122:                                             ; preds = %1129, %1120
  %1123 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1118, %1120 ], [ %1124, %1129 ]
  %1124 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1117, %1120 ], [ %1132, %1129 ]
  %1125 = phi i64 [ %1116, %1120 ], [ %1131, %1129 ]
  %1126 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1123 to i8*
  %1127 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1126, i8* align 8 %1127, i64 28, i1 false) #17
  %1128 = icmp eq i64 %1125, 0
  br i1 %1128, label %1134, label %1129

1129:                                             ; preds = %1122
  %1130 = add nsw i64 %1125, -1
  %1131 = sdiv i64 %1130, 2
  %1132 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1108, i64 %1131
  %1133 = call zeroext i1 %1109(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1132, %"class.color_utils::(anonymous namespace)::ColorBox"* nonnull dereferenceable(32) %6) #17
  br i1 %1133, label %1122, label %1134

1134:                                             ; preds = %1129, %1122
  %1135 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1135, i8* nonnull align 8 %311, i64 28, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %311) #17
  br label %1136

1136:                                             ; preds = %1105, %1113, %1134
  %1137 = load i64, i64* %296, align 8
  %1138 = load i64, i64* %298, align 8
  %1139 = sub i64 %1137, %1138
  %1140 = ashr exact i64 %1139, 5
  %1141 = icmp ult i64 %1140, %2
  %1142 = inttoptr i64 %1138 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %1143 = inttoptr i64 %1137 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  br i1 %1141, label %312, label %1144

1144:                                             ; preds = %1136
  %1145 = inttoptr i64 %1138 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %1146 = inttoptr i64 %1137 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  br label %1147

1147:                                             ; preds = %312, %1144, %295
  %1148 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %303, %295 ], [ %1145, %1144 ], [ %313, %312 ]
  %1149 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %304, %295 ], [ %1146, %1144 ], [ %314, %312 ]
  %1150 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1150)
  store i64 0, i64* %20, align 8
  %1151 = bitcast %"class.std::__1::vector.20"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1151) #17
  %1152 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %21, i64 0, i32 0, i32 1
  %1153 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1151, i8 0, i64 24, i1 false) #17
  %1154 = bitcast %"struct.color_utils::Swatch"** %1153 to i64*
  %1155 = bitcast %"class.std::__1::vector.20"* %21 to i64*
  %1156 = icmp eq i64 %2, 0
  br i1 %1156, label %1169, label %1157

1157:                                             ; preds = %1147
  %1158 = icmp ugt i64 %2, 1152921504606846975
  br i1 %1158, label %1159, label %1160

1159:                                             ; preds = %1157
  call void @abort() #15
  unreachable

1160:                                             ; preds = %1157
  %1161 = bitcast %"struct.color_utils::Swatch"** %1152 to i64*
  %1162 = shl i64 %2, 4
  %1163 = call i8* @_Znwm(i64 %1162) #16
  %1164 = bitcast i8* %1163 to %"struct.color_utils::Swatch"*
  %1165 = ptrtoint i8* %1163 to i64
  %1166 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1164, i64 %2
  %1167 = ptrtoint %"struct.color_utils::Swatch"* %1166 to i64
  %1168 = ptrtoint i8* %1163 to i64
  store i64 %1168, i64* %1155, align 8
  store i64 %1165, i64* %1161, align 8
  store i64 %1167, i64* %1154, align 8
  br label %1169

1169:                                             ; preds = %1160, %1147
  %1170 = phi i64 [ 0, %1147 ], [ %1167, %1160 ]
  %1171 = phi i64 [ 0, %1147 ], [ %1168, %1160 ]
  %1172 = phi i64 [ 0, %1147 ], [ %1165, %1160 ]
  %1173 = phi %"struct.color_utils::Swatch"* [ null, %1147 ], [ %1164, %1160 ]
  %1174 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %1148, %1149
  br i1 %1174, label %1469, label %1175

1175:                                             ; preds = %1169
  %1176 = bitcast %"struct.color_utils::Swatch"** %1152 to i64*
  %1177 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %13 to i8*
  br label %1178

1178:                                             ; preds = %1175, %1453
  %1179 = phi i64 [ 0, %1175 ], [ %1461, %1453 ]
  %1180 = phi i64 [ %1172, %1175 ], [ %1464, %1453 ]
  %1181 = phi %"struct.color_utils::Swatch"* [ %1173, %1175 ], [ %1456, %1453 ]
  %1182 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1148, %1175 ], [ %1462, %1453 ]
  %1183 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1182, i64 0, i32 1, i32 0
  %1184 = load i32, i32* %1183, align 4
  %1185 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1182, i64 0, i32 1, i32 1
  %1186 = load i32, i32* %1185, align 4
  %1187 = icmp ult i32 %1184, %1186
  br i1 %1187, label %1188, label %1280

1188:                                             ; preds = %1178
  %1189 = zext i32 %1184 to i64
  %1190 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1182, i64 0, i32 0
  %1191 = load %"class.std::__1::vector.48"*, %"class.std::__1::vector.48"** %1190, align 8
  %1192 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %1191, i64 0, i32 0, i32 0
  %1193 = load i32*, i32** %1192, align 8
  %1194 = load i64, i64* %32, align 8
  %1195 = icmp eq i64 %1194, 0
  %1196 = call i64 @llvm.ctpop.i64(i64 %1194) #17, !range !16
  %1197 = icmp ugt i64 %1196, 1
  %1198 = add i64 %1194, 4294967295
  %1199 = add i64 %1194, -1
  %1200 = zext i32 %1186 to i64
  %1201 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  br label %1206

1202:                                             ; preds = %1256
  %1203 = uitofp i64 %1268 to double
  %1204 = uitofp i64 %1273 to double
  %1205 = uitofp i64 %1277 to double
  br label %1280

1206:                                             ; preds = %1256, %1188
  %1207 = phi i64 [ 0, %1188 ], [ %1268, %1256 ]
  %1208 = phi i64 [ %1189, %1188 ], [ %1278, %1256 ]
  %1209 = phi i64 [ 0, %1188 ], [ %1263, %1256 ]
  %1210 = phi i64 [ 0, %1188 ], [ %1277, %1256 ]
  %1211 = phi i64 [ 0, %1188 ], [ %1273, %1256 ]
  %1212 = getelementptr inbounds i32, i32* %1193, i64 %1208
  %1213 = load i32, i32* %1212, align 4
  %1214 = zext i32 %1213 to i64
  br i1 %1195, label %1256, label %1215

1215:                                             ; preds = %1206
  br i1 %1197, label %1218, label %1216

1216:                                             ; preds = %1215
  %1217 = and i64 %1198, %1214
  br label %1222

1218:                                             ; preds = %1215
  %1219 = icmp ugt i64 %1194, %1214
  br i1 %1219, label %1222, label %1220

1220:                                             ; preds = %1218
  %1221 = urem i64 %1214, %1194
  br label %1222

1222:                                             ; preds = %1220, %1218, %1216
  %1223 = phi i64 [ %1217, %1216 ], [ %1221, %1220 ], [ %1214, %1218 ]
  %1224 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1201, i64 %1223
  %1225 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1224, align 8
  %1226 = icmp eq %"struct.std::__1::__hash_node_base"* %1225, null
  br i1 %1226, label %1256, label %1227

1227:                                             ; preds = %1222
  %1228 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1225, i64 0, i32 0
  %1229 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1228, align 8
  %1230 = icmp eq %"struct.std::__1::__hash_node_base"* %1229, null
  br i1 %1230, label %1256, label %1231

1231:                                             ; preds = %1227, %1252
  %1232 = phi %"struct.std::__1::__hash_node_base"* [ %1254, %1252 ], [ %1229, %1227 ]
  %1233 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1232, i64 1
  %1234 = bitcast %"struct.std::__1::__hash_node_base"* %1233 to i64*
  %1235 = load i64, i64* %1234, align 8
  %1236 = icmp eq i64 %1235, %1214
  br i1 %1236, label %1247, label %1237

1237:                                             ; preds = %1231
  br i1 %1197, label %1240, label %1238

1238:                                             ; preds = %1237
  %1239 = and i64 %1235, %1199
  br label %1244

1240:                                             ; preds = %1237
  %1241 = icmp ult i64 %1235, %1194
  br i1 %1241, label %1244, label %1242

1242:                                             ; preds = %1240
  %1243 = urem i64 %1235, %1194
  br label %1244

1244:                                             ; preds = %1242, %1240, %1238
  %1245 = phi i64 [ %1239, %1238 ], [ %1243, %1242 ], [ %1235, %1240 ]
  %1246 = icmp eq i64 %1245, %1223
  br i1 %1246, label %1252, label %1256

1247:                                             ; preds = %1231
  %1248 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1232, i64 2
  %1249 = bitcast %"struct.std::__1::__hash_node_base"* %1248 to i32*
  %1250 = load i32, i32* %1249, align 4
  %1251 = icmp eq i32 %1250, %1213
  br i1 %1251, label %1256, label %1252

1252:                                             ; preds = %1247, %1244
  %1253 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1232, i64 0, i32 0
  %1254 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1253, align 8
  %1255 = icmp eq %"struct.std::__1::__hash_node_base"* %1254, null
  br i1 %1255, label %1256, label %1231

1256:                                             ; preds = %1252, %1247, %1244, %1227, %1222, %1206
  %1257 = phi %"struct.std::__1::__hash_node_base"* [ null, %1222 ], [ null, %1206 ], [ null, %1227 ], [ null, %1244 ], [ null, %1252 ], [ %1232, %1247 ]
  %1258 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1257, i64 2
  %1259 = bitcast %"struct.std::__1::__hash_node_base"* %1258 to %"struct.std::__1::pair"*
  %1260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1259, i64 0, i32 1
  %1261 = load i32, i32* %1260, align 4
  %1262 = sext i32 %1261 to i64
  %1263 = add i64 %1209, %1262
  %1264 = lshr i32 %1213, 16
  %1265 = and i32 %1264, 255
  %1266 = zext i32 %1265 to i64
  %1267 = mul nsw i64 %1262, %1266
  %1268 = add i64 %1267, %1207
  %1269 = lshr i32 %1213, 8
  %1270 = and i32 %1269, 255
  %1271 = zext i32 %1270 to i64
  %1272 = mul nsw i64 %1262, %1271
  %1273 = add i64 %1272, %1211
  %1274 = and i32 %1213, 255
  %1275 = zext i32 %1274 to i64
  %1276 = mul nsw i64 %1262, %1275
  %1277 = add i64 %1276, %1210
  %1278 = add nuw nsw i64 %1208, 1
  %1279 = icmp eq i64 %1278, %1200
  br i1 %1279, label %1202, label %1206

1280:                                             ; preds = %1178, %1202
  %1281 = phi double [ 0.000000e+00, %1178 ], [ %1204, %1202 ]
  %1282 = phi double [ 0.000000e+00, %1178 ], [ %1205, %1202 ]
  %1283 = phi i64 [ 0, %1178 ], [ %1263, %1202 ]
  %1284 = phi double [ 0.000000e+00, %1178 ], [ %1203, %1202 ]
  %1285 = uitofp i64 %1283 to double
  %1286 = fdiv double %1284, %1285
  %1287 = call double @llvm.round.f64(double %1286) #17
  %1288 = fptoui double %1287 to i32
  %1289 = fdiv double %1281, %1285
  %1290 = call double @llvm.round.f64(double %1289) #17
  %1291 = fptoui double %1290 to i32
  %1292 = fdiv double %1282, %1285
  %1293 = call double @llvm.round.f64(double %1292) #17
  %1294 = fptoui double %1293 to i32
  %1295 = shl i32 %1288, 16
  %1296 = shl i32 %1291, 8
  %1297 = or i32 %1296, %1294
  %1298 = or i32 %1297, %1295
  %1299 = or i32 %1298, -16777216
  %1300 = load %"struct.color_utils::Swatch"*, %"struct.color_utils::Swatch"** %1153, align 8
  %1301 = icmp ult %"struct.color_utils::Swatch"* %1181, %1300
  %1302 = ptrtoint %"struct.color_utils::Swatch"* %1300 to i64
  br i1 %1301, label %1303, label %1308

1303:                                             ; preds = %1280
  %1304 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1181, i64 0, i32 0
  store i32 %1299, i32* %1304, align 8
  %1305 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1181, i64 0, i32 1
  store i64 %1283, i64* %1305, align 8
  %1306 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1181, i64 1
  %1307 = ptrtoint %"struct.color_utils::Swatch"* %1306 to i64
  store i64 %1307, i64* %1176, align 8
  br label %1357

1308:                                             ; preds = %1280
  %1309 = ptrtoint %"struct.color_utils::Swatch"* %1181 to i64
  %1310 = load i64, i64* %1155, align 8
  %1311 = sub i64 %1309, %1310
  %1312 = ashr exact i64 %1311, 4
  %1313 = add nsw i64 %1312, 1
  %1314 = icmp ugt i64 %1313, 1152921504606846975
  br i1 %1314, label %1315, label %1317

1315:                                             ; preds = %1308
  %1316 = bitcast %"class.std::__1::vector.20"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1316) #15
  unreachable

1317:                                             ; preds = %1308
  %1318 = sub i64 %1302, %1310
  %1319 = ashr exact i64 %1318, 4
  %1320 = icmp ult i64 %1319, 576460752303423487
  br i1 %1320, label %1321, label %1329

1321:                                             ; preds = %1317
  %1322 = ashr exact i64 %1318, 3
  %1323 = icmp ult i64 %1322, %1313
  %1324 = select i1 %1323, i64 %1313, i64 %1322
  %1325 = icmp eq i64 %1324, 0
  br i1 %1325, label %1334, label %1326

1326:                                             ; preds = %1321
  %1327 = icmp ugt i64 %1324, 1152921504606846975
  br i1 %1327, label %1328, label %1329

1328:                                             ; preds = %1326
  call void @abort() #15
  unreachable

1329:                                             ; preds = %1326, %1317
  %1330 = phi i64 [ %1324, %1326 ], [ 1152921504606846975, %1317 ]
  %1331 = shl i64 %1330, 4
  %1332 = call i8* @_Znwm(i64 %1331) #16
  %1333 = bitcast i8* %1332 to %"struct.color_utils::Swatch"*
  br label %1334

1334:                                             ; preds = %1329, %1321
  %1335 = phi i64 [ %1330, %1329 ], [ 0, %1321 ]
  %1336 = phi %"struct.color_utils::Swatch"* [ %1333, %1329 ], [ null, %1321 ]
  %1337 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1336, i64 %1312
  %1338 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1336, i64 %1335
  %1339 = ptrtoint %"struct.color_utils::Swatch"* %1338 to i64
  %1340 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1337, i64 0, i32 0
  store i32 %1299, i32* %1340, align 8
  %1341 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1336, i64 %1312, i32 1
  store i64 %1283, i64* %1341, align 8
  %1342 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1337, i64 1
  %1343 = ptrtoint %"struct.color_utils::Swatch"* %1342 to i64
  %1344 = sub i64 %1180, %1310
  %1345 = ashr exact i64 %1344, 4
  %1346 = sub nsw i64 0, %1345
  %1347 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1337, i64 %1346
  %1348 = ptrtoint %"struct.color_utils::Swatch"* %1347 to i64
  %1349 = icmp sgt i64 %1344, 0
  br i1 %1349, label %1350, label %1353

1350:                                             ; preds = %1334
  %1351 = bitcast %"struct.color_utils::Swatch"* %1347 to i8*
  %1352 = inttoptr i64 %1310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1351, i8* align 8 %1352, i64 %1344, i1 false) #17
  br label %1353

1353:                                             ; preds = %1350, %1334
  store i64 %1348, i64* %1155, align 8
  store i64 %1343, i64* %1176, align 8
  store i64 %1339, i64* %1154, align 8
  %1354 = icmp eq i64 %1310, 0
  br i1 %1354, label %1357, label %1355

1355:                                             ; preds = %1353
  %1356 = inttoptr i64 %1310 to i8*
  call void @_ZdlPv(i8* %1356) #16
  br label %1357

1357:                                             ; preds = %1303, %1353, %1355
  %1358 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %189, align 8
  %1359 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %1360 = load i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)*, i1 (%"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"*)** %192, align 8
  %1361 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1358 to i64
  %1362 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1359 to i64
  %1363 = sub i64 %1362, %1361
  %1364 = ashr exact i64 %1363, 5
  %1365 = icmp sgt i64 %1363, 32
  br i1 %1365, label %1366, label %1453

1366:                                             ; preds = %1357
  %1367 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1
  %1368 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1358 to i64*
  %1369 = load i64, i64* %1368, align 8
  %1370 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 1, i32 0
  %1371 = load i32, i32* %1370, align 8
  %1372 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 1, i32 1
  %1373 = load i32, i32* %1372, align 4
  %1374 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 2
  %1375 = load i8, i8* %1374, align 8
  %1376 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 3
  %1377 = load i8, i8* %1376, align 1
  %1378 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 4
  %1379 = load i8, i8* %1378, align 2
  %1380 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 5
  %1381 = load i8, i8* %1380, align 1
  %1382 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 6
  %1383 = load i8, i8* %1382, align 4
  %1384 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 7
  %1385 = load i8, i8* %1384, align 1
  %1386 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 8, i64 0
  %1387 = load i8, i8* %1386, align 2
  %1388 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 8, i64 1
  %1389 = load i8, i8* %1388, align 1
  %1390 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 0, i32 9
  %1391 = load i32, i32* %1390, align 8
  %1392 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1358 to i8*
  %1393 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1392, i8* align 8 %1393, i64 28, i1 false) #17
  %1394 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1367 to i64*
  store i64 %1369, i64* %1394, align 8
  %1395 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 1, i32 0
  store i32 %1371, i32* %1395, align 8
  %1396 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 1, i32 1
  store i32 %1373, i32* %1396, align 4
  %1397 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 2
  store i8 %1375, i8* %1397, align 8
  %1398 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 3
  store i8 %1377, i8* %1398, align 1
  %1399 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 4
  store i8 %1379, i8* %1399, align 2
  %1400 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 5
  store i8 %1381, i8* %1400, align 1
  %1401 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 6
  store i8 %1383, i8* %1401, align 4
  %1402 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 7
  store i8 %1385, i8* %1402, align 1
  %1403 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 8, i64 0
  store i8 %1387, i8* %1403, align 2
  %1404 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 8, i64 1
  store i8 %1389, i8* %1404, align 1
  %1405 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1359, i64 -1, i32 9
  store i32 %1391, i32* %1405, align 8
  %1406 = add nsw i64 %1364, -1
  %1407 = icmp eq i64 %1363, 64
  br i1 %1407, label %1453, label %1408

1408:                                             ; preds = %1366
  %1409 = add nsw i64 %1364, -3
  %1410 = sdiv i64 %1409, 2
  %1411 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 1
  %1412 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1411 to i64
  %1413 = icmp sgt i64 %1406, 2
  br i1 %1413, label %1414, label %1420

1414:                                             ; preds = %1408
  %1415 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 2
  %1416 = call zeroext i1 %1360(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1411, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1415) #17
  %1417 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1415 to i64
  %1418 = select i1 %1416, i64 %1417, i64 %1412
  %1419 = select i1 %1416, i64 2, i64 1
  br label %1420

1420:                                             ; preds = %1414, %1408
  %1421 = phi i64 [ %1412, %1408 ], [ %1418, %1414 ]
  %1422 = phi i64 [ 1, %1408 ], [ %1419, %1414 ]
  %1423 = inttoptr i64 %1421 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %1424 = call zeroext i1 %1360(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1423, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1358) #17
  br i1 %1424, label %1453, label %1425

1425:                                             ; preds = %1420
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1177) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1177, i8* align 8 %1392, i64 32, i1 false) #17
  br label %1426

1426:                                             ; preds = %1446, %1425
  %1427 = phi i64 [ %1421, %1425 ], [ %1447, %1446 ]
  %1428 = phi i64 [ %1361, %1425 ], [ %1427, %1446 ]
  %1429 = phi i64 [ %1422, %1425 ], [ %1448, %1446 ]
  %1430 = inttoptr i64 %1428 to i8*
  %1431 = inttoptr i64 %1427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1430, i8* align 8 %1431, i64 28, i1 false) #17
  %1432 = icmp slt i64 %1410, %1429
  br i1 %1432, label %1451, label %1433

1433:                                             ; preds = %1426
  %1434 = shl nsw i64 %1429, 1
  %1435 = or i64 %1434, 1
  %1436 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1358, i64 %1435
  %1437 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1436 to i64
  %1438 = add nsw i64 %1435, 1
  %1439 = icmp slt i64 %1438, %1406
  br i1 %1439, label %1440, label %1446

1440:                                             ; preds = %1433
  %1441 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1436, i64 1
  %1442 = call zeroext i1 %1360(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1436, %"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1441) #17
  %1443 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1441 to i64
  %1444 = select i1 %1442, i64 %1443, i64 %1437
  %1445 = select i1 %1442, i64 %1438, i64 %1435
  br label %1446

1446:                                             ; preds = %1440, %1433
  %1447 = phi i64 [ %1437, %1433 ], [ %1444, %1440 ]
  %1448 = phi i64 [ %1435, %1433 ], [ %1445, %1440 ]
  %1449 = inttoptr i64 %1447 to %"class.color_utils::(anonymous namespace)::ColorBox"*
  %1450 = call zeroext i1 %1360(%"class.color_utils::(anonymous namespace)::ColorBox"* dereferenceable(32) %1449, %"class.color_utils::(anonymous namespace)::ColorBox"* nonnull dereferenceable(32) %13) #17
  br i1 %1450, label %1451, label %1426

1451:                                             ; preds = %1446, %1426
  %1452 = inttoptr i64 %1427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1452, i8* nonnull align 8 %1177, i64 28, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1177) #17
  br label %1453

1453:                                             ; preds = %1357, %1366, %1420, %1451
  %1454 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %1455 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1454, i64 -1
  store %"class.color_utils::(anonymous namespace)::ColorBox"* %1455, %"class.color_utils::(anonymous namespace)::ColorBox"** %190, align 8
  %1456 = load %"struct.color_utils::Swatch"*, %"struct.color_utils::Swatch"** %1152, align 8
  %1457 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %1456, i64 -1, i32 1
  %1458 = load i64, i64* %1457, align 8
  %1459 = icmp ult i64 %1179, %1458
  %1460 = select i1 %1459, i64* %1457, i64* %20
  %1461 = load i64, i64* %1460, align 8
  store i64 %1461, i64* %20, align 8
  %1462 = load %"class.color_utils::(anonymous namespace)::ColorBox"*, %"class.color_utils::(anonymous namespace)::ColorBox"** %189, align 8
  %1463 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %1462, %1455
  %1464 = ptrtoint %"struct.color_utils::Swatch"* %1456 to i64
  br i1 %1463, label %1465, label %1178

1465:                                             ; preds = %1453
  %1466 = ptrtoint %"struct.color_utils::Swatch"* %1456 to i64
  %1467 = load i64, i64* %1155, align 8
  %1468 = load i64, i64* %1154, align 8
  br label %1469

1469:                                             ; preds = %1465, %1169
  %1470 = phi %"class.color_utils::(anonymous namespace)::ColorBox"* [ %1455, %1465 ], [ %1148, %1169 ]
  %1471 = phi i64 [ %1468, %1465 ], [ %1170, %1169 ]
  %1472 = phi i64 [ %1466, %1465 ], [ %1172, %1169 ]
  %1473 = phi i64 [ %1467, %1465 ], [ %1171, %1169 ]
  %1474 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  store i64 %1473, i64* %1474, align 8
  %1475 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %1476 = bitcast %"struct.color_utils::Swatch"** %1475 to i64*
  store i64 %1472, i64* %1476, align 8
  %1477 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %1478 = bitcast %"struct.color_utils::Swatch"** %1477 to i64*
  store i64 %1471, i64* %1478, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1151) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1150)
  %1479 = icmp eq %"class.color_utils::(anonymous namespace)::ColorBox"* %1470, null
  br i1 %1479, label %1483, label %1480

1480:                                             ; preds = %1469
  %1481 = ptrtoint %"class.color_utils::(anonymous namespace)::ColorBox"* %1470 to i64
  store i64 %1481, i64* %296, align 8
  %1482 = bitcast %"class.color_utils::(anonymous namespace)::ColorBox"* %1470 to i8*
  call void @_ZdlPv(i8* %1482) #16
  br label %1483

1483:                                             ; preds = %1469, %1480
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %188) #17
  %1484 = load i32*, i32** %51, align 16
  %1485 = bitcast i32* %1484 to i8*
  br label %1486

1486:                                             ; preds = %1483, %185
  %1487 = phi i8* [ %1485, %1483 ], [ %111, %185 ]
  %1488 = phi i32* [ %1484, %1483 ], [ %112, %185 ]
  %1489 = icmp eq i32* %1488, null
  br i1 %1489, label %1493, label %1490

1490:                                             ; preds = %1486
  %1491 = ptrtoint i32* %1488 to i64
  %1492 = bitcast i32** %52 to i64*
  store i64 %1491, i64* %1492, align 8
  call void @_ZdlPv(i8* %1487) #16
  br label %1493

1493:                                             ; preds = %1486, %1490
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #17
  %1494 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %1495 = icmp eq %"struct.std::__1::__hash_node_base"* %1494, null
  br i1 %1495, label %1502, label %1496

1496:                                             ; preds = %1493, %1496
  %1497 = phi %"struct.std::__1::__hash_node_base"* [ %1499, %1496 ], [ %1494, %1493 ]
  %1498 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1497, i64 0, i32 0
  %1499 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1498, align 8
  %1500 = bitcast %"struct.std::__1::__hash_node_base"* %1497 to i8*
  call void @_ZdlPv(i8* %1500) #16
  %1501 = icmp eq %"struct.std::__1::__hash_node_base"* %1499, null
  br i1 %1501, label %1502, label %1496

1502:                                             ; preds = %1496, %1493
  %1503 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %1504 = icmp eq %"struct.std::__1::__hash_node_base"** %1503, null
  br i1 %1504, label %1507, label %1505

1505:                                             ; preds = %1502
  %1506 = bitcast %"struct.std::__1::__hash_node_base"** %1503 to i8*
  call void @_ZdlPv(i8* %1506) #16
  br label %1507

1507:                                             ; preds = %1502, %1505
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN11color_utils12_GLOBAL__N_18ColorBox15CompareByVolumeERKS1_S3_(%"class.color_utils::(anonymous namespace)::ColorBox"* nocapture readonly dereferenceable(32), %"class.color_utils::(anonymous namespace)::ColorBox"* nocapture readonly dereferenceable(32)) #8 align 2 {
  %3 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %1, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE(%"class.std::__1::vector.20"* noalias sret, %class.SkBitmap* dereferenceable(56), %"class.std::__1::vector.61"* nocapture readonly dereferenceable(24), %"class.gfx::Rect"* readonly, %"class.base::RepeatingCallback"*) local_unnamed_addr #4 {
  %6 = alloca %"class.std::__1::vector.20", align 8
  %7 = alloca %"class.absl::optional", align 8
  %8 = alloca %"struct.color_utils::HSL", align 8
  %9 = alloca %"class.std::__1::vector.68", align 8
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = alloca %"class.absl::optional", align 8
  %12 = alloca %"class.base::RepeatingCallback", align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %2, i64 0, i32 0, i32 0
  %14 = load %"struct.color_utils::ColorProfile"*, %"struct.color_utils::ColorProfile"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %2, i64 0, i32 0, i32 1
  %16 = load %"struct.color_utils::ColorProfile"*, %"struct.color_utils::ColorProfile"** %15, align 8
  %17 = icmp eq %"struct.color_utils::ColorProfile"* %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %5
  %19 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #17
  br label %439

20:                                               ; preds = %5
  %21 = ptrtoint %"struct.color_utils::ColorProfile"* %14 to i64
  %22 = ptrtoint %"struct.color_utils::ColorProfile"* %16 to i64
  %23 = sub i64 %22, %21
  %24 = ashr exact i64 %23, 3
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %36, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %34 = load %class.SkPixelRef*, %class.SkPixelRef** %33, align 8
  %35 = icmp eq %class.SkPixelRef* %34, null
  br i1 %35, label %36, label %92

36:                                               ; preds = %20, %32, %28
  %37 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #17
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %439, label %39

39:                                               ; preds = %36
  %40 = icmp ugt i64 %24, 1152921504606846975
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #15
  unreachable

43:                                               ; preds = %39
  %44 = shl i64 %23, 1
  %45 = tail call i8* @_Znwm(i64 %44) #16
  %46 = bitcast i8* %45 to %"struct.color_utils::Swatch"*
  %47 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %48 = bitcast %"struct.color_utils::Swatch"** %47 to i8**
  store i8* %45, i8** %48, align 8
  %49 = bitcast %"class.std::__1::vector.20"* %0 to i8**
  store i8* %45, i8** %49, align 8
  %50 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %46, i64 %24
  %51 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.color_utils::Swatch"* %50, %"struct.color_utils::Swatch"** %51, align 8
  %52 = shl nsw i64 %23, 1
  %53 = add i64 %52, -16
  %54 = lshr i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %43, %58
  %59 = phi %"struct.color_utils::Swatch"* [ %63, %58 ], [ %46, %43 ]
  %60 = phi i64 [ %64, %58 ], [ %56, %43 ]
  %61 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %59, i64 0, i32 0
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %59, i64 0, i32 1
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %59, i64 1
  %64 = add i64 %60, -1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %58, !llvm.loop !17

66:                                               ; preds = %58, %43
  %67 = phi %"struct.color_utils::Swatch"* [ %46, %43 ], [ %63, %58 ]
  %68 = icmp ult i64 %53, 112
  br i1 %68, label %89, label %69

69:                                               ; preds = %66, %69
  %70 = phi %"struct.color_utils::Swatch"* [ %87, %69 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 0, i32 1
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 1, i32 0
  store i32 0, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 1, i32 1
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 2, i32 0
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 2, i32 1
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 3, i32 0
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 3, i32 1
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 4, i32 0
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 4, i32 1
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 5, i32 0
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 5, i32 1
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 6, i32 0
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 6, i32 1
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 7, i32 0
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 7, i32 1
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %70, i64 8
  %88 = icmp eq %"struct.color_utils::Swatch"* %87, %50
  br i1 %88, label %89, label %69

89:                                               ; preds = %69, %66
  %90 = bitcast %"struct.color_utils::Swatch"** %47 to i64*
  %91 = ptrtoint %"struct.color_utils::Swatch"* %50 to i64
  store i64 %91, i64* %90, align 8
  br label %439

92:                                               ; preds = %32
  %93 = bitcast %"class.std::__1::vector.68"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #17
  %94 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %9, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %9, i64 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 24, i1 false) #17
  %97 = icmp eq i64 %23, 0
  br i1 %97, label %125, label %98

98:                                               ; preds = %92
  %99 = icmp ugt i64 %24, 256204778801521550
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = bitcast %"class.std::__1::vector.68"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #15
  unreachable

102:                                              ; preds = %98
  %103 = mul i64 %24, 72
  %104 = tail call i8* @_Znwm(i64 %103) #16
  %105 = bitcast i8* %104 to %"struct.color_utils::(anonymous namespace)::ColorBracket"*
  %106 = bitcast %"struct.color_utils::(anonymous namespace)::ColorBracket"** %95 to i8**
  store i8* %104, i8** %106, align 8
  %107 = bitcast %"class.std::__1::vector.68"* %9 to i8**
  store i8* %104, i8** %107, align 8
  %108 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %105, i64 %24
  store %"struct.color_utils::(anonymous namespace)::ColorBracket"* %108, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %96, align 8
  br label %109

109:                                              ; preds = %109, %102
  %110 = phi %"struct.color_utils::(anonymous namespace)::ColorBracket"* [ %120, %109 ], [ %105, %102 ]
  %111 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %110, i64 0, i32 0, i32 0
  store double -1.000000e+00, double* %111, align 8
  %112 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %110, i64 0, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %110, i64 0, i32 1, i32 0
  %114 = bitcast double* %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #17
  store double -1.000000e+00, double* %113, align 8
  %115 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %110, i64 0, i32 1, i32 1
  %116 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %110, i64 0, i32 2, i32 0
  %117 = bitcast double* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #17
  store double -1.000000e+00, double* %116, align 8
  %118 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %110, i64 0, i32 2, i32 1
  %119 = bitcast double* %118 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false) #17
  %120 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %110, i64 1
  %121 = icmp eq %"struct.color_utils::(anonymous namespace)::ColorBracket"* %120, %108
  br i1 %121, label %122, label %109

122:                                              ; preds = %109
  %123 = bitcast %"struct.color_utils::(anonymous namespace)::ColorBracket"** %95 to i64*
  %124 = ptrtoint %"struct.color_utils::(anonymous namespace)::ColorBracket"* %108 to i64
  store i64 %124, i64* %123, align 8
  br i1 %97, label %125, label %128

125:                                              ; preds = %183, %92, %122
  %126 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #17
  %127 = icmp eq %"class.gfx::Rect"* %3, null
  br i1 %127, label %188, label %186

128:                                              ; preds = %122, %183
  %129 = phi i64 [ %184, %183 ], [ 0, %122 ]
  %130 = load %"struct.color_utils::ColorProfile"*, %"struct.color_utils::ColorProfile"** %13, align 8
  %131 = getelementptr inbounds %"struct.color_utils::ColorProfile", %"struct.color_utils::ColorProfile"* %130, i64 %129, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp ult i32 %132, 4
  br i1 %133, label %134, label %156

134:                                              ; preds = %128
  %135 = sext i32 %132 to i64
  %136 = getelementptr inbounds [4 x double], [4 x double]* @switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE, i64 0, i64 %135
  %137 = bitcast double* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sext i32 %132 to i64
  %140 = getelementptr inbounds [4 x double], [4 x double]* @switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.1, i64 0, i64 %139
  %141 = bitcast double* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sext i32 %132 to i64
  %144 = getelementptr inbounds [4 x double], [4 x double]* @switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.2, i64 0, i64 %143
  %145 = bitcast double* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8
  %148 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %147, i64 %129, i32 0, i32 2
  %149 = bitcast double* %148 to i64*
  store i64 %138, i64* %149, align 8
  %150 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8
  %151 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %150, i64 %129, i32 1, i32 2
  %152 = bitcast double* %151 to i64*
  store i64 %142, i64* %152, align 8
  %153 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8
  %154 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %153, i64 %129, i32 2, i32 2
  %155 = bitcast double* %154 to i64*
  store i64 %146, i64* %155, align 8
  br label %156

156:                                              ; preds = %128, %134
  %157 = load %"struct.color_utils::ColorProfile"*, %"struct.color_utils::ColorProfile"** %13, align 8
  %158 = getelementptr inbounds %"struct.color_utils::ColorProfile", %"struct.color_utils::ColorProfile"* %157, i64 %129, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp ult i32 %159, 3
  br i1 %160, label %161, label %183

161:                                              ; preds = %156
  %162 = sext i32 %159 to i64
  %163 = getelementptr inbounds [3 x double], [3 x double]* @switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.3, i64 0, i64 %162
  %164 = bitcast double* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = sext i32 %159 to i64
  %167 = getelementptr inbounds [3 x double], [3 x double]* @switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.4, i64 0, i64 %166
  %168 = bitcast double* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sext i32 %159 to i64
  %171 = getelementptr inbounds [3 x double], [3 x double]* @switch.table._ZN11color_utils32CalculateProminentColorsOfBitmapERK8SkBitmapRKNSt3__16vectorINS_12ColorProfileENS3_9allocatorIS5_EEEEPN3gfx4RectEN4base17RepeatingCallbackIFbRKjEEE.5, i64 0, i64 %170
  %172 = bitcast double* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8
  %175 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %174, i64 %129, i32 0, i32 1
  %176 = bitcast double* %175 to i64*
  store i64 %165, i64* %176, align 8
  %177 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8
  %178 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %177, i64 %129, i32 1, i32 1
  %179 = bitcast double* %178 to i64*
  store i64 %169, i64* %179, align 8
  %180 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8
  %181 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %180, i64 %129, i32 2, i32 1
  %182 = bitcast double* %181 to i64*
  store i64 %173, i64* %182, align 8
  br label %183

183:                                              ; preds = %156, %161
  %184 = add nuw i64 %129, 1
  %185 = icmp ult i64 %184, %24
  br i1 %185, label %128, label %125

186:                                              ; preds = %125
  %187 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %126, i8* nonnull align 4 %187, i64 16, i1 false)
  br label %199

188:                                              ; preds = %125
  %189 = load i32, i32* %25, align 4
  %190 = load i32, i32* %29, align 4
  %191 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %191, align 4
  %192 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  store i32 0, i32* %192, align 4
  %193 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 0
  %194 = icmp sgt i32 %189, 0
  %195 = select i1 %194, i32 %189, i32 0
  store i32 %195, i32* %193, align 4
  %196 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 1
  %197 = icmp sgt i32 %190, 0
  %198 = select i1 %197, i32 %190, i32 0
  store i32 %198, i32* %196, align 4
  br label %199

199:                                              ; preds = %188, %186
  %200 = bitcast %"class.base::RepeatingCallback"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #17
  %201 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %201, align 8
  %203 = icmp eq %"class.base::internal::BindStateBase"* %202, null
  br i1 %203, label %204, label %211

204:                                              ; preds = %199
  %205 = tail call i8* @_Znwm(i64 48) #16, !noalias !18
  %206 = bitcast i8* %205 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %206, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, i32*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKjEJEEES5_E3RunEPNS0_13BindStateBaseES4_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbRKjEJEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !18
  %207 = getelementptr inbounds i8, i8* %205, i64 32
  %208 = bitcast i8* %207 to i64*
  store i64 ptrtoint (i1 (i32*)* @_ZN11color_utils12_GLOBAL__N_118IsInterestingColorERKj to i64), i64* %208, align 8, !noalias !18
  %209 = bitcast %"class.base::RepeatingCallback"* %12 to i8**
  store i8* %205, i8** %209, align 8, !alias.scope !18
  %210 = ptrtoint i8* %205 to i64
  br label %216

211:                                              ; preds = %199
  %212 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0
  %213 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %212, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %213) #17
  %214 = bitcast %"class.base::RepeatingCallback"* %12 to i64*
  %215 = load i64, i64* %214, align 8
  br label %216

216:                                              ; preds = %211, %204
  %217 = phi i64 [ %215, %211 ], [ %210, %204 ]
  %218 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %218, align 8
  %219 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %220 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %221 = bitcast %"class.base::RepeatingCallback"* %219 to i64*
  store i64 %217, i64* %221, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %220, align 8
  %222 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %222)
  %223 = bitcast %"class.std::__1::vector.20"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #17, !noalias !23
  %224 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %6, i64 0, i32 0, i32 0
  %225 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 -86, i64 24, i1 false) #17, !noalias !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 0, i64 16, i1 false) #17, !noalias !23
  %226 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %227 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %226, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %227) #17
  store i8 1, i8* %222, align 8, !noalias !23
  call void @_ZN11color_utils22CalculateColorSwatchesERK8SkBitmapmRKN3gfx4RectEN4absl8optionalIN4base17RepeatingCallbackIFbRKjEEEEE(%"class.std::__1::vector.20"* nonnull sret %6, %class.SkBitmap* dereferenceable(56) %1, i64 12, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.absl::optional"* nonnull %7) #17, !noalias !23
  %228 = load i8, i8* %222, align 8, !range !2, !noalias !23
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %216
  %231 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %231) #17
  store i8 0, i8* %222, align 8, !noalias !23
  br label %232

232:                                              ; preds = %230, %216
  %233 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %235 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %236 = bitcast %"struct.color_utils::(anonymous namespace)::ColorBracket"** %95 to i64*
  %237 = load i64, i64* %236, align 8, !noalias !23
  %238 = bitcast %"class.std::__1::vector.68"* %9 to i64*
  %239 = load i64, i64* %238, align 8, !noalias !23
  %240 = sub i64 %237, %239
  %241 = sdiv exact i64 %240, 72
  %242 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 24, i1 false) #17, !alias.scope !23
  %243 = icmp eq i64 %240, 0
  br i1 %243, label %295, label %244

244:                                              ; preds = %232
  %245 = icmp ugt i64 %241, 1152921504606846975
  br i1 %245, label %246, label %248

246:                                              ; preds = %244
  %247 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %247) #15
  unreachable

248:                                              ; preds = %244
  %249 = shl nsw i64 %241, 4
  %250 = call i8* @_Znwm(i64 %249) #16
  %251 = bitcast i8* %250 to %"struct.color_utils::Swatch"*
  %252 = bitcast %"struct.color_utils::Swatch"** %234 to i8**
  store i8* %250, i8** %252, align 8, !alias.scope !23
  %253 = bitcast %"class.std::__1::vector.20"* %0 to i8**
  store i8* %250, i8** %253, align 8, !alias.scope !23
  %254 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %251, i64 %241
  store %"struct.color_utils::Swatch"* %254, %"struct.color_utils::Swatch"** %235, align 8, !alias.scope !23
  %255 = shl nsw i64 %241, 4
  %256 = add nsw i64 %255, -16
  %257 = lshr exact i64 %256, 4
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 7
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %248, %261
  %262 = phi %"struct.color_utils::Swatch"* [ %266, %261 ], [ %251, %248 ]
  %263 = phi i64 [ %267, %261 ], [ %259, %248 ]
  %264 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %262, i64 0, i32 0
  store i32 0, i32* %264, align 8, !noalias !23
  %265 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %262, i64 0, i32 1
  store i64 0, i64* %265, align 8, !noalias !23
  %266 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %262, i64 1
  %267 = add i64 %263, -1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %261, !llvm.loop !26

269:                                              ; preds = %261, %248
  %270 = phi %"struct.color_utils::Swatch"* [ %251, %248 ], [ %266, %261 ]
  %271 = icmp ult i64 %256, 112
  br i1 %271, label %292, label %272

272:                                              ; preds = %269, %272
  %273 = phi %"struct.color_utils::Swatch"* [ %290, %272 ], [ %270, %269 ]
  %274 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 0, i32 0
  store i32 0, i32* %274, align 8, !noalias !23
  %275 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 0, i32 1
  store i64 0, i64* %275, align 8, !noalias !23
  %276 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 1, i32 0
  store i32 0, i32* %276, align 8, !noalias !23
  %277 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 1, i32 1
  store i64 0, i64* %277, align 8, !noalias !23
  %278 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 2, i32 0
  store i32 0, i32* %278, align 8, !noalias !23
  %279 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 2, i32 1
  store i64 0, i64* %279, align 8, !noalias !23
  %280 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 3, i32 0
  store i32 0, i32* %280, align 8, !noalias !23
  %281 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 3, i32 1
  store i64 0, i64* %281, align 8, !noalias !23
  %282 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 4, i32 0
  store i32 0, i32* %282, align 8, !noalias !23
  %283 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 4, i32 1
  store i64 0, i64* %283, align 8, !noalias !23
  %284 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 5, i32 0
  store i32 0, i32* %284, align 8, !noalias !23
  %285 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 5, i32 1
  store i64 0, i64* %285, align 8, !noalias !23
  %286 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 6, i32 0
  store i32 0, i32* %286, align 8, !noalias !23
  %287 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 6, i32 1
  store i64 0, i64* %287, align 8, !noalias !23
  %288 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 7, i32 0
  store i32 0, i32* %288, align 8, !noalias !23
  %289 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 7, i32 1
  store i64 0, i64* %289, align 8, !noalias !23
  %290 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %273, i64 8
  %291 = icmp eq %"struct.color_utils::Swatch"* %290, %254
  br i1 %291, label %292, label %272

292:                                              ; preds = %272, %269
  %293 = bitcast %"struct.color_utils::Swatch"** %234 to i64*
  %294 = ptrtoint %"struct.color_utils::Swatch"* %254 to i64
  store i64 %294, i64* %293, align 8, !alias.scope !23
  br label %295

295:                                              ; preds = %292, %232
  %296 = load %"struct.color_utils::Swatch"*, %"struct.color_utils::Swatch"** %224, align 8, !noalias !23
  %297 = ptrtoint %"struct.color_utils::Swatch"* %296 to i64
  %298 = load %"struct.color_utils::Swatch"*, %"struct.color_utils::Swatch"** %225, align 8, !noalias !23
  %299 = icmp eq %"struct.color_utils::Swatch"* %296, %298
  br i1 %299, label %421, label %300

300:                                              ; preds = %295
  %301 = getelementptr %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %298, i64 -1, i32 0
  %302 = ptrtoint i32* %301 to i64
  %303 = sub i64 %302, %297
  %304 = lshr i64 %303, 4
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp ult i64 %303, 112
  br i1 %307, label %310, label %308

308:                                              ; preds = %300
  %309 = sub nsw i64 %305, %306
  br label %334

310:                                              ; preds = %334, %300
  %311 = phi i64 [ undef, %300 ], [ %369, %334 ]
  %312 = phi %"struct.color_utils::Swatch"* [ %296, %300 ], [ %370, %334 ]
  %313 = phi i64 [ 0, %300 ], [ %369, %334 ]
  %314 = icmp eq i64 %306, 0
  br i1 %314, label %326, label %315

315:                                              ; preds = %310, %315
  %316 = phi %"struct.color_utils::Swatch"* [ %323, %315 ], [ %312, %310 ]
  %317 = phi i64 [ %322, %315 ], [ %313, %310 ]
  %318 = phi i64 [ %324, %315 ], [ %306, %310 ]
  %319 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %316, i64 0, i32 1
  %320 = load i64, i64* %319, align 8
  %321 = icmp ult i64 %317, %320
  %322 = select i1 %321, i64 %320, i64 %317
  %323 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %316, i64 1
  %324 = add i64 %318, -1
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %315, !llvm.loop !27

326:                                              ; preds = %315, %310
  %327 = phi i64 [ %311, %310 ], [ %322, %315 ]
  %328 = icmp eq i64 %237, %239
  br i1 %328, label %421, label %329

329:                                              ; preds = %326
  %330 = bitcast %"struct.color_utils::HSL"* %8 to i8*
  %331 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %8, i64 0, i32 1
  %332 = uitofp i64 %327 to float
  %333 = bitcast double* %331 to <2 x double>*
  br label %373

334:                                              ; preds = %334, %308
  %335 = phi %"struct.color_utils::Swatch"* [ %296, %308 ], [ %370, %334 ]
  %336 = phi i64 [ 0, %308 ], [ %369, %334 ]
  %337 = phi i64 [ %309, %308 ], [ %371, %334 ]
  %338 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 0, i32 1
  %339 = load i64, i64* %338, align 8
  %340 = icmp ult i64 %336, %339
  %341 = select i1 %340, i64 %339, i64 %336
  %342 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 1, i32 1
  %343 = load i64, i64* %342, align 8
  %344 = icmp ult i64 %341, %343
  %345 = select i1 %344, i64 %343, i64 %341
  %346 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 2, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = icmp ult i64 %345, %347
  %349 = select i1 %348, i64 %347, i64 %345
  %350 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 3, i32 1
  %351 = load i64, i64* %350, align 8
  %352 = icmp ult i64 %349, %351
  %353 = select i1 %352, i64 %351, i64 %349
  %354 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 4, i32 1
  %355 = load i64, i64* %354, align 8
  %356 = icmp ult i64 %353, %355
  %357 = select i1 %356, i64 %355, i64 %353
  %358 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 5, i32 1
  %359 = load i64, i64* %358, align 8
  %360 = icmp ult i64 %357, %359
  %361 = select i1 %360, i64 %359, i64 %357
  %362 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 6, i32 1
  %363 = load i64, i64* %362, align 8
  %364 = icmp ult i64 %361, %363
  %365 = select i1 %364, i64 %363, i64 %361
  %366 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 7, i32 1
  %367 = load i64, i64* %366, align 8
  %368 = icmp ult i64 %365, %367
  %369 = select i1 %368, i64 %367, i64 %365
  %370 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %335, i64 8
  %371 = add i64 %337, -8
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %310, label %334

373:                                              ; preds = %375, %329
  %374 = phi i64 [ 0, %329 ], [ %378, %375 ]
  br label %382

375:                                              ; preds = %417
  %376 = load i64, i64* %236, align 8, !noalias !23
  %377 = load i64, i64* %238, align 8, !noalias !23
  %378 = add nuw i64 %374, 1
  %379 = sub i64 %376, %377
  %380 = sdiv exact i64 %379, 72
  %381 = icmp ult i64 %378, %380
  br i1 %381, label %373, label %421

382:                                              ; preds = %417, %373
  %383 = phi double [ %418, %417 ], [ 0.000000e+00, %373 ]
  %384 = phi %"struct.color_utils::Swatch"* [ %419, %417 ], [ %296, %373 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %330) #17, !noalias !23
  %385 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %384, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %330, i8 -1, i64 24, i1 false) #17, !noalias !23
  %386 = load i32, i32* %385, align 8
  call void @_ZN11color_utils12SkColorToHSLEjPNS_3HSLE(i32 %386, %"struct.color_utils::HSL"* nonnull %8) #17
  %387 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8, !noalias !23
  %388 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %387, i64 %374, i32 0
  %389 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %387, i64 %374, i32 1
  %390 = call zeroext i1 @_ZN11color_utils16IsWithinHSLRangeERKNS_3HSLES2_S2_(%"struct.color_utils::HSL"* nonnull dereferenceable(24) %8, %"struct.color_utils::HSL"* dereferenceable(24) %388, %"struct.color_utils::HSL"* dereferenceable(24) %389) #17
  br i1 %390, label %391, label %417

391:                                              ; preds = %382
  %392 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8, !noalias !23
  %393 = getelementptr inbounds %"struct.color_utils::(anonymous namespace)::ColorBracket", %"struct.color_utils::(anonymous namespace)::ColorBracket"* %392, i64 %374, i32 2, i32 1
  %394 = load <2 x double>, <2 x double>* %333, align 8, !noalias !23
  %395 = bitcast double* %393 to <2 x double>*
  %396 = load <2 x double>, <2 x double>* %395, align 8
  %397 = fsub <2 x double> %394, %396
  %398 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %397)
  %399 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %398
  %400 = fmul <2 x double> %399, <double 3.000000e+00, double 6.500000e+00>
  %401 = extractelement <2 x double> %400, i32 0
  %402 = extractelement <2 x double> %400, i32 1
  %403 = fadd double %401, %402
  %404 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %384, i64 0, i32 1
  %405 = load i64, i64* %404, align 8
  %406 = uitofp i64 %405 to float
  %407 = fdiv float %406, %332
  %408 = fpext float %407 to double
  %409 = fmul double %408, 5.000000e-01
  %410 = fadd double %403, %409
  %411 = fcmp ogt double %410, %383
  br i1 %411, label %412, label %417

412:                                              ; preds = %391
  %413 = load %"struct.color_utils::Swatch"*, %"struct.color_utils::Swatch"** %233, align 8, !alias.scope !23
  %414 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %413, i64 %374
  %415 = bitcast %"struct.color_utils::Swatch"* %414 to i8*
  %416 = bitcast %"struct.color_utils::Swatch"* %384 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %415, i8* align 8 %416, i64 16, i1 false) #17
  br label %417

417:                                              ; preds = %412, %391, %382
  %418 = phi double [ %383, %382 ], [ %410, %412 ], [ %383, %391 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %330) #17, !noalias !23
  %419 = getelementptr inbounds %"struct.color_utils::Swatch", %"struct.color_utils::Swatch"* %384, i64 1
  %420 = icmp eq %"struct.color_utils::Swatch"* %419, %298
  br i1 %420, label %375, label %382

421:                                              ; preds = %375, %326, %295
  %422 = icmp eq %"struct.color_utils::Swatch"* %296, null
  br i1 %422, label %426, label %423

423:                                              ; preds = %421
  %424 = bitcast %"struct.color_utils::Swatch"** %225 to i64*
  store i64 %297, i64* %424, align 8, !noalias !23
  %425 = bitcast %"struct.color_utils::Swatch"* %296 to i8*
  call void @_ZdlPv(i8* %425) #16
  br label %426

426:                                              ; preds = %421, %423
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #17, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222)
  %427 = load i8, i8* %218, align 8, !range !2
  %428 = icmp eq i8 %427, 0
  br i1 %428, label %431, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %430) #17
  store i8 0, i8* %218, align 8
  br label %431

431:                                              ; preds = %426, %429
  %432 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %432) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #17
  %433 = load %"struct.color_utils::(anonymous namespace)::ColorBracket"*, %"struct.color_utils::(anonymous namespace)::ColorBracket"** %94, align 8
  %434 = icmp eq %"struct.color_utils::(anonymous namespace)::ColorBracket"* %433, null
  br i1 %434, label %438, label %435

435:                                              ; preds = %431
  %436 = ptrtoint %"struct.color_utils::(anonymous namespace)::ColorBracket"* %433 to i64
  store i64 %436, i64* %236, align 8
  %437 = bitcast %"struct.color_utils::(anonymous namespace)::ColorBracket"* %433 to i8*
  call void @_ZdlPv(i8* %437) #16
  br label %438

438:                                              ; preds = %431, %435
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #17
  br label %439

439:                                              ; preds = %89, %36, %438, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN11color_utils12_GLOBAL__N_118IsInterestingColorERKj(i32* nocapture readonly dereferenceable(4)) #4 {
  %2 = alloca %"struct.color_utils::HSL", align 8
  %3 = load i32, i32* %0, align 4
  %4 = lshr i32 %3, 16
  %5 = and i32 %4, 255
  %6 = lshr i32 %3, 8
  %7 = and i32 %6, 255
  %8 = and i32 %3, 255
  %9 = add nuw nsw i32 %7, %8
  %10 = add nuw nsw i32 %9, %5
  %11 = uitofp i32 %10 to float
  %12 = fdiv float %11, 3.000000e+00
  %13 = fcmp oge float %12, 2.370000e+02
  %14 = fcmp ole float %12, 2.200000e+01
  %15 = or i1 %13, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %1
  %17 = bitcast %"struct.color_utils::HSL"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %2, i64 0, i32 0
  %19 = bitcast %"struct.color_utils::HSL"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -1, i64 24, i1 false)
  call void @_ZN11color_utils12SkColorToHSLEjPNS_3HSLE(i32 %3, %"struct.color_utils::HSL"* nonnull %2) #17
  %20 = load double, double* %18, align 8
  %21 = fcmp ult double %20, 0x3F9CAC0840000000
  %22 = fcmp ugt double %20, 0x3FB99999A0000000
  %23 = or i1 %21, %22
  br i1 %23, label %28, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %2, i64 0, i32 1
  %26 = load double, double* %25, align 8
  %27 = fcmp ugt double %26, 0x3FEA3D70A0000000
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i1 [ true, %16 ], [ %27, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  br label %30

30:                                               ; preds = %1, %28
  %31 = phi i1 [ %29, %28 ], [ false, %1 ]
  ret i1 %31
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11color_utils22ComputeColorCovarianceERK8SkBitmap(%"class.gfx::Matrix3F"* noalias sret, %class.SkBitmap* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 {
  %3 = bitcast %"class.gfx::Matrix3F"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 -1, i64 36, i1 false)
  tail call void @_ZN3gfx8Matrix3F5ZerosEv(%"class.gfx::Matrix3F"* sret %0) #17
  %4 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %175, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  br label %18

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  br label %89

18:                                               ; preds = %111, %11
  %19 = phi i32 [ %13, %11 ], [ %113, %111 ]
  %20 = phi i64 [ 0, %11 ], [ %114, %111 ]
  %21 = phi i64 [ 0, %11 ], [ %115, %111 ]
  %22 = phi i64 [ 0, %11 ], [ %116, %111 ]
  %23 = phi i64 [ 0, %11 ], [ %117, %111 ]
  %24 = phi i64 [ 0, %11 ], [ %118, %111 ]
  %25 = phi i64 [ 0, %11 ], [ %119, %111 ]
  %26 = phi i64 [ 0, %11 ], [ %120, %111 ]
  %27 = phi i64 [ 0, %11 ], [ %121, %111 ]
  %28 = phi i64 [ 0, %11 ], [ %122, %111 ]
  %29 = phi i32 [ %9, %11 ], [ %112, %111 ]
  %30 = mul nsw i32 %19, %29
  %31 = sitofp i64 %20 to double
  %32 = sitofp i32 %30 to double
  %33 = fdiv double %31, %32
  %34 = mul nsw i64 %28, %28
  %35 = sitofp i64 %34 to double
  %36 = fdiv double %35, %32
  %37 = fdiv double %36, %32
  %38 = fsub double %33, %37
  %39 = fptrunc double %38 to float
  %40 = sitofp i64 %23 to double
  %41 = fdiv double %40, %32
  %42 = mul nsw i64 %28, %27
  %43 = sitofp i64 %42 to double
  %44 = fdiv double %43, %32
  %45 = fdiv double %44, %32
  %46 = fsub double %41, %45
  %47 = fptrunc double %46 to float
  %48 = sitofp i64 %24 to double
  %49 = fdiv double %48, %32
  %50 = mul nsw i64 %28, %26
  %51 = sitofp i64 %50 to double
  %52 = fdiv double %51, %32
  %53 = fdiv double %52, %32
  %54 = fsub double %49, %53
  %55 = fptrunc double %54 to float
  %56 = sitofp i64 %21 to double
  %57 = fdiv double %56, %32
  %58 = mul nsw i64 %27, %27
  %59 = sitofp i64 %58 to double
  %60 = fdiv double %59, %32
  %61 = fdiv double %60, %32
  %62 = fsub double %57, %61
  %63 = fptrunc double %62 to float
  %64 = sitofp i64 %25 to double
  %65 = fdiv double %64, %32
  %66 = mul nsw i64 %27, %26
  %67 = sitofp i64 %66 to double
  %68 = fdiv double %67, %32
  %69 = fdiv double %68, %32
  %70 = fsub double %65, %69
  %71 = fptrunc double %70 to float
  %72 = sitofp i64 %22 to double
  %73 = fdiv double %72, %32
  %74 = mul nsw i64 %26, %26
  %75 = sitofp i64 %74 to double
  %76 = fdiv double %75, %32
  %77 = fdiv double %76, %32
  %78 = fsub double %73, %77
  %79 = fptrunc double %78 to float
  %80 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 0
  store float %39, float* %80, align 4
  %81 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 1
  store float %47, float* %81, align 4
  %82 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 2
  store float %55, float* %82, align 4
  %83 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 3
  store float %47, float* %83, align 4
  %84 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  store float %63, float* %84, align 4
  %85 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 5
  store float %71, float* %85, align 4
  %86 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 6
  store float %55, float* %86, align 4
  %87 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 7
  store float %71, float* %87, align 4
  %88 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  store float %79, float* %88, align 4
  br label %175

89:                                               ; preds = %126, %14
  %90 = phi i32 [ %9, %14 ], [ %112, %126 ]
  %91 = phi i32 [ %17, %14 ], [ %113, %126 ]
  %92 = phi i8* [ %5, %14 ], [ %127, %126 ]
  %93 = phi i64 [ 0, %14 ], [ %123, %126 ]
  %94 = phi i64 [ 0, %14 ], [ %122, %126 ]
  %95 = phi i64 [ 0, %14 ], [ %121, %126 ]
  %96 = phi i64 [ 0, %14 ], [ %120, %126 ]
  %97 = phi i64 [ 0, %14 ], [ %119, %126 ]
  %98 = phi i64 [ 0, %14 ], [ %118, %126 ]
  %99 = phi i64 [ 0, %14 ], [ %117, %126 ]
  %100 = phi i64 [ 0, %14 ], [ %116, %126 ]
  %101 = phi i64 [ 0, %14 ], [ %115, %126 ]
  %102 = phi i64 [ 0, %14 ], [ %114, %126 ]
  %103 = icmp sgt i32 %91, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %89
  %105 = load i64, i64* %15, align 8
  %106 = mul i64 %105, %93
  %107 = getelementptr inbounds i8, i8* %92, i64 %106
  %108 = bitcast i8* %107 to i32*
  br label %128

109:                                              ; preds = %128
  %110 = load i32, i32* %8, align 4
  br label %111

111:                                              ; preds = %109, %89
  %112 = phi i32 [ %90, %89 ], [ %110, %109 ]
  %113 = phi i32 [ %91, %89 ], [ %173, %109 ]
  %114 = phi i64 [ %102, %89 ], [ %155, %109 ]
  %115 = phi i64 [ %101, %89 ], [ %158, %109 ]
  %116 = phi i64 [ %100, %89 ], [ %161, %109 ]
  %117 = phi i64 [ %99, %89 ], [ %164, %109 ]
  %118 = phi i64 [ %98, %89 ], [ %167, %109 ]
  %119 = phi i64 [ %97, %89 ], [ %170, %109 ]
  %120 = phi i64 [ %96, %89 ], [ %152, %109 ]
  %121 = phi i64 [ %95, %89 ], [ %150, %109 ]
  %122 = phi i64 [ %94, %89 ], [ %148, %109 ]
  %123 = add nuw nsw i64 %93, 1
  %124 = sext i32 %112 to i64
  %125 = icmp slt i64 %123, %124
  br i1 %125, label %126, label %18

126:                                              ; preds = %111
  %127 = load i8*, i8** %4, align 8
  br label %89

128:                                              ; preds = %104, %128
  %129 = phi i64 [ %148, %128 ], [ %94, %104 ]
  %130 = phi i64 [ %150, %128 ], [ %95, %104 ]
  %131 = phi i64 [ %152, %128 ], [ %96, %104 ]
  %132 = phi i32 [ %171, %128 ], [ 0, %104 ]
  %133 = phi i32* [ %172, %128 ], [ %108, %104 ]
  %134 = phi i64 [ %170, %128 ], [ %97, %104 ]
  %135 = phi i64 [ %167, %128 ], [ %98, %104 ]
  %136 = phi i64 [ %164, %128 ], [ %99, %104 ]
  %137 = phi i64 [ %161, %128 ], [ %100, %104 ]
  %138 = phi i64 [ %158, %128 ], [ %101, %104 ]
  %139 = phi i64 [ %155, %128 ], [ %102, %104 ]
  %140 = load i32, i32* %133, align 4
  %141 = tail call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %140) #17
  %142 = lshr i32 %141, 16
  %143 = and i32 %142, 255
  %144 = lshr i32 %141, 8
  %145 = and i32 %144, 255
  %146 = and i32 %141, 255
  %147 = zext i32 %143 to i64
  %148 = add nsw i64 %129, %147
  %149 = zext i32 %145 to i64
  %150 = add nsw i64 %130, %149
  %151 = zext i32 %146 to i64
  %152 = add nsw i64 %131, %151
  %153 = mul nuw nsw i32 %143, %143
  %154 = zext i32 %153 to i64
  %155 = add nsw i64 %139, %154
  %156 = mul nuw nsw i32 %145, %145
  %157 = zext i32 %156 to i64
  %158 = add nsw i64 %138, %157
  %159 = mul nuw nsw i32 %146, %146
  %160 = zext i32 %159 to i64
  %161 = add nsw i64 %137, %160
  %162 = mul nuw nsw i32 %143, %145
  %163 = zext i32 %162 to i64
  %164 = add nsw i64 %136, %163
  %165 = mul nuw nsw i32 %143, %146
  %166 = zext i32 %165 to i64
  %167 = add nsw i64 %135, %166
  %168 = mul nuw nsw i32 %145, %146
  %169 = zext i32 %168 to i64
  %170 = add nsw i64 %134, %169
  %171 = add nuw nsw i32 %132, 1
  %172 = getelementptr inbounds i32, i32* %133, i64 1
  %173 = load i32, i32* %16, align 4
  %174 = icmp slt i32 %171, %173
  br i1 %174, label %128, label %109

175:                                              ; preds = %18, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare void @_ZN3gfx8Matrix3F5ZerosEv(%"class.gfx::Matrix3F"* sret) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11color_utils19ApplyColorReductionERK8SkBitmapRKN3gfx9Vector3dFEbPS0_(%class.SkBitmap* nocapture readonly dereferenceable(56), %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12), i1 zeroext, %class.SkBitmap* nocapture readonly) local_unnamed_addr #4 {
  %5 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  br i1 %2, label %13, label %84

13:                                               ; preds = %4
  %14 = icmp sgt i32 %12, 0
  br i1 %14, label %15, label %75

15:                                               ; preds = %13
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  br label %22

20:                                               ; preds = %36
  %21 = fcmp ogt float %40, %38
  br i1 %21, label %72, label %75

22:                                               ; preds = %15, %36
  %23 = phi i32 [ %12, %15 ], [ %37, %36 ]
  %24 = phi float [ 0x47EFFFFFE0000000, %15 ], [ %38, %36 ]
  %25 = phi i32 [ %19, %15 ], [ %39, %36 ]
  %26 = phi i64 [ 0, %15 ], [ %41, %36 ]
  %27 = phi float [ 0x3810000000000000, %15 ], [ %40, %36 ]
  %28 = load i8*, i8** %16, align 8
  %29 = load i64, i64* %17, align 8
  %30 = mul i64 %29, %26
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = bitcast i8* %31 to i32*
  %33 = icmp sgt i32 %25, 0
  br i1 %33, label %44, label %36

34:                                               ; preds = %44
  %35 = load i32, i32* %11, align 4
  br label %36

36:                                               ; preds = %34, %22
  %37 = phi i32 [ %23, %22 ], [ %35, %34 ]
  %38 = phi float [ %24, %22 ], [ %67, %34 ]
  %39 = phi i32 [ %25, %22 ], [ %69, %34 ]
  %40 = phi float [ %27, %22 ], [ %65, %34 ]
  %41 = add nuw nsw i64 %26, 1
  %42 = sext i32 %37 to i64
  %43 = icmp slt i64 %41, %42
  br i1 %43, label %22, label %20

44:                                               ; preds = %22, %44
  %45 = phi float [ %67, %44 ], [ %24, %22 ]
  %46 = phi i64 [ %68, %44 ], [ 0, %22 ]
  %47 = phi float [ %65, %44 ], [ %27, %22 ]
  %48 = getelementptr inbounds i32, i32* %32, i64 %46
  %49 = load i32, i32* %48, align 4
  %50 = tail call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %49) #17
  %51 = lshr i32 %50, 16
  %52 = lshr i32 %50, 8
  %53 = and i32 %51, 255
  %54 = sitofp i32 %53 to float
  %55 = fmul float %6, %54
  %56 = and i32 %52, 255
  %57 = sitofp i32 %56 to float
  %58 = fmul float %8, %57
  %59 = fadd float %55, %58
  %60 = and i32 %50, 255
  %61 = sitofp i32 %60 to float
  %62 = fmul float %10, %61
  %63 = fadd float %62, %59
  %64 = fcmp olt float %47, %63
  %65 = select i1 %64, float %63, float %47
  %66 = fcmp olt float %63, %45
  %67 = select i1 %66, float %63, float %45
  %68 = add nuw nsw i64 %46, 1
  %69 = load i32, i32* %18, align 4
  %70 = sext i32 %69 to i64
  %71 = icmp slt i64 %68, %70
  br i1 %71, label %44, label %34

72:                                               ; preds = %20
  %73 = fsub float %40, %38
  %74 = fdiv float 2.550000e+02, %73
  br label %75

75:                                               ; preds = %13, %72, %20
  %76 = phi float [ %38, %72 ], [ %38, %20 ], [ 0x47EFFFFFE0000000, %13 ]
  %77 = phi i32 [ %37, %72 ], [ %37, %20 ], [ %12, %13 ]
  %78 = phi float [ %74, %72 ], [ 0.000000e+00, %20 ], [ 0.000000e+00, %13 ]
  %79 = fmul float %76, %78
  %80 = fsub float -0.000000e+00, %79
  %81 = fmul float %6, %78
  %82 = fmul float %8, %78
  %83 = fmul float %10, %78
  br label %84

84:                                               ; preds = %4, %75
  %85 = phi i32 [ %77, %75 ], [ %12, %4 ]
  %86 = phi float [ %83, %75 ], [ %10, %4 ]
  %87 = phi float [ %82, %75 ], [ %8, %4 ]
  %88 = phi float [ %81, %75 ], [ %6, %4 ]
  %89 = phi float [ %80, %75 ], [ 0.000000e+00, %4 ]
  %90 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %91 = icmp sgt i32 %85, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %84
  %93 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %95 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  br label %100

99:                                               ; preds = %116, %84
  ret i1 true

100:                                              ; preds = %92, %116
  %101 = phi i32 [ %85, %92 ], [ %117, %116 ]
  %102 = phi i32 [ %98, %92 ], [ %118, %116 ]
  %103 = phi i64 [ 0, %92 ], [ %119, %116 ]
  %104 = load i8*, i8** %93, align 8
  %105 = load i64, i64* %94, align 8
  %106 = mul i64 %105, %103
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  %108 = bitcast i8* %107 to i32*
  %109 = load i8*, i8** %95, align 8
  %110 = load i64, i64* %96, align 8
  %111 = mul i64 %110, %103
  %112 = getelementptr inbounds i8, i8* %109, i64 %111
  %113 = icmp sgt i32 %102, 0
  br i1 %113, label %122, label %116

114:                                              ; preds = %122
  %115 = load i32, i32* %90, align 4
  br label %116

116:                                              ; preds = %114, %100
  %117 = phi i32 [ %115, %114 ], [ %101, %100 ]
  %118 = phi i32 [ %148, %114 ], [ %102, %100 ]
  %119 = add nuw nsw i64 %103, 1
  %120 = sext i32 %117 to i64
  %121 = icmp slt i64 %119, %120
  br i1 %121, label %100, label %99

122:                                              ; preds = %100, %122
  %123 = phi i64 [ %147, %122 ], [ 0, %100 ]
  %124 = getelementptr inbounds i32, i32* %108, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = tail call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %125) #17
  %127 = lshr i32 %126, 16
  %128 = lshr i32 %126, 8
  %129 = and i32 %127, 255
  %130 = sitofp i32 %129 to float
  %131 = fmul float %88, %130
  %132 = fadd float %89, %131
  %133 = and i32 %128, 255
  %134 = sitofp i32 %133 to float
  %135 = fmul float %87, %134
  %136 = fadd float %135, %132
  %137 = and i32 %126, 255
  %138 = sitofp i32 %137 to float
  %139 = fmul float %86, %138
  %140 = fadd float %139, %136
  %141 = fcmp olt float %140, 0.000000e+00
  %142 = select i1 %141, float 0.000000e+00, float %140
  %143 = fcmp ogt float %142, 2.550000e+02
  %144 = select i1 %143, float 2.550000e+02, float %142
  %145 = fptoui float %144 to i8
  %146 = getelementptr inbounds i8, i8* %112, i64 %123
  store i8 %145, i8* %146, align 1
  %147 = add nuw nsw i64 %123, 1
  %148 = load i32, i32* %97, align 4
  %149 = sext i32 %148 to i64
  %150 = icmp slt i64 %147, %149
  br i1 %150, label %122, label %114
}

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap*, i32, i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEvT0_S7_T_(i32*, i32*, %class.anon* readonly dereferenceable(4)) unnamed_addr #4 {
  %4 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %405, %3
  %6 = phi i32* [ %1, %3 ], [ %369, %405 ]
  %7 = phi i32* [ %0, %3 ], [ %15, %405 ]
  %8 = ptrtoint i32* %6 to i64
  %9 = getelementptr inbounds i32, i32* %6, i64 -1
  %10 = getelementptr inbounds i32, i32* %6, i64 -2
  %11 = ptrtoint i32* %6 to i64
  br label %12

12:                                               ; preds = %414, %5
  %13 = phi i32* [ %7, %5 ], [ %415, %414 ]
  br label %14

14:                                               ; preds = %276, %12
  %15 = phi i32* [ %13, %12 ], [ %238, %276 ]
  %16 = ptrtoint i32* %15 to i64
  %17 = sub i64 %8, %16
  %18 = ashr exact i64 %17, 2
  switch i64 %18, label %60 [
    i64 0, label %418
    i64 1, label %418
    i64 2, label %19
    i64 3, label %45
    i64 4, label %49
    i64 5, label %54
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds i32, i32* %6, i64 -1
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %15, align 4
  %23 = load i32, i32* %4, align 4
  switch i32 %23, label %34 [
    i32 0, label %38
    i32 1, label %24
    i32 2, label %30
  ]

24:                                               ; preds = %19
  %25 = lshr i32 %21, 8
  %26 = and i32 %25, 255
  %27 = lshr i32 %22, 8
  %28 = and i32 %27, 255
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %44, label %418

30:                                               ; preds = %19
  %31 = and i32 %21, 255
  %32 = and i32 %22, 255
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %44, label %418

34:                                               ; preds = %19
  %35 = and i32 %21, 255
  %36 = and i32 %22, 255
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %44, label %418

38:                                               ; preds = %19
  %39 = lshr i32 %21, 16
  %40 = and i32 %39, 255
  %41 = lshr i32 %22, 16
  %42 = and i32 %41, 255
  %43 = icmp ult i32 %40, %42
  br i1 %43, label %44, label %418

44:                                               ; preds = %24, %30, %34, %38
  store i32 %21, i32* %15, align 4
  store i32 %22, i32* %20, align 4
  br label %418

45:                                               ; preds = %14
  %46 = getelementptr inbounds i32, i32* %15, i64 1
  %47 = getelementptr inbounds i32, i32* %6, i64 -1
  %48 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_T_(i32* %15, i32* %46, i32* %47, %class.anon* dereferenceable(4) %2)
  br label %418

49:                                               ; preds = %14
  %50 = getelementptr inbounds i32, i32* %15, i64 1
  %51 = getelementptr inbounds i32, i32* %15, i64 2
  %52 = getelementptr inbounds i32, i32* %6, i64 -1
  %53 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_T_(i32* %15, i32* %50, i32* %51, i32* %52, %class.anon* dereferenceable(4) %2)
  br label %418

54:                                               ; preds = %14
  %55 = getelementptr inbounds i32, i32* %15, i64 1
  %56 = getelementptr inbounds i32, i32* %15, i64 2
  %57 = getelementptr inbounds i32, i32* %15, i64 3
  %58 = getelementptr inbounds i32, i32* %6, i64 -1
  %59 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_S7_T_(i32* %15, i32* %55, i32* %56, i32* %57, i32* %58, %class.anon* dereferenceable(4) %2)
  br label %418

60:                                               ; preds = %14
  %61 = icmp slt i64 %17, 124
  br i1 %61, label %62, label %127

62:                                               ; preds = %60
  %63 = getelementptr inbounds i32, i32* %15, i64 2
  %64 = getelementptr inbounds i32, i32* %15, i64 1
  %65 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_T_(i32* %15, i32* %64, i32* %63, %class.anon* dereferenceable(4) %2) #17
  %66 = getelementptr inbounds i32, i32* %15, i64 3
  %67 = icmp eq i32* %66, %6
  br i1 %67, label %418, label %68

68:                                               ; preds = %62, %124
  %69 = phi i32* [ %125, %124 ], [ %66, %62 ]
  %70 = phi i32* [ %69, %124 ], [ %63, %62 ]
  %71 = load i32, i32* %69, align 4
  %72 = load i32, i32* %70, align 4
  %73 = load i32, i32* %4, align 4
  switch i32 %73, label %84 [
    i32 0, label %88
    i32 1, label %74
    i32 2, label %80
  ]

74:                                               ; preds = %68
  %75 = lshr i32 %71, 8
  %76 = and i32 %75, 255
  %77 = lshr i32 %72, 8
  %78 = and i32 %77, 255
  %79 = icmp ult i32 %76, %78
  br i1 %79, label %94, label %124

80:                                               ; preds = %68
  %81 = and i32 %71, 255
  %82 = and i32 %72, 255
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %94, label %124

84:                                               ; preds = %68
  %85 = and i32 %71, 255
  %86 = and i32 %72, 255
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %94, label %124

88:                                               ; preds = %68
  %89 = lshr i32 %71, 16
  %90 = and i32 %89, 255
  %91 = lshr i32 %72, 16
  %92 = and i32 %91, 255
  %93 = icmp ult i32 %90, %92
  br i1 %93, label %94, label %124

94:                                               ; preds = %88, %84, %80, %74
  %95 = and i32 %71, 255
  %96 = lshr i32 %71, 8
  %97 = and i32 %96, 255
  %98 = lshr i32 %71, 16
  %99 = and i32 %98, 255
  store i32 %72, i32* %69, align 4
  %100 = icmp eq i32* %70, %15
  br i1 %100, label %122, label %101

101:                                              ; preds = %94, %120
  %102 = phi i32* [ %103, %120 ], [ %70, %94 ]
  %103 = getelementptr inbounds i32, i32* %102, i64 -1
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* %4, align 4
  switch i32 %105, label %113 [
    i32 0, label %116
    i32 1, label %106
    i32 2, label %110
  ]

106:                                              ; preds = %101
  %107 = lshr i32 %104, 8
  %108 = and i32 %107, 255
  %109 = icmp ult i32 %97, %108
  br i1 %109, label %120, label %122

110:                                              ; preds = %101
  %111 = and i32 %104, 255
  %112 = icmp ult i32 %95, %111
  br i1 %112, label %120, label %122

113:                                              ; preds = %101
  %114 = and i32 %104, 255
  %115 = icmp ult i32 %95, %114
  br i1 %115, label %120, label %122

116:                                              ; preds = %101
  %117 = lshr i32 %104, 16
  %118 = and i32 %117, 255
  %119 = icmp ult i32 %99, %118
  br i1 %119, label %120, label %122

120:                                              ; preds = %116, %113, %110, %106
  store i32 %104, i32* %102, align 4
  %121 = icmp eq i32* %103, %15
  br i1 %121, label %122, label %101

122:                                              ; preds = %120, %116, %113, %110, %106, %94
  %123 = phi i32* [ %15, %94 ], [ %102, %116 ], [ %15, %120 ], [ %102, %113 ], [ %102, %110 ], [ %102, %106 ]
  store i32 %71, i32* %123, align 4
  br label %124

124:                                              ; preds = %122, %88, %84, %80, %74
  %125 = getelementptr inbounds i32, i32* %69, i64 1
  %126 = icmp eq i32* %125, %6
  br i1 %126, label %418, label %68

127:                                              ; preds = %60
  %128 = icmp sgt i64 %17, 3996
  %129 = sdiv i64 %18, 2
  %130 = getelementptr inbounds i32, i32* %15, i64 %129
  br i1 %128, label %131, label %136

131:                                              ; preds = %127
  %132 = sdiv i64 %18, 4
  %133 = getelementptr inbounds i32, i32* %15, i64 %132
  %134 = getelementptr inbounds i32, i32* %130, i64 %132
  %135 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_S7_T_(i32* %15, i32* %133, i32* %130, i32* %134, i32* %9, %class.anon* dereferenceable(4) %2)
  br label %138

136:                                              ; preds = %127
  %137 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_T_(i32* %15, i32* %130, i32* %9, %class.anon* dereferenceable(4) %2)
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i32 [ %135, %131 ], [ %137, %136 ]
  %140 = load i32, i32* %15, align 4
  %141 = load i32, i32* %130, align 4
  %142 = load i32, i32* %4, align 4
  switch i32 %142, label %153 [
    i32 0, label %157
    i32 1, label %143
    i32 2, label %149
  ]

143:                                              ; preds = %138
  %144 = lshr i32 %140, 8
  %145 = and i32 %144, 255
  %146 = lshr i32 %141, 8
  %147 = and i32 %146, 255
  %148 = icmp ult i32 %145, %147
  br i1 %148, label %302, label %163

149:                                              ; preds = %138
  %150 = and i32 %140, 255
  %151 = and i32 %141, 255
  %152 = icmp ult i32 %150, %151
  br i1 %152, label %302, label %163

153:                                              ; preds = %138
  %154 = and i32 %140, 255
  %155 = and i32 %141, 255
  %156 = icmp ult i32 %154, %155
  br i1 %156, label %302, label %163

157:                                              ; preds = %138
  %158 = lshr i32 %140, 16
  %159 = and i32 %158, 255
  %160 = lshr i32 %141, 16
  %161 = and i32 %160, 255
  %162 = icmp ult i32 %159, %161
  br i1 %162, label %302, label %163

163:                                              ; preds = %157, %153, %149, %143
  %164 = icmp eq i32* %15, %10
  br i1 %164, label %171, label %165

165:                                              ; preds = %163
  %166 = and i32 %141, 255
  %167 = lshr i32 %141, 8
  %168 = and i32 %167, 255
  %169 = lshr i32 %141, 16
  %170 = and i32 %169, 255
  br label %280

171:                                              ; preds = %297, %163
  %172 = getelementptr inbounds i32, i32* %15, i64 1
  %173 = load i32, i32* %9, align 4
  switch i32 %142, label %184 [
    i32 0, label %188
    i32 1, label %174
    i32 2, label %180
  ]

174:                                              ; preds = %171
  %175 = lshr i32 %140, 8
  %176 = and i32 %175, 255
  %177 = lshr i32 %173, 8
  %178 = and i32 %177, 255
  %179 = icmp ult i32 %176, %178
  br i1 %179, label %224, label %194

180:                                              ; preds = %171
  %181 = and i32 %140, 255
  %182 = and i32 %173, 255
  %183 = icmp ult i32 %181, %182
  br i1 %183, label %224, label %194

184:                                              ; preds = %171
  %185 = and i32 %140, 255
  %186 = and i32 %173, 255
  %187 = icmp ult i32 %185, %186
  br i1 %187, label %224, label %194

188:                                              ; preds = %171
  %189 = lshr i32 %140, 16
  %190 = and i32 %189, 255
  %191 = lshr i32 %173, 16
  %192 = and i32 %191, 255
  %193 = icmp ult i32 %190, %192
  br i1 %193, label %224, label %194

194:                                              ; preds = %188, %184, %180, %174
  %195 = icmp eq i32* %172, %9
  br i1 %195, label %418, label %196

196:                                              ; preds = %194
  %197 = and i32 %140, 255
  %198 = lshr i32 %140, 8
  %199 = and i32 %198, 255
  %200 = lshr i32 %140, 16
  %201 = and i32 %200, 255
  br label %202

202:                                              ; preds = %196, %221
  %203 = phi i32* [ %172, %196 ], [ %222, %221 ]
  %204 = load i32, i32* %203, align 4
  switch i32 %142, label %212 [
    i32 0, label %215
    i32 1, label %205
    i32 2, label %209
  ]

205:                                              ; preds = %202
  %206 = lshr i32 %204, 8
  %207 = and i32 %206, 255
  %208 = icmp ult i32 %199, %207
  br i1 %208, label %219, label %221

209:                                              ; preds = %202
  %210 = and i32 %204, 255
  %211 = icmp ult i32 %197, %210
  br i1 %211, label %219, label %221

212:                                              ; preds = %202
  %213 = and i32 %204, 255
  %214 = icmp ult i32 %197, %213
  br i1 %214, label %219, label %221

215:                                              ; preds = %202
  %216 = lshr i32 %204, 16
  %217 = and i32 %216, 255
  %218 = icmp ult i32 %201, %217
  br i1 %218, label %219, label %221

219:                                              ; preds = %205, %209, %212, %215
  store i32 %173, i32* %203, align 4
  store i32 %204, i32* %9, align 4
  %220 = getelementptr inbounds i32, i32* %203, i64 1
  br label %224

221:                                              ; preds = %205, %209, %212, %215
  %222 = getelementptr inbounds i32, i32* %203, i64 1
  %223 = icmp eq i32* %222, %9
  br i1 %223, label %418, label %202

224:                                              ; preds = %174, %180, %184, %219, %188
  %225 = phi i32* [ %172, %188 ], [ %220, %219 ], [ %172, %184 ], [ %172, %180 ], [ %172, %174 ]
  %226 = icmp eq i32* %225, %9
  br i1 %226, label %418, label %227

227:                                              ; preds = %224, %278
  %228 = phi i32* [ %279, %278 ], [ %225, %224 ]
  %229 = phi i32* [ %259, %278 ], [ %9, %224 ]
  %230 = load i32, i32* %15, align 4
  %231 = load i32, i32* %4, align 4
  %232 = and i32 %230, 255
  %233 = lshr i32 %230, 8
  %234 = and i32 %233, 255
  %235 = lshr i32 %230, 16
  %236 = and i32 %235, 255
  br label %237

237:                                              ; preds = %255, %227
  %238 = phi i32* [ %228, %227 ], [ %256, %255 ]
  %239 = load i32, i32* %238, align 4
  switch i32 %231, label %248 [
    i32 0, label %251
    i32 1, label %240
    i32 2, label %245
  ]

240:                                              ; preds = %237
  %241 = lshr i32 %239, 8
  %242 = and i32 %241, 255
  %243 = icmp ult i32 %234, %242
  br i1 %243, label %244, label %255

244:                                              ; preds = %251, %248, %245, %240
  br label %257

245:                                              ; preds = %237
  %246 = and i32 %239, 255
  %247 = icmp ult i32 %232, %246
  br i1 %247, label %244, label %255

248:                                              ; preds = %237
  %249 = and i32 %239, 255
  %250 = icmp ult i32 %232, %249
  br i1 %250, label %244, label %255

251:                                              ; preds = %237
  %252 = lshr i32 %239, 16
  %253 = and i32 %252, 255
  %254 = icmp ult i32 %236, %253
  br i1 %254, label %244, label %255

255:                                              ; preds = %240, %245, %248, %251
  %256 = getelementptr inbounds i32, i32* %238, i64 1
  br label %237

257:                                              ; preds = %275, %244
  %258 = phi i32* [ %229, %244 ], [ %259, %275 ]
  %259 = getelementptr inbounds i32, i32* %258, i64 -1
  %260 = load i32, i32* %259, align 4
  switch i32 %231, label %268 [
    i32 0, label %271
    i32 1, label %261
    i32 2, label %265
  ]

261:                                              ; preds = %257
  %262 = lshr i32 %260, 8
  %263 = and i32 %262, 255
  %264 = icmp ult i32 %234, %263
  br i1 %264, label %275, label %276

265:                                              ; preds = %257
  %266 = and i32 %260, 255
  %267 = icmp ult i32 %232, %266
  br i1 %267, label %275, label %276

268:                                              ; preds = %257
  %269 = and i32 %260, 255
  %270 = icmp ult i32 %232, %269
  br i1 %270, label %275, label %276

271:                                              ; preds = %257
  %272 = lshr i32 %260, 16
  %273 = and i32 %272, 255
  %274 = icmp ult i32 %236, %273
  br i1 %274, label %275, label %276

275:                                              ; preds = %271, %268, %265, %261
  br label %257

276:                                              ; preds = %261, %265, %268, %271
  %277 = icmp ult i32* %238, %259
  br i1 %277, label %278, label %14

278:                                              ; preds = %276
  store i32 %260, i32* %238, align 4
  store i32 %239, i32* %259, align 4
  %279 = getelementptr inbounds i32, i32* %238, i64 1
  br label %227

280:                                              ; preds = %165, %297
  %281 = phi i32* [ %10, %165 ], [ %298, %297 ]
  %282 = load i32, i32* %281, align 4
  switch i32 %142, label %290 [
    i32 0, label %293
    i32 1, label %283
    i32 2, label %287
  ]

283:                                              ; preds = %280
  %284 = lshr i32 %282, 8
  %285 = and i32 %284, 255
  %286 = icmp ult i32 %285, %168
  br i1 %286, label %300, label %297

287:                                              ; preds = %280
  %288 = and i32 %282, 255
  %289 = icmp ult i32 %288, %166
  br i1 %289, label %300, label %297

290:                                              ; preds = %280
  %291 = and i32 %282, 255
  %292 = icmp ult i32 %291, %166
  br i1 %292, label %300, label %297

293:                                              ; preds = %280
  %294 = lshr i32 %282, 16
  %295 = and i32 %294, 255
  %296 = icmp ult i32 %295, %170
  br i1 %296, label %300, label %297

297:                                              ; preds = %293, %290, %287, %283
  %298 = getelementptr inbounds i32, i32* %281, i64 -1
  %299 = icmp eq i32* %15, %298
  br i1 %299, label %171, label %280

300:                                              ; preds = %283, %287, %290, %293
  store i32 %282, i32* %15, align 4
  store i32 %140, i32* %281, align 4
  %301 = add i32 %139, 1
  br label %302

302:                                              ; preds = %143, %149, %153, %157, %300
  %303 = phi i32 [ %301, %300 ], [ %139, %157 ], [ %139, %153 ], [ %139, %149 ], [ %139, %143 ]
  %304 = phi i32* [ %281, %300 ], [ %9, %157 ], [ %9, %153 ], [ %9, %149 ], [ %9, %143 ]
  %305 = ptrtoint i32* %15 to i64
  %306 = getelementptr inbounds i32, i32* %15, i64 1
  %307 = icmp ult i32* %306, %304
  br i1 %307, label %308, label %366

308:                                              ; preds = %302, %361
  %309 = phi i32* [ %364, %361 ], [ %130, %302 ]
  %310 = phi i32 [ %362, %361 ], [ %303, %302 ]
  %311 = phi i32* [ %365, %361 ], [ %306, %302 ]
  %312 = phi i32* [ %342, %361 ], [ %304, %302 ]
  %313 = load i32, i32* %309, align 4
  %314 = load i32, i32* %4, align 4
  %315 = and i32 %313, 255
  %316 = lshr i32 %313, 8
  %317 = and i32 %316, 255
  %318 = lshr i32 %313, 16
  %319 = and i32 %318, 255
  br label %320

320:                                              ; preds = %338, %308
  %321 = phi i32* [ %311, %308 ], [ %339, %338 ]
  %322 = load i32, i32* %321, align 4
  switch i32 %314, label %331 [
    i32 0, label %334
    i32 1, label %323
    i32 2, label %328
  ]

323:                                              ; preds = %320
  %324 = lshr i32 %322, 8
  %325 = and i32 %324, 255
  %326 = icmp ult i32 %325, %317
  br i1 %326, label %338, label %327

327:                                              ; preds = %334, %331, %328, %323
  br label %340

328:                                              ; preds = %320
  %329 = and i32 %322, 255
  %330 = icmp ult i32 %329, %315
  br i1 %330, label %338, label %327

331:                                              ; preds = %320
  %332 = and i32 %322, 255
  %333 = icmp ult i32 %332, %315
  br i1 %333, label %338, label %327

334:                                              ; preds = %320
  %335 = lshr i32 %322, 16
  %336 = and i32 %335, 255
  %337 = icmp ult i32 %336, %319
  br i1 %337, label %338, label %327

338:                                              ; preds = %323, %328, %331, %334
  %339 = getelementptr inbounds i32, i32* %321, i64 1
  br label %320

340:                                              ; preds = %358, %327
  %341 = phi i32* [ %312, %327 ], [ %342, %358 ]
  %342 = getelementptr inbounds i32, i32* %341, i64 -1
  %343 = load i32, i32* %342, align 4
  switch i32 %314, label %351 [
    i32 0, label %354
    i32 1, label %344
    i32 2, label %348
  ]

344:                                              ; preds = %340
  %345 = lshr i32 %343, 8
  %346 = and i32 %345, 255
  %347 = icmp ult i32 %346, %317
  br i1 %347, label %359, label %358

348:                                              ; preds = %340
  %349 = and i32 %343, 255
  %350 = icmp ult i32 %349, %315
  br i1 %350, label %359, label %358

351:                                              ; preds = %340
  %352 = and i32 %343, 255
  %353 = icmp ult i32 %352, %315
  br i1 %353, label %359, label %358

354:                                              ; preds = %340
  %355 = lshr i32 %343, 16
  %356 = and i32 %355, 255
  %357 = icmp ult i32 %356, %319
  br i1 %357, label %359, label %358

358:                                              ; preds = %354, %351, %348, %344
  br label %340

359:                                              ; preds = %344, %348, %351, %354
  %360 = icmp ugt i32* %321, %342
  br i1 %360, label %366, label %361

361:                                              ; preds = %359
  store i32 %343, i32* %321, align 4
  store i32 %322, i32* %342, align 4
  %362 = add i32 %310, 1
  %363 = icmp eq i32* %309, %321
  %364 = select i1 %363, i32* %342, i32* %309
  %365 = getelementptr inbounds i32, i32* %321, i64 1
  br label %308

366:                                              ; preds = %359, %302
  %367 = phi i32* [ %130, %302 ], [ %309, %359 ]
  %368 = phi i32 [ %303, %302 ], [ %310, %359 ]
  %369 = phi i32* [ %306, %302 ], [ %321, %359 ]
  %370 = icmp eq i32* %369, %367
  br i1 %370, label %397, label %371

371:                                              ; preds = %366
  %372 = load i32, i32* %367, align 4
  %373 = load i32, i32* %369, align 4
  %374 = load i32, i32* %4, align 4
  switch i32 %374, label %385 [
    i32 0, label %389
    i32 1, label %375
    i32 2, label %381
  ]

375:                                              ; preds = %371
  %376 = lshr i32 %372, 8
  %377 = and i32 %376, 255
  %378 = lshr i32 %373, 8
  %379 = and i32 %378, 255
  %380 = icmp ult i32 %377, %379
  br i1 %380, label %395, label %397

381:                                              ; preds = %371
  %382 = and i32 %372, 255
  %383 = and i32 %373, 255
  %384 = icmp ult i32 %382, %383
  br i1 %384, label %395, label %397

385:                                              ; preds = %371
  %386 = and i32 %372, 255
  %387 = and i32 %373, 255
  %388 = icmp ult i32 %386, %387
  br i1 %388, label %395, label %397

389:                                              ; preds = %371
  %390 = lshr i32 %372, 16
  %391 = and i32 %390, 255
  %392 = lshr i32 %373, 16
  %393 = and i32 %392, 255
  %394 = icmp ult i32 %391, %393
  br i1 %394, label %395, label %397

395:                                              ; preds = %375, %381, %385, %389
  store i32 %372, i32* %369, align 4
  store i32 %373, i32* %367, align 4
  %396 = add i32 %368, 1
  br label %397

397:                                              ; preds = %375, %381, %385, %366, %395, %389
  %398 = phi i32 [ %396, %395 ], [ %368, %389 ], [ %368, %366 ], [ %368, %385 ], [ %368, %381 ], [ %368, %375 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %407

400:                                              ; preds = %397
  %401 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEbT0_S7_T_(i32* %15, i32* %369, %class.anon* dereferenceable(4) %2)
  %402 = getelementptr inbounds i32, i32* %369, i64 1
  %403 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEbT0_S7_T_(i32* %402, i32* %6, %class.anon* dereferenceable(4) %2)
  br i1 %403, label %404, label %406

404:                                              ; preds = %400
  br i1 %401, label %418, label %405

405:                                              ; preds = %404, %416
  br label %5

406:                                              ; preds = %400
  br i1 %401, label %414, label %407

407:                                              ; preds = %406, %397
  %408 = ptrtoint i32* %369 to i64
  %409 = sub i64 %408, %305
  %410 = sub i64 %11, %408
  %411 = icmp slt i64 %409, %410
  br i1 %411, label %412, label %416

412:                                              ; preds = %407
  tail call fastcc void @_ZNSt3__16__sortIRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEvT0_S7_T_(i32* %15, i32* %369, %class.anon* dereferenceable(4) %2)
  %413 = getelementptr inbounds i32, i32* %369, i64 1
  br label %414

414:                                              ; preds = %412, %406
  %415 = phi i32* [ %402, %406 ], [ %413, %412 ]
  br label %12

416:                                              ; preds = %407
  %417 = getelementptr inbounds i32, i32* %369, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEvT0_S7_T_(i32* %417, i32* %6, %class.anon* dereferenceable(4) %2)
  br label %405

418:                                              ; preds = %404, %224, %14, %14, %194, %221, %124, %62, %24, %30, %34, %38, %44, %45, %49, %54
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort3IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_T_(i32* nocapture, i32* nocapture, i32* nocapture, %class.anon* nocapture readonly dereferenceable(4)) unnamed_addr #6 {
  %5 = load i32, i32* %1, align 4
  %6 = load i32, i32* %0, align 4
  %7 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %36 [
    i32 0, label %9
    i32 1, label %19
    i32 2, label %29
  ]

9:                                                ; preds = %4
  %10 = lshr i32 %5, 16
  %11 = and i32 %10, 255
  %12 = lshr i32 %6, 16
  %13 = and i32 %12, 255
  %14 = icmp ult i32 %11, %13
  %15 = load i32, i32* %2, align 4
  %16 = lshr i32 %15, 16
  %17 = and i32 %16, 255
  %18 = icmp ult i32 %17, %11
  br i1 %14, label %71, label %43

19:                                               ; preds = %4
  %20 = lshr i32 %5, 8
  %21 = and i32 %20, 255
  %22 = lshr i32 %6, 8
  %23 = and i32 %22, 255
  %24 = icmp ult i32 %21, %23
  %25 = load i32, i32* %2, align 4
  %26 = lshr i32 %25, 8
  %27 = and i32 %26, 255
  %28 = icmp ult i32 %27, %21
  br i1 %24, label %71, label %43

29:                                               ; preds = %4
  %30 = and i32 %5, 255
  %31 = and i32 %6, 255
  %32 = icmp ult i32 %30, %31
  %33 = load i32, i32* %2, align 4
  %34 = and i32 %33, 255
  %35 = icmp ult i32 %34, %30
  br i1 %32, label %71, label %43

36:                                               ; preds = %4
  %37 = and i32 %5, 255
  %38 = and i32 %6, 255
  %39 = icmp ult i32 %37, %38
  %40 = load i32, i32* %2, align 4
  %41 = and i32 %40, 255
  %42 = icmp ult i32 %41, %37
  br i1 %39, label %71, label %43

43:                                               ; preds = %29, %19, %9, %36
  %44 = phi i1 [ %42, %36 ], [ %18, %9 ], [ %28, %19 ], [ %35, %29 ]
  %45 = phi i32 [ %40, %36 ], [ %15, %9 ], [ %25, %19 ], [ %33, %29 ]
  br i1 %44, label %46, label %99

46:                                               ; preds = %43
  store i32 %45, i32* %1, align 4
  store i32 %5, i32* %2, align 4
  %47 = load i32, i32* %1, align 4
  %48 = load i32, i32* %0, align 4
  %49 = load i32, i32* %7, align 4
  switch i32 %49, label %60 [
    i32 0, label %64
    i32 1, label %50
    i32 2, label %56
  ]

50:                                               ; preds = %46
  %51 = lshr i32 %47, 8
  %52 = and i32 %51, 255
  %53 = lshr i32 %48, 8
  %54 = and i32 %53, 255
  %55 = icmp ult i32 %52, %54
  br i1 %55, label %70, label %99

56:                                               ; preds = %46
  %57 = and i32 %47, 255
  %58 = and i32 %48, 255
  %59 = icmp ult i32 %57, %58
  br i1 %59, label %70, label %99

60:                                               ; preds = %46
  %61 = and i32 %47, 255
  %62 = and i32 %48, 255
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %70, label %99

64:                                               ; preds = %46
  %65 = lshr i32 %47, 16
  %66 = and i32 %65, 255
  %67 = lshr i32 %48, 16
  %68 = and i32 %67, 255
  %69 = icmp ult i32 %66, %68
  br i1 %69, label %70, label %99

70:                                               ; preds = %50, %56, %60, %64
  store i32 %47, i32* %0, align 4
  store i32 %48, i32* %1, align 4
  br label %99

71:                                               ; preds = %29, %19, %9, %36
  %72 = phi i1 [ %42, %36 ], [ %18, %9 ], [ %28, %19 ], [ %35, %29 ]
  %73 = phi i32 [ %40, %36 ], [ %15, %9 ], [ %25, %19 ], [ %33, %29 ]
  br i1 %72, label %74, label %75

74:                                               ; preds = %71
  store i32 %73, i32* %0, align 4
  store i32 %6, i32* %2, align 4
  br label %99

75:                                               ; preds = %71
  store i32 %5, i32* %0, align 4
  store i32 %6, i32* %1, align 4
  %76 = load i32, i32* %2, align 4
  %77 = load i32, i32* %7, align 4
  switch i32 %77, label %88 [
    i32 0, label %92
    i32 1, label %78
    i32 2, label %84
  ]

78:                                               ; preds = %75
  %79 = lshr i32 %76, 8
  %80 = and i32 %79, 255
  %81 = lshr i32 %6, 8
  %82 = and i32 %81, 255
  %83 = icmp ult i32 %80, %82
  br i1 %83, label %98, label %99

84:                                               ; preds = %75
  %85 = and i32 %76, 255
  %86 = and i32 %6, 255
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %98, label %99

88:                                               ; preds = %75
  %89 = and i32 %76, 255
  %90 = and i32 %6, 255
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %98, label %99

92:                                               ; preds = %75
  %93 = lshr i32 %76, 16
  %94 = and i32 %93, 255
  %95 = lshr i32 %6, 16
  %96 = and i32 %95, 255
  %97 = icmp ult i32 %94, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %78, %84, %88, %92
  store i32 %76, i32* %1, align 4
  store i32 %6, i32* %2, align 4
  br label %99

99:                                               ; preds = %78, %84, %88, %50, %56, %60, %92, %98, %64, %70, %43, %74
  %100 = phi i32 [ 1, %74 ], [ 0, %43 ], [ 2, %70 ], [ 1, %64 ], [ 2, %98 ], [ 1, %92 ], [ 1, %60 ], [ 1, %56 ], [ 1, %50 ], [ 1, %88 ], [ 1, %84 ], [ 1, %78 ]
  ret i32 %100
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_T_(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %class.anon* nocapture readonly dereferenceable(4)) unnamed_addr #6 {
  %6 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_T_(i32* %0, i32* %1, i32* %2, %class.anon* dereferenceable(4) %4)
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %2, align 4
  %9 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %21 [
    i32 0, label %25
    i32 1, label %11
    i32 2, label %17
  ]

11:                                               ; preds = %5
  %12 = lshr i32 %7, 8
  %13 = and i32 %12, 255
  %14 = lshr i32 %8, 8
  %15 = and i32 %14, 255
  %16 = icmp ult i32 %13, %15
  br i1 %16, label %31, label %83

17:                                               ; preds = %5
  %18 = and i32 %7, 255
  %19 = and i32 %8, 255
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %31, label %83

21:                                               ; preds = %5
  %22 = and i32 %7, 255
  %23 = and i32 %8, 255
  %24 = icmp ult i32 %22, %23
  br i1 %24, label %31, label %83

25:                                               ; preds = %5
  %26 = lshr i32 %7, 16
  %27 = and i32 %26, 255
  %28 = lshr i32 %8, 16
  %29 = and i32 %28, 255
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %31, label %83

31:                                               ; preds = %11, %17, %21, %25
  store i32 %7, i32* %2, align 4
  store i32 %8, i32* %3, align 4
  %32 = add i32 %6, 1
  %33 = load i32, i32* %2, align 4
  %34 = load i32, i32* %1, align 4
  %35 = load i32, i32* %9, align 4
  switch i32 %35, label %46 [
    i32 0, label %50
    i32 1, label %36
    i32 2, label %42
  ]

36:                                               ; preds = %31
  %37 = lshr i32 %33, 8
  %38 = and i32 %37, 255
  %39 = lshr i32 %34, 8
  %40 = and i32 %39, 255
  %41 = icmp ult i32 %38, %40
  br i1 %41, label %56, label %83

42:                                               ; preds = %31
  %43 = and i32 %33, 255
  %44 = and i32 %34, 255
  %45 = icmp ult i32 %43, %44
  br i1 %45, label %56, label %83

46:                                               ; preds = %31
  %47 = and i32 %33, 255
  %48 = and i32 %34, 255
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %56, label %83

50:                                               ; preds = %31
  %51 = lshr i32 %33, 16
  %52 = and i32 %51, 255
  %53 = lshr i32 %34, 16
  %54 = and i32 %53, 255
  %55 = icmp ult i32 %52, %54
  br i1 %55, label %56, label %83

56:                                               ; preds = %36, %42, %46, %50
  store i32 %33, i32* %1, align 4
  store i32 %34, i32* %2, align 4
  %57 = add i32 %6, 2
  %58 = load i32, i32* %1, align 4
  %59 = load i32, i32* %0, align 4
  %60 = load i32, i32* %9, align 4
  switch i32 %60, label %71 [
    i32 0, label %75
    i32 1, label %61
    i32 2, label %67
  ]

61:                                               ; preds = %56
  %62 = lshr i32 %58, 8
  %63 = and i32 %62, 255
  %64 = lshr i32 %59, 8
  %65 = and i32 %64, 255
  %66 = icmp ult i32 %63, %65
  br i1 %66, label %81, label %83

67:                                               ; preds = %56
  %68 = and i32 %58, 255
  %69 = and i32 %59, 255
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %81, label %83

71:                                               ; preds = %56
  %72 = and i32 %58, 255
  %73 = and i32 %59, 255
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %81, label %83

75:                                               ; preds = %56
  %76 = lshr i32 %58, 16
  %77 = and i32 %76, 255
  %78 = lshr i32 %59, 16
  %79 = and i32 %78, 255
  %80 = icmp ult i32 %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %61, %67, %71, %75
  store i32 %58, i32* %0, align 4
  store i32 %59, i32* %1, align 4
  %82 = add i32 %6, 3
  br label %83

83:                                               ; preds = %61, %67, %71, %36, %42, %46, %11, %17, %21, %50, %81, %75, %25
  %84 = phi i32 [ %82, %81 ], [ %57, %75 ], [ %32, %50 ], [ %6, %25 ], [ %6, %21 ], [ %6, %17 ], [ %6, %11 ], [ %32, %46 ], [ %32, %42 ], [ %32, %36 ], [ %57, %71 ], [ %57, %67 ], [ %57, %61 ]
  ret i32 %84
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_S7_T_(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %class.anon* nocapture readonly dereferenceable(4)) unnamed_addr #6 {
  %7 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_T_(i32* %0, i32* %1, i32* %2, i32* %3, %class.anon* dereferenceable(4) %5)
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* %3, align 4
  %10 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %22 [
    i32 0, label %26
    i32 1, label %12
    i32 2, label %18
  ]

12:                                               ; preds = %6
  %13 = lshr i32 %8, 8
  %14 = and i32 %13, 255
  %15 = lshr i32 %9, 8
  %16 = and i32 %15, 255
  %17 = icmp ult i32 %14, %16
  br i1 %17, label %32, label %109

18:                                               ; preds = %6
  %19 = and i32 %8, 255
  %20 = and i32 %9, 255
  %21 = icmp ult i32 %19, %20
  br i1 %21, label %32, label %109

22:                                               ; preds = %6
  %23 = and i32 %8, 255
  %24 = and i32 %9, 255
  %25 = icmp ult i32 %23, %24
  br i1 %25, label %32, label %109

26:                                               ; preds = %6
  %27 = lshr i32 %8, 16
  %28 = and i32 %27, 255
  %29 = lshr i32 %9, 16
  %30 = and i32 %29, 255
  %31 = icmp ult i32 %28, %30
  br i1 %31, label %32, label %109

32:                                               ; preds = %12, %18, %22, %26
  store i32 %8, i32* %3, align 4
  store i32 %9, i32* %4, align 4
  %33 = add i32 %7, 1
  %34 = load i32, i32* %3, align 4
  %35 = load i32, i32* %2, align 4
  %36 = load i32, i32* %10, align 4
  switch i32 %36, label %47 [
    i32 0, label %51
    i32 1, label %37
    i32 2, label %43
  ]

37:                                               ; preds = %32
  %38 = lshr i32 %34, 8
  %39 = and i32 %38, 255
  %40 = lshr i32 %35, 8
  %41 = and i32 %40, 255
  %42 = icmp ult i32 %39, %41
  br i1 %42, label %57, label %109

43:                                               ; preds = %32
  %44 = and i32 %34, 255
  %45 = and i32 %35, 255
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %57, label %109

47:                                               ; preds = %32
  %48 = and i32 %34, 255
  %49 = and i32 %35, 255
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %57, label %109

51:                                               ; preds = %32
  %52 = lshr i32 %34, 16
  %53 = and i32 %52, 255
  %54 = lshr i32 %35, 16
  %55 = and i32 %54, 255
  %56 = icmp ult i32 %53, %55
  br i1 %56, label %57, label %109

57:                                               ; preds = %37, %43, %47, %51
  store i32 %34, i32* %2, align 4
  store i32 %35, i32* %3, align 4
  %58 = add i32 %7, 2
  %59 = load i32, i32* %2, align 4
  %60 = load i32, i32* %1, align 4
  %61 = load i32, i32* %10, align 4
  switch i32 %61, label %72 [
    i32 0, label %76
    i32 1, label %62
    i32 2, label %68
  ]

62:                                               ; preds = %57
  %63 = lshr i32 %59, 8
  %64 = and i32 %63, 255
  %65 = lshr i32 %60, 8
  %66 = and i32 %65, 255
  %67 = icmp ult i32 %64, %66
  br i1 %67, label %82, label %109

68:                                               ; preds = %57
  %69 = and i32 %59, 255
  %70 = and i32 %60, 255
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %82, label %109

72:                                               ; preds = %57
  %73 = and i32 %59, 255
  %74 = and i32 %60, 255
  %75 = icmp ult i32 %73, %74
  br i1 %75, label %82, label %109

76:                                               ; preds = %57
  %77 = lshr i32 %59, 16
  %78 = and i32 %77, 255
  %79 = lshr i32 %60, 16
  %80 = and i32 %79, 255
  %81 = icmp ult i32 %78, %80
  br i1 %81, label %82, label %109

82:                                               ; preds = %62, %68, %72, %76
  store i32 %59, i32* %1, align 4
  store i32 %60, i32* %2, align 4
  %83 = add i32 %7, 3
  %84 = load i32, i32* %1, align 4
  %85 = load i32, i32* %0, align 4
  %86 = load i32, i32* %10, align 4
  switch i32 %86, label %97 [
    i32 0, label %101
    i32 1, label %87
    i32 2, label %93
  ]

87:                                               ; preds = %82
  %88 = lshr i32 %84, 8
  %89 = and i32 %88, 255
  %90 = lshr i32 %85, 8
  %91 = and i32 %90, 255
  %92 = icmp ult i32 %89, %91
  br i1 %92, label %107, label %109

93:                                               ; preds = %82
  %94 = and i32 %84, 255
  %95 = and i32 %85, 255
  %96 = icmp ult i32 %94, %95
  br i1 %96, label %107, label %109

97:                                               ; preds = %82
  %98 = and i32 %84, 255
  %99 = and i32 %85, 255
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %107, label %109

101:                                              ; preds = %82
  %102 = lshr i32 %84, 16
  %103 = and i32 %102, 255
  %104 = lshr i32 %85, 16
  %105 = and i32 %104, 255
  %106 = icmp ult i32 %103, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %87, %93, %97, %101
  store i32 %84, i32* %0, align 4
  store i32 %85, i32* %1, align 4
  %108 = add i32 %7, 4
  br label %109

109:                                              ; preds = %87, %93, %97, %62, %68, %72, %37, %43, %47, %12, %18, %22, %51, %101, %107, %76, %26
  %110 = phi i32 [ %108, %107 ], [ %83, %101 ], [ %58, %76 ], [ %33, %51 ], [ %7, %26 ], [ %7, %22 ], [ %7, %18 ], [ %7, %12 ], [ %33, %47 ], [ %33, %43 ], [ %33, %37 ], [ %58, %72 ], [ %58, %68 ], [ %58, %62 ], [ %83, %97 ], [ %83, %93 ], [ %83, %87 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEbT0_S7_T_(i32*, i32*, %class.anon* nocapture readonly dereferenceable(4)) unnamed_addr #4 {
  %4 = ptrtoint i32* %1 to i64
  %5 = ptrtoint i32* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %50 [
    i64 0, label %124
    i64 1, label %124
    i64 2, label %8
    i64 3, label %35
    i64 4, label %39
    i64 5, label %44
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %24 [
    i32 0, label %28
    i32 1, label %14
    i32 2, label %20
  ]

14:                                               ; preds = %8
  %15 = lshr i32 %10, 8
  %16 = and i32 %15, 255
  %17 = lshr i32 %11, 8
  %18 = and i32 %17, 255
  %19 = icmp ult i32 %16, %18
  br i1 %19, label %34, label %124

20:                                               ; preds = %8
  %21 = and i32 %10, 255
  %22 = and i32 %11, 255
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %34, label %124

24:                                               ; preds = %8
  %25 = and i32 %10, 255
  %26 = and i32 %11, 255
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %34, label %124

28:                                               ; preds = %8
  %29 = lshr i32 %10, 16
  %30 = and i32 %29, 255
  %31 = lshr i32 %11, 16
  %32 = and i32 %31, 255
  %33 = icmp ult i32 %30, %32
  br i1 %33, label %34, label %124

34:                                               ; preds = %14, %20, %24, %28
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %124

35:                                               ; preds = %3
  %36 = getelementptr inbounds i32, i32* %0, i64 1
  %37 = getelementptr inbounds i32, i32* %1, i64 -1
  %38 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_T_(i32* %0, i32* %36, i32* %37, %class.anon* dereferenceable(4) %2)
  br label %124

39:                                               ; preds = %3
  %40 = getelementptr inbounds i32, i32* %0, i64 1
  %41 = getelementptr inbounds i32, i32* %0, i64 2
  %42 = getelementptr inbounds i32, i32* %1, i64 -1
  %43 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_T_(i32* %0, i32* %40, i32* %41, i32* %42, %class.anon* dereferenceable(4) %2)
  br label %124

44:                                               ; preds = %3
  %45 = getelementptr inbounds i32, i32* %0, i64 1
  %46 = getelementptr inbounds i32, i32* %0, i64 2
  %47 = getelementptr inbounds i32, i32* %0, i64 3
  %48 = getelementptr inbounds i32, i32* %1, i64 -1
  %49 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_S7_S7_T_(i32* %0, i32* %45, i32* %46, i32* %47, i32* %48, %class.anon* dereferenceable(4) %2)
  br label %124

50:                                               ; preds = %3
  %51 = getelementptr inbounds i32, i32* %0, i64 2
  %52 = getelementptr inbounds i32, i32* %0, i64 1
  %53 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN11color_utils12_GLOBAL__N_18ColorBox5SplitEvEUljjE_PjEEjT0_S7_S7_T_(i32* %0, i32* %52, i32* %51, %class.anon* dereferenceable(4) %2)
  %54 = getelementptr inbounds i32, i32* %0, i64 3
  %55 = icmp eq i32* %54, %1
  br i1 %55, label %124, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  br label %58

58:                                               ; preds = %56, %117
  %59 = phi i32* [ %54, %56 ], [ %119, %117 ]
  %60 = phi i32 [ 0, %56 ], [ %118, %117 ]
  %61 = phi i32* [ %51, %56 ], [ %59, %117 ]
  %62 = load i32, i32* %59, align 4
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %57, align 4
  switch i32 %64, label %75 [
    i32 0, label %79
    i32 1, label %65
    i32 2, label %71
  ]

65:                                               ; preds = %58
  %66 = lshr i32 %62, 8
  %67 = and i32 %66, 255
  %68 = lshr i32 %63, 8
  %69 = and i32 %68, 255
  %70 = icmp ult i32 %67, %69
  br i1 %70, label %85, label %117

71:                                               ; preds = %58
  %72 = and i32 %62, 255
  %73 = and i32 %63, 255
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %85, label %117

75:                                               ; preds = %58
  %76 = and i32 %62, 255
  %77 = and i32 %63, 255
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %85, label %117

79:                                               ; preds = %58
  %80 = lshr i32 %62, 16
  %81 = and i32 %80, 255
  %82 = lshr i32 %63, 16
  %83 = and i32 %82, 255
  %84 = icmp ult i32 %81, %83
  br i1 %84, label %85, label %117

85:                                               ; preds = %65, %71, %75, %79
  %86 = and i32 %62, 255
  %87 = lshr i32 %62, 8
  %88 = and i32 %87, 255
  %89 = lshr i32 %62, 16
  %90 = and i32 %89, 255
  store i32 %63, i32* %59, align 4
  %91 = icmp eq i32* %61, %0
  br i1 %91, label %113, label %92

92:                                               ; preds = %85, %111
  %93 = phi i32* [ %94, %111 ], [ %61, %85 ]
  %94 = getelementptr inbounds i32, i32* %93, i64 -1
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* %57, align 4
  switch i32 %96, label %104 [
    i32 0, label %107
    i32 1, label %97
    i32 2, label %101
  ]

97:                                               ; preds = %92
  %98 = lshr i32 %95, 8
  %99 = and i32 %98, 255
  %100 = icmp ult i32 %88, %99
  br i1 %100, label %111, label %113

101:                                              ; preds = %92
  %102 = and i32 %95, 255
  %103 = icmp ult i32 %86, %102
  br i1 %103, label %111, label %113

104:                                              ; preds = %92
  %105 = and i32 %95, 255
  %106 = icmp ult i32 %86, %105
  br i1 %106, label %111, label %113

107:                                              ; preds = %92
  %108 = lshr i32 %95, 16
  %109 = and i32 %108, 255
  %110 = icmp ult i32 %90, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %107, %104, %101, %97
  store i32 %95, i32* %93, align 4
  %112 = icmp eq i32* %94, %0
  br i1 %112, label %113, label %92

113:                                              ; preds = %107, %111, %104, %101, %97, %85
  %114 = phi i32* [ %0, %85 ], [ %93, %97 ], [ %93, %101 ], [ %93, %104 ], [ %0, %111 ], [ %93, %107 ]
  store i32 %62, i32* %114, align 4
  %115 = add i32 %60, 1
  %116 = icmp eq i32 %115, 8
  br i1 %116, label %121, label %117

117:                                              ; preds = %113, %65, %71, %75, %79
  %118 = phi i32 [ %115, %113 ], [ %60, %79 ], [ %60, %75 ], [ %60, %71 ], [ %60, %65 ]
  %119 = getelementptr inbounds i32, i32* %59, i64 1
  %120 = icmp eq i32* %119, %1
  br i1 %120, label %124, label %58

121:                                              ; preds = %113
  %122 = getelementptr inbounds i32, i32* %59, i64 1
  %123 = icmp eq i32* %122, %1
  br label %124

124:                                              ; preds = %117, %121, %50, %14, %20, %24, %28, %34, %3, %3, %44, %39, %35
  %125 = phi i1 [ true, %44 ], [ true, %39 ], [ true, %35 ], [ true, %3 ], [ true, %3 ], [ true, %34 ], [ true, %28 ], [ true, %24 ], [ true, %20 ], [ true, %14 ], [ true, %50 ], [ %123, %121 ], [ true, %117 ]
  ret i1 %125
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #10

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEvT0_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** readonly dereferenceable(8)) unnamed_addr #4 {
  %4 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %5 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %6 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %7 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %8 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %9 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %10 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %11 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %12 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %13 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %14 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %15 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %16 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %17 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %18 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %19 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %20 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %21 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %22 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %23 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %24 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %25 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %26 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %27 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %28 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %29 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %30 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %31 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %32 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %33 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %34 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %18, i64 0, i32 0, i64 0
  %35 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %16, i64 0, i32 0, i64 0
  %36 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %15, i64 0, i32 0, i64 0
  %37 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %17, i64 0, i32 0, i64 0
  %38 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %14, i64 0, i32 0, i64 0
  %39 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %11, i64 0, i32 0, i64 0
  %40 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %13, i64 0, i32 0, i64 0
  %41 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %12, i64 0, i32 0, i64 0
  %42 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %10, i64 0, i32 0, i64 0
  %43 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %9, i64 0, i32 0, i64 0
  br label %44

44:                                               ; preds = %345, %3
  %45 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %1, %3 ], [ %328, %345 ]
  %46 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %0, %3 ], [ %57, %345 ]
  %47 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45 to i64
  %48 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45, i64 -1
  %49 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %48, i64 0, i32 0, i64 0
  %50 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %48, i64 0, i32 0, i64 0
  %51 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %48, i64 0, i32 0, i64 0
  %52 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %48, i64 0, i32 0, i64 0
  %53 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45 to i64
  br label %54

54:                                               ; preds = %356, %44
  %55 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %46, %44 ], [ %357, %356 ]
  br label %56

56:                                               ; preds = %284, %54
  %57 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %55, %54 ], [ %275, %284 ]
  %58 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57 to i64
  %59 = sub i64 %47, %58
  %60 = sdiv exact i64 %59, 24
  switch i64 %60, label %155 [
    i64 0, label %360
    i64 1, label %360
    i64 2, label %61
    i64 3, label %69
    i64 4, label %100
    i64 5, label %149
  ]

61:                                               ; preds = %56
  %62 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %63 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45, i64 -1
  %64 = tail call zeroext i1 %62(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %63, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  br i1 %64, label %65, label %360

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %33, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66)
  %67 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false) #17
  %68 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %63, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* nonnull align 4 %66, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66)
  br label %360

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 1
  %71 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45, i64 -1
  %72 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %73 = tail call zeroext i1 %72(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %70, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  %74 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %75 = tail call zeroext i1 %74(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %71, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %70) #17
  br i1 %73, label %86, label %76

76:                                               ; preds = %69
  br i1 %75, label %77, label %360

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %32, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78)
  %79 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %70, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %78, i8* align 4 %79, i64 24, i1 false) #17
  %80 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %71, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %78, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78)
  %81 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %82 = tail call zeroext i1 %81(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %70, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  br i1 %82, label %83, label %360

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %30, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84)
  %85 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %84, i8* align 4 %85, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %79, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* nonnull align 4 %84, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84)
  br label %360

86:                                               ; preds = %69
  br i1 %75, label %87, label %91

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %28, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88)
  %89 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %88, i8* align 4 %89, i64 24, i1 false) #17
  %90 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %71, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* nonnull align 4 %88, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88)
  br label %360

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %29, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92)
  %93 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %92, i8* align 4 %93, i64 24, i1 false) #17
  %94 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %70, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* nonnull align 4 %92, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92)
  %95 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %96 = tail call zeroext i1 %95(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %71, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %70) #17
  br i1 %96, label %97, label %360

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %31, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %98, i8* align 4 %94, i64 24, i1 false) #17
  %99 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %71, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %99, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* nonnull align 4 %98, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98)
  br label %360

100:                                              ; preds = %56
  %101 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 1
  %102 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 2
  %103 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45, i64 -1
  %104 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %105 = tail call zeroext i1 %104(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %101, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  %106 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %107 = tail call zeroext i1 %106(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %102, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %101) #17
  br i1 %105, label %118, label %108

108:                                              ; preds = %100
  br i1 %107, label %109, label %132

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110)
  %111 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %101, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %110, i8* align 4 %111, i64 24, i1 false) #17
  %112 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %102, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %112, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* nonnull align 4 %110, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110)
  %113 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %114 = tail call zeroext i1 %113(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %101, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  br i1 %114, label %115, label %132

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116)
  %117 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %116, i8* align 4 %117, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %111, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* nonnull align 4 %116, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116)
  br label %132

118:                                              ; preds = %100
  br i1 %107, label %119, label %123

119:                                              ; preds = %118
  %120 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120)
  %121 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %120, i8* align 4 %121, i64 24, i1 false) #17
  %122 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %102, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %122, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* nonnull align 4 %120, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120)
  br label %132

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124)
  %125 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %124, i8* align 4 %125, i64 24, i1 false) #17
  %126 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %101, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* nonnull align 4 %124, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124)
  %127 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %128 = tail call zeroext i1 %127(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %102, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %101) #17
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %130, i8* align 4 %126, i64 24, i1 false) #17
  %131 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %102, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %131, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* nonnull align 4 %130, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130)
  br label %132

132:                                              ; preds = %108, %109, %115, %119, %123, %129
  %133 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %134 = tail call zeroext i1 %133(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %103, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %102) #17
  br i1 %134, label %135, label %360

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %27, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136)
  %137 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %102, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %136, i8* align 4 %137, i64 24, i1 false) #17
  %138 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %103, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %138, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* nonnull align 4 %136, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136)
  %139 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %140 = tail call zeroext i1 %139(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %102, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %101) #17
  br i1 %140, label %141, label %360

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %25, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142)
  %143 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %101, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %142, i8* align 4 %143, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* align 4 %137, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* nonnull align 4 %142, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142)
  %144 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %145 = tail call zeroext i1 %144(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %101, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  br i1 %145, label %146, label %360

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %26, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147)
  %148 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* align 4 %148, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %143, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* nonnull align 4 %147, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147)
  br label %360

149:                                              ; preds = %56
  %150 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 1
  %151 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 2
  %152 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 3
  %153 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45, i64 -1
  %154 = tail call fastcc i32 @_ZNSt3__17__sort5IRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %150, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %151, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %152, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %153, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** dereferenceable(8) %2)
  br label %360

155:                                              ; preds = %56
  %156 = icmp slt i64 %59, 744
  br i1 %156, label %157, label %214

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 2
  %159 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 1
  %160 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %161 = tail call zeroext i1 %160(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %159, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  %162 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %163 = tail call zeroext i1 %162(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %158, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %159) #17
  br i1 %161, label %174, label %164

164:                                              ; preds = %157
  br i1 %163, label %165, label %188

165:                                              ; preds = %164
  %166 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %23, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166)
  %167 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %159, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %166, i8* align 4 %167, i64 24, i1 false) #17
  %168 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %158, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* nonnull align 4 %166, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166)
  %169 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %170 = tail call zeroext i1 %169(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %159, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  br i1 %170, label %171, label %188

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %21, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172)
  %173 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %172, i8* align 4 %173, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* align 4 %167, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* nonnull align 4 %172, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172)
  br label %188

174:                                              ; preds = %157
  br i1 %163, label %175, label %179

175:                                              ; preds = %174
  %176 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %19, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176)
  %177 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %176, i8* align 4 %177, i64 24, i1 false) #17
  %178 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %158, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* nonnull align 4 %176, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176)
  br label %188

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %20, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180)
  %181 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %180, i8* align 4 %181, i64 24, i1 false) #17
  %182 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %159, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %181, i8* align 4 %182, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %182, i8* nonnull align 4 %180, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180)
  %183 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %184 = tail call zeroext i1 %183(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %158, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %159) #17
  br i1 %184, label %185, label %188

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %22, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %186, i8* align 4 %182, i64 24, i1 false) #17
  %187 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %158, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %182, i8* align 4 %187, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* nonnull align 4 %186, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186)
  br label %188

188:                                              ; preds = %185, %179, %175, %171, %165, %164
  %189 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 3
  %190 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %189, %45
  br i1 %190, label %360, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %24, i64 0, i32 0, i64 0
  br label %193

193:                                              ; preds = %211, %191
  %194 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %189, %191 ], [ %212, %211 ]
  %195 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %158, %191 ], [ %194, %211 ]
  %196 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %197 = call zeroext i1 %196(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %194, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %195) #17
  br i1 %197, label %198, label %211

198:                                              ; preds = %193
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #17
  %199 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %194, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %192, i8* align 4 %199, i64 24, i1 false) #17
  br label %200

200:                                              ; preds = %206, %198
  %201 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %194, %198 ], [ %202, %206 ]
  %202 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %195, %198 ], [ %208, %206 ]
  %203 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %201, i64 0, i32 0, i64 0
  %204 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %202, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %203, i8* align 4 %204, i64 24, i1 false) #17
  %205 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %202, %57
  br i1 %205, label %210, label %206

206:                                              ; preds = %200
  %207 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %208 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %202, i64 -1
  %209 = call zeroext i1 %207(%"class.color_utils::(anonymous namespace)::KMeanCluster"* nonnull dereferenceable(24) %24, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %208) #17
  br i1 %209, label %200, label %210

210:                                              ; preds = %206, %200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* nonnull align 4 %192, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #17
  br label %211

211:                                              ; preds = %210, %193
  %212 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %194, i64 1
  %213 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %212, %45
  br i1 %213, label %360, label %193

214:                                              ; preds = %155
  %215 = icmp sgt i64 %59, 23976
  %216 = udiv i64 %59, 48
  %217 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 %216
  br i1 %215, label %218, label %223

218:                                              ; preds = %214
  %219 = udiv i64 %59, 96
  %220 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 %219
  %221 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %217, i64 %219
  %222 = tail call fastcc i32 @_ZNSt3__17__sort5IRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %220, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %217, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %221, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %48, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** dereferenceable(8) %2)
  br label %244

223:                                              ; preds = %214
  %224 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %225 = tail call zeroext i1 %224(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %217, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  %226 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %227 = tail call zeroext i1 %226(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %48, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %217) #17
  br i1 %225, label %235, label %228

228:                                              ; preds = %223
  br i1 %227, label %229, label %244

229:                                              ; preds = %228
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %230 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %217, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %230, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* align 4 %49, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* nonnull align 4 %34, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  %231 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %232 = tail call zeroext i1 %231(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %217, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57) #17
  br i1 %232, label %233, label %244

233:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %234 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %234, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %234, i8* align 4 %230, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* nonnull align 4 %35, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  br label %244

235:                                              ; preds = %223
  br i1 %227, label %236, label %238

236:                                              ; preds = %235
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  %237 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %237, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %237, i8* align 4 %51, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* nonnull align 4 %38, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  br label %244

238:                                              ; preds = %235
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  %239 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %239, i64 24, i1 false) #17
  %240 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %217, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %239, i8* align 4 %240, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %240, i8* nonnull align 4 %36, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  %241 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %242 = tail call zeroext i1 %241(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %48, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %217) #17
  br i1 %242, label %243, label %244

243:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %240, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %240, i8* align 4 %50, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* nonnull align 4 %37, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37)
  br label %244

244:                                              ; preds = %243, %238, %236, %233, %229, %228, %218
  %245 = phi i32 [ %222, %218 ], [ 1, %236 ], [ 0, %228 ], [ 2, %233 ], [ 1, %229 ], [ 2, %243 ], [ 1, %238 ]
  %246 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %247 = tail call zeroext i1 %246(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %217) #17
  br i1 %247, label %296, label %248

248:                                              ; preds = %244, %289
  %249 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %250, %289 ], [ %48, %244 ]
  %250 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %249, i64 -1
  %251 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, %250
  br i1 %251, label %252, label %289

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 1
  %254 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %255 = tail call zeroext i1 %254(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %48) #17
  br i1 %255, label %268, label %256

256:                                              ; preds = %252
  %257 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %253, %48
  br i1 %257, label %360, label %258

258:                                              ; preds = %256, %265
  %259 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %266, %265 ], [ %253, %256 ]
  %260 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %261 = tail call zeroext i1 %260(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %259) #17
  br i1 %261, label %262, label %265

262:                                              ; preds = %258
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  %263 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %259, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 4 %263, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %52, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 4 %40, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  %264 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %259, i64 1
  br label %268

265:                                              ; preds = %258
  %266 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %259, i64 1
  %267 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %266, %48
  br i1 %267, label %360, label %258

268:                                              ; preds = %262, %252
  %269 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %253, %252 ], [ %264, %262 ]
  %270 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %269, %48
  br i1 %270, label %360, label %271

271:                                              ; preds = %268, %286
  %272 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %278, %286 ], [ %269, %268 ]
  %273 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %282, %286 ], [ %48, %268 ]
  br label %274

274:                                              ; preds = %274, %271
  %275 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %272, %271 ], [ %278, %274 ]
  %276 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %277 = tail call zeroext i1 %276(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %275) #17
  %278 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %275, i64 1
  br i1 %277, label %279, label %274

279:                                              ; preds = %274, %279
  %280 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %282, %279 ], [ %273, %274 ]
  %281 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %282 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %280, i64 -1
  %283 = tail call zeroext i1 %281(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %282) #17
  br i1 %283, label %279, label %284

284:                                              ; preds = %279
  %285 = icmp ult %"class.color_utils::(anonymous namespace)::KMeanCluster"* %275, %282
  br i1 %285, label %286, label %56

286:                                              ; preds = %284
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  %287 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %275, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 %287, i64 24, i1 false) #17
  %288 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %282, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %287, i8* align 4 %288, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* nonnull align 4 %41, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  br label %271

289:                                              ; preds = %248
  %290 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %291 = tail call zeroext i1 %290(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %250, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %217) #17
  br i1 %291, label %292, label %248

292:                                              ; preds = %289
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %293 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %293, i64 24, i1 false) #17
  %294 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %250, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %294, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %294, i8* nonnull align 4 %39, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  %295 = add i32 %245, 1
  br label %296

296:                                              ; preds = %244, %292
  %297 = phi i32 [ %295, %292 ], [ %245, %244 ]
  %298 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %250, %292 ], [ %48, %244 ]
  %299 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57 to i64
  %300 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, i64 1
  %301 = icmp ult %"class.color_utils::(anonymous namespace)::KMeanCluster"* %300, %298
  br i1 %301, label %302, label %325

302:                                              ; preds = %296, %319
  %303 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %324, %319 ], [ %217, %296 ]
  %304 = phi i32 [ %322, %319 ], [ %297, %296 ]
  %305 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %311, %319 ], [ %300, %296 ]
  %306 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %315, %319 ], [ %298, %296 ]
  br label %307

307:                                              ; preds = %307, %302
  %308 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %305, %302 ], [ %311, %307 ]
  %309 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %310 = tail call zeroext i1 %309(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %308, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %303) #17
  %311 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %308, i64 1
  br i1 %310, label %307, label %312

312:                                              ; preds = %307, %312
  %313 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %315, %312 ], [ %306, %307 ]
  %314 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %315 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %313, i64 -1
  %316 = tail call zeroext i1 %314(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %315, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %303) #17
  br i1 %316, label %317, label %312

317:                                              ; preds = %312
  %318 = icmp ugt %"class.color_utils::(anonymous namespace)::KMeanCluster"* %308, %315
  br i1 %318, label %325, label %319

319:                                              ; preds = %317
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42)
  %320 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %308, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %320, i64 24, i1 false) #17
  %321 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %315, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %320, i8* align 4 %321, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %321, i8* nonnull align 4 %42, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42)
  %322 = add i32 %304, 1
  %323 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %303, %308
  %324 = select i1 %323, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %315, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %303
  br label %302

325:                                              ; preds = %317, %296
  %326 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %217, %296 ], [ %303, %317 ]
  %327 = phi i32 [ %297, %296 ], [ %304, %317 ]
  %328 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %300, %296 ], [ %308, %317 ]
  %329 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328, %326
  br i1 %329, label %337, label %330

330:                                              ; preds = %325
  %331 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %332 = tail call zeroext i1 %331(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %326, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %328) #17
  br i1 %332, label %333, label %337

333:                                              ; preds = %330
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43)
  %334 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 %334, i64 24, i1 false) #17
  %335 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %326, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %334, i8* align 4 %335, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* nonnull align 4 %43, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43)
  %336 = add i32 %327, 1
  br label %337

337:                                              ; preds = %325, %333, %330
  %338 = phi i32 [ %336, %333 ], [ %327, %330 ], [ %327, %325 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %347

340:                                              ; preds = %337
  %341 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEbT0_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** dereferenceable(8) %2)
  %342 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328, i64 1
  %343 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEbT0_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* %342, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** dereferenceable(8) %2)
  br i1 %343, label %344, label %346

344:                                              ; preds = %340
  br i1 %341, label %360, label %345

345:                                              ; preds = %344, %358
  br label %44

346:                                              ; preds = %340
  br i1 %341, label %356, label %347

347:                                              ; preds = %346, %337
  %348 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328 to i64
  %349 = sub i64 %348, %299
  %350 = sdiv exact i64 %349, 24
  %351 = sub i64 %53, %348
  %352 = sdiv exact i64 %351, 24
  %353 = icmp slt i64 %350, %352
  br i1 %353, label %354, label %358

354:                                              ; preds = %347
  tail call fastcc void @_ZNSt3__16__sortIRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEvT0_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* %57, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** dereferenceable(8) %2)
  %355 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328, i64 1
  br label %356

356:                                              ; preds = %354, %346
  %357 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %342, %346 ], [ %355, %354 ]
  br label %54

358:                                              ; preds = %347
  %359 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %328, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEvT0_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* %359, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %45, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** dereferenceable(8) %2)
  br label %345

360:                                              ; preds = %344, %268, %56, %56, %256, %265, %211, %188, %146, %141, %135, %132, %97, %91, %87, %83, %77, %76, %61, %65, %149
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** nocapture readonly dereferenceable(8)) unnamed_addr #4 {
  %7 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %8 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %9 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %10 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %11 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %12 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %13 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %14 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %15 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %16 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %17 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %18 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %19 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %20 = tail call zeroext i1 %19(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  %21 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %22 = tail call zeroext i1 %21(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %2, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1) #17
  br i1 %20, label %33, label %23

23:                                               ; preds = %6
  br i1 %22, label %24, label %47

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25)
  %26 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 %26, i64 24, i1 false) #17
  %27 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %25, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25)
  %28 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %29 = tail call zeroext i1 %28(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %29, label %30, label %47

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %10, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %32, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %26, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* nonnull align 4 %31, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  br label %47

33:                                               ; preds = %6
  br i1 %22, label %34, label %38

34:                                               ; preds = %33
  %35 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %36, i64 24, i1 false) #17
  %37 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* nonnull align 4 %35, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  br label %47

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %40 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %40, i64 24, i1 false) #17
  %41 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* nonnull align 4 %39, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  %42 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %43 = tail call zeroext i1 %42(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %2, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1) #17
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 %41, i64 24, i1 false) #17
  %46 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %46, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* nonnull align 4 %45, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45)
  br label %47

47:                                               ; preds = %23, %24, %30, %34, %38, %44
  %48 = phi i32 [ 1, %34 ], [ 0, %23 ], [ 2, %30 ], [ 1, %24 ], [ 2, %44 ], [ 1, %38 ]
  %49 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %50 = tail call zeroext i1 %49(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %3, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %2) #17
  br i1 %50, label %51, label %68

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %18, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52)
  %53 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %2, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %53, i64 24, i1 false) #17
  %54 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %3, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %54, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* nonnull align 4 %52, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52)
  %55 = add nuw nsw i32 %48, 1
  %56 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %57 = tail call zeroext i1 %56(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %2, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1) #17
  br i1 %57, label %58, label %68

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %16, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59)
  %60 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 %60, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %53, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 4 %59, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59)
  %61 = add nuw nsw i32 %48, 2
  %62 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %63 = tail call zeroext i1 %62(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %63, label %64, label %68

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %17, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %65, i8* align 4 %66, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %60, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* nonnull align 4 %65, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65)
  %67 = add nuw nsw i32 %48, 3
  br label %68

68:                                               ; preds = %47, %51, %58, %64
  %69 = phi i32 [ %67, %64 ], [ %61, %58 ], [ %55, %51 ], [ %48, %47 ]
  %70 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %71 = tail call zeroext i1 %70(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %4, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %3) #17
  br i1 %71, label %72, label %95

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %15, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73)
  %74 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %3, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* align 4 %74, i64 24, i1 false) #17
  %75 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %4, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %75, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* nonnull align 4 %73, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73)
  %76 = add nuw nsw i32 %69, 1
  %77 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %78 = tail call zeroext i1 %77(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %3, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %2) #17
  br i1 %78, label %79, label %95

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %14, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80)
  %81 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %2, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* align 4 %81, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %74, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4 %80, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80)
  %82 = add nuw nsw i32 %69, 2
  %83 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %84 = tail call zeroext i1 %83(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %2, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1) #17
  br i1 %84, label %85, label %95

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86)
  %87 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %86, i8* align 4 %87, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %81, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* nonnull align 4 %86, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86)
  %88 = add nuw nsw i32 %69, 3
  %89 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %5, align 8
  %90 = tail call zeroext i1 %89(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %1, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %90, label %91, label %95

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92)
  %93 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %92, i8* align 4 %93, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %87, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* nonnull align 4 %92, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92)
  %94 = add nuw nsw i32 %69, 4
  br label %95

95:                                               ; preds = %72, %85, %91, %79, %68
  %96 = phi i32 [ %94, %91 ], [ %88, %85 ], [ %82, %79 ], [ %76, %72 ], [ %69, %68 ]
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEbT0_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** nocapture readonly dereferenceable(8)) unnamed_addr #4 {
  %4 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %5 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %6 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %7 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %8 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %9 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %10 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %11 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %12 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %13 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %14 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %15 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %16 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %17 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %18 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %19 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %20 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %21 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %22 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %23 = alloca %"class.color_utils::(anonymous namespace)::KMeanCluster", align 4
  %24 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1 to i64
  %25 = ptrtoint %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0 to i64
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 24
  switch i64 %27, label %122 [
    i64 0, label %186
    i64 1, label %186
    i64 2, label %28
    i64 3, label %36
    i64 4, label %67
    i64 5, label %116
  ]

28:                                               ; preds = %3
  %29 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %30 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 -1
  %31 = tail call zeroext i1 %29(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %30, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %31, label %32, label %186

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %22, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %34, i64 24, i1 false) #17
  %35 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %30, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* nonnull align 4 %33, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  br label %186

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 1
  %38 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 -1
  %39 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %40 = tail call zeroext i1 %39(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %37, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  %41 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %42 = tail call zeroext i1 %41(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %38, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %37) #17
  br i1 %40, label %53, label %43

43:                                               ; preds = %36
  br i1 %42, label %44, label %186

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %21, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45)
  %46 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %37, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 %46, i64 24, i1 false) #17
  %47 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %38, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* nonnull align 4 %45, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45)
  %48 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %49 = tail call zeroext i1 %48(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %37, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %49, label %50, label %186

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %19, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51)
  %52 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %52, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %46, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* nonnull align 4 %51, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51)
  br label %186

53:                                               ; preds = %36
  br i1 %42, label %54, label %58

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %17, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %56 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 %56, i64 24, i1 false) #17
  %57 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %38, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* nonnull align 4 %55, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  br label %186

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %18, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59)
  %60 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 %60, i64 24, i1 false) #17
  %61 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %37, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* nonnull align 4 %59, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59)
  %62 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %63 = tail call zeroext i1 %62(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %38, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %37) #17
  br i1 %63, label %64, label %186

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %20, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %65, i8* align 4 %61, i64 24, i1 false) #17
  %66 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %38, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %66, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* nonnull align 4 %65, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65)
  br label %186

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 1
  %69 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 2
  %70 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 -1
  %71 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %72 = tail call zeroext i1 %71(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %68, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  %73 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %74 = tail call zeroext i1 %73(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %69, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %68) #17
  br i1 %72, label %85, label %75

75:                                               ; preds = %67
  br i1 %74, label %76, label %99

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77)
  %78 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %68, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* align 4 %78, i64 24, i1 false) #17
  %79 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* nonnull align 4 %77, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77)
  %80 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %81 = tail call zeroext i1 %80(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %68, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %81, label %82, label %99

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83)
  %84 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* align 4 %84, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %78, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 4 %83, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83)
  br label %99

85:                                               ; preds = %67
  br i1 %74, label %86, label %90

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87)
  %88 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 4 %88, i64 24, i1 false) #17
  %89 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* nonnull align 4 %87, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87)
  br label %99

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91)
  %92 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %91, i8* align 4 %92, i64 24, i1 false) #17
  %93 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %68, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* nonnull align 4 %91, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91)
  %94 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %95 = tail call zeroext i1 %94(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %69, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %68) #17
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %97, i8* align 4 %93, i64 24, i1 false) #17
  %98 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %98, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* nonnull align 4 %97, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97)
  br label %99

99:                                               ; preds = %75, %76, %82, %86, %90, %96
  %100 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %101 = tail call zeroext i1 %100(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %70, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %69) #17
  br i1 %101, label %102, label %186

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %16, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103)
  %104 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %69, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %103, i8* align 4 %104, i64 24, i1 false) #17
  %105 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %70, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* nonnull align 4 %103, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103)
  %106 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %107 = tail call zeroext i1 %106(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %69, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %68) #17
  br i1 %107, label %108, label %186

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %14, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109)
  %110 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %68, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %109, i8* align 4 %110, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %104, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* nonnull align 4 %109, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109)
  %111 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %112 = tail call zeroext i1 %111(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %68, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %112, label %113, label %186

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %15, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114)
  %115 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %114, i8* align 4 %115, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %110, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* nonnull align 4 %114, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114)
  br label %186

116:                                              ; preds = %3
  %117 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 1
  %118 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 2
  %119 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 3
  %120 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %1, i64 -1
  %121 = tail call fastcc i32 @_ZNSt3__17__sort5IRPFbRKN11color_utils12_GLOBAL__N_112KMeanClusterES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %117, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %118, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %119, %"class.color_utils::(anonymous namespace)::KMeanCluster"* %120, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** dereferenceable(8) %2)
  br label %186

122:                                              ; preds = %3
  %123 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 2
  %124 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 1
  %125 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %126 = tail call zeroext i1 %125(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %124, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  %127 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %128 = tail call zeroext i1 %127(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %123, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %124) #17
  br i1 %126, label %139, label %129

129:                                              ; preds = %122
  br i1 %128, label %130, label %153

130:                                              ; preds = %129
  %131 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131)
  %132 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %124, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %131, i8* align 4 %132, i64 24, i1 false) #17
  %133 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %123, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* nonnull align 4 %131, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131)
  %134 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %135 = tail call zeroext i1 %134(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %124, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %0) #17
  br i1 %135, label %136, label %153

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137)
  %138 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %137, i8* align 4 %138, i64 24, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %132, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* nonnull align 4 %137, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137)
  br label %153

139:                                              ; preds = %122
  br i1 %128, label %140, label %144

140:                                              ; preds = %139
  %141 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141)
  %142 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %141, i8* align 4 %142, i64 24, i1 false) #17
  %143 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %123, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %142, i8* align 4 %143, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* nonnull align 4 %141, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141)
  br label %153

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %10, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145)
  %146 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %145, i8* align 4 %146, i64 24, i1 false) #17
  %147 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %124, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* nonnull align 4 %145, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145)
  %148 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %149 = tail call zeroext i1 %148(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %123, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %124) #17
  br i1 %149, label %150, label %153

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %151, i8* align 4 %147, i64 24, i1 false) #17
  %152 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %123, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %152, i64 24, i1 false) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* nonnull align 4 %151, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151)
  br label %153

153:                                              ; preds = %129, %130, %136, %140, %144, %150
  %154 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %0, i64 3
  %155 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %154, %1
  br i1 %155, label %186, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %23, i64 0, i32 0, i64 0
  br label %158

158:                                              ; preds = %156, %179
  %159 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %154, %156 ], [ %181, %179 ]
  %160 = phi i32 [ 0, %156 ], [ %180, %179 ]
  %161 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %123, %156 ], [ %159, %179 ]
  %162 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %163 = call zeroext i1 %162(%"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %159, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %161) #17
  br i1 %163, label %164, label %179

164:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #17
  %165 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %159, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %157, i8* align 4 %165, i64 24, i1 false)
  br label %166

166:                                              ; preds = %172, %164
  %167 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %159, %164 ], [ %168, %172 ]
  %168 = phi %"class.color_utils::(anonymous namespace)::KMeanCluster"* [ %161, %164 ], [ %174, %172 ]
  %169 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %167, i64 0, i32 0, i64 0
  %170 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %168, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %169, i8* align 4 %170, i64 24, i1 false)
  %171 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %168, %0
  br i1 %171, label %176, label %172

172:                                              ; preds = %166
  %173 = load i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)*, i1 (%"class.color_utils::(anonymous namespace)::KMeanCluster"*, %"class.color_utils::(anonymous namespace)::KMeanCluster"*)** %2, align 8
  %174 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %168, i64 -1
  %175 = call zeroext i1 %173(%"class.color_utils::(anonymous namespace)::KMeanCluster"* nonnull dereferenceable(24) %23, %"class.color_utils::(anonymous namespace)::KMeanCluster"* dereferenceable(24) %174) #17
  br i1 %175, label %166, label %176

176:                                              ; preds = %166, %172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %170, i8* nonnull align 4 %157, i64 24, i1 false)
  %177 = add i32 %160, 1
  %178 = icmp eq i32 %177, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #17
  br i1 %178, label %183, label %179

179:                                              ; preds = %176, %158
  %180 = phi i32 [ %177, %176 ], [ %160, %158 ]
  %181 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %159, i64 1
  %182 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %181, %1
  br i1 %182, label %186, label %158

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::KMeanCluster", %"class.color_utils::(anonymous namespace)::KMeanCluster"* %159, i64 1
  %185 = icmp eq %"class.color_utils::(anonymous namespace)::KMeanCluster"* %184, %1
  br label %186

186:                                              ; preds = %179, %183, %153, %113, %108, %102, %99, %64, %58, %54, %50, %44, %43, %28, %32, %3, %3, %116
  %187 = phi i1 [ true, %116 ], [ true, %3 ], [ true, %3 ], [ true, %32 ], [ true, %28 ], [ true, %43 ], [ true, %44 ], [ true, %50 ], [ true, %54 ], [ true, %58 ], [ true, %64 ], [ true, %99 ], [ true, %102 ], [ true, %108 ], [ true, %113 ], [ true, %153 ], [ %185, %183 ], [ true, %179 ]
  ret i1 %187
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !16
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !16
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !16
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !28

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !16
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.83"* dereferenceable(1)) local_unnamed_addr #4 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !16
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #16, !noalias !29
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !29
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !29
  store i32 %62, i32* %61, align 4, !noalias !29
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !29
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !29
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !29
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !16
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #17
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #17, !range !16
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #17, !range !16
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZNSt3__116allocator_traitsINS_9allocatorIN11color_utils12_GLOBAL__N_18ColorBoxEEEE9constructIS4_JPNS_6vectorIjNS1_IjEEEEEvEEvRS5_PT_DpOT0_(%"class.color_utils::(anonymous namespace)::ColorBox"* nocapture, %"class.std::__1::vector.48"** nocapture readonly dereferenceable(8)) unnamed_addr #6 align 2 {
  %3 = load %"class.std::__1::vector.48"*, %"class.std::__1::vector.48"** %1, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %3, i64 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.48"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 0
  store %"class.std::__1::vector.48"* %3, %"class.std::__1::vector.48"** %10, align 8
  %11 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 1
  %12 = bitcast %"class.gfx::Range"* %11 to i64*
  %13 = shl i64 %9, 30
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 7
  %20 = getelementptr inbounds %"class.color_utils::(anonymous namespace)::ColorBox", %"class.color_utils::(anonymous namespace)::ColorBox"* %0, i64 0, i32 9
  store i32 0, i32* %20, align 8
  store i8 -1, i8* %14, align 8
  store i8 -1, i8* %15, align 1
  store i8 -1, i8* %16, align 2
  store i8 0, i8* %17, align 1
  store i8 0, i8* %18, align 4
  store i8 0, i8* %19, align 1
  %21 = lshr i64 %9, 2
  %22 = and i64 %21, 4294967295
  %23 = trunc i64 %21 to i32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %67, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %3, i64 0, i32 0, i32 0
  br label %37

27:                                               ; preds = %37
  %28 = zext i8 %60 to i32
  %29 = zext i8 %51 to i32
  %30 = add nuw nsw i32 %28, 1
  %31 = zext i8 %62 to i32
  %32 = zext i8 %55 to i32
  %33 = add nuw nsw i32 %31, 1
  %34 = zext i8 %64 to i32
  %35 = zext i8 %58 to i32
  %36 = add nuw nsw i32 %34, 1
  br label %67

37:                                               ; preds = %37, %25
  %38 = phi i8 [ 0, %25 ], [ %64, %37 ]
  %39 = phi i8 [ 0, %25 ], [ %62, %37 ]
  %40 = phi i8 [ 0, %25 ], [ %60, %37 ]
  %41 = phi i8 [ -1, %25 ], [ %58, %37 ]
  %42 = phi i8 [ -1, %25 ], [ %55, %37 ]
  %43 = phi i8 [ -1, %25 ], [ %51, %37 ]
  %44 = phi i64 [ 0, %25 ], [ %65, %37 ]
  %45 = load i32*, i32** %26, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %44
  %47 = load i32, i32* %46, align 4
  %48 = lshr i32 %47, 16
  %49 = trunc i32 %48 to i8
  %50 = icmp ult i8 %43, %49
  %51 = select i1 %50, i8 %43, i8 %49
  store i8 %51, i8* %14, align 8
  %52 = lshr i32 %47, 8
  %53 = trunc i32 %52 to i8
  %54 = icmp ult i8 %42, %53
  %55 = select i1 %54, i8 %42, i8 %53
  store i8 %55, i8* %15, align 1
  %56 = trunc i32 %47 to i8
  %57 = icmp ult i8 %41, %56
  %58 = select i1 %57, i8 %41, i8 %56
  store i8 %58, i8* %16, align 2
  %59 = icmp ugt i8 %40, %49
  %60 = select i1 %59, i8 %40, i8 %49
  store i8 %60, i8* %17, align 1
  %61 = icmp ugt i8 %39, %53
  %62 = select i1 %61, i8 %39, i8 %53
  store i8 %62, i8* %18, align 4
  %63 = icmp ugt i8 %38, %56
  %64 = select i1 %63, i8 %38, i8 %56
  store i8 %64, i8* %19, align 1
  %65 = add nuw nsw i64 %44, 1
  %66 = icmp eq i64 %65, %22
  br i1 %66, label %27, label %37

67:                                               ; preds = %2, %27
  %68 = phi i32 [ %35, %27 ], [ 255, %2 ]
  %69 = phi i32 [ %36, %27 ], [ 1, %2 ]
  %70 = phi i32 [ %32, %27 ], [ 255, %2 ]
  %71 = phi i32 [ %33, %27 ], [ 1, %2 ]
  %72 = phi i32 [ %29, %27 ], [ 255, %2 ]
  %73 = phi i32 [ %30, %27 ], [ 1, %2 ]
  %74 = sub nsw i32 %73, %72
  %75 = sub nsw i32 %71, %70
  %76 = sub nsw i32 %69, %68
  %77 = mul nsw i32 %75, %76
  %78 = mul i32 %77, %74
  store i32 %78, i32* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKjEJEEES5_E3RunEPNS0_13BindStateBaseES4_(%"class.base::internal::BindStateBase"*, i32* dereferenceable(4)) #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (i32*)**
  %5 = load i1 (i32*)*, i1 (i32*)** %4, align 8
  %6 = tail call zeroext i1 %5(i32* dereferenceable(4) %1) #17
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbRKjEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #4 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN11color_utils12_GLOBAL__N_18ColorBox5SplitEv: argument 0"}
!7 = distinct !{!7, !"_ZN11color_utils12_GLOBAL__N_18ColorBox5SplitEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11, !9}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !11, !9}
!14 = distinct !{!14, !4}
!15 = distinct !{!15, !4}
!16 = !{i64 0, i64 65}
!17 = distinct !{!17, !4}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbRKjEJEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbRKjEJEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base13BindRepeatingIPFbRKjEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!22 = distinct !{!22, !"_ZN4base13BindRepeatingIPFbRKjEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN11color_utils12_GLOBAL__N_124CalculateProminentColorsERK8SkBitmapRKNSt3__16vectorINS0_12ColorBracketENS4_9allocatorIS6_EEEERKN3gfx4RectEN4absl8optionalIN4base17RepeatingCallbackIFbRKjEEEEE: argument 0"}
!25 = distinct !{!25, !"_ZN11color_utils12_GLOBAL__N_124CalculateProminentColorsERK8SkBitmapRKNSt3__16vectorINS0_12ColorBracketENS4_9allocatorIS6_EEEERKN3gfx4RectEN4absl8optionalIN4base17RepeatingCallbackIFbRKjEEEEE"}
!26 = distinct !{!26, !4}
!27 = distinct !{!27, !4}
!28 = distinct !{!28, !4}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
