; ModuleID = '../../third_party/breakpad/breakpad/src/client/linux/minidump_writer/minidump_writer.cc'
source_filename = "../../third_party/breakpad/breakpad/src/client/linux/minidump_writer/minidump_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::list.1" = type { %"class.std::__1::__list_imp.2" }
%"class.std::__1::__list_imp.2" = type { %"struct.std::__1::__list_node_base.3", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base.3" = type { %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.google_breakpad::LinuxPtraceDumper" = type <{ %"class.google_breakpad::LinuxDumper", i8, [7 x i8] }>
%"class.google_breakpad::LinuxDumper" = type { i32 (...)**, i32, i8*, i64, i32, i32, %"class.std::__1::vector", i32, %"class.google_breakpad::PageAllocator", %"class.google_breakpad::wasteful_vector", %"class.google_breakpad::wasteful_vector.20", %"class.google_breakpad::wasteful_vector.29" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64* }
%"class.google_breakpad::PageAllocator" = type { i64, %"struct.google_breakpad::PageAllocator::PageHeader"*, i8*, i64, i64 }
%"struct.google_breakpad::PageAllocator::PageHeader" = type { %"struct.google_breakpad::PageAllocator::PageHeader"*, i64 }
%"class.google_breakpad::wasteful_vector" = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.google_breakpad::PageStdAllocator" }
%"struct.google_breakpad::PageStdAllocator" = type { %"class.google_breakpad::PageAllocator"*, i32*, i64 }
%"class.google_breakpad::wasteful_vector.20" = type { %"class.std::__1::vector.21" }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"**, %"class.std::__1::__compressed_pair.23" }
%"struct.google_breakpad::MappingInfo" = type { i64, i64, %struct.anon, i64, i8, [255 x i8] }
%struct.anon = type { i64, i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.google_breakpad::MappingInfo"** }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.google_breakpad::PageStdAllocator.26" }
%"struct.google_breakpad::PageStdAllocator.26" = type { %"class.google_breakpad::PageAllocator"*, %"struct.google_breakpad::MappingInfo"**, i64 }
%"class.google_breakpad::wasteful_vector.29" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i64*, i64*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.google_breakpad::PageStdAllocator.34" }
%"struct.google_breakpad::PageStdAllocator.34" = type { %"class.google_breakpad::PageAllocator"*, i64*, i64 }
%"class.(anonymous namespace)::MinidumpWriter" = type <{ i32, [4 x i8], i8*, %struct.ucontext_t*, %struct._libc_fpstate*, %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::MinidumpFileWriter", i64, %struct.MDLocationDescriptor, %"class.google_breakpad::wasteful_vector.35", %"class.std::__1::list"*, %"class.std::__1::list.1"*, i8, [7 x i8], i64, %"struct.google_breakpad::MappingInfo"*, i8, [7 x i8] }>
%struct.ucontext_t = type { i64, %struct.ucontext_t*, %struct.stack_t, %struct.mcontext_t, %struct.__sigset_t, %struct._libc_fpstate, [4 x i64] }
%struct.stack_t = type { i8*, i32, i64 }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct.__sigset_t = type { [16 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%"class.google_breakpad::MinidumpFileWriter" = type { i32, i8, i32, i64 }
%struct.MDLocationDescriptor = type { i32, i32 }
%"class.google_breakpad::wasteful_vector.35" = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor*, %"class.std::__1::__compressed_pair.38" }
%struct.MDMemoryDescriptor = type { i64, %struct.MDLocationDescriptor }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %struct.MDMemoryDescriptor* }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.google_breakpad::PageStdAllocator.41" }
%"struct.google_breakpad::PageStdAllocator.41" = type { %"class.google_breakpad::PageAllocator"*, %struct.MDMemoryDescriptor*, i64 }
%"struct.google_breakpad::ExceptionHandler::CrashContext" = type { %struct.siginfo_t, i32, %struct.ucontext_t, %struct._libc_fpstate }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon }
%union.anon = type { %struct.anon.47, [80 x i8] }
%struct.anon.47 = type { i32, i32, i32, i64, i64 }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%"class.google_breakpad::TypedMDRVA.78" = type <{ %"class.google_breakpad::UntypedMDRVA", %struct.MDRawSystemInfo, i32, [4 x i8] }>
%"class.google_breakpad::UntypedMDRVA" = type { %"class.google_breakpad::MinidumpFileWriter"*, i32, i64 }
%struct.MDRawSystemInfo = type { i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, i16, i16, %union.MDCPUInformation }
%union.MDCPUInformation = type { %struct.anon.81, [8 x i8] }
%struct.anon.81 = type { [2 x i64] }
%"class.google_breakpad::TypedMDRVA.76" = type <{ %"class.google_breakpad::UntypedMDRVA", %struct.MDRawExceptionStream, i32, [4 x i8] }>
%struct.MDRawExceptionStream = type { i32, i32, %struct.MDException, %struct.MDLocationDescriptor }
%struct.MDException = type { i32, i32, i64, i64, i32, i32, [15 x i64] }
%"class.google_breakpad::TypedMDRVA.57" = type { %"class.google_breakpad::UntypedMDRVA", i32, i32 }
%struct.MDRawModule = type { i64, i32, i32, i32, i32, %struct.MDVSFixedFileInfo, %struct.MDLocationDescriptor, %struct.MDLocationDescriptor, [2 x i32], [2 x i32] }
%struct.MDVSFixedFileInfo = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MDRawThread = type { i32, i32, i32, i32, i64, %struct.MDMemoryDescriptor, %struct.MDLocationDescriptor }
%"class.google_breakpad::TypedMDRVA.58" = type <{ %"class.google_breakpad::UntypedMDRVA", %struct.MDRawContextAMD64, i32, [4 x i8] }>
%struct.MDRawContextAMD64 = type { i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i16, i16, i16, i16, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.anon.59, [26 x %struct.uint128_struct], i64, i64, i64, i64, i64, i64 }
%union.anon.59 = type { %struct.MDXmmSaveArea32AMD64 }
%struct.MDXmmSaveArea32AMD64 = type { i16, i16, i8, i8, i16, i32, i16, i16, i32, i16, i16, i32, i32, [8 x %struct.uint128_struct], [16 x %struct.uint128_struct], [96 x i8] }
%struct.uint128_struct = type { i64, i64 }
%"struct.google_breakpad::ThreadInfo" = type { i32, i32, i64, %struct.user_regs_struct, %struct.user_fpregs_struct, [8 x i64] }
%struct.user_regs_struct = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.user_fpregs_struct = type { i16, i16, i16, i16, i64, i64, i32, i32, [32 x i32], [64 x i32], [24 x i32] }
%struct.Elf64_Phdr = type { i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.Elf64_Dyn = type { i64, %union.anon.83 }
%union.anon.83 = type { i64 }
%struct.r_debug = type { i32, %struct.link_map*, i64, i32, i64 }
%struct.link_map = type { i64, i8*, %struct.Elf64_Dyn*, %struct.link_map*, %struct.link_map* }
%"class.google_breakpad::TypedMDRVA.84" = type <{ %"class.google_breakpad::UntypedMDRVA", %struct.MDRawLinkMap64, i32, [4 x i8] }>
%struct.MDRawLinkMap64 = type { i64, i32, i64 }
%"class.google_breakpad::TypedMDRVA.86" = type <{ %"class.google_breakpad::UntypedMDRVA", %struct.MDRawDebug64, i32, [4 x i8] }>
%struct.MDRawDebug64 = type { i32, i32, i32, i64, i64, i64 }
%"class.google_breakpad::wasteful_vector.88" = type { %"class.std::__1::vector.89" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { i8*, i8*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.google_breakpad::PageStdAllocator.94" }
%"struct.google_breakpad::PageStdAllocator.94" = type { %"class.google_breakpad::PageAllocator"*, i8*, i64 }
%"class.google_breakpad::TypedMDRVA" = type { %"class.google_breakpad::UntypedMDRVA", %struct.MDRawDirectory, i32 }
%struct.MDRawDirectory = type { i32, %struct.MDLocationDescriptor }
%"class.google_breakpad::TypedMDRVA.56" = type <{ %"class.google_breakpad::UntypedMDRVA", %struct.MDRawHeader, i32, [4 x i8] }>
%struct.MDRawHeader = type { i32, i32, i32, i32, i32, i32, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__list_node.53" = type { %"struct.std::__1::__list_node_base", %"struct.google_breakpad::MappingEntry" }
%"struct.google_breakpad::MappingEntry" = type { %"struct.google_breakpad::MappingInfo", [16 x i8] }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.3", %"struct.google_breakpad::AppMemory" }
%"struct.google_breakpad::AppMemory" = type { i8*, i64 }
%"class.google_breakpad::ProcCpuInfoReader" = type { %"class.google_breakpad::LineReader", i32, i8*, i64 }
%"class.google_breakpad::LineReader" = type { i32, i8, i32, [512 x i8] }
%struct.Buffers = type { %struct.Buffers*, i64, [1008 x i8] }
%"class.google_breakpad::auto_wasteful_vector" = type <{ %"class.google_breakpad::wasteful_vector.62", [20 x i8], [4 x i8] }>
%"class.google_breakpad::wasteful_vector.62" = type { %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i8*, i8*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.google_breakpad::PageStdAllocator.68" }
%"struct.google_breakpad::PageStdAllocator.68" = type { %"class.google_breakpad::PageAllocator"*, i8*, i64 }

$_ZN15google_breakpad13PageAllocator5AllocEm = comdat any

$_ZNSt3__16vectorIhN15google_breakpad16PageStdAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSD_IS7_EES9_S9_ = comdat any

$_ZN15google_breakpad17ProcCpuInfoReader12GetNextFieldEPPKc = comdat any

$_ZNSt3__16vectorIcN15google_breakpad16PageStdAllocatorIcEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [14 x i8] c"/proc/cpuinfo\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"/etc/lsb-release\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"cmdline\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"environ\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"auxv\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"maps\00", align 1
@_ZZN12_GLOBAL__N_114MinidumpWriter19WriteCPUInformationEP15MDRawSystemInfoE14vendor_id_name = internal constant [10 x i8] c"vendor_id\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"processor\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"model\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"stepping\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"cpu family\00", align 1
@_ZZN12_GLOBAL__N_114MinidumpWriter18WriteOSInformationEP15MDRawSystemInfoE9separator = internal constant [2 x i8] c" \00", align 1
@_ZN15google_breakpad18MinidumpFileWriter13kInvalidMDRVAE = external local_unnamed_addr constant i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEPKciPKvmbmb(i8*, i32, i8*, i64, i1 zeroext, i64, i1 zeroext) local_unnamed_addr #0 {
  %8 = alloca %"class.std::__1::list", align 8
  %9 = alloca %"class.std::__1::list.1", align 8
  %10 = bitcast %"class.std::__1::list"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = bitcast %"class.std::__1::list.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.3"* %16, %"struct.std::__1::__list_node_base.3"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.3"* %16, %"struct.std::__1::__list_node_base.3"** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_117WriteMinidumpImplEPKciliPKvmRKNSt3__14listIN15google_breakpad12MappingEntryENS4_9allocatorIS7_EEEERKNS5_INS6_9AppMemoryENS8_ISD_EEEEbmb(i8* %0, i32 -1, i64 -1, i32 %1, i8* %2, i64 %3, %"class.std::__1::list"* nonnull dereferenceable(24) %8, %"class.std::__1::list.1"* nonnull dereferenceable(24) %9, i1 zeroext %4, i64 %5, i1 zeroext %6)
  %21 = load i64, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %44, label %23

23:                                               ; preds = %7
  %24 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %18, align 8
  %25 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %17, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base.3"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %24, i64 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base.3"** %31 to i64*
  store i64 %28, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::__list_node_base.3"* %24 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base.3"** %26 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  store i64 0, i64* %19, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base.3"* %24, %16
  br i1 %37, label %44, label %38

38:                                               ; preds = %23, %38
  %39 = phi %"struct.std::__1::__list_node_base.3"* [ %41, %38 ], [ %24, %23 ]
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %39, i64 0, i32 1
  %41 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %40, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base.3"* %39 to i8*
  call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__list_node_base.3"* %41, %16
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %7, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  %45 = load i64, i64* %14, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %68, label %47

47:                                               ; preds = %44
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %49 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  %51 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 0
  %54 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %54, i64 0, i32 1
  %56 = bitcast %"struct.std::__1::__list_node_base"** %55 to i64*
  store i64 %52, i64* %56, align 8
  %57 = bitcast %"struct.std::__1::__list_node_base"* %48 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64**
  %60 = load i64*, i64** %59, align 8
  store i64 %58, i64* %60, align 8
  store i64 0, i64* %14, align 8
  %61 = icmp eq %"struct.std::__1::__list_node_base"* %48, %11
  br i1 %61, label %68, label %62

62:                                               ; preds = %47, %62
  %63 = phi %"struct.std::__1::__list_node_base"* [ %65, %62 ], [ %48, %47 ]
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = bitcast %"struct.std::__1::__list_node_base"* %63 to i8*
  call void @_ZdlPv(i8* %66) #10
  %67 = icmp eq %"struct.std::__1::__list_node_base"* %65, %11
  br i1 %67, label %68, label %62

68:                                               ; preds = %62, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_117WriteMinidumpImplEPKciliPKvmRKNSt3__14listIN15google_breakpad12MappingEntryENS4_9allocatorIS7_EEEERKNS5_INS6_9AppMemoryENS8_ISD_EEEEbmb(i8*, i32, i64, i32, i8*, i64, %"class.std::__1::list"* dereferenceable(24), %"class.std::__1::list.1"* dereferenceable(24), i1 zeroext, i64, i1 zeroext) unnamed_addr #0 {
  %12 = alloca %"class.google_breakpad::LinuxPtraceDumper", align 8
  %13 = alloca %"class.(anonymous namespace)::MinidumpWriter", align 8
  %14 = bitcast %"class.google_breakpad::LinuxPtraceDumper"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 264, i1 false)
  call void @_ZN15google_breakpad17LinuxPtraceDumperC1Ei(%"class.google_breakpad::LinuxPtraceDumper"* nonnull %12, i32 %3) #9
  %15 = icmp eq i8* %4, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = icmp eq i64 %5, 1616
  br i1 %17, label %18, label %142

18:                                               ; preds = %16
  %19 = bitcast i8* %4 to %"struct.google_breakpad::ExceptionHandler::CrashContext"*
  %20 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %12, i64 0, i32 0
  %21 = bitcast i8* %4 to %struct.siginfo_t*
  call void @_ZN15google_breakpad11LinuxDumper23SetCrashInfoFromSigInfoERK9siginfo_t(%"class.google_breakpad::LinuxDumper"* nonnull %20, %struct.siginfo_t* nonnull dereferenceable(128) %21) #9
  %22 = getelementptr inbounds i8, i8* %4, i64 128
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %12, i64 0, i32 0, i32 7
  store i32 %24, i32* %25, align 8
  br label %26

26:                                               ; preds = %11, %18
  %27 = phi %"struct.google_breakpad::ExceptionHandler::CrashContext"* [ %19, %18 ], [ null, %11 ]
  %28 = bitcast %"class.(anonymous namespace)::MinidumpWriter"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 176, i1 false)
  %29 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %12, i64 0, i32 0
  %30 = zext i1 %8 to i8
  %31 = zext i1 %10 to i8
  %32 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 0
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 2
  store i8* %0, i8** %33, align 8
  %34 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 3
  %35 = icmp ne %"struct.google_breakpad::ExceptionHandler::CrashContext"* %27, null
  %36 = getelementptr inbounds %"struct.google_breakpad::ExceptionHandler::CrashContext", %"struct.google_breakpad::ExceptionHandler::CrashContext"* %27, i64 0, i32 2
  %37 = select i1 %35, %struct.ucontext_t* %36, %struct.ucontext_t* null
  store %struct.ucontext_t* %37, %struct.ucontext_t** %34, align 8
  %38 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 4
  %39 = getelementptr inbounds %"struct.google_breakpad::ExceptionHandler::CrashContext", %"struct.google_breakpad::ExceptionHandler::CrashContext"* %27, i64 0, i32 3
  %40 = select i1 %35, %struct._libc_fpstate* %39, %struct._libc_fpstate* null
  store %struct._libc_fpstate* %40, %struct._libc_fpstate** %38, align 8
  %41 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 5
  store %"class.google_breakpad::LinuxDumper"* %29, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %42 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 6
  call void @_ZN15google_breakpad18MinidumpFileWriterC1Ev(%"class.google_breakpad::MinidumpFileWriter"* %42) #9
  %43 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 7
  store i64 -1, i64* %43, align 8
  %44 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 9
  %45 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %46 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %45, i64 0, i32 8
  %47 = bitcast %"class.google_breakpad::wasteful_vector.35"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #9
  %48 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  store %"class.google_breakpad::PageAllocator"* %46, %"class.google_breakpad::PageAllocator"** %48, align 8
  %49 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %50 = bitcast %struct.MDMemoryDescriptor** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #9
  %51 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %struct.MDMemoryDescriptor** %51 to i64*
  %53 = bitcast %"class.google_breakpad::wasteful_vector.35"* %44 to i64*
  %54 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 9, i32 0, i32 0, i32 1
  %55 = bitcast %struct.MDMemoryDescriptor** %54 to i64*
  %56 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %46, i64 256) #9
  %57 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.35", %"class.google_breakpad::wasteful_vector.35"* %44, i64 0, i32 0, i32 0, i32 0
  %58 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %57, align 8
  %59 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %54, align 8
  %60 = ptrtoint i8* %56 to i64
  %61 = getelementptr inbounds i8, i8* %56, i64 256
  %62 = ptrtoint i8* %61 to i64
  %63 = icmp eq %struct.MDMemoryDescriptor* %59, %58
  br i1 %63, label %112, label %64

64:                                               ; preds = %26
  %65 = ptrtoint %struct.MDMemoryDescriptor* %58 to i64
  %66 = bitcast i8* %56 to %struct.MDMemoryDescriptor*
  %67 = getelementptr %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %59, i64 -1, i32 0
  %68 = ptrtoint i64* %67 to i64
  %69 = sub i64 %68, %65
  %70 = lshr i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %64, %74
  %75 = phi %struct.MDMemoryDescriptor* [ %78, %74 ], [ %66, %64 ]
  %76 = phi %struct.MDMemoryDescriptor* [ %79, %74 ], [ %59, %64 ]
  %77 = phi i64 [ %82, %74 ], [ %72, %64 ]
  %78 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %75, i64 -1
  %79 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %76, i64 -1
  %80 = bitcast %struct.MDMemoryDescriptor* %78 to i8*
  %81 = bitcast %struct.MDMemoryDescriptor* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false) #9
  %82 = add i64 %77, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %74, !llvm.loop !2

84:                                               ; preds = %74, %64
  %85 = phi %struct.MDMemoryDescriptor* [ undef, %64 ], [ %78, %74 ]
  %86 = phi %struct.MDMemoryDescriptor* [ %66, %64 ], [ %78, %74 ]
  %87 = phi %struct.MDMemoryDescriptor* [ %59, %64 ], [ %79, %74 ]
  %88 = icmp ult i64 %69, 48
  br i1 %88, label %109, label %89

89:                                               ; preds = %84, %89
  %90 = phi %struct.MDMemoryDescriptor* [ %104, %89 ], [ %86, %84 ]
  %91 = phi %struct.MDMemoryDescriptor* [ %105, %89 ], [ %87, %84 ]
  %92 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %90, i64 -1
  %93 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %91, i64 -1
  %94 = bitcast %struct.MDMemoryDescriptor* %92 to i8*
  %95 = bitcast %struct.MDMemoryDescriptor* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #9
  %96 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %90, i64 -2
  %97 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %91, i64 -2
  %98 = bitcast %struct.MDMemoryDescriptor* %96 to i8*
  %99 = bitcast %struct.MDMemoryDescriptor* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #9
  %100 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %90, i64 -3
  %101 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %91, i64 -3
  %102 = bitcast %struct.MDMemoryDescriptor* %100 to i8*
  %103 = bitcast %struct.MDMemoryDescriptor* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #9
  %104 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %90, i64 -4
  %105 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %91, i64 -4
  %106 = bitcast %struct.MDMemoryDescriptor* %104 to i8*
  %107 = bitcast %struct.MDMemoryDescriptor* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #9
  %108 = icmp eq %struct.MDMemoryDescriptor* %105, %58
  br i1 %108, label %109, label %89

109:                                              ; preds = %89, %84
  %110 = phi %struct.MDMemoryDescriptor* [ %85, %84 ], [ %104, %89 ]
  %111 = ptrtoint %struct.MDMemoryDescriptor* %110 to i64
  br label %112

112:                                              ; preds = %26, %109
  %113 = phi i64 [ %111, %109 ], [ %60, %26 ]
  store i64 %113, i64* %53, align 8
  store i64 %60, i64* %55, align 8
  store i64 %62, i64* %52, align 8
  %114 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 10
  store %"class.std::__1::list"* %6, %"class.std::__1::list"** %114, align 8
  %115 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 11
  store %"class.std::__1::list.1"* %7, %"class.std::__1::list.1"** %115, align 8
  %116 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 12
  store i8 %30, i8* %116, align 8
  %117 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 14
  store i64 %9, i64* %117, align 8
  %118 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 15
  store %"struct.google_breakpad::MappingInfo"* null, %"struct.google_breakpad::MappingInfo"** %118, align 8
  %119 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 16
  store i8 %31, i8* %119, align 8
  store i64 %2, i64* %43, align 8
  %120 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4InitEv(%"class.(anonymous namespace)::MinidumpWriter"* nonnull %13)
  br i1 %120, label %121, label %123

121:                                              ; preds = %112
  %122 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4DumpEv(%"class.(anonymous namespace)::MinidumpWriter"* nonnull %13)
  br label %123

123:                                              ; preds = %112, %121
  %124 = phi i1 [ %122, %121 ], [ false, %112 ]
  %125 = load i32, i32* %32, align 8
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  %128 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter5CloseEv(%"class.google_breakpad::MinidumpFileWriter"* %42) #9
  br label %129

129:                                              ; preds = %127, %123
  %130 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %131 = bitcast %"class.google_breakpad::LinuxDumper"* %130 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %132 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %131, align 8
  %133 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %132, i64 6
  %134 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %133, align 8
  %135 = call zeroext i1 %134(%"class.google_breakpad::LinuxDumper"* %130) #9
  %136 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %13, i64 0, i32 9, i32 0, i32 0, i32 0
  %137 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %136, align 8
  %138 = icmp eq %struct.MDMemoryDescriptor* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %129
  %140 = ptrtoint %struct.MDMemoryDescriptor* %137 to i64
  store i64 %140, i64* %55, align 8
  br label %141

141:                                              ; preds = %129, %139
  call void @_ZN15google_breakpad18MinidumpFileWriterD1Ev(%"class.google_breakpad::MinidumpFileWriter"* %42) #9
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %28) #9
  br label %142

142:                                              ; preds = %16, %141
  %143 = phi i1 [ %124, %141 ], [ false, %16 ]
  %144 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %12, i64 0, i32 0
  call void @_ZN15google_breakpad11LinuxDumperD2Ev(%"class.google_breakpad::LinuxDumper"* nonnull %144) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %14) #9
  ret i1 %143
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEiiPKvmbmb(i32, i32, i8*, i64, i1 zeroext, i64, i1 zeroext) local_unnamed_addr #0 {
  %8 = alloca %"class.std::__1::list", align 8
  %9 = alloca %"class.std::__1::list.1", align 8
  %10 = bitcast %"class.std::__1::list"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = bitcast %"class.std::__1::list.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.3"* %16, %"struct.std::__1::__list_node_base.3"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.3"* %16, %"struct.std::__1::__list_node_base.3"** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_117WriteMinidumpImplEPKciliPKvmRKNSt3__14listIN15google_breakpad12MappingEntryENS4_9allocatorIS7_EEEERKNS5_INS6_9AppMemoryENS8_ISD_EEEEbmb(i8* null, i32 %0, i64 -1, i32 %1, i8* %2, i64 %3, %"class.std::__1::list"* nonnull dereferenceable(24) %8, %"class.std::__1::list.1"* nonnull dereferenceable(24) %9, i1 zeroext %4, i64 %5, i1 zeroext %6)
  %21 = load i64, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %44, label %23

23:                                               ; preds = %7
  %24 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %18, align 8
  %25 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %17, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base.3"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %24, i64 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base.3"** %31 to i64*
  store i64 %28, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::__list_node_base.3"* %24 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base.3"** %26 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  store i64 0, i64* %19, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base.3"* %24, %16
  br i1 %37, label %44, label %38

38:                                               ; preds = %23, %38
  %39 = phi %"struct.std::__1::__list_node_base.3"* [ %41, %38 ], [ %24, %23 ]
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %39, i64 0, i32 1
  %41 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %40, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base.3"* %39 to i8*
  call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__list_node_base.3"* %41, %16
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %7, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  %45 = load i64, i64* %14, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %68, label %47

47:                                               ; preds = %44
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %49 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  %51 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 0
  %54 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %54, i64 0, i32 1
  %56 = bitcast %"struct.std::__1::__list_node_base"** %55 to i64*
  store i64 %52, i64* %56, align 8
  %57 = bitcast %"struct.std::__1::__list_node_base"* %48 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64**
  %60 = load i64*, i64** %59, align 8
  store i64 %58, i64* %60, align 8
  store i64 0, i64* %14, align 8
  %61 = icmp eq %"struct.std::__1::__list_node_base"* %48, %11
  br i1 %61, label %68, label %62

62:                                               ; preds = %47, %62
  %63 = phi %"struct.std::__1::__list_node_base"* [ %65, %62 ], [ %48, %47 ]
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = bitcast %"struct.std::__1::__list_node_base"* %63 to i8*
  call void @_ZdlPv(i8* %66) #10
  %67 = icmp eq %"struct.std::__1::__list_node_base"* %65, %11
  br i1 %67, label %68, label %62

68:                                               ; preds = %62, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEPKcii(i8*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.google_breakpad::LinuxPtraceDumper", align 8
  %5 = alloca %"class.std::__1::list", align 8
  %6 = alloca %"class.std::__1::list.1", align 8
  %7 = alloca %"class.(anonymous namespace)::MinidumpWriter", align 8
  %8 = bitcast %"class.google_breakpad::LinuxPtraceDumper"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 264, i1 false)
  call void @_ZN15google_breakpad17LinuxPtraceDumperC1Ei(%"class.google_breakpad::LinuxPtraceDumper"* nonnull %4, i32 %1) #9
  %9 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %4, i64 0, i32 0, i32 4
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %4, i64 0, i32 0, i32 7
  store i32 %2, i32* %11, align 8
  %12 = bitcast %"class.std::__1::list"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %13, align 8
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %14, align 8
  store i64 0, i64* %15, align 8
  %17 = bitcast %"class.std::__1::list.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %6, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %6, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %6, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.3"* %21, %"struct.std::__1::__list_node_base.3"** %18, align 8
  store %"struct.std::__1::__list_node_base.3"* %21, %"struct.std::__1::__list_node_base.3"** %19, align 8
  store i64 0, i64* %20, align 8
  %22 = bitcast %"class.(anonymous namespace)::MinidumpWriter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 176, i1 false)
  %23 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 0
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 2
  store i8* %0, i8** %24, align 8
  %25 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 3
  %26 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 5
  %27 = bitcast %struct.ucontext_t** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false)
  store %"class.google_breakpad::LinuxDumper"* %9, %"class.google_breakpad::LinuxDumper"** %26, align 8
  %28 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 6
  call void @_ZN15google_breakpad18MinidumpFileWriterC1Ev(%"class.google_breakpad::MinidumpFileWriter"* %28) #9
  %29 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 7
  store i64 -1, i64* %29, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 9
  %31 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %26, align 8
  %32 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %31, i64 0, i32 8
  %33 = bitcast %"class.google_breakpad::wasteful_vector.35"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  %34 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  store %"class.google_breakpad::PageAllocator"* %32, %"class.google_breakpad::PageAllocator"** %34, align 8
  %35 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %struct.MDMemoryDescriptor** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #9
  %37 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %struct.MDMemoryDescriptor** %37 to i64*
  %39 = bitcast %"class.google_breakpad::wasteful_vector.35"* %30 to i64*
  %40 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 9, i32 0, i32 0, i32 1
  %41 = bitcast %struct.MDMemoryDescriptor** %40 to i64*
  %42 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %32, i64 256) #9
  %43 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.35", %"class.google_breakpad::wasteful_vector.35"* %30, i64 0, i32 0, i32 0, i32 0
  %44 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %43, align 8
  %45 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %40, align 8
  %46 = ptrtoint i8* %42 to i64
  %47 = getelementptr inbounds i8, i8* %42, i64 256
  %48 = ptrtoint i8* %47 to i64
  %49 = icmp eq %struct.MDMemoryDescriptor* %45, %44
  br i1 %49, label %98, label %50

50:                                               ; preds = %3
  %51 = ptrtoint %struct.MDMemoryDescriptor* %44 to i64
  %52 = bitcast i8* %42 to %struct.MDMemoryDescriptor*
  %53 = getelementptr %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %45, i64 -1, i32 0
  %54 = ptrtoint i64* %53 to i64
  %55 = sub i64 %54, %51
  %56 = lshr i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %50, %60
  %61 = phi %struct.MDMemoryDescriptor* [ %64, %60 ], [ %52, %50 ]
  %62 = phi %struct.MDMemoryDescriptor* [ %65, %60 ], [ %45, %50 ]
  %63 = phi i64 [ %68, %60 ], [ %58, %50 ]
  %64 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %61, i64 -1
  %65 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %62, i64 -1
  %66 = bitcast %struct.MDMemoryDescriptor* %64 to i8*
  %67 = bitcast %struct.MDMemoryDescriptor* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false) #9
  %68 = add i64 %63, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %60, !llvm.loop !4

70:                                               ; preds = %60, %50
  %71 = phi %struct.MDMemoryDescriptor* [ undef, %50 ], [ %64, %60 ]
  %72 = phi %struct.MDMemoryDescriptor* [ %52, %50 ], [ %64, %60 ]
  %73 = phi %struct.MDMemoryDescriptor* [ %45, %50 ], [ %65, %60 ]
  %74 = icmp ult i64 %55, 48
  br i1 %74, label %95, label %75

75:                                               ; preds = %70, %75
  %76 = phi %struct.MDMemoryDescriptor* [ %90, %75 ], [ %72, %70 ]
  %77 = phi %struct.MDMemoryDescriptor* [ %91, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %76, i64 -1
  %79 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %77, i64 -1
  %80 = bitcast %struct.MDMemoryDescriptor* %78 to i8*
  %81 = bitcast %struct.MDMemoryDescriptor* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false) #9
  %82 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %76, i64 -2
  %83 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %77, i64 -2
  %84 = bitcast %struct.MDMemoryDescriptor* %82 to i8*
  %85 = bitcast %struct.MDMemoryDescriptor* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 16, i1 false) #9
  %86 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %76, i64 -3
  %87 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %77, i64 -3
  %88 = bitcast %struct.MDMemoryDescriptor* %86 to i8*
  %89 = bitcast %struct.MDMemoryDescriptor* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #9
  %90 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %76, i64 -4
  %91 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %77, i64 -4
  %92 = bitcast %struct.MDMemoryDescriptor* %90 to i8*
  %93 = bitcast %struct.MDMemoryDescriptor* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #9
  %94 = icmp eq %struct.MDMemoryDescriptor* %91, %44
  br i1 %94, label %95, label %75

95:                                               ; preds = %75, %70
  %96 = phi %struct.MDMemoryDescriptor* [ %71, %70 ], [ %90, %75 ]
  %97 = ptrtoint %struct.MDMemoryDescriptor* %96 to i64
  br label %98

98:                                               ; preds = %3, %95
  %99 = phi i64 [ %97, %95 ], [ %46, %3 ]
  store i64 %99, i64* %39, align 8
  store i64 %46, i64* %41, align 8
  store i64 %48, i64* %38, align 8
  %100 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 10
  store %"class.std::__1::list"* %5, %"class.std::__1::list"** %100, align 8
  %101 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 11
  store %"class.std::__1::list.1"* %6, %"class.std::__1::list.1"** %101, align 8
  %102 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 12
  store i8 0, i8* %102, align 8
  %103 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 14
  %104 = bitcast i64* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 17, i1 false)
  %105 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4InitEv(%"class.(anonymous namespace)::MinidumpWriter"* nonnull %7)
  br i1 %105, label %106, label %108

106:                                              ; preds = %98
  %107 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4DumpEv(%"class.(anonymous namespace)::MinidumpWriter"* nonnull %7)
  br label %108

108:                                              ; preds = %98, %106
  %109 = phi i1 [ %107, %106 ], [ false, %98 ]
  %110 = load i32, i32* %23, align 8
  %111 = icmp eq i32 %110, -1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter5CloseEv(%"class.google_breakpad::MinidumpFileWriter"* %28) #9
  br label %114

114:                                              ; preds = %112, %108
  %115 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %26, align 8
  %116 = bitcast %"class.google_breakpad::LinuxDumper"* %115 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %117 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %117, i64 6
  %119 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %118, align 8
  %120 = call zeroext i1 %119(%"class.google_breakpad::LinuxDumper"* %115) #9
  %121 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %7, i64 0, i32 9, i32 0, i32 0, i32 0
  %122 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %121, align 8
  %123 = icmp eq %struct.MDMemoryDescriptor* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = ptrtoint %struct.MDMemoryDescriptor* %122 to i64
  store i64 %125, i64* %41, align 8
  br label %126

126:                                              ; preds = %114, %124
  call void @_ZN15google_breakpad18MinidumpFileWriterD1Ev(%"class.google_breakpad::MinidumpFileWriter"* %28) #9
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %22) #9
  %127 = load i64, i64* %20, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %150, label %129

129:                                              ; preds = %126
  %130 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %19, align 8
  %131 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %18, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %131, i64 0, i32 1
  %133 = bitcast %"struct.std::__1::__list_node_base.3"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %130, i64 0, i32 0
  %136 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %136, i64 0, i32 1
  %138 = bitcast %"struct.std::__1::__list_node_base.3"** %137 to i64*
  store i64 %134, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__list_node_base.3"* %130 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"struct.std::__1::__list_node_base.3"** %132 to i64**
  %142 = load i64*, i64** %141, align 8
  store i64 %140, i64* %142, align 8
  store i64 0, i64* %20, align 8
  %143 = icmp eq %"struct.std::__1::__list_node_base.3"* %130, %21
  br i1 %143, label %150, label %144

144:                                              ; preds = %129, %144
  %145 = phi %"struct.std::__1::__list_node_base.3"* [ %147, %144 ], [ %130, %129 ]
  %146 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %145, i64 0, i32 1
  %147 = load %"struct.std::__1::__list_node_base.3"*, %"struct.std::__1::__list_node_base.3"** %146, align 8
  %148 = bitcast %"struct.std::__1::__list_node_base.3"* %145 to i8*
  call void @_ZdlPv(i8* %148) #10
  %149 = icmp eq %"struct.std::__1::__list_node_base.3"* %147, %21
  br i1 %149, label %150, label %144

150:                                              ; preds = %144, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %151 = load i64, i64* %15, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %174, label %153

153:                                              ; preds = %150
  %154 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %155 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %155, i64 0, i32 1
  %157 = bitcast %"struct.std::__1::__list_node_base"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %160 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %159, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %160, i64 0, i32 1
  %162 = bitcast %"struct.std::__1::__list_node_base"** %161 to i64*
  store i64 %158, i64* %162, align 8
  %163 = bitcast %"struct.std::__1::__list_node_base"* %154 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"struct.std::__1::__list_node_base"** %156 to i64**
  %166 = load i64*, i64** %165, align 8
  store i64 %164, i64* %166, align 8
  store i64 0, i64* %15, align 8
  %167 = icmp eq %"struct.std::__1::__list_node_base"* %154, %16
  br i1 %167, label %174, label %168

168:                                              ; preds = %153, %168
  %169 = phi %"struct.std::__1::__list_node_base"* [ %171, %168 ], [ %154, %153 ]
  %170 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %169, i64 0, i32 1
  %171 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %170, align 8
  %172 = bitcast %"struct.std::__1::__list_node_base"* %169 to i8*
  call void @_ZdlPv(i8* %172) #10
  %173 = icmp eq %"struct.std::__1::__list_node_base"* %171, %16
  br i1 %173, label %174, label %168

174:                                              ; preds = %168, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  call void @_ZN15google_breakpad11LinuxDumperD2Ev(%"class.google_breakpad::LinuxDumper"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %8) #9
  ret i1 %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN15google_breakpad17LinuxPtraceDumperC1Ei(%"class.google_breakpad::LinuxPtraceDumper"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4InitEv(%"class.(anonymous namespace)::MinidumpWriter"*) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 5
  %5 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %6 = bitcast %"class.google_breakpad::LinuxDumper"* %5 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %7 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %7, i64 2
  %9 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.google_breakpad::LinuxDumper"* %5) #9
  br i1 %10, label %11, label %91

11:                                               ; preds = %1
  %12 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %13 = bitcast %"class.google_breakpad::LinuxDumper"* %12 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %14 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %14, i64 5
  %16 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.google_breakpad::LinuxDumper"* %12) #9
  br i1 %17, label %18, label %91

18:                                               ; preds = %11
  %19 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %20 = bitcast %"class.google_breakpad::LinuxDumper"* %19 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %21 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %21, i64 3
  %23 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.google_breakpad::LinuxDumper"* %19) #9
  br i1 %24, label %25, label %91

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 12
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %80, label %29

29:                                               ; preds = %25
  %30 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 14
  %32 = load i64, i64* %31, align 8
  %33 = tail call %"struct.google_breakpad::MappingInfo"* @_ZNK15google_breakpad11LinuxDumper17FindMappingNoBiasEm(%"class.google_breakpad::LinuxDumper"* %30, i64 %32) #9
  %34 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 15
  store %"struct.google_breakpad::MappingInfo"* %33, %"struct.google_breakpad::MappingInfo"** %34, align 8
  %35 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 3
  %36 = load %struct.ucontext_t*, %struct.ucontext_t** %35, align 8
  %37 = icmp eq %struct.ucontext_t* %36, null
  %38 = icmp eq %"struct.google_breakpad::MappingInfo"* %33, null
  %39 = or i1 %38, %37
  br i1 %39, label %91, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %33, i64 0, i32 2, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %33, i64 0, i32 2, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = tail call i64 @_ZN15google_breakpad14UContextReader15GetStackPointerEPK10ucontext_t(%struct.ucontext_t* nonnull %36) #9
  %46 = load %struct.ucontext_t*, %struct.ucontext_t** %35, align 8
  %47 = tail call i64 @_ZN15google_breakpad14UContextReader21GetInstructionPointerEPK10ucontext_t(%struct.ucontext_t* %46) #9
  %48 = icmp uge i64 %47, %42
  %49 = icmp ult i64 %47, %44
  %50 = and i1 %48, %49
  br i1 %50, label %80, label %51

51:                                               ; preds = %40
  %52 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %53 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  store i64 -6148914691236517206, i64* %3, align 8
  %54 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %55 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper12GetStackInfoEPPKvPmm(%"class.google_breakpad::LinuxDumper"* %54, i8** nonnull %2, i64* nonnull %3, i64 %45) #9
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %91

57:                                               ; preds = %51
  %58 = load i64, i64* %3, align 8
  %59 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %60 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %59, i64 0, i32 8
  %61 = and i64 %58, 4294967295
  %62 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %60, i64 %61) #9
  %63 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %64 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %63, i64 0, i32 7
  %65 = load i32, i32* %64, align 8
  %66 = load i8*, i8** %2, align 8
  %67 = load i64, i64* %3, align 8
  %68 = bitcast %"class.google_breakpad::LinuxDumper"* %63 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %69 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %69, i64 8
  %71 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %70, align 8
  %72 = call zeroext i1 %71(%"class.google_breakpad::LinuxDumper"* %63, i8* %62, i32 %65, i8* %66, i64 %67) #9
  %73 = bitcast i8** %2 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %45, %74
  %76 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %4, align 8
  %77 = load i64, i64* %3, align 8
  %78 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %34, align 8
  %79 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper24StackHasPointerToMappingEPKhmmRKNS_11MappingInfoE(%"class.google_breakpad::LinuxDumper"* %76, i8* %62, i64 %77, i64 %75, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %78) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br i1 %79, label %80, label %91

80:                                               ; preds = %40, %25, %57
  %81 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, -1
  %84 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6
  br i1 %83, label %86, label %85

85:                                               ; preds = %80
  call void @_ZN15google_breakpad18MinidumpFileWriter7SetFileEi(%"class.google_breakpad::MinidumpFileWriter"* %84, i32 %82) #9
  br label %90

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 2
  %88 = load i8*, i8** %87, align 8
  %89 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4OpenEPKc(%"class.google_breakpad::MinidumpFileWriter"* %84, i8* %88) #9
  br i1 %89, label %90, label %91

90:                                               ; preds = %86, %85
  br label %91

91:                                               ; preds = %29, %56, %86, %57, %11, %18, %1, %90
  %92 = phi i1 [ true, %90 ], [ false, %1 ], [ false, %18 ], [ false, %11 ], [ false, %57 ], [ false, %86 ], [ false, %56 ], [ false, %29 ]
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4DumpEv(%"class.(anonymous namespace)::MinidumpWriter"*) unnamed_addr #0 align 2 {
  %2 = alloca [255 x i8], align 16
  %3 = alloca [13 x i8], align 1
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.utsname, align 1
  %7 = alloca [512 x i8], align 16
  %8 = alloca [5 x i8*], align 16
  %9 = alloca %struct.MDLocationDescriptor, align 4
  %10 = alloca %"class.google_breakpad::TypedMDRVA.78", align 8
  %11 = alloca %"class.google_breakpad::TypedMDRVA.76", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.google_breakpad::TypedMDRVA.57", align 8
  %14 = alloca %"class.google_breakpad::UntypedMDRVA", align 8
  %15 = alloca %"class.google_breakpad::TypedMDRVA.57", align 8
  %16 = alloca %struct.MDRawModule, align 8
  %17 = alloca %struct.MDRawModule, align 8
  %18 = alloca %"class.google_breakpad::TypedMDRVA.57", align 8
  %19 = alloca %struct.MDRawThread, align 8
  %20 = alloca i8*, align 8
  %21 = alloca %"class.google_breakpad::UntypedMDRVA", align 8
  %22 = alloca %"class.google_breakpad::TypedMDRVA.58", align 8
  %23 = alloca %"struct.google_breakpad::ThreadInfo", align 8
  %24 = alloca i8*, align 8
  %25 = alloca %"class.google_breakpad::TypedMDRVA.58", align 8
  %26 = alloca %struct.Elf64_Phdr, align 8
  %27 = alloca %struct.Elf64_Dyn, align 8
  %28 = alloca %struct.r_debug, align 8
  %29 = alloca %struct.link_map, align 8
  %30 = alloca %"class.google_breakpad::TypedMDRVA.84", align 8
  %31 = alloca %struct.link_map, align 8
  %32 = alloca [257 x i8], align 16
  %33 = alloca %struct.MDLocationDescriptor, align 4
  %34 = alloca %struct.MDRawLinkMap64, align 8
  %35 = alloca %"class.google_breakpad::TypedMDRVA.86", align 8
  %36 = alloca %"class.google_breakpad::wasteful_vector.88", align 8
  %37 = alloca %"class.google_breakpad::TypedMDRVA", align 8
  %38 = alloca %"class.google_breakpad::TypedMDRVA.56", align 8
  %39 = alloca %struct.MDRawDirectory, align 4
  %40 = bitcast %"class.google_breakpad::TypedMDRVA"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  %41 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6
  %42 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA", %"class.google_breakpad::TypedMDRVA"* %37, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %43 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA", %"class.google_breakpad::TypedMDRVA"* %37, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6, i32 2
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA", %"class.google_breakpad::TypedMDRVA"* %37, i64 0, i32 0, i32 2
  %47 = bitcast i64* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #9
  %48 = bitcast %"class.google_breakpad::TypedMDRVA.56"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %48) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 64, i1 false)
  %49 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %49, align 8
  %50 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 0, i32 1
  store i32 %45, i32* %50, align 8
  %51 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 0, i32 2
  %52 = bitcast i64* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 40, i1 false) #9
  %53 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 2
  store i32 1, i32* %53, align 8
  %54 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 0
  %55 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %54, i64 32) #9
  br i1 %55, label %56, label %468

56:                                               ; preds = %1
  %57 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA", %"class.google_breakpad::TypedMDRVA"* %37, i64 0, i32 2
  store i32 2, i32* %57, align 4
  %58 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA", %"class.google_breakpad::TypedMDRVA"* %37, i64 0, i32 0
  %59 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %58, i64 156) #9
  br i1 %59, label %60, label %468

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 1
  %62 = bitcast %struct.MDRawHeader* %61 to i8*
  call void @my_memset(i8* %62, i8 signext 0, i64 32) #9
  %63 = getelementptr inbounds %struct.MDRawHeader, %struct.MDRawHeader* %61, i64 0, i32 0
  store i32 1347241037, i32* %63, align 8
  %64 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 1, i32 1
  store i32 42899, i32* %64, align 4
  %65 = call i64 @time(i64* null) #9
  %66 = trunc i64 %65 to i32
  %67 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 1, i32 5
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 1, i32 2
  store i32 13, i32* %68, align 8
  %69 = load i32, i32* %43, align 8
  %70 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 1, i32 3
  store i32 %69, i32* %70, align 4
  %71 = load i32, i32* %53, align 8
  %72 = icmp eq i32 %71, 2
  br i1 %72, label %77, label %73

73:                                               ; preds = %60
  %74 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %49, align 8
  %75 = load i32, i32* %50, align 8
  %76 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %74, i32 %75, i8* %62, i64 32) #9
  br label %77

77:                                               ; preds = %60, %73
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %48) #9
  %78 = bitcast %struct.MDRawDirectory* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %78) #9
  %79 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 0
  store i32 -1431655766, i32* %79, align 4
  %80 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1
  %81 = getelementptr inbounds %struct.MDLocationDescriptor, %struct.MDLocationDescriptor* %80, i64 0, i32 0
  store i32 -1431655766, i32* %81, align 4
  %82 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 1
  store i32 -1431655766, i32* %82, align 4
  %83 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 5
  %84 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %85 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %84, i64 0, i32 9, i32 0
  %86 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %84, i64 0, i32 9, i32 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.13"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 2
  %93 = trunc i64 %92 to i32
  %94 = bitcast %"class.google_breakpad::TypedMDRVA.57"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 16, i1 false) #9
  %95 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %18, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %95, align 8
  %96 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %18, i64 0, i32 0, i32 1
  %97 = load i32, i32* %44, align 8
  store i32 %97, i32* %96, align 8
  %98 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %18, i64 0, i32 0, i32 2
  %99 = bitcast i64* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #9
  %100 = and i64 %92, 4294967295
  %101 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %18, i64 0, i32 2
  store i32 3, i32* %101, align 4
  %102 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %18, i64 0, i32 0
  %103 = mul nuw nsw i64 %100, 48
  %104 = or i64 %103, 4
  %105 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %102, i64 %104) #9
  br i1 %105, label %106, label %457

106:                                              ; preds = %77
  store i32 3, i32* %79, align 4
  %107 = load i64, i64* %98, align 8
  %108 = load i32, i32* %96, align 8
  %109 = zext i32 %108 to i64
  %110 = shl nuw i64 %109, 32
  %111 = and i64 %107, 4294967295
  %112 = or i64 %110, %111
  %113 = bitcast %struct.MDLocationDescriptor* %80 to i64*
  store i64 %112, i64* %113, align 4
  %114 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %18, i64 0, i32 1
  store i32 %93, i32* %114, align 8
  %115 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 7
  %116 = load i64, i64* %115, align 8
  %117 = icmp sgt i64 %116, -1
  br i1 %117, label %118, label %127

118:                                              ; preds = %106
  %119 = trunc i64 %91 to i32
  %120 = shl i32 %119, 11
  %121 = load i32, i32* %44, align 8
  %122 = add i32 %120, 65536
  %123 = add i32 %122, %121
  %124 = zext i32 %123 to i64
  %125 = icmp slt i64 %116, %124
  %126 = select i1 %125, i32 2048, i32 -1
  br label %127

127:                                              ; preds = %118, %106
  %128 = phi i32 [ %126, %118 ], [ -1, %106 ]
  %129 = icmp eq i32 %93, 0
  br i1 %129, label %457, label %130

130:                                              ; preds = %127
  %131 = bitcast %struct.MDRawThread* %19 to i8*
  %132 = getelementptr inbounds %struct.MDRawThread, %struct.MDRawThread* %19, i64 0, i32 0
  %133 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 3
  %134 = bitcast i8** %20 to i8*
  %135 = bitcast %"class.google_breakpad::UntypedMDRVA"* %21 to i8*
  %136 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %21, i64 0, i32 0
  %137 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %21, i64 0, i32 1
  %138 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %21, i64 0, i32 2
  %139 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0
  %140 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %141 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast %struct.MDMemoryDescriptor** %140 to i64*
  %143 = bitcast %"class.std::__1::vector.36"* %139 to i64*
  %144 = bitcast %struct.MDMemoryDescriptor** %141 to i64*
  %145 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %146 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %147 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %148 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %139, i64 0, i32 0, i32 0
  %149 = bitcast %"class.google_breakpad::TypedMDRVA.58"* %22 to i8*
  %150 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %22, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %22, i64 0, i32 0, i32 1
  %152 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %22, i64 0, i32 0, i32 2
  %153 = bitcast i64* %152 to i8*
  %154 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %22, i64 0, i32 2
  %155 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %22, i64 0, i32 0
  %156 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %22, i64 0, i32 1
  %157 = bitcast %struct.MDRawContextAMD64* %156 to i8*
  %158 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 4
  %159 = getelementptr inbounds %struct.MDRawThread, %struct.MDRawThread* %19, i64 0, i32 6
  %160 = bitcast %struct.MDLocationDescriptor* %159 to i64*
  %161 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 8
  %162 = bitcast %struct.MDLocationDescriptor* %161 to i64*
  %163 = bitcast %"struct.google_breakpad::ThreadInfo"* %23 to i8*
  %164 = bitcast i8** %24 to i8*
  %165 = getelementptr inbounds %"struct.google_breakpad::ThreadInfo", %"struct.google_breakpad::ThreadInfo"* %23, i64 0, i32 2
  %166 = bitcast %"class.google_breakpad::TypedMDRVA.58"* %25 to i8*
  %167 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %25, i64 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %25, i64 0, i32 0, i32 1
  %169 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %25, i64 0, i32 0, i32 2
  %170 = bitcast i64* %169 to i8*
  %171 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %25, i64 0, i32 2
  %172 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %25, i64 0, i32 0
  %173 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.58", %"class.google_breakpad::TypedMDRVA.58"* %25, i64 0, i32 1
  %174 = bitcast %struct.MDRawContextAMD64* %173 to i8*
  br label %175

175:                                              ; preds = %446, %130
  %176 = phi i64 [ 0, %130 ], [ %454, %446 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %131) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 48, i1 false) #9
  call void @my_memset(i8* nonnull %131, i8 signext 0, i64 48) #9
  %177 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %178 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %177, i64 0, i32 9, i32 0, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 %176
  %181 = load i32, i32* %180, align 4
  store i32 %181, i32* %132, align 8
  %182 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %177, i64 0, i32 7
  %183 = load i32, i32* %182, align 8
  %184 = icmp eq i32 %181, %183
  br i1 %184, label %185, label %390

185:                                              ; preds = %175
  %186 = load %struct.ucontext_t*, %struct.ucontext_t** %133, align 8
  %187 = icmp eq %struct.ucontext_t* %186, null
  br i1 %187, label %390, label %188

188:                                              ; preds = %185
  %189 = bitcast %"class.google_breakpad::LinuxDumper"* %177 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %190 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %189, align 8
  %191 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %190, i64 4
  %192 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %191, align 8
  %193 = call zeroext i1 %192(%"class.google_breakpad::LinuxDumper"* %177) #9
  br i1 %193, label %194, label %196

194:                                              ; preds = %188
  %195 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  br label %390

196:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %197 = load %struct.ucontext_t*, %struct.ucontext_t** %133, align 8
  %198 = call i64 @_ZN15google_breakpad14UContextReader15GetStackPointerEPK10ucontext_t(%struct.ucontext_t* %197) #9
  %199 = load %struct.ucontext_t*, %struct.ucontext_t** %133, align 8
  %200 = call i64 @_ZN15google_breakpad14UContextReader21GetInstructionPointerEPK10ucontext_t(%struct.ucontext_t* %199) #9
  %201 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter15FillThreadStackEP11MDRawThreadmmiPPh(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDRawThread* nonnull %19, i64 %198, i64 %200, i32 -1, i8** nonnull %20) #9
  br i1 %201, label %202, label %387

202:                                              ; preds = %196
  %203 = load %struct.ucontext_t*, %struct.ucontext_t** %133, align 8
  %204 = call i64 @_ZN15google_breakpad14UContextReader21GetInstructionPointerEPK10ucontext_t(%struct.ucontext_t* %203) #9
  %205 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %206 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %205, i64 0, i32 10, i32 0
  %207 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %205, i64 0, i32 10, i32 0, i32 0, i32 1
  %208 = bitcast %"struct.google_breakpad::MappingInfo"*** %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.std::__1::vector.21"* %206 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = icmp eq i64 %209, %211
  %213 = inttoptr i64 %211 to %"struct.google_breakpad::MappingInfo"**
  br i1 %212, label %367, label %214

214:                                              ; preds = %202
  %215 = sub i64 %209, %211
  %216 = ashr exact i64 %215, 3
  br label %217

217:                                              ; preds = %241, %214
  %218 = phi i64 [ %243, %241 ], [ 0, %214 ]
  %219 = phi i32 [ %242, %241 ], [ 0, %214 ]
  %220 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %213, i64 %218
  %221 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %220, align 8
  %222 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %221, i64 0, i32 0
  %223 = load i64, i64* %222, align 8
  %224 = icmp ult i64 %204, %223
  br i1 %224, label %241, label %225

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %221, i64 0, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = add i64 %227, %223
  %229 = icmp ult i64 %204, %228
  br i1 %229, label %230, label %241

230:                                              ; preds = %225
  %231 = add i64 %204, -128
  %232 = icmp ult i64 %223, %231
  %233 = select i1 %232, i64 %231, i64 %223
  %234 = add i64 %204, 128
  %235 = icmp ult i64 %228, %234
  %236 = select i1 %235, i64 %228, i64 %234
  %237 = sub i64 %236, %233
  %238 = and i64 %237, 4294967295
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 16, i1 false) #9
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %136, align 8
  %239 = load i32, i32* %44, align 8
  store i32 %239, i32* %137, align 8
  store i64 0, i64* %138, align 8
  %240 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %21, i64 %238) #9
  br i1 %240, label %245, label %366

241:                                              ; preds = %225, %217
  %242 = add i32 %219, 1
  %243 = zext i32 %242 to i64
  %244 = icmp ugt i64 %216, %243
  br i1 %244, label %217, label %367

245:                                              ; preds = %230
  %246 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %247 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %246, i64 0, i32 8
  %248 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %247, i64 %238) #9
  %249 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %250 = load i32, i32* %132, align 8
  %251 = inttoptr i64 %233 to i8*
  %252 = bitcast %"class.google_breakpad::LinuxDumper"* %249 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %253 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %252, align 8
  %254 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %253, i64 8
  %255 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %254, align 8
  %256 = call zeroext i1 %255(%"class.google_breakpad::LinuxDumper"* %249, i8* %248, i32 %250, i8* %251, i64 %238) #9
  %257 = load i32, i32* %137, align 8
  %258 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA4CopyEjPKvm(%"class.google_breakpad::UntypedMDRVA"* nonnull %21, i32 %257, i8* %248, i64 %238) #9
  %259 = load i64, i64* %138, align 8
  %260 = load i32, i32* %137, align 8
  %261 = zext i32 %260 to i64
  %262 = shl nuw i64 %261, 32
  %263 = and i64 %259, 4294967295
  %264 = or i64 %262, %263
  %265 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %140, align 8
  %266 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %141, align 8
  %267 = icmp eq %struct.MDMemoryDescriptor* %265, %266
  %268 = ptrtoint %struct.MDMemoryDescriptor* %266 to i64
  br i1 %267, label %275, label %269

269:                                              ; preds = %245
  %270 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %265, i64 0, i32 0
  store i64 %233, i64* %270, align 8
  %271 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %265, i64 0, i32 1
  %272 = bitcast %struct.MDLocationDescriptor* %271 to i64*
  store i64 %264, i64* %272, align 8
  %273 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %265, i64 1
  %274 = ptrtoint %struct.MDMemoryDescriptor* %273 to i64
  store i64 %274, i64* %142, align 8
  br label %365

275:                                              ; preds = %245
  %276 = ptrtoint %struct.MDMemoryDescriptor* %265 to i64
  %277 = load i64, i64* %143, align 8
  %278 = sub i64 %276, %277
  %279 = ashr exact i64 %278, 4
  %280 = add nsw i64 %279, 1
  %281 = icmp ugt i64 %280, 1152921504606846975
  br i1 %281, label %282, label %284

282:                                              ; preds = %275
  %283 = bitcast %"class.std::__1::vector.36"* %139 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %283) #11
  unreachable

284:                                              ; preds = %275
  %285 = sub i64 %268, %277
  %286 = ashr exact i64 %285, 4
  %287 = icmp ult i64 %286, 576460752303423487
  br i1 %287, label %288, label %293

288:                                              ; preds = %284
  %289 = ashr exact i64 %285, 3
  %290 = icmp ult i64 %289, %280
  %291 = select i1 %290, i64 %280, i64 %289
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %304, label %293

293:                                              ; preds = %288, %284
  %294 = phi i64 [ %291, %288 ], [ 1152921504606846975, %284 ]
  %295 = shl i64 %294, 4
  %296 = load i64, i64* %145, align 8
  %297 = icmp ugt i64 %295, %296
  br i1 %297, label %300, label %298

298:                                              ; preds = %293
  %299 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %146, align 8
  br label %304

300:                                              ; preds = %293
  %301 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %147, align 8
  %302 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %301, i64 %295) #9
  %303 = bitcast i8* %302 to %struct.MDMemoryDescriptor*
  br label %304

304:                                              ; preds = %300, %298, %288
  %305 = phi i64 [ 0, %288 ], [ %294, %298 ], [ %294, %300 ]
  %306 = phi %struct.MDMemoryDescriptor* [ null, %288 ], [ %299, %298 ], [ %303, %300 ]
  %307 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %306, i64 %279
  %308 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %306, i64 %305
  %309 = ptrtoint %struct.MDMemoryDescriptor* %308 to i64
  %310 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %307, i64 0, i32 0
  store i64 %233, i64* %310, align 8
  %311 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %306, i64 %279, i32 1
  %312 = bitcast %struct.MDLocationDescriptor* %311 to i64*
  store i64 %264, i64* %312, align 8
  %313 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %307, i64 1
  %314 = ptrtoint %struct.MDMemoryDescriptor* %313 to i64
  %315 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %148, align 8
  %316 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %140, align 8
  %317 = icmp eq %struct.MDMemoryDescriptor* %316, %315
  br i1 %317, label %362, label %318

318:                                              ; preds = %304
  %319 = ptrtoint %struct.MDMemoryDescriptor* %315 to i64
  %320 = getelementptr %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %316, i64 -1
  %321 = ptrtoint %struct.MDMemoryDescriptor* %320 to i64
  %322 = sub i64 %321, %319
  %323 = lshr i64 %322, 4
  %324 = add nuw nsw i64 %323, 1
  %325 = and i64 %324, 3
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %337, label %327

327:                                              ; preds = %318, %327
  %328 = phi %struct.MDMemoryDescriptor* [ %331, %327 ], [ %307, %318 ]
  %329 = phi %struct.MDMemoryDescriptor* [ %332, %327 ], [ %316, %318 ]
  %330 = phi i64 [ %335, %327 ], [ %325, %318 ]
  %331 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %328, i64 -1
  %332 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %329, i64 -1
  %333 = bitcast %struct.MDMemoryDescriptor* %331 to i8*
  %334 = bitcast %struct.MDMemoryDescriptor* %332 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %333, i8* align 8 %334, i64 16, i1 false) #9
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %327, !llvm.loop !6

337:                                              ; preds = %327, %318
  %338 = phi %struct.MDMemoryDescriptor* [ undef, %318 ], [ %331, %327 ]
  %339 = phi %struct.MDMemoryDescriptor* [ %307, %318 ], [ %331, %327 ]
  %340 = phi %struct.MDMemoryDescriptor* [ %316, %318 ], [ %332, %327 ]
  %341 = icmp ult i64 %322, 48
  br i1 %341, label %362, label %342

342:                                              ; preds = %337, %342
  %343 = phi %struct.MDMemoryDescriptor* [ %357, %342 ], [ %339, %337 ]
  %344 = phi %struct.MDMemoryDescriptor* [ %358, %342 ], [ %340, %337 ]
  %345 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %343, i64 -1
  %346 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %344, i64 -1
  %347 = bitcast %struct.MDMemoryDescriptor* %345 to i8*
  %348 = bitcast %struct.MDMemoryDescriptor* %346 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %347, i8* align 8 %348, i64 16, i1 false) #9
  %349 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %343, i64 -2
  %350 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %344, i64 -2
  %351 = bitcast %struct.MDMemoryDescriptor* %349 to i8*
  %352 = bitcast %struct.MDMemoryDescriptor* %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* align 8 %352, i64 16, i1 false) #9
  %353 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %343, i64 -3
  %354 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %344, i64 -3
  %355 = bitcast %struct.MDMemoryDescriptor* %353 to i8*
  %356 = bitcast %struct.MDMemoryDescriptor* %354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %355, i8* align 8 %356, i64 16, i1 false) #9
  %357 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %343, i64 -4
  %358 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %344, i64 -4
  %359 = bitcast %struct.MDMemoryDescriptor* %357 to i8*
  %360 = bitcast %struct.MDMemoryDescriptor* %358 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %359, i8* align 8 %360, i64 16, i1 false) #9
  %361 = icmp eq %struct.MDMemoryDescriptor* %358, %315
  br i1 %361, label %362, label %342

362:                                              ; preds = %337, %342, %304
  %363 = phi %struct.MDMemoryDescriptor* [ %307, %304 ], [ %338, %337 ], [ %357, %342 ]
  %364 = ptrtoint %struct.MDMemoryDescriptor* %363 to i64
  store i64 %364, i64* %143, align 8
  store i64 %314, i64* %142, align 8
  store i64 %309, i64* %144, align 8
  br label %365

365:                                              ; preds = %362, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #9
  br label %367

366:                                              ; preds = %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #9
  br label %387

367:                                              ; preds = %241, %365, %202
  call void @llvm.lifetime.start.p0i8(i64 1264, i8* nonnull %149) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 1264, i1 false) #9
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %150, align 8
  %368 = load i32, i32* %44, align 8
  store i32 %368, i32* %151, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 1240, i1 false) #9
  store i32 1, i32* %154, align 8
  %369 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %155, i64 1232) #9
  br i1 %369, label %370, label %379

370:                                              ; preds = %367
  call void @my_memset(i8* %157, i8 signext 0, i64 1232) #9
  %371 = load %struct.ucontext_t*, %struct.ucontext_t** %133, align 8
  %372 = load %struct._libc_fpstate*, %struct._libc_fpstate** %158, align 8
  call void @_ZN15google_breakpad14UContextReader14FillCPUContextEP17MDRawContextAMD64PK10ucontext_tPK13_libc_fpstate(%struct.MDRawContextAMD64* %156, %struct.ucontext_t* %371, %struct._libc_fpstate* %372) #9
  %373 = load i64, i64* %152, align 8
  %374 = load i32, i32* %151, align 8
  %375 = zext i32 %374 to i64
  %376 = shl nuw i64 %375, 32
  %377 = and i64 %373, 4294967295
  %378 = or i64 %376, %377
  store i64 %378, i64* %160, align 8
  store i64 %378, i64* %162, align 8
  br label %379

379:                                              ; preds = %370, %367
  %380 = phi i32 [ 0, %370 ], [ 1, %367 ]
  %381 = load i32, i32* %154, align 8
  %382 = icmp eq i32 %381, 2
  br i1 %382, label %388, label %383

383:                                              ; preds = %379
  %384 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %150, align 8
  %385 = load i32, i32* %151, align 8
  %386 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %384, i32 %385, i8* %157, i64 1232) #9
  br label %388

387:                                              ; preds = %196, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #9
  br label %456

388:                                              ; preds = %383, %379
  call void @llvm.lifetime.end.p0i8(i64 1264, i8* nonnull %149) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #9
  %389 = icmp eq i32 %380, 0
  br i1 %389, label %446, label %456

390:                                              ; preds = %194, %185, %175
  %391 = phi %"class.google_breakpad::LinuxDumper"* [ %195, %194 ], [ %177, %185 ], [ %177, %175 ]
  call void @llvm.lifetime.start.p0i8(i64 808, i8* nonnull %163) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 808, i1 false) #9
  %392 = bitcast %"class.google_breakpad::LinuxDumper"* %391 to i1 (%"class.google_breakpad::LinuxDumper"*, i64, %"struct.google_breakpad::ThreadInfo"*)***
  %393 = load i1 (%"class.google_breakpad::LinuxDumper"*, i64, %"struct.google_breakpad::ThreadInfo"*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i64, %"struct.google_breakpad::ThreadInfo"*)*** %392, align 8
  %394 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i64, %"struct.google_breakpad::ThreadInfo"*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i64, %"struct.google_breakpad::ThreadInfo"*)** %393, i64 7
  %395 = load i1 (%"class.google_breakpad::LinuxDumper"*, i64, %"struct.google_breakpad::ThreadInfo"*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i64, %"struct.google_breakpad::ThreadInfo"*)** %394, align 8
  %396 = call zeroext i1 %395(%"class.google_breakpad::LinuxDumper"* %391, i64 %176, %"struct.google_breakpad::ThreadInfo"* nonnull %23) #9
  br i1 %396, label %398, label %397

397:                                              ; preds = %390
  call void @llvm.lifetime.end.p0i8(i64 808, i8* nonnull %163) #9
  br label %456

398:                                              ; preds = %390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %24, align 8
  %399 = load i64, i64* %115, align 8
  %400 = icmp sgt i64 %399, -1
  %401 = icmp ugt i64 %176, 19
  %402 = and i1 %401, %400
  %403 = select i1 %402, i32 %128, i32 -1
  %404 = load i64, i64* %165, align 8
  %405 = call i64 @_ZNK15google_breakpad10ThreadInfo21GetInstructionPointerEv(%"struct.google_breakpad::ThreadInfo"* nonnull %23) #9
  %406 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter15FillThreadStackEP11MDRawThreadmmiPPh(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDRawThread* nonnull %19, i64 %404, i64 %405, i32 %403, i8** nonnull %24) #9
  br i1 %406, label %408, label %407

407:                                              ; preds = %398
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9
  call void @llvm.lifetime.end.p0i8(i64 808, i8* nonnull %163) #9
  br label %456

408:                                              ; preds = %398
  call void @llvm.lifetime.start.p0i8(i64 1264, i8* nonnull %166) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 1264, i1 false) #9
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %167, align 8
  %409 = load i32, i32* %44, align 8
  store i32 %409, i32* %168, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 1240, i1 false) #9
  store i32 1, i32* %171, align 8
  %410 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %172, i64 1232) #9
  br i1 %410, label %411, label %436

411:                                              ; preds = %408
  call void @my_memset(i8* %174, i8 signext 0, i64 1232) #9
  call void @_ZNK15google_breakpad10ThreadInfo14FillCPUContextEP17MDRawContextAMD64(%"struct.google_breakpad::ThreadInfo"* nonnull %23, %struct.MDRawContextAMD64* %173) #9
  %412 = load i64, i64* %169, align 8
  %413 = load i32, i32* %168, align 8
  %414 = zext i32 %413 to i64
  %415 = shl nuw i64 %414, 32
  %416 = and i64 %412, 4294967295
  %417 = or i64 %415, %416
  store i64 %417, i64* %160, align 8
  %418 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %419 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %418, i64 0, i32 9, i32 0, i32 0, i32 0
  %420 = load i32*, i32** %419, align 8
  %421 = getelementptr inbounds i32, i32* %420, i64 %176
  %422 = load i32, i32* %421, align 4
  %423 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %418, i64 0, i32 7
  %424 = load i32, i32* %423, align 8
  %425 = icmp eq i32 %422, %424
  br i1 %425, label %426, label %436

426:                                              ; preds = %411
  store i64 %417, i64* %162, align 8
  %427 = bitcast %"class.google_breakpad::LinuxDumper"* %418 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %428 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %427, align 8
  %429 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %428, i64 4
  %430 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %429, align 8
  %431 = call zeroext i1 %430(%"class.google_breakpad::LinuxDumper"* %418) #9
  br i1 %431, label %436, label %432

432:                                              ; preds = %426
  %433 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %434 = call i64 @_ZNK15google_breakpad10ThreadInfo21GetInstructionPointerEv(%"struct.google_breakpad::ThreadInfo"* nonnull %23) #9
  %435 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %433, i64 0, i32 3
  store i64 %434, i64* %435, align 8
  br label %436

436:                                              ; preds = %432, %426, %411, %408
  %437 = phi i32 [ 1, %408 ], [ 0, %426 ], [ 0, %432 ], [ 0, %411 ]
  %438 = load i32, i32* %171, align 8
  %439 = icmp eq i32 %438, 2
  br i1 %439, label %444, label %440

440:                                              ; preds = %436
  %441 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %167, align 8
  %442 = load i32, i32* %168, align 8
  %443 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %441, i32 %442, i8* %174, i64 1232) #9
  br label %444

444:                                              ; preds = %440, %436
  call void @llvm.lifetime.end.p0i8(i64 1264, i8* nonnull %166) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9
  call void @llvm.lifetime.end.p0i8(i64 808, i8* nonnull %163) #9
  %445 = icmp eq i32 %437, 0
  br i1 %445, label %446, label %456

446:                                              ; preds = %444, %388
  %447 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %95, align 8
  %448 = load i32, i32* %96, align 8
  %449 = trunc i64 %176 to i32
  %450 = mul i32 %449, 48
  %451 = or i32 %450, 4
  %452 = add i32 %448, %451
  %453 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %447, i32 %452, i8* nonnull %131, i64 48) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %131) #9
  %454 = add nuw nsw i64 %176, 1
  %455 = icmp eq i64 %454, %100
  br i1 %455, label %457, label %175

456:                                              ; preds = %444, %388, %407, %397, %387
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %131) #9
  br label %457

457:                                              ; preds = %446, %456, %127, %77
  %458 = phi i1 [ false, %77 ], [ false, %456 ], [ true, %127 ], [ true, %446 ]
  %459 = load i32, i32* %101, align 4
  %460 = icmp eq i32 %459, 2
  br i1 %460, label %467, label %461

461:                                              ; preds = %457
  %462 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %95, align 8
  %463 = load i32, i32* %96, align 8
  %464 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %18, i64 0, i32 1
  %465 = bitcast i32* %464 to i8*
  %466 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %462, i32 %463, i8* %465, i64 4) #9
  br label %467

467:                                              ; preds = %457, %461
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #9
  br i1 %458, label %478, label %1913

468:                                              ; preds = %56, %1
  %469 = load i32, i32* %53, align 8
  %470 = icmp eq i32 %469, 2
  br i1 %470, label %477, label %471

471:                                              ; preds = %468
  %472 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %49, align 8
  %473 = load i32, i32* %50, align 8
  %474 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.56", %"class.google_breakpad::TypedMDRVA.56"* %38, i64 0, i32 1
  %475 = bitcast %struct.MDRawHeader* %474 to i8*
  %476 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %472, i32 %473, i8* %475, i64 32) #9
  br label %477

477:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %48) #9
  br label %1915

478:                                              ; preds = %467
  %479 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %480 = load i32, i32* %43, align 8
  %481 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %479, i32 %480, i8* nonnull %78, i64 12) #9
  %482 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %483 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %482, i64 0, i32 10, i32 0
  %484 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %482, i64 0, i32 10, i32 0, i32 0, i32 1
  %485 = bitcast %"struct.google_breakpad::MappingInfo"*** %484 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = bitcast %"class.std::__1::vector.21"* %483 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = sub i64 %486, %488
  %490 = ashr exact i64 %489, 3
  %491 = trunc i64 %490 to i32
  %492 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 10
  %493 = load %"class.std::__1::list"*, %"class.std::__1::list"** %492, align 8
  %494 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %493, i64 0, i32 0, i32 1, i32 0, i32 0
  %495 = load i64, i64* %494, align 8
  %496 = trunc i64 %495 to i32
  %497 = icmp eq i64 %489, 0
  %498 = inttoptr i64 %488 to %"struct.google_breakpad::MappingInfo"**
  br i1 %497, label %503, label %499

499:                                              ; preds = %478
  %500 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %493, i64 0, i32 0, i32 0, i32 1
  %501 = bitcast %"struct.std::__1::__list_node_base"** %500 to i64*
  %502 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %493, i64 0, i32 0, i32 0
  br label %512

503:                                              ; preds = %561, %478
  %504 = phi i32 [ %496, %478 ], [ %562, %561 ]
  %505 = bitcast %"class.google_breakpad::TypedMDRVA.57"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %505) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %505, i8 -86, i64 16, i1 false) #9
  %506 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %506, align 8
  %507 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 0, i32 1
  %508 = load i32, i32* %44, align 8
  store i32 %508, i32* %507, align 8
  %509 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 0, i32 2
  %510 = bitcast i64* %509 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %510, i8 0, i64 16, i1 false) #9
  %511 = icmp eq i32 %504, 0
  br i1 %511, label %573, label %566

512:                                              ; preds = %561, %499
  %513 = phi i64 [ 0, %499 ], [ %564, %561 ]
  %514 = phi i32 [ 0, %499 ], [ %563, %561 ]
  %515 = phi i32 [ %496, %499 ], [ %562, %561 ]
  %516 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %498, i64 %513
  %517 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %516, align 8
  %518 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %517, i64 0, i32 5, i64 0
  %519 = load i8, i8* %518, align 1
  %520 = icmp eq i8 %519, 0
  br i1 %520, label %561, label %521

521:                                              ; preds = %512
  %522 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %517, i64 0, i32 3
  %523 = load i64, i64* %522, align 8
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %529, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %517, i64 0, i32 4
  %527 = load i8, i8* %526, align 8, !range !5
  %528 = icmp eq i8 %527, 0
  br i1 %528, label %561, label %529

529:                                              ; preds = %525, %521
  %530 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %517, i64 0, i32 1
  %531 = load i64, i64* %530, align 8
  %532 = icmp ugt i64 %531, 4095
  br i1 %532, label %533, label %561

533:                                              ; preds = %529
  %534 = load i64, i64* %501, align 8
  %535 = inttoptr i64 %534 to %"struct.std::__1::__list_node_base"*
  %536 = icmp eq %"struct.std::__1::__list_node_base"* %502, %535
  br i1 %536, label %559, label %537

537:                                              ; preds = %533
  %538 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %517, i64 0, i32 0
  %539 = load i64, i64* %538, align 8
  %540 = add i64 %539, %531
  br label %541

541:                                              ; preds = %553, %537
  %542 = phi %"struct.std::__1::__list_node_base"* [ %535, %537 ], [ %557, %553 ]
  %543 = phi i64 [ %534, %537 ], [ %556, %553 ]
  %544 = inttoptr i64 %543 to %"struct.std::__1::__list_node.53"*
  %545 = getelementptr inbounds %"struct.std::__1::__list_node.53", %"struct.std::__1::__list_node.53"* %544, i64 0, i32 1, i32 0, i32 0
  %546 = load i64, i64* %545, align 8
  %547 = icmp ult i64 %539, %546
  br i1 %547, label %553, label %548

548:                                              ; preds = %541
  %549 = getelementptr inbounds %"struct.std::__1::__list_node.53", %"struct.std::__1::__list_node.53"* %544, i64 0, i32 1, i32 0, i32 1
  %550 = load i64, i64* %549, align 8
  %551 = add i64 %550, %546
  %552 = icmp ugt i64 %540, %551
  br i1 %552, label %553, label %561

553:                                              ; preds = %548, %541
  %554 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %542, i64 0, i32 1
  %555 = bitcast %"struct.std::__1::__list_node_base"** %554 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = inttoptr i64 %556 to %"struct.std::__1::__list_node_base"*
  %558 = icmp eq %"struct.std::__1::__list_node_base"* %502, %557
  br i1 %558, label %559, label %541

559:                                              ; preds = %553, %533
  %560 = add i32 %515, 1
  br label %561

561:                                              ; preds = %548, %559, %529, %525, %512
  %562 = phi i32 [ %515, %529 ], [ %560, %559 ], [ %515, %525 ], [ %515, %512 ], [ %515, %548 ]
  %563 = add i32 %514, 1
  %564 = zext i32 %563 to i64
  %565 = icmp ugt i64 %490, %564
  br i1 %565, label %512, label %503

566:                                              ; preds = %503
  %567 = zext i32 %504 to i64
  %568 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 2
  store i32 3, i32* %568, align 4
  %569 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 0
  %570 = mul nuw nsw i64 %567, 108
  %571 = add nuw nsw i64 %570, 4
  %572 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %569, i64 %571) #9
  br i1 %572, label %577, label %694

573:                                              ; preds = %503
  %574 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 2
  store i32 1, i32* %574, align 4
  %575 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 0
  %576 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %575, i64 4) #9
  br i1 %576, label %577, label %694

577:                                              ; preds = %573, %566
  store i32 4, i32* %79, align 4
  %578 = load i64, i64* %509, align 8
  %579 = load i32, i32* %507, align 8
  %580 = zext i32 %579 to i64
  %581 = shl nuw i64 %580, 32
  %582 = and i64 %578, 4294967295
  %583 = or i64 %581, %582
  %584 = bitcast %struct.MDLocationDescriptor* %80 to i64*
  store i64 %583, i64* %584, align 4
  %585 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 1
  store i32 %504, i32* %585, align 8
  %586 = icmp eq i32 %491, 0
  br i1 %586, label %659, label %587

587:                                              ; preds = %577
  %588 = bitcast %struct.MDRawModule* %16 to i8*
  %589 = and i64 %490, 4294967295
  br label %590

590:                                              ; preds = %654, %587
  %591 = phi i64 [ 0, %587 ], [ %656, %654 ]
  %592 = phi i32 [ 0, %587 ], [ %655, %654 ]
  %593 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %594 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %593, i64 0, i32 10, i32 0, i32 0, i32 0
  %595 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %594, align 8
  %596 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %595, i64 %591
  %597 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %596, align 8
  %598 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %597, i64 0, i32 5, i64 0
  %599 = load i8, i8* %598, align 1
  %600 = icmp eq i8 %599, 0
  br i1 %600, label %654, label %601

601:                                              ; preds = %590
  %602 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %597, i64 0, i32 3
  %603 = load i64, i64* %602, align 8
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %609, label %605

605:                                              ; preds = %601
  %606 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %597, i64 0, i32 4
  %607 = load i8, i8* %606, align 8, !range !5
  %608 = icmp eq i8 %607, 0
  br i1 %608, label %654, label %609

609:                                              ; preds = %605, %601
  %610 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %597, i64 0, i32 1
  %611 = load i64, i64* %610, align 8
  %612 = icmp ugt i64 %611, 4095
  br i1 %612, label %613, label %654

613:                                              ; preds = %609
  %614 = load %"class.std::__1::list"*, %"class.std::__1::list"** %492, align 8
  %615 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %614, i64 0, i32 0, i32 0, i32 1
  %616 = bitcast %"struct.std::__1::__list_node_base"** %615 to i64*
  %617 = load i64, i64* %616, align 8
  %618 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %614, i64 0, i32 0, i32 0
  %619 = inttoptr i64 %617 to %"struct.std::__1::__list_node_base"*
  %620 = icmp eq %"struct.std::__1::__list_node_base"* %618, %619
  br i1 %620, label %643, label %621

621:                                              ; preds = %613
  %622 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %597, i64 0, i32 0
  %623 = load i64, i64* %622, align 8
  %624 = add i64 %623, %611
  br label %625

625:                                              ; preds = %637, %621
  %626 = phi %"struct.std::__1::__list_node_base"* [ %619, %621 ], [ %641, %637 ]
  %627 = phi i64 [ %617, %621 ], [ %640, %637 ]
  %628 = inttoptr i64 %627 to %"struct.std::__1::__list_node.53"*
  %629 = getelementptr inbounds %"struct.std::__1::__list_node.53", %"struct.std::__1::__list_node.53"* %628, i64 0, i32 1, i32 0, i32 0
  %630 = load i64, i64* %629, align 8
  %631 = icmp ult i64 %623, %630
  br i1 %631, label %637, label %632

632:                                              ; preds = %625
  %633 = getelementptr inbounds %"struct.std::__1::__list_node.53", %"struct.std::__1::__list_node.53"* %628, i64 0, i32 1, i32 0, i32 1
  %634 = load i64, i64* %633, align 8
  %635 = add i64 %634, %630
  %636 = icmp ugt i64 %624, %635
  br i1 %636, label %637, label %654

637:                                              ; preds = %632, %625
  %638 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %626, i64 0, i32 1
  %639 = bitcast %"struct.std::__1::__list_node_base"** %638 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = inttoptr i64 %640 to %"struct.std::__1::__list_node_base"*
  %642 = icmp eq %"struct.std::__1::__list_node_base"* %618, %641
  br i1 %642, label %643, label %625

643:                                              ; preds = %637, %613
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %588) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %588, i8 -86, i64 112, i1 false) #9
  %644 = trunc i64 %591 to i32
  %645 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter13FillRawModuleERKN15google_breakpad11MappingInfoEbjP11MDRawModulePKh(%"class.(anonymous namespace)::MinidumpWriter"* %0, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %597, i1 zeroext true, i32 %644, %struct.MDRawModule* nonnull %16, i8* null) #9
  br i1 %645, label %646, label %658

646:                                              ; preds = %643
  %647 = add i32 %592, 1
  %648 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %506, align 8
  %649 = load i32, i32* %507, align 8
  %650 = mul i32 %592, 108
  %651 = add i32 %650, 4
  %652 = add i32 %651, %649
  %653 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %648, i32 %652, i8* nonnull %588, i64 108) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %588) #9
  br label %654

654:                                              ; preds = %632, %646, %609, %605, %590
  %655 = phi i32 [ %647, %646 ], [ %592, %609 ], [ %592, %605 ], [ %592, %590 ], [ %592, %632 ]
  %656 = add nuw nsw i64 %591, 1
  %657 = icmp eq i64 %656, %589
  br i1 %657, label %659, label %590

658:                                              ; preds = %643
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %588) #9
  br label %694

659:                                              ; preds = %654, %577
  %660 = phi i32 [ 0, %577 ], [ %655, %654 ]
  %661 = load %"class.std::__1::list"*, %"class.std::__1::list"** %492, align 8
  %662 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %661, i64 0, i32 0, i32 0, i32 1
  %663 = bitcast %"struct.std::__1::__list_node_base"** %662 to i64*
  %664 = load i64, i64* %663, align 8
  %665 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %661, i64 0, i32 0, i32 0
  %666 = inttoptr i64 %664 to %"struct.std::__1::__list_node_base"*
  %667 = icmp eq %"struct.std::__1::__list_node_base"* %665, %666
  br i1 %667, label %694, label %668

668:                                              ; preds = %659
  %669 = bitcast %struct.MDRawModule* %17 to i8*
  br label %670

670:                                              ; preds = %678, %668
  %671 = phi %"struct.std::__1::__list_node_base"* [ %666, %668 ], [ %691, %678 ]
  %672 = phi i64 [ %664, %668 ], [ %688, %678 ]
  %673 = phi i32 [ %660, %668 ], [ %679, %678 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %669) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %669, i8 -86, i64 112, i1 false) #9
  %674 = inttoptr i64 %672 to %"struct.std::__1::__list_node.53"*
  %675 = getelementptr inbounds %"struct.std::__1::__list_node.53", %"struct.std::__1::__list_node.53"* %674, i64 0, i32 1, i32 0
  %676 = getelementptr inbounds %"struct.std::__1::__list_node.53", %"struct.std::__1::__list_node.53"* %674, i64 0, i32 1, i32 1, i64 0
  %677 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter13FillRawModuleERKN15google_breakpad11MappingInfoEbjP11MDRawModulePKh(%"class.(anonymous namespace)::MinidumpWriter"* %0, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %675, i1 zeroext false, i32 0, %struct.MDRawModule* nonnull %17, i8* %676) #9
  br i1 %677, label %678, label %693

678:                                              ; preds = %670
  %679 = add i32 %673, 1
  %680 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %506, align 8
  %681 = load i32, i32* %507, align 8
  %682 = mul i32 %673, 108
  %683 = add i32 %682, 4
  %684 = add i32 %683, %681
  %685 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %680, i32 %684, i8* nonnull %669, i64 108) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %669) #9
  %686 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %671, i64 0, i32 1
  %687 = bitcast %"struct.std::__1::__list_node_base"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = load %"class.std::__1::list"*, %"class.std::__1::list"** %492, align 8
  %690 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %689, i64 0, i32 0, i32 0
  %691 = inttoptr i64 %688 to %"struct.std::__1::__list_node_base"*
  %692 = icmp eq %"struct.std::__1::__list_node_base"* %690, %691
  br i1 %692, label %694, label %670

693:                                              ; preds = %670
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %669) #9
  br label %694

694:                                              ; preds = %678, %693, %659, %658, %573, %566
  %695 = phi i1 [ false, %566 ], [ false, %573 ], [ false, %658 ], [ false, %693 ], [ true, %659 ], [ true, %678 ]
  %696 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 2
  %697 = load i32, i32* %696, align 4
  %698 = icmp eq i32 %697, 2
  br i1 %698, label %705, label %699

699:                                              ; preds = %694
  %700 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %506, align 8
  %701 = load i32, i32* %507, align 8
  %702 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %15, i64 0, i32 1
  %703 = bitcast i32* %702 to i8*
  %704 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %700, i32 %701, i8* %703, i64 4) #9
  br label %705

705:                                              ; preds = %694, %699
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %505) #9
  br i1 %695, label %706, label %1913

706:                                              ; preds = %705
  %707 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %708 = load i32, i32* %43, align 8
  %709 = add i32 %708, 12
  %710 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %707, i32 %709, i8* nonnull %78, i64 12) #9
  %711 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 11
  %712 = load %"class.std::__1::list.1"*, %"class.std::__1::list.1"** %711, align 8
  %713 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %712, i64 0, i32 0, i32 0, i32 1
  %714 = bitcast %"struct.std::__1::__list_node_base.3"** %713 to i64*
  %715 = load i64, i64* %714, align 8
  %716 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %712, i64 0, i32 0, i32 0
  %717 = inttoptr i64 %715 to %"struct.std::__1::__list_node_base.3"*
  %718 = icmp eq %"struct.std::__1::__list_node_base.3"* %716, %717
  br i1 %718, label %719, label %723

719:                                              ; preds = %706
  %720 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %721 = bitcast %struct.MDMemoryDescriptor** %720 to i64*
  %722 = load i64, i64* %721, align 8
  br label %884

723:                                              ; preds = %706
  %724 = bitcast %"class.google_breakpad::UntypedMDRVA"* %14 to i8*
  %725 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %14, i64 0, i32 0
  %726 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %14, i64 0, i32 1
  %727 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %14, i64 0, i32 2
  %728 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0
  %729 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %730 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %731 = bitcast %struct.MDMemoryDescriptor** %729 to i64*
  %732 = bitcast %"class.std::__1::vector.36"* %728 to i64*
  %733 = bitcast %struct.MDMemoryDescriptor** %730 to i64*
  %734 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %735 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %736 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %737 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %728, i64 0, i32 0, i32 0
  br label %738

738:                                              ; preds = %874, %723
  %739 = phi %"struct.std::__1::__list_node_base.3"* [ %717, %723 ], [ %881, %874 ]
  %740 = phi i64 [ %715, %723 ], [ %878, %874 ]
  %741 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %742 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %741, i64 0, i32 8
  %743 = inttoptr i64 %740 to %"struct.std::__1::__list_node"*
  %744 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %743, i64 0, i32 1
  %745 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %743, i64 0, i32 1, i32 1
  %746 = load i64, i64* %745, align 8
  %747 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %742, i64 %746) #9
  %748 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %749 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %748, i64 0, i32 7
  %750 = load i32, i32* %749, align 8
  %751 = getelementptr inbounds %"struct.google_breakpad::AppMemory", %"struct.google_breakpad::AppMemory"* %744, i64 0, i32 0
  %752 = load i8*, i8** %751, align 8
  %753 = load i64, i64* %745, align 8
  %754 = bitcast %"class.google_breakpad::LinuxDumper"* %748 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %755 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %754, align 8
  %756 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %755, i64 8
  %757 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %756, align 8
  %758 = call zeroext i1 %757(%"class.google_breakpad::LinuxDumper"* %748, i8* %747, i32 %750, i8* %752, i64 %753) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %724) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %724, i8 -86, i64 16, i1 false) #9
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %725, align 8
  %759 = load i32, i32* %44, align 8
  store i32 %759, i32* %726, align 8
  store i64 0, i64* %727, align 8
  %760 = load i64, i64* %745, align 8
  %761 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %14, i64 %760) #9
  br i1 %761, label %762, label %883

762:                                              ; preds = %738
  %763 = load i64, i64* %745, align 8
  %764 = load i32, i32* %726, align 8
  %765 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA4CopyEjPKvm(%"class.google_breakpad::UntypedMDRVA"* nonnull %14, i32 %764, i8* %747, i64 %763) #9
  %766 = bitcast %"struct.google_breakpad::AppMemory"* %744 to i64*
  %767 = load i64, i64* %766, align 8
  %768 = load i64, i64* %727, align 8
  %769 = load i32, i32* %726, align 8
  %770 = zext i32 %769 to i64
  %771 = shl nuw i64 %770, 32
  %772 = and i64 %768, 4294967295
  %773 = or i64 %771, %772
  %774 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %729, align 8
  %775 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %730, align 8
  %776 = icmp eq %struct.MDMemoryDescriptor* %774, %775
  %777 = ptrtoint %struct.MDMemoryDescriptor* %775 to i64
  br i1 %776, label %784, label %778

778:                                              ; preds = %762
  %779 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %774, i64 0, i32 0
  store i64 %767, i64* %779, align 8
  %780 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %774, i64 0, i32 1
  %781 = bitcast %struct.MDLocationDescriptor* %780 to i64*
  store i64 %773, i64* %781, align 8
  %782 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %774, i64 1
  %783 = ptrtoint %struct.MDMemoryDescriptor* %782 to i64
  store i64 %783, i64* %731, align 8
  br label %874

784:                                              ; preds = %762
  %785 = ptrtoint %struct.MDMemoryDescriptor* %774 to i64
  %786 = load i64, i64* %732, align 8
  %787 = sub i64 %785, %786
  %788 = ashr exact i64 %787, 4
  %789 = add nsw i64 %788, 1
  %790 = icmp ugt i64 %789, 1152921504606846975
  br i1 %790, label %791, label %793

791:                                              ; preds = %784
  %792 = bitcast %"class.std::__1::vector.36"* %728 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %792) #11
  unreachable

793:                                              ; preds = %784
  %794 = sub i64 %777, %786
  %795 = ashr exact i64 %794, 4
  %796 = icmp ult i64 %795, 576460752303423487
  br i1 %796, label %797, label %802

797:                                              ; preds = %793
  %798 = ashr exact i64 %794, 3
  %799 = icmp ult i64 %798, %789
  %800 = select i1 %799, i64 %789, i64 %798
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %813, label %802

802:                                              ; preds = %797, %793
  %803 = phi i64 [ %800, %797 ], [ 1152921504606846975, %793 ]
  %804 = shl i64 %803, 4
  %805 = load i64, i64* %734, align 8
  %806 = icmp ugt i64 %804, %805
  br i1 %806, label %809, label %807

807:                                              ; preds = %802
  %808 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %735, align 8
  br label %813

809:                                              ; preds = %802
  %810 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %736, align 8
  %811 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %810, i64 %804) #9
  %812 = bitcast i8* %811 to %struct.MDMemoryDescriptor*
  br label %813

813:                                              ; preds = %809, %807, %797
  %814 = phi i64 [ 0, %797 ], [ %803, %807 ], [ %803, %809 ]
  %815 = phi %struct.MDMemoryDescriptor* [ null, %797 ], [ %808, %807 ], [ %812, %809 ]
  %816 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %815, i64 %788
  %817 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %815, i64 %814
  %818 = ptrtoint %struct.MDMemoryDescriptor* %817 to i64
  %819 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %816, i64 0, i32 0
  store i64 %767, i64* %819, align 8
  %820 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %815, i64 %788, i32 1
  %821 = bitcast %struct.MDLocationDescriptor* %820 to i64*
  store i64 %773, i64* %821, align 8
  %822 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %816, i64 1
  %823 = ptrtoint %struct.MDMemoryDescriptor* %822 to i64
  %824 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %737, align 8
  %825 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %729, align 8
  %826 = icmp eq %struct.MDMemoryDescriptor* %825, %824
  br i1 %826, label %871, label %827

827:                                              ; preds = %813
  %828 = ptrtoint %struct.MDMemoryDescriptor* %824 to i64
  %829 = getelementptr %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %825, i64 -1
  %830 = ptrtoint %struct.MDMemoryDescriptor* %829 to i64
  %831 = sub i64 %830, %828
  %832 = lshr i64 %831, 4
  %833 = add nuw nsw i64 %832, 1
  %834 = and i64 %833, 3
  %835 = icmp eq i64 %834, 0
  br i1 %835, label %846, label %836

836:                                              ; preds = %827, %836
  %837 = phi %struct.MDMemoryDescriptor* [ %840, %836 ], [ %816, %827 ]
  %838 = phi %struct.MDMemoryDescriptor* [ %841, %836 ], [ %825, %827 ]
  %839 = phi i64 [ %844, %836 ], [ %834, %827 ]
  %840 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %837, i64 -1
  %841 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %838, i64 -1
  %842 = bitcast %struct.MDMemoryDescriptor* %840 to i8*
  %843 = bitcast %struct.MDMemoryDescriptor* %841 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %842, i8* align 8 %843, i64 16, i1 false) #9
  %844 = add i64 %839, -1
  %845 = icmp eq i64 %844, 0
  br i1 %845, label %846, label %836, !llvm.loop !7

846:                                              ; preds = %836, %827
  %847 = phi %struct.MDMemoryDescriptor* [ undef, %827 ], [ %840, %836 ]
  %848 = phi %struct.MDMemoryDescriptor* [ %816, %827 ], [ %840, %836 ]
  %849 = phi %struct.MDMemoryDescriptor* [ %825, %827 ], [ %841, %836 ]
  %850 = icmp ult i64 %831, 48
  br i1 %850, label %871, label %851

851:                                              ; preds = %846, %851
  %852 = phi %struct.MDMemoryDescriptor* [ %866, %851 ], [ %848, %846 ]
  %853 = phi %struct.MDMemoryDescriptor* [ %867, %851 ], [ %849, %846 ]
  %854 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %852, i64 -1
  %855 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %853, i64 -1
  %856 = bitcast %struct.MDMemoryDescriptor* %854 to i8*
  %857 = bitcast %struct.MDMemoryDescriptor* %855 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %856, i8* align 8 %857, i64 16, i1 false) #9
  %858 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %852, i64 -2
  %859 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %853, i64 -2
  %860 = bitcast %struct.MDMemoryDescriptor* %858 to i8*
  %861 = bitcast %struct.MDMemoryDescriptor* %859 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %860, i8* align 8 %861, i64 16, i1 false) #9
  %862 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %852, i64 -3
  %863 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %853, i64 -3
  %864 = bitcast %struct.MDMemoryDescriptor* %862 to i8*
  %865 = bitcast %struct.MDMemoryDescriptor* %863 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %864, i8* align 8 %865, i64 16, i1 false) #9
  %866 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %852, i64 -4
  %867 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %853, i64 -4
  %868 = bitcast %struct.MDMemoryDescriptor* %866 to i8*
  %869 = bitcast %struct.MDMemoryDescriptor* %867 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %868, i8* align 8 %869, i64 16, i1 false) #9
  %870 = icmp eq %struct.MDMemoryDescriptor* %867, %824
  br i1 %870, label %871, label %851

871:                                              ; preds = %846, %851, %813
  %872 = phi %struct.MDMemoryDescriptor* [ %816, %813 ], [ %847, %846 ], [ %866, %851 ]
  %873 = ptrtoint %struct.MDMemoryDescriptor* %872 to i64
  store i64 %873, i64* %732, align 8
  store i64 %823, i64* %731, align 8
  store i64 %818, i64* %733, align 8
  br label %874

874:                                              ; preds = %871, %778
  %875 = phi i64 [ %823, %871 ], [ %783, %778 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %724) #9
  %876 = getelementptr inbounds %"struct.std::__1::__list_node_base.3", %"struct.std::__1::__list_node_base.3"* %739, i64 0, i32 1
  %877 = bitcast %"struct.std::__1::__list_node_base.3"** %876 to i64*
  %878 = load i64, i64* %877, align 8
  %879 = load %"class.std::__1::list.1"*, %"class.std::__1::list.1"** %711, align 8
  %880 = getelementptr inbounds %"class.std::__1::list.1", %"class.std::__1::list.1"* %879, i64 0, i32 0, i32 0
  %881 = inttoptr i64 %878 to %"struct.std::__1::__list_node_base.3"*
  %882 = icmp eq %"struct.std::__1::__list_node_base.3"* %880, %881
  br i1 %882, label %884, label %738

883:                                              ; preds = %738
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %724) #9
  br label %1913

884:                                              ; preds = %874, %719
  %885 = phi i64* [ %721, %719 ], [ %731, %874 ]
  %886 = phi i64 [ %722, %719 ], [ %875, %874 ]
  %887 = bitcast %"class.google_breakpad::TypedMDRVA.57"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %887) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %887, i8 -86, i64 16, i1 false) #9
  %888 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %888, align 8
  %889 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 0, i32 1
  %890 = load i32, i32* %44, align 8
  store i32 %890, i32* %889, align 8
  %891 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 0, i32 2
  %892 = bitcast i64* %891 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %892, i8 0, i64 16, i1 false) #9
  %893 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0
  %894 = bitcast %"class.std::__1::vector.36"* %893 to i64*
  %895 = load i64, i64* %894, align 8
  %896 = sub i64 %886, %895
  %897 = icmp eq i64 %896, 0
  %898 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 2
  br i1 %897, label %903, label %899

899:                                              ; preds = %884
  store i32 3, i32* %898, align 4
  %900 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 0
  %901 = add nsw i64 %896, 4
  %902 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %900, i64 %901) #9
  br i1 %902, label %906, label %942

903:                                              ; preds = %884
  store i32 1, i32* %898, align 4
  %904 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 0
  %905 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %904, i64 4) #9
  br i1 %905, label %906, label %942

906:                                              ; preds = %903, %899
  store i32 5, i32* %79, align 4
  %907 = load i64, i64* %891, align 8
  %908 = load i32, i32* %889, align 8
  %909 = zext i32 %908 to i64
  %910 = shl nuw i64 %909, 32
  %911 = and i64 %907, 4294967295
  %912 = or i64 %910, %911
  %913 = bitcast %struct.MDLocationDescriptor* %80 to i64*
  store i64 %912, i64* %913, align 4
  %914 = load i64, i64* %885, align 8
  %915 = load i64, i64* %894, align 8
  %916 = sub i64 %914, %915
  %917 = lshr exact i64 %916, 4
  %918 = trunc i64 %917 to i32
  %919 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 1
  store i32 %918, i32* %919, align 8
  %920 = icmp eq i64 %914, %915
  br i1 %920, label %942, label %921

921:                                              ; preds = %906, %940
  %922 = phi i32 [ %941, %940 ], [ %908, %906 ]
  %923 = phi i64 [ %936, %940 ], [ %915, %906 ]
  %924 = phi i64 [ %934, %940 ], [ 0, %906 ]
  %925 = inttoptr i64 %923 to %struct.MDMemoryDescriptor*
  %926 = trunc i64 %924 to i32
  %927 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %925, i64 %924
  %928 = bitcast %struct.MDMemoryDescriptor* %927 to i8*
  %929 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %888, align 8
  %930 = shl i32 %926, 4
  %931 = or i32 %930, 4
  %932 = add i32 %931, %922
  %933 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %929, i32 %932, i8* %928, i64 16) #9
  %934 = add nuw i64 %924, 1
  %935 = load i64, i64* %885, align 8
  %936 = load i64, i64* %894, align 8
  %937 = sub i64 %935, %936
  %938 = ashr exact i64 %937, 4
  %939 = icmp ult i64 %934, %938
  br i1 %939, label %940, label %942

940:                                              ; preds = %921
  %941 = load i32, i32* %889, align 8
  br label %921

942:                                              ; preds = %921, %906, %903, %899
  %943 = phi i1 [ false, %899 ], [ false, %903 ], [ true, %906 ], [ true, %921 ]
  %944 = load i32, i32* %898, align 4
  %945 = icmp eq i32 %944, 2
  br i1 %945, label %952, label %946

946:                                              ; preds = %942
  %947 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %888, align 8
  %948 = load i32, i32* %889, align 8
  %949 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.57", %"class.google_breakpad::TypedMDRVA.57"* %13, i64 0, i32 1
  %950 = bitcast i32* %949 to i8*
  %951 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %947, i32 %948, i8* %950, i64 4) #9
  br label %952

952:                                              ; preds = %942, %946
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %887) #9
  br i1 %943, label %953, label %1913

953:                                              ; preds = %952
  %954 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %955 = load i32, i32* %43, align 8
  %956 = add i32 %955, 24
  %957 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %954, i32 %956, i8* nonnull %78, i64 12) #9
  %958 = bitcast %"class.google_breakpad::TypedMDRVA.76"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %958) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %958, i8 -86, i64 200, i1 false) #9
  %959 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %959, align 8
  %960 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 0, i32 1
  %961 = load i32, i32* %44, align 8
  store i32 %961, i32* %960, align 8
  %962 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 0, i32 2
  %963 = bitcast i64* %962 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %963, i8 0, i64 176, i1 false) #9
  %964 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 2
  store i32 1, i32* %964, align 8
  %965 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 0
  %966 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %965, i64 168) #9
  br i1 %966, label %967, label %1050

967:                                              ; preds = %953
  %968 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1
  %969 = bitcast %struct.MDRawExceptionStream* %968 to i8*
  call void @my_memset(i8* %969, i8 signext 0, i64 168) #9
  store i32 6, i32* %79, align 4
  %970 = load i64, i64* %962, align 8
  %971 = load i32, i32* %960, align 8
  %972 = zext i32 %971 to i64
  %973 = shl nuw i64 %972, 32
  %974 = and i64 %970, 4294967295
  %975 = or i64 %973, %974
  %976 = bitcast %struct.MDLocationDescriptor* %80 to i64*
  store i64 %975, i64* %976, align 4
  %977 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %978 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %977, i64 0, i32 7
  %979 = load i32, i32* %978, align 8
  %980 = getelementptr inbounds %struct.MDRawExceptionStream, %struct.MDRawExceptionStream* %968, i64 0, i32 0
  store i32 %979, i32* %980, align 8
  %981 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %977, i64 0, i32 4
  %982 = load i32, i32* %981, align 8
  %983 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1, i32 2, i32 0
  store i32 %982, i32* %983, align 8
  %984 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %977, i64 0, i32 5
  %985 = load i32, i32* %984, align 4
  %986 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1, i32 2, i32 1
  store i32 %985, i32* %986, align 4
  %987 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %977, i64 0, i32 3
  %988 = load i64, i64* %987, align 8
  %989 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1, i32 2, i32 3
  store i64 %988, i64* %989, align 8
  %990 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %990) #9
  %991 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %992 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %993 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %977, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %990, i8 0, i64 24, i1 false) #9
  %994 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %977, i64 0, i32 6, i32 0, i32 1
  %995 = bitcast i64** %994 to i64*
  %996 = load i64, i64* %995, align 8
  %997 = bitcast %"class.std::__1::vector"* %993 to i64*
  %998 = load i64, i64* %997, align 8
  %999 = sub i64 %996, %998
  %1000 = ashr exact i64 %999, 3
  %1001 = icmp eq i64 %999, 0
  br i1 %1001, label %1002, label %1004

1002:                                             ; preds = %967
  %1003 = bitcast i64** %991 to i64*
  br label %1029

1004:                                             ; preds = %967
  %1005 = icmp ugt i64 %1000, 2305843009213693951
  br i1 %1005, label %1006, label %1008

1006:                                             ; preds = %1004
  %1007 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1007) #11
  unreachable

1008:                                             ; preds = %1004
  %1009 = call i8* @_Znwm(i64 %999) #10
  %1010 = bitcast i8* %1009 to i64*
  %1011 = bitcast i64** %991 to i8**
  store i8* %1009, i8** %1011, align 8
  %1012 = bitcast %"class.std::__1::vector"* %12 to i8**
  store i8* %1009, i8** %1012, align 8
  %1013 = getelementptr inbounds i64, i64* %1010, i64 %1000
  store i64* %1013, i64** %992, align 8
  %1014 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %993, i64 0, i32 0, i32 0
  %1015 = load i64*, i64** %1014, align 8
  %1016 = load i64, i64* %995, align 8
  %1017 = bitcast i64** %991 to i64*
  %1018 = ptrtoint i8* %1009 to i64
  %1019 = ptrtoint i64* %1015 to i64
  %1020 = sub i64 %1016, %1019
  %1021 = icmp sgt i64 %1020, 0
  br i1 %1021, label %1022, label %1027

1022:                                             ; preds = %1008
  %1023 = lshr exact i64 %1020, 3
  %1024 = bitcast i64* %1015 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1009, i8* align 8 %1024, i64 %1020, i1 false) #9
  %1025 = getelementptr inbounds i64, i64* %1010, i64 %1023
  %1026 = ptrtoint i64* %1025 to i64
  br label %1027

1027:                                             ; preds = %1022, %1008
  %1028 = phi i64 [ %1026, %1022 ], [ %1018, %1008 ]
  store i64 %1028, i64* %1017, align 8
  br label %1029

1029:                                             ; preds = %1027, %1002
  %1030 = phi i64* [ %1003, %1002 ], [ %1017, %1027 ]
  %1031 = phi i8* [ null, %1002 ], [ %1009, %1027 ]
  %1032 = phi i64* [ null, %1002 ], [ %1010, %1027 ]
  %1033 = phi i64 [ 0, %1002 ], [ %1018, %1027 ]
  %1034 = phi i64 [ 0, %1002 ], [ %1028, %1027 ]
  %1035 = sub i64 %1034, %1033
  %1036 = lshr exact i64 %1035, 3
  %1037 = trunc i64 %1036 to i32
  %1038 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1, i32 2, i32 4
  store i32 %1037, i32* %1038, align 8
  %1039 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1, i32 2, i32 6, i64 0
  %1040 = bitcast i64* %1039 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1040, i8* align 8 %1031, i64 %1035, i1 false) #9
  %1041 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 8
  %1042 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1, i32 3
  %1043 = bitcast %struct.MDLocationDescriptor* %1041 to i64*
  %1044 = bitcast %struct.MDLocationDescriptor* %1042 to i64*
  %1045 = load i64, i64* %1043, align 4
  store i64 %1045, i64* %1044, align 8
  %1046 = icmp eq i64* %1032, null
  br i1 %1046, label %1049, label %1047

1047:                                             ; preds = %1029
  %1048 = ptrtoint i64* %1032 to i64
  store i64 %1048, i64* %1030, align 8
  call void @_ZdlPv(i8* %1031) #10
  br label %1049

1049:                                             ; preds = %1047, %1029
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %990) #9
  br label %1050

1050:                                             ; preds = %1049, %953
  %1051 = phi i1 [ true, %1049 ], [ false, %953 ]
  %1052 = load i32, i32* %964, align 8
  %1053 = icmp eq i32 %1052, 2
  br i1 %1053, label %1060, label %1054

1054:                                             ; preds = %1050
  %1055 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %959, align 8
  %1056 = load i32, i32* %960, align 8
  %1057 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.76", %"class.google_breakpad::TypedMDRVA.76"* %11, i64 0, i32 1
  %1058 = bitcast %struct.MDRawExceptionStream* %1057 to i8*
  %1059 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1055, i32 %1056, i8* %1058, i64 168) #9
  br label %1060

1060:                                             ; preds = %1050, %1054
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %958) #9
  br i1 %1051, label %1061, label %1913

1061:                                             ; preds = %1060
  %1062 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1063 = load i32, i32* %43, align 8
  %1064 = add i32 %1063, 36
  %1065 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1062, i32 %1064, i8* nonnull %78, i64 12) #9
  %1066 = bitcast %"class.google_breakpad::TypedMDRVA.78"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1066) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1066, i8 -86, i64 88, i1 false) #9
  %1067 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %1067, align 8
  %1068 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 0, i32 1
  %1069 = load i32, i32* %44, align 8
  store i32 %1069, i32* %1068, align 8
  %1070 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 0, i32 2
  %1071 = bitcast i64* %1070 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1071, i8 0, i64 64, i1 false) #9
  %1072 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 2
  store i32 1, i32* %1072, align 8
  %1073 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 0
  %1074 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %1073, i64 56) #9
  br i1 %1074, label %1075, label %1342

1075:                                             ; preds = %1061
  %1076 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1
  %1077 = bitcast %struct.MDRawSystemInfo* %1076 to i8*
  call void @my_memset(i8* %1077, i8 signext 0, i64 56) #9
  store i32 7, i32* %79, align 4
  %1078 = load i64, i64* %1070, align 8
  %1079 = load i32, i32* %1068, align 8
  %1080 = zext i32 %1079 to i64
  %1081 = shl nuw i64 %1080, 32
  %1082 = and i64 %1078, 4294967295
  %1083 = or i64 %1081, %1082
  %1084 = bitcast %struct.MDLocationDescriptor* %80 to i64*
  store i64 %1083, i64* %1084, align 4
  %1085 = getelementptr inbounds [13 x i8], [13 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %1085) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1085, i8 0, i64 13, i1 false) #9
  %1086 = getelementptr inbounds %struct.MDRawSystemInfo, %struct.MDRawSystemInfo* %1076, i64 0, i32 0
  store i16 9, i16* %1086, align 8
  %1087 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 2, i64 ptrtoint ([14 x i8]* @.str to i64), i64 0, i64 0) #9, !srcloc !8
  %1088 = icmp ugt i64 %1087, -4096
  %1089 = trunc i64 %1087 to i32
  br i1 %1088, label %1090, label %1093

1090:                                             ; preds = %1075
  %1091 = sub nsw i32 0, %1089
  %1092 = tail call i32* @__errno_location() #12
  store i32 %1091, i32* %1092, align 4
  br label %1287

1093:                                             ; preds = %1075
  %1094 = icmp slt i32 %1089, 0
  br i1 %1094, label %1287, label %1095

1095:                                             ; preds = %1093
  %1096 = tail call i32 @getpagesize() #12
  %1097 = sext i32 %1096 to i64
  %1098 = add nsw i64 %1097, 559
  %1099 = udiv i64 %1098, %1097
  %1100 = mul i64 %1099, %1097
  %1101 = call i64 asm sideeffect "movq $5,%r10;movq $6,%r8;movq $7,%r9;syscall\0A", "={ax},0,{di},{si},{dx},r,r,r,~{r10},~{r8},~{r9},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 9, i64 0, i64 %1100, i64 3, i64 34, i64 -1, i64 0) #9, !srcloc !9
  %1102 = icmp ugt i64 %1101, -4096
  br i1 %1102, label %1103, label %1107

1103:                                             ; preds = %1095
  %1104 = trunc i64 %1101 to i32
  %1105 = sub nsw i32 0, %1104
  %1106 = tail call i32* @__errno_location() #12
  store i32 %1105, i32* %1106, align 4
  br label %1119

1107:                                             ; preds = %1095
  %1108 = inttoptr i64 %1101 to i8*
  %1109 = icmp eq i8* %1108, inttoptr (i64 -1 to i8*)
  br i1 %1109, label %1119, label %1110

1110:                                             ; preds = %1107
  %1111 = inttoptr i64 %1101 to i64*
  store i64 0, i64* %1111, align 8
  %1112 = getelementptr inbounds i8, i8* %1108, i64 8
  %1113 = bitcast i8* %1112 to i64*
  store i64 %1099, i64* %1113, align 8
  %1114 = icmp eq i64 %1101, 0
  br i1 %1114, label %1119, label %1115

1115:                                             ; preds = %1110
  %1116 = getelementptr inbounds i8, i8* %1108, i64 16
  %1117 = bitcast i8* %1116 to %"class.google_breakpad::ProcCpuInfoReader"*
  %1118 = inttoptr i64 %1101 to %"struct.google_breakpad::PageAllocator::PageHeader"*
  br label %1119

1119:                                             ; preds = %1115, %1110, %1107, %1103
  %1120 = phi %"struct.google_breakpad::PageAllocator::PageHeader"* [ null, %1103 ], [ null, %1107 ], [ null, %1110 ], [ %1118, %1115 ]
  %1121 = phi %"class.google_breakpad::ProcCpuInfoReader"* [ null, %1103 ], [ null, %1107 ], [ null, %1110 ], [ %1117, %1115 ]
  %1122 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %1121, i64 0, i32 0, i32 0
  store i32 %1089, i32* %1122, align 4
  %1123 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %1121, i64 0, i32 0, i32 1
  store i8 0, i8* %1123, align 4
  %1124 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %1121, i64 0, i32 0, i32 2
  store i32 0, i32* %1124, align 4
  %1125 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %1121, i64 0, i32 1
  store i32 -1, i32* %1125, align 4
  %1126 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1126) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %1127 = call zeroext i1 @_ZN15google_breakpad17ProcCpuInfoReader12GetNextFieldEPPKc(%"class.google_breakpad::ProcCpuInfoReader"* %1121, i8** nonnull %4) #9
  br i1 %1127, label %1128, label %1163

1128:                                             ; preds = %1119
  %1129 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %1121, i64 0, i32 3
  %1130 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %1121, i64 0, i32 2
  %1131 = bitcast i64* %5 to i8*
  br label %1132

1132:                                             ; preds = %1161, %1128
  %1133 = phi i32 [ -1, %1128 ], [ %1222, %1161 ]
  %1134 = phi i8 [ 0, %1128 ], [ %1223, %1161 ]
  %1135 = phi i32 [ 0, %1128 ], [ %1242, %1161 ]
  %1136 = phi i8 [ 0, %1128 ], [ %1243, %1161 ]
  %1137 = phi i32 [ 0, %1128 ], [ %1262, %1161 ]
  %1138 = phi i8 [ 0, %1128 ], [ %1263, %1161 ]
  %1139 = phi i32 [ 0, %1128 ], [ %1282, %1161 ]
  %1140 = phi i8 [ 0, %1128 ], [ %1283, %1161 ]
  %1141 = load i8*, i8** %4, align 8
  %1142 = call i32 @my_strcmp(i8* %1141, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)) #9
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1144, label %1221

1144:                                             ; preds = %1132
  %1145 = load i64, i64* %1129, align 8
  %1146 = load i8*, i8** %1130, align 8
  %1147 = icmp eq i64 %1145, 0
  br i1 %1147, label %1221, label %1148

1148:                                             ; preds = %1144
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1131) #9
  store i64 -6148914691236517206, i64* %5, align 8
  %1149 = call i8* @my_read_decimal_ptr(i64* nonnull %5, i8* %1146) #9
  %1150 = icmp eq i8* %1149, %1146
  %1151 = load i64, i64* %5, align 8
  %1152 = trunc i64 %1151 to i32
  %1153 = select i1 %1150, i32 %1133, i32 %1152
  %1154 = select i1 %1150, i8 %1134, i8 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1131) #9
  br label %1221

1155:                                             ; preds = %1281
  %1156 = load i64, i64* %1129, align 8
  %1157 = icmp eq i64 %1156, 0
  br i1 %1157, label %1161, label %1158

1158:                                             ; preds = %1155
  %1159 = load i8*, i8** %1130, align 8
  %1160 = call i64 @my_strlcpy(i8* nonnull %1085, i8* %1159, i64 13) #9
  br label %1161

1161:                                             ; preds = %1281, %1158, %1155
  %1162 = call zeroext i1 @_ZN15google_breakpad17ProcCpuInfoReader12GetNextFieldEPPKc(%"class.google_breakpad::ProcCpuInfoReader"* %1121, i8** nonnull %4) #9
  br i1 %1162, label %1132, label %1163

1163:                                             ; preds = %1161, %1119
  %1164 = phi i32 [ -1, %1119 ], [ %1222, %1161 ]
  %1165 = phi i8 [ 0, %1119 ], [ %1223, %1161 ]
  %1166 = phi i32 [ 0, %1119 ], [ %1242, %1161 ]
  %1167 = phi i8 [ 0, %1119 ], [ %1243, %1161 ]
  %1168 = phi i32 [ 0, %1119 ], [ %1262, %1161 ]
  %1169 = phi i8 [ 0, %1119 ], [ %1263, %1161 ]
  %1170 = phi i32 [ 0, %1119 ], [ %1282, %1161 ]
  %1171 = phi i8 [ 0, %1119 ], [ %1283, %1161 ]
  %1172 = shl i64 %1087, 32
  %1173 = ashr exact i64 %1172, 32
  %1174 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 3, i64 %1173) #9, !srcloc !10
  %1175 = icmp ugt i64 %1174, -4096
  br i1 %1175, label %1176, label %1180

1176:                                             ; preds = %1163
  %1177 = trunc i64 %1174 to i32
  %1178 = sub nsw i32 0, %1177
  %1179 = tail call i32* @__errno_location() #12
  store i32 %1178, i32* %1179, align 4
  br label %1180

1180:                                             ; preds = %1176, %1163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1126) #9
  %1181 = icmp eq %"struct.google_breakpad::PageAllocator::PageHeader"* %1120, null
  br i1 %1181, label %1198, label %1182

1182:                                             ; preds = %1180, %1196
  %1183 = phi %"struct.google_breakpad::PageAllocator::PageHeader"* [ %1185, %1196 ], [ %1120, %1180 ]
  %1184 = getelementptr inbounds %"struct.google_breakpad::PageAllocator::PageHeader", %"struct.google_breakpad::PageAllocator::PageHeader"* %1183, i64 0, i32 0
  %1185 = load %"struct.google_breakpad::PageAllocator::PageHeader"*, %"struct.google_breakpad::PageAllocator::PageHeader"** %1184, align 8
  %1186 = getelementptr inbounds %"struct.google_breakpad::PageAllocator::PageHeader", %"struct.google_breakpad::PageAllocator::PageHeader"* %1183, i64 0, i32 1
  %1187 = load i64, i64* %1186, align 8
  %1188 = mul i64 %1187, %1097
  %1189 = ptrtoint %"struct.google_breakpad::PageAllocator::PageHeader"* %1183 to i64
  %1190 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 11, i64 %1189, i64 %1188) #9, !srcloc !11
  %1191 = icmp ugt i64 %1190, -4096
  br i1 %1191, label %1192, label %1196

1192:                                             ; preds = %1182
  %1193 = trunc i64 %1190 to i32
  %1194 = sub nsw i32 0, %1193
  %1195 = tail call i32* @__errno_location() #12
  store i32 %1194, i32* %1195, align 4
  br label %1196

1196:                                             ; preds = %1192, %1182
  %1197 = icmp eq %"struct.google_breakpad::PageAllocator::PageHeader"* %1185, null
  br i1 %1197, label %1198, label %1182

1198:                                             ; preds = %1196, %1180
  %1199 = icmp eq i8 %1165, 1
  %1200 = icmp eq i8 %1167, 1
  %1201 = and i1 %1199, %1200
  %1202 = icmp eq i8 %1169, 1
  %1203 = and i1 %1201, %1202
  %1204 = icmp eq i8 %1171, 1
  %1205 = and i1 %1203, %1204
  br i1 %1205, label %1209, label %1287

1206:                                             ; preds = %1209
  %1207 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1, i32 12
  %1208 = bitcast %union.MDCPUInformation* %1207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1208, i8* nonnull align 1 %1085, i64 12, i1 false) #9
  br label %1287

1209:                                             ; preds = %1198
  %1210 = trunc i32 %1164 to i8
  %1211 = add i8 %1210, 1
  %1212 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1, i32 3
  store i8 %1211, i8* %1212, align 2
  %1213 = trunc i32 %1170 to i16
  %1214 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1, i32 1
  store i16 %1213, i16* %1214, align 2
  %1215 = shl i32 %1166, 8
  %1216 = or i32 %1168, %1215
  %1217 = trunc i32 %1216 to i16
  %1218 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1, i32 2
  store i16 %1217, i16* %1218, align 4
  %1219 = load i8, i8* %1085, align 1
  %1220 = icmp eq i8 %1219, 0
  br i1 %1220, label %1287, label %1206

1221:                                             ; preds = %1148, %1144, %1132
  %1222 = phi i32 [ %1133, %1144 ], [ %1153, %1148 ], [ %1133, %1132 ]
  %1223 = phi i8 [ %1134, %1144 ], [ %1154, %1148 ], [ %1134, %1132 ]
  %1224 = icmp eq i8 %1136, 0
  br i1 %1224, label %1225, label %1241

1225:                                             ; preds = %1221
  %1226 = load i8*, i8** %4, align 8
  %1227 = call i32 @my_strcmp(i8* %1226, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)) #9
  %1228 = icmp eq i32 %1227, 0
  br i1 %1228, label %1229, label %1241

1229:                                             ; preds = %1225
  %1230 = load i64, i64* %1129, align 8
  %1231 = load i8*, i8** %1130, align 8
  %1232 = icmp eq i64 %1230, 0
  br i1 %1232, label %1241, label %1233

1233:                                             ; preds = %1229
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1131) #9
  store i64 -6148914691236517206, i64* %5, align 8
  %1234 = call i8* @my_read_decimal_ptr(i64* nonnull %5, i8* %1231) #9
  %1235 = icmp eq i8* %1234, %1231
  %1236 = load i64, i64* %5, align 8
  %1237 = trunc i64 %1236 to i32
  %1238 = select i1 %1235, i32 %1135, i32 %1237
  %1239 = xor i1 %1235, true
  %1240 = zext i1 %1239 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1131) #9
  br label %1241

1241:                                             ; preds = %1233, %1229, %1225, %1221
  %1242 = phi i32 [ %1135, %1229 ], [ %1238, %1233 ], [ %1135, %1225 ], [ %1135, %1221 ]
  %1243 = phi i8 [ 0, %1229 ], [ %1240, %1233 ], [ 0, %1225 ], [ %1136, %1221 ]
  %1244 = icmp eq i8 %1138, 0
  br i1 %1244, label %1245, label %1261

1245:                                             ; preds = %1241
  %1246 = load i8*, i8** %4, align 8
  %1247 = call i32 @my_strcmp(i8* %1246, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #9
  %1248 = icmp eq i32 %1247, 0
  br i1 %1248, label %1249, label %1261

1249:                                             ; preds = %1245
  %1250 = load i64, i64* %1129, align 8
  %1251 = load i8*, i8** %1130, align 8
  %1252 = icmp eq i64 %1250, 0
  br i1 %1252, label %1261, label %1253

1253:                                             ; preds = %1249
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1131) #9
  store i64 -6148914691236517206, i64* %5, align 8
  %1254 = call i8* @my_read_decimal_ptr(i64* nonnull %5, i8* %1251) #9
  %1255 = icmp eq i8* %1254, %1251
  %1256 = load i64, i64* %5, align 8
  %1257 = trunc i64 %1256 to i32
  %1258 = select i1 %1255, i32 %1137, i32 %1257
  %1259 = xor i1 %1255, true
  %1260 = zext i1 %1259 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1131) #9
  br label %1261

1261:                                             ; preds = %1253, %1249, %1245, %1241
  %1262 = phi i32 [ %1137, %1249 ], [ %1258, %1253 ], [ %1137, %1245 ], [ %1137, %1241 ]
  %1263 = phi i8 [ 0, %1249 ], [ %1260, %1253 ], [ 0, %1245 ], [ %1138, %1241 ]
  %1264 = icmp eq i8 %1140, 0
  br i1 %1264, label %1265, label %1281

1265:                                             ; preds = %1261
  %1266 = load i8*, i8** %4, align 8
  %1267 = call i32 @my_strcmp(i8* %1266, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #9
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1281

1269:                                             ; preds = %1265
  %1270 = load i64, i64* %1129, align 8
  %1271 = load i8*, i8** %1130, align 8
  %1272 = icmp eq i64 %1270, 0
  br i1 %1272, label %1281, label %1273

1273:                                             ; preds = %1269
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1131) #9
  store i64 -6148914691236517206, i64* %5, align 8
  %1274 = call i8* @my_read_decimal_ptr(i64* nonnull %5, i8* %1271) #9
  %1275 = icmp eq i8* %1274, %1271
  %1276 = load i64, i64* %5, align 8
  %1277 = trunc i64 %1276 to i32
  %1278 = select i1 %1275, i32 %1139, i32 %1277
  %1279 = xor i1 %1275, true
  %1280 = zext i1 %1279 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1131) #9
  br label %1281

1281:                                             ; preds = %1273, %1269, %1265, %1261
  %1282 = phi i32 [ %1139, %1269 ], [ %1278, %1273 ], [ %1139, %1265 ], [ %1139, %1261 ]
  %1283 = phi i8 [ 0, %1269 ], [ %1280, %1273 ], [ 0, %1265 ], [ %1140, %1261 ]
  %1284 = load i8*, i8** %4, align 8
  %1285 = call i32 @my_strcmp(i8* %1284, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZZN12_GLOBAL__N_114MinidumpWriter19WriteCPUInformationEP15MDRawSystemInfoE14vendor_id_name, i64 0, i64 0)) #9
  %1286 = icmp eq i32 %1285, 0
  br i1 %1286, label %1155, label %1161

1287:                                             ; preds = %1209, %1206, %1198, %1093, %1090
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %1085) #9
  %1288 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1, i32 8
  store i32 33281, i32* %1288, align 4
  %1289 = getelementptr inbounds %struct.utsname, %struct.utsname* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 390, i8* nonnull %1289) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1289, i8 -86, i64 390, i1 false) #9
  %1290 = call i32 @uname(%struct.utsname* nonnull %6) #9
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1292, label %1341

1292:                                             ; preds = %1287
  %1293 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %1293) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1293, i8 0, i64 512, i1 false) #9
  %1294 = bitcast [5 x i8*]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1294) #9
  %1295 = getelementptr inbounds [5 x i8*], [5 x i8*]* %8, i64 0, i64 0
  %1296 = getelementptr inbounds [5 x i8*], [5 x i8*]* %8, i64 0, i64 1
  %1297 = getelementptr inbounds [5 x i8*], [5 x i8*]* %8, i64 0, i64 2
  %1298 = getelementptr inbounds [5 x i8*], [5 x i8*]* %8, i64 0, i64 3
  %1299 = getelementptr inbounds [5 x i8*], [5 x i8*]* %8, i64 0, i64 4
  store i8* %1289, i8** %1295, align 16
  %1300 = getelementptr inbounds %struct.utsname, %struct.utsname* %6, i64 0, i32 2, i64 0
  store i8* %1300, i8** %1296, align 8
  %1301 = getelementptr inbounds %struct.utsname, %struct.utsname* %6, i64 0, i32 3, i64 0
  store i8* %1301, i8** %1297, align 16
  %1302 = getelementptr inbounds %struct.utsname, %struct.utsname* %6, i64 0, i32 4, i64 0
  store i8* %1302, i8** %1298, align 8
  store i8* null, i8** %1299, align 16
  br label %1303

1303:                                             ; preds = %1326, %1292
  %1304 = phi i8* [ %1330, %1326 ], [ %1289, %1292 ]
  %1305 = phi i8** [ %1329, %1326 ], [ %1295, %1292 ]
  %1306 = phi i8 [ %1328, %1326 ], [ 1, %1292 ]
  %1307 = phi i64 [ %1327, %1326 ], [ 511, %1292 ]
  %1308 = call i64 @my_strlen(i8* nonnull %1304) #9
  %1309 = icmp eq i64 %1308, 0
  br i1 %1309, label %1326, label %1310

1310:                                             ; preds = %1303
  %1311 = and i8 %1306, 1
  %1312 = icmp ne i8 %1311, 0
  %1313 = xor i1 %1312, true
  %1314 = zext i1 %1313 to i64
  %1315 = add i64 %1308, %1314
  %1316 = icmp ult i64 %1307, %1315
  br i1 %1316, label %1332, label %1317

1317:                                             ; preds = %1310
  br i1 %1312, label %1321, label %1318

1318:                                             ; preds = %1317
  %1319 = call i64 @my_strlcat(i8* nonnull %1293, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZZN12_GLOBAL__N_114MinidumpWriter18WriteOSInformationEP15MDRawSystemInfoE9separator, i64 0, i64 0), i64 512) #9
  %1320 = add i64 %1307, -1
  br label %1321

1321:                                             ; preds = %1318, %1317
  %1322 = phi i64 [ %1307, %1317 ], [ %1320, %1318 ]
  %1323 = load i8*, i8** %1305, align 8
  %1324 = call i64 @my_strlcat(i8* nonnull %1293, i8* %1323, i64 512) #9
  %1325 = sub i64 %1322, %1308
  br label %1326

1326:                                             ; preds = %1321, %1303
  %1327 = phi i64 [ %1307, %1303 ], [ %1325, %1321 ]
  %1328 = phi i8 [ %1306, %1303 ], [ 0, %1321 ]
  %1329 = getelementptr inbounds i8*, i8** %1305, i64 1
  %1330 = load i8*, i8** %1329, align 8
  %1331 = icmp eq i8* %1330, null
  br i1 %1331, label %1332, label %1303

1332:                                             ; preds = %1326, %1310
  %1333 = bitcast %struct.MDLocationDescriptor* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1333) #9
  %1334 = getelementptr inbounds %struct.MDLocationDescriptor, %struct.MDLocationDescriptor* %9, i64 0, i32 0
  store i32 -1431655766, i32* %1334, align 4
  %1335 = getelementptr inbounds %struct.MDLocationDescriptor, %struct.MDLocationDescriptor* %9, i64 0, i32 1
  store i32 -1431655766, i32* %1335, align 4
  %1336 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter11WriteStringEPKcjP20MDLocationDescriptor(%"class.google_breakpad::MinidumpFileWriter"* %41, i8* nonnull %1293, i32 0, %struct.MDLocationDescriptor* nonnull %9) #9
  br i1 %1336, label %1337, label %1340

1337:                                             ; preds = %1332
  %1338 = load i32, i32* %1335, align 4
  %1339 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1, i32 9
  store i32 %1338, i32* %1339, align 8
  br label %1340

1340:                                             ; preds = %1337, %1332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1333) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1294) #9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %1293) #9
  br label %1341

1341:                                             ; preds = %1340, %1287
  call void @llvm.lifetime.end.p0i8(i64 390, i8* nonnull %1289) #9
  br label %1342

1342:                                             ; preds = %1341, %1061
  %1343 = phi i1 [ true, %1341 ], [ false, %1061 ]
  %1344 = load i32, i32* %1072, align 8
  %1345 = icmp eq i32 %1344, 2
  br i1 %1345, label %1352, label %1346

1346:                                             ; preds = %1342
  %1347 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %1067, align 8
  %1348 = load i32, i32* %1068, align 8
  %1349 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.78", %"class.google_breakpad::TypedMDRVA.78"* %10, i64 0, i32 1
  %1350 = bitcast %struct.MDRawSystemInfo* %1349 to i8*
  %1351 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1347, i32 %1348, i8* %1350, i64 56) #9
  br label %1352

1352:                                             ; preds = %1342, %1346
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1066) #9
  br i1 %1343, label %1353, label %1913

1353:                                             ; preds = %1352
  %1354 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1355 = load i32, i32* %43, align 8
  %1356 = add i32 %1355, 48
  %1357 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1354, i32 %1356, i8* nonnull %78, i64 12) #9
  store i32 1197932547, i32* %79, align 4
  %1358 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDLocationDescriptor* %80, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  br i1 %1358, label %1361, label %1359

1359:                                             ; preds = %1353
  store i32 0, i32* %79, align 4
  %1360 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1360, align 4
  store i32 0, i32* %82, align 4
  br label %1361

1361:                                             ; preds = %1359, %1353
  %1362 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1363 = load i32, i32* %43, align 8
  %1364 = add i32 %1363, 60
  %1365 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1362, i32 %1364, i8* nonnull %78, i64 12) #9
  store i32 1197932548, i32* %79, align 4
  %1366 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1367 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1366, i64 0, i32 7
  %1368 = load i32, i32* %1367, align 8
  %1369 = getelementptr inbounds [255 x i8], [255 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %1369) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1369, i8 -86, i64 255, i1 false) #9
  %1370 = bitcast %"class.google_breakpad::LinuxDumper"* %1366 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %1371 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %1370, align 8
  %1372 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1371, i64 9
  %1373 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1372, align 8
  %1374 = call zeroext i1 %1373(%"class.google_breakpad::LinuxDumper"* %1366, i8* nonnull %1369, i32 %1368, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #9
  br i1 %1374, label %1376, label %1375

1375:                                             ; preds = %1361
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br label %1378

1376:                                             ; preds = %1361
  %1377 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDLocationDescriptor* %80, i8* nonnull %1369) #9
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br i1 %1377, label %1380, label %1378

1378:                                             ; preds = %1375, %1376
  store i32 0, i32* %79, align 4
  %1379 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1379, align 4
  store i32 0, i32* %82, align 4
  br label %1380

1380:                                             ; preds = %1378, %1376
  %1381 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1382 = load i32, i32* %43, align 8
  %1383 = add i32 %1382, 72
  %1384 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1381, i32 %1383, i8* nonnull %78, i64 12) #9
  store i32 1197932549, i32* %79, align 4
  %1385 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDLocationDescriptor* %80, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  br i1 %1385, label %1388, label %1386

1386:                                             ; preds = %1380
  store i32 0, i32* %79, align 4
  %1387 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1387, align 4
  store i32 0, i32* %82, align 4
  br label %1388

1388:                                             ; preds = %1386, %1380
  %1389 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1390 = load i32, i32* %43, align 8
  %1391 = add i32 %1390, 84
  %1392 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1389, i32 %1391, i8* nonnull %78, i64 12) #9
  store i32 1197932550, i32* %79, align 4
  %1393 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1394 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1393, i64 0, i32 7
  %1395 = load i32, i32* %1394, align 8
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %1369) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1369, i8 -86, i64 255, i1 false) #9
  %1396 = bitcast %"class.google_breakpad::LinuxDumper"* %1393 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %1397 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %1396, align 8
  %1398 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1397, i64 9
  %1399 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1398, align 8
  %1400 = call zeroext i1 %1399(%"class.google_breakpad::LinuxDumper"* %1393, i8* nonnull %1369, i32 %1395, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #9
  br i1 %1400, label %1402, label %1401

1401:                                             ; preds = %1388
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br label %1404

1402:                                             ; preds = %1388
  %1403 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDLocationDescriptor* %80, i8* nonnull %1369) #9
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br i1 %1403, label %1406, label %1404

1404:                                             ; preds = %1401, %1402
  store i32 0, i32* %79, align 4
  %1405 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1405, align 4
  store i32 0, i32* %82, align 4
  br label %1406

1406:                                             ; preds = %1404, %1402
  %1407 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1408 = load i32, i32* %43, align 8
  %1409 = add i32 %1408, 96
  %1410 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1407, i32 %1409, i8* nonnull %78, i64 12) #9
  store i32 1197932551, i32* %79, align 4
  %1411 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1412 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1411, i64 0, i32 7
  %1413 = load i32, i32* %1412, align 8
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %1369) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1369, i8 -86, i64 255, i1 false) #9
  %1414 = bitcast %"class.google_breakpad::LinuxDumper"* %1411 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %1415 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %1414, align 8
  %1416 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1415, i64 9
  %1417 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1416, align 8
  %1418 = call zeroext i1 %1417(%"class.google_breakpad::LinuxDumper"* %1411, i8* nonnull %1369, i32 %1413, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #9
  br i1 %1418, label %1420, label %1419

1419:                                             ; preds = %1406
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br label %1422

1420:                                             ; preds = %1406
  %1421 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDLocationDescriptor* %80, i8* nonnull %1369) #9
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br i1 %1421, label %1424, label %1422

1422:                                             ; preds = %1419, %1420
  store i32 0, i32* %79, align 4
  %1423 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1423, align 4
  store i32 0, i32* %82, align 4
  br label %1424

1424:                                             ; preds = %1422, %1420
  %1425 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1426 = load i32, i32* %43, align 8
  %1427 = add i32 %1426, 108
  %1428 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1425, i32 %1427, i8* nonnull %78, i64 12) #9
  store i32 1197932552, i32* %79, align 4
  %1429 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1430 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1429, i64 0, i32 7
  %1431 = load i32, i32* %1430, align 8
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %1369) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1369, i8 -86, i64 255, i1 false) #9
  %1432 = bitcast %"class.google_breakpad::LinuxDumper"* %1429 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %1433 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %1432, align 8
  %1434 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1433, i64 9
  %1435 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1434, align 8
  %1436 = call zeroext i1 %1435(%"class.google_breakpad::LinuxDumper"* %1429, i8* nonnull %1369, i32 %1431, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #9
  br i1 %1436, label %1438, label %1437

1437:                                             ; preds = %1424
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br label %1440

1438:                                             ; preds = %1424
  %1439 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDLocationDescriptor* %80, i8* nonnull %1369) #9
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br i1 %1439, label %1442, label %1440

1440:                                             ; preds = %1437, %1438
  store i32 0, i32* %79, align 4
  %1441 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1441, align 4
  store i32 0, i32* %82, align 4
  br label %1442

1442:                                             ; preds = %1440, %1438
  %1443 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1444 = load i32, i32* %43, align 8
  %1445 = add i32 %1444, 120
  %1446 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1443, i32 %1445, i8* nonnull %78, i64 12) #9
  store i32 1197932553, i32* %79, align 4
  %1447 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1448 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1447, i64 0, i32 7
  %1449 = load i32, i32* %1448, align 8
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %1369) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1369, i8 -86, i64 255, i1 false) #9
  %1450 = bitcast %"class.google_breakpad::LinuxDumper"* %1447 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %1451 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %1450, align 8
  %1452 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1451, i64 9
  %1453 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %1452, align 8
  %1454 = call zeroext i1 %1453(%"class.google_breakpad::LinuxDumper"* %1447, i8* nonnull %1369, i32 %1449, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #9
  br i1 %1454, label %1456, label %1455

1455:                                             ; preds = %1442
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br label %1458

1456:                                             ; preds = %1442
  %1457 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"* %0, %struct.MDLocationDescriptor* %80, i8* nonnull %1369) #9
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %1369) #9
  br i1 %1457, label %1460, label %1458

1458:                                             ; preds = %1455, %1456
  store i32 0, i32* %79, align 4
  %1459 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1459, align 4
  store i32 0, i32* %82, align 4
  br label %1460

1460:                                             ; preds = %1458, %1456
  %1461 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1462 = load i32, i32* %43, align 8
  %1463 = add i32 %1462, 132
  %1464 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1461, i32 %1463, i8* nonnull %78, i64 12) #9
  store i32 1197932554, i32* %79, align 4
  %1465 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1466 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1465, i64 0, i32 11, i32 0, i32 0, i32 0
  %1467 = load i64*, i64** %1466, align 8
  %1468 = getelementptr inbounds i64, i64* %1467, i64 3
  %1469 = load i64, i64* %1468, align 8
  %1470 = getelementptr inbounds i64, i64* %1467, i64 5
  %1471 = load i64, i64* %1470, align 8
  %1472 = trunc i64 %1471 to i32
  %1473 = icmp ne i64 %1469, 0
  %1474 = icmp sgt i32 %1472, 0
  %1475 = and i1 %1473, %1474
  br i1 %1475, label %1476, label %1900

1476:                                             ; preds = %1460
  %1477 = bitcast %struct.Elf64_Phdr* %26 to i8*
  %1478 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %26, i64 0, i32 0
  %1479 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %26, i64 0, i32 2
  %1480 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %26, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1477) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1477, i8 -86, i64 56, i1 false) #9
  %1481 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1465, i64 0, i32 7
  %1482 = load i32, i32* %1481, align 8
  %1483 = inttoptr i64 %1469 to i8*
  %1484 = bitcast %"class.google_breakpad::LinuxDumper"* %1465 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1485 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1484, align 8
  %1486 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1485, i64 8
  %1487 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1486, align 8
  %1488 = call zeroext i1 %1487(%"class.google_breakpad::LinuxDumper"* %1465, i8* nonnull %1477, i32 %1482, i8* %1483, i64 56) #9
  br i1 %1488, label %1489, label %1522

1489:                                             ; preds = %1476
  %1490 = inttoptr i64 %1469 to %struct.Elf64_Phdr*
  %1491 = and i64 %1469, -4096
  %1492 = inttoptr i64 %1491 to i8*
  br label %1493

1493:                                             ; preds = %1489, %1510
  %1494 = phi i64 [ %1508, %1510 ], [ 0, %1489 ]
  %1495 = phi i32 [ %1512, %1510 ], [ %1472, %1489 ]
  %1496 = phi i8* [ %1506, %1510 ], [ %1492, %1489 ]
  %1497 = phi %struct.Elf64_Phdr* [ %1511, %1510 ], [ %1490, %1489 ]
  %1498 = load i32, i32* %1478, align 8
  %1499 = icmp eq i32 %1498, 1
  %1500 = load i64, i64* %1479, align 8
  %1501 = icmp eq i64 %1500, 0
  %1502 = and i1 %1499, %1501
  %1503 = load i64, i64* %1480, align 8
  %1504 = sub i64 0, %1503
  %1505 = getelementptr inbounds i8, i8* %1496, i64 %1504
  %1506 = select i1 %1502, i8* %1505, i8* %1496
  %1507 = icmp eq i32 %1498, 2
  %1508 = select i1 %1507, i64 %1503, i64 %1494
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1477) #9
  %1509 = icmp sgt i32 %1495, 0
  br i1 %1509, label %1510, label %1523

1510:                                             ; preds = %1493
  %1511 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %1497, i64 1
  %1512 = add nsw i32 %1495, -1
  %1513 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1477) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1477, i8 -86, i64 56, i1 false) #9
  %1514 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1513, i64 0, i32 7
  %1515 = load i32, i32* %1514, align 8
  %1516 = bitcast %struct.Elf64_Phdr* %1511 to i8*
  %1517 = bitcast %"class.google_breakpad::LinuxDumper"* %1513 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1518 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1517, align 8
  %1519 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1518, i64 8
  %1520 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1519, align 8
  %1521 = call zeroext i1 %1520(%"class.google_breakpad::LinuxDumper"* %1513, i8* nonnull %1477, i32 %1515, i8* %1516, i64 56) #9
  br i1 %1521, label %1493, label %1522

1522:                                             ; preds = %1510, %1476
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1477) #9
  br label %1900

1523:                                             ; preds = %1493
  %1524 = icmp eq i64 %1508, 0
  br i1 %1524, label %1900, label %1525

1525:                                             ; preds = %1523
  %1526 = getelementptr inbounds i8, i8* %1506, i64 %1508
  %1527 = bitcast i8* %1526 to %struct.Elf64_Dyn*
  %1528 = bitcast %struct.Elf64_Dyn* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1528) #9
  %1529 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %27, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1528, i8 -86, i64 16, i1 false) #9
  %1530 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1531 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1530, i64 0, i32 7
  %1532 = load i32, i32* %1531, align 8
  %1533 = bitcast %"class.google_breakpad::LinuxDumper"* %1530 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1534 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1533, align 8
  %1535 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1534, i64 8
  %1536 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1535, align 8
  %1537 = call zeroext i1 %1536(%"class.google_breakpad::LinuxDumper"* %1530, i8* nonnull %1528, i32 %1532, i8* %1526, i64 16) #9
  br i1 %1537, label %1538, label %1541

1538:                                             ; preds = %1525
  %1539 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %27, i64 0, i32 1
  %1540 = bitcast %union.anon.83* %1539 to i8**
  br label %1542

1541:                                             ; preds = %1550, %1525
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1528) #9
  br label %1900

1542:                                             ; preds = %1550, %1538
  %1543 = phi i64 [ 0, %1538 ], [ %1552, %1550 ]
  %1544 = phi i32 [ 16, %1538 ], [ %1555, %1550 ]
  %1545 = phi i64 [ 16, %1538 ], [ %1554, %1550 ]
  %1546 = phi i8* [ null, %1538 ], [ %1551, %1550 ]
  %1547 = load i64, i64* %1529, align 8
  switch i64 %1547, label %1550 [
    i64 21, label %1548
    i64 0, label %1566
  ]

1548:                                             ; preds = %1542
  %1549 = load i8*, i8** %1540, align 8
  br label %1550

1550:                                             ; preds = %1548, %1542
  %1551 = phi i8* [ %1549, %1548 ], [ %1546, %1542 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1528) #9
  %1552 = add nuw i64 %1543, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1528) #9
  %1553 = and i64 %1545, 4294967295
  %1554 = add nuw nsw i64 %1553, 16
  %1555 = trunc i64 %1554 to i32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1528, i8 -86, i64 16, i1 false) #9
  %1556 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1557 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1556, i64 0, i32 7
  %1558 = load i32, i32* %1557, align 8
  %1559 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %1527, i64 %1552
  %1560 = bitcast %struct.Elf64_Dyn* %1559 to i8*
  %1561 = bitcast %"class.google_breakpad::LinuxDumper"* %1556 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1562 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1561, align 8
  %1563 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1562, i64 8
  %1564 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1563, align 8
  %1565 = call zeroext i1 %1564(%"class.google_breakpad::LinuxDumper"* %1556, i8* nonnull %1528, i32 %1558, i8* %1560, i64 16) #9
  br i1 %1565, label %1542, label %1541

1566:                                             ; preds = %1542
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1528) #9
  %1567 = bitcast %struct.r_debug* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1567) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1567, i8 -86, i64 40, i1 false) #9
  %1568 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1569 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1568, i64 0, i32 7
  %1570 = load i32, i32* %1569, align 8
  %1571 = bitcast %"class.google_breakpad::LinuxDumper"* %1568 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1572 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1571, align 8
  %1573 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1572, i64 8
  %1574 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1573, align 8
  %1575 = call zeroext i1 %1574(%"class.google_breakpad::LinuxDumper"* %1568, i8* nonnull %1567, i32 %1570, i8* %1546, i64 40) #9
  br i1 %1575, label %1576, label %1898

1576:                                             ; preds = %1566
  %1577 = getelementptr inbounds %struct.r_debug, %struct.r_debug* %28, i64 0, i32 1
  %1578 = load %struct.link_map*, %struct.link_map** %1577, align 8
  %1579 = icmp eq %struct.link_map* %1578, null
  br i1 %1579, label %1580, label %1582

1580:                                             ; preds = %1576
  %1581 = load i32, i32* @_ZN15google_breakpad18MinidumpFileWriter13kInvalidMDRVAE, align 4
  br label %1686

1582:                                             ; preds = %1576
  %1583 = bitcast %struct.link_map* %29 to i8*
  %1584 = getelementptr inbounds %struct.link_map, %struct.link_map* %29, i64 0, i32 3
  br label %1585

1585:                                             ; preds = %1597, %1582
  %1586 = phi %struct.link_map* [ %1578, %1582 ], [ %1598, %1597 ]
  %1587 = phi i32 [ 0, %1582 ], [ %1599, %1597 ]
  %1588 = bitcast %struct.link_map* %1586 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1583) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1583, i8 -86, i64 40, i1 false) #9
  %1589 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1590 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1589, i64 0, i32 7
  %1591 = load i32, i32* %1590, align 8
  %1592 = bitcast %"class.google_breakpad::LinuxDumper"* %1589 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1593 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1592, align 8
  %1594 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1593, i64 8
  %1595 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1594, align 8
  %1596 = call zeroext i1 %1595(%"class.google_breakpad::LinuxDumper"* %1589, i8* nonnull %1583, i32 %1591, i8* %1588, i64 40) #9
  br i1 %1596, label %1597, label %1601

1597:                                             ; preds = %1585
  %1598 = load %struct.link_map*, %struct.link_map** %1584, align 8
  %1599 = add nuw nsw i32 %1587, 1
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1583) #9
  %1600 = icmp eq %struct.link_map* %1598, null
  br i1 %1600, label %1602, label %1585

1601:                                             ; preds = %1585
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1583) #9
  br label %1898

1602:                                             ; preds = %1597
  %1603 = load i32, i32* @_ZN15google_breakpad18MinidumpFileWriter13kInvalidMDRVAE, align 4
  %1604 = bitcast %"class.google_breakpad::TypedMDRVA.84"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1604) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1604, i8 -86, i64 56, i1 false) #9
  %1605 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.84", %"class.google_breakpad::TypedMDRVA.84"* %30, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %1605, align 8
  %1606 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.84", %"class.google_breakpad::TypedMDRVA.84"* %30, i64 0, i32 0, i32 1
  %1607 = load i32, i32* %44, align 8
  store i32 %1607, i32* %1606, align 8
  %1608 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.84", %"class.google_breakpad::TypedMDRVA.84"* %30, i64 0, i32 0, i32 2
  %1609 = bitcast i64* %1608 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1609, i8 0, i64 32, i1 false) #9
  %1610 = zext i32 %1599 to i64
  %1611 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.84", %"class.google_breakpad::TypedMDRVA.84"* %30, i64 0, i32 2
  store i32 2, i32* %1611, align 8
  %1612 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.84", %"class.google_breakpad::TypedMDRVA.84"* %30, i64 0, i32 0
  %1613 = mul nuw nsw i64 %1610, 24
  %1614 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %1612, i64 %1613) #9
  br i1 %1614, label %1615, label %1673

1615:                                             ; preds = %1602
  %1616 = load i32, i32* %1606, align 8
  %1617 = load %struct.link_map*, %struct.link_map** %1577, align 8
  %1618 = bitcast %struct.link_map* %31 to i8*
  %1619 = getelementptr inbounds %struct.link_map, %struct.link_map* %31, i64 0, i32 0
  %1620 = getelementptr inbounds %struct.link_map, %struct.link_map* %31, i64 0, i32 1
  %1621 = getelementptr inbounds %struct.link_map, %struct.link_map* %31, i64 0, i32 2
  %1622 = getelementptr inbounds %struct.link_map, %struct.link_map* %31, i64 0, i32 3
  %1623 = getelementptr inbounds [257 x i8], [257 x i8]* %32, i64 0, i64 0
  %1624 = bitcast %struct.MDLocationDescriptor* %33 to i8*
  %1625 = getelementptr inbounds %struct.MDLocationDescriptor, %struct.MDLocationDescriptor* %33, i64 0, i32 0
  %1626 = getelementptr inbounds %struct.MDLocationDescriptor, %struct.MDLocationDescriptor* %33, i64 0, i32 1
  %1627 = bitcast %struct.MDRawLinkMap64* %34 to i8*
  %1628 = getelementptr inbounds %struct.MDRawLinkMap64, %struct.MDRawLinkMap64* %34, i64 0, i32 1
  %1629 = getelementptr inbounds %struct.MDRawLinkMap64, %struct.MDRawLinkMap64* %34, i64 0, i32 0
  %1630 = bitcast %struct.Elf64_Dyn** %1621 to i64*
  %1631 = getelementptr inbounds %struct.MDRawLinkMap64, %struct.MDRawLinkMap64* %34, i64 0, i32 2
  %1632 = icmp eq %struct.link_map* %1617, null
  br i1 %1632, label %1673, label %1633

1633:                                             ; preds = %1615, %1662
  %1634 = phi %struct.link_map* [ %1647, %1662 ], [ %1617, %1615 ]
  %1635 = phi i32 [ %1666, %1662 ], [ 0, %1615 ]
  %1636 = bitcast %struct.link_map* %1634 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1618) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1618, i8 -86, i64 40, i1 false) #9
  %1637 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1638 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1637, i64 0, i32 7
  %1639 = load i32, i32* %1638, align 8
  %1640 = bitcast %"class.google_breakpad::LinuxDumper"* %1637 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1641 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1640, align 8
  %1642 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1641, i64 8
  %1643 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1642, align 8
  %1644 = call zeroext i1 %1643(%"class.google_breakpad::LinuxDumper"* %1637, i8* nonnull %1618, i32 %1639, i8* %1636, i64 40) #9
  br i1 %1644, label %1646, label %1645

1645:                                             ; preds = %1633
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1618) #9
  br label %1673

1646:                                             ; preds = %1633
  %1647 = load %struct.link_map*, %struct.link_map** %1622, align 8
  call void @llvm.lifetime.start.p0i8(i64 257, i8* nonnull %1623) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1623, i8 0, i64 257, i1 false) #9
  %1648 = load i8*, i8** %1620, align 8
  %1649 = icmp eq i8* %1648, null
  br i1 %1649, label %1659, label %1650

1650:                                             ; preds = %1646
  %1651 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1652 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1651, i64 0, i32 7
  %1653 = load i32, i32* %1652, align 8
  %1654 = bitcast %"class.google_breakpad::LinuxDumper"* %1651 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1655 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1654, align 8
  %1656 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1655, i64 8
  %1657 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1656, align 8
  %1658 = call zeroext i1 %1657(%"class.google_breakpad::LinuxDumper"* %1651, i8* nonnull %1623, i32 %1653, i8* nonnull %1648, i64 256) #9
  br label %1659

1659:                                             ; preds = %1650, %1646
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1624) #9
  store i32 -1431655766, i32* %1625, align 4
  store i32 -1431655766, i32* %1626, align 4
  %1660 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter11WriteStringEPKcjP20MDLocationDescriptor(%"class.google_breakpad::MinidumpFileWriter"* %41, i8* nonnull %1623, i32 0, %struct.MDLocationDescriptor* nonnull %33) #9
  br i1 %1660, label %1662, label %1661

1661:                                             ; preds = %1659
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1624) #9
  call void @llvm.lifetime.end.p0i8(i64 257, i8* nonnull %1623) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1618) #9
  br label %1673

1662:                                             ; preds = %1659
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1627) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1627, i8 -86, i64 16, i1 false) #9
  %1663 = load i32, i32* %1626, align 4
  store i32 %1663, i32* %1628, align 8
  %1664 = load i64, i64* %1619, align 8
  store i64 %1664, i64* %1629, align 8
  %1665 = load i64, i64* %1630, align 8
  store i64 %1665, i64* %1631, align 8
  %1666 = add nuw nsw i32 %1635, 1
  %1667 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %1605, align 8
  %1668 = load i32, i32* %1606, align 8
  %1669 = mul i32 %1635, 24
  %1670 = add i32 %1668, %1669
  %1671 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1667, i32 %1670, i8* nonnull %1627, i64 24) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1627) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1624) #9
  call void @llvm.lifetime.end.p0i8(i64 257, i8* nonnull %1623) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1618) #9
  %1672 = icmp eq %struct.link_map* %1647, null
  br i1 %1672, label %1673, label %1633

1673:                                             ; preds = %1662, %1615, %1661, %1645, %1602
  %1674 = phi i32 [ 1, %1602 ], [ 1, %1645 ], [ 1, %1661 ], [ 0, %1615 ], [ 0, %1662 ]
  %1675 = phi i32 [ %1603, %1602 ], [ %1616, %1645 ], [ %1616, %1661 ], [ %1616, %1615 ], [ %1616, %1662 ]
  %1676 = load i32, i32* %1611, align 8
  %1677 = icmp eq i32 %1676, 2
  br i1 %1677, label %1684, label %1678

1678:                                             ; preds = %1673
  %1679 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %1605, align 8
  %1680 = load i32, i32* %1606, align 8
  %1681 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.84", %"class.google_breakpad::TypedMDRVA.84"* %30, i64 0, i32 1
  %1682 = bitcast %struct.MDRawLinkMap64* %1681 to i8*
  %1683 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1679, i32 %1680, i8* %1682, i64 24) #9
  br label %1684

1684:                                             ; preds = %1678, %1673
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1604) #9
  %1685 = icmp eq i32 %1674, 0
  br i1 %1685, label %1686, label %1898

1686:                                             ; preds = %1684, %1580
  %1687 = phi i32 [ %1599, %1684 ], [ 0, %1580 ]
  %1688 = phi i32 [ %1675, %1684 ], [ %1581, %1580 ]
  %1689 = bitcast %"class.google_breakpad::TypedMDRVA.86"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1689) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1689, i8 -86, i64 72, i1 false) #9
  %1690 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %41, %"class.google_breakpad::MinidumpFileWriter"** %1690, align 8
  %1691 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 0, i32 1
  %1692 = load i32, i32* %44, align 8
  store i32 %1692, i32* %1691, align 8
  %1693 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 0, i32 2
  %1694 = bitcast i64* %1693 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1694, i8 0, i64 48, i1 false) #9
  %1695 = and i64 %1545, 4294967295
  %1696 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 2
  store i32 3, i32* %1696, align 8
  %1697 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 0
  %1698 = add nuw nsw i64 %1695, 40
  %1699 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %1697, i64 %1698) #9
  br i1 %1699, label %1700, label %1888

1700:                                             ; preds = %1686
  %1701 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 1
  %1702 = bitcast %struct.MDRawDebug64* %1701 to i8*
  call void @my_memset(i8* %1702, i8 signext 0, i64 40) #9
  store i32 1197932554, i32* %79, align 4
  %1703 = load i64, i64* %1693, align 8
  %1704 = load i32, i32* %1691, align 8
  %1705 = zext i32 %1704 to i64
  %1706 = shl nuw i64 %1705, 32
  %1707 = and i64 %1703, 4294967295
  %1708 = or i64 %1706, %1707
  %1709 = bitcast %struct.MDLocationDescriptor* %80 to i64*
  store i64 %1708, i64* %1709, align 4
  %1710 = getelementptr inbounds %struct.r_debug, %struct.r_debug* %28, i64 0, i32 0
  %1711 = load i32, i32* %1710, align 8
  %1712 = getelementptr inbounds %struct.MDRawDebug64, %struct.MDRawDebug64* %1701, i64 0, i32 0
  store i32 %1711, i32* %1712, align 8
  %1713 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 1, i32 1
  store i32 %1688, i32* %1713, align 4
  %1714 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 1, i32 2
  store i32 %1687, i32* %1714, align 8
  %1715 = getelementptr inbounds %struct.r_debug, %struct.r_debug* %28, i64 0, i32 2
  %1716 = load i64, i64* %1715, align 8
  %1717 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 1, i32 3
  store i64 %1716, i64* %1717, align 8
  %1718 = getelementptr inbounds %struct.r_debug, %struct.r_debug* %28, i64 0, i32 4
  %1719 = load i64, i64* %1718, align 8
  %1720 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 1, i32 4
  store i64 %1719, i64* %1720, align 8
  %1721 = ptrtoint i8* %1526 to i64
  %1722 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 1, i32 5
  store i64 %1721, i64* %1722, align 8
  %1723 = bitcast %"class.google_breakpad::wasteful_vector.88"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1723) #9
  %1724 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.88", %"class.google_breakpad::wasteful_vector.88"* %36, i64 0, i32 0, i32 0, i32 0
  %1725 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.88", %"class.google_breakpad::wasteful_vector.88"* %36, i64 0, i32 0, i32 0, i32 1
  %1726 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.88", %"class.google_breakpad::wasteful_vector.88"* %36, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1727 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.88", %"class.google_breakpad::wasteful_vector.88"* %36, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1728 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.88", %"class.google_breakpad::wasteful_vector.88"* %36, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %1729 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1730 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1729, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1723, i8 0, i64 24, i1 false) #9
  store %"class.google_breakpad::PageAllocator"* %1730, %"class.google_breakpad::PageAllocator"** %1727, align 8
  %1731 = bitcast i8** %1728 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1731, i8 0, i64 16, i1 false) #9
  %1732 = bitcast i8** %1726 to i64*
  %1733 = bitcast %"class.google_breakpad::wasteful_vector.88"* %36 to i64*
  %1734 = icmp eq i32 %1544, 0
  %1735 = bitcast i8** %1725 to i64*
  br i1 %1734, label %1853, label %1736

1736:                                             ; preds = %1700
  %1737 = icmp eq i64 %1695, 0
  br i1 %1737, label %1848, label %1738

1738:                                             ; preds = %1736
  %1739 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %1730, i64 %1695) #9
  %1740 = load i8*, i8** %1724, align 8
  %1741 = load i8*, i8** %1725, align 8
  %1742 = ptrtoint i8* %1741 to i64
  %1743 = ptrtoint i8* %1739 to i64
  %1744 = getelementptr inbounds i8, i8* %1739, i64 %1695
  %1745 = ptrtoint i8* %1744 to i64
  %1746 = icmp eq i8* %1741, %1740
  br i1 %1746, label %1848, label %1747

1747:                                             ; preds = %1738
  %1748 = ptrtoint i8* %1740 to i64
  %1749 = ptrtoint i8* %1741 to i64
  %1750 = sub i64 %1749, %1748
  %1751 = icmp ult i64 %1750, 16
  br i1 %1751, label %1835, label %1752

1752:                                             ; preds = %1747
  %1753 = ptrtoint i8* %1740 to i64
  %1754 = sub i64 %1753, %1742
  %1755 = getelementptr i8, i8* %1739, i64 %1754
  %1756 = icmp ult i8* %1755, %1741
  %1757 = icmp ult i8* %1740, %1739
  %1758 = and i1 %1756, %1757
  br i1 %1758, label %1835, label %1759

1759:                                             ; preds = %1752
  %1760 = and i64 %1750, -16
  %1761 = sub i64 0, %1760
  %1762 = getelementptr i8, i8* %1739, i64 %1761
  %1763 = sub i64 0, %1760
  %1764 = getelementptr i8, i8* %1741, i64 %1763
  %1765 = add i64 %1760, -16
  %1766 = lshr exact i64 %1765, 4
  %1767 = add nuw nsw i64 %1766, 1
  %1768 = and i64 %1767, 3
  %1769 = icmp ult i64 %1765, 48
  br i1 %1769, label %1814, label %1770

1770:                                             ; preds = %1759
  %1771 = sub nsw i64 %1767, %1768
  %1772 = getelementptr inbounds i8, i8* %1741, i64 -16
  %1773 = getelementptr inbounds i8, i8* %1739, i64 -16
  %1774 = getelementptr inbounds i8, i8* %1741, i64 -16
  %1775 = getelementptr inbounds i8, i8* %1739, i64 -16
  %1776 = getelementptr inbounds i8, i8* %1741, i64 -16
  %1777 = getelementptr inbounds i8, i8* %1739, i64 -16
  %1778 = getelementptr inbounds i8, i8* %1741, i64 -16
  %1779 = getelementptr inbounds i8, i8* %1739, i64 -16
  br label %1780

1780:                                             ; preds = %1780, %1770
  %1781 = phi i64 [ 0, %1770 ], [ %1811, %1780 ]
  %1782 = phi i64 [ %1771, %1770 ], [ %1812, %1780 ]
  %1783 = sub i64 0, %1781
  %1784 = sub i64 0, %1781
  %1785 = getelementptr inbounds i8, i8* %1772, i64 %1784
  %1786 = bitcast i8* %1785 to <2 x i64>*
  %1787 = load <2 x i64>, <2 x i64>* %1786, align 1, !alias.scope !12
  %1788 = getelementptr inbounds i8, i8* %1773, i64 %1783
  %1789 = bitcast i8* %1788 to <2 x i64>*
  store <2 x i64> %1787, <2 x i64>* %1789, align 1, !alias.scope !15, !noalias !12
  %1790 = sub nuw nsw i64 -16, %1781
  %1791 = sub nuw nsw i64 -16, %1781
  %1792 = getelementptr inbounds i8, i8* %1774, i64 %1791
  %1793 = bitcast i8* %1792 to <2 x i64>*
  %1794 = load <2 x i64>, <2 x i64>* %1793, align 1, !alias.scope !12
  %1795 = getelementptr inbounds i8, i8* %1775, i64 %1790
  %1796 = bitcast i8* %1795 to <2 x i64>*
  store <2 x i64> %1794, <2 x i64>* %1796, align 1, !alias.scope !15, !noalias !12
  %1797 = sub nuw nsw i64 -32, %1781
  %1798 = sub nuw nsw i64 -32, %1781
  %1799 = getelementptr inbounds i8, i8* %1776, i64 %1798
  %1800 = bitcast i8* %1799 to <2 x i64>*
  %1801 = load <2 x i64>, <2 x i64>* %1800, align 1, !alias.scope !12
  %1802 = getelementptr inbounds i8, i8* %1777, i64 %1797
  %1803 = bitcast i8* %1802 to <2 x i64>*
  store <2 x i64> %1801, <2 x i64>* %1803, align 1, !alias.scope !15, !noalias !12
  %1804 = sub nuw nsw i64 -48, %1781
  %1805 = sub nuw nsw i64 -48, %1781
  %1806 = getelementptr inbounds i8, i8* %1778, i64 %1805
  %1807 = bitcast i8* %1806 to <2 x i64>*
  %1808 = load <2 x i64>, <2 x i64>* %1807, align 1, !alias.scope !12
  %1809 = getelementptr inbounds i8, i8* %1779, i64 %1804
  %1810 = bitcast i8* %1809 to <2 x i64>*
  store <2 x i64> %1808, <2 x i64>* %1810, align 1, !alias.scope !15, !noalias !12
  %1811 = add i64 %1781, 64
  %1812 = add i64 %1782, -4
  %1813 = icmp eq i64 %1812, 0
  br i1 %1813, label %1814, label %1780, !llvm.loop !17

1814:                                             ; preds = %1780, %1759
  %1815 = phi i64 [ 0, %1759 ], [ %1811, %1780 ]
  %1816 = icmp eq i64 %1768, 0
  br i1 %1816, label %1833, label %1817

1817:                                             ; preds = %1814
  %1818 = getelementptr inbounds i8, i8* %1741, i64 -16
  %1819 = getelementptr inbounds i8, i8* %1739, i64 -16
  br label %1820

1820:                                             ; preds = %1820, %1817
  %1821 = phi i64 [ %1815, %1817 ], [ %1830, %1820 ]
  %1822 = phi i64 [ %1768, %1817 ], [ %1831, %1820 ]
  %1823 = sub i64 0, %1821
  %1824 = sub i64 0, %1821
  %1825 = getelementptr inbounds i8, i8* %1818, i64 %1824
  %1826 = bitcast i8* %1825 to <2 x i64>*
  %1827 = load <2 x i64>, <2 x i64>* %1826, align 1, !alias.scope !12
  %1828 = getelementptr inbounds i8, i8* %1819, i64 %1823
  %1829 = bitcast i8* %1828 to <2 x i64>*
  store <2 x i64> %1827, <2 x i64>* %1829, align 1, !alias.scope !15, !noalias !12
  %1830 = add i64 %1821, 16
  %1831 = add i64 %1822, -1
  %1832 = icmp eq i64 %1831, 0
  br i1 %1832, label %1833, label %1820, !llvm.loop !19

1833:                                             ; preds = %1820, %1814
  %1834 = icmp eq i64 %1750, %1760
  br i1 %1834, label %1845, label %1835

1835:                                             ; preds = %1833, %1752, %1747
  %1836 = phi i8* [ %1739, %1752 ], [ %1739, %1747 ], [ %1762, %1833 ]
  %1837 = phi i8* [ %1741, %1752 ], [ %1741, %1747 ], [ %1764, %1833 ]
  br label %1838

1838:                                             ; preds = %1835, %1838
  %1839 = phi i8* [ %1841, %1838 ], [ %1836, %1835 ]
  %1840 = phi i8* [ %1842, %1838 ], [ %1837, %1835 ]
  %1841 = getelementptr inbounds i8, i8* %1839, i64 -1
  %1842 = getelementptr inbounds i8, i8* %1840, i64 -1
  %1843 = load i8, i8* %1842, align 1
  store i8 %1843, i8* %1841, align 1
  %1844 = icmp eq i8* %1842, %1740
  br i1 %1844, label %1845, label %1838, !llvm.loop !20

1845:                                             ; preds = %1838, %1833
  %1846 = phi i8* [ %1762, %1833 ], [ %1841, %1838 ]
  %1847 = ptrtoint i8* %1846 to i64
  br label %1848

1848:                                             ; preds = %1736, %1845, %1738
  %1849 = phi i64 [ %1745, %1738 ], [ %1745, %1845 ], [ 0, %1736 ]
  %1850 = phi i64 [ %1743, %1738 ], [ %1743, %1845 ], [ 0, %1736 ]
  %1851 = phi i64 [ %1743, %1738 ], [ %1847, %1845 ], [ 0, %1736 ]
  store i64 %1851, i64* %1733, align 8
  store i64 %1850, i64* %1735, align 8
  store i64 %1849, i64* %1732, align 8
  %1852 = inttoptr i64 %1851 to i8*
  br label %1853

1853:                                             ; preds = %1700, %1848
  %1854 = phi i8* [ %1852, %1848 ], [ null, %1700 ]
  %1855 = phi i64 [ %1851, %1848 ], [ 0, %1700 ]
  %1856 = phi i64 [ %1850, %1848 ], [ 0, %1700 ]
  %1857 = sub i64 %1856, %1855
  %1858 = icmp ugt i64 %1695, %1857
  %1859 = inttoptr i64 %1855 to i8*
  br i1 %1858, label %1860, label %1864

1860:                                             ; preds = %1853
  %1861 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.88", %"class.google_breakpad::wasteful_vector.88"* %36, i64 0, i32 0
  %1862 = sub i64 %1695, %1857
  call void @_ZNSt3__16vectorIcN15google_breakpad16PageStdAllocatorIcEEE8__appendEm(%"class.std::__1::vector.89"* nonnull %1861, i64 %1862) #9
  %1863 = load i8*, i8** %1724, align 8
  br label %1868

1864:                                             ; preds = %1853
  %1865 = icmp ult i64 %1695, %1857
  br i1 %1865, label %1866, label %1868

1866:                                             ; preds = %1864
  %1867 = getelementptr inbounds i8, i8* %1859, i64 %1695
  store i8* %1867, i8** %1725, align 8
  br label %1868

1868:                                             ; preds = %1866, %1864, %1860
  %1869 = phi i8* [ %1863, %1860 ], [ %1854, %1864 ], [ %1854, %1866 ]
  %1870 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1871 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %1870, i64 0, i32 7
  %1872 = load i32, i32* %1871, align 8
  %1873 = bitcast %"class.google_breakpad::LinuxDumper"* %1870 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %1874 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %1873, align 8
  %1875 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1874, i64 8
  %1876 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %1875, align 8
  %1877 = call zeroext i1 %1876(%"class.google_breakpad::LinuxDumper"* %1870, i8* %1869, i32 %1872, i8* %1526, i64 %1695) #9
  %1878 = load i8*, i8** %1724, align 8
  %1879 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %1690, align 8
  %1880 = load i32, i32* %1691, align 8
  %1881 = add i32 %1880, 40
  %1882 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1879, i32 %1881, i8* %1878, i64 %1695) #9
  %1883 = load i8*, i8** %1724, align 8
  %1884 = icmp eq i8* %1883, null
  br i1 %1884, label %1887, label %1885

1885:                                             ; preds = %1868
  %1886 = ptrtoint i8* %1883 to i64
  store i64 %1886, i64* %1735, align 8
  br label %1887

1887:                                             ; preds = %1885, %1868
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1723) #9
  br label %1888

1888:                                             ; preds = %1887, %1686
  %1889 = phi i1 [ true, %1887 ], [ false, %1686 ]
  %1890 = load i32, i32* %1696, align 8
  %1891 = icmp eq i32 %1890, 2
  br i1 %1891, label %1899, label %1892

1892:                                             ; preds = %1888
  %1893 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %1690, align 8
  %1894 = load i32, i32* %1691, align 8
  %1895 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA.86", %"class.google_breakpad::TypedMDRVA.86"* %35, i64 0, i32 1
  %1896 = bitcast %struct.MDRawDebug64* %1895 to i8*
  %1897 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1893, i32 %1894, i8* %1896, i64 40) #9
  br label %1899

1898:                                             ; preds = %1601, %1566, %1684
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1567) #9
  br label %1900

1899:                                             ; preds = %1888, %1892
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1689) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1567) #9
  br i1 %1889, label %1902, label %1900

1900:                                             ; preds = %1541, %1523, %1522, %1460, %1898, %1899
  store i32 0, i32* %79, align 4
  %1901 = getelementptr inbounds %struct.MDRawDirectory, %struct.MDRawDirectory* %39, i64 0, i32 1, i32 0
  store i32 0, i32* %1901, align 4
  store i32 0, i32* %82, align 4
  br label %1902

1902:                                             ; preds = %1900, %1899
  %1903 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1904 = load i32, i32* %43, align 8
  %1905 = add i32 %1904, 144
  %1906 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1903, i32 %1905, i8* nonnull %78, i64 12) #9
  %1907 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %83, align 8
  %1908 = bitcast %"class.google_breakpad::LinuxDumper"* %1907 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %1909 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %1908, align 8
  %1910 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %1909, i64 6
  %1911 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %1910, align 8
  %1912 = call zeroext i1 %1911(%"class.google_breakpad::LinuxDumper"* %1907) #9
  br label %1913

1913:                                             ; preds = %883, %1352, %1060, %952, %705, %467, %1902
  %1914 = phi i1 [ true, %1902 ], [ false, %467 ], [ false, %705 ], [ false, %883 ], [ false, %952 ], [ false, %1060 ], [ false, %1352 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %78) #9
  br label %1915

1915:                                             ; preds = %477, %1913
  %1916 = phi i1 [ %1914, %1913 ], [ false, %477 ]
  %1917 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA", %"class.google_breakpad::TypedMDRVA"* %37, i64 0, i32 2
  %1918 = load i32, i32* %1917, align 4
  %1919 = icmp eq i32 %1918, 2
  br i1 %1919, label %1926, label %1920

1920:                                             ; preds = %1915
  %1921 = load %"class.google_breakpad::MinidumpFileWriter"*, %"class.google_breakpad::MinidumpFileWriter"** %42, align 8
  %1922 = load i32, i32* %43, align 8
  %1923 = getelementptr inbounds %"class.google_breakpad::TypedMDRVA", %"class.google_breakpad::TypedMDRVA"* %37, i64 0, i32 1
  %1924 = bitcast %struct.MDRawDirectory* %1923 to i8*
  %1925 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"* %1921, i32 %1922, i8* %1924, i64 12) #9
  br label %1926

1926:                                             ; preds = %1915, %1920
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #9
  ret i1 %1916
}

; Function Attrs: nounwind
declare void @_ZN15google_breakpad11LinuxDumperD2Ev(%"class.google_breakpad::LinuxDumper"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEPKciPKvmRKNSt3__14listINS_12MappingEntryENS4_9allocatorIS6_EEEERKNS5_INS_9AppMemoryENS7_ISC_EEEEbmb(i8*, i32, i8*, i64, %"class.std::__1::list"* dereferenceable(24), %"class.std::__1::list.1"* dereferenceable(24), i1 zeroext, i64, i1 zeroext) local_unnamed_addr #0 {
  %10 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_117WriteMinidumpImplEPKciliPKvmRKNSt3__14listIN15google_breakpad12MappingEntryENS4_9allocatorIS7_EEEERKNS5_INS6_9AppMemoryENS8_ISD_EEEEbmb(i8* %0, i32 -1, i64 -1, i32 %1, i8* %2, i64 %3, %"class.std::__1::list"* dereferenceable(24) %4, %"class.std::__1::list.1"* dereferenceable(24) %5, i1 zeroext %6, i64 %7, i1 zeroext %8)
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEiiPKvmRKNSt3__14listINS_12MappingEntryENS2_9allocatorIS4_EEEERKNS3_INS_9AppMemoryENS5_ISA_EEEEbmb(i32, i32, i8*, i64, %"class.std::__1::list"* dereferenceable(24), %"class.std::__1::list.1"* dereferenceable(24), i1 zeroext, i64, i1 zeroext) local_unnamed_addr #0 {
  %10 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_117WriteMinidumpImplEPKciliPKvmRKNSt3__14listIN15google_breakpad12MappingEntryENS4_9allocatorIS7_EEEERKNS5_INS6_9AppMemoryENS8_ISD_EEEEbmb(i8* null, i32 %0, i64 -1, i32 %1, i8* %2, i64 %3, %"class.std::__1::list"* dereferenceable(24) %4, %"class.std::__1::list.1"* dereferenceable(24) %5, i1 zeroext %6, i64 %7, i1 zeroext %8)
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEPKcliPKvmRKNSt3__14listINS_12MappingEntryENS4_9allocatorIS6_EEEERKNS5_INS_9AppMemoryENS7_ISC_EEEEbmb(i8*, i64, i32, i8*, i64, %"class.std::__1::list"* dereferenceable(24), %"class.std::__1::list.1"* dereferenceable(24), i1 zeroext, i64, i1 zeroext) local_unnamed_addr #0 {
  %11 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_117WriteMinidumpImplEPKciliPKvmRKNSt3__14listIN15google_breakpad12MappingEntryENS4_9allocatorIS7_EEEERKNS5_INS6_9AppMemoryENS8_ISD_EEEEbmb(i8* %0, i32 -1, i64 %1, i32 %2, i8* %3, i64 %4, %"class.std::__1::list"* dereferenceable(24) %5, %"class.std::__1::list.1"* dereferenceable(24) %6, i1 zeroext %7, i64 %8, i1 zeroext %9)
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEiliPKvmRKNSt3__14listINS_12MappingEntryENS2_9allocatorIS4_EEEERKNS3_INS_9AppMemoryENS5_ISA_EEEEbmb(i32, i64, i32, i8*, i64, %"class.std::__1::list"* dereferenceable(24), %"class.std::__1::list.1"* dereferenceable(24), i1 zeroext, i64, i1 zeroext) local_unnamed_addr #0 {
  %11 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_117WriteMinidumpImplEPKciliPKvmRKNSt3__14listIN15google_breakpad12MappingEntryENS4_9allocatorIS7_EEEERKNS5_INS6_9AppMemoryENS8_ISD_EEEEbmb(i8* null, i32 %0, i64 %1, i32 %2, i8* %3, i64 %4, %"class.std::__1::list"* dereferenceable(24) %5, %"class.std::__1::list.1"* dereferenceable(24) %6, i1 zeroext %7, i64 %8, i1 zeroext %9)
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad13WriteMinidumpEPKcRKNSt3__14listINS_12MappingEntryENS2_9allocatorIS4_EEEERKNS3_INS_9AppMemoryENS5_ISA_EEEEPNS_11LinuxDumperE(i8*, %"class.std::__1::list"* dereferenceable(24), %"class.std::__1::list.1"* dereferenceable(24), %"class.google_breakpad::LinuxDumper"*) local_unnamed_addr #0 {
  %5 = alloca %"class.(anonymous namespace)::MinidumpWriter", align 8
  %6 = bitcast %"class.(anonymous namespace)::MinidumpWriter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 176, i1 false)
  %7 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 0
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 2
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 3
  %10 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 5
  %11 = bitcast %struct.ucontext_t** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store %"class.google_breakpad::LinuxDumper"* %3, %"class.google_breakpad::LinuxDumper"** %10, align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 6
  call void @_ZN15google_breakpad18MinidumpFileWriterC1Ev(%"class.google_breakpad::MinidumpFileWriter"* %12) #9
  %13 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 7
  store i64 -1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 9
  %15 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %10, align 8
  %16 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %15, i64 0, i32 8
  %17 = bitcast %"class.google_breakpad::wasteful_vector.35"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9
  %18 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  store %"class.google_breakpad::PageAllocator"* %16, %"class.google_breakpad::PageAllocator"** %18, align 8
  %19 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %20 = bitcast %struct.MDMemoryDescriptor** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %struct.MDMemoryDescriptor** %21 to i64*
  %23 = bitcast %"class.google_breakpad::wasteful_vector.35"* %14 to i64*
  %24 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 9, i32 0, i32 0, i32 1
  %25 = bitcast %struct.MDMemoryDescriptor** %24 to i64*
  %26 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %16, i64 256) #9
  %27 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.35", %"class.google_breakpad::wasteful_vector.35"* %14, i64 0, i32 0, i32 0, i32 0
  %28 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %27, align 8
  %29 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %24, align 8
  %30 = ptrtoint i8* %26 to i64
  %31 = getelementptr inbounds i8, i8* %26, i64 256
  %32 = ptrtoint i8* %31 to i64
  %33 = icmp eq %struct.MDMemoryDescriptor* %29, %28
  br i1 %33, label %82, label %34

34:                                               ; preds = %4
  %35 = ptrtoint %struct.MDMemoryDescriptor* %28 to i64
  %36 = bitcast i8* %26 to %struct.MDMemoryDescriptor*
  %37 = getelementptr %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %29, i64 -1, i32 0
  %38 = ptrtoint i64* %37 to i64
  %39 = sub i64 %38, %35
  %40 = lshr i64 %39, 4
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 3
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %34, %44
  %45 = phi %struct.MDMemoryDescriptor* [ %48, %44 ], [ %36, %34 ]
  %46 = phi %struct.MDMemoryDescriptor* [ %49, %44 ], [ %29, %34 ]
  %47 = phi i64 [ %52, %44 ], [ %42, %34 ]
  %48 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %45, i64 -1
  %49 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %46, i64 -1
  %50 = bitcast %struct.MDMemoryDescriptor* %48 to i8*
  %51 = bitcast %struct.MDMemoryDescriptor* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #9
  %52 = add i64 %47, -1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %44, !llvm.loop !21

54:                                               ; preds = %44, %34
  %55 = phi %struct.MDMemoryDescriptor* [ undef, %34 ], [ %48, %44 ]
  %56 = phi %struct.MDMemoryDescriptor* [ %36, %34 ], [ %48, %44 ]
  %57 = phi %struct.MDMemoryDescriptor* [ %29, %34 ], [ %49, %44 ]
  %58 = icmp ult i64 %39, 48
  br i1 %58, label %79, label %59

59:                                               ; preds = %54, %59
  %60 = phi %struct.MDMemoryDescriptor* [ %74, %59 ], [ %56, %54 ]
  %61 = phi %struct.MDMemoryDescriptor* [ %75, %59 ], [ %57, %54 ]
  %62 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %60, i64 -1
  %63 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %61, i64 -1
  %64 = bitcast %struct.MDMemoryDescriptor* %62 to i8*
  %65 = bitcast %struct.MDMemoryDescriptor* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #9
  %66 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %60, i64 -2
  %67 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %61, i64 -2
  %68 = bitcast %struct.MDMemoryDescriptor* %66 to i8*
  %69 = bitcast %struct.MDMemoryDescriptor* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #9
  %70 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %60, i64 -3
  %71 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %61, i64 -3
  %72 = bitcast %struct.MDMemoryDescriptor* %70 to i8*
  %73 = bitcast %struct.MDMemoryDescriptor* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false) #9
  %74 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %60, i64 -4
  %75 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %61, i64 -4
  %76 = bitcast %struct.MDMemoryDescriptor* %74 to i8*
  %77 = bitcast %struct.MDMemoryDescriptor* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false) #9
  %78 = icmp eq %struct.MDMemoryDescriptor* %75, %28
  br i1 %78, label %79, label %59

79:                                               ; preds = %59, %54
  %80 = phi %struct.MDMemoryDescriptor* [ %55, %54 ], [ %74, %59 ]
  %81 = ptrtoint %struct.MDMemoryDescriptor* %80 to i64
  br label %82

82:                                               ; preds = %4, %79
  %83 = phi i64 [ %81, %79 ], [ %30, %4 ]
  store i64 %83, i64* %23, align 8
  store i64 %30, i64* %25, align 8
  store i64 %32, i64* %22, align 8
  %84 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 10
  store %"class.std::__1::list"* %1, %"class.std::__1::list"** %84, align 8
  %85 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 11
  store %"class.std::__1::list.1"* %2, %"class.std::__1::list.1"** %85, align 8
  %86 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 12
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 14
  %88 = bitcast i64* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 17, i1 false)
  %89 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4InitEv(%"class.(anonymous namespace)::MinidumpWriter"* nonnull %5)
  br i1 %89, label %90, label %92

90:                                               ; preds = %82
  %91 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter4DumpEv(%"class.(anonymous namespace)::MinidumpWriter"* nonnull %5)
  br label %92

92:                                               ; preds = %82, %90
  %93 = phi i1 [ %91, %90 ], [ false, %82 ]
  %94 = load i32, i32* %7, align 8
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter5CloseEv(%"class.google_breakpad::MinidumpFileWriter"* %12) #9
  br label %98

98:                                               ; preds = %96, %92
  %99 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %10, align 8
  %100 = bitcast %"class.google_breakpad::LinuxDumper"* %99 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %101 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %100, align 8
  %102 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %101, i64 6
  %103 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %102, align 8
  %104 = call zeroext i1 %103(%"class.google_breakpad::LinuxDumper"* %99) #9
  %105 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %5, i64 0, i32 9, i32 0, i32 0, i32 0
  %106 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %105, align 8
  %107 = icmp eq %struct.MDMemoryDescriptor* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %98
  %109 = ptrtoint %struct.MDMemoryDescriptor* %106 to i64
  store i64 %109, i64* %25, align 8
  br label %110

110:                                              ; preds = %98, %108
  call void @_ZN15google_breakpad18MinidumpFileWriterD1Ev(%"class.google_breakpad::MinidumpFileWriter"* %12) #9
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %6) #9
  ret i1 %93
}

declare void @_ZN15google_breakpad11LinuxDumper23SetCrashInfoFromSigInfoERK9siginfo_t(%"class.google_breakpad::LinuxDumper"*, %struct.siginfo_t* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN15google_breakpad18MinidumpFileWriterC1Ev(%"class.google_breakpad::MinidumpFileWriter"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  br i1 %7, label %21, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds i8, i8* %6, i64 %12
  %17 = add i64 %12, %1
  store i64 %17, i64* %11, align 8
  %18 = icmp eq i64 %17, %9
  br i1 %18, label %19, label %62

19:                                               ; preds = %15
  %20 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %62

21:                                               ; preds = %4, %10
  %22 = add i64 %1, 16
  %23 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 0
  %24 = add i64 %1, 15
  %25 = add i64 %24, %9
  %26 = udiv i64 %25, %9
  %27 = mul i64 %26, %9
  %28 = tail call i64 asm sideeffect "movq $5,%r10;movq $6,%r8;movq $7,%r9;syscall\0A", "={ax},0,{di},{si},{dx},r,r,r,~{r10},~{r8},~{r9},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 9, i64 0, i64 %27, i64 3, i64 34, i64 -1, i64 0) #9, !srcloc !9
  %29 = icmp ugt i64 %28, -4096
  br i1 %29, label %30, label %34

30:                                               ; preds = %21
  %31 = trunc i64 %28 to i32
  %32 = sub nsw i32 0, %31
  %33 = tail call i32* @__errno_location() #12
  store i32 %32, i32* %33, align 4
  br label %62

34:                                               ; preds = %21
  %35 = inttoptr i64 %28 to i8*
  %36 = icmp eq i8* %35, inttoptr (i64 -1 to i8*)
  br i1 %36, label %62, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 1
  %39 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %28 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 %26, i64* %43, align 8
  %44 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %38 to i8**
  store i8* %35, i8** %44, align 8
  %45 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %26
  store i64 %47, i64* %45, align 8
  %48 = icmp eq i64 %28, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %37
  %50 = load i64, i64* %23, align 8
  %51 = mul i64 %50, %26
  %52 = add i64 %50, %22
  %53 = sub i64 %52, %51
  %54 = urem i64 %53, %50
  %55 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 3
  store i64 %54, i64* %55, align 8
  %56 = icmp eq i64 %54, 0
  %57 = add i64 %26, -1
  %58 = mul i64 %50, %57
  %59 = getelementptr inbounds i8, i8* %35, i64 %58
  %60 = select i1 %56, i8* null, i8* %59
  store i8* %60, i8** %5, align 8
  %61 = getelementptr inbounds i8, i8* %35, i64 16
  br label %62

62:                                               ; preds = %30, %34, %49, %37, %15, %19, %2
  %63 = phi i8* [ null, %2 ], [ %16, %19 ], [ %16, %15 ], [ %61, %49 ], [ null, %37 ], [ null, %34 ], [ null, %30 ]
  ret i8* %63
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

declare %"struct.google_breakpad::MappingInfo"* @_ZNK15google_breakpad11LinuxDumper17FindMappingNoBiasEm(%"class.google_breakpad::LinuxDumper"*, i64) local_unnamed_addr #2

declare void @_ZN15google_breakpad18MinidumpFileWriter7SetFileEi(%"class.google_breakpad::MinidumpFileWriter"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4OpenEPKc(%"class.google_breakpad::MinidumpFileWriter"*, i8*) local_unnamed_addr #2

declare i64 @_ZN15google_breakpad14UContextReader15GetStackPointerEPK10ucontext_t(%struct.ucontext_t*) local_unnamed_addr #2

declare i64 @_ZN15google_breakpad14UContextReader21GetInstructionPointerEPK10ucontext_t(%struct.ucontext_t*) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad11LinuxDumper12GetStackInfoEPPKvPmm(%"class.google_breakpad::LinuxDumper"*, i8**, i64*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad11LinuxDumper24StackHasPointerToMappingEPKhmmRKNS_11MappingInfoE(%"class.google_breakpad::LinuxDumper"*, i8*, i64, i64, %"struct.google_breakpad::MappingInfo"* dereferenceable(296)) local_unnamed_addr #2

declare void @my_memset(i8*, i8 signext, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter9WriteFileEP20MDLocationDescriptorPKc(%"class.(anonymous namespace)::MinidumpWriter"*, %struct.MDLocationDescriptor* nocapture, i8*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.google_breakpad::UntypedMDRVA", align 8
  %5 = ptrtoint i8* %2 to i64
  %6 = tail call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 2, i64 %5, i64 0, i64 0) #9, !srcloc !8
  %7 = icmp ugt i64 %6, -4096
  %8 = trunc i64 %6 to i32
  br i1 %7, label %9, label %12

9:                                                ; preds = %3
  %10 = sub nsw i32 0, %8
  %11 = tail call i32* @__errno_location() #12
  store i32 %10, i32* %11, align 4
  br label %104

12:                                               ; preds = %3
  %13 = icmp slt i32 %8, 0
  br i1 %13, label %104, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 5
  %16 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %15, align 8
  %17 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %16, i64 0, i32 8
  %18 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %17, i64 1024) #9
  %19 = bitcast i8* %18 to %struct.Buffers*
  %20 = shl i64 %6, 32
  %21 = ashr exact i64 %20, 32
  br label %22

22:                                               ; preds = %14, %48
  %23 = phi i8* [ %51, %48 ], [ %18, %14 ]
  %24 = phi i64 [ %44, %48 ], [ 0, %14 ]
  %25 = phi %struct.Buffers* [ %52, %48 ], [ %19, %14 ]
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  %26 = getelementptr inbounds %struct.Buffers, %struct.Buffers* %25, i64 0, i32 1
  br label %27

27:                                               ; preds = %22, %43
  %28 = phi i64 [ %44, %43 ], [ %24, %22 ]
  br label %29

29:                                               ; preds = %36, %27
  %30 = load i64, i64* %26, align 8
  %31 = getelementptr inbounds %struct.Buffers, %struct.Buffers* %25, i64 0, i32 2, i64 %30
  %32 = sub i64 1008, %30
  %33 = ptrtoint i8* %31 to i64
  %34 = tail call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 0, i64 %21, i64 %33, i64 %32) #9, !srcloc !22
  %35 = icmp ugt i64 %34, -4096
  br i1 %35, label %36, label %41

36:                                               ; preds = %29
  %37 = trunc i64 %34 to i32
  %38 = sub nsw i32 0, %37
  %39 = tail call i32* @__errno_location() #12
  store i32 %38, i32* %39, align 4
  %40 = icmp eq i32 %38, 4
  br i1 %40, label %29, label %54

41:                                               ; preds = %29
  %42 = icmp slt i64 %34, 1
  br i1 %42, label %54, label %43

43:                                               ; preds = %41
  %44 = add i64 %34, %28
  %45 = load i64, i64* %26, align 8
  %46 = add i64 %45, %34
  store i64 %46, i64* %26, align 8
  %47 = icmp eq i64 %46, 1008
  br i1 %47, label %48, label %27

48:                                               ; preds = %43
  %49 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %15, align 8
  %50 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %49, i64 0, i32 8
  %51 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %50, i64 1024) #9
  %52 = bitcast i8* %51 to %struct.Buffers*
  %53 = bitcast %struct.Buffers* %25 to i8**
  store i8* %51, i8** %53, align 8
  br label %22

54:                                               ; preds = %41, %36
  %55 = tail call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 3, i64 %21) #9, !srcloc !10
  %56 = icmp ugt i64 %55, -4096
  br i1 %56, label %57, label %61

57:                                               ; preds = %54
  %58 = trunc i64 %55 to i32
  %59 = sub nsw i32 0, %58
  %60 = tail call i32* @__errno_location() #12
  store i32 %59, i32* %60, align 4
  br label %61

61:                                               ; preds = %54, %57
  %62 = icmp eq i64 %28, 0
  br i1 %62, label %104, label %63

63:                                               ; preds = %61
  %64 = bitcast %"class.google_breakpad::UntypedMDRVA"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 16, i1 false)
  %65 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6
  %66 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %4, i64 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %65, %"class.google_breakpad::MinidumpFileWriter"** %66, align 8
  %67 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %4, i64 0, i32 1
  %68 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6, i32 2
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %67, align 8
  %70 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %4, i64 0, i32 2
  store i64 0, i64* %70, align 8
  %71 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %4, i64 %28) #9
  br i1 %71, label %72, label %102

72:                                               ; preds = %63
  %73 = load i32, i32* %67, align 8
  %74 = icmp eq i8* %18, null
  br i1 %74, label %77, label %85

75:                                               ; preds = %97
  %76 = load i32, i32* %67, align 8
  br label %77

77:                                               ; preds = %75, %72
  %78 = phi i32 [ %76, %75 ], [ %73, %72 ]
  %79 = load i64, i64* %70, align 8
  %80 = zext i32 %78 to i64
  %81 = shl nuw i64 %80, 32
  %82 = and i64 %79, 4294967295
  %83 = or i64 %81, %82
  %84 = bitcast %struct.MDLocationDescriptor* %1 to i64*
  store i64 %83, i64* %84, align 4
  br label %102

85:                                               ; preds = %72, %97
  %86 = phi i32 [ %98, %97 ], [ %73, %72 ]
  %87 = phi %struct.Buffers* [ %100, %97 ], [ %19, %72 ]
  %88 = getelementptr inbounds %struct.Buffers, %struct.Buffers* %87, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct.Buffers, %struct.Buffers* %87, i64 0, i32 2, i64 0
  %93 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA4CopyEjPKvm(%"class.google_breakpad::UntypedMDRVA"* nonnull %4, i32 %86, i8* %92, i64 %89) #9
  %94 = load i64, i64* %88, align 8
  %95 = trunc i64 %94 to i32
  %96 = add i32 %86, %95
  br label %97

97:                                               ; preds = %85, %91
  %98 = phi i32 [ %86, %85 ], [ %96, %91 ]
  %99 = getelementptr inbounds %struct.Buffers, %struct.Buffers* %87, i64 0, i32 0
  %100 = load %struct.Buffers*, %struct.Buffers** %99, align 8
  %101 = icmp eq %struct.Buffers* %100, null
  br i1 %101, label %75, label %85

102:                                              ; preds = %63, %77
  %103 = phi i1 [ true, %77 ], [ false, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #9
  br label %104

104:                                              ; preds = %9, %102, %61, %12
  %105 = phi i1 [ false, %12 ], [ %103, %102 ], [ false, %61 ], [ false, %9 ]
  ret i1 %105
}

declare zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter4CopyEjPKvl(%"class.google_breakpad::MinidumpFileWriter"*, i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter15FillThreadStackEP11MDRawThreadmmiPPh(%"class.(anonymous namespace)::MinidumpWriter"*, %struct.MDRawThread* nocapture, i64, i64, i32, i8** nocapture) unnamed_addr #0 align 2 {
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.google_breakpad::UntypedMDRVA", align 8
  store i8* null, i8** %5, align 8
  %10 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %11 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store i64 -6148914691236517206, i64* %8, align 8
  %12 = getelementptr inbounds %struct.MDRawThread, %struct.MDRawThread* %1, i64 0, i32 5
  %13 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %12, i64 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %struct.MDRawThread, %struct.MDRawThread* %1, i64 0, i32 5, i32 1, i32 0
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.MDRawThread, %struct.MDRawThread* %1, i64 0, i32 5, i32 1, i32 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 5
  %20 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %19, align 8
  %21 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper12GetStackInfoEPPKvPmm(%"class.google_breakpad::LinuxDumper"* %20, i8** nonnull %7, i64* nonnull %8, i64 %2) #9
  br i1 %21, label %22, label %220

22:                                               ; preds = %6
  %23 = icmp sgt i32 %4, -1
  %24 = load i64, i64* %8, align 8
  %25 = zext i32 %4 to i64
  %26 = icmp ugt i64 %24, %25
  %27 = and i1 %23, %26
  br i1 %27, label %28, label %40

28:                                               ; preds = %22
  %29 = sext i32 %4 to i64
  store i64 %29, i64* %8, align 8
  %30 = bitcast i8** %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp sgt i32 %4, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %28, %33
  %34 = phi i64 [ %35, %33 ], [ %31, %28 ]
  %35 = add i64 %34, %29
  %36 = icmp ult i64 %35, %2
  br i1 %36, label %33, label %37

37:                                               ; preds = %33, %28
  %38 = phi i64 [ %31, %28 ], [ %34, %33 ]
  %39 = inttoptr i64 %38 to i8*
  store i8* %39, i8** %7, align 8
  br label %40

40:                                               ; preds = %22, %37
  %41 = phi i64 [ %29, %37 ], [ %24, %22 ]
  %42 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %19, align 8
  %43 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %42, i64 0, i32 8
  %44 = and i64 %41, 4294967295
  %45 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %43, i64 %44) #9
  store i8* %45, i8** %5, align 8
  %46 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %19, align 8
  %47 = getelementptr inbounds %struct.MDRawThread, %struct.MDRawThread* %1, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = load i8*, i8** %7, align 8
  %50 = load i64, i64* %8, align 8
  %51 = bitcast %"class.google_breakpad::LinuxDumper"* %46 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %52 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %52, i64 8
  %54 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %53, align 8
  %55 = call zeroext i1 %54(%"class.google_breakpad::LinuxDumper"* %46, i8* %45, i32 %48, i8* %49, i64 %50) #9
  %56 = bitcast i8** %7 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %2, %57
  %59 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 12
  %60 = load i8, i8* %59, align 8, !range !5
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %40
  %63 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 15
  %64 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %63, align 8
  %65 = icmp eq %"struct.google_breakpad::MappingInfo"* %64, null
  br i1 %65, label %220, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %64, i64 0, i32 2, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp ugt i64 %68, %3
  br i1 %69, label %74, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %64, i64 0, i32 2, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult i64 %72, %3
  br i1 %73, label %74, label %79

74:                                               ; preds = %70, %66
  %75 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %19, align 8
  %76 = load i8*, i8** %5, align 8
  %77 = load i64, i64* %8, align 8
  %78 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper24StackHasPointerToMappingEPKhmmRKNS_11MappingInfoE(%"class.google_breakpad::LinuxDumper"* %75, i8* %76, i64 %77, i64 %58, %"struct.google_breakpad::MappingInfo"* nonnull dereferenceable(296) %64) #9
  br i1 %78, label %79, label %220

79:                                               ; preds = %74, %70, %40
  %80 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 16
  %81 = load i8, i8* %80, align 8, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %19, align 8
  %85 = load i8*, i8** %5, align 8
  %86 = load i64, i64* %8, align 8
  call void @_ZN15google_breakpad11LinuxDumper17SanitizeStackCopyEPhmmm(%"class.google_breakpad::LinuxDumper"* %84, i8* %85, i64 %86, i64 %2, i64 %58) #9
  br label %87

87:                                               ; preds = %79, %83
  %88 = bitcast %"class.google_breakpad::UntypedMDRVA"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false)
  %89 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %9, i64 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %15, %"class.google_breakpad::MinidumpFileWriter"** %89, align 8
  %90 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %9, i64 0, i32 1
  %91 = load i32, i32* %16, align 8
  store i32 %91, i32* %90, align 8
  %92 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %9, i64 0, i32 2
  store i64 0, i64* %92, align 8
  %93 = load i64, i64* %8, align 8
  %94 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %9, i64 %93) #9
  br i1 %94, label %95, label %219

95:                                               ; preds = %87
  %96 = load i8*, i8** %5, align 8
  %97 = load i64, i64* %8, align 8
  %98 = load i32, i32* %90, align 8
  %99 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA4CopyEjPKvm(%"class.google_breakpad::UntypedMDRVA"* nonnull %9, i32 %98, i8* %96, i64 %97) #9
  %100 = load i64, i64* %56, align 8
  store i64 %100, i64* %13, align 8
  %101 = load i64, i64* %92, align 8
  %102 = load i32, i32* %90, align 8
  %103 = zext i32 %102 to i64
  %104 = shl nuw i64 %103, 32
  %105 = and i64 %101, 4294967295
  %106 = or i64 %104, %105
  %107 = getelementptr inbounds %struct.MDRawThread, %struct.MDRawThread* %1, i64 0, i32 5, i32 1
  %108 = bitcast %struct.MDLocationDescriptor* %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0
  %110 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %111 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %110, align 8
  %112 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %113 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %112, align 8
  %114 = icmp eq %struct.MDMemoryDescriptor* %111, %113
  %115 = ptrtoint %struct.MDMemoryDescriptor* %113 to i64
  br i1 %114, label %122, label %116

116:                                              ; preds = %95
  %117 = bitcast %struct.MDMemoryDescriptor* %111 to i8*
  %118 = bitcast %struct.MDMemoryDescriptor* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #9
  %119 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %111, i64 1
  %120 = ptrtoint %struct.MDMemoryDescriptor* %119 to i64
  %121 = bitcast %struct.MDMemoryDescriptor** %110 to i64*
  store i64 %120, i64* %121, align 8
  br label %218

122:                                              ; preds = %95
  %123 = ptrtoint %struct.MDMemoryDescriptor* %111 to i64
  %124 = bitcast %struct.MDMemoryDescriptor** %110 to i64*
  %125 = bitcast %"class.std::__1::vector.36"* %109 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %123, %126
  %128 = ashr exact i64 %127, 4
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 1152921504606846975
  br i1 %130, label %131, label %133

131:                                              ; preds = %122
  %132 = bitcast %"class.std::__1::vector.36"* %109 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #11
  unreachable

133:                                              ; preds = %122
  %134 = bitcast %struct.MDMemoryDescriptor** %112 to i64*
  %135 = sub i64 %115, %126
  %136 = ashr exact i64 %135, 4
  %137 = icmp ult i64 %136, 576460752303423487
  br i1 %137, label %138, label %143

138:                                              ; preds = %133
  %139 = ashr exact i64 %135, 3
  %140 = icmp ult i64 %139, %129
  %141 = select i1 %140, i64 %129, i64 %139
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %157, label %143

143:                                              ; preds = %138, %133
  %144 = phi i64 [ %141, %138 ], [ 1152921504606846975, %133 ]
  %145 = shl i64 %144, 4
  %146 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %147 = load i64, i64* %146, align 8
  %148 = icmp ugt i64 %145, %147
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %151 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %150, align 8
  br label %157

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %154 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %153, align 8
  %155 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %154, i64 %145) #9
  %156 = bitcast i8* %155 to %struct.MDMemoryDescriptor*
  br label %157

157:                                              ; preds = %152, %149, %138
  %158 = phi i64 [ 0, %138 ], [ %144, %149 ], [ %144, %152 ]
  %159 = phi %struct.MDMemoryDescriptor* [ null, %138 ], [ %151, %149 ], [ %156, %152 ]
  %160 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %159, i64 %128
  %161 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %159, i64 %158
  %162 = ptrtoint %struct.MDMemoryDescriptor* %161 to i64
  %163 = bitcast %struct.MDMemoryDescriptor* %160 to i8*
  %164 = bitcast %struct.MDMemoryDescriptor* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 16, i1 false) #9
  %165 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %160, i64 1
  %166 = ptrtoint %struct.MDMemoryDescriptor* %165 to i64
  %167 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %109, i64 0, i32 0, i32 0
  %168 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %167, align 8
  %169 = load %struct.MDMemoryDescriptor*, %struct.MDMemoryDescriptor** %110, align 8
  %170 = icmp eq %struct.MDMemoryDescriptor* %169, %168
  br i1 %170, label %215, label %171

171:                                              ; preds = %157
  %172 = ptrtoint %struct.MDMemoryDescriptor* %168 to i64
  %173 = getelementptr %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %169, i64 -1, i32 0
  %174 = ptrtoint i64* %173 to i64
  %175 = sub i64 %174, %172
  %176 = lshr i64 %175, 4
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %190, label %180

180:                                              ; preds = %171, %180
  %181 = phi %struct.MDMemoryDescriptor* [ %184, %180 ], [ %160, %171 ]
  %182 = phi %struct.MDMemoryDescriptor* [ %185, %180 ], [ %169, %171 ]
  %183 = phi i64 [ %188, %180 ], [ %178, %171 ]
  %184 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %181, i64 -1
  %185 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %182, i64 -1
  %186 = bitcast %struct.MDMemoryDescriptor* %184 to i8*
  %187 = bitcast %struct.MDMemoryDescriptor* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 16, i1 false) #9
  %188 = add i64 %183, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %180, !llvm.loop !23

190:                                              ; preds = %180, %171
  %191 = phi %struct.MDMemoryDescriptor* [ undef, %171 ], [ %184, %180 ]
  %192 = phi %struct.MDMemoryDescriptor* [ %160, %171 ], [ %184, %180 ]
  %193 = phi %struct.MDMemoryDescriptor* [ %169, %171 ], [ %185, %180 ]
  %194 = icmp ult i64 %175, 48
  br i1 %194, label %215, label %195

195:                                              ; preds = %190, %195
  %196 = phi %struct.MDMemoryDescriptor* [ %210, %195 ], [ %192, %190 ]
  %197 = phi %struct.MDMemoryDescriptor* [ %211, %195 ], [ %193, %190 ]
  %198 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %196, i64 -1
  %199 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %197, i64 -1
  %200 = bitcast %struct.MDMemoryDescriptor* %198 to i8*
  %201 = bitcast %struct.MDMemoryDescriptor* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 16, i1 false) #9
  %202 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %196, i64 -2
  %203 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %197, i64 -2
  %204 = bitcast %struct.MDMemoryDescriptor* %202 to i8*
  %205 = bitcast %struct.MDMemoryDescriptor* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %205, i64 16, i1 false) #9
  %206 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %196, i64 -3
  %207 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %197, i64 -3
  %208 = bitcast %struct.MDMemoryDescriptor* %206 to i8*
  %209 = bitcast %struct.MDMemoryDescriptor* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* align 8 %209, i64 16, i1 false) #9
  %210 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %196, i64 -4
  %211 = getelementptr inbounds %struct.MDMemoryDescriptor, %struct.MDMemoryDescriptor* %197, i64 -4
  %212 = bitcast %struct.MDMemoryDescriptor* %210 to i8*
  %213 = bitcast %struct.MDMemoryDescriptor* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 16, i1 false) #9
  %214 = icmp eq %struct.MDMemoryDescriptor* %211, %168
  br i1 %214, label %215, label %195

215:                                              ; preds = %190, %195, %157
  %216 = phi %struct.MDMemoryDescriptor* [ %160, %157 ], [ %191, %190 ], [ %210, %195 ]
  %217 = ptrtoint %struct.MDMemoryDescriptor* %216 to i64
  store i64 %217, i64* %125, align 8
  store i64 %166, i64* %124, align 8
  store i64 %162, i64* %134, align 8
  br label %218

218:                                              ; preds = %116, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #9
  br label %220

219:                                              ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #9
  br label %220

220:                                              ; preds = %74, %62, %6, %218, %219
  %221 = phi i1 [ false, %219 ], [ true, %218 ], [ true, %6 ], [ true, %62 ], [ true, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret i1 %221
}

declare void @_ZN15google_breakpad14UContextReader14FillCPUContextEP17MDRawContextAMD64PK10ucontext_tPK13_libc_fpstate(%struct.MDRawContextAMD64*, %struct.ucontext_t*, %struct._libc_fpstate*) local_unnamed_addr #2

declare i64 @_ZNK15google_breakpad10ThreadInfo21GetInstructionPointerEv(%"struct.google_breakpad::ThreadInfo"*) local_unnamed_addr #2

declare void @_ZNK15google_breakpad10ThreadInfo14FillCPUContextEP17MDRawContextAMD64(%"struct.google_breakpad::ThreadInfo"*, %struct.MDRawContextAMD64*) local_unnamed_addr #2

declare void @_ZN15google_breakpad11LinuxDumper17SanitizeStackCopyEPhmmm(%"class.google_breakpad::LinuxDumper"*, i8*, i64, i64, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad12UntypedMDRVA4CopyEjPKvm(%"class.google_breakpad::UntypedMDRVA"*, i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_114MinidumpWriter13FillRawModuleERKN15google_breakpad11MappingInfoEbjP11MDRawModulePKh(%"class.(anonymous namespace)::MinidumpWriter"*, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i1 zeroext, i32, %struct.MDRawModule*, i8*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.google_breakpad::auto_wasteful_vector", align 8
  %8 = alloca %"class.google_breakpad::UntypedMDRVA", align 8
  %9 = alloca i32, align 4
  %10 = alloca [255 x i8], align 16
  %11 = alloca [255 x i8], align 16
  %12 = alloca %struct.MDLocationDescriptor, align 4
  %13 = bitcast %struct.MDRawModule* %4 to i8*
  tail call void @my_memset(i8* %13, i8 signext 0, i64 108) #9
  %14 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.MDRawModule, %struct.MDRawModule* %4, i64 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %struct.MDRawModule, %struct.MDRawModule* %4, i64 0, i32 1
  store i32 %19, i32* %20, align 8
  %21 = bitcast %"class.google_breakpad::auto_wasteful_vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 5
  %24 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %23, align 8
  %25 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %24, i64 0, i32 8
  %26 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  store %"class.google_breakpad::PageAllocator"* %25, %"class.google_breakpad::PageAllocator"** %27, align 8
  %28 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 2
  store i64 20, i64* %29, align 8
  %30 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast i8** %30 to i64*
  %32 = bitcast %"class.google_breakpad::auto_wasteful_vector"* %7 to i64*
  %33 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast i8** %33 to i64*
  %35 = ptrtoint i8* %26 to i64
  %36 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 1, i64 20
  %37 = ptrtoint i8* %36 to i64
  store i64 %35, i64* %32, align 8
  store i64 %35, i64* %34, align 8
  store i64 %37, i64* %31, align 8
  %38 = icmp eq i8* %5, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %6
  %40 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds i8, i8* %5, i64 16
  %42 = call i8* @_ZNSt3__16vectorIhN15google_breakpad16PageStdAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSD_IS7_EES9_S9_(%"class.std::__1::vector.63"* nonnull %40, i8* %26, i8* nonnull %5, i8* %41)
  br label %46

43:                                               ; preds = %6
  %44 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0
  %45 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper27ElfFileIdentifierForMappingERKNS_11MappingInfoEbjRNS_15wasteful_vectorIhEE(%"class.google_breakpad::LinuxDumper"* %24, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %1, i1 zeroext %2, i32 %3, %"class.google_breakpad::wasteful_vector.62"* nonnull dereferenceable(48) %44) #9
  br label %46

46:                                               ; preds = %43, %39
  %47 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i8*, i8** %33, align 8
  %50 = icmp eq i8* %48, %49
  br i1 %50, label %84, label %51

51:                                               ; preds = %46
  %52 = ptrtoint i8* %48 to i64
  %53 = ptrtoint i8* %49 to i64
  %54 = bitcast %"class.google_breakpad::UntypedMDRVA"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false)
  %55 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6
  %56 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %8, i64 0, i32 0
  store %"class.google_breakpad::MinidumpFileWriter"* %55, %"class.google_breakpad::MinidumpFileWriter"** %56, align 8
  %57 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %8, i64 0, i32 1
  %58 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6, i32 2
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %57, align 8
  %60 = getelementptr inbounds %"class.google_breakpad::UntypedMDRVA", %"class.google_breakpad::UntypedMDRVA"* %8, i64 0, i32 2
  store i64 0, i64* %60, align 8
  %61 = add i64 %53, 4
  %62 = sub i64 %61, %52
  %63 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA8AllocateEm(%"class.google_breakpad::UntypedMDRVA"* nonnull %8, i64 %62) #9
  br i1 %63, label %64, label %83

64:                                               ; preds = %51
  %65 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #9
  store i32 1114654028, i32* %9, align 4
  %66 = load i32, i32* %57, align 8
  %67 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA4CopyEjPKvm(%"class.google_breakpad::UntypedMDRVA"* nonnull %8, i32 %66, i8* nonnull %65, i64 4) #9
  %68 = load i32, i32* %57, align 8
  %69 = add i32 %68, 4
  %70 = load i8*, i8** %47, align 8
  %71 = load i64, i64* %34, align 8
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %71, %72
  %74 = call zeroext i1 @_ZN15google_breakpad12UntypedMDRVA4CopyEjPKvm(%"class.google_breakpad::UntypedMDRVA"* nonnull %8, i32 %69, i8* %70, i64 %73) #9
  %75 = load i64, i64* %60, align 8
  %76 = load i32, i32* %57, align 8
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = and i64 %75, 4294967295
  %80 = or i64 %78, %79
  %81 = getelementptr inbounds %struct.MDRawModule, %struct.MDRawModule* %4, i64 0, i32 6
  %82 = bitcast %struct.MDLocationDescriptor* %81 to i64*
  store i64 %80, i64* %82, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  br label %84

83:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  br label %100

84:                                               ; preds = %64, %46
  %85 = getelementptr inbounds [255 x i8], [255 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %85) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %85, i8 -86, i64 255, i1 false)
  %86 = getelementptr inbounds [255 x i8], [255 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %86) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 -86, i64 255, i1 false)
  %87 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %23, align 8
  call void @_ZN15google_breakpad11LinuxDumper30GetMappingEffectiveNameAndPathERKNS_11MappingInfoEPcmS4_m(%"class.google_breakpad::LinuxDumper"* %87, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %1, i8* nonnull %86, i64 255, i8* nonnull %85, i64 255) #9
  %88 = bitcast %struct.MDLocationDescriptor* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #9
  %89 = getelementptr inbounds %struct.MDLocationDescriptor, %struct.MDLocationDescriptor* %12, i64 0, i32 0
  store i32 -1431655766, i32* %89, align 4
  %90 = getelementptr inbounds %struct.MDLocationDescriptor, %struct.MDLocationDescriptor* %12, i64 0, i32 1
  store i32 -1431655766, i32* %90, align 4
  %91 = getelementptr inbounds %"class.(anonymous namespace)::MinidumpWriter", %"class.(anonymous namespace)::MinidumpWriter"* %0, i64 0, i32 6
  %92 = call i64 @my_strlen(i8* nonnull %86) #9
  %93 = trunc i64 %92 to i32
  %94 = call zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter11WriteStringEPKcjP20MDLocationDescriptor(%"class.google_breakpad::MinidumpFileWriter"* %91, i8* nonnull %86, i32 %93, %struct.MDLocationDescriptor* nonnull %12) #9
  br i1 %94, label %95, label %98

95:                                               ; preds = %84
  %96 = load i32, i32* %90, align 4
  %97 = getelementptr inbounds %struct.MDRawModule, %struct.MDRawModule* %4, i64 0, i32 4
  store i32 %96, i32* %97, align 4
  br label %98

98:                                               ; preds = %84, %95
  %99 = phi i1 [ true, %95 ], [ false, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %86) #9
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %85) #9
  br label %100

100:                                              ; preds = %83, %98
  %101 = phi i1 [ %99, %98 ], [ false, %83 ]
  %102 = load i8*, i8** %47, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = ptrtoint i8* %102 to i64
  store i64 %105, i64* %34, align 8
  br label %106

106:                                              ; preds = %100, %104
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #9
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhN15google_breakpad16PageStdAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSD_IS7_EES9_S9_(%"class.std::__1::vector.63"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %629

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !24
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !24
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !27, !noalias !24
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !27, !noalias !24
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !24
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !24
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !27, !noalias !24
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !27, !noalias !24
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !24
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !24
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !27, !noalias !24
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !27, !noalias !24
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !24
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !24
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !27, !noalias !24
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !27, !noalias !24
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !29

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !24
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !24
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !27, !noalias !24
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !27, !noalias !24
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !30

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !31

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %629

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !32
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !32
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !35, !noalias !32
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !35, !noalias !32
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !32
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !32
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !35, !noalias !32
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !35, !noalias !32
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !32
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !32
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !35, !noalias !32
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !35, !noalias !32
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !32
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !32
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !35, !noalias !32
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !35, !noalias !32
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !37

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !32
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !32
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !35, !noalias !32
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !35, !noalias !32
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !38

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #9
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !39

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %629, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #9
  br label %629

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp slt i64 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.63"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #11
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 4611686018427387903
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %300, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 9223372036854775807, %279 ], [ %284, %281 ]
  %290 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %291 = load i64, i64* %290, align 8
  %292 = icmp ult i64 %291, %289
  br i1 %292, label %296, label %293

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %295 = load i8*, i8** %294, align 8
  br label %300

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %298 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %297, align 8
  %299 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %298, i64 %289) #9
  br label %300

300:                                              ; preds = %281, %293, %296
  %301 = phi i64 [ %285, %281 ], [ %288, %293 ], [ %288, %296 ]
  %302 = phi i64 [ 0, %281 ], [ %289, %293 ], [ %289, %296 ]
  %303 = phi i8* [ null, %281 ], [ %295, %293 ], [ %299, %296 ]
  %304 = getelementptr inbounds i8, i8* %303, i64 %301
  %305 = getelementptr inbounds i8, i8* %303, i64 %302
  %306 = getelementptr inbounds i8, i8* %304, i64 %9
  %307 = icmp ult i64 %9, 32
  br i1 %307, label %393, label %308

308:                                              ; preds = %300
  %309 = icmp ult i8* %304, %3
  %310 = icmp ugt i8* %306, %2
  %311 = and i1 %309, %310
  br i1 %311, label %393, label %312

312:                                              ; preds = %308
  %313 = and i64 %9, -32
  %314 = getelementptr i8, i8* %304, i64 %313
  %315 = getelementptr i8, i8* %2, i64 %313
  %316 = add i64 %313, -32
  %317 = lshr exact i64 %316, 5
  %318 = add nuw nsw i64 %317, 1
  %319 = and i64 %318, 3
  %320 = icmp ult i64 %316, 96
  br i1 %320, label %372, label %321

321:                                              ; preds = %312
  %322 = sub nsw i64 %318, %319
  br label %323

323:                                              ; preds = %323, %321
  %324 = phi i64 [ 0, %321 ], [ %369, %323 ]
  %325 = phi i64 [ %322, %321 ], [ %370, %323 ]
  %326 = getelementptr i8, i8* %304, i64 %324
  %327 = getelementptr i8, i8* %2, i64 %324
  %328 = bitcast i8* %327 to <16 x i8>*
  %329 = load <16 x i8>, <16 x i8>* %328, align 1, !alias.scope !40
  %330 = getelementptr i8, i8* %327, i64 16
  %331 = bitcast i8* %330 to <16 x i8>*
  %332 = load <16 x i8>, <16 x i8>* %331, align 1, !alias.scope !40
  %333 = bitcast i8* %326 to <16 x i8>*
  store <16 x i8> %329, <16 x i8>* %333, align 1, !alias.scope !43, !noalias !40
  %334 = getelementptr i8, i8* %326, i64 16
  %335 = bitcast i8* %334 to <16 x i8>*
  store <16 x i8> %332, <16 x i8>* %335, align 1, !alias.scope !43, !noalias !40
  %336 = or i64 %324, 32
  %337 = getelementptr i8, i8* %304, i64 %336
  %338 = getelementptr i8, i8* %2, i64 %336
  %339 = bitcast i8* %338 to <16 x i8>*
  %340 = load <16 x i8>, <16 x i8>* %339, align 1, !alias.scope !40
  %341 = getelementptr i8, i8* %338, i64 16
  %342 = bitcast i8* %341 to <16 x i8>*
  %343 = load <16 x i8>, <16 x i8>* %342, align 1, !alias.scope !40
  %344 = bitcast i8* %337 to <16 x i8>*
  store <16 x i8> %340, <16 x i8>* %344, align 1, !alias.scope !43, !noalias !40
  %345 = getelementptr i8, i8* %337, i64 16
  %346 = bitcast i8* %345 to <16 x i8>*
  store <16 x i8> %343, <16 x i8>* %346, align 1, !alias.scope !43, !noalias !40
  %347 = or i64 %324, 64
  %348 = getelementptr i8, i8* %304, i64 %347
  %349 = getelementptr i8, i8* %2, i64 %347
  %350 = bitcast i8* %349 to <16 x i8>*
  %351 = load <16 x i8>, <16 x i8>* %350, align 1, !alias.scope !40
  %352 = getelementptr i8, i8* %349, i64 16
  %353 = bitcast i8* %352 to <16 x i8>*
  %354 = load <16 x i8>, <16 x i8>* %353, align 1, !alias.scope !40
  %355 = bitcast i8* %348 to <16 x i8>*
  store <16 x i8> %351, <16 x i8>* %355, align 1, !alias.scope !43, !noalias !40
  %356 = getelementptr i8, i8* %348, i64 16
  %357 = bitcast i8* %356 to <16 x i8>*
  store <16 x i8> %354, <16 x i8>* %357, align 1, !alias.scope !43, !noalias !40
  %358 = or i64 %324, 96
  %359 = getelementptr i8, i8* %304, i64 %358
  %360 = getelementptr i8, i8* %2, i64 %358
  %361 = bitcast i8* %360 to <16 x i8>*
  %362 = load <16 x i8>, <16 x i8>* %361, align 1, !alias.scope !40
  %363 = getelementptr i8, i8* %360, i64 16
  %364 = bitcast i8* %363 to <16 x i8>*
  %365 = load <16 x i8>, <16 x i8>* %364, align 1, !alias.scope !40
  %366 = bitcast i8* %359 to <16 x i8>*
  store <16 x i8> %362, <16 x i8>* %366, align 1, !alias.scope !43, !noalias !40
  %367 = getelementptr i8, i8* %359, i64 16
  %368 = bitcast i8* %367 to <16 x i8>*
  store <16 x i8> %365, <16 x i8>* %368, align 1, !alias.scope !43, !noalias !40
  %369 = add i64 %324, 128
  %370 = add i64 %325, -4
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %323, !llvm.loop !45

372:                                              ; preds = %323, %312
  %373 = phi i64 [ 0, %312 ], [ %369, %323 ]
  %374 = icmp eq i64 %319, 0
  br i1 %374, label %391, label %375

375:                                              ; preds = %372, %375
  %376 = phi i64 [ %388, %375 ], [ %373, %372 ]
  %377 = phi i64 [ %389, %375 ], [ %319, %372 ]
  %378 = getelementptr i8, i8* %304, i64 %376
  %379 = getelementptr i8, i8* %2, i64 %376
  %380 = bitcast i8* %379 to <16 x i8>*
  %381 = load <16 x i8>, <16 x i8>* %380, align 1, !alias.scope !40
  %382 = getelementptr i8, i8* %379, i64 16
  %383 = bitcast i8* %382 to <16 x i8>*
  %384 = load <16 x i8>, <16 x i8>* %383, align 1, !alias.scope !40
  %385 = bitcast i8* %378 to <16 x i8>*
  store <16 x i8> %381, <16 x i8>* %385, align 1, !alias.scope !43, !noalias !40
  %386 = getelementptr i8, i8* %378, i64 16
  %387 = bitcast i8* %386 to <16 x i8>*
  store <16 x i8> %384, <16 x i8>* %387, align 1, !alias.scope !43, !noalias !40
  %388 = add i64 %376, 32
  %389 = add i64 %377, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %375, !llvm.loop !46

391:                                              ; preds = %375, %372
  %392 = icmp eq i64 %9, %313
  br i1 %392, label %403, label %393

393:                                              ; preds = %391, %308, %300
  %394 = phi i8* [ %304, %308 ], [ %304, %300 ], [ %314, %391 ]
  %395 = phi i8* [ %2, %308 ], [ %2, %300 ], [ %315, %391 ]
  br label %396

396:                                              ; preds = %393, %396
  %397 = phi i8* [ %400, %396 ], [ %394, %393 ]
  %398 = phi i8* [ %401, %396 ], [ %395, %393 ]
  %399 = load i8, i8* %398, align 1
  store i8 %399, i8* %397, align 1
  %400 = getelementptr inbounds i8, i8* %397, i64 1
  %401 = getelementptr inbounds i8, i8* %398, i64 1
  %402 = icmp eq i8* %306, %400
  br i1 %402, label %403, label %396, !llvm.loop !47

403:                                              ; preds = %396, %391
  %404 = ptrtoint i8* %305 to i64
  %405 = load i8*, i8** %7, align 8
  %406 = icmp eq i8* %405, %1
  br i1 %406, label %516, label %407

407:                                              ; preds = %403
  %408 = ptrtoint i8* %405 to i64
  %409 = ptrtoint i8* %1 to i64
  %410 = sub i64 %409, %408
  %411 = icmp ult i64 %410, 16
  br i1 %411, label %506, label %412

412:                                              ; preds = %407
  %413 = sub i64 %301, %5
  %414 = getelementptr i8, i8* %405, i64 %413
  %415 = ptrtoint i8* %414 to i64
  %416 = getelementptr i8, i8* %303, i64 %415
  %417 = icmp ult i8* %416, %1
  %418 = icmp ult i8* %405, %304
  %419 = and i1 %417, %418
  br i1 %419, label %506, label %420

420:                                              ; preds = %412
  %421 = and i64 %410, -16
  %422 = sub i64 0, %421
  %423 = getelementptr i8, i8* %304, i64 %422
  %424 = sub i64 0, %421
  %425 = getelementptr i8, i8* %1, i64 %424
  %426 = add i64 %421, -16
  %427 = lshr exact i64 %426, 4
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 3
  %430 = icmp ult i64 %426, 48
  br i1 %430, label %483, label %431

431:                                              ; preds = %420
  %432 = sub nsw i64 %428, %429
  %433 = getelementptr i8, i8* %304, i64 -1
  %434 = getelementptr inbounds i8, i8* %433, i64 -8
  %435 = getelementptr inbounds i8, i8* %1, i64 -16
  %436 = getelementptr inbounds i8, i8* %434, i64 -7
  %437 = getelementptr i8, i8* %304, i64 -1
  %438 = getelementptr inbounds i8, i8* %437, i64 -8
  %439 = getelementptr inbounds i8, i8* %1, i64 -16
  %440 = getelementptr inbounds i8, i8* %438, i64 -7
  %441 = getelementptr i8, i8* %304, i64 -1
  %442 = getelementptr inbounds i8, i8* %441, i64 -8
  %443 = getelementptr inbounds i8, i8* %1, i64 -16
  %444 = getelementptr inbounds i8, i8* %442, i64 -7
  %445 = getelementptr i8, i8* %304, i64 -1
  %446 = getelementptr inbounds i8, i8* %445, i64 -8
  %447 = getelementptr inbounds i8, i8* %1, i64 -16
  %448 = getelementptr inbounds i8, i8* %446, i64 -7
  br label %449

449:                                              ; preds = %449, %431
  %450 = phi i64 [ 0, %431 ], [ %480, %449 ]
  %451 = phi i64 [ %432, %431 ], [ %481, %449 ]
  %452 = sub i64 0, %450
  %453 = sub i64 0, %450
  %454 = getelementptr inbounds i8, i8* %435, i64 %453
  %455 = bitcast i8* %454 to <2 x i64>*
  %456 = load <2 x i64>, <2 x i64>* %455, align 1, !alias.scope !48
  %457 = getelementptr inbounds i8, i8* %436, i64 %452
  %458 = bitcast i8* %457 to <2 x i64>*
  store <2 x i64> %456, <2 x i64>* %458, align 1, !alias.scope !51, !noalias !48
  %459 = sub nuw nsw i64 -16, %450
  %460 = sub nuw nsw i64 -16, %450
  %461 = getelementptr inbounds i8, i8* %439, i64 %460
  %462 = bitcast i8* %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 1, !alias.scope !48
  %464 = getelementptr inbounds i8, i8* %440, i64 %459
  %465 = bitcast i8* %464 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %465, align 1, !alias.scope !51, !noalias !48
  %466 = sub nuw nsw i64 -32, %450
  %467 = sub nuw nsw i64 -32, %450
  %468 = getelementptr inbounds i8, i8* %443, i64 %467
  %469 = bitcast i8* %468 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 1, !alias.scope !48
  %471 = getelementptr inbounds i8, i8* %444, i64 %466
  %472 = bitcast i8* %471 to <2 x i64>*
  store <2 x i64> %470, <2 x i64>* %472, align 1, !alias.scope !51, !noalias !48
  %473 = sub nuw nsw i64 -48, %450
  %474 = sub nuw nsw i64 -48, %450
  %475 = getelementptr inbounds i8, i8* %447, i64 %474
  %476 = bitcast i8* %475 to <2 x i64>*
  %477 = load <2 x i64>, <2 x i64>* %476, align 1, !alias.scope !48
  %478 = getelementptr inbounds i8, i8* %448, i64 %473
  %479 = bitcast i8* %478 to <2 x i64>*
  store <2 x i64> %477, <2 x i64>* %479, align 1, !alias.scope !51, !noalias !48
  %480 = add i64 %450, 64
  %481 = add i64 %451, -4
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %483, label %449, !llvm.loop !53

483:                                              ; preds = %449, %420
  %484 = phi i64 [ 0, %420 ], [ %480, %449 ]
  %485 = icmp eq i64 %429, 0
  br i1 %485, label %504, label %486

486:                                              ; preds = %483
  %487 = getelementptr i8, i8* %304, i64 -1
  %488 = getelementptr inbounds i8, i8* %487, i64 -8
  %489 = getelementptr inbounds i8, i8* %1, i64 -16
  %490 = getelementptr inbounds i8, i8* %488, i64 -7
  br label %491

491:                                              ; preds = %491, %486
  %492 = phi i64 [ %484, %486 ], [ %501, %491 ]
  %493 = phi i64 [ %429, %486 ], [ %502, %491 ]
  %494 = sub i64 0, %492
  %495 = sub i64 0, %492
  %496 = getelementptr inbounds i8, i8* %489, i64 %495
  %497 = bitcast i8* %496 to <2 x i64>*
  %498 = load <2 x i64>, <2 x i64>* %497, align 1, !alias.scope !48
  %499 = getelementptr inbounds i8, i8* %490, i64 %494
  %500 = bitcast i8* %499 to <2 x i64>*
  store <2 x i64> %498, <2 x i64>* %500, align 1, !alias.scope !51, !noalias !48
  %501 = add i64 %492, 16
  %502 = add i64 %493, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %491, !llvm.loop !54

504:                                              ; preds = %491, %483
  %505 = icmp eq i64 %410, %421
  br i1 %505, label %516, label %506

506:                                              ; preds = %504, %412, %407
  %507 = phi i8* [ %304, %412 ], [ %304, %407 ], [ %423, %504 ]
  %508 = phi i8* [ %1, %412 ], [ %1, %407 ], [ %425, %504 ]
  br label %509

509:                                              ; preds = %506, %509
  %510 = phi i8* [ %512, %509 ], [ %507, %506 ]
  %511 = phi i8* [ %513, %509 ], [ %508, %506 ]
  %512 = getelementptr inbounds i8, i8* %510, i64 -1
  %513 = getelementptr inbounds i8, i8* %511, i64 -1
  %514 = load i8, i8* %513, align 1
  store i8 %514, i8* %512, align 1
  %515 = icmp eq i8* %513, %405
  br i1 %515, label %516, label %509, !llvm.loop !55

516:                                              ; preds = %509, %504, %403
  %517 = phi i8* [ %304, %403 ], [ %423, %504 ], [ %512, %509 ]
  %518 = load i8*, i8** %15, align 8
  %519 = icmp eq i8* %518, %1
  br i1 %519, label %625, label %520

520:                                              ; preds = %516
  %521 = ptrtoint i8* %518 to i64
  %522 = sub i64 %521, %5
  %523 = icmp ult i64 %522, 32
  br i1 %523, label %615, label %524

524:                                              ; preds = %520
  %525 = add i64 %301, %8
  %526 = sub i64 %525, %5
  %527 = sub i64 %526, %6
  %528 = getelementptr i8, i8* %518, i64 %527
  %529 = ptrtoint i8* %528 to i64
  %530 = getelementptr i8, i8* %303, i64 %529
  %531 = icmp ult i8* %306, %518
  %532 = icmp ugt i8* %530, %1
  %533 = and i1 %531, %532
  br i1 %533, label %615, label %534

534:                                              ; preds = %524
  %535 = and i64 %522, -32
  %536 = getelementptr i8, i8* %306, i64 %535
  %537 = getelementptr i8, i8* %1, i64 %535
  %538 = add i64 %535, -32
  %539 = lshr exact i64 %538, 5
  %540 = add nuw nsw i64 %539, 1
  %541 = and i64 %540, 3
  %542 = icmp ult i64 %538, 96
  br i1 %542, label %594, label %543

543:                                              ; preds = %534
  %544 = sub nsw i64 %540, %541
  br label %545

545:                                              ; preds = %545, %543
  %546 = phi i64 [ 0, %543 ], [ %591, %545 ]
  %547 = phi i64 [ %544, %543 ], [ %592, %545 ]
  %548 = getelementptr i8, i8* %306, i64 %546
  %549 = getelementptr i8, i8* %1, i64 %546
  %550 = bitcast i8* %549 to <16 x i8>*
  %551 = load <16 x i8>, <16 x i8>* %550, align 1, !alias.scope !56
  %552 = getelementptr i8, i8* %549, i64 16
  %553 = bitcast i8* %552 to <16 x i8>*
  %554 = load <16 x i8>, <16 x i8>* %553, align 1, !alias.scope !56
  %555 = bitcast i8* %548 to <16 x i8>*
  store <16 x i8> %551, <16 x i8>* %555, align 1, !alias.scope !59, !noalias !56
  %556 = getelementptr i8, i8* %548, i64 16
  %557 = bitcast i8* %556 to <16 x i8>*
  store <16 x i8> %554, <16 x i8>* %557, align 1, !alias.scope !59, !noalias !56
  %558 = or i64 %546, 32
  %559 = getelementptr i8, i8* %306, i64 %558
  %560 = getelementptr i8, i8* %1, i64 %558
  %561 = bitcast i8* %560 to <16 x i8>*
  %562 = load <16 x i8>, <16 x i8>* %561, align 1, !alias.scope !56
  %563 = getelementptr i8, i8* %560, i64 16
  %564 = bitcast i8* %563 to <16 x i8>*
  %565 = load <16 x i8>, <16 x i8>* %564, align 1, !alias.scope !56
  %566 = bitcast i8* %559 to <16 x i8>*
  store <16 x i8> %562, <16 x i8>* %566, align 1, !alias.scope !59, !noalias !56
  %567 = getelementptr i8, i8* %559, i64 16
  %568 = bitcast i8* %567 to <16 x i8>*
  store <16 x i8> %565, <16 x i8>* %568, align 1, !alias.scope !59, !noalias !56
  %569 = or i64 %546, 64
  %570 = getelementptr i8, i8* %306, i64 %569
  %571 = getelementptr i8, i8* %1, i64 %569
  %572 = bitcast i8* %571 to <16 x i8>*
  %573 = load <16 x i8>, <16 x i8>* %572, align 1, !alias.scope !56
  %574 = getelementptr i8, i8* %571, i64 16
  %575 = bitcast i8* %574 to <16 x i8>*
  %576 = load <16 x i8>, <16 x i8>* %575, align 1, !alias.scope !56
  %577 = bitcast i8* %570 to <16 x i8>*
  store <16 x i8> %573, <16 x i8>* %577, align 1, !alias.scope !59, !noalias !56
  %578 = getelementptr i8, i8* %570, i64 16
  %579 = bitcast i8* %578 to <16 x i8>*
  store <16 x i8> %576, <16 x i8>* %579, align 1, !alias.scope !59, !noalias !56
  %580 = or i64 %546, 96
  %581 = getelementptr i8, i8* %306, i64 %580
  %582 = getelementptr i8, i8* %1, i64 %580
  %583 = bitcast i8* %582 to <16 x i8>*
  %584 = load <16 x i8>, <16 x i8>* %583, align 1, !alias.scope !56
  %585 = getelementptr i8, i8* %582, i64 16
  %586 = bitcast i8* %585 to <16 x i8>*
  %587 = load <16 x i8>, <16 x i8>* %586, align 1, !alias.scope !56
  %588 = bitcast i8* %581 to <16 x i8>*
  store <16 x i8> %584, <16 x i8>* %588, align 1, !alias.scope !59, !noalias !56
  %589 = getelementptr i8, i8* %581, i64 16
  %590 = bitcast i8* %589 to <16 x i8>*
  store <16 x i8> %587, <16 x i8>* %590, align 1, !alias.scope !59, !noalias !56
  %591 = add i64 %546, 128
  %592 = add i64 %547, -4
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %594, label %545, !llvm.loop !61

594:                                              ; preds = %545, %534
  %595 = phi i64 [ 0, %534 ], [ %591, %545 ]
  %596 = icmp eq i64 %541, 0
  br i1 %596, label %613, label %597

597:                                              ; preds = %594, %597
  %598 = phi i64 [ %610, %597 ], [ %595, %594 ]
  %599 = phi i64 [ %611, %597 ], [ %541, %594 ]
  %600 = getelementptr i8, i8* %306, i64 %598
  %601 = getelementptr i8, i8* %1, i64 %598
  %602 = bitcast i8* %601 to <16 x i8>*
  %603 = load <16 x i8>, <16 x i8>* %602, align 1, !alias.scope !56
  %604 = getelementptr i8, i8* %601, i64 16
  %605 = bitcast i8* %604 to <16 x i8>*
  %606 = load <16 x i8>, <16 x i8>* %605, align 1, !alias.scope !56
  %607 = bitcast i8* %600 to <16 x i8>*
  store <16 x i8> %603, <16 x i8>* %607, align 1, !alias.scope !59, !noalias !56
  %608 = getelementptr i8, i8* %600, i64 16
  %609 = bitcast i8* %608 to <16 x i8>*
  store <16 x i8> %606, <16 x i8>* %609, align 1, !alias.scope !59, !noalias !56
  %610 = add i64 %598, 32
  %611 = add i64 %599, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %597, !llvm.loop !62

613:                                              ; preds = %597, %594
  %614 = icmp eq i64 %522, %535
  br i1 %614, label %625, label %615

615:                                              ; preds = %613, %524, %520
  %616 = phi i8* [ %306, %524 ], [ %306, %520 ], [ %536, %613 ]
  %617 = phi i8* [ %1, %524 ], [ %1, %520 ], [ %537, %613 ]
  br label %618

618:                                              ; preds = %615, %618
  %619 = phi i8* [ %623, %618 ], [ %616, %615 ]
  %620 = phi i8* [ %622, %618 ], [ %617, %615 ]
  %621 = load i8, i8* %620, align 1
  store i8 %621, i8* %619, align 1
  %622 = getelementptr inbounds i8, i8* %620, i64 1
  %623 = getelementptr inbounds i8, i8* %619, i64 1
  %624 = icmp eq i8* %622, %518
  br i1 %624, label %625, label %618, !llvm.loop !63

625:                                              ; preds = %618, %613, %516
  %626 = phi i8* [ %306, %516 ], [ %536, %613 ], [ %623, %618 ]
  %627 = ptrtoint i8* %517 to i64
  %628 = ptrtoint i8* %626 to i64
  store i64 %627, i64* %269, align 8
  store i64 %628, i64* %20, align 8
  store i64 %404, i64* %13, align 8
  br label %629

629:                                              ; preds = %625, %136, %263, %267, %4
  %630 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %304, %625 ]
  ret i8* %630
}

declare zeroext i1 @_ZN15google_breakpad11LinuxDumper27ElfFileIdentifierForMappingERKNS_11MappingInfoEbjRNS_15wasteful_vectorIhEE(%"class.google_breakpad::LinuxDumper"*, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i1 zeroext, i32, %"class.google_breakpad::wasteful_vector.62"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN15google_breakpad11LinuxDumper30GetMappingEffectiveNameAndPathERKNS_11MappingInfoEPcmS4_m(%"class.google_breakpad::LinuxDumper"*, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i8*, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter11WriteStringEPKcjP20MDLocationDescriptor(%"class.google_breakpad::MinidumpFileWriter"*, i8*, i32, %struct.MDLocationDescriptor*) local_unnamed_addr #2

declare i64 @my_strlen(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN15google_breakpad17ProcCpuInfoReader12GetNextFieldEPPKc(%"class.google_breakpad::ProcCpuInfoReader"*, i8**) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 3, i64 0
  %6 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 3
  br label %10

10:                                               ; preds = %80, %2
  %11 = load i32, i32* %3, align 4
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %21

13:                                               ; preds = %10
  %14 = load i32, i32* %4, align 4
  %15 = xor i32 %11, -1
  %16 = add i32 %14, %15
  store i32 %16, i32* %4, align 4
  %17 = zext i32 %11 to i64
  %18 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 3, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 1
  %20 = zext i32 %16 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %5, i8* align 1 %19, i64 %20, i1 false) #9
  store i32 -1, i32* %3, align 4
  br label %21

21:                                               ; preds = %13, %10
  br label %22

22:                                               ; preds = %73, %21
  %23 = load i32, i32* %4, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i8, i8* %6, align 4, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %51, label %108

28:                                               ; preds = %22
  %29 = zext i32 %23 to i64
  br label %30

30:                                               ; preds = %34, %28
  %31 = phi i64 [ 0, %28 ], [ %35, %34 ]
  %32 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 3, i64 %31
  %33 = load i8, i8* %32, align 1
  switch i8 %33, label %34 [
    i8 10, label %37
    i8 0, label %37
  ]

34:                                               ; preds = %30
  %35 = add nuw nsw i64 %31, 1
  %36 = icmp eq i64 %35, %29
  br i1 %36, label %42, label %30

37:                                               ; preds = %30, %30
  %38 = trunc i64 %31 to i32
  %39 = and i64 %31, 4294967295
  %40 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 3, i64 %39
  store i8 0, i8* %40, align 1
  %41 = and i64 %31, 4294967295
  br label %74

42:                                               ; preds = %34
  %43 = icmp eq i32 %23, 512
  br i1 %43, label %108, label %44

44:                                               ; preds = %42
  %45 = load i8, i8* %6, align 4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = zext i32 %23 to i64
  %49 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 3, i64 %48
  store i8 0, i8* %49, align 1
  %50 = add i32 %23, 1
  store i32 %50, i32* %4, align 4
  br label %74

51:                                               ; preds = %44, %25
  %52 = phi i64 [ %29, %44 ], [ 0, %25 ]
  %53 = load i32, i32* %7, align 4
  %54 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 3, i64 %52
  %55 = sub nsw i64 512, %52
  %56 = sext i32 %53 to i64
  %57 = ptrtoint i8* %54 to i64
  %58 = tail call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 0, i64 %56, i64 %57, i64 %55) #9, !srcloc !22
  %59 = icmp ugt i64 %58, -4096
  br i1 %59, label %60, label %64

60:                                               ; preds = %51
  %61 = trunc i64 %58 to i32
  %62 = sub nsw i32 0, %61
  %63 = tail call i32* @__errno_location() #12
  store i32 %62, i32* %63, align 4
  br label %108

64:                                               ; preds = %51
  %65 = icmp slt i64 %58, 0
  br i1 %65, label %108, label %66

66:                                               ; preds = %64
  %67 = icmp eq i64 %58, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  store i8 1, i8* %6, align 4
  br label %73

69:                                               ; preds = %66
  %70 = load i32, i32* %4, align 4
  %71 = trunc i64 %58 to i32
  %72 = add i32 %70, %71
  store i32 %72, i32* %4, align 4
  br label %73

73:                                               ; preds = %69, %68
  br label %22

74:                                               ; preds = %47, %37
  %75 = phi i64 [ %48, %47 ], [ %41, %37 ]
  %76 = phi i32 [ %23, %47 ], [ %38, %37 ]
  store i32 %76, i32* %3, align 4
  %77 = getelementptr inbounds %"class.google_breakpad::ProcCpuInfoReader", %"class.google_breakpad::ProcCpuInfoReader"* %0, i64 0, i32 0, i32 3, i64 %75
  %78 = tail call i8* @my_memchr(i8* %5, i32 58, i64 %75) #9
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %74, %103
  br label %10

81:                                               ; preds = %74, %85
  %82 = phi i8* [ %83, %85 ], [ %78, %74 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 1
  %84 = icmp ult i8* %83, %77
  br i1 %84, label %85, label %90

85:                                               ; preds = %81
  %86 = load i8, i8* %83, align 1
  %87 = sext i8 %86 to i32
  %88 = tail call i32 @my_isspace(i32 %87) #9
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %81

90:                                               ; preds = %85, %81
  store i8* %83, i8** %8, align 8
  %91 = ptrtoint i8* %77 to i64
  %92 = ptrtoint i8* %83 to i64
  %93 = sub i64 %91, %92
  store i64 %93, i64* %9, align 8
  br label %94

94:                                               ; preds = %97, %90
  %95 = phi i8* [ %78, %90 ], [ %98, %97 ]
  %96 = icmp ugt i8* %95, %5
  br i1 %96, label %97, label %103

97:                                               ; preds = %94
  %98 = getelementptr inbounds i8, i8* %95, i64 -1
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i32
  %101 = tail call i32 @my_isspace(i32 %100) #9
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %94

103:                                              ; preds = %97, %94
  %104 = icmp eq i8* %95, %5
  br i1 %104, label %80, label %105

105:                                              ; preds = %103
  %106 = ptrtoint i8* %5 to i64
  store i8 0, i8* %95, align 1
  %107 = bitcast i8** %1 to i64*
  store i64 %106, i64* %107, align 8
  br label %108

108:                                              ; preds = %64, %42, %25, %60, %105
  %109 = phi i1 [ true, %105 ], [ false, %60 ], [ false, %25 ], [ false, %42 ], [ false, %64 ]
  ret i1 %109
}

declare i32 @my_strcmp(i8*, i8*) local_unnamed_addr #2

declare i8* @my_read_decimal_ptr(i64*, i8*) local_unnamed_addr #2

declare i64 @my_strlcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32 @getpagesize() local_unnamed_addr #5

declare i8* @my_memchr(i8*, i32, i64) local_unnamed_addr #2

declare i32 @my_isspace(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @uname(%struct.utsname* nocapture) local_unnamed_addr #8

declare i64 @my_strlcat(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIcN15google_breakpad16PageStdAllocatorIcEEE8__appendEm(%"class.std::__1::vector.89"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %182

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.89"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.89"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %41, %39
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  br label %50

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %48 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %47, align 8
  %49 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %48, i64 %39) #9
  br label %50

50:                                               ; preds = %46, %43, %33
  %51 = phi i64 [ 0, %33 ], [ %39, %43 ], [ %39, %46 ]
  %52 = phi i8* [ null, %33 ], [ %45, %43 ], [ %49, %46 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %25
  %54 = ptrtoint i8* %53 to i64
  %55 = getelementptr inbounds i8, i8* %52, i64 %51
  %56 = getelementptr inbounds i8, i8* %53, i64 %1
  %57 = sub i64 %1, %54
  %58 = getelementptr i8, i8* %53, i64 %57
  %59 = ptrtoint i8* %58 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 0, i64 %59, i1 false) #9
  %60 = ptrtoint i8* %55 to i64
  %61 = ptrtoint i8* %56 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %0, i64 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = load i8*, i8** %6, align 8
  %65 = ptrtoint i8* %64 to i64
  %66 = icmp eq i8* %64, %63
  br i1 %66, label %180, label %67

67:                                               ; preds = %50
  %68 = ptrtoint i8* %63 to i64
  %69 = ptrtoint i8* %64 to i64
  %70 = sub i64 %69, %68
  %71 = icmp ult i64 %70, 16
  br i1 %71, label %167, label %72

72:                                               ; preds = %67
  %73 = sub i64 %8, %65
  %74 = sub i64 %73, %24
  %75 = getelementptr i8, i8* %63, i64 %74
  %76 = ptrtoint i8* %75 to i64
  %77 = getelementptr i8, i8* %52, i64 %76
  %78 = icmp ult i8* %77, %64
  %79 = icmp ult i8* %63, %53
  %80 = and i1 %78, %79
  br i1 %80, label %167, label %81

81:                                               ; preds = %72
  %82 = and i64 %70, -16
  %83 = sub i64 0, %82
  %84 = getelementptr i8, i8* %53, i64 %83
  %85 = sub i64 0, %82
  %86 = getelementptr i8, i8* %64, i64 %85
  %87 = add i64 %82, -16
  %88 = lshr exact i64 %87, 4
  %89 = add nuw nsw i64 %88, 1
  %90 = and i64 %89, 3
  %91 = icmp ult i64 %87, 48
  br i1 %91, label %144, label %92

92:                                               ; preds = %81
  %93 = sub nsw i64 %89, %90
  %94 = getelementptr i8, i8* %53, i64 -1
  %95 = getelementptr inbounds i8, i8* %94, i64 -8
  %96 = getelementptr inbounds i8, i8* %64, i64 -16
  %97 = getelementptr inbounds i8, i8* %95, i64 -7
  %98 = getelementptr i8, i8* %53, i64 -1
  %99 = getelementptr inbounds i8, i8* %98, i64 -8
  %100 = getelementptr inbounds i8, i8* %64, i64 -16
  %101 = getelementptr inbounds i8, i8* %99, i64 -7
  %102 = getelementptr i8, i8* %53, i64 -1
  %103 = getelementptr inbounds i8, i8* %102, i64 -8
  %104 = getelementptr inbounds i8, i8* %64, i64 -16
  %105 = getelementptr inbounds i8, i8* %103, i64 -7
  %106 = getelementptr i8, i8* %53, i64 -1
  %107 = getelementptr inbounds i8, i8* %106, i64 -8
  %108 = getelementptr inbounds i8, i8* %64, i64 -16
  %109 = getelementptr inbounds i8, i8* %107, i64 -7
  br label %110

110:                                              ; preds = %110, %92
  %111 = phi i64 [ 0, %92 ], [ %141, %110 ]
  %112 = phi i64 [ %93, %92 ], [ %142, %110 ]
  %113 = sub i64 0, %111
  %114 = sub i64 0, %111
  %115 = getelementptr inbounds i8, i8* %96, i64 %114
  %116 = bitcast i8* %115 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 1, !alias.scope !64
  %118 = getelementptr inbounds i8, i8* %97, i64 %113
  %119 = bitcast i8* %118 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %119, align 1, !alias.scope !67, !noalias !64
  %120 = sub nuw nsw i64 -16, %111
  %121 = sub nuw nsw i64 -16, %111
  %122 = getelementptr inbounds i8, i8* %100, i64 %121
  %123 = bitcast i8* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 1, !alias.scope !64
  %125 = getelementptr inbounds i8, i8* %101, i64 %120
  %126 = bitcast i8* %125 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %126, align 1, !alias.scope !67, !noalias !64
  %127 = sub nuw nsw i64 -32, %111
  %128 = sub nuw nsw i64 -32, %111
  %129 = getelementptr inbounds i8, i8* %104, i64 %128
  %130 = bitcast i8* %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 1, !alias.scope !64
  %132 = getelementptr inbounds i8, i8* %105, i64 %127
  %133 = bitcast i8* %132 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %133, align 1, !alias.scope !67, !noalias !64
  %134 = sub nuw nsw i64 -48, %111
  %135 = sub nuw nsw i64 -48, %111
  %136 = getelementptr inbounds i8, i8* %108, i64 %135
  %137 = bitcast i8* %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 1, !alias.scope !64
  %139 = getelementptr inbounds i8, i8* %109, i64 %134
  %140 = bitcast i8* %139 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %140, align 1, !alias.scope !67, !noalias !64
  %141 = add i64 %111, 64
  %142 = add i64 %112, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %110, !llvm.loop !69

144:                                              ; preds = %110, %81
  %145 = phi i64 [ 0, %81 ], [ %141, %110 ]
  %146 = icmp eq i64 %90, 0
  br i1 %146, label %165, label %147

147:                                              ; preds = %144
  %148 = getelementptr i8, i8* %53, i64 -1
  %149 = getelementptr inbounds i8, i8* %148, i64 -8
  %150 = getelementptr inbounds i8, i8* %64, i64 -16
  %151 = getelementptr inbounds i8, i8* %149, i64 -7
  br label %152

152:                                              ; preds = %152, %147
  %153 = phi i64 [ %145, %147 ], [ %162, %152 ]
  %154 = phi i64 [ %90, %147 ], [ %163, %152 ]
  %155 = sub i64 0, %153
  %156 = sub i64 0, %153
  %157 = getelementptr inbounds i8, i8* %150, i64 %156
  %158 = bitcast i8* %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 1, !alias.scope !64
  %160 = getelementptr inbounds i8, i8* %151, i64 %155
  %161 = bitcast i8* %160 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %161, align 1, !alias.scope !67, !noalias !64
  %162 = add i64 %153, 16
  %163 = add i64 %154, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %152, !llvm.loop !70

165:                                              ; preds = %152, %144
  %166 = icmp eq i64 %70, %82
  br i1 %166, label %177, label %167

167:                                              ; preds = %165, %72, %67
  %168 = phi i8* [ %53, %72 ], [ %53, %67 ], [ %84, %165 ]
  %169 = phi i8* [ %64, %72 ], [ %64, %67 ], [ %86, %165 ]
  br label %170

170:                                              ; preds = %167, %170
  %171 = phi i8* [ %173, %170 ], [ %168, %167 ]
  %172 = phi i8* [ %174, %170 ], [ %169, %167 ]
  %173 = getelementptr inbounds i8, i8* %171, i64 -1
  %174 = getelementptr inbounds i8, i8* %172, i64 -1
  %175 = load i8, i8* %174, align 1
  store i8 %175, i8* %173, align 1
  %176 = icmp eq i8* %174, %63
  br i1 %176, label %177, label %170, !llvm.loop !71

177:                                              ; preds = %170, %165
  %178 = phi i8* [ %84, %165 ], [ %173, %170 ]
  %179 = ptrtoint i8* %178 to i64
  br label %180

180:                                              ; preds = %177, %50
  %181 = phi i64 [ %54, %50 ], [ %179, %177 ]
  store i64 %181, i64* %23, align 8
  store i64 %61, i64* %7, align 8
  store i64 %60, i64* %4, align 8
  br label %182

182:                                              ; preds = %180, %20
  ret void
}

declare zeroext i1 @_ZN15google_breakpad18MinidumpFileWriter5CloseEv(%"class.google_breakpad::MinidumpFileWriter"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15google_breakpad18MinidumpFileWriterD1Ev(%"class.google_breakpad::MinidumpFileWriter"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = !{i32 -2143152067}
!9 = !{i32 -2143034669}
!10 = !{i32 -2143239502}
!11 = !{i32 -2143162619}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !3}
!22 = !{i32 -2143132519}
!23 = distinct !{!23, !3}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !18}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !18}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !18}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !18}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !18}
!46 = distinct !{!46, !3}
!47 = distinct !{!47, !18}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !18}
!54 = distinct !{!54, !3}
!55 = distinct !{!55, !18}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !18}
!62 = distinct !{!62, !3}
!63 = distinct !{!63, !18}
!64 = !{!65}
!65 = distinct !{!65, !66}
!66 = distinct !{!66, !"LVerDomain"}
!67 = !{!68}
!68 = distinct !{!68, !66}
!69 = distinct !{!69, !18}
!70 = distinct !{!70, !3}
!71 = distinct !{!71, !18}
