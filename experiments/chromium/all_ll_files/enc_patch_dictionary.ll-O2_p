; ModuleID = '../../third_party/libjxl/src/lib/jxl/enc_patch_dictionary.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/enc_patch_dictionary.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.jxl::YCbCrChromaSubsampling" = type <{ %"class.jxl::Fields", [3 x i32], i8, i8, [2 x i8] }>
%"class.jxl::Fields" = type { i32 (...)** }
%"class.jxl::Plane.97" = type { %"struct.jxl::PlaneBase" }
%"struct.jxl::PlaneBase" = type { i32, i32, i32, i32, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i8* }
%"struct.jxl::ButteraugliParams" = type <{ float, float, float, i8, [3 x i8] }>
%"struct.jxl::ModularOptions" = type <{ i64, float, i32, %"class.std::__1::vector.30", float, [4 x i8], i64, i32, i32, float, i32, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"struct.std::__1::pair.254" = type { float, float }
%"struct.jxl::CodecMetadata" = type { %"struct.jxl::ImageMetadata", %"class.jxl::SizeHeader", %"struct.jxl::CustomTransformData" }
%"struct.jxl::ImageMetadata" = type <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], %"struct.jxl::ColorEncoding", i32, i8, i8, i8, i8, %"class.jxl::SizeHeader", %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.18", %"struct.jxl::CustomTransformData", %"class.jxl::PreviewHeader", %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>
%"struct.jxl::BitDepth" = type <{ %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.jxl::ColorEncoding" = type { %"class.jxl::Fields", i8, i32, i32, %"struct.jxl::CustomTransferFunction", i32, i8, i8, %"class.jxl::PaddedBytes", i32, %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }
%"struct.jxl::CustomTransferFunction" = type { %"class.jxl::Fields", i32, i8, i32, i32 }
%"class.jxl::PaddedBytes" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"struct.jxl::Customxy" = type { %"class.jxl::Fields", i32, i32 }
%"struct.jxl::ToneMapping" = type <{ %"class.jxl::Fields", i8, [3 x i8], float, float, i8, [3 x i8], float, [4 x i8] }>
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"*, %"class.std::__1::__compressed_pair.25" }
%"struct.jxl::ExtraChannelInfo" = type { %"class.jxl::Fields", i8, i32, %"struct.jxl::BitDepth", i32, %"class.std::__1::basic_string", i8, [4 x float], i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.jxl::ExtraChannelInfo"* }
%"class.jxl::PreviewHeader" = type { %"class.jxl::Fields", i8, i32, i32, i32, i32, i32 }
%"struct.jxl::AnimationHeader" = type <{ %"class.jxl::Fields", i32, i32, i32, i8, [3 x i8] }>
%"class.jxl::SizeHeader" = type { %"class.jxl::Fields", i8, i32, i32, i32, i32, i32 }
%"struct.jxl::CustomTransformData" = type <{ %"class.jxl::Fields", i8, i8, [6 x i8], %"struct.jxl::OpsinInverseMatrix", i32, [15 x float], [55 x float], [210 x float], [4 x i8] }>
%"struct.jxl::OpsinInverseMatrix" = type <{ %"class.jxl::Fields", i8, [3 x i8], [9 x float], [3 x float], [4 x float], [4 x i8] }>
%"struct.jxl::Passes" = type <{ %"class.jxl::Fields", i32, i32, [11 x i32], [11 x i32], [11 x i32], [4 x i8] }>
%"struct.jxl::FrameSize" = type { i32, i32 }
%"struct.jxl::FrameOrigin" = type { i32, i32 }
%"struct.jxl::BlendingInfo" = type <{ %"class.jxl::Fields", i32, i32, i8, [3 x i8], i32, i64, i8, [7 x i8] }>
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.jxl::BlendingInfo"*, %"struct.jxl::BlendingInfo"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.jxl::BlendingInfo"* }
%"struct.jxl::AnimationFrame" = type { %"class.jxl::Fields", i32, i32, %"struct.jxl::CodecMetadata"* }
%"struct.jxl::LoopFilter" = type <{ %"class.jxl::Fields", i8, i8, i8, i8, float, float, float, float, float, float, i32, i8, [3 x i8], [8 x float], i8, [3 x i8], [3 x float], float, float, i8, [3 x i8], float, float, float, float, float, [4 x i8], i64, i8, [7 x i8] }>
%"struct.jxl::FrameDimensions" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.jxl::AcStrategyImage" = type { %"class.jxl::Plane", i8*, i64 }
%"class.jxl::DequantMatrices" = type { %"class.std::__1::unique_ptr.44", float*, float*, [3 x float], [3 x float], [81 x i64], %"class.std::__1::vector.48" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float* }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.hwy::AlignedFreer" }
%"class.hwy::AlignedFreer" = type { void (i8*, i8*)*, i8* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"*, %"class.std::__1::__compressed_pair.69" }
%"class.jxl::QuantEncoding" = type { %"struct.jxl::QuantEncodingInternal.base", [7 x i8] }
%"struct.jxl::QuantEncodingInternal.base" = type <{ i32, [4 x i8], %"struct.jxl::DctQuantWeightParams", %union.anon.51, %"struct.jxl::DctQuantWeightParams", %union.anon.68 }>
%union.anon.51 = type { %"struct.std::__1::array.58", [4 x i8] }
%"struct.std::__1::array.58" = type { [3 x %"struct.std::__1::array.59"] }
%"struct.std::__1::array.59" = type { [9 x float] }
%"struct.jxl::DctQuantWeightParams" = type <{ i64, %"struct.std::__1::array", [4 x i8] }>
%"struct.std::__1::array" = type { [3 x %"struct.std::__1::array.50"] }
%"struct.std::__1::array.50" = type { [17 x float] }
%union.anon.68 = type { i8 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.jxl::QuantEncoding"* }
%"class.jxl::Quantizer" = type { [4 x float], [4 x float], i32, i32, float, float, float, [3 x float], %"class.jxl::DequantMatrices"* }
%"class.jxl::Plane.74" = type { %"struct.jxl::PlaneBase" }
%"struct.jxl::ColorCorrelationMap" = type { %"class.jxl::Plane.75", %"class.jxl::Plane.75", [4 x float], i32, float, float, float, i32, i32 }
%"class.jxl::Plane.75" = type { %"struct.jxl::PlaneBase" }
%"struct.jxl::NoiseParams" = type { [8 x float] }
%"class.jxl::PatchDictionary" = type { %"struct.jxl::PassesSharedState"*, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.8" }
%"struct.jxl::PassesSharedState" = type { %"struct.jxl::CodecMetadata"*, %"struct.jxl::FrameHeader", %"struct.jxl::FrameDimensions", %"class.jxl::AcStrategyImage", %"class.jxl::DequantMatrices", %"class.jxl::Quantizer", %"class.jxl::Plane.74", %"class.jxl::Plane", %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ImageFeatures", i64, %"class.std::__1::vector.30", %"class.jxl::Plane", %"class.jxl::Image3", %"class.jxl::Image3"*, %"struct.jxl::BlockCtxMap", [4 x %"class.jxl::Image3"], [4 x %struct.anon.104], i64 }
%"struct.jxl::FrameHeader" = type { %"class.jxl::Fields", i8, i32, i32, i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, i32, i8, i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, i64 }
%"struct.jxl::ImageFeatures" = type { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", %"class.jxl::Splines" }
%"class.jxl::Splines" = type { i32, %"class.std::__1::vector.76", %"class.std::__1::vector.90" }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.jxl::QuantizedSpline"*, %"class.jxl::QuantizedSpline"*, %"class.std::__1::__compressed_pair.85" }
%"class.jxl::QuantizedSpline" = type { %"class.std::__1::vector.78", [3 x [32 x i32]], [32 x i32] }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.80" }
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.jxl::QuantizedSpline"* }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.jxl::Spline::Point"*, %"struct.jxl::Spline::Point"*, %"class.std::__1::__compressed_pair.92" }
%"struct.jxl::Spline::Point" = type { float, float }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.jxl::Spline::Point"* }
%struct.anon.104 = type <{ %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"*, i8, [7 x i8] }>
%"class.jxl::ImageBundle" = type { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", %"struct.jxl::ColorEncoding", %"class.std::__1::vector.169", i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.jxl::jpeg::JPEGData"* }
%"struct.jxl::jpeg::JPEGData" = type { %"class.jxl::Fields", i32, i32, i32, %"class.std::__1::vector.108", %"class.std::__1::vector.115", %"class.std::__1::vector.108", %"class.std::__1::vector.122", %"class.std::__1::vector.130", %"class.std::__1::vector.139", %"class.std::__1::vector.153", %"class.std::__1::vector.98", %"class.std::__1::vector.108", %"class.std::__1::vector.98", i32, i8, %"class.std::__1::vector.98" }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { i32*, i32*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i32* }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.jxl::jpeg::JPEGQuantTable"*, %"struct.jxl::jpeg::JPEGQuantTable"*, %"class.std::__1::__compressed_pair.125" }
%"struct.jxl::jpeg::JPEGQuantTable" = type <{ %"struct.std::__1::array.124", i32, i32, i8, [3 x i8] }>
%"struct.std::__1::array.124" = type { [64 x i32] }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.jxl::jpeg::JPEGQuantTable"* }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"struct.jxl::jpeg::JPEGHuffmanCode"*, %"struct.jxl::jpeg::JPEGHuffmanCode"*, %"class.std::__1::__compressed_pair.134" }
%"struct.jxl::jpeg::JPEGHuffmanCode" = type <{ %"struct.std::__1::array.132", %"struct.std::__1::array.133", i32, i8, [3 x i8] }>
%"struct.std::__1::array.132" = type { [17 x i32] }
%"struct.std::__1::array.133" = type { [257 x i32] }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.jxl::jpeg::JPEGHuffmanCode"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.jxl::jpeg::JPEGComponent"*, %"struct.jxl::jpeg::JPEGComponent"*, %"class.std::__1::__compressed_pair.148" }
%"struct.jxl::jpeg::JPEGComponent" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.141" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { i16*, i16*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { i16* }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.jxl::jpeg::JPEGComponent"* }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.jxl::jpeg::JPEGScanInfo"*, %"struct.jxl::jpeg::JPEGScanInfo"*, %"class.std::__1::__compressed_pair.163" }
%"struct.jxl::jpeg::JPEGScanInfo" = type { i32, i32, i32, i32, i32, %"struct.std::__1::array.155", i32, %"class.std::__1::vector.30", %"class.std::__1::vector.156" }
%"struct.std::__1::array.155" = type { [4 x %"struct.jxl::jpeg::JPEGComponentScanInfo"] }
%"struct.jxl::jpeg::JPEGComponentScanInfo" = type { i32, i32, i32 }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo"*, %"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo"*, %"class.std::__1::__compressed_pair.158" }
%"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo" = type { i32, i32 }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.jxl::jpeg::JPEGScanInfo::ExtraZeroRunInfo"* }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.jxl::jpeg::JPEGScanInfo"* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"class.std::__1::vector.98"*, %"class.std::__1::vector.98"*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::vector.98"* }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"*, %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.jxl::Plane.97"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"class.std::__1::__compressed_pair.3" }
%"struct.jxl::PatchPosition" = type { i64, i64, %"class.std::__1::vector.0", %"struct.jxl::PatchReferencePosition" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"*, %"class.std::__1::__compressed_pair" }
%"struct.jxl::PatchBlending" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.jxl::PatchBlending"* }
%"struct.jxl::PatchReferencePosition" = type { i64, i64, i64, i64, i64 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.jxl::PatchPosition"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i64*, i64*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64* }
%"class.jxl::Plane" = type { %"struct.jxl::PlaneBase" }
%"class.jxl::Image3" = type { [3 x %"class.jxl::Plane.97"] }
%"struct.jxl::BlockCtxMap" = type { [3 x %"class.std::__1::vector.61"], %"class.std::__1::vector.30", %"class.std::__1::vector.98", i64, i64 }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { i32*, i32*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { i32* }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.jxl::ACImage"* }
%"class.jxl::ACImage" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::unique_ptr.230"* }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"*, %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.jxl::BitWriter"* }
%"struct.jxl::BitWriter" = type { i64, %"class.jxl::PaddedBytes", %"class.jxl::BitWriter::Allotment"* }
%"class.jxl::BitWriter::Allotment" = type { i64, i64, i64, i8, %"class.jxl::BitWriter::Allotment"* }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.std::__1::unique_ptr.243"* }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"struct.jxl::PassesEncoderState::PassData"*, %"struct.jxl::PassesEncoderState::PassData"*, %"class.std::__1::__compressed_pair.257" }
%"struct.jxl::PassesEncoderState::PassData" = type { %"class.std::__1::vector.199", %"class.std::__1::vector.98", %"struct.jxl::EntropyEncodingData" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"*, %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"struct.jxl::Token"*, %"struct.jxl::Token"*, %"class.std::__1::__compressed_pair.203" }
%"struct.jxl::Token" = type { i32, i32 }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.jxl::Token"* }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.std::__1::vector.201"* }
%"struct.jxl::EntropyEncodingData" = type { %"class.std::__1::vector.213", i8, %"class.std::__1::vector.221", %"struct.jxl::LZ77Params" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.std::__1::vector.215"*, %"class.std::__1::vector.215"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.363" }
%"class.std::__1::__vector_base.363" = type { %"struct.jxl::ANSEncSymbolInfo"*, %"struct.jxl::ANSEncSymbolInfo"*, %"class.std::__1::__compressed_pair.371" }
%"struct.jxl::ANSEncSymbolInfo" = type <{ i16, [6 x i8], %"class.std::__1::vector.364", i64, i8, i8, i16, [4 x i8] }>
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { i16*, i16*, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { i16* }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.jxl::ANSEncSymbolInfo"* }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.std::__1::vector.215"* }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"struct.jxl::HybridUintConfig"*, %"struct.jxl::HybridUintConfig"*, %"class.std::__1::__compressed_pair.223" }
%"struct.jxl::HybridUintConfig" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.jxl::HybridUintConfig"* }
%"struct.jxl::LZ77Params" = type { %"class.jxl::Fields", i8, i32, i32, %"struct.jxl::HybridUintConfig", i64 }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.jxl::PassesEncoderState::PassData"* }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { i8*, i8*, %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.jxl::EncoderHeuristics"* }
%"class.jxl::EncoderHeuristics" = type { i32 (...)** }
%"struct.jxl::Upsampler" = type { i64, [4 x [4 x [5 x [5 x float]]]] }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"struct.jxl::ANSCode"*, %"struct.jxl::ANSCode"*, %"class.std::__1::__compressed_pair.323" }
%"struct.jxl::ANSCode" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector.309", %"class.std::__1::vector.221", %"class.std::__1::vector.61", i8, i8, %"struct.jxl::LZ77Params", i64 }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"struct.jxl::HuffmanDecodingData"*, %"struct.jxl::HuffmanDecodingData"*, %"class.std::__1::__compressed_pair.318" }
%"struct.jxl::HuffmanDecodingData" = type { %"class.std::__1::vector.311" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"struct.jxl::HuffmanCode"*, %"struct.jxl::HuffmanCode"*, %"class.std::__1::__compressed_pair.313" }
%"struct.jxl::HuffmanCode" = type { i8, i16 }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.jxl::HuffmanCode"* }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.jxl::HuffmanDecodingData"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.jxl::ANSCode"* }
%"class.std::__1::function.328" = type { %"class.std::__1::__function::__policy_func.331" }
%"class.std::__1::__function::__policy_func.331" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.332", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker.332" = type { void (%"union.std::__1::__function::__policy_storage"*, float*, i64, i64, i64)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { float*, float*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::vector.333" = type { %"class.std::__1::__vector_base.334" }
%"class.std::__1::__vector_base.334" = type { %"class.std::__1::vector.278"*, %"class.std::__1::vector.278"*, %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::vector.278"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.340" }
%"struct.std::__1::__atomic_base.340" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.341" = type { %"class.std::__1::__vector_base.342" }
%"class.std::__1::__vector_base.342" = type { %"class.jxl::FilterPipeline"*, %"class.jxl::FilterPipeline"*, %"class.std::__1::__compressed_pair.343" }
%"class.jxl::FilterPipeline" = type { %"class.jxl::Image3", i64, [4 x %"struct.jxl::FilterPipeline::FilterStep"], i64, i8, i64 }
%"struct.jxl::FilterPipeline::FilterStep" = type { %"class.jxl::Image3"*, i64, %"class.jxl::Image3"*, i64, %"class.jxl::Rect", %"class.jxl::Rect", %"class.jxl::Rect", i64, void (%"struct.jxl::FilterPipeline::FilterStep"*, %"struct.jxl::FilterRows"*, i64)*, void (%"struct.jxl::FilterPipeline::FilterStep"*, %"struct.jxl::FilterRows"*, i64)*, %"struct.jxl::FilterDefinition", i64 }
%"class.jxl::Rect" = type { i64, i64, i64, i64 }
%"struct.jxl::FilterRows" = type <{ [3 x float*], [7 x i64], [3 x float*], float*, i32, [4 x i8] }>
%"struct.jxl::FilterDefinition" = type { void (%"struct.jxl::FilterRows"*, %"struct.jxl::LoopFilter"*, %"struct.jxl::FilterWeights"*, i64, i64, i64, i64)*, i64 }
%"struct.jxl::FilterWeights" = type { [9 x float], %"class.jxl::Plane.97" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.jxl::FilterPipeline"* }
%"class.jxl::GroupBorderAssigner" = type { %"struct.jxl::FrameDimensions", %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::atomic.351"* }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.376" }
%"struct.std::__1::__atomic_base.376" = type { %"struct.std::__1::__atomic_base.377" }
%"struct.std::__1::__atomic_base.377" = type { %"struct.std::__1::__cxx_atomic_impl.378" }
%"struct.std::__1::__cxx_atomic_impl.378" = type { %"struct.std::__1::__cxx_atomic_base_impl.379" }
%"struct.std::__1::__cxx_atomic_base_impl.379" = type { i8 }
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { %"class.jxl::Image3"*, %"class.jxl::Image3"*, %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.jxl::Image3"* }
%"struct.jxl::OpsinParams" = type { [36 x float], [4 x float], [4 x float], [4 x float] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.jxl::SizeConstraints" = type { i32, i32, i64 }
%"class.jxl::DecoderHints" = type { %"class.std::__1::vector.185" }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"struct.jxl::DecoderHints::KeyValue"*, %"struct.jxl::DecoderHints::KeyValue"*, %"class.std::__1::__compressed_pair.187" }
%"struct.jxl::DecoderHints::KeyValue" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.jxl::DecoderHints::KeyValue"* }
%"struct.jxl::Blobs" = type { %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.jxl::ImageBundle"* }
%"struct.jxl::PassDefinition" = type { i64, i64, i8, i64 }
%"struct.jxl::AuxOut" = type { %"struct.std::__1::array.177", i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"struct.std::__1::array.178", %"struct.std::__1::array.178", i32, %"class.std::__1::basic_string", i64, %"class.std::__1::function", %"class.std::__1::function.179" }
%"struct.std::__1::array.177" = type { [21 x %"struct.jxl::AuxOut::LayerTotals"] }
%"struct.jxl::AuxOut::LayerTotals" = type { i64, i64, i64, i64, double }
%"struct.std::__1::array.178" = type { [8 x i32] }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i8*, %"class.jxl::Image3"*)* }
%"class.std::__1::function.179" = type { %"class.std::__1::__function::__policy_func.183" }
%"class.std::__1::__function::__policy_func.183" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.184", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.184" = type { i32 (%"union.std::__1::__function::__policy_storage"*, %"class.jxl::CodecInOut"*, %"class.std::__1::basic_string"*)* }
%"class.jxl::CodecInOut" = type { %"struct.jxl::SizeConstraints", %"class.jxl::DecoderHints", i32, float, i64, %"struct.jxl::Blobs", %"struct.jxl::CodecMetadata", %"class.jxl::ImageBundle", %"class.std::__1::vector.192", i8, i64 }
%"struct.jxl::HistogramParams" = type <{ i32, i32, i32, i32, %"class.std::__1::vector.8", i64, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.jxl::PassesEncoderState" = type { %"struct.jxl::PassesSharedState", %"class.jxl::Plane.97", %"class.jxl::Plane.97", %"class.std::__1::vector.228", %"class.std::__1::vector.241", %"class.jxl::ProgressiveSplitter", %"struct.jxl::CompressParams", %"class.std::__1::vector.255", %"class.std::__1::vector.98", %"class.std::__1::vector.30", float, float, %"class.std::__1::unique_ptr.262" }
%"class.jxl::ProgressiveSplitter" = type <{ %"struct.jxl::ProgressiveMode", %"class.jxl::Plane.97"*, float, [4 x i8] }>
%"struct.jxl::ProgressiveMode" = type { i64, [11 x %"struct.jxl::PassDefinition"] }
%"struct.jxl::CompressParams" = type { float, i64, float, float, float, i8, [3 x float], i32, i64, i32, i32, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i8, i64, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i64, float, %"class.jxl::Plane.97"*, i8*, i8*, i8, i8, [2 x i8], %"struct.jxl::ButteraugliParams", i8, [3 x i8], %"struct.jxl::ModularOptions", i32, %"struct.std::__1::pair.254", i32, float, float, i32, i32, i8, i8, i64, i64 }
%"class.jxl::ThreadPool" = type { i32 (i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32)*, i8* }
%"struct.std::__1::__less.471" = type { i8 }
%"struct.std::__1::__split_buffer.431" = type { %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"class.std::__1::__compressed_pair.432" }
%"struct.std::__1::pair.270" = type { %"struct.jxl::QuantizedPatch", %"class.std::__1::vector.284" }
%"struct.jxl::QuantizedPatch" = type { i64, i64, [3 x %"class.std::__1::vector.271"], [3 x %"class.std::__1::vector.278"] }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { i8*, i8*, %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { i8* }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"*, %"class.std::__1::__compressed_pair.287" }
%"struct.std::__1::pair.286" = type { i32, i32 }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::pair.286"* }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.293", %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.270"* }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.std::__1::allocator.295"* }
%"class.std::__1::allocator.295" = type { i8 }
%"struct.std::__1::__less.434" = type { i8 }
%"class.jxl::ThreadPool::RunCallState" = type { i32 (i64)*, %class.anon.401* }
%class.anon.401 = type { %"class.jxl::Image3"*, %class.anon.399*, i8**, i64*, %"struct.std::__1::atomic.395"* }
%class.anon.399 = type { [3 x float*]*, i64 }
%"struct.std::__1::atomic.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i8 }
%"class.std::__1::vector.402" = type { %"class.std::__1::__vector_base.403" }
%"class.std::__1::__vector_base.403" = type { %"struct.std::__1::pair.404"*, %"struct.std::__1::pair.404"*, %"class.std::__1::__compressed_pair.405" }
%"struct.std::__1::pair.404" = type { %"struct.std::__1::pair.286", %"struct.std::__1::pair.286" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::pair.404"* }
%"class.std::__1::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.std::__1::pair.300"*, %"struct.std::__1::pair.300"*, %"class.std::__1::__compressed_pair.301" }
%"struct.std::__1::pair.300" = type { i64, i64 }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::pair.300"* }
%"struct.jxl::FrameInfo" = type { i8, i8, i32, i64, i8, i8, i64 }
%"class.jxl::BitReader" = type { i64, i64, i8*, i8*, i8*, i64, i8, i64 }
%"struct.jxl::PassesDecoderState" = type { %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"*, [3 x %"struct.jxl::Upsampler"], %"class.jxl::Image3", %"class.jxl::Image3", %"class.std::__1::vector.169", %"class.std::__1::vector.307", %"class.std::__1::vector.108", float, float, %"class.jxl::Image3", %"class.std::__1::vector.169", %"class.jxl::Image3", %"class.jxl::Image3", i8*, i64, i8, i8, %"class.std::__1::function.328", %"class.std::__1::vector.278", %"class.std::__1::vector.333", i64, %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.230", %"class.std::__1::vector.341", %"struct.jxl::FilterWeights", %"class.jxl::GroupBorderAssigner", %"class.std::__1::vector.355", %"class.std::__1::vector.355", %"class.std::__1::vector.355", [4 x %"class.std::__1::vector.355"], %"class.std::__1::vector.169", %"class.std::__1::vector.355", %"struct.jxl::OutputEncodingInfo" }
%"struct.jxl::OutputEncodingInfo" = type <{ %"struct.jxl::ColorEncoding", float, %"struct.jxl::OpsinParams", i8, i8, [2 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.jxl::ACImageT" = type { %"class.jxl::ACImage", %"class.jxl::Image3.458" }
%"class.jxl::Image3.458" = type { [3 x %"class.jxl::Plane.74"] }
%"struct.jxl::DecompressParams" = type <{ i8, i8, i8, i8, i32, i32, [4 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::allocator.326" = type { i8 }
%"class.jxl::Image3.413" = type { [3 x %"class.jxl::Plane"] }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.jxl::Visitor" = type { i32 (...)** }

$_ZNSt3__16vectorIN3jxl5PlaneIfEENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZN3jxl18PassesDecoderStateD2Ev = comdat any

$_ZN3jxl11ImageBundleD2Ev = comdat any

$_ZN3jxl11ImageBundleaSEOS0_ = comdat any

$_ZN3jxl18PassesEncoderStateD2Ev = comdat any

$_ZNK3jxl6AuxOut19DumpPlaneNormalizedIhEEvPKcRKNS_5PlaneIT_EE = comdat any

$_ZNK3jxl6AuxOut12DumpXybImageIfEEvPKcRKNS_6Image3IT_EE = comdat any

$_ZNK3jxl6AuxOut9DumpImageIfEEvPKcRKNS_6Image3IT_EE = comdat any

$_ZNK3jxl6AuxOut19DumpPlaneNormalizedIfEEvPKcRKNS_5PlaneIT_EE = comdat any

$_ZNSt3__16vectorINS_4pairIjjEENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_ = comdat any

$_ZN3jxl10ThreadPool14ReturnTrueInitEm = comdat any

$_ZNK3jxl6AuxOut9DumpImageIhEEvPKcRKNS_6Image3IT_EE = comdat any

$_ZN3jxl10CodecInOutC2Ev = comdat any

$_ZN3jxl10CodecInOut12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE = comdat any

$_ZN3jxl14ConvertToFloatIhEENS_6Image3IfEERKNS1_IT_EE = comdat any

$_ZN3jxl10CodecInOutD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN3jxl11ImageBundleENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN3jxl11ImageBundleC2EOS0_ = comdat any

$_ZN3jxl22YCbCrChromaSubsamplingD0Ev = comdat any

$_ZNK3jxl22YCbCrChromaSubsampling4NameEv = comdat any

$_ZN3jxl22YCbCrChromaSubsampling11VisitFieldsEPNS_7VisitorE = comdat any

$_ZNSt3__16vectorIN3jxl11ImageBundleENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPNS1_13ImageMetadataEEEEvDpOT_ = comdat any

$_ZN3jxl6Image3IfEC2EONS_5PlaneIfEES4_S4_ = comdat any

$_ZN3jxl6FieldsD2Ev = comdat any

$_ZN3jxl14ConvertToFloatIfEENS_6Image3IfEERKNS1_IT_EE = comdat any

$_ZN3jxl14QuantizedPatchC2Ev = comdat any

$_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEERNS6_IS9_EEED2Ev = comdat any

$_ZNSt3__16__sortIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_SE_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEbT0_SE_T_ = comdat any

$_ZNK3jxl14QuantizedPatchltERKS0_ = comdat any

$_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_ = comdat any

$_ZN3jxl14QuantizedPatchaSEOS0_ = comdat any

$_ZNSt3__16vectorIaNS_9allocatorIaEEE6assignIPaEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIaNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorINS_4pairIjjEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE8__appendEm = comdat any

$_ZN3jxl17PassesSharedStateC2Ev = comdat any

$_ZN3jxl15DequantMatricesC2Ev = comdat any

$_ZN3jxl13QuantEncodingaSERKS0_ = comdat any

$_ZNSt3__16vectorIN3jxl13QuantEncodingENS_9allocatorIS2_EEE8__appendEmRKS2_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPKfmmmEE12__call_emptyEPKNS0_16__policy_storageES3_mmm = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZN3jxl8ACImageTIiEC2Emm = comdat any

$_ZN3jxl8ACImageTIiED2Ev = comdat any

$_ZN3jxl8ACImageTIiED0Ev = comdat any

$_ZNK3jxl8ACImageTIiE4TypeEv = comdat any

$_ZN3jxl8ACImageTIiE8PlaneRowEmmm = comdat any

$_ZNK3jxl8ACImageTIiE8PlaneRowEmmm = comdat any

$_ZNK3jxl8ACImageTIiE12PixelsPerRowEv = comdat any

$_ZN3jxl8ACImageTIiE8ZeroFillEv = comdat any

$_ZN3jxl8ACImageTIiE13ZeroFillPlaneEm = comdat any

$_ZNK3jxl8ACImageTIiE7IsEmptyEv = comdat any

$_ZN3jxl17PassesSharedStateD2Ev = comdat any

$_ZNSt3__19allocatorIN3jxl7ANSCodeEE7destroyEPS2_ = comdat any

$_ZN3jxl18PassesEncoderState8PassDataD2Ev = comdat any

$_ZNSt3__113__vector_baseINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEENS6_IS9_EEED2Ev = comdat any

$_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE13__vdeallocateEv = comdat any

$_ZNSt3__16vectorIN3jxl13PatchPositionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3jxl5PlaneIfEENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJmmEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3jxl9BitWriterENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

$_ZN3jxl9BitReader19BoundsCheckedRefillEv = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEbT0_S7_T_ = comdat any

$_ZTVN3jxl22YCbCrChromaSubsamplingE = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

$_ZTVN3jxl8ACImageTIiEE = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d: JXL_ASSERT: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"../../third_party/libjxl/src/lib/jxl/enc_patch_dictionary.cc\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"pdic.HasAny()\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"num > 0\00", align 1
@.str.4 = private unnamed_addr constant [79 x i8] c"pdic.shared_->metadata->m.extra_channel_info.size() + 1 == pos.blending.size()\00", align 1
@.str.5 = private unnamed_addr constant [56 x i8] c"%s:%d: JXL_ABORT: Blending mode %u not yet implemented\0A\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"ref_ysize >= max_y\00", align 1
@__const._ZN3jxl23FindBestPatchDictionaryERKNS_6Image3IfEEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb.cparams = private unnamed_addr constant { float, [4 x i8], i64, float, float, float, i8, [3 x i8], [3 x float], i32, i64, i32, i32, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i8, [7 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [1 x i8], i32, i8, [3 x i8], i64, float, [4 x i8], %"class.jxl::Plane.97"*, i8*, i8*, i8, i8, [2 x i8], %"struct.jxl::ButteraugliParams", i8, [3 x i8], %"struct.jxl::ModularOptions", i32, %"struct.std::__1::pair.254", i32, float, float, i32, i32, i8, i8, [6 x i8], i64, i64 } { float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i64 -6148914691236517206, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"struct.jxl::ButteraugliParams" <{ float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i8 -86, [3 x i8] c"\AA\AA\AA", %"struct.jxl::ModularOptions" <{ i64 -6148914691236517206, float 0xFFFFFFFFE0000000, i32 -1431655766, %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, i32 -1431655766, %"struct.std::__1::pair.254" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206 }, align 8
@__const._ZN3jxl23FindBestPatchDictionaryERKNS_6Image3IfEEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb.roundtrip_state = private unnamed_addr constant { { %"struct.jxl::CodecMetadata"*, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 }, %"struct.jxl::FrameDimensions", %"class.jxl::AcStrategyImage", %"class.jxl::DequantMatrices", %"class.jxl::Quantizer", %"class.jxl::Plane.74", %"class.jxl::Plane", %"struct.jxl::ColorCorrelationMap", { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } }, i64, %"class.std::__1::vector.30", %"class.jxl::Plane", %"class.jxl::Image3", %"class.jxl::Image3"*, %"struct.jxl::BlockCtxMap", [4 x %"class.jxl::Image3"], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>], i64 }, %"class.jxl::Plane.97", %"class.jxl::Plane.97", %"class.std::__1::vector.228", %"class.std::__1::vector.241", <{ { i64, [11 x { i64, i64, i8, [7 x i8], i64 }] }, %"class.jxl::Plane.97"*, float, [4 x i8] }>, { float, [4 x i8], i64, float, float, float, i8, [3 x i8], [3 x float], i32, i64, i32, i32, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i8, [7 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [1 x i8], i32, i8, [3 x i8], i64, float, [4 x i8], %"class.jxl::Plane.97"*, i8*, i8*, i8, i8, [2 x i8], %"struct.jxl::ButteraugliParams", i8, [3 x i8], %"struct.jxl::ModularOptions", i32, %"struct.std::__1::pair.254", i32, float, float, i32, i32, i8, i8, [6 x i8], i64, i64 }, %"class.std::__1::vector.255", %"class.std::__1::vector.98", %"class.std::__1::vector.30", float, float, %"class.std::__1::unique_ptr.262" } { { %"struct.jxl::CodecMetadata"*, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 }, %"struct.jxl::FrameDimensions", %"class.jxl::AcStrategyImage", %"class.jxl::DequantMatrices", %"class.jxl::Quantizer", %"class.jxl::Plane.74", %"class.jxl::Plane", %"struct.jxl::ColorCorrelationMap", { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } }, i64, %"class.std::__1::vector.30", %"class.jxl::Plane", %"class.jxl::Image3", %"class.jxl::Image3"*, %"struct.jxl::BlockCtxMap", [4 x %"class.jxl::Image3"], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>], i64 } { %"struct.jxl::CodecMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::CodecMetadata"*), { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::Passes" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, [11 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [11 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [11 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [4 x i8] c"\AA\AA\AA\AA" }>, i8 -86, [3 x i8] c"\AA\AA\AA", %"struct.jxl::FrameSize" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, %"struct.jxl::BlendingInfo" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.std::__1::vector.37" { %"class.std::__1::__vector_base.38" { %"struct.jxl::BlendingInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::BlendingInfo"*), %"struct.jxl::BlendingInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::BlendingInfo"*), %"class.std::__1::__compressed_pair.39" { %"struct.std::__1::__compressed_pair_elem.40" { %"struct.jxl::BlendingInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::BlendingInfo"*) } } } }, %"struct.jxl::AnimationFrame" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, %"struct.jxl::CodecMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::CodecMetadata"*) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"struct.jxl::CodecMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::CodecMetadata"*), %"struct.jxl::LoopFilter" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, i8 -86, i8 -86, i8 -86, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", [8 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i8 -86, [3 x i8] c"\AA\AA\AA", [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, %"struct.jxl::FrameDimensions" { i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %"class.jxl::AcStrategyImage" { %"class.jxl::Plane" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 }, %"class.jxl::DequantMatrices" { %"class.std::__1::unique_ptr.44" { %"class.std::__1::__compressed_pair.45" { %"struct.std::__1::__compressed_pair_elem.46" { float* inttoptr (i64 -6148914691236517206 to float*) }, %"struct.std::__1::__compressed_pair_elem.47" { %"class.hwy::AlignedFreer" { void (i8*, i8*)* inttoptr (i64 -6148914691236517206 to void (i8*, i8*)*), i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [81 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %"class.std::__1::vector.48" { %"class.std::__1::__vector_base.49" { %"class.jxl::QuantEncoding"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantEncoding"*), %"class.jxl::QuantEncoding"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantEncoding"*), %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"class.jxl::QuantEncoding"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantEncoding"*) } } } } }, %"class.jxl::Quantizer" { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], %"class.jxl::DequantMatrices"* inttoptr (i64 -6148914691236517206 to %"class.jxl::DequantMatrices"*) }, %"class.jxl::Plane.74" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"struct.jxl::ColorCorrelationMap" { %"class.jxl::Plane.75" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.75" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }, { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } } { %"struct.jxl::NoiseParams" { [8 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.jxl::PatchDictionary" { %"struct.jxl::PassesSharedState"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PassesSharedState"*), %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.jxl::PatchPosition"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PatchPosition"*), %"struct.jxl::PatchPosition"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PatchPosition"*), %"class.std::__1::__compressed_pair.3" { %"struct.std::__1::__compressed_pair_elem.4" { %"struct.jxl::PatchPosition"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PatchPosition"*) } } } }, %"class.std::__1::vector.8" { %"class.std::__1::__vector_base.9" { i64* inttoptr (i64 -6148914691236517206 to i64*), i64* inttoptr (i64 -6148914691236517206 to i64*), %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { i64* inttoptr (i64 -6148914691236517206 to i64*) } } } }, %"class.std::__1::vector.8" { %"class.std::__1::__vector_base.9" { i64* inttoptr (i64 -6148914691236517206 to i64*), i64* inttoptr (i64 -6148914691236517206 to i64*), %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { i64* inttoptr (i64 -6148914691236517206 to i64*) } } } } }, { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.76" { %"class.std::__1::__vector_base.77" { %"class.jxl::QuantizedSpline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantizedSpline"*), %"class.jxl::QuantizedSpline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantizedSpline"*), %"class.std::__1::__compressed_pair.85" { %"struct.std::__1::__compressed_pair_elem.86" { %"class.jxl::QuantizedSpline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantizedSpline"*) } } } }, %"class.std::__1::vector.90" { %"class.std::__1::__vector_base.91" { %"struct.jxl::Spline::Point"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::Spline::Point"*), %"struct.jxl::Spline::Point"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::Spline::Point"*), %"class.std::__1::__compressed_pair.92" { %"struct.std::__1::__compressed_pair_elem.93" { %"struct.jxl::Spline::Point"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::Spline::Point"*) } } } } } }, i64 -6148914691236517206, %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.jxl::Plane" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"struct.jxl::BlockCtxMap" { [3 x %"class.std::__1::vector.61"] [%"class.std::__1::vector.61" { %"class.std::__1::__vector_base.62" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.63" { %"struct.std::__1::__compressed_pair_elem.64" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.std::__1::vector.61" { %"class.std::__1::__vector_base.62" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.63" { %"struct.std::__1::__compressed_pair_elem.64" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.std::__1::vector.61" { %"class.std::__1::__vector_base.62" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.63" { %"struct.std::__1::__compressed_pair_elem.64" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }], %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.std::__1::vector.98" { %"class.std::__1::__vector_base.99" { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.std::__1::__compressed_pair.100" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i64 -6148914691236517206, i64 -6148914691236517206 }, [4 x %"class.jxl::Image3"] [%"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>] [<{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>], i64 -6148914691236517206 }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.std::__1::vector.228" { %"class.std::__1::__vector_base.229" { %"class.std::__1::unique_ptr.230"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.230"*), %"class.std::__1::unique_ptr.230"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.230"*), %"class.std::__1::__compressed_pair.236" { %"struct.std::__1::__compressed_pair_elem.237" { %"class.std::__1::unique_ptr.230"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.230"*) } } } }, %"class.std::__1::vector.241" { %"class.std::__1::__vector_base.242" { %"class.std::__1::unique_ptr.243"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.243"*), %"class.std::__1::unique_ptr.243"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.243"*), %"class.std::__1::__compressed_pair.249" { %"struct.std::__1::__compressed_pair_elem.250" { %"class.std::__1::unique_ptr.243"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.243"*) } } } }, <{ { i64, [11 x { i64, i64, i8, [7 x i8], i64 }] }, %"class.jxl::Plane.97"*, float, [4 x i8] }> <{ { i64, [11 x { i64, i64, i8, [7 x i8], i64 }] } { i64 -6148914691236517206, [11 x { i64, i64, i8, [7 x i8], i64 }] [{ i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, { i64, i64, i8, [7 x i8], i64 } { i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }] }, %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, { float, [4 x i8], i64, float, float, float, i8, [3 x i8], [3 x float], i32, i64, i32, i32, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i8, [7 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [1 x i8], i32, i8, [3 x i8], i64, float, [4 x i8], %"class.jxl::Plane.97"*, i8*, i8*, i8, i8, [2 x i8], %"struct.jxl::ButteraugliParams", i8, [3 x i8], %"struct.jxl::ModularOptions", i32, %"struct.std::__1::pair.254", i32, float, float, i32, i32, i8, i8, [6 x i8], i64, i64 } { float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i64 -6148914691236517206, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"struct.jxl::ButteraugliParams" <{ float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i8 -86, [3 x i8] c"\AA\AA\AA", %"struct.jxl::ModularOptions" <{ i64 -6148914691236517206, float 0xFFFFFFFFE0000000, i32 -1431655766, %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, i32 -1431655766, %"struct.std::__1::pair.254" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206 }, %"class.std::__1::vector.255" { %"class.std::__1::__vector_base.256" { %"struct.jxl::PassesEncoderState::PassData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PassesEncoderState::PassData"*), %"struct.jxl::PassesEncoderState::PassData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PassesEncoderState::PassData"*), %"class.std::__1::__compressed_pair.257" { %"struct.std::__1::__compressed_pair_elem.258" { %"struct.jxl::PassesEncoderState::PassData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PassesEncoderState::PassData"*) } } } }, %"class.std::__1::vector.98" { %"class.std::__1::__vector_base.99" { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.std::__1::__compressed_pair.100" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.std::__1::unique_ptr.262" { %"class.std::__1::__compressed_pair.263" { %"struct.std::__1::__compressed_pair_elem.264" { %"class.jxl::EncoderHeuristics"* inttoptr (i64 -6148914691236517206 to %"class.jxl::EncoderHeuristics"*) } } } }, align 8
@.str.7 = private unnamed_addr constant [22 x i8] c"%s:%d: JXL_CHECK: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [121 x i8] c"EncodeFrame(cparams, patch_frame_info, state->shared.metadata, ib, &roundtrip_state, pool, special_frame.get(), nullptr)\00", align 1
@__const._ZN3jxl23FindBestPatchDictionaryERKNS_6Image3IfEEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb.dec_state = private unnamed_addr constant { { %"struct.jxl::CodecMetadata"*, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 }, %"struct.jxl::FrameDimensions", %"class.jxl::AcStrategyImage", %"class.jxl::DequantMatrices", %"class.jxl::Quantizer", %"class.jxl::Plane.74", %"class.jxl::Plane", %"struct.jxl::ColorCorrelationMap", { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } }, i64, %"class.std::__1::vector.30", %"class.jxl::Plane", %"class.jxl::Image3", %"class.jxl::Image3"*, %"struct.jxl::BlockCtxMap", [4 x %"class.jxl::Image3"], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>], i64 }, %"struct.jxl::PassesSharedState"*, [3 x %"struct.jxl::Upsampler"], %"class.jxl::Image3", %"class.jxl::Image3", %"class.std::__1::vector.169", %"class.std::__1::vector.307", %"class.std::__1::vector.108", float, float, %"class.jxl::Image3", %"class.std::__1::vector.169", %"class.jxl::Image3", %"class.jxl::Image3", i8*, i64, i8, i8, [6 x i8], %"class.std::__1::function.328", %"class.std::__1::vector.278", %"class.std::__1::vector.333", i64, %"struct.std::__1::atomic", [4 x i8], %"class.std::__1::unique_ptr.230", %"class.std::__1::vector.341", { [9 x float], [4 x i8], %"class.jxl::Plane.97" }, %"class.jxl::GroupBorderAssigner", %"class.std::__1::vector.355", %"class.std::__1::vector.355", %"class.std::__1::vector.355", [4 x %"class.std::__1::vector.355"], %"class.std::__1::vector.169", %"class.std::__1::vector.355", <{ { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, float, %"struct.jxl::OpsinParams", i8, i8, [2 x i8] }> } { { %"struct.jxl::CodecMetadata"*, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 }, %"struct.jxl::FrameDimensions", %"class.jxl::AcStrategyImage", %"class.jxl::DequantMatrices", %"class.jxl::Quantizer", %"class.jxl::Plane.74", %"class.jxl::Plane", %"struct.jxl::ColorCorrelationMap", { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } }, i64, %"class.std::__1::vector.30", %"class.jxl::Plane", %"class.jxl::Image3", %"class.jxl::Image3"*, %"struct.jxl::BlockCtxMap", [4 x %"class.jxl::Image3"], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>], i64 } { %"struct.jxl::CodecMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::CodecMetadata"*), { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::Passes" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, [11 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [11 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [11 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [4 x i8] c"\AA\AA\AA\AA" }>, i8 -86, [3 x i8] c"\AA\AA\AA", %"struct.jxl::FrameSize" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, %"struct.jxl::BlendingInfo" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.std::__1::vector.37" { %"class.std::__1::__vector_base.38" { %"struct.jxl::BlendingInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::BlendingInfo"*), %"struct.jxl::BlendingInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::BlendingInfo"*), %"class.std::__1::__compressed_pair.39" { %"struct.std::__1::__compressed_pair_elem.40" { %"struct.jxl::BlendingInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::BlendingInfo"*) } } } }, %"struct.jxl::AnimationFrame" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, %"struct.jxl::CodecMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::CodecMetadata"*) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"struct.jxl::CodecMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::CodecMetadata"*), %"struct.jxl::LoopFilter" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, i8 -86, i8 -86, i8 -86, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", [8 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i8 -86, [3 x i8] c"\AA\AA\AA", [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, %"struct.jxl::FrameDimensions" { i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %"class.jxl::AcStrategyImage" { %"class.jxl::Plane" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 }, %"class.jxl::DequantMatrices" { %"class.std::__1::unique_ptr.44" { %"class.std::__1::__compressed_pair.45" { %"struct.std::__1::__compressed_pair_elem.46" { float* inttoptr (i64 -6148914691236517206 to float*) }, %"struct.std::__1::__compressed_pair_elem.47" { %"class.hwy::AlignedFreer" { void (i8*, i8*)* inttoptr (i64 -6148914691236517206 to void (i8*, i8*)*), i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [81 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %"class.std::__1::vector.48" { %"class.std::__1::__vector_base.49" { %"class.jxl::QuantEncoding"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantEncoding"*), %"class.jxl::QuantEncoding"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantEncoding"*), %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"class.jxl::QuantEncoding"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantEncoding"*) } } } } }, %"class.jxl::Quantizer" { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], %"class.jxl::DequantMatrices"* inttoptr (i64 -6148914691236517206 to %"class.jxl::DequantMatrices"*) }, %"class.jxl::Plane.74" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"struct.jxl::ColorCorrelationMap" { %"class.jxl::Plane.75" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.75" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }, { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } } { %"struct.jxl::NoiseParams" { [8 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.jxl::PatchDictionary" { %"struct.jxl::PassesSharedState"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PassesSharedState"*), %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.jxl::PatchPosition"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PatchPosition"*), %"struct.jxl::PatchPosition"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PatchPosition"*), %"class.std::__1::__compressed_pair.3" { %"struct.std::__1::__compressed_pair_elem.4" { %"struct.jxl::PatchPosition"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PatchPosition"*) } } } }, %"class.std::__1::vector.8" { %"class.std::__1::__vector_base.9" { i64* inttoptr (i64 -6148914691236517206 to i64*), i64* inttoptr (i64 -6148914691236517206 to i64*), %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { i64* inttoptr (i64 -6148914691236517206 to i64*) } } } }, %"class.std::__1::vector.8" { %"class.std::__1::__vector_base.9" { i64* inttoptr (i64 -6148914691236517206 to i64*), i64* inttoptr (i64 -6148914691236517206 to i64*), %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { i64* inttoptr (i64 -6148914691236517206 to i64*) } } } } }, { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.76" { %"class.std::__1::__vector_base.77" { %"class.jxl::QuantizedSpline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantizedSpline"*), %"class.jxl::QuantizedSpline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantizedSpline"*), %"class.std::__1::__compressed_pair.85" { %"struct.std::__1::__compressed_pair_elem.86" { %"class.jxl::QuantizedSpline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::QuantizedSpline"*) } } } }, %"class.std::__1::vector.90" { %"class.std::__1::__vector_base.91" { %"struct.jxl::Spline::Point"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::Spline::Point"*), %"struct.jxl::Spline::Point"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::Spline::Point"*), %"class.std::__1::__compressed_pair.92" { %"struct.std::__1::__compressed_pair_elem.93" { %"struct.jxl::Spline::Point"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::Spline::Point"*) } } } } } }, i64 -6148914691236517206, %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.jxl::Plane" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"struct.jxl::BlockCtxMap" { [3 x %"class.std::__1::vector.61"] [%"class.std::__1::vector.61" { %"class.std::__1::__vector_base.62" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.63" { %"struct.std::__1::__compressed_pair_elem.64" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.std::__1::vector.61" { %"class.std::__1::__vector_base.62" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.63" { %"struct.std::__1::__compressed_pair_elem.64" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.std::__1::vector.61" { %"class.std::__1::__vector_base.62" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.63" { %"struct.std::__1::__compressed_pair_elem.64" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }], %"class.std::__1::vector.30" { %"class.std::__1::__vector_base.31" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.std::__1::vector.98" { %"class.std::__1::__vector_base.99" { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.std::__1::__compressed_pair.100" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i64 -6148914691236517206, i64 -6148914691236517206 }, [4 x %"class.jxl::Image3"] [%"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>] [<{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }> <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>], i64 -6148914691236517206 }, %"struct.jxl::PassesSharedState"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::PassesSharedState"*), [3 x %"struct.jxl::Upsampler"] [%"struct.jxl::Upsampler" { i64 -6148914691236517206, [4 x [4 x [5 x [5 x float]]]] [[4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]]] }, %"struct.jxl::Upsampler" { i64 -6148914691236517206, [4 x [4 x [5 x [5 x float]]]] [[4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]]] }, %"struct.jxl::Upsampler" { i64 -6148914691236517206, [4 x [4 x [5 x [5 x float]]]] [[4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]], [4 x [5 x [5 x float]]] [[5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], [5 x [5 x float]] [[5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [5 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]]]] }], %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, %"class.std::__1::vector.307" { %"class.std::__1::__vector_base.308" { %"struct.jxl::ANSCode"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ANSCode"*), %"struct.jxl::ANSCode"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ANSCode"*), %"class.std::__1::__compressed_pair.323" { %"struct.std::__1::__compressed_pair_elem.324" { %"struct.jxl::ANSCode"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ANSCode"*) } } } }, %"class.std::__1::vector.108" { %"class.std::__1::__vector_base.109" { %"class.std::__1::vector.98"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.98"*), %"class.std::__1::vector.98"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.98"*), %"class.std::__1::__compressed_pair.110" { %"struct.std::__1::__compressed_pair_elem.111" { %"class.std::__1::vector.98"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.98"*) } } } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::function.328" { %"class.std::__1::__function::__policy_func.331" { %"union.std::__1::__function::__policy_storage" { i8* inttoptr (i64 -6148914691236517206 to i8*), [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" }, %"struct.std::__1::__function::__policy_invoker.332" { void (%"union.std::__1::__function::__policy_storage"*, float*, i64, i64, i64)* inttoptr (i64 -6148914691236517206 to void (%"union.std::__1::__function::__policy_storage"*, float*, i64, i64, i64)*) }, %"struct.std::__1::__function::__policy"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__function::__policy"*) } }, %"class.std::__1::vector.278" { %"class.std::__1::__vector_base.279" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair.280" { %"struct.std::__1::__compressed_pair_elem.46" { float* inttoptr (i64 -6148914691236517206 to float*) } } } }, %"class.std::__1::vector.333" { %"class.std::__1::__vector_base.334" { %"class.std::__1::vector.278"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.278"*), %"class.std::__1::vector.278"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.278"*), %"class.std::__1::__compressed_pair.335" { %"struct.std::__1::__compressed_pair_elem.336" { %"class.std::__1::vector.278"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.278"*) } } } }, i64 -6148914691236517206, %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.340" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 -1431655766 } } } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.230" { %"class.std::__1::__compressed_pair.231" { %"struct.std::__1::__compressed_pair_elem.232" { %"class.jxl::ACImage"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ACImage"*) } } }, %"class.std::__1::vector.341" { %"class.std::__1::__vector_base.342" { %"class.jxl::FilterPipeline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::FilterPipeline"*), %"class.jxl::FilterPipeline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::FilterPipeline"*), %"class.std::__1::__compressed_pair.343" { %"struct.std::__1::__compressed_pair_elem.344" { %"class.jxl::FilterPipeline"* inttoptr (i64 -6148914691236517206 to %"class.jxl::FilterPipeline"*) } } } }, { [9 x float], [4 x i8], %"class.jxl::Plane.97" } { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA", %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } } }, %"class.jxl::GroupBorderAssigner" { %"struct.jxl::FrameDimensions" { i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %"class.std::__1::unique_ptr.348" { %"class.std::__1::__compressed_pair.349" { %"struct.std::__1::__compressed_pair_elem.350" { %"struct.std::__1::atomic.351"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::atomic.351"*) } } } }, %"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }, %"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }, %"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }, [4 x %"class.std::__1::vector.355"] [%"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }, %"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }, %"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }, %"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }], %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, %"class.std::__1::vector.355" { %"class.std::__1::__vector_base.356" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*), %"class.std::__1::__compressed_pair.357" { %"struct.std::__1::__compressed_pair_elem.358" { %"class.jxl::Image3"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Image3"*) } } } }, <{ { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, float, %"struct.jxl::OpsinParams", i8, i8, [2 x i8] }> <{ { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, %"struct.jxl::OpsinParams" { [36 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }> }, align 8
@.str.9 = private unnamed_addr constant [62 x i8] c"dec_state.output_encoding_info.Set(state->shared.metadata->m)\00", align 1
@.ref.tmp = private constant { i8, i8, i8, i32, i32, i64, i8, i8 } { i8 1, i8 0, i8 1, i32 -1, i32 -1, i64 1, i8 0, i8 0 }, align 8
@.str.10 = private unnamed_addr constant [83 x i8] c"DecodeFrame({}, &dec_state, pool, &br, &decoded, *state->shared.metadata, nullptr)\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"br.Close()\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"IsScreenshotLike\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"screenshot_like\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"is_background\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"WantDebugOutput(aux_out)\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"ccs\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"smallest <= biggest\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"biggest - 1 <= smallest\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c".png\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN3jxl22YCbCrChromaSubsamplingE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jxl::Fields"*)* @_ZN3jxl6FieldsD2Ev to i8*), i8* bitcast (void (%"struct.jxl::YCbCrChromaSubsampling"*)* @_ZN3jxl22YCbCrChromaSubsamplingD0Ev to i8*), i8* bitcast (i8* (%"struct.jxl::YCbCrChromaSubsampling"*)* @_ZNK3jxl22YCbCrChromaSubsampling4NameEv to i8*), i8* bitcast (i32 (%"struct.jxl::YCbCrChromaSubsampling"*, %"class.jxl::Visitor"*)* @_ZN3jxl22YCbCrChromaSubsampling11VisitFieldsEPNS_7VisitorE to i8*)] }, comdat, align 8
@.str.25 = private unnamed_addr constant [23 x i8] c"YCbCrChromaSubsampling\00", align 1
@_ZN3jxl22YCbCrChromaSubsampling7kHShiftE = external local_unnamed_addr constant [4 x i8], align 1
@_ZN3jxl22YCbCrChromaSubsampling7kVShiftE = external local_unnamed_addr constant [4 x i8], align 1
@_ZTVN3jxl13ColorEncodingE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl22CustomTransferFunctionE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3jxl8CustomxyE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.26 = private unnamed_addr constant [52 x i8] c"../../third_party/libjxl/src/lib/jxl/codec_in_out.h\00", align 1
@.str.27 = private unnamed_addr constant [32 x i8] c"metadata.size.Set(xsize, ysize)\00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c"../../third_party/libjxl/src/lib/jxl/image.h\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"SameSize(plane0, plane1)\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"SameSize(plane0, plane2)\00", align 1
@_ZTVN3jxl13ImageMetadataE = external unnamed_addr constant { [6 x i8*] }, align 8
@__const._ZNK3jxl6AuxOut9DumpImageIfEEvPKcRKNS_6Image3IT_EE.io = private unnamed_addr constant { %"struct.jxl::SizeConstraints", %"class.jxl::DecoderHints", i32, float, i64, %"struct.jxl::Blobs", { <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.18", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::CustomTransformData" }, { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.std::__1::vector.192", i8, [7 x i8], i64 } { %"struct.jxl::SizeConstraints" { i32 -1431655766, i32 -1431655766, i64 -6148914691236517206 }, %"class.jxl::DecoderHints" { %"class.std::__1::vector.185" { %"class.std::__1::__vector_base.186" { %"struct.jxl::DecoderHints::KeyValue"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::DecoderHints::KeyValue"*), %"struct.jxl::DecoderHints::KeyValue"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::DecoderHints::KeyValue"*), %"class.std::__1::__compressed_pair.187" { %"struct.std::__1::__compressed_pair_elem.188" { %"struct.jxl::DecoderHints::KeyValue"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::DecoderHints::KeyValue"*) } } } } }, i32 -1431655766, float 0xFFFFFFFFE0000000, i64 -6148914691236517206, %"struct.jxl::Blobs" { %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, { <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.18", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::CustomTransformData" } { <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.18", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }> <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.jxl::BitDepth" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::ToneMapping" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.18" { %"class.std::__1::__vector_base.19" { %"struct.jxl::ExtraChannelInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ExtraChannelInfo"*), %"struct.jxl::ExtraChannelInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ExtraChannelInfo"*), %"class.std::__1::__compressed_pair.25" { %"struct.std::__1::__compressed_pair_elem.26" { %"struct.jxl::ExtraChannelInfo"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ExtraChannelInfo"*) } } } }, %"struct.jxl::CustomTransformData" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"struct.jxl::OpsinInverseMatrix" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, i32 -1431655766, [15 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [55 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [210 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::AnimationHeader" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::CustomTransformData" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"struct.jxl::OpsinInverseMatrix" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, i32 -1431655766, [15 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [55 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [210 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }> }, { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 } { %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.jxl::jpeg::JPEGData"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::jpeg::JPEGData"*) } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::YCbCrChromaSubsampling" <{ %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %"struct.jxl::FrameOrigin" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.jxl::ImageMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.jxl::ImageMetadata"*), %"class.jxl::Image3" { [3 x %"class.jxl::Plane.97"] [%"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.jxl::Plane.97" { %"struct.jxl::PlaneBase" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }] }, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 } { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.jxl::PaddedBytes" { i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 }, %"struct.jxl::Customxy" { %"class.jxl::Fields" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i32 -1431655766, i32 -1431655766 } }, %"class.std::__1::vector.169" { %"class.std::__1::__vector_base.170" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*), %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.172" { %"class.jxl::Plane.97"* inttoptr (i64 -6148914691236517206 to %"class.jxl::Plane.97"*) } } } }, i64 -6148914691236517206 }, %"class.std::__1::vector.192" { %"class.std::__1::__vector_base.193" { %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*), %"class.std::__1::__compressed_pair.194" { %"struct.std::__1::__compressed_pair_elem.195" { %"class.jxl::ImageBundle"* inttoptr (i64 -6148914691236517206 to %"class.jxl::ImageBundle"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, align 8
@_ZN3jxl15DequantMatrices14required_size_E.const = private unnamed_addr constant [17 x i64] [i64 1, i64 1, i64 1, i64 1, i64 4, i64 16, i64 2, i64 4, i64 8, i64 1, i64 1, i64 64, i64 32, i64 256, i64 128, i64 1024, i64 512], align 16
@_ZN3jxl15DequantMatrices11kQuantTableE.const = private unnamed_addr constant [27 x i64] [i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 6, i64 7, i64 7, i64 8, i64 8, i64 9, i64 9, i64 10, i64 10, i64 10, i64 10, i64 11, i64 12, i64 12, i64 13, i64 14, i64 14, i64 15, i64 16, i64 16], align 16
@.str.31 = private unnamed_addr constant [53 x i8] c"../../third_party/libjxl/src/lib/jxl/quant_weights.h\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"Compute()\00", align 1
@_ZN3jxl11BlockCtxMap14kDefaultCtxMapE = external local_unnamed_addr constant [39 x i8], align 16
@constinit = private unnamed_addr constant <{ %"struct.jxl::PassDefinition", [10 x %"struct.jxl::PassDefinition"] }> <{ %"struct.jxl::PassDefinition" { i64 8, i64 0, i8 0, i64 1 }, [10 x %"struct.jxl::PassDefinition"] zeroinitializer }>, align 8
@.ref.tmp.34 = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 15, i32 9, i32 10, i32 11, i32 12, i32 13], align 4
@_ZTVN3jxl24DefaultEncoderHeuristicsE = external unnamed_addr constant { [7 x i8*] }, align 8
@.str.35 = private unnamed_addr constant [54 x i8] c"../../third_party/libjxl/src/lib/jxl/enc_bit_writer.h\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"bits_written_ % kBitsPerByte == 0\00", align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZTVN3jxl8ACImageTIiEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jxl::ACImageT"*)* @_ZN3jxl8ACImageTIiED2Ev to i8*), i8* bitcast (void (%"class.jxl::ACImageT"*)* @_ZN3jxl8ACImageTIiED0Ev to i8*), i8* bitcast (i32 (%"class.jxl::ACImageT"*)* @_ZNK3jxl8ACImageTIiE4TypeEv to i8*), i8* bitcast (i32* (%"class.jxl::ACImageT"*, i64, i64, i64)* @_ZN3jxl8ACImageTIiE8PlaneRowEmmm to i8*), i8* bitcast (i32* (%"class.jxl::ACImageT"*, i64, i64, i64)* @_ZNK3jxl8ACImageTIiE8PlaneRowEmmm to i8*), i8* bitcast (i64 (%"class.jxl::ACImageT"*)* @_ZNK3jxl8ACImageTIiE12PixelsPerRowEv to i8*), i8* bitcast (void (%"class.jxl::ACImageT"*)* @_ZN3jxl8ACImageTIiE8ZeroFillEv to i8*), i8* bitcast (void (%"class.jxl::ACImageT"*, i64)* @_ZN3jxl8ACImageTIiE13ZeroFillPlaneEm to i8*), i8* bitcast (i1 (%"class.jxl::ACImageT"*)* @_ZNK3jxl8ACImageTIiE7IsEmptyEv to i8*)] }, comdat, align 8
@.str.38 = private unnamed_addr constant [54 x i8] c"../../third_party/libjxl/src/lib/jxl/dec_bit_reader.h\00", align 1
@_ZTVN3jxl11FrameHeaderE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.39 = private unnamed_addr constant [30 x i8] c"close_called_ || !first_byte_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl22PatchDictionaryEncoder6EncodeERKNS_15PatchDictionaryEPNS_9BitWriterEmPNS_6AuxOutE(%"class.jxl::PatchDictionary"* nocapture readonly dereferenceable(80), %"struct.jxl::BitWriter"*, i64, %"struct.jxl::AuxOut"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.199", align 8
  %6 = alloca %"struct.jxl::EntropyEncodingData", align 8
  %7 = alloca %"class.std::__1::vector.98", align 8
  %8 = alloca %"struct.jxl::HistogramParams", align 16
  %9 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %9, align 8
  %11 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %11, align 8
  %13 = icmp eq %"struct.jxl::PatchPosition"* %10, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 54, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #9
  %16 = tail call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

17:                                               ; preds = %4
  %18 = ptrtoint %"struct.jxl::PatchPosition"* %10 to i64
  %19 = ptrtoint %"struct.jxl::PatchPosition"* %12 to i64
  %20 = bitcast %"class.std::__1::vector.199"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %5, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = tail call i8* @_Znwm(i64 24) #19
  %25 = bitcast %"class.std::__1::vector.199"* %5 to i8**
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 24
  %27 = bitcast %"class.std::__1::vector.201"** %23 to i8**
  store i8* %26, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector.201"** %22 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #9
  %29 = ptrtoint i8* %26 to i64
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 1
  %31 = bitcast %"struct.jxl::PatchPosition"** %11 to i64*
  %32 = bitcast %"class.std::__1::vector"* %30 to i64*
  %33 = sub i64 %19, %18
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %17
  %36 = sdiv exact i64 %33, 80
  br label %37

37:                                               ; preds = %35, %105
  %38 = phi i64 [ 0, %35 ], [ %106, %105 ]
  %39 = phi i64 [ 0, %35 ], [ %107, %105 ]
  %40 = icmp ult i64 %38, %36
  br i1 %40, label %41, label %105

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %38, i32 3, i32 0
  %43 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %38, i32 3, i32 2
  %44 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %38, i32 3, i32 3
  %45 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %38, i32 3, i32 4
  %46 = load i64, i64* %42, align 8, !noalias !2
  %47 = load i64, i64* %43, align 8, !noalias !2
  %48 = load i64, i64* %44, align 8, !noalias !2
  %49 = load i64, i64* %45, align 8, !noalias !2
  %50 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %38, i32 3, i32 1
  %51 = load i64, i64* %50, align 8, !noalias !2
  br label %71

52:                                               ; preds = %105, %93, %17
  %53 = phi i64 [ 0, %17 ], [ %94, %93 ], [ %107, %105 ]
  %54 = getelementptr inbounds i8, i8* %24, i64 16
  %55 = getelementptr inbounds i8, i8* %24, i64 8
  %56 = bitcast i8* %55 to i64*
  %57 = bitcast i8* %24 to i64*
  %58 = bitcast i8* %54 to i64*
  %59 = tail call i8* @_Znwm(i64 8) #19
  %60 = getelementptr inbounds i8, i8* %59, i64 8
  %61 = ptrtoint i8* %60 to i64
  %62 = trunc i64 %53 to i32
  %63 = bitcast i8* %59 to i32*
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %59, i64 4
  %65 = bitcast i8* %64 to i32*
  store i32 %62, i32* %65, align 4
  %66 = ptrtoint i8* %59 to i64
  store i64 %66, i64* %57, align 8
  store i64 %61, i64* %56, align 8
  store i64 %61, i64* %58, align 8
  br i1 %34, label %132, label %67

67:                                               ; preds = %52
  %68 = sdiv exact i64 %33, 80
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 0
  br label %116

71:                                               ; preds = %41, %95
  %72 = phi i64 [ %38, %41 ], [ %91, %95 ]
  %73 = phi i64 [ %46, %41 ], [ %97, %95 ]
  %74 = phi i64 [ %47, %41 ], [ %99, %95 ]
  %75 = phi i64 [ %48, %41 ], [ %101, %95 ]
  %76 = phi i64 [ %49, %41 ], [ %103, %95 ]
  %77 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %72, i32 3, i32 1
  %78 = load i64, i64* %77, align 8, !noalias !5
  %79 = icmp ult i64 %46, %73
  %80 = icmp ne i64 %51, %78
  %81 = or i1 %79, %80
  %82 = icmp ne i64 %47, %74
  %83 = or i1 %82, %81
  %84 = icmp ult i64 %75, %48
  %85 = or i1 %84, %83
  br i1 %85, label %105, label %86

86:                                               ; preds = %71
  %87 = icmp ult i64 %48, %75
  %88 = icmp ne i64 %49, %76
  %89 = or i1 %88, %87
  br i1 %89, label %105, label %90

90:                                               ; preds = %86
  %91 = add nuw i64 %72, 1
  %92 = icmp eq i64 %91, %36
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = add i64 %39, 1
  br label %52

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %91, i32 3, i32 0
  %97 = load i64, i64* %96, align 8, !noalias !5
  %98 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %91, i32 3, i32 2
  %99 = load i64, i64* %98, align 8, !noalias !5
  %100 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %91, i32 3, i32 3
  %101 = load i64, i64* %100, align 8, !noalias !5
  %102 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %10, i64 %91, i32 3, i32 4
  %103 = load i64, i64* %102, align 8, !noalias !5
  %104 = icmp ult i64 %97, %46
  br i1 %104, label %105, label %71

105:                                              ; preds = %86, %95, %71, %37
  %106 = phi i64 [ %38, %37 ], [ %72, %86 ], [ %91, %95 ], [ %72, %71 ]
  %107 = add i64 %39, 1
  %108 = icmp ult i64 %106, %36
  br i1 %108, label %37, label %52

109:                                              ; preds = %1092, %742
  %110 = load i64, i64* %31, align 8
  %111 = load i64, i64* %32, align 8
  %112 = sub i64 %110, %111
  %113 = sdiv exact i64 %112, 80
  %114 = icmp ult i64 %275, %113
  %115 = inttoptr i64 %111 to %"struct.jxl::PatchPosition"*
  br i1 %114, label %116, label %132

116:                                              ; preds = %67, %109
  %117 = phi %"struct.jxl::PatchPosition"* [ %10, %67 ], [ %115, %109 ]
  %118 = phi i64 [ %68, %67 ], [ %113, %109 ]
  %119 = phi i64 [ 0, %67 ], [ %275, %109 ]
  %120 = icmp ult i64 %119, %118
  br i1 %120, label %121, label %274

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %119, i32 3, i32 0
  %123 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %119, i32 3, i32 2
  %124 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %119, i32 3, i32 3
  %125 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %119, i32 3, i32 4
  %126 = load i64, i64* %122, align 8, !noalias !8
  %127 = load i64, i64* %123, align 8, !noalias !8
  %128 = load i64, i64* %124, align 8, !noalias !8
  %129 = load i64, i64* %125, align 8, !noalias !8
  %130 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %119, i32 3, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !8
  br label %242

132:                                              ; preds = %109, %52
  %133 = bitcast %"struct.jxl::EntropyEncodingData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %133) #9
  %134 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 80, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 24, i1 false) #9
  %135 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %6, i64 0, i32 2
  %136 = bitcast %"class.std::__1::vector.221"* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #9
  %137 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %6, i64 0, i32 3
  call void @_ZN3jxl10LZ77ParamsC1Ev(%"struct.jxl::LZ77Params"* %137) #9
  %138 = bitcast %"class.std::__1::vector.98"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #9
  %139 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %7, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 24, i1 false) #9
  %141 = bitcast %"struct.jxl::HistogramParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %141) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %141, i8 0, i64 56, i1 false)
  %142 = bitcast %"struct.jxl::HistogramParams"* %8 to <4 x i32>*
  store <4 x i32> <i32 2, i32 3, i32 1, i32 2>, <4 x i32>* %142, align 16
  %143 = getelementptr inbounds %"struct.jxl::HistogramParams", %"struct.jxl::HistogramParams"* %8, i64 0, i32 4
  %144 = bitcast %"class.std::__1::vector.8"* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %144, i8 0, i64 24, i1 false) #9
  %145 = getelementptr inbounds %"struct.jxl::HistogramParams", %"struct.jxl::HistogramParams"* %8, i64 0, i32 5
  store i64 -1, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.jxl::HistogramParams", %"struct.jxl::HistogramParams"* %8, i64 0, i32 6
  store i8 0, i8* %146, align 16
  %147 = call i64 @_ZN3jxl24BuildAndEncodeHistogramsERKNS_15HistogramParamsEmRNSt3__16vectorINS4_INS_5TokenENS3_9allocatorIS5_EEEENS6_IS8_EEEEPNS_19EntropyEncodingDataEPNS4_IhNS6_IhEEEEPNS_9BitWriterEmPNS_6AuxOutE(%"struct.jxl::HistogramParams"* nonnull dereferenceable(56) %8, i64 10, %"class.std::__1::vector.199"* nonnull dereferenceable(24) %5, %"struct.jxl::EntropyEncodingData"* nonnull %6, %"class.std::__1::vector.98"* nonnull %7, %"struct.jxl::BitWriter"* %1, i64 %2, %"struct.jxl::AuxOut"* %3) #9
  %148 = getelementptr inbounds %"struct.jxl::HistogramParams", %"struct.jxl::HistogramParams"* %8, i64 0, i32 4, i32 0, i32 0
  %149 = load i64*, i64** %148, align 16
  %150 = icmp eq i64* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %132
  %152 = ptrtoint i64* %149 to i64
  %153 = getelementptr inbounds %"struct.jxl::HistogramParams", %"struct.jxl::HistogramParams"* %8, i64 0, i32 4, i32 0, i32 1
  %154 = bitcast i64** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast i64* %149 to i8*
  call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %132, %151
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %141) #9
  %157 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  call void @_ZN3jxl11WriteTokensERKNSt3__16vectorINS_5TokenENS0_9allocatorIS2_EEEERKNS_19EntropyEncodingDataERKNS1_IhNS3_IhEEEEPNS_9BitWriterEmPNS_6AuxOutE(%"class.std::__1::vector.201"* dereferenceable(24) %157, %"struct.jxl::EntropyEncodingData"* nonnull dereferenceable(104) %6, %"class.std::__1::vector.98"* nonnull dereferenceable(24) %7, %"struct.jxl::BitWriter"* %1, i64 %2, %"struct.jxl::AuxOut"* %3) #9
  %158 = load i8*, i8** %139, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = ptrtoint i8* %158 to i64
  %162 = bitcast i8** %140 to i64*
  store i64 %161, i64* %162, align 8
  call void @_ZdlPv(i8* nonnull %158) #19
  br label %163

163:                                              ; preds = %156, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #9
  %164 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %6, i64 0, i32 2, i32 0, i32 0
  %165 = load %"struct.jxl::HybridUintConfig"*, %"struct.jxl::HybridUintConfig"** %164, align 8
  %166 = icmp eq %"struct.jxl::HybridUintConfig"* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %163
  %168 = ptrtoint %"struct.jxl::HybridUintConfig"* %165 to i64
  %169 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %6, i64 0, i32 2, i32 0, i32 1
  %170 = bitcast %"struct.jxl::HybridUintConfig"** %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = bitcast %"struct.jxl::HybridUintConfig"* %165 to i8*
  call void @_ZdlPv(i8* %171) #19
  br label %172

172:                                              ; preds = %167, %163
  %173 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %6, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.std::__1::vector.215"*, %"class.std::__1::vector.215"** %173, align 8
  %175 = icmp eq %"class.std::__1::vector.215"* %174, null
  br i1 %175, label %217, label %176

176:                                              ; preds = %172
  %177 = bitcast %"class.std::__1::vector.215"* %174 to i8*
  %178 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %6, i64 0, i32 0, i32 0, i32 1
  %179 = load %"class.std::__1::vector.215"*, %"class.std::__1::vector.215"** %178, align 8
  %180 = icmp eq %"class.std::__1::vector.215"* %179, %174
  br i1 %180, label %215, label %181

181:                                              ; preds = %176, %210
  %182 = phi %"class.std::__1::vector.215"* [ %183, %210 ], [ %179, %176 ]
  %183 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %182, i64 -1
  %184 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %183, i64 0, i32 0, i32 0
  %185 = load %"struct.jxl::ANSEncSymbolInfo"*, %"struct.jxl::ANSEncSymbolInfo"** %184, align 8
  %186 = icmp eq %"struct.jxl::ANSEncSymbolInfo"* %185, null
  br i1 %186, label %210, label %187

187:                                              ; preds = %181
  %188 = bitcast %"struct.jxl::ANSEncSymbolInfo"* %185 to i8*
  %189 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %182, i64 -1, i32 0, i32 1
  %190 = load %"struct.jxl::ANSEncSymbolInfo"*, %"struct.jxl::ANSEncSymbolInfo"** %189, align 8
  %191 = icmp eq %"struct.jxl::ANSEncSymbolInfo"* %190, %185
  br i1 %191, label %208, label %192

192:                                              ; preds = %187, %203
  %193 = phi %"struct.jxl::ANSEncSymbolInfo"* [ %194, %203 ], [ %190, %187 ]
  %194 = getelementptr inbounds %"struct.jxl::ANSEncSymbolInfo", %"struct.jxl::ANSEncSymbolInfo"* %193, i64 -1
  %195 = getelementptr inbounds %"struct.jxl::ANSEncSymbolInfo", %"struct.jxl::ANSEncSymbolInfo"* %193, i64 -1, i32 2, i32 0, i32 0
  %196 = load i16*, i16** %195, align 8
  %197 = icmp eq i16* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %192
  %199 = ptrtoint i16* %196 to i64
  %200 = getelementptr inbounds %"struct.jxl::ANSEncSymbolInfo", %"struct.jxl::ANSEncSymbolInfo"* %193, i64 -1, i32 2, i32 0, i32 1
  %201 = bitcast i16** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = bitcast i16* %196 to i8*
  call void @_ZdlPv(i8* %202) #19
  br label %203

203:                                              ; preds = %198, %192
  %204 = icmp eq %"struct.jxl::ANSEncSymbolInfo"* %194, %185
  br i1 %204, label %205, label %192

205:                                              ; preds = %203
  %206 = bitcast %"class.std::__1::vector.215"* %183 to i8**
  %207 = load i8*, i8** %206, align 8
  br label %208

208:                                              ; preds = %205, %187
  %209 = phi i8* [ %207, %205 ], [ %188, %187 ]
  store %"struct.jxl::ANSEncSymbolInfo"* %185, %"struct.jxl::ANSEncSymbolInfo"** %189, align 8
  call void @_ZdlPv(i8* %209) #19
  br label %210

210:                                              ; preds = %208, %181
  %211 = icmp eq %"class.std::__1::vector.215"* %183, %174
  br i1 %211, label %212, label %181

212:                                              ; preds = %210
  %213 = bitcast %"struct.jxl::EntropyEncodingData"* %6 to i8**
  %214 = load i8*, i8** %213, align 8
  br label %215

215:                                              ; preds = %212, %176
  %216 = phi i8* [ %214, %212 ], [ %177, %176 ]
  store %"class.std::__1::vector.215"* %174, %"class.std::__1::vector.215"** %178, align 8
  call void @_ZdlPv(i8* %216) #19
  br label %217

217:                                              ; preds = %172, %215
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %133) #9
  %218 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %219 = icmp eq %"class.std::__1::vector.201"* %218, null
  br i1 %219, label %241, label %220

220:                                              ; preds = %217
  %221 = bitcast %"class.std::__1::vector.201"* %218 to i8*
  %222 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %22, align 8
  %223 = icmp eq %"class.std::__1::vector.201"* %222, %218
  br i1 %223, label %239, label %224

224:                                              ; preds = %220, %235
  %225 = phi %"class.std::__1::vector.201"* [ %226, %235 ], [ %222, %220 ]
  %226 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %225, i64 -1
  %227 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %226, i64 0, i32 0, i32 0
  %228 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %227, align 8
  %229 = icmp eq %"struct.jxl::Token"* %228, null
  br i1 %229, label %235, label %230

230:                                              ; preds = %224
  %231 = ptrtoint %"struct.jxl::Token"* %228 to i64
  %232 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %225, i64 -1, i32 0, i32 1
  %233 = bitcast %"struct.jxl::Token"** %232 to i64*
  store i64 %231, i64* %233, align 8
  %234 = bitcast %"struct.jxl::Token"* %228 to i8*
  call void @_ZdlPv(i8* %234) #19
  br label %235

235:                                              ; preds = %230, %224
  %236 = icmp eq %"class.std::__1::vector.201"* %226, %218
  br i1 %236, label %237, label %224

237:                                              ; preds = %235
  %238 = load i8*, i8** %25, align 8
  br label %239

239:                                              ; preds = %237, %220
  %240 = phi i8* [ %238, %237 ], [ %221, %220 ]
  store %"class.std::__1::vector.201"* %218, %"class.std::__1::vector.201"** %22, align 8
  call void @_ZdlPv(i8* %240) #19
  br label %241

241:                                              ; preds = %217, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  ret void

242:                                              ; preds = %121, %264
  %243 = phi i64 [ %119, %121 ], [ %262, %264 ]
  %244 = phi i64 [ %126, %121 ], [ %266, %264 ]
  %245 = phi i64 [ %127, %121 ], [ %268, %264 ]
  %246 = phi i64 [ %128, %121 ], [ %270, %264 ]
  %247 = phi i64 [ %129, %121 ], [ %272, %264 ]
  %248 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %243, i32 3, i32 1
  %249 = load i64, i64* %248, align 8, !noalias !11
  %250 = icmp ult i64 %126, %244
  %251 = icmp ne i64 %131, %249
  %252 = or i1 %250, %251
  %253 = icmp ne i64 %127, %245
  %254 = or i1 %253, %252
  %255 = icmp ult i64 %246, %128
  %256 = or i1 %255, %254
  br i1 %256, label %274, label %257

257:                                              ; preds = %242
  %258 = icmp ult i64 %128, %246
  %259 = icmp ne i64 %129, %247
  %260 = or i1 %259, %258
  br i1 %260, label %274, label %261

261:                                              ; preds = %257
  %262 = add i64 %243, 1
  %263 = icmp eq i64 %262, %118
  br i1 %263, label %274, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %262, i32 3, i32 0
  %266 = load i64, i64* %265, align 8, !noalias !11
  %267 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %262, i32 3, i32 2
  %268 = load i64, i64* %267, align 8, !noalias !11
  %269 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %262, i32 3, i32 3
  %270 = load i64, i64* %269, align 8, !noalias !11
  %271 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %262, i32 3, i32 4
  %272 = load i64, i64* %271, align 8, !noalias !11
  %273 = icmp ult i64 %266, %126
  br i1 %273, label %274, label %242

274:                                              ; preds = %257, %264, %242, %261, %116
  %275 = phi i64 [ %119, %116 ], [ %243, %242 ], [ %262, %264 ], [ %243, %257 ], [ %118, %261 ]
  %276 = sub i64 %275, %119
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %281

278:                                              ; preds = %274
  %279 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 77, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #9
  %280 = tail call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

281:                                              ; preds = %274
  %282 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %117, i64 %119, i32 3, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %285 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %284, i64 0, i32 0, i32 1
  %286 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %285, align 8
  %287 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %284, i64 0, i32 0, i32 2, i32 0, i32 0
  %288 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %287, align 8
  %289 = icmp ult %"struct.jxl::Token"* %286, %288
  %290 = ptrtoint %"struct.jxl::Token"* %288 to i64
  br i1 %289, label %291, label %298

291:                                              ; preds = %281
  %292 = trunc i64 %283 to i32
  %293 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %286, i64 0, i32 0
  store i32 2, i32* %293, align 4
  %294 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %286, i64 0, i32 1
  store i32 %292, i32* %294, align 4
  %295 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %286, i64 1
  %296 = ptrtoint %"struct.jxl::Token"* %295 to i64
  %297 = bitcast %"struct.jxl::Token"** %285 to i64*
  store i64 %296, i64* %297, align 8
  br label %357

298:                                              ; preds = %281
  %299 = ptrtoint %"struct.jxl::Token"* %286 to i64
  %300 = bitcast %"struct.jxl::Token"** %285 to i64*
  %301 = bitcast %"class.std::__1::vector.201"* %284 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = sub i64 %299, %302
  %304 = ashr exact i64 %303, 3
  %305 = add nsw i64 %304, 1
  %306 = icmp ugt i64 %305, 2305843009213693951
  br i1 %306, label %307, label %309

307:                                              ; preds = %298
  %308 = bitcast %"class.std::__1::vector.201"* %284 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %308) #18
  unreachable

309:                                              ; preds = %298
  %310 = bitcast %"struct.jxl::Token"** %287 to i64*
  %311 = sub i64 %290, %302
  %312 = ashr exact i64 %311, 3
  %313 = icmp ult i64 %312, 1152921504606846975
  br i1 %313, label %314, label %322

314:                                              ; preds = %309
  %315 = ashr exact i64 %311, 2
  %316 = icmp ult i64 %315, %305
  %317 = select i1 %316, i64 %305, i64 %315
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %327, label %319

319:                                              ; preds = %314
  %320 = icmp ugt i64 %317, 2305843009213693951
  br i1 %320, label %321, label %322

321:                                              ; preds = %319
  tail call void @abort() #18
  unreachable

322:                                              ; preds = %319, %309
  %323 = phi i64 [ %317, %319 ], [ 2305843009213693951, %309 ]
  %324 = shl i64 %323, 3
  %325 = tail call i8* @_Znwm(i64 %324) #19
  %326 = bitcast i8* %325 to %"struct.jxl::Token"*
  br label %327

327:                                              ; preds = %322, %314
  %328 = phi i64 [ %323, %322 ], [ 0, %314 ]
  %329 = phi %"struct.jxl::Token"* [ %326, %322 ], [ null, %314 ]
  %330 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %329, i64 %304
  %331 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %329, i64 %328
  %332 = ptrtoint %"struct.jxl::Token"* %331 to i64
  %333 = trunc i64 %283 to i32
  %334 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %330, i64 0, i32 0
  store i32 2, i32* %334, align 4
  %335 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %329, i64 %304, i32 1
  store i32 %333, i32* %335, align 4
  %336 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %330, i64 1
  %337 = ptrtoint %"struct.jxl::Token"* %336 to i64
  %338 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %284, i64 0, i32 0, i32 0
  %339 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %338, align 8
  %340 = load i64, i64* %300, align 8
  %341 = ptrtoint %"struct.jxl::Token"* %339 to i64
  %342 = sub i64 %340, %341
  %343 = ashr exact i64 %342, 3
  %344 = sub nsw i64 0, %343
  %345 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %330, i64 %344
  %346 = ptrtoint %"struct.jxl::Token"* %345 to i64
  %347 = icmp sgt i64 %342, 0
  br i1 %347, label %348, label %352

348:                                              ; preds = %327
  %349 = bitcast %"struct.jxl::Token"* %345 to i8*
  %350 = bitcast %"struct.jxl::Token"* %339 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %349, i8* align 4 %350, i64 %342, i1 false) #9
  %351 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %338, align 8
  br label %352

352:                                              ; preds = %348, %327
  %353 = phi %"struct.jxl::Token"* [ %339, %327 ], [ %351, %348 ]
  store i64 %346, i64* %301, align 8
  store i64 %337, i64* %300, align 8
  store i64 %332, i64* %310, align 8
  %354 = icmp eq %"struct.jxl::Token"* %353, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %352
  %356 = bitcast %"struct.jxl::Token"* %353 to i8*
  tail call void @_ZdlPv(i8* %356) #19
  br label %357

357:                                              ; preds = %355, %352, %291
  %358 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %69, align 8
  %359 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %358, i64 %119, i32 3, i32 1
  %360 = load i64, i64* %359, align 8
  %361 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %362 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %361, i64 0, i32 0, i32 1
  %363 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %362, align 8
  %364 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %361, i64 0, i32 0, i32 2, i32 0, i32 0
  %365 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %364, align 8
  %366 = icmp ult %"struct.jxl::Token"* %363, %365
  %367 = ptrtoint %"struct.jxl::Token"* %365 to i64
  br i1 %366, label %368, label %375

368:                                              ; preds = %357
  %369 = trunc i64 %360 to i32
  %370 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %363, i64 0, i32 0
  store i32 6, i32* %370, align 4
  %371 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %363, i64 0, i32 1
  store i32 %369, i32* %371, align 4
  %372 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %363, i64 1
  %373 = ptrtoint %"struct.jxl::Token"* %372 to i64
  %374 = bitcast %"struct.jxl::Token"** %362 to i64*
  store i64 %373, i64* %374, align 8
  br label %434

375:                                              ; preds = %357
  %376 = ptrtoint %"struct.jxl::Token"* %363 to i64
  %377 = bitcast %"struct.jxl::Token"** %362 to i64*
  %378 = bitcast %"class.std::__1::vector.201"* %361 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = sub i64 %376, %379
  %381 = ashr exact i64 %380, 3
  %382 = add nsw i64 %381, 1
  %383 = icmp ugt i64 %382, 2305843009213693951
  br i1 %383, label %384, label %386

384:                                              ; preds = %375
  %385 = bitcast %"class.std::__1::vector.201"* %361 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %385) #18
  unreachable

386:                                              ; preds = %375
  %387 = bitcast %"struct.jxl::Token"** %364 to i64*
  %388 = sub i64 %367, %379
  %389 = ashr exact i64 %388, 3
  %390 = icmp ult i64 %389, 1152921504606846975
  br i1 %390, label %391, label %399

391:                                              ; preds = %386
  %392 = ashr exact i64 %388, 2
  %393 = icmp ult i64 %392, %382
  %394 = select i1 %393, i64 %382, i64 %392
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %404, label %396

396:                                              ; preds = %391
  %397 = icmp ugt i64 %394, 2305843009213693951
  br i1 %397, label %398, label %399

398:                                              ; preds = %396
  tail call void @abort() #18
  unreachable

399:                                              ; preds = %396, %386
  %400 = phi i64 [ %394, %396 ], [ 2305843009213693951, %386 ]
  %401 = shl i64 %400, 3
  %402 = tail call i8* @_Znwm(i64 %401) #19
  %403 = bitcast i8* %402 to %"struct.jxl::Token"*
  br label %404

404:                                              ; preds = %399, %391
  %405 = phi i64 [ %400, %399 ], [ 0, %391 ]
  %406 = phi %"struct.jxl::Token"* [ %403, %399 ], [ null, %391 ]
  %407 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %406, i64 %381
  %408 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %406, i64 %405
  %409 = ptrtoint %"struct.jxl::Token"* %408 to i64
  %410 = trunc i64 %360 to i32
  %411 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %407, i64 0, i32 0
  store i32 6, i32* %411, align 4
  %412 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %406, i64 %381, i32 1
  store i32 %410, i32* %412, align 4
  %413 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %407, i64 1
  %414 = ptrtoint %"struct.jxl::Token"* %413 to i64
  %415 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %361, i64 0, i32 0, i32 0
  %416 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %415, align 8
  %417 = load i64, i64* %377, align 8
  %418 = ptrtoint %"struct.jxl::Token"* %416 to i64
  %419 = sub i64 %417, %418
  %420 = ashr exact i64 %419, 3
  %421 = sub nsw i64 0, %420
  %422 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %407, i64 %421
  %423 = ptrtoint %"struct.jxl::Token"* %422 to i64
  %424 = icmp sgt i64 %419, 0
  br i1 %424, label %425, label %429

425:                                              ; preds = %404
  %426 = bitcast %"struct.jxl::Token"* %422 to i8*
  %427 = bitcast %"struct.jxl::Token"* %416 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %426, i8* align 4 %427, i64 %419, i1 false) #9
  %428 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %415, align 8
  br label %429

429:                                              ; preds = %425, %404
  %430 = phi %"struct.jxl::Token"* [ %416, %404 ], [ %428, %425 ]
  store i64 %423, i64* %378, align 8
  store i64 %414, i64* %377, align 8
  store i64 %409, i64* %387, align 8
  %431 = icmp eq %"struct.jxl::Token"* %430, null
  br i1 %431, label %434, label %432

432:                                              ; preds = %429
  %433 = bitcast %"struct.jxl::Token"* %430 to i8*
  tail call void @_ZdlPv(i8* %433) #19
  br label %434

434:                                              ; preds = %432, %429, %368
  %435 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %69, align 8
  %436 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %435, i64 %119, i32 3, i32 2
  %437 = load i64, i64* %436, align 8
  %438 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %439 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %438, i64 0, i32 0, i32 1
  %440 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %439, align 8
  %441 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %438, i64 0, i32 0, i32 2, i32 0, i32 0
  %442 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %441, align 8
  %443 = icmp ult %"struct.jxl::Token"* %440, %442
  %444 = ptrtoint %"struct.jxl::Token"* %442 to i64
  br i1 %443, label %445, label %452

445:                                              ; preds = %434
  %446 = trunc i64 %437 to i32
  %447 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %440, i64 0, i32 0
  store i32 6, i32* %447, align 4
  %448 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %440, i64 0, i32 1
  store i32 %446, i32* %448, align 4
  %449 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %440, i64 1
  %450 = ptrtoint %"struct.jxl::Token"* %449 to i64
  %451 = bitcast %"struct.jxl::Token"** %439 to i64*
  store i64 %450, i64* %451, align 8
  br label %511

452:                                              ; preds = %434
  %453 = ptrtoint %"struct.jxl::Token"* %440 to i64
  %454 = bitcast %"struct.jxl::Token"** %439 to i64*
  %455 = bitcast %"class.std::__1::vector.201"* %438 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = sub i64 %453, %456
  %458 = ashr exact i64 %457, 3
  %459 = add nsw i64 %458, 1
  %460 = icmp ugt i64 %459, 2305843009213693951
  br i1 %460, label %461, label %463

461:                                              ; preds = %452
  %462 = bitcast %"class.std::__1::vector.201"* %438 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %462) #18
  unreachable

463:                                              ; preds = %452
  %464 = bitcast %"struct.jxl::Token"** %441 to i64*
  %465 = sub i64 %444, %456
  %466 = ashr exact i64 %465, 3
  %467 = icmp ult i64 %466, 1152921504606846975
  br i1 %467, label %468, label %476

468:                                              ; preds = %463
  %469 = ashr exact i64 %465, 2
  %470 = icmp ult i64 %469, %459
  %471 = select i1 %470, i64 %459, i64 %469
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %481, label %473

473:                                              ; preds = %468
  %474 = icmp ugt i64 %471, 2305843009213693951
  br i1 %474, label %475, label %476

475:                                              ; preds = %473
  tail call void @abort() #18
  unreachable

476:                                              ; preds = %473, %463
  %477 = phi i64 [ %471, %473 ], [ 2305843009213693951, %463 ]
  %478 = shl i64 %477, 3
  %479 = tail call i8* @_Znwm(i64 %478) #19
  %480 = bitcast i8* %479 to %"struct.jxl::Token"*
  br label %481

481:                                              ; preds = %476, %468
  %482 = phi i64 [ %477, %476 ], [ 0, %468 ]
  %483 = phi %"struct.jxl::Token"* [ %480, %476 ], [ null, %468 ]
  %484 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %483, i64 %458
  %485 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %483, i64 %482
  %486 = ptrtoint %"struct.jxl::Token"* %485 to i64
  %487 = trunc i64 %437 to i32
  %488 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %484, i64 0, i32 0
  store i32 6, i32* %488, align 4
  %489 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %483, i64 %458, i32 1
  store i32 %487, i32* %489, align 4
  %490 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %484, i64 1
  %491 = ptrtoint %"struct.jxl::Token"* %490 to i64
  %492 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %438, i64 0, i32 0, i32 0
  %493 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %492, align 8
  %494 = load i64, i64* %454, align 8
  %495 = ptrtoint %"struct.jxl::Token"* %493 to i64
  %496 = sub i64 %494, %495
  %497 = ashr exact i64 %496, 3
  %498 = sub nsw i64 0, %497
  %499 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %484, i64 %498
  %500 = ptrtoint %"struct.jxl::Token"* %499 to i64
  %501 = icmp sgt i64 %496, 0
  br i1 %501, label %502, label %506

502:                                              ; preds = %481
  %503 = bitcast %"struct.jxl::Token"* %499 to i8*
  %504 = bitcast %"struct.jxl::Token"* %493 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %503, i8* align 4 %504, i64 %496, i1 false) #9
  %505 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %492, align 8
  br label %506

506:                                              ; preds = %502, %481
  %507 = phi %"struct.jxl::Token"* [ %493, %481 ], [ %505, %502 ]
  store i64 %500, i64* %455, align 8
  store i64 %491, i64* %454, align 8
  store i64 %486, i64* %464, align 8
  %508 = icmp eq %"struct.jxl::Token"* %507, null
  br i1 %508, label %511, label %509

509:                                              ; preds = %506
  %510 = bitcast %"struct.jxl::Token"* %507 to i8*
  tail call void @_ZdlPv(i8* %510) #19
  br label %511

511:                                              ; preds = %509, %506, %445
  %512 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %69, align 8
  %513 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %512, i64 %119, i32 3, i32 3
  %514 = load i64, i64* %513, align 8
  %515 = add i64 %514, -1
  %516 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %517 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %516, i64 0, i32 0, i32 1
  %518 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %517, align 8
  %519 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %516, i64 0, i32 0, i32 2, i32 0, i32 0
  %520 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %519, align 8
  %521 = icmp ult %"struct.jxl::Token"* %518, %520
  %522 = ptrtoint %"struct.jxl::Token"* %520 to i64
  br i1 %521, label %523, label %530

523:                                              ; preds = %511
  %524 = trunc i64 %515 to i32
  %525 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %518, i64 0, i32 0
  store i32 4, i32* %525, align 4
  %526 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %518, i64 0, i32 1
  store i32 %524, i32* %526, align 4
  %527 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %518, i64 1
  %528 = ptrtoint %"struct.jxl::Token"* %527 to i64
  %529 = bitcast %"struct.jxl::Token"** %517 to i64*
  store i64 %528, i64* %529, align 8
  br label %589

530:                                              ; preds = %511
  %531 = ptrtoint %"struct.jxl::Token"* %518 to i64
  %532 = bitcast %"struct.jxl::Token"** %517 to i64*
  %533 = bitcast %"class.std::__1::vector.201"* %516 to i64*
  %534 = load i64, i64* %533, align 8
  %535 = sub i64 %531, %534
  %536 = ashr exact i64 %535, 3
  %537 = add nsw i64 %536, 1
  %538 = icmp ugt i64 %537, 2305843009213693951
  br i1 %538, label %539, label %541

539:                                              ; preds = %530
  %540 = bitcast %"class.std::__1::vector.201"* %516 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %540) #18
  unreachable

541:                                              ; preds = %530
  %542 = bitcast %"struct.jxl::Token"** %519 to i64*
  %543 = sub i64 %522, %534
  %544 = ashr exact i64 %543, 3
  %545 = icmp ult i64 %544, 1152921504606846975
  br i1 %545, label %546, label %554

546:                                              ; preds = %541
  %547 = ashr exact i64 %543, 2
  %548 = icmp ult i64 %547, %537
  %549 = select i1 %548, i64 %537, i64 %547
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %559, label %551

551:                                              ; preds = %546
  %552 = icmp ugt i64 %549, 2305843009213693951
  br i1 %552, label %553, label %554

553:                                              ; preds = %551
  tail call void @abort() #18
  unreachable

554:                                              ; preds = %551, %541
  %555 = phi i64 [ %549, %551 ], [ 2305843009213693951, %541 ]
  %556 = shl i64 %555, 3
  %557 = tail call i8* @_Znwm(i64 %556) #19
  %558 = bitcast i8* %557 to %"struct.jxl::Token"*
  br label %559

559:                                              ; preds = %554, %546
  %560 = phi i64 [ %555, %554 ], [ 0, %546 ]
  %561 = phi %"struct.jxl::Token"* [ %558, %554 ], [ null, %546 ]
  %562 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %561, i64 %536
  %563 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %561, i64 %560
  %564 = ptrtoint %"struct.jxl::Token"* %563 to i64
  %565 = trunc i64 %515 to i32
  %566 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %562, i64 0, i32 0
  store i32 4, i32* %566, align 4
  %567 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %561, i64 %536, i32 1
  store i32 %565, i32* %567, align 4
  %568 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %562, i64 1
  %569 = ptrtoint %"struct.jxl::Token"* %568 to i64
  %570 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %516, i64 0, i32 0, i32 0
  %571 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %570, align 8
  %572 = load i64, i64* %532, align 8
  %573 = ptrtoint %"struct.jxl::Token"* %571 to i64
  %574 = sub i64 %572, %573
  %575 = ashr exact i64 %574, 3
  %576 = sub nsw i64 0, %575
  %577 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %562, i64 %576
  %578 = ptrtoint %"struct.jxl::Token"* %577 to i64
  %579 = icmp sgt i64 %574, 0
  br i1 %579, label %580, label %584

580:                                              ; preds = %559
  %581 = bitcast %"struct.jxl::Token"* %577 to i8*
  %582 = bitcast %"struct.jxl::Token"* %571 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %581, i8* align 4 %582, i64 %574, i1 false) #9
  %583 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %570, align 8
  br label %584

584:                                              ; preds = %580, %559
  %585 = phi %"struct.jxl::Token"* [ %571, %559 ], [ %583, %580 ]
  store i64 %578, i64* %533, align 8
  store i64 %569, i64* %532, align 8
  store i64 %564, i64* %542, align 8
  %586 = icmp eq %"struct.jxl::Token"* %585, null
  br i1 %586, label %589, label %587

587:                                              ; preds = %584
  %588 = bitcast %"struct.jxl::Token"* %585 to i8*
  tail call void @_ZdlPv(i8* %588) #19
  br label %589

589:                                              ; preds = %587, %584, %523
  %590 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %69, align 8
  %591 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %590, i64 %119, i32 3, i32 4
  %592 = load i64, i64* %591, align 8
  %593 = add i64 %592, -1
  %594 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %595 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %594, i64 0, i32 0, i32 1
  %596 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %595, align 8
  %597 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %594, i64 0, i32 0, i32 2, i32 0, i32 0
  %598 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %597, align 8
  %599 = icmp ult %"struct.jxl::Token"* %596, %598
  %600 = ptrtoint %"struct.jxl::Token"* %598 to i64
  br i1 %599, label %601, label %608

601:                                              ; preds = %589
  %602 = trunc i64 %593 to i32
  %603 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %596, i64 0, i32 0
  store i32 4, i32* %603, align 4
  %604 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %596, i64 0, i32 1
  store i32 %602, i32* %604, align 4
  %605 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %596, i64 1
  %606 = ptrtoint %"struct.jxl::Token"* %605 to i64
  %607 = bitcast %"struct.jxl::Token"** %595 to i64*
  store i64 %606, i64* %607, align 8
  br label %667

608:                                              ; preds = %589
  %609 = ptrtoint %"struct.jxl::Token"* %596 to i64
  %610 = bitcast %"struct.jxl::Token"** %595 to i64*
  %611 = bitcast %"class.std::__1::vector.201"* %594 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = sub i64 %609, %612
  %614 = ashr exact i64 %613, 3
  %615 = add nsw i64 %614, 1
  %616 = icmp ugt i64 %615, 2305843009213693951
  br i1 %616, label %617, label %619

617:                                              ; preds = %608
  %618 = bitcast %"class.std::__1::vector.201"* %594 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %618) #18
  unreachable

619:                                              ; preds = %608
  %620 = bitcast %"struct.jxl::Token"** %597 to i64*
  %621 = sub i64 %600, %612
  %622 = ashr exact i64 %621, 3
  %623 = icmp ult i64 %622, 1152921504606846975
  br i1 %623, label %624, label %632

624:                                              ; preds = %619
  %625 = ashr exact i64 %621, 2
  %626 = icmp ult i64 %625, %615
  %627 = select i1 %626, i64 %615, i64 %625
  %628 = icmp eq i64 %627, 0
  br i1 %628, label %637, label %629

629:                                              ; preds = %624
  %630 = icmp ugt i64 %627, 2305843009213693951
  br i1 %630, label %631, label %632

631:                                              ; preds = %629
  tail call void @abort() #18
  unreachable

632:                                              ; preds = %629, %619
  %633 = phi i64 [ %627, %629 ], [ 2305843009213693951, %619 ]
  %634 = shl i64 %633, 3
  %635 = tail call i8* @_Znwm(i64 %634) #19
  %636 = bitcast i8* %635 to %"struct.jxl::Token"*
  br label %637

637:                                              ; preds = %632, %624
  %638 = phi i64 [ %633, %632 ], [ 0, %624 ]
  %639 = phi %"struct.jxl::Token"* [ %636, %632 ], [ null, %624 ]
  %640 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %639, i64 %614
  %641 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %639, i64 %638
  %642 = ptrtoint %"struct.jxl::Token"* %641 to i64
  %643 = trunc i64 %593 to i32
  %644 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %640, i64 0, i32 0
  store i32 4, i32* %644, align 4
  %645 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %639, i64 %614, i32 1
  store i32 %643, i32* %645, align 4
  %646 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %640, i64 1
  %647 = ptrtoint %"struct.jxl::Token"* %646 to i64
  %648 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %594, i64 0, i32 0, i32 0
  %649 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %648, align 8
  %650 = load i64, i64* %610, align 8
  %651 = ptrtoint %"struct.jxl::Token"* %649 to i64
  %652 = sub i64 %650, %651
  %653 = ashr exact i64 %652, 3
  %654 = sub nsw i64 0, %653
  %655 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %640, i64 %654
  %656 = ptrtoint %"struct.jxl::Token"* %655 to i64
  %657 = icmp sgt i64 %652, 0
  br i1 %657, label %658, label %662

658:                                              ; preds = %637
  %659 = bitcast %"struct.jxl::Token"* %655 to i8*
  %660 = bitcast %"struct.jxl::Token"* %649 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %659, i8* align 4 %660, i64 %652, i1 false) #9
  %661 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %648, align 8
  br label %662

662:                                              ; preds = %658, %637
  %663 = phi %"struct.jxl::Token"* [ %649, %637 ], [ %661, %658 ]
  store i64 %656, i64* %611, align 8
  store i64 %647, i64* %610, align 8
  store i64 %642, i64* %620, align 8
  %664 = icmp eq %"struct.jxl::Token"* %663, null
  br i1 %664, label %667, label %665

665:                                              ; preds = %662
  %666 = bitcast %"struct.jxl::Token"* %663 to i8*
  tail call void @_ZdlPv(i8* %666) #19
  br label %667

667:                                              ; preds = %665, %662, %601
  %668 = add i64 %276, -1
  %669 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %670 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %669, i64 0, i32 0, i32 1
  %671 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %670, align 8
  %672 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %669, i64 0, i32 0, i32 2, i32 0, i32 0
  %673 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %672, align 8
  %674 = icmp ult %"struct.jxl::Token"* %671, %673
  %675 = ptrtoint %"struct.jxl::Token"* %673 to i64
  br i1 %674, label %676, label %683

676:                                              ; preds = %667
  %677 = trunc i64 %668 to i32
  %678 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %671, i64 0, i32 0
  store i32 14, i32* %678, align 4
  %679 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %671, i64 0, i32 1
  store i32 %677, i32* %679, align 4
  %680 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %671, i64 1
  %681 = ptrtoint %"struct.jxl::Token"* %680 to i64
  %682 = bitcast %"struct.jxl::Token"** %670 to i64*
  store i64 %681, i64* %682, align 8
  br label %742

683:                                              ; preds = %667
  %684 = ptrtoint %"struct.jxl::Token"* %671 to i64
  %685 = bitcast %"struct.jxl::Token"** %670 to i64*
  %686 = bitcast %"class.std::__1::vector.201"* %669 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = sub i64 %684, %687
  %689 = ashr exact i64 %688, 3
  %690 = add nsw i64 %689, 1
  %691 = icmp ugt i64 %690, 2305843009213693951
  br i1 %691, label %692, label %694

692:                                              ; preds = %683
  %693 = bitcast %"class.std::__1::vector.201"* %669 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %693) #18
  unreachable

694:                                              ; preds = %683
  %695 = bitcast %"struct.jxl::Token"** %672 to i64*
  %696 = sub i64 %675, %687
  %697 = ashr exact i64 %696, 3
  %698 = icmp ult i64 %697, 1152921504606846975
  br i1 %698, label %699, label %707

699:                                              ; preds = %694
  %700 = ashr exact i64 %696, 2
  %701 = icmp ult i64 %700, %690
  %702 = select i1 %701, i64 %690, i64 %700
  %703 = icmp eq i64 %702, 0
  br i1 %703, label %712, label %704

704:                                              ; preds = %699
  %705 = icmp ugt i64 %702, 2305843009213693951
  br i1 %705, label %706, label %707

706:                                              ; preds = %704
  tail call void @abort() #18
  unreachable

707:                                              ; preds = %704, %694
  %708 = phi i64 [ %702, %704 ], [ 2305843009213693951, %694 ]
  %709 = shl i64 %708, 3
  %710 = tail call i8* @_Znwm(i64 %709) #19
  %711 = bitcast i8* %710 to %"struct.jxl::Token"*
  br label %712

712:                                              ; preds = %707, %699
  %713 = phi i64 [ %708, %707 ], [ 0, %699 ]
  %714 = phi %"struct.jxl::Token"* [ %711, %707 ], [ null, %699 ]
  %715 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %714, i64 %689
  %716 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %714, i64 %713
  %717 = ptrtoint %"struct.jxl::Token"* %716 to i64
  %718 = trunc i64 %668 to i32
  %719 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %715, i64 0, i32 0
  store i32 14, i32* %719, align 4
  %720 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %714, i64 %689, i32 1
  store i32 %718, i32* %720, align 4
  %721 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %715, i64 1
  %722 = ptrtoint %"struct.jxl::Token"* %721 to i64
  %723 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %669, i64 0, i32 0, i32 0
  %724 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %723, align 8
  %725 = load i64, i64* %685, align 8
  %726 = ptrtoint %"struct.jxl::Token"* %724 to i64
  %727 = sub i64 %725, %726
  %728 = ashr exact i64 %727, 3
  %729 = sub nsw i64 0, %728
  %730 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %715, i64 %729
  %731 = ptrtoint %"struct.jxl::Token"* %730 to i64
  %732 = icmp sgt i64 %727, 0
  br i1 %732, label %733, label %737

733:                                              ; preds = %712
  %734 = bitcast %"struct.jxl::Token"* %730 to i8*
  %735 = bitcast %"struct.jxl::Token"* %724 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %734, i8* align 4 %735, i64 %727, i1 false) #9
  %736 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %723, align 8
  br label %737

737:                                              ; preds = %733, %712
  %738 = phi %"struct.jxl::Token"* [ %724, %712 ], [ %736, %733 ]
  store i64 %731, i64* %686, align 8
  store i64 %722, i64* %685, align 8
  store i64 %717, i64* %695, align 8
  %739 = icmp eq %"struct.jxl::Token"* %738, null
  br i1 %739, label %742, label %740

740:                                              ; preds = %737
  %741 = bitcast %"struct.jxl::Token"* %738 to i8*
  tail call void @_ZdlPv(i8* %741) #19
  br label %742

742:                                              ; preds = %740, %737, %676
  %743 = icmp ugt i64 %275, %119
  br i1 %743, label %744, label %109

744:                                              ; preds = %742, %1092
  %745 = phi i64 [ %1093, %1092 ], [ %119, %742 ]
  %746 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %69, align 8
  %747 = icmp eq i64 %745, %119
  %748 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %746, i64 %745, i32 0
  %749 = load i64, i64* %748, align 8
  br i1 %747, label %750, label %900

750:                                              ; preds = %744
  %751 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %752 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %751, i64 0, i32 0, i32 1
  %753 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %752, align 8
  %754 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %751, i64 0, i32 0, i32 2, i32 0, i32 0
  %755 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %754, align 8
  %756 = icmp ult %"struct.jxl::Token"* %753, %755
  %757 = ptrtoint %"struct.jxl::Token"* %755 to i64
  br i1 %756, label %758, label %765

758:                                              ; preds = %750
  %759 = trunc i64 %749 to i32
  %760 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %753, i64 0, i32 0
  store i32 8, i32* %760, align 4
  %761 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %753, i64 0, i32 1
  store i32 %759, i32* %761, align 4
  %762 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %753, i64 1
  %763 = ptrtoint %"struct.jxl::Token"* %762 to i64
  %764 = bitcast %"struct.jxl::Token"** %752 to i64*
  store i64 %763, i64* %764, align 8
  br label %824

765:                                              ; preds = %750
  %766 = ptrtoint %"struct.jxl::Token"* %753 to i64
  %767 = bitcast %"struct.jxl::Token"** %752 to i64*
  %768 = bitcast %"class.std::__1::vector.201"* %751 to i64*
  %769 = load i64, i64* %768, align 8
  %770 = sub i64 %766, %769
  %771 = ashr exact i64 %770, 3
  %772 = add nsw i64 %771, 1
  %773 = icmp ugt i64 %772, 2305843009213693951
  br i1 %773, label %774, label %776

774:                                              ; preds = %765
  %775 = bitcast %"class.std::__1::vector.201"* %751 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %775) #18
  unreachable

776:                                              ; preds = %765
  %777 = bitcast %"struct.jxl::Token"** %754 to i64*
  %778 = sub i64 %757, %769
  %779 = ashr exact i64 %778, 3
  %780 = icmp ult i64 %779, 1152921504606846975
  br i1 %780, label %781, label %789

781:                                              ; preds = %776
  %782 = ashr exact i64 %778, 2
  %783 = icmp ult i64 %782, %772
  %784 = select i1 %783, i64 %772, i64 %782
  %785 = icmp eq i64 %784, 0
  br i1 %785, label %794, label %786

786:                                              ; preds = %781
  %787 = icmp ugt i64 %784, 2305843009213693951
  br i1 %787, label %788, label %789

788:                                              ; preds = %786
  tail call void @abort() #18
  unreachable

789:                                              ; preds = %786, %776
  %790 = phi i64 [ %784, %786 ], [ 2305843009213693951, %776 ]
  %791 = shl i64 %790, 3
  %792 = tail call i8* @_Znwm(i64 %791) #19
  %793 = bitcast i8* %792 to %"struct.jxl::Token"*
  br label %794

794:                                              ; preds = %789, %781
  %795 = phi i64 [ %790, %789 ], [ 0, %781 ]
  %796 = phi %"struct.jxl::Token"* [ %793, %789 ], [ null, %781 ]
  %797 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %796, i64 %771
  %798 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %796, i64 %795
  %799 = ptrtoint %"struct.jxl::Token"* %798 to i64
  %800 = trunc i64 %749 to i32
  %801 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %797, i64 0, i32 0
  store i32 8, i32* %801, align 4
  %802 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %796, i64 %771, i32 1
  store i32 %800, i32* %802, align 4
  %803 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %797, i64 1
  %804 = ptrtoint %"struct.jxl::Token"* %803 to i64
  %805 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %751, i64 0, i32 0, i32 0
  %806 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %805, align 8
  %807 = load i64, i64* %767, align 8
  %808 = ptrtoint %"struct.jxl::Token"* %806 to i64
  %809 = sub i64 %807, %808
  %810 = ashr exact i64 %809, 3
  %811 = sub nsw i64 0, %810
  %812 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %797, i64 %811
  %813 = ptrtoint %"struct.jxl::Token"* %812 to i64
  %814 = icmp sgt i64 %809, 0
  br i1 %814, label %815, label %819

815:                                              ; preds = %794
  %816 = bitcast %"struct.jxl::Token"* %812 to i8*
  %817 = bitcast %"struct.jxl::Token"* %806 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %816, i8* align 4 %817, i64 %809, i1 false) #9
  %818 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %805, align 8
  br label %819

819:                                              ; preds = %815, %794
  %820 = phi %"struct.jxl::Token"* [ %806, %794 ], [ %818, %815 ]
  store i64 %813, i64* %768, align 8
  store i64 %804, i64* %767, align 8
  store i64 %799, i64* %777, align 8
  %821 = icmp eq %"struct.jxl::Token"* %820, null
  br i1 %821, label %824, label %822

822:                                              ; preds = %819
  %823 = bitcast %"struct.jxl::Token"* %820 to i8*
  tail call void @_ZdlPv(i8* %823) #19
  br label %824

824:                                              ; preds = %822, %819, %758
  %825 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %746, i64 %119, i32 1
  %826 = load i64, i64* %825, align 8
  %827 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %828 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %827, i64 0, i32 0, i32 1
  %829 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %828, align 8
  %830 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %827, i64 0, i32 0, i32 2, i32 0, i32 0
  %831 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %830, align 8
  %832 = icmp ult %"struct.jxl::Token"* %829, %831
  %833 = ptrtoint %"struct.jxl::Token"* %831 to i64
  br i1 %832, label %834, label %841

834:                                              ; preds = %824
  %835 = trunc i64 %826 to i32
  %836 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %829, i64 0, i32 0
  store i32 8, i32* %836, align 4
  %837 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %829, i64 0, i32 1
  store i32 %835, i32* %837, align 4
  %838 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %829, i64 1
  %839 = ptrtoint %"struct.jxl::Token"* %838 to i64
  %840 = bitcast %"struct.jxl::Token"** %828 to i64*
  store i64 %839, i64* %840, align 8
  br label %1062

841:                                              ; preds = %824
  %842 = ptrtoint %"struct.jxl::Token"* %829 to i64
  %843 = bitcast %"struct.jxl::Token"** %828 to i64*
  %844 = bitcast %"class.std::__1::vector.201"* %827 to i64*
  %845 = load i64, i64* %844, align 8
  %846 = sub i64 %842, %845
  %847 = ashr exact i64 %846, 3
  %848 = add nsw i64 %847, 1
  %849 = icmp ugt i64 %848, 2305843009213693951
  br i1 %849, label %850, label %852

850:                                              ; preds = %841
  %851 = bitcast %"class.std::__1::vector.201"* %827 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %851) #18
  unreachable

852:                                              ; preds = %841
  %853 = bitcast %"struct.jxl::Token"** %830 to i64*
  %854 = sub i64 %833, %845
  %855 = ashr exact i64 %854, 3
  %856 = icmp ult i64 %855, 1152921504606846975
  br i1 %856, label %857, label %865

857:                                              ; preds = %852
  %858 = ashr exact i64 %854, 2
  %859 = icmp ult i64 %858, %848
  %860 = select i1 %859, i64 %848, i64 %858
  %861 = icmp eq i64 %860, 0
  br i1 %861, label %870, label %862

862:                                              ; preds = %857
  %863 = icmp ugt i64 %860, 2305843009213693951
  br i1 %863, label %864, label %865

864:                                              ; preds = %862
  tail call void @abort() #18
  unreachable

865:                                              ; preds = %862, %852
  %866 = phi i64 [ %860, %862 ], [ 2305843009213693951, %852 ]
  %867 = shl i64 %866, 3
  %868 = tail call i8* @_Znwm(i64 %867) #19
  %869 = bitcast i8* %868 to %"struct.jxl::Token"*
  br label %870

870:                                              ; preds = %865, %857
  %871 = phi i64 [ %866, %865 ], [ 0, %857 ]
  %872 = phi %"struct.jxl::Token"* [ %869, %865 ], [ null, %857 ]
  %873 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %872, i64 %847
  %874 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %872, i64 %871
  %875 = ptrtoint %"struct.jxl::Token"* %874 to i64
  %876 = trunc i64 %826 to i32
  %877 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %873, i64 0, i32 0
  store i32 8, i32* %877, align 4
  %878 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %872, i64 %847, i32 1
  store i32 %876, i32* %878, align 4
  %879 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %873, i64 1
  %880 = ptrtoint %"struct.jxl::Token"* %879 to i64
  %881 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %827, i64 0, i32 0, i32 0
  %882 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %881, align 8
  %883 = load i64, i64* %843, align 8
  %884 = ptrtoint %"struct.jxl::Token"* %882 to i64
  %885 = sub i64 %883, %884
  %886 = ashr exact i64 %885, 3
  %887 = sub nsw i64 0, %886
  %888 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %873, i64 %887
  %889 = ptrtoint %"struct.jxl::Token"* %888 to i64
  %890 = icmp sgt i64 %885, 0
  br i1 %890, label %891, label %895

891:                                              ; preds = %870
  %892 = bitcast %"struct.jxl::Token"* %888 to i8*
  %893 = bitcast %"struct.jxl::Token"* %882 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %892, i8* align 4 %893, i64 %885, i1 false) #9
  %894 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %881, align 8
  br label %895

895:                                              ; preds = %891, %870
  %896 = phi %"struct.jxl::Token"* [ %882, %870 ], [ %894, %891 ]
  store i64 %889, i64* %844, align 8
  store i64 %880, i64* %843, align 8
  store i64 %875, i64* %853, align 8
  %897 = icmp eq %"struct.jxl::Token"* %896, null
  br i1 %897, label %1062, label %898

898:                                              ; preds = %895
  %899 = bitcast %"struct.jxl::Token"* %896 to i8*
  tail call void @_ZdlPv(i8* %899) #19
  br label %1062

900:                                              ; preds = %744
  %901 = add i64 %745, -1
  %902 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %746, i64 %901, i32 0
  %903 = load i64, i64* %902, align 8
  %904 = sub i64 %749, %903
  %905 = trunc i64 %904 to i32
  %906 = shl i32 %905, 1
  %907 = ashr i32 %905, 31
  %908 = xor i32 %906, %907
  %909 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %910 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %909, i64 0, i32 0, i32 1
  %911 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %910, align 8
  %912 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %909, i64 0, i32 0, i32 2, i32 0, i32 0
  %913 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %912, align 8
  %914 = icmp ult %"struct.jxl::Token"* %911, %913
  %915 = ptrtoint %"struct.jxl::Token"* %913 to i64
  br i1 %914, label %916, label %922

916:                                              ; preds = %900
  %917 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %911, i64 0, i32 0
  store i32 12, i32* %917, align 4
  %918 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %911, i64 0, i32 1
  store i32 %908, i32* %918, align 4
  %919 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %911, i64 1
  %920 = ptrtoint %"struct.jxl::Token"* %919 to i64
  %921 = bitcast %"struct.jxl::Token"** %910 to i64*
  store i64 %920, i64* %921, align 8
  br label %980

922:                                              ; preds = %900
  %923 = ptrtoint %"struct.jxl::Token"* %911 to i64
  %924 = bitcast %"struct.jxl::Token"** %910 to i64*
  %925 = bitcast %"class.std::__1::vector.201"* %909 to i64*
  %926 = load i64, i64* %925, align 8
  %927 = sub i64 %923, %926
  %928 = ashr exact i64 %927, 3
  %929 = add nsw i64 %928, 1
  %930 = icmp ugt i64 %929, 2305843009213693951
  br i1 %930, label %931, label %933

931:                                              ; preds = %922
  %932 = bitcast %"class.std::__1::vector.201"* %909 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %932) #18
  unreachable

933:                                              ; preds = %922
  %934 = bitcast %"struct.jxl::Token"** %912 to i64*
  %935 = sub i64 %915, %926
  %936 = ashr exact i64 %935, 3
  %937 = icmp ult i64 %936, 1152921504606846975
  br i1 %937, label %938, label %946

938:                                              ; preds = %933
  %939 = ashr exact i64 %935, 2
  %940 = icmp ult i64 %939, %929
  %941 = select i1 %940, i64 %929, i64 %939
  %942 = icmp eq i64 %941, 0
  br i1 %942, label %951, label %943

943:                                              ; preds = %938
  %944 = icmp ugt i64 %941, 2305843009213693951
  br i1 %944, label %945, label %946

945:                                              ; preds = %943
  tail call void @abort() #18
  unreachable

946:                                              ; preds = %943, %933
  %947 = phi i64 [ %941, %943 ], [ 2305843009213693951, %933 ]
  %948 = shl i64 %947, 3
  %949 = tail call i8* @_Znwm(i64 %948) #19
  %950 = bitcast i8* %949 to %"struct.jxl::Token"*
  br label %951

951:                                              ; preds = %946, %938
  %952 = phi i64 [ %947, %946 ], [ 0, %938 ]
  %953 = phi %"struct.jxl::Token"* [ %950, %946 ], [ null, %938 ]
  %954 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %953, i64 %928
  %955 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %953, i64 %952
  %956 = ptrtoint %"struct.jxl::Token"* %955 to i64
  %957 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %954, i64 0, i32 0
  store i32 12, i32* %957, align 4
  %958 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %953, i64 %928, i32 1
  store i32 %908, i32* %958, align 4
  %959 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %954, i64 1
  %960 = ptrtoint %"struct.jxl::Token"* %959 to i64
  %961 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %909, i64 0, i32 0, i32 0
  %962 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %961, align 8
  %963 = load i64, i64* %924, align 8
  %964 = ptrtoint %"struct.jxl::Token"* %962 to i64
  %965 = sub i64 %963, %964
  %966 = ashr exact i64 %965, 3
  %967 = sub nsw i64 0, %966
  %968 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %954, i64 %967
  %969 = ptrtoint %"struct.jxl::Token"* %968 to i64
  %970 = icmp sgt i64 %965, 0
  br i1 %970, label %971, label %975

971:                                              ; preds = %951
  %972 = bitcast %"struct.jxl::Token"* %968 to i8*
  %973 = bitcast %"struct.jxl::Token"* %962 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %972, i8* align 4 %973, i64 %965, i1 false) #9
  %974 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %961, align 8
  br label %975

975:                                              ; preds = %971, %951
  %976 = phi %"struct.jxl::Token"* [ %962, %951 ], [ %974, %971 ]
  store i64 %969, i64* %925, align 8
  store i64 %960, i64* %924, align 8
  store i64 %956, i64* %934, align 8
  %977 = icmp eq %"struct.jxl::Token"* %976, null
  br i1 %977, label %980, label %978

978:                                              ; preds = %975
  %979 = bitcast %"struct.jxl::Token"* %976 to i8*
  tail call void @_ZdlPv(i8* %979) #19
  br label %980

980:                                              ; preds = %978, %975, %916
  %981 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %746, i64 %745, i32 1
  %982 = load i64, i64* %981, align 8
  %983 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %69, align 8
  %984 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %983, i64 %901, i32 1
  %985 = load i64, i64* %984, align 8
  %986 = sub i64 %982, %985
  %987 = trunc i64 %986 to i32
  %988 = shl i32 %987, 1
  %989 = ashr i32 %987, 31
  %990 = xor i32 %988, %989
  %991 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %992 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %991, i64 0, i32 0, i32 1
  %993 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %992, align 8
  %994 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %991, i64 0, i32 0, i32 2, i32 0, i32 0
  %995 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %994, align 8
  %996 = icmp ult %"struct.jxl::Token"* %993, %995
  %997 = ptrtoint %"struct.jxl::Token"* %995 to i64
  br i1 %996, label %998, label %1004

998:                                              ; preds = %980
  %999 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %993, i64 0, i32 0
  store i32 12, i32* %999, align 4
  %1000 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %993, i64 0, i32 1
  store i32 %990, i32* %1000, align 4
  %1001 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %993, i64 1
  %1002 = ptrtoint %"struct.jxl::Token"* %1001 to i64
  %1003 = bitcast %"struct.jxl::Token"** %992 to i64*
  store i64 %1002, i64* %1003, align 8
  br label %1062

1004:                                             ; preds = %980
  %1005 = ptrtoint %"struct.jxl::Token"* %993 to i64
  %1006 = bitcast %"struct.jxl::Token"** %992 to i64*
  %1007 = bitcast %"class.std::__1::vector.201"* %991 to i64*
  %1008 = load i64, i64* %1007, align 8
  %1009 = sub i64 %1005, %1008
  %1010 = ashr exact i64 %1009, 3
  %1011 = add nsw i64 %1010, 1
  %1012 = icmp ugt i64 %1011, 2305843009213693951
  br i1 %1012, label %1013, label %1015

1013:                                             ; preds = %1004
  %1014 = bitcast %"class.std::__1::vector.201"* %991 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1014) #18
  unreachable

1015:                                             ; preds = %1004
  %1016 = bitcast %"struct.jxl::Token"** %994 to i64*
  %1017 = sub i64 %997, %1008
  %1018 = ashr exact i64 %1017, 3
  %1019 = icmp ult i64 %1018, 1152921504606846975
  br i1 %1019, label %1020, label %1028

1020:                                             ; preds = %1015
  %1021 = ashr exact i64 %1017, 2
  %1022 = icmp ult i64 %1021, %1011
  %1023 = select i1 %1022, i64 %1011, i64 %1021
  %1024 = icmp eq i64 %1023, 0
  br i1 %1024, label %1033, label %1025

1025:                                             ; preds = %1020
  %1026 = icmp ugt i64 %1023, 2305843009213693951
  br i1 %1026, label %1027, label %1028

1027:                                             ; preds = %1025
  tail call void @abort() #18
  unreachable

1028:                                             ; preds = %1025, %1015
  %1029 = phi i64 [ %1023, %1025 ], [ 2305843009213693951, %1015 ]
  %1030 = shl i64 %1029, 3
  %1031 = tail call i8* @_Znwm(i64 %1030) #19
  %1032 = bitcast i8* %1031 to %"struct.jxl::Token"*
  br label %1033

1033:                                             ; preds = %1028, %1020
  %1034 = phi i64 [ %1029, %1028 ], [ 0, %1020 ]
  %1035 = phi %"struct.jxl::Token"* [ %1032, %1028 ], [ null, %1020 ]
  %1036 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1035, i64 %1010
  %1037 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1035, i64 %1034
  %1038 = ptrtoint %"struct.jxl::Token"* %1037 to i64
  %1039 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1036, i64 0, i32 0
  store i32 12, i32* %1039, align 4
  %1040 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1035, i64 %1010, i32 1
  store i32 %990, i32* %1040, align 4
  %1041 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1036, i64 1
  %1042 = ptrtoint %"struct.jxl::Token"* %1041 to i64
  %1043 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %991, i64 0, i32 0, i32 0
  %1044 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1043, align 8
  %1045 = load i64, i64* %1006, align 8
  %1046 = ptrtoint %"struct.jxl::Token"* %1044 to i64
  %1047 = sub i64 %1045, %1046
  %1048 = ashr exact i64 %1047, 3
  %1049 = sub nsw i64 0, %1048
  %1050 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1036, i64 %1049
  %1051 = ptrtoint %"struct.jxl::Token"* %1050 to i64
  %1052 = icmp sgt i64 %1047, 0
  br i1 %1052, label %1053, label %1057

1053:                                             ; preds = %1033
  %1054 = bitcast %"struct.jxl::Token"* %1050 to i8*
  %1055 = bitcast %"struct.jxl::Token"* %1044 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1054, i8* align 4 %1055, i64 %1047, i1 false) #9
  %1056 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1043, align 8
  br label %1057

1057:                                             ; preds = %1053, %1033
  %1058 = phi %"struct.jxl::Token"* [ %1044, %1033 ], [ %1056, %1053 ]
  store i64 %1051, i64* %1007, align 8
  store i64 %1042, i64* %1006, align 8
  store i64 %1038, i64* %1016, align 8
  %1059 = icmp eq %"struct.jxl::Token"* %1058, null
  br i1 %1059, label %1062, label %1060

1060:                                             ; preds = %1057
  %1061 = bitcast %"struct.jxl::Token"* %1058 to i8*
  tail call void @_ZdlPv(i8* %1061) #19
  br label %1062

1062:                                             ; preds = %998, %1057, %1060, %834, %895, %898
  %1063 = load %"struct.jxl::PassesSharedState"*, %"struct.jxl::PassesSharedState"** %70, align 8
  %1064 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %1063, i64 0, i32 0
  %1065 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %1064, align 8
  %1066 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %1065, i64 0, i32 0, i32 17
  %1067 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %1065, i64 0, i32 0, i32 17, i32 0, i32 1
  %1068 = bitcast %"struct.jxl::ExtraChannelInfo"** %1067 to i64*
  %1069 = load i64, i64* %1068, align 8
  %1070 = bitcast %"class.std::__1::vector.18"* %1066 to i64*
  %1071 = load i64, i64* %1070, align 8
  %1072 = sub i64 %1069, %1071
  %1073 = sdiv exact i64 %1072, 96
  %1074 = add nsw i64 %1073, 1
  %1075 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %746, i64 %745, i32 2
  %1076 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %746, i64 %745, i32 2, i32 0, i32 1
  %1077 = bitcast %"struct.jxl::PatchBlending"** %1076 to i64*
  %1078 = load i64, i64* %1077, align 8
  %1079 = bitcast %"class.std::__1::vector.0"* %1075 to i64*
  %1080 = load i64, i64* %1079, align 8
  %1081 = sub i64 %1078, %1080
  %1082 = sdiv exact i64 %1081, 12
  %1083 = icmp eq i64 %1074, %1082
  %1084 = inttoptr i64 %1080 to %"struct.jxl::PatchBlending"*
  br i1 %1083, label %1085, label %1089

1085:                                             ; preds = %1062
  %1086 = icmp eq i64 %1072, -96
  br i1 %1086, label %1092, label %1087

1087:                                             ; preds = %1085
  %1088 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1075, i64 0, i32 0, i32 0
  br label %1095

1089:                                             ; preds = %1062
  %1090 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 98, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.4, i64 0, i64 0)) #9
  %1091 = tail call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

1092:                                             ; preds = %1346, %1085
  %1093 = add nuw i64 %745, 1
  %1094 = icmp eq i64 %1093, %275
  br i1 %1094, label %109, label %744

1095:                                             ; preds = %1361, %1087
  %1096 = phi %"struct.jxl::PatchBlending"* [ %1084, %1087 ], [ %1362, %1361 ]
  %1097 = phi i64 [ 0, %1087 ], [ %1347, %1361 ]
  %1098 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %1096, i64 %1097, i32 0
  %1099 = load i8, i8* %1098, align 4
  %1100 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %1101 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1100, i64 0, i32 0, i32 1
  %1102 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1101, align 8
  %1103 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1100, i64 0, i32 0, i32 2, i32 0, i32 0
  %1104 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1103, align 8
  %1105 = icmp ult %"struct.jxl::Token"* %1102, %1104
  %1106 = ptrtoint %"struct.jxl::Token"* %1104 to i64
  br i1 %1105, label %1107, label %1114

1107:                                             ; preds = %1095
  %1108 = zext i8 %1099 to i32
  %1109 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1102, i64 0, i32 0
  store i32 10, i32* %1109, align 4
  %1110 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1102, i64 0, i32 1
  store i32 %1108, i32* %1110, align 4
  %1111 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1102, i64 1
  %1112 = ptrtoint %"struct.jxl::Token"* %1111 to i64
  %1113 = bitcast %"struct.jxl::Token"** %1101 to i64*
  store i64 %1112, i64* %1113, align 8
  br label %1173

1114:                                             ; preds = %1095
  %1115 = ptrtoint %"struct.jxl::Token"* %1102 to i64
  %1116 = bitcast %"struct.jxl::Token"** %1101 to i64*
  %1117 = bitcast %"class.std::__1::vector.201"* %1100 to i64*
  %1118 = load i64, i64* %1117, align 8
  %1119 = sub i64 %1115, %1118
  %1120 = ashr exact i64 %1119, 3
  %1121 = add nsw i64 %1120, 1
  %1122 = icmp ugt i64 %1121, 2305843009213693951
  br i1 %1122, label %1123, label %1125

1123:                                             ; preds = %1114
  %1124 = bitcast %"class.std::__1::vector.201"* %1100 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1124) #18
  unreachable

1125:                                             ; preds = %1114
  %1126 = bitcast %"struct.jxl::Token"** %1103 to i64*
  %1127 = sub i64 %1106, %1118
  %1128 = ashr exact i64 %1127, 3
  %1129 = icmp ult i64 %1128, 1152921504606846975
  br i1 %1129, label %1130, label %1138

1130:                                             ; preds = %1125
  %1131 = ashr exact i64 %1127, 2
  %1132 = icmp ult i64 %1131, %1121
  %1133 = select i1 %1132, i64 %1121, i64 %1131
  %1134 = icmp eq i64 %1133, 0
  br i1 %1134, label %1143, label %1135

1135:                                             ; preds = %1130
  %1136 = icmp ugt i64 %1133, 2305843009213693951
  br i1 %1136, label %1137, label %1138

1137:                                             ; preds = %1135
  tail call void @abort() #18
  unreachable

1138:                                             ; preds = %1135, %1125
  %1139 = phi i64 [ %1133, %1135 ], [ 2305843009213693951, %1125 ]
  %1140 = shl i64 %1139, 3
  %1141 = tail call i8* @_Znwm(i64 %1140) #19
  %1142 = bitcast i8* %1141 to %"struct.jxl::Token"*
  br label %1143

1143:                                             ; preds = %1138, %1130
  %1144 = phi i64 [ %1139, %1138 ], [ 0, %1130 ]
  %1145 = phi %"struct.jxl::Token"* [ %1142, %1138 ], [ null, %1130 ]
  %1146 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1145, i64 %1120
  %1147 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1145, i64 %1144
  %1148 = ptrtoint %"struct.jxl::Token"* %1147 to i64
  %1149 = zext i8 %1099 to i32
  %1150 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1146, i64 0, i32 0
  store i32 10, i32* %1150, align 4
  %1151 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1145, i64 %1120, i32 1
  store i32 %1149, i32* %1151, align 4
  %1152 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1146, i64 1
  %1153 = ptrtoint %"struct.jxl::Token"* %1152 to i64
  %1154 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1100, i64 0, i32 0, i32 0
  %1155 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1154, align 8
  %1156 = load i64, i64* %1116, align 8
  %1157 = ptrtoint %"struct.jxl::Token"* %1155 to i64
  %1158 = sub i64 %1156, %1157
  %1159 = ashr exact i64 %1158, 3
  %1160 = sub nsw i64 0, %1159
  %1161 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1146, i64 %1160
  %1162 = ptrtoint %"struct.jxl::Token"* %1161 to i64
  %1163 = icmp sgt i64 %1158, 0
  br i1 %1163, label %1164, label %1168

1164:                                             ; preds = %1143
  %1165 = bitcast %"struct.jxl::Token"* %1161 to i8*
  %1166 = bitcast %"struct.jxl::Token"* %1155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1165, i8* align 4 %1166, i64 %1158, i1 false) #9
  %1167 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1154, align 8
  br label %1168

1168:                                             ; preds = %1164, %1143
  %1169 = phi %"struct.jxl::Token"* [ %1155, %1143 ], [ %1167, %1164 ]
  store i64 %1162, i64* %1117, align 8
  store i64 %1153, i64* %1116, align 8
  store i64 %1148, i64* %1126, align 8
  %1170 = icmp eq %"struct.jxl::Token"* %1169, null
  br i1 %1170, label %1173, label %1171

1171:                                             ; preds = %1168
  %1172 = bitcast %"struct.jxl::Token"* %1169 to i8*
  tail call void @_ZdlPv(i8* %1172) #19
  br label %1173

1173:                                             ; preds = %1171, %1168, %1107
  %1174 = load i8, i8* %1098, align 4
  %1175 = and i8 %1174, -4
  %1176 = icmp eq i8 %1175, 4
  br i1 %1176, label %1177, label %1264

1177:                                             ; preds = %1173
  %1178 = load %"struct.jxl::PassesSharedState"*, %"struct.jxl::PassesSharedState"** %70, align 8
  %1179 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %1178, i64 0, i32 0
  %1180 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %1179, align 8
  %1181 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %1180, i64 0, i32 0, i32 17
  %1182 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %1180, i64 0, i32 0, i32 17, i32 0, i32 1
  %1183 = bitcast %"struct.jxl::ExtraChannelInfo"** %1182 to i64*
  %1184 = load i64, i64* %1183, align 8
  %1185 = bitcast %"class.std::__1::vector.18"* %1181 to i64*
  %1186 = load i64, i64* %1185, align 8
  %1187 = sub i64 %1184, %1186
  %1188 = sdiv exact i64 %1187, 96
  %1189 = icmp ugt i64 %1188, 1
  br i1 %1189, label %1190, label %1264

1190:                                             ; preds = %1177
  %1191 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %1096, i64 %1097, i32 1
  %1192 = load i32, i32* %1191, align 4
  %1193 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %1194 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1193, i64 0, i32 0, i32 1
  %1195 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1194, align 8
  %1196 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1193, i64 0, i32 0, i32 2, i32 0, i32 0
  %1197 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1196, align 8
  %1198 = icmp ult %"struct.jxl::Token"* %1195, %1197
  %1199 = ptrtoint %"struct.jxl::Token"* %1197 to i64
  br i1 %1198, label %1200, label %1206

1200:                                             ; preds = %1190
  %1201 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1195, i64 0, i32 0
  store i32 16, i32* %1201, align 4
  %1202 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1195, i64 0, i32 1
  store i32 %1192, i32* %1202, align 4
  %1203 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1195, i64 1
  %1204 = ptrtoint %"struct.jxl::Token"* %1203 to i64
  %1205 = bitcast %"struct.jxl::Token"** %1194 to i64*
  store i64 %1204, i64* %1205, align 8
  br label %1264

1206:                                             ; preds = %1190
  %1207 = ptrtoint %"struct.jxl::Token"* %1195 to i64
  %1208 = bitcast %"struct.jxl::Token"** %1194 to i64*
  %1209 = bitcast %"class.std::__1::vector.201"* %1193 to i64*
  %1210 = load i64, i64* %1209, align 8
  %1211 = sub i64 %1207, %1210
  %1212 = ashr exact i64 %1211, 3
  %1213 = add nsw i64 %1212, 1
  %1214 = icmp ugt i64 %1213, 2305843009213693951
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1206
  %1216 = bitcast %"class.std::__1::vector.201"* %1193 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1216) #18
  unreachable

1217:                                             ; preds = %1206
  %1218 = bitcast %"struct.jxl::Token"** %1196 to i64*
  %1219 = sub i64 %1199, %1210
  %1220 = ashr exact i64 %1219, 3
  %1221 = icmp ult i64 %1220, 1152921504606846975
  br i1 %1221, label %1222, label %1230

1222:                                             ; preds = %1217
  %1223 = ashr exact i64 %1219, 2
  %1224 = icmp ult i64 %1223, %1213
  %1225 = select i1 %1224, i64 %1213, i64 %1223
  %1226 = icmp eq i64 %1225, 0
  br i1 %1226, label %1235, label %1227

1227:                                             ; preds = %1222
  %1228 = icmp ugt i64 %1225, 2305843009213693951
  br i1 %1228, label %1229, label %1230

1229:                                             ; preds = %1227
  tail call void @abort() #18
  unreachable

1230:                                             ; preds = %1227, %1217
  %1231 = phi i64 [ %1225, %1227 ], [ 2305843009213693951, %1217 ]
  %1232 = shl i64 %1231, 3
  %1233 = tail call i8* @_Znwm(i64 %1232) #19
  %1234 = bitcast i8* %1233 to %"struct.jxl::Token"*
  br label %1235

1235:                                             ; preds = %1230, %1222
  %1236 = phi i64 [ %1231, %1230 ], [ 0, %1222 ]
  %1237 = phi %"struct.jxl::Token"* [ %1234, %1230 ], [ null, %1222 ]
  %1238 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1237, i64 %1212
  %1239 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1237, i64 %1236
  %1240 = ptrtoint %"struct.jxl::Token"* %1239 to i64
  %1241 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1238, i64 0, i32 0
  store i32 16, i32* %1241, align 4
  %1242 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1237, i64 %1212, i32 1
  store i32 %1192, i32* %1242, align 4
  %1243 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1238, i64 1
  %1244 = ptrtoint %"struct.jxl::Token"* %1243 to i64
  %1245 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1193, i64 0, i32 0, i32 0
  %1246 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1245, align 8
  %1247 = load i64, i64* %1208, align 8
  %1248 = ptrtoint %"struct.jxl::Token"* %1246 to i64
  %1249 = sub i64 %1247, %1248
  %1250 = ashr exact i64 %1249, 3
  %1251 = sub nsw i64 0, %1250
  %1252 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1238, i64 %1251
  %1253 = ptrtoint %"struct.jxl::Token"* %1252 to i64
  %1254 = icmp sgt i64 %1249, 0
  br i1 %1254, label %1255, label %1259

1255:                                             ; preds = %1235
  %1256 = bitcast %"struct.jxl::Token"* %1252 to i8*
  %1257 = bitcast %"struct.jxl::Token"* %1246 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1256, i8* align 4 %1257, i64 %1249, i1 false) #9
  %1258 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1245, align 8
  br label %1259

1259:                                             ; preds = %1255, %1235
  %1260 = phi %"struct.jxl::Token"* [ %1246, %1235 ], [ %1258, %1255 ]
  store i64 %1253, i64* %1209, align 8
  store i64 %1244, i64* %1208, align 8
  store i64 %1240, i64* %1218, align 8
  %1261 = icmp eq %"struct.jxl::Token"* %1260, null
  br i1 %1261, label %1264, label %1262

1262:                                             ; preds = %1259
  %1263 = bitcast %"struct.jxl::Token"* %1260 to i8*
  tail call void @_ZdlPv(i8* %1263) #19
  br label %1264

1264:                                             ; preds = %1200, %1259, %1262, %1177, %1173
  %1265 = load i8, i8* %1098, align 4
  %1266 = and i8 %1265, -4
  %1267 = icmp eq i8 %1266, 4
  %1268 = icmp eq i8 %1265, 3
  %1269 = or i1 %1268, %1267
  br i1 %1269, label %1270, label %1346

1270:                                             ; preds = %1264
  %1271 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %1096, i64 %1097, i32 2
  %1272 = load i8, i8* %1271, align 4, !range !14
  %1273 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %21, align 8
  %1274 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1273, i64 0, i32 0, i32 1
  %1275 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1274, align 8
  %1276 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1273, i64 0, i32 0, i32 2, i32 0, i32 0
  %1277 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1276, align 8
  %1278 = icmp ult %"struct.jxl::Token"* %1275, %1277
  %1279 = ptrtoint %"struct.jxl::Token"* %1277 to i64
  br i1 %1278, label %1280, label %1287

1280:                                             ; preds = %1270
  %1281 = zext i8 %1272 to i32
  %1282 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1275, i64 0, i32 0
  store i32 18, i32* %1282, align 4
  %1283 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1275, i64 0, i32 1
  store i32 %1281, i32* %1283, align 4
  %1284 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1275, i64 1
  %1285 = ptrtoint %"struct.jxl::Token"* %1284 to i64
  %1286 = bitcast %"struct.jxl::Token"** %1274 to i64*
  store i64 %1285, i64* %1286, align 8
  br label %1346

1287:                                             ; preds = %1270
  %1288 = ptrtoint %"struct.jxl::Token"* %1275 to i64
  %1289 = bitcast %"struct.jxl::Token"** %1274 to i64*
  %1290 = bitcast %"class.std::__1::vector.201"* %1273 to i64*
  %1291 = load i64, i64* %1290, align 8
  %1292 = sub i64 %1288, %1291
  %1293 = ashr exact i64 %1292, 3
  %1294 = add nsw i64 %1293, 1
  %1295 = icmp ugt i64 %1294, 2305843009213693951
  br i1 %1295, label %1296, label %1298

1296:                                             ; preds = %1287
  %1297 = bitcast %"class.std::__1::vector.201"* %1273 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1297) #18
  unreachable

1298:                                             ; preds = %1287
  %1299 = bitcast %"struct.jxl::Token"** %1276 to i64*
  %1300 = sub i64 %1279, %1291
  %1301 = ashr exact i64 %1300, 3
  %1302 = icmp ult i64 %1301, 1152921504606846975
  br i1 %1302, label %1303, label %1311

1303:                                             ; preds = %1298
  %1304 = ashr exact i64 %1300, 2
  %1305 = icmp ult i64 %1304, %1294
  %1306 = select i1 %1305, i64 %1294, i64 %1304
  %1307 = icmp eq i64 %1306, 0
  br i1 %1307, label %1316, label %1308

1308:                                             ; preds = %1303
  %1309 = icmp ugt i64 %1306, 2305843009213693951
  br i1 %1309, label %1310, label %1311

1310:                                             ; preds = %1308
  tail call void @abort() #18
  unreachable

1311:                                             ; preds = %1308, %1298
  %1312 = phi i64 [ %1306, %1308 ], [ 2305843009213693951, %1298 ]
  %1313 = shl i64 %1312, 3
  %1314 = tail call i8* @_Znwm(i64 %1313) #19
  %1315 = bitcast i8* %1314 to %"struct.jxl::Token"*
  br label %1316

1316:                                             ; preds = %1311, %1303
  %1317 = phi i64 [ %1312, %1311 ], [ 0, %1303 ]
  %1318 = phi %"struct.jxl::Token"* [ %1315, %1311 ], [ null, %1303 ]
  %1319 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1318, i64 %1293
  %1320 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1318, i64 %1317
  %1321 = ptrtoint %"struct.jxl::Token"* %1320 to i64
  %1322 = zext i8 %1272 to i32
  %1323 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1319, i64 0, i32 0
  store i32 18, i32* %1323, align 4
  %1324 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1318, i64 %1293, i32 1
  store i32 %1322, i32* %1324, align 4
  %1325 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1319, i64 1
  %1326 = ptrtoint %"struct.jxl::Token"* %1325 to i64
  %1327 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1273, i64 0, i32 0, i32 0
  %1328 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1327, align 8
  %1329 = load i64, i64* %1289, align 8
  %1330 = ptrtoint %"struct.jxl::Token"* %1328 to i64
  %1331 = sub i64 %1329, %1330
  %1332 = ashr exact i64 %1331, 3
  %1333 = sub nsw i64 0, %1332
  %1334 = getelementptr inbounds %"struct.jxl::Token", %"struct.jxl::Token"* %1319, i64 %1333
  %1335 = ptrtoint %"struct.jxl::Token"* %1334 to i64
  %1336 = icmp sgt i64 %1331, 0
  br i1 %1336, label %1337, label %1341

1337:                                             ; preds = %1316
  %1338 = bitcast %"struct.jxl::Token"* %1334 to i8*
  %1339 = bitcast %"struct.jxl::Token"* %1328 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1338, i8* align 4 %1339, i64 %1331, i1 false) #9
  %1340 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %1327, align 8
  br label %1341

1341:                                             ; preds = %1337, %1316
  %1342 = phi %"struct.jxl::Token"* [ %1328, %1316 ], [ %1340, %1337 ]
  store i64 %1335, i64* %1290, align 8
  store i64 %1326, i64* %1289, align 8
  store i64 %1321, i64* %1299, align 8
  %1343 = icmp eq %"struct.jxl::Token"* %1342, null
  br i1 %1343, label %1346, label %1344

1344:                                             ; preds = %1341
  %1345 = bitcast %"struct.jxl::Token"* %1342 to i8*
  tail call void @_ZdlPv(i8* %1345) #19
  br label %1346

1346:                                             ; preds = %1280, %1341, %1344, %1264
  %1347 = add nuw i64 %1097, 1
  %1348 = load %"struct.jxl::PassesSharedState"*, %"struct.jxl::PassesSharedState"** %70, align 8
  %1349 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %1348, i64 0, i32 0
  %1350 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %1349, align 8
  %1351 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %1350, i64 0, i32 0, i32 17
  %1352 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %1350, i64 0, i32 0, i32 17, i32 0, i32 1
  %1353 = bitcast %"struct.jxl::ExtraChannelInfo"** %1352 to i64*
  %1354 = load i64, i64* %1353, align 8
  %1355 = bitcast %"class.std::__1::vector.18"* %1351 to i64*
  %1356 = load i64, i64* %1355, align 8
  %1357 = sub i64 %1354, %1356
  %1358 = sdiv exact i64 %1357, 96
  %1359 = add nsw i64 %1358, 1
  %1360 = icmp ult i64 %1347, %1359
  br i1 %1360, label %1361, label %1092

1361:                                             ; preds = %1346
  %1362 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %1088, align 8
  br label %1095
}

declare zeroext i1 @_ZN3jxl5DebugEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: noreturn
declare zeroext i1 @_ZN3jxl5AbortEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i64 @_ZN3jxl24BuildAndEncodeHistogramsERKNS_15HistogramParamsEmRNSt3__16vectorINS4_INS_5TokenENS3_9allocatorIS5_EEEENS6_IS8_EEEEPNS_19EntropyEncodingDataEPNS4_IhNS6_IhEEEEPNS_9BitWriterEmPNS_6AuxOutE(%"struct.jxl::HistogramParams"* dereferenceable(56), i64, %"class.std::__1::vector.199"* dereferenceable(24), %"struct.jxl::EntropyEncodingData"*, %"class.std::__1::vector.98"*, %"struct.jxl::BitWriter"*, i64, %"struct.jxl::AuxOut"*) local_unnamed_addr #1

declare void @_ZN3jxl11WriteTokensERKNSt3__16vectorINS_5TokenENS0_9allocatorIS2_EEEERKNS_19EntropyEncodingDataERKNS1_IhNS3_IhEEEEPNS_9BitWriterEmPNS_6AuxOutE(%"class.std::__1::vector.201"* dereferenceable(24), %"struct.jxl::EntropyEncodingData"* dereferenceable(104), %"class.std::__1::vector.98"* dereferenceable(24), %"struct.jxl::BitWriter"*, i64, %"struct.jxl::AuxOut"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl22PatchDictionaryEncoder12SubtractFromERKNS_15PatchDictionaryEPNS_6Image3IfEE(%"class.jxl::PatchDictionary"* nocapture readonly dereferenceable(80), %"class.jxl::Image3"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  %10 = bitcast %"class.std::__1::vector.8"* %7 to i64*
  %11 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 0, i32 0, i32 4
  %12 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %7, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %0, i64 0, i32 0
  %19 = load i64, i64* %10, align 8
  %20 = inttoptr i64 %19 to i64*
  br label %22

21:                                               ; preds = %170, %2
  ret void

22:                                               ; preds = %6, %170
  %23 = phi i32 [ %4, %6 ], [ %171, %170 ]
  %24 = phi i32 [ %4, %6 ], [ %172, %170 ]
  %25 = phi i64* [ %20, %6 ], [ %173, %170 ]
  %26 = phi i64* [ %20, %6 ], [ %174, %170 ]
  %27 = phi i64 [ %19, %6 ], [ %175, %170 ]
  %28 = phi i64 [ 0, %6 ], [ %29, %170 ]
  %29 = add nuw nsw i64 %28, 1
  %30 = load i64, i64* %9, align 8
  %31 = sub i64 %30, %27
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %29, %32
  br i1 %33, label %34, label %170

34:                                               ; preds = %22
  %35 = load i64, i64* %11, align 8
  %36 = mul i64 %35, %28
  %37 = load i8*, i8** %12, align 8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, 63
  %40 = icmp eq i64 %39, 0
  tail call void @llvm.assume(i1 %40) #9
  %41 = getelementptr inbounds i8, i8* %37, i64 %36
  %42 = ptrtoint i8* %41 to i64
  %43 = and i64 %42, 63
  %44 = icmp eq i64 %43, 0
  tail call void @llvm.assume(i1 %44) #9
  %45 = load i8*, i8** %13, align 8
  %46 = ptrtoint i8* %45 to i64
  %47 = and i64 %46, 63
  %48 = icmp eq i64 %47, 0
  tail call void @llvm.assume(i1 %48) #9
  %49 = getelementptr inbounds i8, i8* %45, i64 %36
  %50 = ptrtoint i8* %49 to i64
  %51 = and i64 %50, 63
  %52 = icmp eq i64 %51, 0
  tail call void @llvm.assume(i1 %52) #9
  %53 = load i8*, i8** %14, align 8
  %54 = ptrtoint i8* %53 to i64
  %55 = and i64 %54, 63
  %56 = icmp eq i64 %55, 0
  tail call void @llvm.assume(i1 %56) #9
  %57 = getelementptr inbounds i8, i8* %53, i64 %36
  %58 = ptrtoint i8* %57 to i64
  %59 = and i64 %58, 63
  %60 = icmp eq i64 %59, 0
  tail call void @llvm.assume(i1 %60) #9
  %61 = getelementptr inbounds i64, i64* %26, i64 %28
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i64, i64* %26, i64 %29
  %64 = load i64, i64* %63, align 8
  %65 = icmp ult i64 %62, %64
  %66 = bitcast i8* %41 to float*
  %67 = bitcast i8* %49 to float*
  %68 = bitcast i8* %57 to float*
  br i1 %65, label %76, label %71

69:                                               ; preds = %147
  %70 = load i32, i32* %3, align 4
  br label %71

71:                                               ; preds = %69, %34
  %72 = phi i32 [ %70, %69 ], [ %23, %34 ]
  %73 = phi i64* [ %148, %69 ], [ %25, %34 ]
  %74 = phi i64* [ %148, %69 ], [ %26, %34 ]
  %75 = ptrtoint i64* %74 to i64
  br label %170

76:                                               ; preds = %34, %147
  %77 = phi i64* [ %148, %147 ], [ %25, %34 ]
  %78 = phi i64 [ %149, %147 ], [ %62, %34 ]
  %79 = load i64*, i64** %16, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 %78
  %81 = load i64, i64* %80, align 8
  %82 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %17, align 8
  %83 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %82, i64 %81, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %82, i64 %81, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %82, i64 %81, i32 3, i32 3
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %28, %84
  %90 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %82, i64 %81, i32 3, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = load %"struct.jxl::PassesSharedState"*, %"struct.jxl::PassesSharedState"** %18, align 8
  %93 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %92, i64 0, i32 17, i64 %91, i32 1
  %94 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %93, align 8
  %95 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %82, i64 %81, i32 3, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %89, %96
  %98 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %94, i64 0, i32 10, i32 0, i64 0, i32 0, i32 4
  %99 = load i64, i64* %98, align 8
  %100 = mul i64 %99, %97
  %101 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %94, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = ptrtoint i8* %102 to i64
  %104 = and i64 %103, 63
  %105 = icmp eq i64 %104, 0
  tail call void @llvm.assume(i1 %105) #9
  %106 = getelementptr inbounds i8, i8* %102, i64 %100
  %107 = ptrtoint i8* %106 to i64
  %108 = and i64 %107, 63
  %109 = icmp eq i64 %108, 0
  tail call void @llvm.assume(i1 %109) #9
  %110 = bitcast i8* %106 to float*
  %111 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %82, i64 %81, i32 3, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds float, float* %110, i64 %112
  %114 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %94, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = ptrtoint i8* %115 to i64
  %117 = and i64 %116, 63
  %118 = icmp eq i64 %117, 0
  tail call void @llvm.assume(i1 %118) #9
  %119 = getelementptr inbounds i8, i8* %115, i64 %100
  %120 = ptrtoint i8* %119 to i64
  %121 = and i64 %120, 63
  %122 = icmp eq i64 %121, 0
  tail call void @llvm.assume(i1 %122) #9
  %123 = bitcast i8* %119 to float*
  %124 = getelementptr inbounds float, float* %123, i64 %112
  %125 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %94, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = ptrtoint i8* %126 to i64
  %128 = and i64 %127, 63
  %129 = icmp eq i64 %128, 0
  tail call void @llvm.assume(i1 %129) #9
  %130 = getelementptr inbounds i8, i8* %126, i64 %100
  %131 = ptrtoint i8* %130 to i64
  %132 = and i64 %131, 63
  %133 = icmp eq i64 %132, 0
  tail call void @llvm.assume(i1 %133) #9
  %134 = bitcast i8* %130 to float*
  %135 = getelementptr inbounds float, float* %134, i64 %112
  %136 = icmp eq i64 %88, 0
  br i1 %136, label %147, label %137

137:                                              ; preds = %76
  %138 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %82, i64 %81, i32 2, i32 0, i32 0
  br label %139

139:                                              ; preds = %198, %137
  %140 = phi i64 [ 0, %137 ], [ %199, %198 ]
  %141 = add i64 %140, %86
  %142 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %138, align 8
  %143 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %142, i64 0, i32 0
  %144 = load i8, i8* %143, align 4
  switch i8 %144, label %161 [
    i8 2, label %153
    i8 1, label %159
    i8 0, label %166
  ]

145:                                              ; preds = %198
  %146 = load i64*, i64** %15, align 8
  br label %147

147:                                              ; preds = %145, %76
  %148 = phi i64* [ %146, %145 ], [ %77, %76 ]
  %149 = add nuw i64 %78, 1
  %150 = getelementptr inbounds i64, i64* %148, i64 %29
  %151 = load i64, i64* %150, align 8
  %152 = icmp ult i64 %149, %151
  br i1 %152, label %76, label %69

153:                                              ; preds = %139
  %154 = getelementptr inbounds float, float* %113, i64 %140
  %155 = load float, float* %154, align 4
  %156 = getelementptr inbounds float, float* %66, i64 %141
  %157 = load float, float* %156, align 4
  %158 = fsub float %157, %155
  store float %158, float* %156, align 4
  br label %166

159:                                              ; preds = %139
  %160 = getelementptr inbounds float, float* %66, i64 %141
  store float 0.000000e+00, float* %160, align 4
  br label %166

161:                                              ; preds = %186, %166, %139
  %162 = phi i8 [ %144, %139 ], [ %169, %166 ], [ %189, %186 ]
  %163 = zext i8 %162 to i32
  %164 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 164, i32 %163) #9
  %165 = tail call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

166:                                              ; preds = %139, %153, %159
  %167 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %138, align 8
  %168 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %167, i64 0, i32 0
  %169 = load i8, i8* %168, align 4
  switch i8 %169, label %161 [
    i8 2, label %180
    i8 1, label %178
    i8 0, label %186
  ]

170:                                              ; preds = %22, %71
  %171 = phi i32 [ %23, %22 ], [ %72, %71 ]
  %172 = phi i32 [ %24, %22 ], [ %72, %71 ]
  %173 = phi i64* [ %25, %22 ], [ %73, %71 ]
  %174 = phi i64* [ %26, %22 ], [ %74, %71 ]
  %175 = phi i64 [ %27, %22 ], [ %75, %71 ]
  %176 = zext i32 %172 to i64
  %177 = icmp ult i64 %29, %176
  br i1 %177, label %22, label %21

178:                                              ; preds = %166
  %179 = getelementptr inbounds float, float* %67, i64 %141
  store float 0.000000e+00, float* %179, align 4
  br label %186

180:                                              ; preds = %166
  %181 = getelementptr inbounds float, float* %124, i64 %140
  %182 = load float, float* %181, align 4
  %183 = getelementptr inbounds float, float* %67, i64 %141
  %184 = load float, float* %183, align 4
  %185 = fsub float %184, %182
  store float %185, float* %183, align 4
  br label %186

186:                                              ; preds = %180, %178, %166
  %187 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %138, align 8
  %188 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %187, i64 0, i32 0
  %189 = load i8, i8* %188, align 4
  switch i8 %189, label %161 [
    i8 2, label %192
    i8 1, label %190
    i8 0, label %198
  ]

190:                                              ; preds = %186
  %191 = getelementptr inbounds float, float* %68, i64 %141
  store float 0.000000e+00, float* %191, align 4
  br label %198

192:                                              ; preds = %186
  %193 = getelementptr inbounds float, float* %135, i64 %140
  %194 = load float, float* %193, align 4
  %195 = getelementptr inbounds float, float* %68, i64 %141
  %196 = load float, float* %195, align 4
  %197 = fsub float %196, %194
  store float %197, float* %195, align 4
  br label %198

198:                                              ; preds = %192, %190, %186
  %199 = add nuw i64 %140, 1
  %200 = icmp eq i64 %199, %88
  br i1 %200, label %145, label %139
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl23FindBestPatchDictionaryERKNS_6Image3IfEEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb(%"class.jxl::Image3"* dereferenceable(96), %"struct.jxl::PassesEncoderState"* noalias, %"class.jxl::ThreadPool"*, %"struct.jxl::AuxOut"*, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"struct.std::__1::__less.471", align 1
  %7 = alloca %"struct.std::__1::__split_buffer.431", align 8
  %8 = alloca %"struct.std::__1::__less.434", align 1
  %9 = alloca %"class.jxl::ThreadPool::RunCallState", align 8
  %10 = alloca %"class.jxl::ThreadPool::RunCallState", align 8
  %11 = alloca double, align 8
  %12 = alloca %"class.jxl::ThreadPool", align 8
  %13 = alloca %"struct.std::__1::atomic.395", align 1
  %14 = alloca [3 x float*], align 16
  %15 = alloca %class.anon.399, align 8
  %16 = alloca %"class.jxl::Plane", align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %class.anon.401, align 8
  %20 = alloca %"class.jxl::Plane", align 8
  %21 = alloca %"class.jxl::Image3", align 8
  %22 = alloca %"class.std::__1::vector.402", align 8
  %23 = alloca %"class.jxl::Plane.97", align 8
  %24 = alloca %"class.std::__1::mersenne_twister_engine", align 8
  %25 = alloca %"class.jxl::Plane.97", align 8
  %26 = alloca %"class.std::__1::vector.268", align 8
  %27 = alloca %"class.jxl::Plane", align 8
  %28 = alloca %"class.std::__1::vector.284", align 8
  %29 = alloca %"class.std::__1::vector.284", align 8
  %30 = alloca float, align 4
  %31 = alloca float, align 4
  %32 = alloca %"class.std::__1::vector.268", align 16
  %33 = alloca %"class.std::__1::vector.268", align 16
  %34 = alloca %"class.std::__1::vector.298", align 8
  %35 = alloca %"class.jxl::Plane", align 8
  %36 = alloca %"class.jxl::Image3", align 8
  %37 = alloca %"class.std::__1::vector", align 16
  %38 = alloca [3 x float*], align 16
  %39 = alloca %"class.std::__1::vector.0", align 8
  %40 = alloca [3 x i8], align 1
  %41 = alloca [3 x i8], align 1
  %42 = alloca %"struct.jxl::PatchPosition", align 8
  %43 = alloca %"struct.jxl::CompressParams", align 8
  %44 = alloca %"struct.jxl::FrameInfo", align 8
  %45 = alloca %"class.jxl::ImageBundle", align 8
  %46 = alloca %"class.std::__1::vector.169", align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca %"struct.jxl::PassesEncoderState", align 8
  %50 = alloca %"class.std::__1::unique_ptr.243", align 8
  %51 = alloca %"class.jxl::BitReader", align 8
  %52 = alloca %"class.jxl::ImageBundle", align 8
  %53 = alloca %"struct.jxl::PassesDecoderState", align 8
  %54 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1
  %56 = bitcast %"class.jxl::PatchDictionary"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 1
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %57, i64 0, i32 0, i32 0
  %59 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %58, align 8
  %60 = icmp eq %"struct.jxl::PatchPosition"* %59, null
  br i1 %60, label %85, label %61

61:                                               ; preds = %5
  %62 = bitcast %"struct.jxl::PatchPosition"* %59 to i8*
  %63 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 1, i32 0, i32 1
  %64 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %63, align 8
  %65 = icmp eq %"struct.jxl::PatchPosition"* %64, %59
  br i1 %65, label %82, label %66

66:                                               ; preds = %61, %77
  %67 = phi %"struct.jxl::PatchPosition"* [ %68, %77 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %67, i64 -1, i32 2, i32 0, i32 0
  %70 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %69, align 8
  %71 = icmp eq %"struct.jxl::PatchBlending"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %66
  %73 = ptrtoint %"struct.jxl::PatchBlending"* %70 to i64
  %74 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %67, i64 -1, i32 2, i32 0, i32 1
  %75 = bitcast %"struct.jxl::PatchBlending"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %70, i64 0, i32 0
  tail call void @_ZdlPv(i8* %76) #19
  br label %77

77:                                               ; preds = %72, %66
  %78 = icmp eq %"struct.jxl::PatchPosition"* %68, %59
  br i1 %78, label %79, label %66

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::vector"* %57 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %61
  %83 = phi i8* [ %81, %79 ], [ %62, %61 ]
  store %"struct.jxl::PatchPosition"* %59, %"struct.jxl::PatchPosition"** %63, align 8
  tail call void @_ZdlPv(i8* %83) #19
  %84 = bitcast %"class.std::__1::vector"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9
  br label %85

85:                                               ; preds = %82, %5
  %86 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 1, i32 0, i32 1
  %87 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast %"struct.jxl::PatchPosition"** %87 to i64*
  %89 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 2
  %90 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %89, i64 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::vector"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false)
  %92 = load i64*, i64** %90, align 8
  %93 = icmp eq i64* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %85
  %95 = ptrtoint i64* %92 to i64
  %96 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 2, i32 0, i32 1
  %97 = bitcast i64** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast i64* %92 to i8*
  tail call void @_ZdlPv(i8* %98) #19
  %99 = bitcast %"class.std::__1::vector.8"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #9
  br label %100

100:                                              ; preds = %85, %94
  %101 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 3
  %102 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %101, i64 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::vector.8"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false)
  %104 = load i64*, i64** %102, align 8
  %105 = icmp eq i64* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %100
  %107 = ptrtoint i64* %104 to i64
  %108 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 9, i32 1, i32 3, i32 0, i32 1
  %109 = bitcast i64** %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = bitcast i64* %104 to i8*
  tail call void @_ZdlPv(i8* %110) #19
  %111 = bitcast %"class.std::__1::vector.8"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false) #9
  br label %112

112:                                              ; preds = %100, %106
  %113 = getelementptr inbounds %"class.jxl::PatchDictionary", %"class.jxl::PatchDictionary"* %55, i64 0, i32 0
  %114 = bitcast %"class.std::__1::vector.8"* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false)
  store %"struct.jxl::PassesSharedState"* %54, %"struct.jxl::PassesSharedState"** %113, align 8
  %115 = bitcast %"class.std::__1::vector.268"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #9
  %116 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %32, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %32, i64 0, i32 0, i32 1
  %118 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %32, i64 0, i32 0, i32 2, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 19
  %120 = bitcast %"class.std::__1::vector.268"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 24, i1 false)
  %121 = load i32, i32* %119, align 4, !alias.scope !15, !noalias !18
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %112
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %115, i8 0, i64 24, i1 false) #9, !alias.scope !18, !noalias !15
  br label %2290

124:                                              ; preds = %112
  %125 = select i1 %4, float 0x3F9089A020000000, float 0x3FB4141420000000
  %126 = select i1 %4, float 0x3FB6B851E0000000, float 0x3FB6161620000000
  %127 = select i1 %4, float 0x3FC89A0280000000, float 0x3FB4141420000000
  %128 = select i1 %4, float 3.000000e+01, float 0x4011570A40000000
  %129 = select i1 %4, float 3.000000e+00, float 0x4014666660000000
  %130 = select i1 %4, float 1.000000e+00, float 0x4011570A40000000
  %131 = getelementptr inbounds %"struct.std::__1::atomic.395", %"struct.std::__1::atomic.395"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %131) #9, !noalias !20
  store i8 0, i8* %131, align 1, !noalias !20
  %132 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 0, i32 0, i32 4
  %133 = load i64, i64* %132, align 8, !noalias !20
  %134 = lshr i64 %133, 2
  %135 = bitcast [3 x float*]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #9, !noalias !20
  %136 = getelementptr inbounds [3 x float*], [3 x float*]* %14, i64 0, i64 0
  %137 = getelementptr inbounds [3 x float*], [3 x float*]* %14, i64 0, i64 1
  %138 = getelementptr inbounds [3 x float*], [3 x float*]* %14, i64 0, i64 2
  %139 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8, !noalias !20
  %141 = ptrtoint i8* %140 to i64
  %142 = and i64 %141, 63
  %143 = icmp eq i64 %142, 0
  tail call void @llvm.assume(i1 %143) #9, !noalias !20
  %144 = bitcast [3 x float*]* %14 to i8**
  store i8* %140, i8** %144, align 16, !noalias !20
  %145 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8, !noalias !20
  %147 = ptrtoint i8* %146 to i64
  %148 = and i64 %147, 63
  %149 = icmp eq i64 %148, 0
  tail call void @llvm.assume(i1 %149) #9, !noalias !20
  %150 = bitcast float** %137 to i8**
  store i8* %146, i8** %150, align 8, !noalias !20
  %151 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8, !noalias !20
  %153 = ptrtoint i8* %152 to i64
  %154 = and i64 %153, 63
  %155 = icmp eq i64 %154, 0
  tail call void @llvm.assume(i1 %155) #9, !noalias !20
  %156 = bitcast float** %138 to i8**
  store i8* %152, i8** %156, align 16, !noalias !20
  %157 = bitcast %class.anon.399* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #9, !noalias !20
  %158 = getelementptr inbounds %class.anon.399, %class.anon.399* %15, i64 0, i32 0
  %159 = getelementptr inbounds %class.anon.399, %class.anon.399* %15, i64 0, i32 1
  store [3 x float*]* %14, [3 x float*]** %158, align 8, !noalias !20
  store i64 %134, i64* %159, align 8, !noalias !20
  %160 = bitcast %"class.jxl::Plane"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #9, !noalias !20
  %161 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %16, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %16, i64 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %16, i64 0, i32 0, i32 4
  %164 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %16, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 32, i1 false) #9, !noalias !20
  %166 = load i32, i32* %165, align 8, !noalias !20
  %167 = zext i32 %166 to i64
  %168 = add nuw nsw i64 %167, 3
  %169 = lshr i64 %168, 2
  %170 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 0, i32 0, i32 1
  %171 = load i32, i32* %170, align 4, !noalias !20
  %172 = zext i32 %171 to i64
  %173 = add nuw nsw i64 %172, 3
  %174 = lshr i64 %173, 2
  %175 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %16, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %175, i64 %169, i64 %174, i64 1) #9, !noalias !20
  %176 = load i32, i32* %161, align 8, !noalias !20
  %177 = icmp eq i32 %176, 0
  %178 = load i32, i32* %162, align 4, !noalias !20
  %179 = icmp eq i32 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %204, label %181

181:                                              ; preds = %124
  %182 = load i8*, i8** %164, align 8, !noalias !20
  %183 = ptrtoint i8* %182 to i64
  %184 = and i64 %183, 63
  %185 = icmp eq i64 %184, 0
  call void @llvm.assume(i1 %185) #9, !noalias !20
  %186 = zext i32 %176 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %182, i8 0, i64 %186, i1 false) #9, !noalias !20
  %187 = load i32, i32* %162, align 4, !noalias !20
  %188 = icmp ugt i32 %187, 1
  br i1 %188, label %189, label %204

189:                                              ; preds = %181, %189
  %190 = phi i64 [ %200, %189 ], [ 1, %181 ]
  %191 = load i32, i32* %161, align 8, !noalias !20
  %192 = load i8*, i8** %164, align 8, !noalias !20
  %193 = load i64, i64* %163, align 8, !noalias !20
  %194 = mul i64 %193, %190
  %195 = getelementptr inbounds i8, i8* %192, i64 %194
  %196 = ptrtoint i8* %195 to i64
  %197 = and i64 %196, 63
  %198 = icmp eq i64 %197, 0
  call void @llvm.assume(i1 %198) #9, !noalias !20
  %199 = zext i32 %191 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %195, i8 0, i64 %199, i1 false) #9, !noalias !20
  %200 = add nuw nsw i64 %190, 1
  %201 = load i32, i32* %162, align 4, !noalias !20
  %202 = zext i32 %201 to i64
  %203 = icmp ult i64 %200, %202
  br i1 %203, label %189, label %204

204:                                              ; preds = %189, %181, %124
  %205 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #9, !noalias !20
  %206 = load i8*, i8** %164, align 8, !noalias !20
  %207 = ptrtoint i8* %206 to i64
  %208 = and i64 %207, 63
  %209 = icmp eq i64 %208, 0
  call void @llvm.assume(i1 %209) #9, !noalias !20
  store i8* %206, i8** %17, align 8, !noalias !20
  %210 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #9, !noalias !20
  %211 = load i64, i64* %163, align 8, !noalias !20
  store i64 %211, i64* %18, align 8, !noalias !20
  %212 = bitcast %class.anon.401* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %212) #9, !noalias !20
  %213 = getelementptr inbounds %class.anon.401, %class.anon.401* %19, i64 0, i32 0
  %214 = getelementptr inbounds %class.anon.401, %class.anon.401* %19, i64 0, i32 1
  %215 = getelementptr inbounds %class.anon.401, %class.anon.401* %19, i64 0, i32 2
  %216 = getelementptr inbounds %class.anon.401, %class.anon.401* %19, i64 0, i32 3
  %217 = getelementptr inbounds %class.anon.401, %class.anon.401* %19, i64 0, i32 4
  store %"class.jxl::Image3"* %0, %"class.jxl::Image3"** %213, align 8, !noalias !20
  store %class.anon.399* %15, %class.anon.399** %214, align 8, !noalias !20
  store i8** %17, i8*** %215, align 8, !noalias !20
  store i64* %18, i64** %216, align 8, !noalias !20
  store %"struct.std::__1::atomic.395"* %13, %"struct.std::__1::atomic.395"** %217, align 8, !noalias !20
  %218 = load i32, i32* %170, align 4, !noalias !20
  %219 = lshr i32 %218, 2
  %220 = bitcast double* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #9, !noalias !20
  store double 0xFFFFFFFFFFFFFFFF, double* %11, align 8, !noalias !20
  call void @_ZN3jxl13TraceRunBeginEPKcPd(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), double* nonnull %11) #9, !noalias !20
  %221 = icmp eq %"class.jxl::ThreadPool"* %2, null
  br i1 %221, label %222, label %233

222:                                              ; preds = %204
  %223 = bitcast %"class.jxl::ThreadPool"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %223) #9, !noalias !20
  %224 = getelementptr inbounds %"class.jxl::ThreadPool", %"class.jxl::ThreadPool"* %12, i64 0, i32 0
  %225 = getelementptr inbounds %"class.jxl::ThreadPool", %"class.jxl::ThreadPool"* %12, i64 0, i32 1
  store i32 (i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32)* @_ZN3jxl10ThreadPool22SequentialRunnerStaticEPvS1_PFiS1_mEPFvS1_jmEjj, i32 (i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32)** %224, align 8, !noalias !20
  %226 = bitcast i8** %225 to %"class.jxl::ThreadPool"**
  store %"class.jxl::ThreadPool"* %12, %"class.jxl::ThreadPool"** %226, align 8, !noalias !20
  %227 = icmp eq i32 %219, 0
  br i1 %227, label %244, label %228

228:                                              ; preds = %222
  %229 = bitcast %"class.jxl::ThreadPool::RunCallState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %229) #9, !noalias !20
  %230 = getelementptr inbounds %"class.jxl::ThreadPool::RunCallState", %"class.jxl::ThreadPool::RunCallState"* %9, i64 0, i32 0
  %231 = getelementptr inbounds %"class.jxl::ThreadPool::RunCallState", %"class.jxl::ThreadPool::RunCallState"* %9, i64 0, i32 1
  store i32 (i64)* @_ZN3jxl10ThreadPool14ReturnTrueInitEm, i32 (i64)** %230, align 8, !noalias !20
  store %class.anon.401* %19, %class.anon.401** %231, align 8, !noalias !20
  %232 = call i32 @_ZN3jxl10ThreadPool22SequentialRunnerStaticEPvS1_PFiS1_mEPFvS1_jmEjj(i8* nonnull %223, i8* nonnull %229, i32 (i8*, i64)* nonnull @"_ZN3jxl10ThreadPool12RunCallStateIFNS_6StatusEmEZNS_12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPS0_PNS_6AuxOutEbE3$_2E12CallInitFuncEPvm", void (i8*, i32, i64)* nonnull @"_ZN3jxl10ThreadPool12RunCallStateIFNS_6StatusEmEZNS_12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPS0_PNS_6AuxOutEbE3$_2E12CallDataFuncEPvjm", i32 0, i32 %219) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %229) #9, !noalias !20
  br label %244

233:                                              ; preds = %204
  %234 = icmp eq i32 %219, 0
  br i1 %234, label %246, label %235

235:                                              ; preds = %233
  %236 = bitcast %"class.jxl::ThreadPool::RunCallState"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #9, !noalias !20
  %237 = getelementptr inbounds %"class.jxl::ThreadPool::RunCallState", %"class.jxl::ThreadPool::RunCallState"* %10, i64 0, i32 0
  %238 = getelementptr inbounds %"class.jxl::ThreadPool::RunCallState", %"class.jxl::ThreadPool::RunCallState"* %10, i64 0, i32 1
  store i32 (i64)* @_ZN3jxl10ThreadPool14ReturnTrueInitEm, i32 (i64)** %237, align 8, !noalias !20
  store %class.anon.401* %19, %class.anon.401** %238, align 8, !noalias !20
  %239 = getelementptr inbounds %"class.jxl::ThreadPool", %"class.jxl::ThreadPool"* %2, i64 0, i32 0
  %240 = load i32 (i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32)*, i32 (i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32)** %239, align 8, !noalias !20
  %241 = getelementptr inbounds %"class.jxl::ThreadPool", %"class.jxl::ThreadPool"* %2, i64 0, i32 1
  %242 = load i8*, i8** %241, align 8, !noalias !20
  %243 = call i32 %240(i8* %242, i8* nonnull %236, i32 (i8*, i64)* nonnull @"_ZN3jxl10ThreadPool12RunCallStateIFNS_6StatusEmEZNS_12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPS0_PNS_6AuxOutEbE3$_2E12CallInitFuncEPvm", void (i8*, i32, i64)* nonnull @"_ZN3jxl10ThreadPool12RunCallStateIFNS_6StatusEmEZNS_12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPS0_PNS_6AuxOutEbE3$_2E12CallDataFuncEPvjm", i32 0, i32 %219) #9, !noalias !20
  br label %244

244:                                              ; preds = %222, %228, %235
  %245 = phi i8* [ %236, %235 ], [ %223, %228 ], [ %223, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %245) #9, !noalias !20
  br label %246

246:                                              ; preds = %244, %233
  %247 = load double, double* %11, align 8, !noalias !20
  call void @_ZN3jxl11TraceRunEndEPKcd(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), double %247) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #9, !noalias !20
  %248 = icmp eq %"struct.jxl::AuxOut"* %3, null
  br i1 %248, label %264, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %3, i64 0, i32 15
  %251 = bitcast %"class.std::__1::basic_string"* %250 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1, !noalias !20
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %3, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %257 = load i64, i64* %256, align 8, !noalias !20
  br label %260

258:                                              ; preds = %249
  %259 = zext i8 %253 to i64
  br label %260

260:                                              ; preds = %258, %255
  %261 = phi i64 [ %257, %255 ], [ %259, %258 ]
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %264, label %263

263:                                              ; preds = %260
  call void @_ZNK3jxl6AuxOut19DumpPlaneNormalizedIhEEvPKcRKNS_5PlaneIT_EE(%"struct.jxl::AuxOut"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), %"class.jxl::Plane"* nonnull dereferenceable(32) %16) #9, !noalias !20
  br label %264

264:                                              ; preds = %263, %260, %246
  %265 = load atomic i8, i8* %131 seq_cst, align 1, !noalias !20
  switch i32 %121, label %266 [
    i32 1, label %270
    i32 0, label %269
  ]

266:                                              ; preds = %264
  %267 = and i8 %265, 1
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266, %264
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %115, i8 0, i64 24, i1 false) #9, !alias.scope !18, !noalias !15
  br label %2194

270:                                              ; preds = %266, %264
  %271 = bitcast %"class.jxl::Plane"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %271) #9, !noalias !20
  %272 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %20, i64 0, i32 0, i32 0
  %273 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %20, i64 0, i32 0, i32 1
  %274 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %20, i64 0, i32 0, i32 4
  %275 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %20, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %271, i8 -86, i64 32, i1 false) #9, !noalias !20
  %276 = load i32, i32* %165, align 8, !noalias !20
  %277 = zext i32 %276 to i64
  %278 = load i32, i32* %170, align 4, !noalias !20
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %20, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %280, i64 %277, i64 %279, i64 1) #9, !noalias !20
  %281 = load i32, i32* %272, align 8, !noalias !20
  %282 = icmp eq i32 %281, 0
  %283 = load i32, i32* %273, align 4, !noalias !20
  %284 = icmp eq i32 %283, 0
  %285 = or i1 %282, %284
  br i1 %285, label %309, label %286

286:                                              ; preds = %270
  %287 = load i8*, i8** %275, align 8, !noalias !20
  %288 = ptrtoint i8* %287 to i64
  %289 = and i64 %288, 63
  %290 = icmp eq i64 %289, 0
  call void @llvm.assume(i1 %290) #9, !noalias !20
  %291 = zext i32 %281 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %287, i8 0, i64 %291, i1 false) #9, !noalias !20
  %292 = load i32, i32* %273, align 4, !noalias !20
  %293 = icmp ugt i32 %292, 1
  br i1 %293, label %294, label %309

294:                                              ; preds = %286, %294
  %295 = phi i64 [ %305, %294 ], [ 1, %286 ]
  %296 = load i32, i32* %272, align 8, !noalias !20
  %297 = load i8*, i8** %275, align 8, !noalias !20
  %298 = load i64, i64* %274, align 8, !noalias !20
  %299 = mul i64 %298, %295
  %300 = getelementptr inbounds i8, i8* %297, i64 %299
  %301 = ptrtoint i8* %300 to i64
  %302 = and i64 %301, 63
  %303 = icmp eq i64 %302, 0
  call void @llvm.assume(i1 %303) #9, !noalias !20
  %304 = zext i32 %296 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %300, i8 0, i64 %304, i1 false) #9, !noalias !20
  %305 = add nuw nsw i64 %295, 1
  %306 = load i32, i32* %273, align 4, !noalias !20
  %307 = zext i32 %306 to i64
  %308 = icmp ult i64 %305, %307
  br i1 %308, label %294, label %309

309:                                              ; preds = %294, %286, %270
  %310 = bitcast %"class.jxl::Image3"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %310) #9, !noalias !20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 -86, i64 96, i1 false) #9, !noalias !20
  %311 = load i32, i32* %165, align 8, !noalias !20
  %312 = zext i32 %311 to i64
  %313 = load i32, i32* %170, align 4, !noalias !20
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %315, i64 %312, i64 %314, i64 4) #9, !noalias !20
  %316 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 1, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %316, i64 %312, i64 %314, i64 4) #9, !noalias !20
  %317 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 2, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %317, i64 %312, i64 %314, i64 4) #9, !noalias !20
  %318 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 0, i32 0, i32 1
  %319 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 0, i32 0, i32 4
  %320 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 0, i32 0, i32 0
  %321 = load i32, i32* %318, align 4, !noalias !20
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %390, label %323

323:                                              ; preds = %309
  %324 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %327

325:                                              ; preds = %327
  %326 = icmp eq i32 %343, 0
  br i1 %326, label %390, label %346

327:                                              ; preds = %327, %323
  %328 = phi i64 [ 0, %323 ], [ %342, %327 ]
  %329 = load i64, i64* %319, align 8, !noalias !20
  %330 = mul i64 %329, %328
  %331 = load i8*, i8** %324, align 8, !noalias !20
  %332 = ptrtoint i8* %331 to i64
  %333 = and i64 %332, 63
  %334 = icmp eq i64 %333, 0
  call void @llvm.assume(i1 %334) #9, !noalias !20
  %335 = getelementptr inbounds i8, i8* %331, i64 %330
  %336 = ptrtoint i8* %335 to i64
  %337 = and i64 %336, 63
  %338 = icmp eq i64 %337, 0
  call void @llvm.assume(i1 %338) #9, !noalias !20
  %339 = load i32, i32* %320, align 8, !noalias !20
  %340 = zext i32 %339 to i64
  %341 = shl nuw nsw i64 %340, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %335, i8 0, i64 %341, i1 false) #9, !noalias !20
  %342 = add nuw nsw i64 %328, 1
  %343 = load i32, i32* %318, align 4, !noalias !20
  %344 = zext i32 %343 to i64
  %345 = icmp ult i64 %342, %344
  br i1 %345, label %327, label %325

346:                                              ; preds = %325
  %347 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %348

348:                                              ; preds = %348, %346
  %349 = phi i64 [ 0, %346 ], [ %363, %348 ]
  %350 = load i64, i64* %319, align 8, !noalias !20
  %351 = mul i64 %350, %349
  %352 = load i8*, i8** %347, align 8, !noalias !20
  %353 = ptrtoint i8* %352 to i64
  %354 = and i64 %353, 63
  %355 = icmp eq i64 %354, 0
  call void @llvm.assume(i1 %355) #9, !noalias !20
  %356 = getelementptr inbounds i8, i8* %352, i64 %351
  %357 = ptrtoint i8* %356 to i64
  %358 = and i64 %357, 63
  %359 = icmp eq i64 %358, 0
  call void @llvm.assume(i1 %359) #9, !noalias !20
  %360 = load i32, i32* %320, align 8, !noalias !20
  %361 = zext i32 %360 to i64
  %362 = shl nuw nsw i64 %361, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %356, i8 0, i64 %362, i1 false) #9, !noalias !20
  %363 = add nuw nsw i64 %349, 1
  %364 = load i32, i32* %318, align 4, !noalias !20
  %365 = zext i32 %364 to i64
  %366 = icmp ult i64 %363, %365
  br i1 %366, label %348, label %367

367:                                              ; preds = %348
  %368 = icmp eq i32 %364, 0
  br i1 %368, label %390, label %369

369:                                              ; preds = %367
  %370 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %371

371:                                              ; preds = %371, %369
  %372 = phi i64 [ 0, %369 ], [ %386, %371 ]
  %373 = load i64, i64* %319, align 8, !noalias !20
  %374 = mul i64 %373, %372
  %375 = load i8*, i8** %370, align 8, !noalias !20
  %376 = ptrtoint i8* %375 to i64
  %377 = and i64 %376, 63
  %378 = icmp eq i64 %377, 0
  call void @llvm.assume(i1 %378) #9, !noalias !20
  %379 = getelementptr inbounds i8, i8* %375, i64 %374
  %380 = ptrtoint i8* %379 to i64
  %381 = and i64 %380, 63
  %382 = icmp eq i64 %381, 0
  call void @llvm.assume(i1 %382) #9, !noalias !20
  %383 = load i32, i32* %320, align 8, !noalias !20
  %384 = zext i32 %383 to i64
  %385 = shl nuw nsw i64 %384, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %379, i8 0, i64 %385, i1 false) #9, !noalias !20
  %386 = add nuw nsw i64 %372, 1
  %387 = load i32, i32* %318, align 4, !noalias !20
  %388 = zext i32 %387 to i64
  %389 = icmp ult i64 %386, %388
  br i1 %389, label %371, label %390

390:                                              ; preds = %371, %367, %325, %309
  %391 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %392 = load i8*, i8** %391, align 8, !noalias !20
  %393 = ptrtoint i8* %392 to i64
  %394 = and i64 %393, 63
  %395 = icmp eq i64 %394, 0
  call void @llvm.assume(i1 %395) #9, !noalias !20
  %396 = bitcast i8* %392 to float*
  %397 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %398 = load i8*, i8** %397, align 8, !noalias !20
  %399 = ptrtoint i8* %398 to i64
  %400 = and i64 %399, 63
  %401 = icmp eq i64 %400, 0
  call void @llvm.assume(i1 %401) #9, !noalias !20
  %402 = bitcast i8* %398 to float*
  %403 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %21, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %404 = load i8*, i8** %403, align 8, !noalias !20
  %405 = ptrtoint i8* %404 to i64
  %406 = and i64 %405, 63
  %407 = icmp eq i64 %406, 0
  call void @llvm.assume(i1 %407) #9, !noalias !20
  %408 = bitcast i8* %404 to float*
  %409 = load i64, i64* %319, align 8, !noalias !20
  %410 = lshr i64 %409, 2
  %411 = load i8*, i8** %275, align 8, !noalias !20
  %412 = ptrtoint i8* %411 to i64
  %413 = and i64 %412, 63
  %414 = icmp eq i64 %413, 0
  call void @llvm.assume(i1 %414) #9, !noalias !20
  %415 = load i64, i64* %274, align 8, !noalias !20
  %416 = bitcast %"class.std::__1::vector.402"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %416) #9, !noalias !20
  %417 = getelementptr inbounds %"class.std::__1::vector.402", %"class.std::__1::vector.402"* %22, i64 0, i32 0, i32 0
  %418 = getelementptr inbounds %"class.std::__1::vector.402", %"class.std::__1::vector.402"* %22, i64 0, i32 0, i32 1
  %419 = getelementptr inbounds %"class.std::__1::vector.402", %"class.std::__1::vector.402"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 0, i64 24, i1 false) #9, !noalias !20
  %420 = load i32, i32* %170, align 4, !noalias !20
  %421 = icmp eq i32 %420, 0
  %422 = bitcast %"struct.std::__1::pair.404"** %418 to i64*
  br i1 %421, label %759, label %423

423:                                              ; preds = %390
  %424 = bitcast %"class.std::__1::vector.402"* %22 to i64*
  %425 = bitcast %"struct.std::__1::pair.404"** %419 to i64*
  %426 = load i32, i32* %165, align 8, !noalias !20
  br label %427

427:                                              ; preds = %441, %423
  %428 = phi i32 [ %420, %423 ], [ %442, %441 ]
  %429 = phi i32 [ %426, %423 ], [ %443, %441 ]
  %430 = phi i64 [ 0, %423 ], [ %444, %441 ]
  %431 = icmp eq i32 %429, 0
  br i1 %431, label %441, label %432

432:                                              ; preds = %427
  %433 = lshr i64 %430, 2
  %434 = shl i64 %430, 32
  br label %447

435:                                              ; preds = %441
  %436 = load i64, i64* %422, align 8, !noalias !20
  %437 = load i64, i64* %424, align 8, !noalias !20
  %438 = icmp eq i64 %436, %437
  br i1 %438, label %759, label %520

439:                                              ; preds = %515
  %440 = load i32, i32* %170, align 4, !noalias !20
  br label %441

441:                                              ; preds = %439, %427
  %442 = phi i32 [ %440, %439 ], [ %428, %427 ]
  %443 = phi i32 [ %517, %439 ], [ 0, %427 ]
  %444 = add nuw nsw i64 %430, 1
  %445 = zext i32 %442 to i64
  %446 = icmp ult i64 %444, %445
  br i1 %446, label %427, label %435

447:                                              ; preds = %515, %432
  %448 = phi i64 [ 0, %432 ], [ %516, %515 ]
  %449 = load i8*, i8** %17, align 8, !noalias !20
  %450 = load i64, i64* %18, align 8, !noalias !20
  %451 = mul i64 %450, %433
  %452 = lshr i64 %448, 2
  %453 = add i64 %451, %452
  %454 = getelementptr inbounds i8, i8* %449, i64 %453
  %455 = load i8, i8* %454, align 1, !noalias !20
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %515, label %457

457:                                              ; preds = %447
  %458 = or i64 %448, %434
  %459 = load %"struct.std::__1::pair.404"*, %"struct.std::__1::pair.404"** %418, align 8, !noalias !20
  %460 = load %"struct.std::__1::pair.404"*, %"struct.std::__1::pair.404"** %419, align 8, !noalias !20
  %461 = icmp ult %"struct.std::__1::pair.404"* %459, %460
  %462 = ptrtoint %"struct.std::__1::pair.404"* %460 to i64
  br i1 %461, label %463, label %469

463:                                              ; preds = %457
  %464 = bitcast %"struct.std::__1::pair.404"* %459 to i64*
  store i64 %458, i64* %464, align 4, !noalias !20
  %465 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %459, i64 0, i32 1
  %466 = bitcast %"struct.std::__1::pair.286"* %465 to i64*
  store i64 %458, i64* %466, align 4, !noalias !20
  %467 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %459, i64 1
  %468 = ptrtoint %"struct.std::__1::pair.404"* %467 to i64
  store i64 %468, i64* %422, align 8, !noalias !20
  br label %515

469:                                              ; preds = %457
  %470 = ptrtoint %"struct.std::__1::pair.404"* %459 to i64
  %471 = load i64, i64* %424, align 8, !noalias !20
  %472 = sub i64 %470, %471
  %473 = ashr exact i64 %472, 4
  %474 = add nsw i64 %473, 1
  %475 = icmp ugt i64 %474, 1152921504606846975
  br i1 %475, label %476, label %478

476:                                              ; preds = %469
  %477 = bitcast %"class.std::__1::vector.402"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %477) #18, !noalias !20
  unreachable

478:                                              ; preds = %469
  %479 = sub i64 %462, %471
  %480 = ashr exact i64 %479, 4
  %481 = icmp ult i64 %480, 576460752303423487
  br i1 %481, label %482, label %490

482:                                              ; preds = %478
  %483 = ashr exact i64 %479, 3
  %484 = icmp ult i64 %483, %474
  %485 = select i1 %484, i64 %474, i64 %483
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %495, label %487

487:                                              ; preds = %482
  %488 = icmp ugt i64 %485, 1152921504606846975
  br i1 %488, label %489, label %490

489:                                              ; preds = %487
  call void @abort() #18, !noalias !20
  unreachable

490:                                              ; preds = %487, %478
  %491 = phi i64 [ %485, %487 ], [ 1152921504606846975, %478 ]
  %492 = shl i64 %491, 4
  %493 = call i8* @_Znwm(i64 %492) #19, !noalias !20
  %494 = bitcast i8* %493 to %"struct.std::__1::pair.404"*
  br label %495

495:                                              ; preds = %490, %482
  %496 = phi i64 [ %491, %490 ], [ 0, %482 ]
  %497 = phi i8* [ %493, %490 ], [ null, %482 ]
  %498 = phi %"struct.std::__1::pair.404"* [ %494, %490 ], [ null, %482 ]
  %499 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %498, i64 %473
  %500 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %498, i64 %496
  %501 = ptrtoint %"struct.std::__1::pair.404"* %500 to i64
  %502 = bitcast %"struct.std::__1::pair.404"* %499 to i64*
  store i64 %458, i64* %502, align 4, !noalias !20
  %503 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %498, i64 %473, i32 1
  %504 = bitcast %"struct.std::__1::pair.286"* %503 to i64*
  store i64 %458, i64* %504, align 4, !noalias !20
  %505 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %499, i64 1
  %506 = ptrtoint %"struct.std::__1::pair.404"* %505 to i64
  %507 = ptrtoint %"struct.std::__1::pair.404"* %498 to i64
  %508 = icmp sgt i64 %472, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %495
  %510 = inttoptr i64 %471 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %497, i8* align 4 %510, i64 %472, i1 false) #9, !noalias !20
  br label %511

511:                                              ; preds = %509, %495
  store i64 %507, i64* %424, align 8, !noalias !20
  store i64 %506, i64* %422, align 8, !noalias !20
  store i64 %501, i64* %425, align 8, !noalias !20
  %512 = icmp eq i64 %471, 0
  br i1 %512, label %515, label %513

513:                                              ; preds = %511
  %514 = inttoptr i64 %471 to i8*
  call void @_ZdlPv(i8* %514) #19, !noalias !20
  br label %515

515:                                              ; preds = %513, %511, %463, %447
  %516 = add nuw nsw i64 %448, 1
  %517 = load i32, i32* %165, align 8, !noalias !20
  %518 = zext i32 %517 to i64
  %519 = icmp ult i64 %516, %518
  br i1 %519, label %447, label %439

520:                                              ; preds = %435, %753
  %521 = phi i64 [ %754, %753 ], [ %437, %435 ]
  %522 = phi i64 [ %755, %753 ], [ %436, %435 ]
  %523 = phi i64 [ %535, %753 ], [ 0, %435 ]
  %524 = inttoptr i64 %521 to %"struct.std::__1::pair.404"*
  %525 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %524, i64 %523, i32 0, i32 0
  %526 = load i32, i32* %525, align 4, !noalias !20
  %527 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %524, i64 %523, i32 0, i32 1
  %528 = load i32, i32* %527, align 4, !noalias !20
  %529 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %524, i64 %523, i32 1
  %530 = bitcast %"struct.std::__1::pair.286"* %529 to i64*
  %531 = load i64, i64* %530, align 4, !noalias !20
  %532 = trunc i64 %531 to i32
  %533 = lshr i64 %531, 32
  %534 = trunc i64 %533 to i32
  %535 = add i64 %523, 1
  %536 = zext i32 %528 to i64
  %537 = mul i64 %415, %536
  %538 = zext i32 %526 to i64
  %539 = add i64 %537, %538
  %540 = getelementptr inbounds i8, i8* %411, i64 %539
  %541 = load i8, i8* %540, align 1, !noalias !20
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %543, label %753

543:                                              ; preds = %520
  store i8 1, i8* %540, align 1, !noalias !20
  %544 = mul i64 %533, %134
  %545 = and i64 %531, 4294967295
  %546 = add i64 %544, %545
  %547 = mul i64 %410, %536
  %548 = add i64 %547, %538
  %549 = load float*, float** %136, align 16, !noalias !20
  %550 = getelementptr inbounds float, float* %549, i64 %546
  %551 = bitcast float* %550 to i32*
  %552 = load i32, i32* %551, align 4, !noalias !20
  %553 = getelementptr inbounds float, float* %396, i64 %548
  %554 = bitcast float* %553 to i32*
  store i32 %552, i32* %554, align 4, !noalias !20
  %555 = load float*, float** %137, align 8, !noalias !20
  %556 = getelementptr inbounds float, float* %555, i64 %546
  %557 = bitcast float* %556 to i32*
  %558 = load i32, i32* %557, align 4, !noalias !20
  %559 = getelementptr inbounds float, float* %402, i64 %548
  %560 = bitcast float* %559 to i32*
  store i32 %558, i32* %560, align 4, !noalias !20
  %561 = load float*, float** %138, align 16, !noalias !20
  %562 = getelementptr inbounds float, float* %561, i64 %546
  %563 = bitcast float* %562 to i32*
  %564 = load i32, i32* %563, align 4, !noalias !20
  %565 = getelementptr inbounds float, float* %408, i64 %548
  %566 = bitcast float* %565 to i32*
  store i32 %564, i32* %566, align 4, !noalias !20
  br label %567

567:                                              ; preds = %577, %543
  %568 = phi i32 [ -1, %543 ], [ %578, %577 ]
  %569 = add i32 %568, %526
  %570 = zext i32 %569 to i64
  %571 = sub nsw i32 %569, %532
  %572 = icmp slt i32 %571, 0
  %573 = sub nsw i32 0, %571
  %574 = select i1 %572, i32 %573, i32 %571
  %575 = lshr i32 %569, 2
  %576 = zext i32 %575 to i64
  br label %580

577:                                              ; preds = %747
  %578 = add nsw i32 %568, 1
  %579 = icmp eq i32 %578, 2
  br i1 %579, label %750, label %567

580:                                              ; preds = %747, %567
  %581 = phi i32 [ -1, %567 ], [ %748, %747 ]
  %582 = or i32 %581, %568
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %747, label %584

584:                                              ; preds = %580
  %585 = add i32 %581, %528
  %586 = or i32 %585, %569
  %587 = icmp sgt i32 %586, -1
  %588 = load i32, i32* %165, align 8, !noalias !20
  %589 = icmp ugt i32 %588, %569
  %590 = and i1 %587, %589
  br i1 %590, label %591, label %747

591:                                              ; preds = %584
  %592 = zext i32 %585 to i64
  %593 = load i32, i32* %170, align 4, !noalias !20
  %594 = icmp ugt i32 %593, %585
  br i1 %594, label %595, label %747

595:                                              ; preds = %591
  %596 = sub nsw i32 %585, %534
  %597 = icmp slt i32 %596, 0
  %598 = sub nsw i32 0, %596
  %599 = select i1 %597, i32 %598, i32 %596
  %600 = add nuw nsw i32 %599, %574
  %601 = icmp ugt i32 %600, 50
  br i1 %601, label %747, label %602

602:                                              ; preds = %595
  %603 = shl nuw i64 %592, 32
  %604 = or i64 %603, %570
  %605 = mul i64 %134, %592
  %606 = add i64 %605, %570
  %607 = load float*, float** %136, align 16, !noalias !20
  %608 = getelementptr inbounds float, float* %607, i64 %546
  %609 = load float, float* %608, align 4, !noalias !20
  %610 = getelementptr inbounds float, float* %607, i64 %606
  %611 = load float, float* %610, align 4, !noalias !20
  %612 = load float*, float** %137, align 8, !noalias !20
  %613 = getelementptr inbounds float, float* %612, i64 %546
  %614 = load float, float* %613, align 4, !noalias !20
  %615 = getelementptr inbounds float, float* %612, i64 %606
  %616 = load float, float* %615, align 4, !noalias !20
  %617 = load float*, float** %138, align 16, !noalias !20
  %618 = getelementptr inbounds float, float* %617, i64 %546
  %619 = load float, float* %618, align 4, !noalias !20
  %620 = getelementptr inbounds float, float* %617, i64 %606
  %621 = load float, float* %620, align 4, !noalias !20
  %622 = fsub float %609, %611
  %623 = call float @llvm.fabs.f32(float %622) #9
  %624 = fmul float %128, %623
  %625 = fadd float %624, 0.000000e+00
  %626 = fsub float %614, %616
  %627 = call float @llvm.fabs.f32(float %626) #9
  %628 = fmul float %129, %627
  %629 = fadd float %625, %628
  %630 = fsub float %619, %621
  %631 = call float @llvm.fabs.f32(float %630) #9
  %632 = fmul float %130, %631
  %633 = fadd float %629, %632
  %634 = fcmp ugt float %633, 0x3FE99999A0000000
  br i1 %634, label %747, label %635

635:                                              ; preds = %602
  %636 = load i8*, i8** %17, align 8, !noalias !20
  %637 = lshr i32 %585, 2
  %638 = zext i32 %637 to i64
  %639 = load i64, i64* %18, align 8, !noalias !20
  %640 = mul i64 %639, %638
  %641 = add i64 %640, %576
  %642 = getelementptr inbounds i8, i8* %636, i64 %641
  %643 = load i8, i8* %642, align 1, !noalias !20
  %644 = icmp eq i8 %643, 0
  br i1 %644, label %684, label %645

645:                                              ; preds = %635
  %646 = load [3 x float*]*, [3 x float*]** %158, align 8, !noalias !20
  %647 = load i64, i64* %159, align 8, !noalias !20
  %648 = mul i64 %647, %533
  %649 = add i64 %648, %545
  %650 = mul i64 %647, %592
  %651 = add i64 %650, %570
  %652 = getelementptr inbounds [3 x float*], [3 x float*]* %646, i64 0, i64 0
  %653 = load float*, float** %652, align 8, !noalias !20
  %654 = getelementptr inbounds float, float* %653, i64 %649
  %655 = load float, float* %654, align 4, !noalias !20
  %656 = getelementptr inbounds float, float* %653, i64 %651
  %657 = load float, float* %656, align 4, !noalias !20
  %658 = fsub float %655, %657
  %659 = call float @llvm.fabs.f32(float %658) #9
  %660 = fpext float %659 to double
  %661 = fcmp ule double %660, 1.000000e-04
  br i1 %661, label %662, label %747

662:                                              ; preds = %645
  %663 = getelementptr inbounds [3 x float*], [3 x float*]* %646, i64 0, i64 1
  %664 = load float*, float** %663, align 8, !noalias !20
  %665 = getelementptr inbounds float, float* %664, i64 %649
  %666 = load float, float* %665, align 4, !noalias !20
  %667 = getelementptr inbounds float, float* %664, i64 %651
  %668 = load float, float* %667, align 4, !noalias !20
  %669 = fsub float %666, %668
  %670 = call float @llvm.fabs.f32(float %669) #9
  %671 = fpext float %670 to double
  %672 = fcmp ule double %671, 1.000000e-04
  br i1 %672, label %673, label %747

673:                                              ; preds = %662
  %674 = getelementptr inbounds [3 x float*], [3 x float*]* %646, i64 0, i64 2
  %675 = load float*, float** %674, align 8, !noalias !20
  %676 = getelementptr inbounds float, float* %675, i64 %649
  %677 = load float, float* %676, align 4, !noalias !20
  %678 = getelementptr inbounds float, float* %675, i64 %651
  %679 = load float, float* %678, align 4, !noalias !20
  %680 = fsub float %677, %679
  %681 = call float @llvm.fabs.f32(float %680) #9
  %682 = fpext float %681 to double
  %683 = fcmp ule double %682, 1.000000e-04
  br i1 %683, label %684, label %747

684:                                              ; preds = %673, %635
  %685 = mul i64 %415, %592
  %686 = add i64 %685, %570
  %687 = getelementptr inbounds i8, i8* %411, i64 %686
  %688 = load i8, i8* %687, align 1, !noalias !20
  %689 = icmp eq i8 %688, 0
  br i1 %689, label %690, label %747

690:                                              ; preds = %684
  %691 = load %"struct.std::__1::pair.404"*, %"struct.std::__1::pair.404"** %418, align 8, !noalias !20
  %692 = load %"struct.std::__1::pair.404"*, %"struct.std::__1::pair.404"** %419, align 8, !noalias !20
  %693 = icmp ult %"struct.std::__1::pair.404"* %691, %692
  %694 = ptrtoint %"struct.std::__1::pair.404"* %692 to i64
  br i1 %693, label %695, label %701

695:                                              ; preds = %690
  %696 = bitcast %"struct.std::__1::pair.404"* %691 to i64*
  store i64 %604, i64* %696, align 4, !noalias !20
  %697 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %691, i64 0, i32 1
  %698 = bitcast %"struct.std::__1::pair.286"* %697 to i64*
  store i64 %531, i64* %698, align 4, !noalias !20
  %699 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %691, i64 1
  %700 = ptrtoint %"struct.std::__1::pair.404"* %699 to i64
  store i64 %700, i64* %422, align 8, !noalias !20
  br label %747

701:                                              ; preds = %690
  %702 = ptrtoint %"struct.std::__1::pair.404"* %691 to i64
  %703 = load i64, i64* %424, align 8, !noalias !20
  %704 = sub i64 %702, %703
  %705 = ashr exact i64 %704, 4
  %706 = add nsw i64 %705, 1
  %707 = icmp ugt i64 %706, 1152921504606846975
  br i1 %707, label %708, label %710

708:                                              ; preds = %701
  %709 = bitcast %"class.std::__1::vector.402"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %709) #18, !noalias !20
  unreachable

710:                                              ; preds = %701
  %711 = sub i64 %694, %703
  %712 = ashr exact i64 %711, 4
  %713 = icmp ult i64 %712, 576460752303423487
  br i1 %713, label %714, label %722

714:                                              ; preds = %710
  %715 = ashr exact i64 %711, 3
  %716 = icmp ult i64 %715, %706
  %717 = select i1 %716, i64 %706, i64 %715
  %718 = icmp eq i64 %717, 0
  br i1 %718, label %727, label %719

719:                                              ; preds = %714
  %720 = icmp ugt i64 %717, 1152921504606846975
  br i1 %720, label %721, label %722

721:                                              ; preds = %719
  call void @abort() #18, !noalias !20
  unreachable

722:                                              ; preds = %719, %710
  %723 = phi i64 [ %717, %719 ], [ 1152921504606846975, %710 ]
  %724 = shl i64 %723, 4
  %725 = call i8* @_Znwm(i64 %724) #19, !noalias !20
  %726 = bitcast i8* %725 to %"struct.std::__1::pair.404"*
  br label %727

727:                                              ; preds = %722, %714
  %728 = phi i64 [ %723, %722 ], [ 0, %714 ]
  %729 = phi i8* [ %725, %722 ], [ null, %714 ]
  %730 = phi %"struct.std::__1::pair.404"* [ %726, %722 ], [ null, %714 ]
  %731 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %730, i64 %705
  %732 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %730, i64 %728
  %733 = ptrtoint %"struct.std::__1::pair.404"* %732 to i64
  %734 = bitcast %"struct.std::__1::pair.404"* %731 to i64*
  store i64 %604, i64* %734, align 4, !noalias !20
  %735 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %730, i64 %705, i32 1
  %736 = bitcast %"struct.std::__1::pair.286"* %735 to i64*
  store i64 %531, i64* %736, align 4, !noalias !20
  %737 = getelementptr inbounds %"struct.std::__1::pair.404", %"struct.std::__1::pair.404"* %731, i64 1
  %738 = ptrtoint %"struct.std::__1::pair.404"* %737 to i64
  %739 = ptrtoint %"struct.std::__1::pair.404"* %730 to i64
  %740 = icmp sgt i64 %704, 0
  br i1 %740, label %741, label %743

741:                                              ; preds = %727
  %742 = inttoptr i64 %703 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %729, i8* align 4 %742, i64 %704, i1 false) #9, !noalias !20
  br label %743

743:                                              ; preds = %741, %727
  store i64 %739, i64* %424, align 8, !noalias !20
  store i64 %738, i64* %422, align 8, !noalias !20
  store i64 %733, i64* %425, align 8, !noalias !20
  %744 = icmp eq i64 %703, 0
  br i1 %744, label %747, label %745

745:                                              ; preds = %743
  %746 = inttoptr i64 %703 to i8*
  call void @_ZdlPv(i8* %746) #19, !noalias !20
  br label %747

747:                                              ; preds = %745, %743, %695, %684, %673, %662, %645, %602, %595, %591, %584, %580
  %748 = add nsw i32 %581, 1
  %749 = icmp eq i32 %748, 2
  br i1 %749, label %577, label %580

750:                                              ; preds = %577
  %751 = load i64, i64* %422, align 8, !noalias !20
  %752 = load i64, i64* %424, align 8, !noalias !20
  br label %753

753:                                              ; preds = %750, %520
  %754 = phi i64 [ %752, %750 ], [ %521, %520 ]
  %755 = phi i64 [ %751, %750 ], [ %522, %520 ]
  %756 = sub i64 %755, %754
  %757 = ashr exact i64 %756, 4
  %758 = icmp eq i64 %757, %535
  br i1 %758, label %759, label %520

759:                                              ; preds = %753, %435, %390
  %760 = phi i64 [ %436, %435 ], [ 0, %390 ], [ %754, %753 ]
  store i64 %760, i64* %422, align 8, !noalias !20
  %761 = bitcast %"class.jxl::Plane.97"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %761) #9, !noalias !20
  %762 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %23, i64 0, i32 0, i32 0
  %763 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %23, i64 0, i32 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %761, i8 0, i64 32, i1 false) #9, !noalias !20
  %764 = bitcast %"class.std::__1::mersenne_twister_engine"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 5000, i8* nonnull %764) #9, !noalias !20
  %765 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 1
  %766 = bitcast i64* %765 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %766, i8 -86, i64 4992, i1 false) #9, !noalias !20
  %767 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 0
  store i64 5489, i64* %767, align 8, !noalias !20
  br label %768

768:                                              ; preds = %3534, %759
  %769 = phi i64 [ 5489, %759 ], [ %3539, %3534 ]
  %770 = phi i64 [ 1, %759 ], [ %3541, %3534 ]
  %771 = lshr i64 %769, 30
  %772 = xor i64 %771, %769
  %773 = mul nuw nsw i64 %772, 1812433253
  %774 = add nuw i64 %773, %770
  %775 = and i64 %774, 4294967295
  %776 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 %770
  store i64 %775, i64* %776, align 8, !noalias !20
  %777 = add nuw nsw i64 %770, 1
  %778 = icmp eq i64 %777, 624
  br i1 %778, label %779, label %3534

779:                                              ; preds = %768
  %780 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %23, i64 0, i32 0, i32 1
  %781 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %23, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %782 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 1
  store i64 0, i64* %782, align 8, !noalias !20
  br i1 %248, label %854, label %783

783:                                              ; preds = %779
  %784 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %3, i64 0, i32 15
  %785 = bitcast %"class.std::__1::basic_string"* %784 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %786 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %785, i64 0, i32 1, i32 0
  %787 = load i8, i8* %786, align 1, !noalias !20
  %788 = icmp slt i8 %787, 0
  br i1 %788, label %789, label %792

789:                                              ; preds = %783
  %790 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %3, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %791 = load i64, i64* %790, align 8, !noalias !20
  br label %794

792:                                              ; preds = %783
  %793 = zext i8 %787 to i64
  br label %794

794:                                              ; preds = %792, %789
  %795 = phi i64 [ %791, %789 ], [ %793, %792 ]
  %796 = icmp eq i64 %795, 0
  br i1 %796, label %854, label %797

797:                                              ; preds = %794
  call void @_ZNK3jxl6AuxOut19DumpPlaneNormalizedIhEEvPKcRKNS_5PlaneIT_EE(%"struct.jxl::AuxOut"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), %"class.jxl::Plane"* nonnull dereferenceable(32) %20) #9, !noalias !20
  br i1 %4, label %798, label %799

798:                                              ; preds = %797
  call void @_ZNK3jxl6AuxOut12DumpXybImageIfEEvPKcRKNS_6Image3IT_EE(%"struct.jxl::AuxOut"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), %"class.jxl::Image3"* nonnull dereferenceable(96) %21) #9, !noalias !20
  br label %800

799:                                              ; preds = %797
  call void @_ZNK3jxl6AuxOut9DumpImageIfEEvPKcRKNS_6Image3IT_EE(%"struct.jxl::AuxOut"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), %"class.jxl::Image3"* nonnull dereferenceable(96) %21) #9, !noalias !20
  br label %800

800:                                              ; preds = %799, %798
  %801 = bitcast %"class.jxl::Plane.97"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %801) #9, !noalias !20
  %802 = load i32, i32* %165, align 8, !noalias !20
  %803 = zext i32 %802 to i64
  %804 = load i32, i32* %170, align 4, !noalias !20
  %805 = zext i32 %804 to i64
  %806 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %25, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %806, i64 %803, i64 %805, i64 4) #9, !noalias !20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %761, i8* nonnull align 8 %801, i64 24, i1 false) #9, !noalias !20
  %807 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %23, i64 0, i32 0, i32 5
  %808 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %25, i64 0, i32 0, i32 5
  %809 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %808, i64 0, i32 0, i32 0, i32 0
  %810 = bitcast %"class.std::__1::unique_ptr"* %808 to i64*
  %811 = load i64, i64* %810, align 8, !noalias !20
  store i8* null, i8** %809, align 8, !noalias !20
  %812 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %807, i64 0, i32 0, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8, !noalias !20
  %814 = bitcast %"class.std::__1::unique_ptr"* %807 to i64*
  store i64 %811, i64* %814, align 8, !noalias !20
  %815 = icmp eq i8* %813, null
  br i1 %815, label %816, label %818

816:                                              ; preds = %800
  %817 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %25, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  store i8* null, i8** %817, align 8, !noalias !20
  br label %823

818:                                              ; preds = %800
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %813) #9, !noalias !20
  %819 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %25, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %820 = load i8*, i8** %819, align 8, !noalias !20
  store i8* null, i8** %819, align 8, !noalias !20
  %821 = icmp eq i8* %820, null
  br i1 %821, label %823, label %822

822:                                              ; preds = %818
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %820) #9, !noalias !20
  br label %823

823:                                              ; preds = %822, %818, %816
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %801) #9, !noalias !20
  %824 = load i32, i32* %762, align 8, !noalias !20
  %825 = icmp eq i32 %824, 0
  %826 = load i32, i32* %780, align 4, !noalias !20
  %827 = icmp eq i32 %826, 0
  %828 = or i1 %825, %827
  br i1 %828, label %854, label %829

829:                                              ; preds = %823
  %830 = load i8*, i8** %781, align 8, !noalias !20
  %831 = ptrtoint i8* %830 to i64
  %832 = and i64 %831, 63
  %833 = icmp eq i64 %832, 0
  call void @llvm.assume(i1 %833) #9, !noalias !20
  %834 = zext i32 %824 to i64
  %835 = shl nuw nsw i64 %834, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %830, i8 0, i64 %835, i1 false) #9, !noalias !20
  %836 = load i32, i32* %780, align 4, !noalias !20
  %837 = icmp ugt i32 %836, 1
  br i1 %837, label %838, label %854

838:                                              ; preds = %829, %838
  %839 = phi i64 [ %850, %838 ], [ 1, %829 ]
  %840 = load i32, i32* %762, align 8, !noalias !20
  %841 = load i8*, i8** %781, align 8, !noalias !20
  %842 = load i64, i64* %763, align 8, !noalias !20
  %843 = mul i64 %842, %839
  %844 = getelementptr inbounds i8, i8* %841, i64 %843
  %845 = ptrtoint i8* %844 to i64
  %846 = and i64 %845, 63
  %847 = icmp eq i64 %846, 0
  call void @llvm.assume(i1 %847) #9, !noalias !20
  %848 = zext i32 %840 to i64
  %849 = shl nuw nsw i64 %848, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %844, i8 0, i64 %849, i1 false) #9, !noalias !20
  %850 = add nuw nsw i64 %839, 1
  %851 = load i32, i32* %780, align 4, !noalias !20
  %852 = zext i32 %851 to i64
  %853 = icmp ult i64 %850, %852
  br i1 %853, label %838, label %854

854:                                              ; preds = %838, %829, %823, %794, %779
  %855 = phi i1 [ false, %794 ], [ true, %823 ], [ false, %779 ], [ true, %829 ], [ true, %838 ]
  %856 = bitcast %"class.std::__1::vector.268"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %856) #9, !noalias !20
  %857 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %26, i64 0, i32 0, i32 0
  %858 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %26, i64 0, i32 0, i32 1
  %859 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %856, i8 0, i64 24, i1 false) #9, !noalias !20
  %860 = bitcast %"class.jxl::Plane"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %860) #9, !noalias !20
  %861 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %27, i64 0, i32 0, i32 0
  %862 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %27, i64 0, i32 0, i32 1
  %863 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %27, i64 0, i32 0, i32 4
  %864 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %27, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %860, i8 -86, i64 32, i1 false) #9, !noalias !20
  %865 = load i32, i32* %165, align 8, !noalias !20
  %866 = zext i32 %865 to i64
  %867 = load i32, i32* %170, align 4, !noalias !20
  %868 = zext i32 %867 to i64
  %869 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %27, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %869, i64 %866, i64 %868, i64 1) #9, !noalias !20
  %870 = load i32, i32* %861, align 8, !noalias !20
  %871 = icmp eq i32 %870, 0
  %872 = load i32, i32* %862, align 4, !noalias !20
  %873 = icmp eq i32 %872, 0
  %874 = or i1 %871, %873
  br i1 %874, label %898, label %875

875:                                              ; preds = %854
  %876 = load i8*, i8** %864, align 8, !noalias !20
  %877 = ptrtoint i8* %876 to i64
  %878 = and i64 %877, 63
  %879 = icmp eq i64 %878, 0
  call void @llvm.assume(i1 %879) #9, !noalias !20
  %880 = zext i32 %870 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %876, i8 0, i64 %880, i1 false) #9, !noalias !20
  %881 = load i32, i32* %862, align 4, !noalias !20
  %882 = icmp ugt i32 %881, 1
  br i1 %882, label %883, label %898

883:                                              ; preds = %875, %883
  %884 = phi i64 [ %894, %883 ], [ 1, %875 ]
  %885 = load i32, i32* %861, align 8, !noalias !20
  %886 = load i8*, i8** %864, align 8, !noalias !20
  %887 = load i64, i64* %863, align 8, !noalias !20
  %888 = mul i64 %887, %884
  %889 = getelementptr inbounds i8, i8* %886, i64 %888
  %890 = ptrtoint i8* %889 to i64
  %891 = and i64 %890, 63
  %892 = icmp eq i64 %891, 0
  call void @llvm.assume(i1 %892) #9, !noalias !20
  %893 = zext i32 %885 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %889, i8 0, i64 %893, i1 false) #9, !noalias !20
  %894 = add nuw nsw i64 %884, 1
  %895 = load i32, i32* %862, align 4, !noalias !20
  %896 = zext i32 %895 to i64
  %897 = icmp ult i64 %894, %896
  br i1 %897, label %883, label %898

898:                                              ; preds = %883, %875, %854
  %899 = load i8*, i8** %864, align 8, !noalias !20
  %900 = ptrtoint i8* %899 to i64
  %901 = and i64 %900, 63
  %902 = icmp eq i64 %901, 0
  call void @llvm.assume(i1 %902) #9, !noalias !20
  %903 = load i64, i64* %863, align 8, !noalias !20
  %904 = bitcast %"class.std::__1::vector.284"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %904) #9, !noalias !20
  %905 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %28, i64 0, i32 0, i32 0
  %906 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %28, i64 0, i32 0, i32 1
  %907 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %28, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %904, i8 0, i64 24, i1 false) #9, !noalias !20
  %908 = bitcast %"class.std::__1::vector.284"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %908) #9, !noalias !20
  %909 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %29, i64 0, i32 0, i32 0
  %910 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %29, i64 0, i32 0, i32 1
  %911 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %29, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %908, i8 0, i64 24, i1 false) #9, !noalias !20
  %912 = load i32, i32* %170, align 4, !noalias !20
  %913 = icmp eq i32 %912, 0
  br i1 %913, label %940, label %914

914:                                              ; preds = %898
  %915 = bitcast %"class.std::__1::vector.284"* %28 to i64*
  %916 = bitcast %"struct.std::__1::pair.286"** %906 to i64*
  %917 = bitcast %"class.std::__1::vector.284"* %29 to i64*
  %918 = bitcast %"struct.std::__1::pair.286"** %910 to i64*
  %919 = bitcast %"struct.std::__1::pair.286"** %911 to i64*
  %920 = bitcast %"struct.std::__1::pair.286"** %907 to i64*
  %921 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %26, i64 0, i32 0, i32 2
  %922 = bitcast %"struct.std::__1::__split_buffer.431"* %7 to i8*
  %923 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %7, i64 0, i32 0
  %924 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %7, i64 0, i32 1
  %925 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %7, i64 0, i32 2
  %926 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %7, i64 0, i32 3, i32 0, i32 0
  %927 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %7, i64 0, i32 3, i32 1, i32 0
  %928 = bitcast %"struct.std::__1::pair.270"** %858 to i64*
  %929 = bitcast %"class.std::__1::vector.268"* %26 to i64*
  %930 = bitcast %"class.std::__1::allocator.295"** %927 to %"class.std::__1::__compressed_pair.292"**
  %931 = load i32, i32* %165, align 8, !noalias !20
  br label %932

932:                                              ; preds = %943, %914
  %933 = phi i32 [ %912, %914 ], [ %944, %943 ]
  %934 = phi i32 [ %931, %914 ], [ %945, %943 ]
  %935 = phi i64 [ 0, %914 ], [ %946, %943 ]
  %936 = icmp eq i32 %934, 0
  br i1 %936, label %943, label %937

937:                                              ; preds = %932
  %938 = mul i64 %935, %415
  %939 = trunc i64 %935 to i32
  br label %949

940:                                              ; preds = %943, %898
  br i1 %855, label %1671, label %1690

941:                                              ; preds = %1666
  %942 = load i32, i32* %170, align 4, !noalias !20
  br label %943

943:                                              ; preds = %941, %932
  %944 = phi i32 [ %942, %941 ], [ %933, %932 ]
  %945 = phi i32 [ %1668, %941 ], [ 0, %932 ]
  %946 = add nuw nsw i64 %935, 1
  %947 = zext i32 %944 to i64
  %948 = icmp ult i64 %946, %947
  br i1 %948, label %932, label %940

949:                                              ; preds = %1666, %937
  %950 = phi i64 [ 0, %937 ], [ %1667, %1666 ]
  %951 = add i64 %950, %938
  %952 = getelementptr inbounds i8, i8* %411, i64 %951
  %953 = load i8, i8* %952, align 1, !noalias !20
  %954 = icmp eq i8 %953, 0
  br i1 %954, label %955, label %1666

955:                                              ; preds = %949
  %956 = load i64, i64* %915, align 8, !noalias !20
  store i64 %956, i64* %916, align 8, !noalias !20
  %957 = load i64, i64* %917, align 8, !noalias !20
  store i64 %957, i64* %918, align 8, !noalias !20
  %958 = inttoptr i64 %957 to %"struct.std::__1::pair.286"*
  %959 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %911, align 8, !noalias !20
  %960 = icmp ugt %"struct.std::__1::pair.286"* %959, %958
  br i1 %960, label %961, label %967

961:                                              ; preds = %955
  %962 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %958, i64 0, i32 0
  %963 = trunc i64 %950 to i32
  store i32 %963, i32* %962, align 4, !noalias !20
  %964 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %958, i64 0, i32 1
  store i32 %939, i32* %964, align 4, !noalias !20
  %965 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %958, i64 1
  %966 = ptrtoint %"struct.std::__1::pair.286"* %965 to i64
  store i64 %966, i64* %918, align 8, !noalias !20
  br label %997

967:                                              ; preds = %955
  %968 = ptrtoint %"struct.std::__1::pair.286"* %959 to i64
  %969 = sub i64 %968, %957
  %970 = ashr exact i64 %969, 3
  %971 = icmp ult i64 %970, 1152921504606846975
  br i1 %971, label %972, label %978

972:                                              ; preds = %967
  %973 = ashr exact i64 %969, 2
  %974 = icmp eq i64 %969, 0
  %975 = select i1 %974, i64 1, i64 %973
  %976 = icmp ugt i64 %975, 2305843009213693951
  br i1 %976, label %977, label %978

977:                                              ; preds = %972
  call void @abort() #18, !noalias !20
  unreachable

978:                                              ; preds = %972, %967
  %979 = phi i64 [ %975, %972 ], [ 2305843009213693951, %967 ]
  %980 = shl i64 %979, 3
  %981 = call i8* @_Znwm(i64 %980) #19, !noalias !20
  %982 = bitcast i8* %981 to %"struct.std::__1::pair.286"*
  %983 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %982, i64 %979
  %984 = ptrtoint %"struct.std::__1::pair.286"* %983 to i64
  %985 = bitcast i8* %981 to i32*
  %986 = trunc i64 %950 to i32
  store i32 %986, i32* %985, align 4, !noalias !20
  %987 = getelementptr inbounds i8, i8* %981, i64 4
  %988 = bitcast i8* %987 to i32*
  store i32 %939, i32* %988, align 4, !noalias !20
  %989 = getelementptr inbounds i8, i8* %981, i64 8
  %990 = ptrtoint i8* %989 to i64
  %991 = ptrtoint i8* %981 to i64
  store i64 %991, i64* %917, align 8, !noalias !20
  store i64 %990, i64* %918, align 8, !noalias !20
  store i64 %984, i64* %919, align 8, !noalias !20
  %992 = icmp eq i64 %957, 0
  %993 = bitcast i8* %989 to %"struct.std::__1::pair.286"*
  br i1 %992, label %997, label %994

994:                                              ; preds = %978
  %995 = inttoptr i64 %957 to i8*
  call void @_ZdlPv(i8* %995) #19, !noalias !20
  %996 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %910, align 8, !noalias !20
  br label %997

997:                                              ; preds = %994, %978, %961
  %998 = phi %"struct.std::__1::pair.286"* [ %996, %994 ], [ %993, %978 ], [ %965, %961 ]
  %999 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %909, align 8, !noalias !20
  %1000 = icmp eq %"struct.std::__1::pair.286"* %999, %998
  br i1 %1000, label %1238, label %1001

1001:                                             ; preds = %997, %1226
  %1002 = phi %"struct.std::__1::pair.286"* [ %1228, %1226 ], [ %999, %997 ]
  %1003 = phi %"struct.std::__1::pair.286"* [ %1227, %1226 ], [ %998, %997 ]
  %1004 = phi i64 [ %1236, %1226 ], [ %950, %997 ]
  %1005 = phi i64 [ %1235, %1226 ], [ %935, %997 ]
  %1006 = phi i8 [ %1234, %1226 ], [ 0, %997 ]
  %1007 = phi i8 [ %1233, %1226 ], [ 1, %997 ]
  %1008 = phi i64 [ %1232, %1226 ], [ %950, %997 ]
  %1009 = phi i64 [ %1231, %1226 ], [ %935, %997 ]
  %1010 = phi i32 [ %1230, %1226 ], [ 0, %997 ]
  %1011 = phi i32 [ %1229, %1226 ], [ 0, %997 ]
  %1012 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1003, i64 -1
  %1013 = bitcast %"struct.std::__1::pair.286"* %1012 to i64*
  %1014 = load i64, i64* %1013, align 4, !noalias !20
  %1015 = trunc i64 %1014 to i32
  %1016 = lshr i64 %1014, 32
  %1017 = trunc i64 %1016 to i32
  store %"struct.std::__1::pair.286"* %1012, %"struct.std::__1::pair.286"** %910, align 8, !noalias !20
  %1018 = mul i64 %1016, %903
  %1019 = and i64 %1014, 4294967295
  %1020 = add i64 %1018, %1019
  %1021 = getelementptr inbounds i8, i8* %899, i64 %1020
  %1022 = load i8, i8* %1021, align 1, !noalias !20
  %1023 = icmp eq i8 %1022, 0
  br i1 %1023, label %1024, label %1226

1024:                                             ; preds = %1001
  store i8 1, i8* %1021, align 1, !noalias !20
  %1025 = icmp ugt i64 %1008, %1019
  %1026 = select i1 %1025, i64 %1019, i64 %1008
  %1027 = icmp ult i64 %1004, %1019
  %1028 = select i1 %1027, i64 %1019, i64 %1004
  %1029 = icmp ugt i64 %1009, %1016
  %1030 = select i1 %1029, i64 %1016, i64 %1009
  %1031 = icmp ult i64 %1005, %1016
  %1032 = select i1 %1031, i64 %1016, i64 %1005
  br i1 %855, label %1033, label %1086

1033:                                             ; preds = %1024
  %1034 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %906, align 8, !noalias !20
  %1035 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %907, align 8, !noalias !20
  %1036 = icmp eq %"struct.std::__1::pair.286"* %1034, %1035
  %1037 = ptrtoint %"struct.std::__1::pair.286"* %1035 to i64
  br i1 %1036, label %1042, label %1038

1038:                                             ; preds = %1033
  %1039 = bitcast %"struct.std::__1::pair.286"* %1034 to i64*
  store i64 %1014, i64* %1039, align 4, !noalias !20
  %1040 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1034, i64 1
  %1041 = ptrtoint %"struct.std::__1::pair.286"* %1040 to i64
  store i64 %1041, i64* %916, align 8, !noalias !20
  br label %1086

1042:                                             ; preds = %1033
  %1043 = ptrtoint %"struct.std::__1::pair.286"* %1034 to i64
  %1044 = load i64, i64* %915, align 8, !noalias !20
  %1045 = sub i64 %1043, %1044
  %1046 = ashr exact i64 %1045, 3
  %1047 = add nsw i64 %1046, 1
  %1048 = icmp ugt i64 %1047, 2305843009213693951
  br i1 %1048, label %1049, label %1051

1049:                                             ; preds = %1042
  %1050 = bitcast %"class.std::__1::vector.284"* %28 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1050) #18, !noalias !20
  unreachable

1051:                                             ; preds = %1042
  %1052 = sub i64 %1037, %1044
  %1053 = ashr exact i64 %1052, 3
  %1054 = icmp ult i64 %1053, 1152921504606846975
  br i1 %1054, label %1055, label %1063

1055:                                             ; preds = %1051
  %1056 = ashr exact i64 %1052, 2
  %1057 = icmp ult i64 %1056, %1047
  %1058 = select i1 %1057, i64 %1047, i64 %1056
  %1059 = icmp eq i64 %1058, 0
  br i1 %1059, label %1068, label %1060

1060:                                             ; preds = %1055
  %1061 = icmp ugt i64 %1058, 2305843009213693951
  br i1 %1061, label %1062, label %1063

1062:                                             ; preds = %1060
  call void @abort() #18, !noalias !20
  unreachable

1063:                                             ; preds = %1060, %1051
  %1064 = phi i64 [ %1058, %1060 ], [ 2305843009213693951, %1051 ]
  %1065 = shl i64 %1064, 3
  %1066 = call i8* @_Znwm(i64 %1065) #19, !noalias !20
  %1067 = bitcast i8* %1066 to %"struct.std::__1::pair.286"*
  br label %1068

1068:                                             ; preds = %1063, %1055
  %1069 = phi i64 [ %1064, %1063 ], [ 0, %1055 ]
  %1070 = phi i8* [ %1066, %1063 ], [ null, %1055 ]
  %1071 = phi %"struct.std::__1::pair.286"* [ %1067, %1063 ], [ null, %1055 ]
  %1072 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1071, i64 %1046
  %1073 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1071, i64 %1069
  %1074 = ptrtoint %"struct.std::__1::pair.286"* %1073 to i64
  %1075 = bitcast %"struct.std::__1::pair.286"* %1072 to i64*
  store i64 %1014, i64* %1075, align 4, !noalias !20
  %1076 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1072, i64 1
  %1077 = ptrtoint %"struct.std::__1::pair.286"* %1076 to i64
  %1078 = ptrtoint %"struct.std::__1::pair.286"* %1071 to i64
  %1079 = icmp sgt i64 %1045, 0
  br i1 %1079, label %1080, label %1082

1080:                                             ; preds = %1068
  %1081 = inttoptr i64 %1044 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1070, i8* align 4 %1081, i64 %1045, i1 false) #9, !noalias !20
  br label %1082

1082:                                             ; preds = %1080, %1068
  store i64 %1078, i64* %915, align 8, !noalias !20
  store i64 %1077, i64* %916, align 8, !noalias !20
  store i64 %1074, i64* %920, align 8, !noalias !20
  %1083 = icmp eq i64 %1044, 0
  br i1 %1083, label %1086, label %1084

1084:                                             ; preds = %1082
  %1085 = inttoptr i64 %1044 to i8*
  call void @_ZdlPv(i8* %1085) #19, !noalias !20
  br label %1086

1086:                                             ; preds = %1084, %1082, %1038, %1024
  br label %1087

1087:                                             ; preds = %1086, %1095
  %1088 = phi i8 [ %1220, %1095 ], [ %1006, %1086 ]
  %1089 = phi i32 [ %1096, %1095 ], [ -1, %1086 ]
  %1090 = phi i8 [ %1219, %1095 ], [ %1007, %1086 ]
  %1091 = phi i32 [ %1218, %1095 ], [ %1010, %1086 ]
  %1092 = phi i32 [ %1217, %1095 ], [ %1011, %1086 ]
  %1093 = add nsw i32 %1089, %1015
  %1094 = zext i32 %1093 to i64
  br label %1098

1095:                                             ; preds = %1216
  %1096 = add nsw i32 %1089, 1
  %1097 = icmp eq i32 %1096, 2
  br i1 %1097, label %1223, label %1087

1098:                                             ; preds = %1216, %1087
  %1099 = phi i8 [ %1088, %1087 ], [ %1220, %1216 ]
  %1100 = phi i32 [ -1, %1087 ], [ %1221, %1216 ]
  %1101 = phi i8 [ %1090, %1087 ], [ %1219, %1216 ]
  %1102 = phi i32 [ %1091, %1087 ], [ %1218, %1216 ]
  %1103 = phi i32 [ %1092, %1087 ], [ %1217, %1216 ]
  %1104 = or i32 %1100, %1089
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1216, label %1106

1106:                                             ; preds = %1098
  %1107 = add nsw i32 %1100, %1017
  %1108 = or i32 %1107, %1093
  %1109 = icmp sgt i32 %1108, -1
  %1110 = load i32, i32* %165, align 8, !noalias !20
  %1111 = icmp ugt i32 %1110, %1093
  %1112 = and i1 %1109, %1111
  br i1 %1112, label %1113, label %1216

1113:                                             ; preds = %1106
  %1114 = zext i32 %1107 to i64
  %1115 = load i32, i32* %170, align 4, !noalias !20
  %1116 = icmp ugt i32 %1115, %1107
  br i1 %1116, label %1117, label %1216

1117:                                             ; preds = %1113
  %1118 = mul i64 %415, %1114
  %1119 = add i64 %1118, %1094
  %1120 = getelementptr inbounds i8, i8* %411, i64 %1119
  %1121 = load i8, i8* %1120, align 1, !noalias !20
  %1122 = icmp eq i8 %1121, 0
  br i1 %1122, label %1123, label %1180

1123:                                             ; preds = %1117
  %1124 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %910, align 8, !noalias !20
  %1125 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %911, align 8, !noalias !20
  %1126 = icmp eq %"struct.std::__1::pair.286"* %1124, %1125
  %1127 = ptrtoint %"struct.std::__1::pair.286"* %1125 to i64
  br i1 %1126, label %1134, label %1128

1128:                                             ; preds = %1123
  %1129 = bitcast %"struct.std::__1::pair.286"* %1124 to i64*
  %1130 = shl nuw i64 %1114, 32
  %1131 = or i64 %1130, %1094
  store i64 %1131, i64* %1129, align 4, !noalias !20
  %1132 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1124, i64 1
  %1133 = ptrtoint %"struct.std::__1::pair.286"* %1132 to i64
  store i64 %1133, i64* %918, align 8, !noalias !20
  br label %1216

1134:                                             ; preds = %1123
  %1135 = ptrtoint %"struct.std::__1::pair.286"* %1124 to i64
  %1136 = load i64, i64* %917, align 8, !noalias !20
  %1137 = sub i64 %1135, %1136
  %1138 = ashr exact i64 %1137, 3
  %1139 = add nsw i64 %1138, 1
  %1140 = icmp ugt i64 %1139, 2305843009213693951
  br i1 %1140, label %1141, label %1143

1141:                                             ; preds = %1134
  %1142 = bitcast %"class.std::__1::vector.284"* %29 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1142) #18, !noalias !20
  unreachable

1143:                                             ; preds = %1134
  %1144 = sub i64 %1127, %1136
  %1145 = ashr exact i64 %1144, 3
  %1146 = icmp ult i64 %1145, 1152921504606846975
  br i1 %1146, label %1147, label %1155

1147:                                             ; preds = %1143
  %1148 = ashr exact i64 %1144, 2
  %1149 = icmp ult i64 %1148, %1139
  %1150 = select i1 %1149, i64 %1139, i64 %1148
  %1151 = icmp eq i64 %1150, 0
  br i1 %1151, label %1160, label %1152

1152:                                             ; preds = %1147
  %1153 = icmp ugt i64 %1150, 2305843009213693951
  br i1 %1153, label %1154, label %1155

1154:                                             ; preds = %1152
  call void @abort() #18, !noalias !20
  unreachable

1155:                                             ; preds = %1152, %1143
  %1156 = phi i64 [ %1150, %1152 ], [ 2305843009213693951, %1143 ]
  %1157 = shl i64 %1156, 3
  %1158 = call i8* @_Znwm(i64 %1157) #19, !noalias !20
  %1159 = bitcast i8* %1158 to %"struct.std::__1::pair.286"*
  br label %1160

1160:                                             ; preds = %1155, %1147
  %1161 = phi i64 [ %1156, %1155 ], [ 0, %1147 ]
  %1162 = phi i8* [ %1158, %1155 ], [ null, %1147 ]
  %1163 = phi %"struct.std::__1::pair.286"* [ %1159, %1155 ], [ null, %1147 ]
  %1164 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1163, i64 %1138
  %1165 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1163, i64 %1161
  %1166 = ptrtoint %"struct.std::__1::pair.286"* %1165 to i64
  %1167 = bitcast %"struct.std::__1::pair.286"* %1164 to i64*
  %1168 = shl nuw i64 %1114, 32
  %1169 = or i64 %1168, %1094
  store i64 %1169, i64* %1167, align 4, !noalias !20
  %1170 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1164, i64 1
  %1171 = ptrtoint %"struct.std::__1::pair.286"* %1170 to i64
  %1172 = ptrtoint %"struct.std::__1::pair.286"* %1163 to i64
  %1173 = icmp sgt i64 %1137, 0
  br i1 %1173, label %1174, label %1176

1174:                                             ; preds = %1160
  %1175 = inttoptr i64 %1136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1162, i8* align 4 %1175, i64 %1137, i1 false) #9, !noalias !20
  br label %1176

1176:                                             ; preds = %1174, %1160
  store i64 %1172, i64* %917, align 8, !noalias !20
  store i64 %1171, i64* %918, align 8, !noalias !20
  store i64 %1166, i64* %919, align 8, !noalias !20
  %1177 = icmp eq i64 %1136, 0
  br i1 %1177, label %1216, label %1178

1178:                                             ; preds = %1176
  %1179 = inttoptr i64 %1136 to i8*
  call void @_ZdlPv(i8* %1179) #19, !noalias !20
  br label %1216

1180:                                             ; preds = %1117
  %1181 = and i8 %1099, 1
  %1182 = icmp eq i8 %1181, 0
  br i1 %1182, label %1216, label %1183

1183:                                             ; preds = %1180
  %1184 = zext i32 %1102 to i64
  %1185 = zext i32 %1103 to i64
  %1186 = mul i64 %410, %1114
  %1187 = add i64 %1186, %1094
  %1188 = mul i64 %410, %1184
  %1189 = add i64 %1188, %1185
  %1190 = getelementptr inbounds float, float* %396, i64 %1187
  %1191 = load float, float* %1190, align 4, !noalias !20
  %1192 = getelementptr inbounds float, float* %396, i64 %1189
  %1193 = load float, float* %1192, align 4, !noalias !20
  %1194 = getelementptr inbounds float, float* %402, i64 %1187
  %1195 = load float, float* %1194, align 4, !noalias !20
  %1196 = getelementptr inbounds float, float* %402, i64 %1189
  %1197 = load float, float* %1196, align 4, !noalias !20
  %1198 = getelementptr inbounds float, float* %408, i64 %1187
  %1199 = load float, float* %1198, align 4, !noalias !20
  %1200 = getelementptr inbounds float, float* %408, i64 %1189
  %1201 = load float, float* %1200, align 4, !noalias !20
  %1202 = fsub float %1191, %1193
  %1203 = call float @llvm.fabs.f32(float %1202) #9
  %1204 = fmul float %128, %1203
  %1205 = fadd float %1204, 0.000000e+00
  %1206 = fsub float %1195, %1197
  %1207 = call float @llvm.fabs.f32(float %1206) #9
  %1208 = fmul float %129, %1207
  %1209 = fadd float %1205, %1208
  %1210 = fsub float %1199, %1201
  %1211 = call float @llvm.fabs.f32(float %1210) #9
  %1212 = fmul float %130, %1211
  %1213 = fadd float %1209, %1212
  %1214 = fcmp ole float %1213, 0x3F9EB851E0000000
  %1215 = select i1 %1214, i8 %1101, i8 0
  br label %1216

1216:                                             ; preds = %1183, %1180, %1178, %1176, %1128, %1113, %1106, %1098
  %1217 = phi i32 [ %1103, %1098 ], [ %1103, %1106 ], [ %1103, %1113 ], [ %1103, %1183 ], [ %1103, %1128 ], [ %1103, %1176 ], [ %1103, %1178 ], [ %1093, %1180 ]
  %1218 = phi i32 [ %1102, %1098 ], [ %1102, %1106 ], [ %1102, %1113 ], [ %1102, %1183 ], [ %1102, %1128 ], [ %1102, %1176 ], [ %1102, %1178 ], [ %1107, %1180 ]
  %1219 = phi i8 [ %1101, %1098 ], [ %1101, %1106 ], [ %1101, %1113 ], [ %1215, %1183 ], [ %1101, %1128 ], [ %1101, %1176 ], [ %1101, %1178 ], [ %1101, %1180 ]
  %1220 = phi i8 [ %1099, %1098 ], [ %1099, %1106 ], [ %1099, %1113 ], [ %1099, %1183 ], [ %1099, %1128 ], [ %1099, %1176 ], [ %1099, %1178 ], [ 1, %1180 ]
  %1221 = add nsw i32 %1100, 1
  %1222 = icmp eq i32 %1221, 2
  br i1 %1222, label %1095, label %1098

1223:                                             ; preds = %1095
  %1224 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %909, align 8, !noalias !20
  %1225 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %910, align 8, !noalias !20
  br label %1226

1226:                                             ; preds = %1223, %1001
  %1227 = phi %"struct.std::__1::pair.286"* [ %1012, %1001 ], [ %1225, %1223 ]
  %1228 = phi %"struct.std::__1::pair.286"* [ %1002, %1001 ], [ %1224, %1223 ]
  %1229 = phi i32 [ %1011, %1001 ], [ %1217, %1223 ]
  %1230 = phi i32 [ %1010, %1001 ], [ %1218, %1223 ]
  %1231 = phi i64 [ %1009, %1001 ], [ %1030, %1223 ]
  %1232 = phi i64 [ %1008, %1001 ], [ %1026, %1223 ]
  %1233 = phi i8 [ %1007, %1001 ], [ %1219, %1223 ]
  %1234 = phi i8 [ %1006, %1001 ], [ %1220, %1223 ]
  %1235 = phi i64 [ %1005, %1001 ], [ %1032, %1223 ]
  %1236 = phi i64 [ %1004, %1001 ], [ %1028, %1223 ]
  %1237 = icmp eq %"struct.std::__1::pair.286"* %1228, %1227
  br i1 %1237, label %1238, label %1001

1238:                                             ; preds = %1226, %997
  %1239 = phi i32 [ 0, %997 ], [ %1229, %1226 ]
  %1240 = phi i32 [ 0, %997 ], [ %1230, %1226 ]
  %1241 = phi i64 [ %935, %997 ], [ %1231, %1226 ]
  %1242 = phi i64 [ %950, %997 ], [ %1232, %1226 ]
  %1243 = phi i8 [ 1, %997 ], [ %1233, %1226 ]
  %1244 = phi i8 [ 0, %997 ], [ %1234, %1226 ]
  %1245 = phi i64 [ %935, %997 ], [ %1235, %1226 ]
  %1246 = phi i64 [ %950, %997 ], [ %1236, %1226 ]
  %1247 = and i8 %1243, 1
  %1248 = and i8 %1247, %1244
  %1249 = icmp eq i8 %1248, 0
  br i1 %1249, label %1666, label %1250

1250:                                             ; preds = %1238
  %1251 = sub i64 %1246, %1242
  %1252 = icmp ugt i64 %1251, 31
  br i1 %1252, label %1666, label %1253

1253:                                             ; preds = %1250
  %1254 = sub i64 %1245, %1241
  %1255 = icmp ugt i64 %1254, 31
  br i1 %1255, label %1666, label %1256

1256:                                             ; preds = %1253
  %1257 = zext i32 %1240 to i64
  %1258 = mul i64 %410, %1257
  %1259 = zext i32 %1239 to i64
  %1260 = add i64 %1258, %1259
  %1261 = getelementptr inbounds float, float* %396, i64 %1260
  %1262 = load float, float* %1261, align 4, !noalias !20
  %1263 = getelementptr inbounds float, float* %402, i64 %1260
  %1264 = load float, float* %1263, align 4, !noalias !20
  %1265 = getelementptr inbounds float, float* %408, i64 %1260
  %1266 = load float, float* %1265, align 4, !noalias !20
  %1267 = trunc i64 %1241 to i32
  %1268 = icmp sgt i32 %1267, 2
  %1269 = add i64 %1241, 4294967294
  %1270 = and i64 %1269, 4294967295
  %1271 = select i1 %1268, i64 %1270, i64 0
  %1272 = add i64 %1245, 3
  %1273 = load i32, i32* %170, align 4, !noalias !20
  %1274 = zext i32 %1273 to i64
  %1275 = icmp ugt i64 %1272, %1274
  %1276 = select i1 %1275, i64 %1274, i64 %1272
  %1277 = icmp ult i64 %1271, %1276
  br i1 %1277, label %1278, label %1666

1278:                                             ; preds = %1256
  %1279 = trunc i64 %1242 to i32
  %1280 = icmp sgt i32 %1279, 2
  %1281 = add i64 %1242, 4294967294
  %1282 = and i64 %1281, 4294967295
  %1283 = select i1 %1280, i64 %1282, i64 0
  %1284 = add i64 %1246, 3
  %1285 = load i32, i32* %165, align 8, !noalias !20
  %1286 = zext i32 %1285 to i64
  %1287 = icmp ugt i64 %1284, %1286
  %1288 = select i1 %1287, i64 %1286, i64 %1284
  %1289 = icmp ult i64 %1283, %1288
  %1290 = load float*, float** %136, align 16, !noalias !20
  %1291 = load float*, float** %137, align 8, !noalias !20
  %1292 = load float*, float** %138, align 16, !noalias !20
  br label %1296

1293:                                             ; preds = %1301
  %1294 = and i8 %1302, 1
  %1295 = icmp eq i8 %1294, 0
  br i1 %1295, label %1666, label %1331

1296:                                             ; preds = %1301, %1278
  %1297 = phi i64 [ %1271, %1278 ], [ %1303, %1301 ]
  %1298 = phi i8 [ 0, %1278 ], [ %1302, %1301 ]
  br i1 %1289, label %1299, label %1301

1299:                                             ; preds = %1296
  %1300 = mul i64 %1297, %134
  br label %1305

1301:                                             ; preds = %1305, %1296
  %1302 = phi i8 [ %1298, %1296 ], [ %1328, %1305 ]
  %1303 = add nuw i64 %1297, 1
  %1304 = icmp ult i64 %1303, %1276
  br i1 %1304, label %1296, label %1293

1305:                                             ; preds = %1305, %1299
  %1306 = phi i64 [ %1283, %1299 ], [ %1329, %1305 ]
  %1307 = phi i8 [ %1298, %1299 ], [ %1328, %1305 ]
  %1308 = add i64 %1306, %1300
  %1309 = getelementptr inbounds float, float* %1290, i64 %1308
  %1310 = load float, float* %1309, align 4, !noalias !20
  %1311 = getelementptr inbounds float, float* %1291, i64 %1308
  %1312 = load float, float* %1311, align 4, !noalias !20
  %1313 = getelementptr inbounds float, float* %1292, i64 %1308
  %1314 = load float, float* %1313, align 4, !noalias !20
  %1315 = fsub float %1262, %1310
  %1316 = call float @llvm.fabs.f32(float %1315) #9
  %1317 = fmul float %128, %1316
  %1318 = fadd float %1317, 0.000000e+00
  %1319 = fsub float %1264, %1312
  %1320 = call float @llvm.fabs.f32(float %1319) #9
  %1321 = fmul float %129, %1320
  %1322 = fadd float %1318, %1321
  %1323 = fsub float %1266, %1314
  %1324 = call float @llvm.fabs.f32(float %1323) #9
  %1325 = fmul float %130, %1324
  %1326 = fadd float %1322, %1325
  %1327 = fcmp ole float %1326, 0x3F9EB851E0000000
  %1328 = select i1 %1327, i8 1, i8 %1307
  %1329 = add nuw i64 %1306, 1
  %1330 = icmp ult i64 %1329, %1288
  br i1 %1330, label %1305, label %1301

1331:                                             ; preds = %1293
  %1332 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %858, align 8, !noalias !20
  %1333 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %859, align 8, !noalias !20
  %1334 = icmp ult %"struct.std::__1::pair.270"* %1332, %1333
  %1335 = ptrtoint %"struct.std::__1::pair.270"* %1333 to i64
  br i1 %1334, label %1336, label %1342

1336:                                             ; preds = %1331
  %1337 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1332, i64 0, i32 0
  call void @_ZN3jxl14QuantizedPatchC2Ev(%"struct.jxl::QuantizedPatch"* %1337) #9, !noalias !20
  %1338 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1332, i64 0, i32 1
  %1339 = bitcast %"class.std::__1::vector.284"* %1338 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1339, i8 0, i64 24, i1 false) #9, !noalias !20
  %1340 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1332, i64 1
  %1341 = ptrtoint %"struct.std::__1::pair.270"* %1340 to i64
  store i64 %1341, i64* %928, align 8, !noalias !20
  br label %1376

1342:                                             ; preds = %1331
  %1343 = ptrtoint %"struct.std::__1::pair.270"* %1332 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %922) #9, !noalias !20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %922, i8 -86, i64 40, i1 false) #9, !noalias !20
  %1344 = load i64, i64* %929, align 8, !noalias !20
  %1345 = sub i64 %1343, %1344
  %1346 = sdiv exact i64 %1345, 184
  %1347 = add nsw i64 %1346, 1
  %1348 = icmp ugt i64 %1347, 100254043878856258
  br i1 %1348, label %1349, label %1351

1349:                                             ; preds = %1342
  %1350 = bitcast %"class.std::__1::vector.268"* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1350) #18, !noalias !20
  unreachable

1351:                                             ; preds = %1342
  %1352 = sub i64 %1335, %1344
  %1353 = sdiv exact i64 %1352, 184
  %1354 = icmp ult i64 %1353, 50127021939428129
  br i1 %1354, label %1356, label %1355

1355:                                             ; preds = %1351
  store %"struct.std::__1::pair.270"* null, %"struct.std::__1::pair.270"** %926, align 8, !noalias !20
  store %"class.std::__1::__compressed_pair.292"* %921, %"class.std::__1::__compressed_pair.292"** %930, align 8, !noalias !20
  br label %1361

1356:                                             ; preds = %1351
  %1357 = shl nsw i64 %1353, 1
  %1358 = icmp ult i64 %1357, %1347
  %1359 = select i1 %1358, i64 %1347, i64 %1357
  store %"struct.std::__1::pair.270"* null, %"struct.std::__1::pair.270"** %926, align 8, !noalias !20
  store %"class.std::__1::__compressed_pair.292"* %921, %"class.std::__1::__compressed_pair.292"** %930, align 8, !noalias !20
  %1360 = icmp eq i64 %1359, 0
  br i1 %1360, label %1366, label %1361

1361:                                             ; preds = %1356, %1355
  %1362 = phi i64 [ 100254043878856258, %1355 ], [ %1359, %1356 ]
  %1363 = mul i64 %1362, 184
  %1364 = call i8* @_Znwm(i64 %1363) #19, !noalias !20
  %1365 = bitcast i8* %1364 to %"struct.std::__1::pair.270"*
  br label %1366

1366:                                             ; preds = %1361, %1356
  %1367 = phi i64 [ %1362, %1361 ], [ 0, %1356 ]
  %1368 = phi %"struct.std::__1::pair.270"* [ %1365, %1361 ], [ null, %1356 ]
  store %"struct.std::__1::pair.270"* %1368, %"struct.std::__1::pair.270"** %923, align 8, !noalias !20
  %1369 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1368, i64 %1346
  store %"struct.std::__1::pair.270"* %1369, %"struct.std::__1::pair.270"** %924, align 8, !noalias !20
  %1370 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1368, i64 %1367
  store %"struct.std::__1::pair.270"* %1370, %"struct.std::__1::pair.270"** %926, align 8, !noalias !20
  %1371 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1369, i64 0, i32 0
  call void @_ZN3jxl14QuantizedPatchC2Ev(%"struct.jxl::QuantizedPatch"* %1371) #9, !noalias !20
  %1372 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1368, i64 %1346, i32 1
  %1373 = bitcast %"class.std::__1::vector.284"* %1372 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1373, i8 0, i64 24, i1 false) #9, !noalias !20
  %1374 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1369, i64 1
  store %"struct.std::__1::pair.270"* %1374, %"struct.std::__1::pair.270"** %925, align 8, !noalias !20
  call void @_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(%"class.std::__1::vector.268"* nonnull %26, %"struct.std::__1::__split_buffer.431"* nonnull dereferenceable(40) %7) #9, !noalias !20
  call void @_ZNSt3__114__split_bufferINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEERNS6_IS9_EEED2Ev(%"struct.std::__1::__split_buffer.431"* nonnull %7) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %922) #9, !noalias !20
  %1375 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %858, align 8, !noalias !20
  br label %1376

1376:                                             ; preds = %1366, %1336
  %1377 = phi %"struct.std::__1::pair.270"* [ %1340, %1336 ], [ %1375, %1366 ]
  %1378 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1377, i64 -1, i32 1
  %1379 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1377, i64 -1, i32 1, i32 0, i32 1
  %1380 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1379, align 8, !noalias !20
  %1381 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1377, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %1382 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1381, align 8, !noalias !20
  %1383 = icmp ult %"struct.std::__1::pair.286"* %1380, %1382
  %1384 = ptrtoint %"struct.std::__1::pair.286"* %1382 to i64
  br i1 %1383, label %1385, label %1391

1385:                                             ; preds = %1376
  %1386 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1380, i64 0, i32 0
  store i32 %1279, i32* %1386, align 4, !noalias !20
  %1387 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1380, i64 0, i32 1
  store i32 %1267, i32* %1387, align 4, !noalias !20
  %1388 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1380, i64 1
  %1389 = ptrtoint %"struct.std::__1::pair.286"* %1388 to i64
  %1390 = bitcast %"struct.std::__1::pair.286"** %1379 to i64*
  store i64 %1389, i64* %1390, align 8, !noalias !20
  br label %1449

1391:                                             ; preds = %1376
  %1392 = ptrtoint %"struct.std::__1::pair.286"* %1380 to i64
  %1393 = bitcast %"struct.std::__1::pair.286"** %1379 to i64*
  %1394 = bitcast %"class.std::__1::vector.284"* %1378 to i64*
  %1395 = load i64, i64* %1394, align 8, !noalias !20
  %1396 = sub i64 %1392, %1395
  %1397 = ashr exact i64 %1396, 3
  %1398 = add nsw i64 %1397, 1
  %1399 = icmp ugt i64 %1398, 2305843009213693951
  br i1 %1399, label %1400, label %1402

1400:                                             ; preds = %1391
  %1401 = bitcast %"class.std::__1::vector.284"* %1378 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1401) #18, !noalias !20
  unreachable

1402:                                             ; preds = %1391
  %1403 = bitcast %"struct.std::__1::pair.286"** %1381 to i64*
  %1404 = sub i64 %1384, %1395
  %1405 = ashr exact i64 %1404, 3
  %1406 = icmp ult i64 %1405, 1152921504606846975
  br i1 %1406, label %1407, label %1415

1407:                                             ; preds = %1402
  %1408 = ashr exact i64 %1404, 2
  %1409 = icmp ult i64 %1408, %1398
  %1410 = select i1 %1409, i64 %1398, i64 %1408
  %1411 = icmp eq i64 %1410, 0
  br i1 %1411, label %1420, label %1412

1412:                                             ; preds = %1407
  %1413 = icmp ugt i64 %1410, 2305843009213693951
  br i1 %1413, label %1414, label %1415

1414:                                             ; preds = %1412
  call void @abort() #18, !noalias !20
  unreachable

1415:                                             ; preds = %1412, %1402
  %1416 = phi i64 [ %1410, %1412 ], [ 2305843009213693951, %1402 ]
  %1417 = shl i64 %1416, 3
  %1418 = call i8* @_Znwm(i64 %1417) #19, !noalias !20
  %1419 = bitcast i8* %1418 to %"struct.std::__1::pair.286"*
  br label %1420

1420:                                             ; preds = %1415, %1407
  %1421 = phi i64 [ %1416, %1415 ], [ 0, %1407 ]
  %1422 = phi %"struct.std::__1::pair.286"* [ %1419, %1415 ], [ null, %1407 ]
  %1423 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1422, i64 %1397
  %1424 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1422, i64 %1421
  %1425 = ptrtoint %"struct.std::__1::pair.286"* %1424 to i64
  %1426 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1423, i64 0, i32 0
  store i32 %1279, i32* %1426, align 4, !noalias !20
  %1427 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1422, i64 %1397, i32 1
  store i32 %1267, i32* %1427, align 4, !noalias !20
  %1428 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1423, i64 1
  %1429 = ptrtoint %"struct.std::__1::pair.286"* %1428 to i64
  %1430 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %1378, i64 0, i32 0, i32 0
  %1431 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1430, align 8, !noalias !20
  %1432 = load i64, i64* %1393, align 8, !noalias !20
  %1433 = ptrtoint %"struct.std::__1::pair.286"* %1431 to i64
  %1434 = sub i64 %1432, %1433
  %1435 = ashr exact i64 %1434, 3
  %1436 = sub nsw i64 0, %1435
  %1437 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1423, i64 %1436
  %1438 = ptrtoint %"struct.std::__1::pair.286"* %1437 to i64
  %1439 = icmp sgt i64 %1434, 0
  br i1 %1439, label %1440, label %1444

1440:                                             ; preds = %1420
  %1441 = bitcast %"struct.std::__1::pair.286"* %1437 to i8*
  %1442 = bitcast %"struct.std::__1::pair.286"* %1431 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1441, i8* align 4 %1442, i64 %1434, i1 false) #9, !noalias !20
  %1443 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1430, align 8, !noalias !20
  br label %1444

1444:                                             ; preds = %1440, %1420
  %1445 = phi %"struct.std::__1::pair.286"* [ %1431, %1420 ], [ %1443, %1440 ]
  store i64 %1438, i64* %1394, align 8, !noalias !20
  store i64 %1429, i64* %1393, align 8, !noalias !20
  store i64 %1425, i64* %1403, align 8, !noalias !20
  %1446 = icmp eq %"struct.std::__1::pair.286"* %1445, null
  br i1 %1446, label %1449, label %1447

1447:                                             ; preds = %1444
  %1448 = bitcast %"struct.std::__1::pair.286"* %1445 to i8*
  call void @_ZdlPv(i8* %1448) #19, !noalias !20
  br label %1449

1449:                                             ; preds = %1447, %1444, %1385
  %1450 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %858, align 8, !noalias !20
  %1451 = add i64 %1251, 1
  %1452 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 0
  store i64 %1451, i64* %1452, align 8, !noalias !20
  %1453 = add i64 %1254, 1
  %1454 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 1
  store i64 %1453, i64* %1454, align 8, !noalias !20
  %1455 = icmp ult i64 %1245, %1241
  %1456 = icmp ult i64 %1246, %1242
  br i1 %1455, label %1500, label %1457

1457:                                             ; preds = %1449
  %1458 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 0
  %1459 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  br label %1460

1460:                                             ; preds = %1466, %1457
  %1461 = phi i64 [ %1241, %1457 ], [ %1468, %1466 ]
  %1462 = phi i32 [ 0, %1457 ], [ %1467, %1466 ]
  br i1 %1456, label %1466, label %1463

1463:                                             ; preds = %1460
  %1464 = sub i64 %1461, %1241
  %1465 = mul i64 %1461, %134
  br label %1470

1466:                                             ; preds = %1470, %1460
  %1467 = phi i32 [ %1462, %1460 ], [ %1497, %1470 ]
  %1468 = add i64 %1461, 1
  %1469 = icmp ugt i64 %1468, %1245
  br i1 %1469, label %2198, label %1460

1470:                                             ; preds = %1470, %1463
  %1471 = phi i64 [ %1242, %1463 ], [ %1498, %1470 ]
  %1472 = phi i32 [ %1462, %1463 ], [ %1497, %1470 ]
  %1473 = load i64, i64* %1452, align 8, !noalias !20
  %1474 = mul i64 %1473, %1464
  %1475 = sub i64 %1471, %1242
  %1476 = add i64 %1474, %1475
  %1477 = load float*, float** %137, align 8, !noalias !20
  %1478 = add i64 %1471, %1465
  %1479 = getelementptr inbounds float, float* %1477, i64 %1478
  %1480 = load float, float* %1479, align 4, !noalias !20
  %1481 = fsub float %1480, %1264
  %1482 = load float*, float** %1458, align 8, !noalias !20
  %1483 = getelementptr inbounds float, float* %1482, i64 %1476
  store float %1481, float* %1483, align 4, !noalias !20
  %1484 = load float*, float** %1458, align 8, !noalias !20
  %1485 = getelementptr inbounds float, float* %1484, i64 %1476
  %1486 = load float, float* %1485, align 4, !noalias !20
  %1487 = fdiv float %1486, %126
  %1488 = call float @llvm.trunc.f32(float %1487) #9
  %1489 = fptosi float %1488 to i32
  %1490 = trunc i32 %1489 to i8
  %1491 = load i8*, i8** %1459, align 8, !noalias !20
  %1492 = getelementptr inbounds i8, i8* %1491, i64 %1476
  store i8 %1490, i8* %1492, align 1, !noalias !20
  %1493 = icmp slt i32 %1489, 0
  %1494 = sub nsw i32 0, %1489
  %1495 = select i1 %1493, i32 %1494, i32 %1489
  %1496 = icmp sgt i32 %1495, %1472
  %1497 = select i1 %1496, i32 %1495, i32 %1472
  %1498 = add i64 %1471, 1
  %1499 = icmp ugt i64 %1498, %1246
  br i1 %1499, label %1466, label %1470

1500:                                             ; preds = %2284, %1449
  %1501 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %858, align 8, !noalias !20
  %1502 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1
  %1503 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 1, i32 0, i32 0
  %1504 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1503, align 8, !noalias !20
  %1505 = icmp eq %"struct.std::__1::pair.286"* %1504, null
  br i1 %1505, label %1511, label %1506

1506:                                             ; preds = %1500
  %1507 = ptrtoint %"struct.std::__1::pair.286"* %1504 to i64
  %1508 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 1, i32 0, i32 1
  %1509 = bitcast %"struct.std::__1::pair.286"** %1508 to i64*
  store i64 %1507, i64* %1509, align 8, !noalias !20
  %1510 = bitcast %"struct.std::__1::pair.286"* %1504 to i8*
  call void @_ZdlPv(i8* %1510) #19, !noalias !20
  br label %1511

1511:                                             ; preds = %1506, %1500
  %1512 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 0
  %1513 = load float*, float** %1512, align 8, !noalias !20
  %1514 = icmp eq float* %1513, null
  br i1 %1514, label %1520, label %1515

1515:                                             ; preds = %1511
  %1516 = ptrtoint float* %1513 to i64
  %1517 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 1
  %1518 = bitcast float** %1517 to i64*
  store i64 %1516, i64* %1518, align 8, !noalias !20
  %1519 = bitcast float* %1513 to i8*
  call void @_ZdlPv(i8* %1519) #19, !noalias !20
  br label %1520

1520:                                             ; preds = %1515, %1511
  %1521 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 0
  %1522 = load float*, float** %1521, align 8, !noalias !20
  %1523 = icmp eq float* %1522, null
  br i1 %1523, label %1549, label %1544

1524:                                             ; preds = %1558
  %1525 = ptrtoint i8* %1560 to i64
  %1526 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 1
  %1527 = bitcast i8** %1526 to i64*
  store i64 %1525, i64* %1527, align 8, !noalias !20
  call void @_ZdlPv(i8* nonnull %1560) #19, !noalias !20
  br label %1528

1528:                                             ; preds = %1558, %1524
  %1529 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %1530 = load i8*, i8** %1529, align 8, !noalias !20
  %1531 = icmp eq i8* %1530, null
  br i1 %1531, label %1536, label %1532

1532:                                             ; preds = %1528
  %1533 = ptrtoint i8* %1530 to i64
  %1534 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 1
  %1535 = bitcast i8** %1534 to i64*
  store i64 %1533, i64* %1535, align 8, !noalias !20
  call void @_ZdlPv(i8* nonnull %1530) #19, !noalias !20
  br label %1536

1536:                                             ; preds = %1532, %1528
  %1537 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %1538 = load i8*, i8** %1537, align 8, !noalias !20
  %1539 = icmp eq i8* %1538, null
  br i1 %1539, label %1562, label %1540

1540:                                             ; preds = %1536
  %1541 = ptrtoint i8* %1538 to i64
  %1542 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 1
  %1543 = bitcast i8** %1542 to i64*
  store i64 %1541, i64* %1543, align 8, !noalias !20
  call void @_ZdlPv(i8* nonnull %1538) #19, !noalias !20
  br label %1562

1544:                                             ; preds = %1520
  %1545 = ptrtoint float* %1522 to i64
  %1546 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 1
  %1547 = bitcast float** %1546 to i64*
  store i64 %1545, i64* %1547, align 8, !noalias !20
  %1548 = bitcast float* %1522 to i8*
  call void @_ZdlPv(i8* %1548) #19, !noalias !20
  br label %1549

1549:                                             ; preds = %1544, %1520
  %1550 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 0
  %1551 = load float*, float** %1550, align 8, !noalias !20
  %1552 = icmp eq float* %1551, null
  br i1 %1552, label %1558, label %1553

1553:                                             ; preds = %1549
  %1554 = ptrtoint float* %1551 to i64
  %1555 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 1
  %1556 = bitcast float** %1555 to i64*
  store i64 %1554, i64* %1556, align 8, !noalias !20
  %1557 = bitcast float* %1551 to i8*
  call void @_ZdlPv(i8* %1557) #19, !noalias !20
  br label %1558

1558:                                             ; preds = %1553, %1549
  %1559 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1501, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %1560 = load i8*, i8** %1559, align 8, !noalias !20
  %1561 = icmp eq i8* %1560, null
  br i1 %1561, label %1528, label %1524

1562:                                             ; preds = %1540, %1536
  store %"struct.std::__1::pair.270"* %1502, %"struct.std::__1::pair.270"** %858, align 8, !noalias !20
  br label %1666

1563:                                             ; preds = %2284
  br i1 %855, label %1564, label %1666

1564:                                             ; preds = %1563
  %1565 = load i64, i64* %782, align 8, !noalias !20
  %1566 = add i64 %1565, 1
  %1567 = urem i64 %1566, 624
  %1568 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 %1565
  %1569 = load i64, i64* %1568, align 8, !noalias !20
  %1570 = and i64 %1569, -2147483648
  %1571 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 %1567
  %1572 = load i64, i64* %1571, align 8, !noalias !20
  %1573 = and i64 %1572, 2147483646
  %1574 = or i64 %1573, %1570
  %1575 = add i64 %1565, 397
  %1576 = urem i64 %1575, 624
  %1577 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 %1576
  %1578 = load i64, i64* %1577, align 8, !noalias !20
  %1579 = lshr exact i64 %1574, 1
  %1580 = and i64 %1572, 1
  %1581 = mul nuw nsw i64 %1580, 2567483615
  %1582 = xor i64 %1581, %1578
  %1583 = xor i64 %1582, %1579
  store i64 %1583, i64* %1568, align 8, !noalias !20
  %1584 = load i64, i64* %782, align 8, !noalias !20
  %1585 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 %1584
  %1586 = load i64, i64* %1585, align 8, !noalias !20
  %1587 = lshr i64 %1586, 11
  %1588 = and i64 %1587, 4294967295
  %1589 = xor i64 %1588, %1586
  store i64 %1567, i64* %782, align 8, !noalias !20
  %1590 = shl i64 %1589, 7
  %1591 = and i64 %1590, 2636928640
  %1592 = xor i64 %1591, %1589
  %1593 = shl i64 %1592, 15
  %1594 = and i64 %1593, 4022730752
  %1595 = xor i64 %1594, %1592
  %1596 = lshr i64 %1595, 18
  %1597 = xor i64 %1596, %1595
  %1598 = uitofp i64 %1597 to float
  %1599 = fmul float %1598, 0x3DF0000000000000
  %1600 = fmul float %1599, 5.000000e-01
  %1601 = fadd float %1600, 5.000000e-01
  %1602 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %905, align 8, !noalias !20
  %1603 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %906, align 8, !noalias !20
  %1604 = icmp eq %"struct.std::__1::pair.286"* %1602, %1603
  br i1 %1604, label %1666, label %1605

1605:                                             ; preds = %1564
  %1606 = ptrtoint %"struct.std::__1::pair.286"* %1602 to i64
  %1607 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1603, i64 -1
  %1608 = ptrtoint %"struct.std::__1::pair.286"* %1607 to i64
  %1609 = sub i64 %1608, %1606
  %1610 = and i64 %1609, 8
  %1611 = icmp eq i64 %1610, 0
  br i1 %1611, label %1612, label %1629

1612:                                             ; preds = %1605
  %1613 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1602, i64 0, i32 0
  %1614 = load i32, i32* %1613, align 4, !noalias !20
  %1615 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1602, i64 0, i32 1
  %1616 = load i32, i32* %1615, align 4, !noalias !20
  %1617 = zext i32 %1616 to i64
  %1618 = load i8*, i8** %781, align 8, !noalias !20
  %1619 = load i64, i64* %763, align 8, !noalias !20
  %1620 = mul i64 %1619, %1617
  %1621 = getelementptr inbounds i8, i8* %1618, i64 %1620
  %1622 = ptrtoint i8* %1621 to i64
  %1623 = and i64 %1622, 63
  %1624 = icmp eq i64 %1623, 0
  call void @llvm.assume(i1 %1624) #9, !noalias !20
  %1625 = bitcast i8* %1621 to float*
  %1626 = zext i32 %1614 to i64
  %1627 = getelementptr inbounds float, float* %1625, i64 %1626
  store float %1601, float* %1627, align 4, !noalias !20
  %1628 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1602, i64 1
  br label %1629

1629:                                             ; preds = %1612, %1605
  %1630 = phi %"struct.std::__1::pair.286"* [ %1628, %1612 ], [ %1602, %1605 ]
  %1631 = icmp ult i64 %1609, 8
  br i1 %1631, label %1666, label %1632

1632:                                             ; preds = %1629, %1632
  %1633 = phi %"struct.std::__1::pair.286"* [ %1664, %1632 ], [ %1630, %1629 ]
  %1634 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1633, i64 0, i32 0
  %1635 = load i32, i32* %1634, align 4, !noalias !20
  %1636 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1633, i64 0, i32 1
  %1637 = load i32, i32* %1636, align 4, !noalias !20
  %1638 = zext i32 %1637 to i64
  %1639 = load i8*, i8** %781, align 8, !noalias !20
  %1640 = load i64, i64* %763, align 8, !noalias !20
  %1641 = mul i64 %1640, %1638
  %1642 = getelementptr inbounds i8, i8* %1639, i64 %1641
  %1643 = ptrtoint i8* %1642 to i64
  %1644 = and i64 %1643, 63
  %1645 = icmp eq i64 %1644, 0
  call void @llvm.assume(i1 %1645) #9, !noalias !20
  %1646 = bitcast i8* %1642 to float*
  %1647 = zext i32 %1635 to i64
  %1648 = getelementptr inbounds float, float* %1646, i64 %1647
  store float %1601, float* %1648, align 4, !noalias !20
  %1649 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1633, i64 1, i32 0
  %1650 = load i32, i32* %1649, align 4, !noalias !20
  %1651 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1633, i64 1, i32 1
  %1652 = load i32, i32* %1651, align 4, !noalias !20
  %1653 = zext i32 %1652 to i64
  %1654 = load i8*, i8** %781, align 8, !noalias !20
  %1655 = load i64, i64* %763, align 8, !noalias !20
  %1656 = mul i64 %1655, %1653
  %1657 = getelementptr inbounds i8, i8* %1654, i64 %1656
  %1658 = ptrtoint i8* %1657 to i64
  %1659 = and i64 %1658, 63
  %1660 = icmp eq i64 %1659, 0
  call void @llvm.assume(i1 %1660) #9, !noalias !20
  %1661 = bitcast i8* %1657 to float*
  %1662 = zext i32 %1650 to i64
  %1663 = getelementptr inbounds float, float* %1661, i64 %1662
  store float %1601, float* %1663, align 4, !noalias !20
  %1664 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1633, i64 2
  %1665 = icmp eq %"struct.std::__1::pair.286"* %1664, %1603
  br i1 %1665, label %1666, label %1632

1666:                                             ; preds = %1629, %1632, %1564, %1563, %1562, %1293, %1256, %1253, %1250, %1238, %949
  %1667 = add nuw nsw i64 %950, 1
  %1668 = load i32, i32* %165, align 8, !noalias !20
  %1669 = zext i32 %1668 to i64
  %1670 = icmp ult i64 %1667, %1669
  br i1 %1670, label %949, label %941

1671:                                             ; preds = %940
  br i1 %248, label %1686, label %1672

1672:                                             ; preds = %1671
  %1673 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %3, i64 0, i32 15
  %1674 = bitcast %"class.std::__1::basic_string"* %1673 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1675 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1674, i64 0, i32 1, i32 0
  %1676 = load i8, i8* %1675, align 1, !noalias !20
  %1677 = icmp slt i8 %1676, 0
  br i1 %1677, label %1678, label %1681

1678:                                             ; preds = %1672
  %1679 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %3, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1680 = load i64, i64* %1679, align 8, !noalias !20
  br label %1683

1681:                                             ; preds = %1672
  %1682 = zext i8 %1676 to i64
  br label %1683

1683:                                             ; preds = %1681, %1678
  %1684 = phi i64 [ %1680, %1678 ], [ %1682, %1681 ]
  %1685 = icmp eq i64 %1684, 0
  br i1 %1685, label %1686, label %1689

1686:                                             ; preds = %1683, %1671
  %1687 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 527, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0)) #9, !noalias !20
  %1688 = call zeroext i1 @_ZN3jxl5AbortEv() #18, !noalias !20
  unreachable

1689:                                             ; preds = %1683
  call void @_ZNK3jxl6AuxOut19DumpPlaneNormalizedIfEEvPKcRKNS_5PlaneIT_EE(%"struct.jxl::AuxOut"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), %"class.jxl::Plane.97"* nonnull dereferenceable(32) %23) #9, !noalias !20
  br label %1690

1690:                                             ; preds = %1689, %940
  %1691 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %857, align 8, !noalias !20
  %1692 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %858, align 8, !noalias !20
  %1693 = icmp eq %"struct.std::__1::pair.270"* %1691, %1692
  br i1 %1693, label %2147, label %1694

1694:                                             ; preds = %1690
  %1695 = getelementptr inbounds %"struct.std::__1::__less.434", %"struct.std::__1::__less.434"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1695) #9, !noalias !20
  call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_(%"struct.std::__1::pair.270"* %1691, %"struct.std::__1::pair.270"* %1692, %"struct.std::__1::__less.434"* nonnull dereferenceable(1) %8) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1695) #9, !noalias !20
  %1696 = bitcast %"struct.std::__1::pair.270"** %858 to i64*
  %1697 = load i64, i64* %1696, align 8, !noalias !20
  %1698 = bitcast %"class.std::__1::vector.268"* %26 to i64*
  %1699 = load i64, i64* %1698, align 8, !noalias !20
  %1700 = sub i64 %1697, %1699
  %1701 = sdiv exact i64 %1700, 184
  %1702 = icmp ugt i64 %1701, 1
  %1703 = inttoptr i64 %1699 to %"struct.std::__1::pair.270"*
  br i1 %1702, label %1806, label %1706

1704:                                             ; preds = %1907
  %1705 = inttoptr i64 %1911 to %"struct.std::__1::pair.270"*
  br label %1706

1706:                                             ; preds = %1704, %1694
  %1707 = phi i64 [ 0, %1694 ], [ %1908, %1704 ]
  %1708 = phi i64 [ %1697, %1694 ], [ %1910, %1704 ]
  %1709 = phi i64 [ %1701, %1694 ], [ %1913, %1704 ]
  %1710 = phi %"struct.std::__1::pair.270"* [ %1703, %1694 ], [ %1705, %1704 ]
  %1711 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1710, i64 %1707, i32 1
  %1712 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1710, i64 %1707, i32 1, i32 0, i32 1
  %1713 = bitcast %"struct.std::__1::pair.286"** %1712 to i64*
  %1714 = load i64, i64* %1713, align 8, !noalias !20
  %1715 = bitcast %"class.std::__1::vector.284"* %1711 to i64*
  %1716 = load i64, i64* %1715, align 8, !noalias !20
  %1717 = sub i64 %1714, %1716
  %1718 = ashr exact i64 %1717, 3
  %1719 = icmp ugt i64 %1718, 1
  %1720 = zext i1 %1719 to i64
  %1721 = add i64 %1707, %1720
  %1722 = icmp ugt i64 %1721, %1709
  %1723 = inttoptr i64 %1708 to %"struct.std::__1::pair.270"*
  br i1 %1722, label %1724, label %1727

1724:                                             ; preds = %1706
  %1725 = sub i64 %1721, %1709
  call void @_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE8__appendEm(%"class.std::__1::vector.268"* nonnull %26, i64 %1725) #9, !noalias !20
  %1726 = load i64, i64* %1696, align 8, !noalias !20
  br label %1798

1727:                                             ; preds = %1706
  %1728 = icmp ult i64 %1721, %1709
  br i1 %1728, label %1729, label %1798

1729:                                             ; preds = %1727
  %1730 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1710, i64 %1721
  %1731 = icmp eq %"struct.std::__1::pair.270"* %1730, %1723
  br i1 %1731, label %1796, label %1732

1732:                                             ; preds = %1729, %1794
  %1733 = phi %"struct.std::__1::pair.270"* [ %1734, %1794 ], [ %1723, %1729 ]
  %1734 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1
  %1735 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 1, i32 0, i32 0
  %1736 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1735, align 8, !noalias !20
  %1737 = icmp eq %"struct.std::__1::pair.286"* %1736, null
  br i1 %1737, label %1743, label %1738

1738:                                             ; preds = %1732
  %1739 = ptrtoint %"struct.std::__1::pair.286"* %1736 to i64
  %1740 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 1, i32 0, i32 1
  %1741 = bitcast %"struct.std::__1::pair.286"** %1740 to i64*
  store i64 %1739, i64* %1741, align 8, !noalias !20
  %1742 = bitcast %"struct.std::__1::pair.286"* %1736 to i8*
  call void @_ZdlPv(i8* %1742) #19, !noalias !20
  br label %1743

1743:                                             ; preds = %1738, %1732
  %1744 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 0
  %1745 = load float*, float** %1744, align 8, !noalias !20
  %1746 = icmp eq float* %1745, null
  br i1 %1746, label %1752, label %1747

1747:                                             ; preds = %1743
  %1748 = ptrtoint float* %1745 to i64
  %1749 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 1
  %1750 = bitcast float** %1749 to i64*
  store i64 %1748, i64* %1750, align 8, !noalias !20
  %1751 = bitcast float* %1745 to i8*
  call void @_ZdlPv(i8* %1751) #19, !noalias !20
  br label %1752

1752:                                             ; preds = %1747, %1743
  %1753 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 0
  %1754 = load float*, float** %1753, align 8, !noalias !20
  %1755 = icmp eq float* %1754, null
  br i1 %1755, label %1781, label %1776

1756:                                             ; preds = %1790
  %1757 = ptrtoint i8* %1792 to i64
  %1758 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 1
  %1759 = bitcast i8** %1758 to i64*
  store i64 %1757, i64* %1759, align 8, !noalias !20
  call void @_ZdlPv(i8* nonnull %1792) #19, !noalias !20
  br label %1760

1760:                                             ; preds = %1790, %1756
  %1761 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %1762 = load i8*, i8** %1761, align 8, !noalias !20
  %1763 = icmp eq i8* %1762, null
  br i1 %1763, label %1768, label %1764

1764:                                             ; preds = %1760
  %1765 = ptrtoint i8* %1762 to i64
  %1766 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 1
  %1767 = bitcast i8** %1766 to i64*
  store i64 %1765, i64* %1767, align 8, !noalias !20
  call void @_ZdlPv(i8* nonnull %1762) #19, !noalias !20
  br label %1768

1768:                                             ; preds = %1764, %1760
  %1769 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %1770 = load i8*, i8** %1769, align 8, !noalias !20
  %1771 = icmp eq i8* %1770, null
  br i1 %1771, label %1794, label %1772

1772:                                             ; preds = %1768
  %1773 = ptrtoint i8* %1770 to i64
  %1774 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 1
  %1775 = bitcast i8** %1774 to i64*
  store i64 %1773, i64* %1775, align 8, !noalias !20
  call void @_ZdlPv(i8* nonnull %1770) #19, !noalias !20
  br label %1794

1776:                                             ; preds = %1752
  %1777 = ptrtoint float* %1754 to i64
  %1778 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 1
  %1779 = bitcast float** %1778 to i64*
  store i64 %1777, i64* %1779, align 8, !noalias !20
  %1780 = bitcast float* %1754 to i8*
  call void @_ZdlPv(i8* %1780) #19, !noalias !20
  br label %1781

1781:                                             ; preds = %1776, %1752
  %1782 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 0
  %1783 = load float*, float** %1782, align 8, !noalias !20
  %1784 = icmp eq float* %1783, null
  br i1 %1784, label %1790, label %1785

1785:                                             ; preds = %1781
  %1786 = ptrtoint float* %1783 to i64
  %1787 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 1
  %1788 = bitcast float** %1787 to i64*
  store i64 %1786, i64* %1788, align 8, !noalias !20
  %1789 = bitcast float* %1783 to i8*
  call void @_ZdlPv(i8* %1789) #19, !noalias !20
  br label %1790

1790:                                             ; preds = %1785, %1781
  %1791 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1733, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %1792 = load i8*, i8** %1791, align 8, !noalias !20
  %1793 = icmp eq i8* %1792, null
  br i1 %1793, label %1760, label %1756

1794:                                             ; preds = %1772, %1768
  %1795 = icmp eq %"struct.std::__1::pair.270"* %1734, %1730
  br i1 %1795, label %1796, label %1732

1796:                                             ; preds = %1794, %1729
  store %"struct.std::__1::pair.270"* %1730, %"struct.std::__1::pair.270"** %858, align 8, !noalias !20
  %1797 = ptrtoint %"struct.std::__1::pair.270"* %1730 to i64
  br label %1798

1798:                                             ; preds = %1796, %1727, %1724
  %1799 = phi i64 [ %1726, %1724 ], [ %1708, %1727 ], [ %1797, %1796 ]
  %1800 = load i64, i64* %1698, align 8, !noalias !20
  %1801 = icmp eq i64 %1799, %1800
  %1802 = inttoptr i64 %1800 to %"struct.std::__1::pair.270"*
  br i1 %1801, label %2147, label %1803

1803:                                             ; preds = %1798
  %1804 = sub i64 %1799, %1800
  %1805 = sdiv exact i64 %1804, 184
  br label %1918

1806:                                             ; preds = %1694, %1907
  %1807 = phi %"struct.std::__1::pair.270"* [ %1915, %1907 ], [ %1703, %1694 ]
  %1808 = phi i64 [ %1909, %1907 ], [ 1, %1694 ]
  %1809 = phi i64 [ %1908, %1907 ], [ 0, %1694 ]
  %1810 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808
  %1811 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1810, i64 0, i32 0, i32 0
  %1812 = load i64, i64* %1811, align 8, !noalias !20
  %1813 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 0, i32 0
  %1814 = load i64, i64* %1813, align 8, !noalias !20
  %1815 = icmp eq i64 %1812, %1814
  br i1 %1815, label %1816, label %1837

1816:                                             ; preds = %1806
  %1817 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 1
  %1818 = load i64, i64* %1817, align 8, !noalias !20
  %1819 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 0, i32 1
  %1820 = load i64, i64* %1819, align 8, !noalias !20
  %1821 = icmp eq i64 %1818, %1820
  br i1 %1821, label %1822, label %1837

1822:                                             ; preds = %1816
  %1823 = mul i64 %1818, %1812
  %1824 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 0, i32 0, i32 0
  %1825 = load i8*, i8** %1824, align 8, !noalias !20
  %1826 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 0, i32 2, i64 0, i32 0, i32 0
  %1827 = load i8*, i8** %1826, align 8, !noalias !20
  %1828 = call i32 @bcmp(i8* %1825, i8* %1827, i64 %1823) #9, !noalias !20
  %1829 = icmp eq i32 %1828, 0
  br i1 %1829, label %1830, label %1837

1830:                                             ; preds = %1822
  %1831 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 1, i32 0, i32 0
  %1832 = load i8*, i8** %1831, align 8, !noalias !20
  %1833 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 0, i32 2, i64 1, i32 0, i32 0
  %1834 = load i8*, i8** %1833, align 8, !noalias !20
  %1835 = call i32 @bcmp(i8* %1832, i8* %1834, i64 %1823) #9, !noalias !20
  %1836 = icmp eq i32 %1835, 0
  br i1 %1836, label %1839, label %1837

1837:                                             ; preds = %1830, %1822, %1816, %1806
  %1838 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 1
  br label %1855

1839:                                             ; preds = %1830
  %1840 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 2, i32 0, i32 0
  %1841 = load i8*, i8** %1840, align 8, !noalias !20
  %1842 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 0, i32 2, i64 2, i32 0, i32 0
  %1843 = load i8*, i8** %1842, align 8, !noalias !20
  %1844 = call i32 @bcmp(i8* %1841, i8* %1843, i64 %1823) #9, !noalias !20
  %1845 = icmp eq i32 %1844, 0
  %1846 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 1
  br i1 %1845, label %1847, label %1855

1847:                                             ; preds = %1839
  %1848 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 1, i32 0, i32 1
  %1849 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1848, align 8, !noalias !20
  %1850 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 1, i32 0, i32 0
  %1851 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1850, align 8, !noalias !20
  %1852 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 1, i32 0, i32 1
  %1853 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1852, align 8, !noalias !20
  %1854 = call %"struct.std::__1::pair.286"* @_ZNSt3__16vectorINS_4pairIjjEENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector.284"* %1846, %"struct.std::__1::pair.286"* %1849, %"struct.std::__1::pair.286"* %1851, %"struct.std::__1::pair.286"* %1853) #9, !noalias !20
  br label %1907

1855:                                             ; preds = %1839, %1837
  %1856 = phi %"class.std::__1::vector.284"* [ %1838, %1837 ], [ %1846, %1839 ]
  %1857 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1809, i32 1, i32 0, i32 1
  %1858 = bitcast %"struct.std::__1::pair.286"** %1857 to i64*
  %1859 = load i64, i64* %1858, align 8, !noalias !20
  %1860 = bitcast %"class.std::__1::vector.284"* %1856 to i64*
  %1861 = load i64, i64* %1860, align 8, !noalias !20
  %1862 = sub i64 %1859, %1861
  %1863 = ashr exact i64 %1862, 3
  %1864 = icmp ugt i64 %1863, 1
  %1865 = zext i1 %1864 to i64
  %1866 = add i64 %1809, %1865
  %1867 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866
  %1868 = bitcast %"struct.std::__1::pair.270"* %1867 to i8*
  %1869 = bitcast %"struct.std::__1::pair.270"* %1810 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1868, i8* align 8 %1869, i64 16, i1 false) #9, !noalias !20
  %1870 = icmp eq i64 %1866, %1808
  br i1 %1870, label %1907, label %1871

1871:                                             ; preds = %1855
  %1872 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866, i32 0, i32 2, i64 0
  %1873 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 0, i32 0, i32 0
  %1874 = load i8*, i8** %1873, align 8, !noalias !20
  %1875 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 0, i32 0, i32 1
  %1876 = load i8*, i8** %1875, align 8, !noalias !20
  call void @_ZNSt3__16vectorIaNS_9allocatorIaEEE6assignIPaEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIaNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.271"* %1872, i8* %1874, i8* %1876) #9, !noalias !20
  %1877 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866, i32 0, i32 2, i64 1
  %1878 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 1, i32 0, i32 0
  %1879 = load i8*, i8** %1878, align 8, !noalias !20
  %1880 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 1, i32 0, i32 1
  %1881 = load i8*, i8** %1880, align 8, !noalias !20
  call void @_ZNSt3__16vectorIaNS_9allocatorIaEEE6assignIPaEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIaNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.271"* %1877, i8* %1879, i8* %1881) #9, !noalias !20
  %1882 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866, i32 0, i32 2, i64 2
  %1883 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 2, i32 0, i32 0
  %1884 = load i8*, i8** %1883, align 8, !noalias !20
  %1885 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 2, i64 2, i32 0, i32 1
  %1886 = load i8*, i8** %1885, align 8, !noalias !20
  call void @_ZNSt3__16vectorIaNS_9allocatorIaEEE6assignIPaEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIaNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.271"* %1882, i8* %1884, i8* %1886) #9, !noalias !20
  %1887 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866, i32 0, i32 3, i64 0
  %1888 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 3, i64 0, i32 0, i32 0
  %1889 = load float*, float** %1888, align 8, !noalias !20
  %1890 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 3, i64 0, i32 0, i32 1
  %1891 = load float*, float** %1890, align 8, !noalias !20
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.278"* %1887, float* %1889, float* %1891) #9, !noalias !20
  %1892 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866, i32 0, i32 3, i64 1
  %1893 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 3, i64 1, i32 0, i32 0
  %1894 = load float*, float** %1893, align 8, !noalias !20
  %1895 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 3, i64 1, i32 0, i32 1
  %1896 = load float*, float** %1895, align 8, !noalias !20
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.278"* %1892, float* %1894, float* %1896) #9, !noalias !20
  %1897 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866, i32 0, i32 3, i64 2
  %1898 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 3, i64 2, i32 0, i32 0
  %1899 = load float*, float** %1898, align 8, !noalias !20
  %1900 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 0, i32 3, i64 2, i32 0, i32 1
  %1901 = load float*, float** %1900, align 8, !noalias !20
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.278"* %1897, float* %1899, float* %1901) #9, !noalias !20
  %1902 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1866, i32 1
  %1903 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 1, i32 0, i32 0
  %1904 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1903, align 8, !noalias !20
  %1905 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1807, i64 %1808, i32 1, i32 0, i32 1
  %1906 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %1905, align 8, !noalias !20
  call void @_ZNSt3__16vectorINS_4pairIjjEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.284"* %1902, %"struct.std::__1::pair.286"* %1904, %"struct.std::__1::pair.286"* %1906) #9, !noalias !20
  br label %1907

1907:                                             ; preds = %1871, %1855, %1847
  %1908 = phi i64 [ %1809, %1847 ], [ %1866, %1871 ], [ %1808, %1855 ]
  %1909 = add nuw i64 %1808, 1
  %1910 = load i64, i64* %1696, align 8, !noalias !20
  %1911 = load i64, i64* %1698, align 8, !noalias !20
  %1912 = sub i64 %1910, %1911
  %1913 = sdiv exact i64 %1912, 184
  %1914 = icmp ult i64 %1909, %1913
  %1915 = inttoptr i64 %1911 to %"struct.std::__1::pair.270"*
  br i1 %1914, label %1806, label %1704

1916:                                             ; preds = %1918
  %1917 = icmp ult i64 %1927, 20
  br i1 %1917, label %2147, label %1930

1918:                                             ; preds = %1918, %1803
  %1919 = phi i64 [ 0, %1803 ], [ %1928, %1918 ]
  %1920 = phi i64 [ 0, %1803 ], [ %1927, %1918 ]
  %1921 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1802, i64 %1919, i32 0, i32 0
  %1922 = load i64, i64* %1921, align 8, !noalias !20
  %1923 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1802, i64 %1919, i32 0, i32 1
  %1924 = load i64, i64* %1923, align 8, !noalias !20
  %1925 = mul i64 %1924, %1922
  %1926 = icmp ugt i64 %1925, %1920
  %1927 = select i1 %1926, i64 %1925, i64 %1920
  %1928 = add nuw i64 %1919, 1
  %1929 = icmp ult i64 %1928, %1805
  br i1 %1929, label %1918, label %1916

1930:                                             ; preds = %1916
  %1931 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 14
  %1932 = load i8, i8* %1931, align 8, !range !14, !alias.scope !15, !noalias !18
  %1933 = icmp eq i8 %1932, 0
  br i1 %1933, label %2139, label %1934

1934:                                             ; preds = %1930
  %1935 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 41, i32 0
  %1936 = load float, float* %1935, align 4, !alias.scope !15, !noalias !18
  %1937 = fcmp ult float %1936, 1.000000e+02
  br i1 %1937, label %2139, label %1938

1938:                                             ; preds = %1934
  %1939 = call i8* @_Znwm(i64 8192) #19, !noalias !20
  %1940 = bitcast i8* %1939 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1939, i8 0, i64 8192, i1 false) #9, !noalias !20
  %1941 = getelementptr inbounds i8, i8* %1939, i64 4096
  %1942 = bitcast i8* %1941 to float*
  %1943 = bitcast float* %30 to i8*
  %1944 = bitcast float* %31 to i8*
  br label %1945

1945:                                             ; preds = %1950, %1938
  %1946 = phi i64 [ 0, %1938 ], [ %1951, %1950 ]
  br label %1956

1947:                                             ; preds = %1950
  call void @_ZdlPv(i8* nonnull %1939) #19, !noalias !20
  %1948 = load i64, i64* %1698, align 8, !noalias !20
  %1949 = load i64, i64* %1696, align 8, !noalias !20
  br label %2139

1950:                                             ; preds = %2090
  %1951 = add nuw i64 %1946, 1
  %1952 = load i64, i64* %1696, align 8, !noalias !20
  %1953 = sub i64 %1952, %2091
  %1954 = sdiv exact i64 %1953, 184
  %1955 = icmp ult i64 %1951, %1954
  br i1 %1955, label %1945, label %1947

1956:                                             ; preds = %1945, %2090
  %1957 = phi i64 [ 0, %1945 ], [ %2092, %2090 ]
  br label %1958

1958:                                             ; preds = %1958, %1956
  %1959 = phi i64 [ 0, %1956 ], [ %1999, %1958 ]
  %1960 = getelementptr float, float* %1940, i64 %1959
  %1961 = bitcast float* %1960 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1961, align 4, !noalias !20
  %1962 = getelementptr float, float* %1960, i64 4
  %1963 = bitcast float* %1962 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1963, align 4, !noalias !20
  %1964 = or i64 %1959, 8
  %1965 = getelementptr float, float* %1940, i64 %1964
  %1966 = bitcast float* %1965 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1966, align 4, !noalias !20
  %1967 = getelementptr float, float* %1965, i64 4
  %1968 = bitcast float* %1967 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1968, align 4, !noalias !20
  %1969 = or i64 %1959, 16
  %1970 = getelementptr float, float* %1940, i64 %1969
  %1971 = bitcast float* %1970 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1971, align 4, !noalias !20
  %1972 = getelementptr float, float* %1970, i64 4
  %1973 = bitcast float* %1972 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1973, align 4, !noalias !20
  %1974 = or i64 %1959, 24
  %1975 = getelementptr float, float* %1940, i64 %1974
  %1976 = bitcast float* %1975 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1976, align 4, !noalias !20
  %1977 = getelementptr float, float* %1975, i64 4
  %1978 = bitcast float* %1977 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1978, align 4, !noalias !20
  %1979 = or i64 %1959, 32
  %1980 = getelementptr float, float* %1940, i64 %1979
  %1981 = bitcast float* %1980 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1981, align 4, !noalias !20
  %1982 = getelementptr float, float* %1980, i64 4
  %1983 = bitcast float* %1982 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1983, align 4, !noalias !20
  %1984 = or i64 %1959, 40
  %1985 = getelementptr float, float* %1940, i64 %1984
  %1986 = bitcast float* %1985 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1986, align 4, !noalias !20
  %1987 = getelementptr float, float* %1985, i64 4
  %1988 = bitcast float* %1987 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1988, align 4, !noalias !20
  %1989 = or i64 %1959, 48
  %1990 = getelementptr float, float* %1940, i64 %1989
  %1991 = bitcast float* %1990 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1991, align 4, !noalias !20
  %1992 = getelementptr float, float* %1990, i64 4
  %1993 = bitcast float* %1992 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1993, align 4, !noalias !20
  %1994 = or i64 %1959, 56
  %1995 = getelementptr float, float* %1940, i64 %1994
  %1996 = bitcast float* %1995 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1996, align 4, !noalias !20
  %1997 = getelementptr float, float* %1995, i64 4
  %1998 = bitcast float* %1997 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1998, align 4, !noalias !20
  %1999 = add nuw nsw i64 %1959, 64
  %2000 = icmp eq i64 %1999, 1024
  br i1 %2000, label %2001, label %1958, !llvm.loop !21

2001:                                             ; preds = %1958
  call void @llvm.memset.p0i8.i64(i8* align 4 %1941, i8 0, i64 4096, i1 false) #9, !noalias !20
  %2002 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %857, align 8, !noalias !20
  %2003 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2002, i64 %1946, i32 0, i32 0
  %2004 = load i64, i64* %2003, align 8, !noalias !20
  %2005 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2002, i64 %1946, i32 1
  %2006 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2002, i64 %1946, i32 1, i32 0, i32 1
  %2007 = bitcast %"struct.std::__1::pair.286"** %2006 to i64*
  %2008 = load i64, i64* %2007, align 8, !noalias !20
  %2009 = bitcast %"class.std::__1::vector.284"* %2005 to i64*
  %2010 = load i64, i64* %2009, align 8, !noalias !20
  %2011 = icmp eq i64 %2008, %2010
  %2012 = ptrtoint %"struct.std::__1::pair.270"* %2002 to i64
  %2013 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2002, i64 %1946, i32 0, i32 1
  br i1 %2011, label %2014, label %2016

2014:                                             ; preds = %2001
  %2015 = load i64, i64* %2013, align 8, !noalias !20
  br label %2020

2016:                                             ; preds = %2001
  %2017 = icmp eq i64 %2004, 0
  %2018 = getelementptr inbounds [3 x float*], [3 x float*]* %14, i64 0, i64 %1957
  %2019 = load i64, i64* %2013, align 8, !noalias !20
  br label %2025

2020:                                             ; preds = %2051, %2014
  %2021 = phi i64 [ %2015, %2014 ], [ %2054, %2051 ]
  %2022 = icmp eq i64 %2021, 0
  br i1 %2022, label %2090, label %2023

2023:                                             ; preds = %2020
  %2024 = icmp eq i64 %2004, 0
  br label %2084

2025:                                             ; preds = %2051, %2016
  %2026 = phi i64 [ %2010, %2016 ], [ %2052, %2051 ]
  %2027 = phi i64 [ %2008, %2016 ], [ %2053, %2051 ]
  %2028 = phi i64 [ %2019, %2016 ], [ %2054, %2051 ]
  %2029 = phi i64 [ %2019, %2016 ], [ %2055, %2051 ]
  %2030 = phi i64 [ 0, %2016 ], [ %2056, %2051 ]
  %2031 = inttoptr i64 %2026 to %"struct.std::__1::pair.286"*
  %2032 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2031, i64 %2030, i32 0
  %2033 = load i32, i32* %2032, align 4, !noalias !20
  %2034 = zext i32 %2033 to i64
  %2035 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2031, i64 %2030, i32 1
  %2036 = load i32, i32* %2035, align 4, !noalias !20
  %2037 = zext i32 %2036 to i64
  %2038 = icmp eq i64 %2029, 0
  br i1 %2038, label %2051, label %2039

2039:                                             ; preds = %2025, %2062
  %2040 = phi i64 [ %2063, %2062 ], [ %2028, %2025 ]
  %2041 = phi i64 [ %2064, %2062 ], [ 0, %2025 ]
  br i1 %2017, label %2062, label %2042

2042:                                             ; preds = %2039
  %2043 = add i64 %2041, %2037
  %2044 = mul i64 %2043, %134
  %2045 = add i64 %2044, %2034
  %2046 = mul i64 %2041, %2004
  %2047 = load float*, float** %2018, align 8, !noalias !20
  br label %2066

2048:                                             ; preds = %2062
  %2049 = load i64, i64* %2007, align 8, !noalias !20
  %2050 = load i64, i64* %2009, align 8, !noalias !20
  br label %2051

2051:                                             ; preds = %2048, %2025
  %2052 = phi i64 [ %2050, %2048 ], [ %2026, %2025 ]
  %2053 = phi i64 [ %2049, %2048 ], [ %2027, %2025 ]
  %2054 = phi i64 [ %2063, %2048 ], [ %2028, %2025 ]
  %2055 = phi i64 [ %2063, %2048 ], [ 0, %2025 ]
  %2056 = add nuw i64 %2030, 1
  %2057 = sub i64 %2053, %2052
  %2058 = ashr exact i64 %2057, 3
  %2059 = icmp ult i64 %2056, %2058
  br i1 %2059, label %2025, label %2020

2060:                                             ; preds = %2081
  %2061 = load i64, i64* %2013, align 8, !noalias !20
  br label %2062

2062:                                             ; preds = %2060, %2039
  %2063 = phi i64 [ %2061, %2060 ], [ %2040, %2039 ]
  %2064 = add nuw i64 %2041, 1
  %2065 = icmp ult i64 %2064, %2063
  br i1 %2065, label %2039, label %2048

2066:                                             ; preds = %2081, %2042
  %2067 = phi i64 [ 0, %2042 ], [ %2082, %2081 ]
  %2068 = add i64 %2045, %2067
  %2069 = getelementptr inbounds float, float* %2047, i64 %2068
  %2070 = load float, float* %2069, align 4, !noalias !20
  %2071 = add i64 %2067, %2046
  %2072 = getelementptr inbounds float, float* %1940, i64 %2071
  %2073 = load float, float* %2072, align 4, !noalias !20
  %2074 = fcmp olt float %2070, %2073
  br i1 %2074, label %2075, label %2076

2075:                                             ; preds = %2066
  store float %2070, float* %2072, align 4, !noalias !20
  br label %2076

2076:                                             ; preds = %2075, %2066
  %2077 = getelementptr inbounds float, float* %1942, i64 %2071
  %2078 = load float, float* %2077, align 4, !noalias !20
  %2079 = fcmp ogt float %2070, %2078
  br i1 %2079, label %2080, label %2081

2080:                                             ; preds = %2076
  store float %2070, float* %2077, align 4, !noalias !20
  br label %2081

2081:                                             ; preds = %2080, %2076
  %2082 = add nuw i64 %2067, 1
  %2083 = icmp eq i64 %2082, %2004
  br i1 %2083, label %2060, label %2066

2084:                                             ; preds = %2097, %2023
  %2085 = phi i64 [ %2012, %2023 ], [ %2098, %2097 ]
  %2086 = phi %"struct.std::__1::pair.270"* [ %2002, %2023 ], [ %2099, %2097 ]
  %2087 = phi i64 [ 0, %2023 ], [ %2100, %2097 ]
  br i1 %2024, label %2097, label %2088

2088:                                             ; preds = %2084
  %2089 = mul i64 %2087, %2004
  br label %2104

2090:                                             ; preds = %2097, %2020
  %2091 = phi i64 [ %2012, %2020 ], [ %2098, %2097 ]
  %2092 = add nuw nsw i64 %1957, 1
  %2093 = icmp eq i64 %2092, 3
  br i1 %2093, label %1950, label %1956

2094:                                             ; preds = %2125
  %2095 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %857, align 8, !noalias !20
  %2096 = ptrtoint %"struct.std::__1::pair.270"* %2095 to i64
  br label %2097

2097:                                             ; preds = %2094, %2084
  %2098 = phi i64 [ %2096, %2094 ], [ %2085, %2084 ]
  %2099 = phi %"struct.std::__1::pair.270"* [ %2095, %2094 ], [ %2086, %2084 ]
  %2100 = add nuw i64 %2087, 1
  %2101 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2099, i64 %1946, i32 0, i32 1
  %2102 = load i64, i64* %2101, align 8, !noalias !20
  %2103 = icmp ult i64 %2100, %2102
  br i1 %2103, label %2084, label %2090

2104:                                             ; preds = %2125, %2088
  %2105 = phi i64 [ 0, %2088 ], [ %2137, %2125 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1943)
  %2106 = add i64 %2105, %2089
  %2107 = getelementptr inbounds float, float* %1940, i64 %2106
  %2108 = load float, float* %2107, align 4, !noalias !20
  store float %2108, float* %30, align 4, !noalias !20
  %2109 = getelementptr inbounds float, float* %1942, i64 %2106
  %2110 = load float, float* %2109, align 4, !noalias !20
  %2111 = fcmp ugt float %2108, %2110
  br i1 %2111, label %2112, label %2115

2112:                                             ; preds = %2104
  %2113 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 594, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0)) #9, !noalias !20
  %2114 = call zeroext i1 @_ZN3jxl5AbortEv() #18, !noalias !20
  unreachable

2115:                                             ; preds = %2104
  %2116 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %857, align 8, !noalias !20
  %2117 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2116, i64 %1946, i32 0, i32 3, i64 %1957, i32 0, i32 0
  %2118 = load float*, float** %2117, align 8, !noalias !20
  %2119 = getelementptr inbounds float, float* %2118, i64 %2106
  %2120 = fadd float %2110, -1.000000e+00
  %2121 = fcmp ugt float %2120, %2108
  br i1 %2121, label %2122, label %2125

2122:                                             ; preds = %2115
  %2123 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 598, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0)) #9, !noalias !20
  %2124 = call zeroext i1 @_ZN3jxl5AbortEv() #18, !noalias !20
  unreachable

2125:                                             ; preds = %2115
  %2126 = load float, float* %2119, align 4, !noalias !20
  %2127 = fcmp olt float %2108, %2126
  %2128 = select i1 %2127, float* %2119, float* %30
  %2129 = bitcast float* %2128 to i32*
  %2130 = load i32, i32* %2129, align 4, !noalias !20
  %2131 = bitcast float* %2119 to i32*
  store i32 %2130, i32* %2131, align 4, !noalias !20
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1944)
  store float %2120, float* %31, align 4, !noalias !20
  %2132 = bitcast i32 %2130 to float
  %2133 = fcmp ogt float %2120, %2132
  %2134 = select i1 %2133, float* %2119, float* %31
  %2135 = bitcast float* %2134 to i32*
  %2136 = load i32, i32* %2135, align 4, !noalias !20
  store i32 %2136, i32* %2131, align 4, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1944)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1943)
  %2137 = add nuw i64 %2105, 1
  %2138 = icmp eq i64 %2137, %2004
  br i1 %2138, label %2094, label %2104

2139:                                             ; preds = %1947, %1934, %1930
  %2140 = phi i64 [ %1799, %1934 ], [ %1799, %1930 ], [ %1949, %1947 ]
  %2141 = phi i64 [ %1800, %1934 ], [ %1800, %1930 ], [ %1948, %1947 ]
  %2142 = bitcast %"class.std::__1::vector.268"* %32 to i64*
  store i64 %2141, i64* %2142, align 16, !alias.scope !18, !noalias !15
  %2143 = bitcast %"struct.std::__1::pair.270"** %117 to i64*
  store i64 %2140, i64* %2143, align 8, !alias.scope !18, !noalias !15
  %2144 = bitcast %"struct.std::__1::pair.270"** %859 to i64*
  %2145 = load i64, i64* %2144, align 8, !noalias !20
  %2146 = bitcast %"struct.std::__1::pair.270"** %118 to i64*
  store i64 %2145, i64* %2146, align 16, !alias.scope !18, !noalias !15
  br label %2147

2147:                                             ; preds = %1798, %1916, %1690, %2139
  %2148 = phi i8* [ %856, %2139 ], [ %115, %1690 ], [ %115, %1916 ], [ %115, %1798 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2148, i8 0, i64 24, i1 false) #9, !noalias !15
  %2149 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %909, align 8, !noalias !20
  %2150 = icmp eq %"struct.std::__1::pair.286"* %2149, null
  br i1 %2150, label %2155, label %2151

2151:                                             ; preds = %2147
  %2152 = ptrtoint %"struct.std::__1::pair.286"* %2149 to i64
  %2153 = bitcast %"struct.std::__1::pair.286"** %910 to i64*
  store i64 %2152, i64* %2153, align 8, !noalias !20
  %2154 = bitcast %"struct.std::__1::pair.286"* %2149 to i8*
  call void @_ZdlPv(i8* %2154) #19, !noalias !20
  br label %2155

2155:                                             ; preds = %2151, %2147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %908) #9, !noalias !20
  %2156 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %905, align 8, !noalias !20
  %2157 = icmp eq %"struct.std::__1::pair.286"* %2156, null
  br i1 %2157, label %2162, label %2158

2158:                                             ; preds = %2155
  %2159 = ptrtoint %"struct.std::__1::pair.286"* %2156 to i64
  %2160 = bitcast %"struct.std::__1::pair.286"** %906 to i64*
  store i64 %2159, i64* %2160, align 8, !noalias !20
  %2161 = bitcast %"struct.std::__1::pair.286"* %2156 to i8*
  call void @_ZdlPv(i8* %2161) #19, !noalias !20
  br label %2162

2162:                                             ; preds = %2158, %2155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %904) #9, !noalias !20
  %2163 = load i8*, i8** %864, align 8, !noalias !20
  store i8* null, i8** %864, align 8, !noalias !20
  %2164 = icmp eq i8* %2163, null
  br i1 %2164, label %2166, label %2165

2165:                                             ; preds = %2162
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2163) #9, !noalias !20
  br label %2166

2166:                                             ; preds = %2165, %2162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %860) #9, !noalias !20
  %2167 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %26, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEENS6_IS9_EEED2Ev(%"class.std::__1::__vector_base.269"* nonnull %2167) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %856) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 5000, i8* nonnull %764) #9, !noalias !20
  %2168 = load i8*, i8** %781, align 8, !noalias !20
  store i8* null, i8** %781, align 8, !noalias !20
  %2169 = icmp eq i8* %2168, null
  br i1 %2169, label %2171, label %2170

2170:                                             ; preds = %2166
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2168) #9, !noalias !20
  br label %2171

2171:                                             ; preds = %2170, %2166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %761) #9, !noalias !20
  %2172 = load %"struct.std::__1::pair.404"*, %"struct.std::__1::pair.404"** %417, align 8, !noalias !20
  %2173 = icmp eq %"struct.std::__1::pair.404"* %2172, null
  br i1 %2173, label %2177, label %2174

2174:                                             ; preds = %2171
  %2175 = ptrtoint %"struct.std::__1::pair.404"* %2172 to i64
  store i64 %2175, i64* %422, align 8, !noalias !20
  %2176 = bitcast %"struct.std::__1::pair.404"* %2172 to i8*
  call void @_ZdlPv(i8* %2176) #19, !noalias !20
  br label %2177

2177:                                             ; preds = %2174, %2171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %416) #9, !noalias !20
  %2178 = load i8*, i8** %403, align 8, !noalias !20
  store i8* null, i8** %403, align 8, !noalias !20
  %2179 = icmp eq i8* %2178, null
  br i1 %2179, label %2181, label %2180

2180:                                             ; preds = %2177
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2178) #9, !noalias !20
  br label %2181

2181:                                             ; preds = %2180, %2177
  %2182 = load i8*, i8** %397, align 8, !noalias !20
  store i8* null, i8** %397, align 8, !noalias !20
  %2183 = icmp eq i8* %2182, null
  br i1 %2183, label %2185, label %2184

2184:                                             ; preds = %2181
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2182) #9, !noalias !20
  br label %2185

2185:                                             ; preds = %2184, %2181
  %2186 = load i8*, i8** %391, align 8, !noalias !20
  store i8* null, i8** %391, align 8, !noalias !20
  %2187 = icmp eq i8* %2186, null
  br i1 %2187, label %2189, label %2188

2188:                                             ; preds = %2185
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2186) #9, !noalias !20
  br label %2189

2189:                                             ; preds = %2188, %2185
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %310) #9, !noalias !20
  %2190 = load i8*, i8** %275, align 8, !noalias !20
  store i8* null, i8** %275, align 8, !noalias !20
  %2191 = icmp eq i8* %2190, null
  br i1 %2191, label %2193, label %2192

2192:                                             ; preds = %2189
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2190) #9, !noalias !20
  br label %2193

2193:                                             ; preds = %2192, %2189
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %271) #9, !noalias !20
  br label %2194

2194:                                             ; preds = %2193, %269
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %212) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #9, !noalias !20
  %2195 = load i8*, i8** %164, align 8, !noalias !20
  store i8* null, i8** %164, align 8, !noalias !20
  %2196 = icmp eq i8* %2195, null
  br i1 %2196, label %2286, label %2197

2197:                                             ; preds = %2194
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2195) #9, !noalias !20
  br label %2286

2198:                                             ; preds = %1466
  %2199 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 0
  %2200 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  br label %2201

2201:                                             ; preds = %2237, %2198
  %2202 = phi i64 [ %1241, %2198 ], [ %2239, %2237 ]
  %2203 = phi i32 [ %1467, %2198 ], [ %2238, %2237 ]
  br i1 %1456, label %2237, label %2204

2204:                                             ; preds = %2201
  %2205 = sub i64 %2202, %1241
  %2206 = mul i64 %2202, %134
  br label %2207

2207:                                             ; preds = %2207, %2204
  %2208 = phi i64 [ %1242, %2204 ], [ %2235, %2207 ]
  %2209 = phi i32 [ %2203, %2204 ], [ %2234, %2207 ]
  %2210 = load i64, i64* %1452, align 8, !noalias !20
  %2211 = mul i64 %2210, %2205
  %2212 = sub i64 %2208, %1242
  %2213 = add i64 %2211, %2212
  %2214 = load float*, float** %136, align 16, !noalias !20
  %2215 = add i64 %2208, %2206
  %2216 = getelementptr inbounds float, float* %2214, i64 %2215
  %2217 = load float, float* %2216, align 4, !noalias !20
  %2218 = fsub float %2217, %1262
  %2219 = load float*, float** %2199, align 8, !noalias !20
  %2220 = getelementptr inbounds float, float* %2219, i64 %2213
  store float %2218, float* %2220, align 4, !noalias !20
  %2221 = load float*, float** %2199, align 8, !noalias !20
  %2222 = getelementptr inbounds float, float* %2221, i64 %2213
  %2223 = load float, float* %2222, align 4, !noalias !20
  %2224 = fdiv float %2223, %125
  %2225 = call float @llvm.trunc.f32(float %2224) #9
  %2226 = fptosi float %2225 to i32
  %2227 = trunc i32 %2226 to i8
  %2228 = load i8*, i8** %2200, align 8, !noalias !20
  %2229 = getelementptr inbounds i8, i8* %2228, i64 %2213
  store i8 %2227, i8* %2229, align 1, !noalias !20
  %2230 = icmp slt i32 %2226, 0
  %2231 = sub nsw i32 0, %2226
  %2232 = select i1 %2230, i32 %2231, i32 %2226
  %2233 = icmp sgt i32 %2232, %2209
  %2234 = select i1 %2233, i32 %2232, i32 %2209
  %2235 = add i64 %2208, 1
  %2236 = icmp ugt i64 %2235, %1246
  br i1 %2236, label %2237, label %2207

2237:                                             ; preds = %2207, %2201
  %2238 = phi i32 [ %2203, %2201 ], [ %2234, %2207 ]
  %2239 = add i64 %2202, 1
  %2240 = icmp ugt i64 %2239, %1245
  br i1 %2240, label %2241, label %2201

2241:                                             ; preds = %2237
  %2242 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 0
  %2243 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1450, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  br label %2244

2244:                                             ; preds = %2280, %2241
  %2245 = phi i64 [ %1241, %2241 ], [ %2282, %2280 ]
  %2246 = phi i32 [ %2238, %2241 ], [ %2281, %2280 ]
  br i1 %1456, label %2280, label %2247

2247:                                             ; preds = %2244
  %2248 = sub i64 %2245, %1241
  %2249 = mul i64 %2245, %134
  br label %2250

2250:                                             ; preds = %2250, %2247
  %2251 = phi i64 [ %1242, %2247 ], [ %2278, %2250 ]
  %2252 = phi i32 [ %2246, %2247 ], [ %2277, %2250 ]
  %2253 = load i64, i64* %1452, align 8, !noalias !20
  %2254 = mul i64 %2253, %2248
  %2255 = sub i64 %2251, %1242
  %2256 = add i64 %2254, %2255
  %2257 = load float*, float** %138, align 16, !noalias !20
  %2258 = add i64 %2251, %2249
  %2259 = getelementptr inbounds float, float* %2257, i64 %2258
  %2260 = load float, float* %2259, align 4, !noalias !20
  %2261 = fsub float %2260, %1266
  %2262 = load float*, float** %2242, align 8, !noalias !20
  %2263 = getelementptr inbounds float, float* %2262, i64 %2256
  store float %2261, float* %2263, align 4, !noalias !20
  %2264 = load float*, float** %2242, align 8, !noalias !20
  %2265 = getelementptr inbounds float, float* %2264, i64 %2256
  %2266 = load float, float* %2265, align 4, !noalias !20
  %2267 = fdiv float %2266, %127
  %2268 = call float @llvm.trunc.f32(float %2267) #9
  %2269 = fptosi float %2268 to i32
  %2270 = trunc i32 %2269 to i8
  %2271 = load i8*, i8** %2243, align 8, !noalias !20
  %2272 = getelementptr inbounds i8, i8* %2271, i64 %2256
  store i8 %2270, i8* %2272, align 1, !noalias !20
  %2273 = icmp slt i32 %2269, 0
  %2274 = sub nsw i32 0, %2269
  %2275 = select i1 %2273, i32 %2274, i32 %2269
  %2276 = icmp sgt i32 %2275, %2252
  %2277 = select i1 %2276, i32 %2275, i32 %2252
  %2278 = add i64 %2251, 1
  %2279 = icmp ugt i64 %2278, %1246
  br i1 %2279, label %2280, label %2250

2280:                                             ; preds = %2250, %2244
  %2281 = phi i32 [ %2246, %2244 ], [ %2277, %2250 ]
  %2282 = add i64 %2245, 1
  %2283 = icmp ugt i64 %2282, %1245
  br i1 %2283, label %2284, label %2244

2284:                                             ; preds = %2280
  %2285 = icmp slt i32 %2281, 2
  br i1 %2285, label %1500, label %1563

2286:                                             ; preds = %2194, %2197
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #9, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %131) #9, !noalias !20
  %2287 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %116, align 16
  %2288 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %117, align 8
  %2289 = icmp eq %"struct.std::__1::pair.270"* %2287, %2288
  br i1 %2289, label %2290, label %2317

2290:                                             ; preds = %123, %2286
  %2291 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6
  %2292 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 18
  %2293 = load i32, i32* %2292, align 8
  %2294 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 7
  %2295 = load i32, i32* %2294, align 4
  %2296 = icmp slt i32 %2295, 4
  br i1 %2296, label %2297, label %2301

2297:                                             ; preds = %2290
  %2298 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %2291, i64 0, i32 0
  %2299 = load float, float* %2298, align 8
  %2300 = fcmp oge float %2299, 3.000000e+00
  br label %2301

2301:                                             ; preds = %2297, %2290
  %2302 = phi i1 [ false, %2290 ], [ %2300, %2297 ]
  switch i32 %2293, label %2303 [
    i32 1, label %2304
    i32 0, label %3513
  ]

2303:                                             ; preds = %2301
  br i1 %2302, label %2304, label %3513

2304:                                             ; preds = %2301, %2303
  %2305 = bitcast %"class.std::__1::vector.268"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2305) #9
  %2306 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 8
  call void @_ZN3jxl17FindDotDictionaryERKNS_14CompressParamsERKNS_6Image3IfEERKNS_19ColorCorrelationMapEPNS_10ThreadPoolE(%"class.std::__1::vector.268"* nonnull sret %33, %"struct.jxl::CompressParams"* dereferenceable(360) %2291, %"class.jxl::Image3"* dereferenceable(96) %0, %"struct.jxl::ColorCorrelationMap"* dereferenceable(104) %2306, %"class.jxl::ThreadPool"* %2) #9
  call void @_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE13__vdeallocateEv(%"class.std::__1::vector.268"* nonnull %32) #9
  %2307 = bitcast %"class.std::__1::vector.268"* %33 to <2 x i64>*
  %2308 = load <2 x i64>, <2 x i64>* %2307, align 16
  %2309 = bitcast %"class.std::__1::vector.268"* %32 to <2 x i64>*
  store <2 x i64> %2308, <2 x i64>* %2309, align 16
  %2310 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  %2311 = bitcast %"struct.std::__1::pair.270"** %2310 to i64*
  %2312 = load i64, i64* %2311, align 16
  %2313 = bitcast %"struct.std::__1::pair.270"** %118 to i64*
  store i64 %2312, i64* %2313, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2305, i8 0, i64 24, i1 false) #9
  %2314 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %33, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEENS6_IS9_EEED2Ev(%"class.std::__1::__vector_base.269"* nonnull %2314) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2305) #9
  %2315 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %116, align 16
  %2316 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %117, align 8
  br label %2317

2317:                                             ; preds = %2304, %2286
  %2318 = phi %"struct.std::__1::pair.270"* [ %2316, %2304 ], [ %2288, %2286 ]
  %2319 = phi %"struct.std::__1::pair.270"* [ %2315, %2304 ], [ %2287, %2286 ]
  %2320 = icmp eq %"struct.std::__1::pair.270"* %2319, %2318
  br i1 %2320, label %3513, label %2321

2321:                                             ; preds = %2317
  call fastcc void @"_ZNSt3__16__sortIRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEvT0_SN_T_"(%"struct.std::__1::pair.270"* %2319, %"struct.std::__1::pair.270"* %2318) #9
  %2322 = bitcast %"struct.std::__1::pair.270"** %117 to i64*
  %2323 = load i64, i64* %2322, align 8
  %2324 = bitcast %"class.std::__1::vector.268"* %32 to i64*
  %2325 = load i64, i64* %2324, align 16
  %2326 = icmp eq i64 %2323, %2325
  %2327 = inttoptr i64 %2325 to %"struct.std::__1::pair.270"*
  br i1 %2326, label %2331, label %2328

2328:                                             ; preds = %2321
  %2329 = sub i64 %2323, %2325
  %2330 = sdiv exact i64 %2329, 184
  br label %2384

2331:                                             ; preds = %2384, %2321
  %2332 = phi i64 [ 0, %2321 ], [ %2398, %2384 ]
  %2333 = phi i64 [ 0, %2321 ], [ %2397, %2384 ]
  %2334 = phi i64 [ 0, %2321 ], [ %2395, %2384 ]
  %2335 = uitofp i64 %2334 to float
  %2336 = uitofp i64 %2332 to double
  %2337 = call double @sqrt(double %2336) #9
  %2338 = fptrunc double %2337 to float
  %2339 = fcmp olt float %2335, %2338
  %2340 = select i1 %2339, float %2338, float %2335
  %2341 = fptoui float %2340 to i64
  %2342 = uitofp i64 %2333 to float
  %2343 = call double @sqrt(double %2336) #9
  %2344 = fptrunc double %2343 to float
  %2345 = fcmp olt float %2342, %2344
  %2346 = select i1 %2345, float %2344, float %2342
  %2347 = fptoui float %2346 to i64
  %2348 = bitcast %"class.std::__1::vector.298"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2348) #9
  %2349 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %34, i64 0, i32 0, i32 0
  %2350 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %34, i64 0, i32 0, i32 1
  %2351 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %34, i64 0, i32 0, i32 2, i32 0, i32 0
  %2352 = load i64, i64* %2322, align 8
  %2353 = load i64, i64* %2324, align 16
  %2354 = sub i64 %2352, %2353
  %2355 = sdiv exact i64 %2354, 184
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2348, i8 0, i64 24, i1 false) #9
  %2356 = icmp eq i64 %2354, 0
  br i1 %2356, label %2376, label %2357

2357:                                             ; preds = %2331
  %2358 = icmp ugt i64 %2355, 1152921504606846975
  br i1 %2358, label %2359, label %2361

2359:                                             ; preds = %2357
  %2360 = bitcast %"class.std::__1::vector.298"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2360) #18
  unreachable

2361:                                             ; preds = %2357
  %2362 = shl nsw i64 %2355, 4
  %2363 = call i8* @_Znwm(i64 %2362) #19
  %2364 = bitcast i8* %2363 to %"struct.std::__1::pair.300"*
  %2365 = bitcast %"class.std::__1::vector.298"* %34 to i8**
  store i8* %2363, i8** %2365, align 8
  %2366 = getelementptr inbounds %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2364, i64 %2355
  store %"struct.std::__1::pair.300"* %2366, %"struct.std::__1::pair.300"** %2351, align 8
  %2367 = bitcast %"struct.std::__1::pair.300"** %2350 to i64*
  %2368 = ptrtoint i8* %2363 to i64
  %2369 = add nsw i64 %2355, -1
  %2370 = getelementptr %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2364, i64 %2369, i32 0
  %2371 = ptrtoint i64* %2370 to i64
  %2372 = sub i64 16, %2368
  %2373 = add i64 %2372, %2371
  %2374 = and i64 %2373, -16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2363, i8 0, i64 %2374, i1 false) #9
  %2375 = ptrtoint %"struct.std::__1::pair.300"* %2366 to i64
  store i64 %2375, i64* %2367, align 8
  br label %2376

2376:                                             ; preds = %2331, %2361
  %2377 = bitcast %"class.jxl::Plane"* %35 to i8*
  %2378 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %35, i64 0, i32 0, i32 0
  %2379 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %35, i64 0, i32 0, i32 1
  %2380 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %35, i64 0, i32 0, i32 4
  %2381 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %35, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %2382 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %35, i64 0, i32 0
  %2383 = bitcast %"class.jxl::Plane"* %35 to i8*
  br label %2401

2384:                                             ; preds = %2328, %2384
  %2385 = phi i64 [ 0, %2328 ], [ %2395, %2384 ]
  %2386 = phi i64 [ 0, %2328 ], [ %2397, %2384 ]
  %2387 = phi i64 [ 0, %2328 ], [ %2398, %2384 ]
  %2388 = phi i64 [ 0, %2328 ], [ %2399, %2384 ]
  %2389 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2327, i64 %2388, i32 0, i32 0
  %2390 = load i64, i64* %2389, align 8
  %2391 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2327, i64 %2388, i32 0, i32 1
  %2392 = load i64, i64* %2391, align 8
  %2393 = mul i64 %2392, %2390
  %2394 = icmp ult i64 %2385, %2390
  %2395 = select i1 %2394, i64 %2390, i64 %2385
  %2396 = icmp ult i64 %2386, %2392
  %2397 = select i1 %2396, i64 %2392, i64 %2386
  %2398 = add i64 %2393, %2387
  %2399 = add nuw i64 %2388, 1
  %2400 = icmp ult i64 %2399, %2330
  br i1 %2400, label %2384, label %2331

2401:                                             ; preds = %2590, %2376
  %2402 = phi i64 [ %2341, %2376 ], [ %2407, %2590 ]
  %2403 = phi i64 [ %2347, %2376 ], [ %2411, %2590 ]
  %2404 = uitofp i64 %2402 to float
  %2405 = fmul float %2404, 0x3FF0CCCCC0000000
  %2406 = fadd float %2405, 1.000000e+00
  %2407 = fptoui float %2406 to i64
  %2408 = uitofp i64 %2403 to float
  %2409 = fmul float %2408, 0x3FF0CCCCC0000000
  %2410 = fadd float %2409, 1.000000e+00
  %2411 = fptoui float %2410 to i64
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2377) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2383, i8 -86, i64 32, i1 false)
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %2382, i64 %2407, i64 %2411, i64 1) #9
  %2412 = load i32, i32* %2378, align 8
  %2413 = icmp eq i32 %2412, 0
  %2414 = load i32, i32* %2379, align 4
  %2415 = icmp eq i32 %2414, 0
  %2416 = or i1 %2413, %2415
  br i1 %2416, label %2440, label %2417

2417:                                             ; preds = %2401
  %2418 = load i8*, i8** %2381, align 8
  %2419 = ptrtoint i8* %2418 to i64
  %2420 = and i64 %2419, 63
  %2421 = icmp eq i64 %2420, 0
  call void @llvm.assume(i1 %2421) #9
  %2422 = zext i32 %2412 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %2418, i8 0, i64 %2422, i1 false) #9
  %2423 = load i32, i32* %2379, align 4
  %2424 = icmp ugt i32 %2423, 1
  br i1 %2424, label %2425, label %2440

2425:                                             ; preds = %2417, %2425
  %2426 = phi i64 [ %2436, %2425 ], [ 1, %2417 ]
  %2427 = load i32, i32* %2378, align 8
  %2428 = load i8*, i8** %2381, align 8
  %2429 = load i64, i64* %2380, align 8
  %2430 = mul i64 %2429, %2426
  %2431 = getelementptr inbounds i8, i8* %2428, i64 %2430
  %2432 = ptrtoint i8* %2431 to i64
  %2433 = and i64 %2432, 63
  %2434 = icmp eq i64 %2433, 0
  call void @llvm.assume(i1 %2434) #9
  %2435 = zext i32 %2427 to i64
  call void @llvm.memset.p0i8.i64(i8* align 64 %2431, i8 0, i64 %2435, i1 false) #9
  %2436 = add nuw nsw i64 %2426, 1
  %2437 = load i32, i32* %2379, align 4
  %2438 = zext i32 %2437 to i64
  %2439 = icmp ult i64 %2436, %2438
  br i1 %2439, label %2425, label %2440

2440:                                             ; preds = %2425, %2417, %2401
  %2441 = load i8*, i8** %2381, align 8
  %2442 = ptrtoint i8* %2441 to i64
  %2443 = and i64 %2442, 63
  %2444 = icmp eq i64 %2443, 0
  call void @llvm.assume(i1 %2444) #9
  %2445 = load i64, i64* %2380, align 8
  %2446 = load i64, i64* %2322, align 8
  %2447 = load i64, i64* %2324, align 16
  %2448 = icmp eq i64 %2446, %2447
  br i1 %2448, label %2584, label %2449

2449:                                             ; preds = %2440, %2575
  %2450 = phi i64 [ %2580, %2575 ], [ %2447, %2440 ]
  %2451 = phi i64 [ %2578, %2575 ], [ 0, %2440 ]
  %2452 = phi i64 [ %2577, %2575 ], [ 0, %2440 ]
  %2453 = inttoptr i64 %2450 to %"struct.std::__1::pair.270"*
  %2454 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2453, i64 %2451, i32 0, i32 0
  %2455 = load i64, i64* %2454, align 8
  %2456 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2453, i64 %2451, i32 0, i32 1
  %2457 = load i64, i64* %2456, align 8
  %2458 = icmp ugt i64 %2457, %2411
  br i1 %2458, label %2584, label %2459

2459:                                             ; preds = %2449
  %2460 = icmp ugt i64 %2455, %2407
  %2461 = and i64 %2457, 1
  %2462 = icmp eq i64 %2457, 1
  %2463 = sub i64 %2457, %2461
  %2464 = icmp eq i64 %2461, 0
  br label %2465

2465:                                             ; preds = %2459, %2522
  %2466 = phi i64 [ %2457, %2459 ], [ %2524, %2522 ]
  %2467 = phi i64 [ 0, %2459 ], [ %2523, %2522 ]
  br i1 %2460, label %2522, label %2468

2468:                                             ; preds = %2465
  %2469 = icmp ugt i64 %2466, %2467
  br label %2473

2470:                                             ; preds = %2503
  %2471 = add i64 %2508, %2455
  %2472 = icmp ugt i64 %2471, %2407
  br i1 %2472, label %2522, label %2473

2473:                                             ; preds = %2468, %2470
  %2474 = phi i64 [ %2455, %2468 ], [ %2471, %2470 ]
  %2475 = phi i64 [ 0, %2468 ], [ %2508, %2470 ]
  br i1 %2469, label %2480, label %2476

2476:                                             ; preds = %2473
  %2477 = load %"struct.std::__1::pair.300"*, %"struct.std::__1::pair.300"** %2349, align 8
  %2478 = getelementptr inbounds %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2477, i64 %2451, i32 0
  store i64 %2475, i64* %2478, align 8
  %2479 = getelementptr inbounds %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2477, i64 %2451, i32 1
  store i64 %2467, i64* %2479, align 8
  br label %2575

2480:                                             ; preds = %2473
  %2481 = icmp ult i64 %2475, %2474
  br i1 %2462, label %2487, label %2482

2482:                                             ; preds = %2480, %3524
  %2483 = phi i64 [ %3527, %3524 ], [ %2467, %2480 ]
  %2484 = phi i8 [ %3526, %3524 ], [ 0, %2480 ]
  %2485 = phi i64 [ %3528, %3524 ], [ %2463, %2480 ]
  %2486 = mul i64 %2483, %2445
  br i1 %2481, label %2509, label %2518

2487:                                             ; preds = %3524, %2480
  %2488 = phi i64 [ undef, %2480 ], [ %3525, %3524 ]
  %2489 = phi i8 [ undef, %2480 ], [ %3526, %3524 ]
  %2490 = phi i64 [ %2467, %2480 ], [ %3527, %3524 ]
  %2491 = phi i8 [ 0, %2480 ], [ %3526, %3524 ]
  br i1 %2464, label %2503, label %2492

2492:                                             ; preds = %2487
  %2493 = mul i64 %2490, %2445
  br i1 %2481, label %2494, label %2503

2494:                                             ; preds = %2492, %2500
  %2495 = phi i64 [ %2501, %2500 ], [ %2475, %2492 ]
  %2496 = add i64 %2495, %2493
  %2497 = getelementptr inbounds i8, i8* %2441, i64 %2496
  %2498 = load i8, i8* %2497, align 1
  %2499 = icmp eq i8 %2498, 0
  br i1 %2499, label %2500, label %2503

2500:                                             ; preds = %2494
  %2501 = add i64 %2495, 1
  %2502 = icmp eq i64 %2501, %2474
  br i1 %2502, label %2503, label %2494

2503:                                             ; preds = %2494, %2500, %2492, %2487
  %2504 = phi i64 [ %2488, %2487 ], [ %2475, %2492 ], [ %2495, %2494 ], [ %2474, %2500 ]
  %2505 = phi i8 [ %2489, %2487 ], [ %2491, %2492 ], [ 1, %2494 ], [ %2491, %2500 ]
  %2506 = and i8 %2505, 1
  %2507 = icmp eq i8 %2506, 0
  %2508 = add i64 %2504, 1
  br i1 %2507, label %2526, label %2470

2509:                                             ; preds = %2482, %2515
  %2510 = phi i64 [ %2516, %2515 ], [ %2475, %2482 ]
  %2511 = add i64 %2510, %2486
  %2512 = getelementptr inbounds i8, i8* %2441, i64 %2511
  %2513 = load i8, i8* %2512, align 1
  %2514 = icmp eq i8 %2513, 0
  br i1 %2514, label %2515, label %2518

2515:                                             ; preds = %2509
  %2516 = add i64 %2510, 1
  %2517 = icmp eq i64 %2516, %2474
  br i1 %2517, label %2518, label %2509

2518:                                             ; preds = %2509, %2515, %2482
  %2519 = phi i8 [ %2484, %2482 ], [ 1, %2509 ], [ %2484, %2515 ]
  %2520 = add i64 %2483, 1
  %2521 = mul i64 %2520, %2445
  br i1 %2481, label %3515, label %3524

2522:                                             ; preds = %2470, %2465
  %2523 = add i64 %2467, 1
  %2524 = add i64 %2466, 1
  %2525 = icmp ugt i64 %2524, %2411
  br i1 %2525, label %2584, label %2465

2526:                                             ; preds = %2503
  %2527 = load %"struct.std::__1::pair.300"*, %"struct.std::__1::pair.300"** %2349, align 8
  %2528 = getelementptr inbounds %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2527, i64 %2451, i32 0
  store i64 %2475, i64* %2528, align 8
  %2529 = getelementptr inbounds %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2527, i64 %2451, i32 1
  store i64 %2467, i64* %2529, align 8
  br i1 %2469, label %2530, label %2575

2530:                                             ; preds = %2526
  %2531 = add i64 %2475, %2455
  %2532 = icmp ult i64 %2475, %2531
  %2533 = mul i64 %2445, %2467
  %2534 = add i64 %2475, %2533
  %2535 = sub i64 %2466, %2467
  %2536 = xor i64 %2467, -1
  %2537 = add i64 %2466, %2536
  %2538 = and i64 %2535, 3
  %2539 = icmp ult i64 %2537, 3
  br i1 %2539, label %2561, label %2540

2540:                                             ; preds = %2530
  %2541 = sub i64 %2535, %2538
  br label %2542

2542:                                             ; preds = %3530, %2540
  %2543 = phi i64 [ 0, %2540 ], [ %3531, %3530 ]
  %2544 = phi i64 [ %2541, %2540 ], [ %3532, %3530 ]
  br i1 %2532, label %2545, label %3530

2545:                                             ; preds = %2542
  %2546 = mul i64 %2445, %2543
  %2547 = add i64 %2534, %2546
  %2548 = getelementptr i8, i8* %2441, i64 %2547
  call void @llvm.memset.p0i8.i64(i8* align 1 %2548, i8 1, i64 %2455, i1 false)
  %2549 = or i64 %2543, 1
  %2550 = mul i64 %2445, %2549
  %2551 = add i64 %2534, %2550
  %2552 = getelementptr i8, i8* %2441, i64 %2551
  call void @llvm.memset.p0i8.i64(i8* align 1 %2552, i8 1, i64 %2455, i1 false)
  %2553 = or i64 %2543, 2
  %2554 = mul i64 %2445, %2553
  %2555 = add i64 %2534, %2554
  %2556 = getelementptr i8, i8* %2441, i64 %2555
  call void @llvm.memset.p0i8.i64(i8* align 1 %2556, i8 1, i64 %2455, i1 false)
  %2557 = or i64 %2543, 3
  %2558 = mul i64 %2445, %2557
  %2559 = add i64 %2534, %2558
  %2560 = getelementptr i8, i8* %2441, i64 %2559
  call void @llvm.memset.p0i8.i64(i8* align 1 %2560, i8 1, i64 %2455, i1 false)
  br label %3530

2561:                                             ; preds = %3530, %2530
  %2562 = phi i64 [ 0, %2530 ], [ %3531, %3530 ]
  %2563 = icmp eq i64 %2538, 0
  br i1 %2563, label %2575, label %2564

2564:                                             ; preds = %2561, %2571
  %2565 = phi i64 [ %2572, %2571 ], [ %2562, %2561 ]
  %2566 = phi i64 [ %2573, %2571 ], [ %2538, %2561 ]
  br i1 %2532, label %2567, label %2571

2567:                                             ; preds = %2564
  %2568 = mul i64 %2445, %2565
  %2569 = add i64 %2534, %2568
  %2570 = getelementptr i8, i8* %2441, i64 %2569
  call void @llvm.memset.p0i8.i64(i8* align 1 %2570, i8 1, i64 %2455, i1 false)
  br label %2571

2571:                                             ; preds = %2567, %2564
  %2572 = add i64 %2565, 1
  %2573 = add i64 %2566, -1
  %2574 = icmp eq i64 %2573, 0
  br i1 %2574, label %2575, label %2564, !llvm.loop !23

2575:                                             ; preds = %2561, %2571, %2476, %2526
  %2576 = icmp ult i64 %2452, %2466
  %2577 = select i1 %2576, i64 %2466, i64 %2452
  %2578 = add nuw i64 %2451, 1
  %2579 = load i64, i64* %2322, align 8
  %2580 = load i64, i64* %2324, align 16
  %2581 = sub i64 %2579, %2580
  %2582 = sdiv exact i64 %2581, 184
  %2583 = icmp ult i64 %2578, %2582
  br i1 %2583, label %2449, label %2584

2584:                                             ; preds = %2575, %2449, %2522, %2440
  %2585 = phi i64 [ 0, %2440 ], [ %2452, %2522 ], [ %2452, %2449 ], [ %2577, %2575 ]
  %2586 = phi i1 [ false, %2440 ], [ true, %2522 ], [ true, %2449 ], [ false, %2575 ]
  %2587 = load i8*, i8** %2381, align 8
  store i8* null, i8** %2381, align 8
  %2588 = icmp eq i8* %2587, null
  br i1 %2588, label %2590, label %2589

2589:                                             ; preds = %2584
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %2587) #9
  br label %2590

2590:                                             ; preds = %2584, %2589
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2377) #9
  br i1 %2586, label %2401, label %2591

2591:                                             ; preds = %2590
  %2592 = icmp ugt i64 %2585, %2411
  br i1 %2592, label %2593, label %2596

2593:                                             ; preds = %2591
  %2594 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 722, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #9
  %2595 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

2596:                                             ; preds = %2591
  %2597 = bitcast %"class.jxl::Image3"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %2597) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2597, i8 -86, i64 96, i1 false)
  %2598 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %2598, i64 %2407, i64 %2585, i64 4) #9
  %2599 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 1, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %2599, i64 %2407, i64 %2585, i64 4) #9
  %2600 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 2, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %2600, i64 %2407, i64 %2585, i64 4) #9
  %2601 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 0, i32 0, i32 1
  %2602 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 0, i32 0, i32 4
  %2603 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 0, i32 0, i32 0
  %2604 = load i32, i32* %2601, align 4
  %2605 = icmp eq i32 %2604, 0
  br i1 %2605, label %2673, label %2606

2606:                                             ; preds = %2596
  %2607 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %2610

2608:                                             ; preds = %2610
  %2609 = icmp eq i32 %2626, 0
  br i1 %2609, label %2673, label %2629

2610:                                             ; preds = %2610, %2606
  %2611 = phi i64 [ 0, %2606 ], [ %2625, %2610 ]
  %2612 = load i64, i64* %2602, align 8
  %2613 = mul i64 %2612, %2611
  %2614 = load i8*, i8** %2607, align 8
  %2615 = ptrtoint i8* %2614 to i64
  %2616 = and i64 %2615, 63
  %2617 = icmp eq i64 %2616, 0
  call void @llvm.assume(i1 %2617) #9
  %2618 = getelementptr inbounds i8, i8* %2614, i64 %2613
  %2619 = ptrtoint i8* %2618 to i64
  %2620 = and i64 %2619, 63
  %2621 = icmp eq i64 %2620, 0
  call void @llvm.assume(i1 %2621) #9
  %2622 = load i32, i32* %2603, align 8
  %2623 = zext i32 %2622 to i64
  %2624 = shl nuw nsw i64 %2623, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %2618, i8 0, i64 %2624, i1 false) #9
  %2625 = add nuw nsw i64 %2611, 1
  %2626 = load i32, i32* %2601, align 4
  %2627 = zext i32 %2626 to i64
  %2628 = icmp ult i64 %2625, %2627
  br i1 %2628, label %2610, label %2608

2629:                                             ; preds = %2608
  %2630 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %2631

2631:                                             ; preds = %2631, %2629
  %2632 = phi i64 [ 0, %2629 ], [ %2646, %2631 ]
  %2633 = load i64, i64* %2602, align 8
  %2634 = mul i64 %2633, %2632
  %2635 = load i8*, i8** %2630, align 8
  %2636 = ptrtoint i8* %2635 to i64
  %2637 = and i64 %2636, 63
  %2638 = icmp eq i64 %2637, 0
  call void @llvm.assume(i1 %2638) #9
  %2639 = getelementptr inbounds i8, i8* %2635, i64 %2634
  %2640 = ptrtoint i8* %2639 to i64
  %2641 = and i64 %2640, 63
  %2642 = icmp eq i64 %2641, 0
  call void @llvm.assume(i1 %2642) #9
  %2643 = load i32, i32* %2603, align 8
  %2644 = zext i32 %2643 to i64
  %2645 = shl nuw nsw i64 %2644, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %2639, i8 0, i64 %2645, i1 false) #9
  %2646 = add nuw nsw i64 %2632, 1
  %2647 = load i32, i32* %2601, align 4
  %2648 = zext i32 %2647 to i64
  %2649 = icmp ult i64 %2646, %2648
  br i1 %2649, label %2631, label %2650

2650:                                             ; preds = %2631
  %2651 = icmp eq i32 %2647, 0
  br i1 %2651, label %2673, label %2652

2652:                                             ; preds = %2650
  %2653 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %2654

2654:                                             ; preds = %2654, %2652
  %2655 = phi i64 [ 0, %2652 ], [ %2669, %2654 ]
  %2656 = load i64, i64* %2602, align 8
  %2657 = mul i64 %2656, %2655
  %2658 = load i8*, i8** %2653, align 8
  %2659 = ptrtoint i8* %2658 to i64
  %2660 = and i64 %2659, 63
  %2661 = icmp eq i64 %2660, 0
  call void @llvm.assume(i1 %2661) #9
  %2662 = getelementptr inbounds i8, i8* %2658, i64 %2657
  %2663 = ptrtoint i8* %2662 to i64
  %2664 = and i64 %2663, 63
  %2665 = icmp eq i64 %2664, 0
  call void @llvm.assume(i1 %2665) #9
  %2666 = load i32, i32* %2603, align 8
  %2667 = zext i32 %2666 to i64
  %2668 = shl nuw nsw i64 %2667, 2
  call void @llvm.memset.p0i8.i64(i8* align 64 %2662, i8 0, i64 %2668, i1 false) #9
  %2669 = add nuw nsw i64 %2655, 1
  %2670 = load i32, i32* %2601, align 4
  %2671 = zext i32 %2670 to i64
  %2672 = icmp ult i64 %2669, %2671
  br i1 %2672, label %2654, label %2673

2673:                                             ; preds = %2654, %2596, %2608, %2650
  %2674 = bitcast %"class.std::__1::vector"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2674) #9
  %2675 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %37, i64 0, i32 0, i32 0
  %2676 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %37, i64 0, i32 0, i32 1
  %2677 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %37, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2674, i8 0, i64 24, i1 false) #9
  %2678 = bitcast [3 x float*]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2678) #9
  %2679 = getelementptr inbounds [3 x float*], [3 x float*]* %38, i64 0, i64 0
  %2680 = getelementptr inbounds [3 x float*], [3 x float*]* %38, i64 0, i64 1
  %2681 = getelementptr inbounds [3 x float*], [3 x float*]* %38, i64 0, i64 2
  %2682 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %2683 = load i8*, i8** %2682, align 8
  %2684 = ptrtoint i8* %2683 to i64
  %2685 = and i64 %2684, 63
  %2686 = icmp eq i64 %2685, 0
  call void @llvm.assume(i1 %2686) #9
  %2687 = bitcast [3 x float*]* %38 to i8**
  store i8* %2683, i8** %2687, align 16
  %2688 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %2689 = load i8*, i8** %2688, align 8
  %2690 = ptrtoint i8* %2689 to i64
  %2691 = and i64 %2690, 63
  %2692 = icmp eq i64 %2691, 0
  call void @llvm.assume(i1 %2692) #9
  %2693 = bitcast float** %2680 to i8**
  store i8* %2689, i8** %2693, align 8
  %2694 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %36, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %2695 = load i8*, i8** %2694, align 8
  %2696 = ptrtoint i8* %2695 to i64
  %2697 = and i64 %2696, 63
  %2698 = icmp eq i64 %2697, 0
  call void @llvm.assume(i1 %2698) #9
  %2699 = bitcast float** %2681 to i8**
  store i8* %2695, i8** %2699, align 16
  %2700 = load i64, i64* %2602, align 8
  %2701 = lshr i64 %2700, 2
  %2702 = load i64, i64* %2322, align 8
  %2703 = load i64, i64* %2324, align 16
  %2704 = icmp eq i64 %2702, %2703
  br i1 %2704, label %2738, label %2705

2705:                                             ; preds = %2673
  %2706 = bitcast %"class.std::__1::vector.0"* %39 to i8*
  %2707 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %39, i64 0, i32 0, i32 0
  %2708 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %39, i64 0, i32 0, i32 1
  %2709 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %39, i64 0, i32 0, i32 2, i32 0, i32 0
  %2710 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 0
  %2711 = getelementptr inbounds [3 x i8], [3 x i8]* %40, i64 0, i64 0
  %2712 = getelementptr inbounds [3 x i8], [3 x i8]* %41, i64 0, i64 0
  %2713 = bitcast %"struct.jxl::PatchBlending"** %2708 to i8**
  %2714 = bitcast %"class.std::__1::vector.0"* %39 to i8**
  %2715 = bitcast %"struct.jxl::PatchBlending"** %2708 to i64*
  %2716 = bitcast %"struct.jxl::PatchPosition"* %42 to i8*
  %2717 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 0
  %2718 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 1
  %2719 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 2
  %2720 = bitcast %"class.std::__1::vector.0"* %2719 to i8*
  %2721 = bitcast %"class.std::__1::vector.0"* %39 to i64*
  %2722 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 2, i32 0, i32 1
  %2723 = bitcast %"struct.jxl::PatchBlending"** %2722 to i8**
  %2724 = bitcast %"class.std::__1::vector.0"* %2719 to i8**
  %2725 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %2726 = bitcast %"struct.jxl::PatchBlending"** %2722 to i64*
  %2727 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 3, i32 0
  %2728 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 3, i32 1
  %2729 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 3, i32 2
  %2730 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 3, i32 3
  %2731 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 3, i32 4
  %2732 = bitcast %"class.std::__1::vector.0"* %2719 to i64*
  %2733 = bitcast %"struct.jxl::PatchBlending"** %2725 to i64*
  %2734 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 3
  %2735 = bitcast %"struct.jxl::PatchReferencePosition"* %2734 to i8*
  %2736 = bitcast %"struct.jxl::PatchPosition"** %2676 to i64*
  %2737 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %42, i64 0, i32 2, i32 0, i32 0
  br label %2786

2738:                                             ; preds = %2893, %2673
  %2739 = bitcast %"struct.jxl::CompressParams"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 360, i8* nonnull %2739) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2739, i8* align 8 bitcast ({ float, [4 x i8], i64, float, float, float, i8, [3 x i8], [3 x float], i32, i64, i32, i32, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i8, [7 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [1 x i8], i32, i8, [3 x i8], i64, float, [4 x i8], %"class.jxl::Plane.97"*, i8*, i8*, i8, i8, [2 x i8], %"struct.jxl::ButteraugliParams", i8, [3 x i8], %"struct.jxl::ModularOptions", i32, %"struct.std::__1::pair.254", i32, float, float, i32, i32, i8, i8, [6 x i8], i64, i64 }* @__const._ZN3jxl23FindBestPatchDictionaryERKNS_6Image3IfEEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb.cparams to i8*), i64 360, i1 false)
  %2740 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6
  %2741 = bitcast %"struct.jxl::CompressParams"* %2740 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2739, i8* align 8 %2741, i64 68, i1 false) #9
  %2742 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22YCbCrChromaSubsamplingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2742, align 8
  %2743 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 13, i32 1
  %2744 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 13, i32 1
  %2745 = bitcast [3 x i32]* %2743 to i8*
  %2746 = bitcast [3 x i32]* %2744 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2745, i8* align 8 %2746, i64 14, i1 false) #9
  %2747 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 14
  %2748 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2747, i8* align 8 %2748, i64 117, i1 false) #9
  %2749 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39
  %2750 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 39
  %2751 = bitcast %"struct.jxl::ModularOptions"* %2749 to i8*
  %2752 = bitcast %"struct.jxl::ModularOptions"* %2750 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2751, i8* align 8 %2752, i64 16, i1 false) #9
  %2753 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39, i32 3
  %2754 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 39, i32 3
  %2755 = bitcast %"class.std::__1::vector.30"* %2753 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2755, i8 0, i64 24, i1 false) #9
  %2756 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 39, i32 3, i32 0, i32 1
  %2757 = bitcast i32** %2756 to i64*
  %2758 = load i64, i64* %2757, align 8
  %2759 = bitcast %"class.std::__1::vector.30"* %2754 to i64*
  %2760 = load i64, i64* %2759, align 8
  %2761 = sub i64 %2758, %2760
  %2762 = ashr exact i64 %2761, 2
  %2763 = icmp eq i64 %2761, 0
  br i1 %2763, label %2960, label %2764

2764:                                             ; preds = %2738
  %2765 = icmp ugt i64 %2762, 4611686018427387903
  br i1 %2765, label %2766, label %2768

2766:                                             ; preds = %2764
  %2767 = bitcast %"class.std::__1::vector.30"* %2753 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2767) #18
  unreachable

2768:                                             ; preds = %2764
  %2769 = call i8* @_Znwm(i64 %2761) #19
  %2770 = bitcast i8* %2769 to i32*
  %2771 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39, i32 3, i32 0, i32 1
  %2772 = bitcast i32** %2771 to i8**
  store i8* %2769, i8** %2772, align 8
  %2773 = bitcast %"class.std::__1::vector.30"* %2753 to i8**
  store i8* %2769, i8** %2773, align 8
  %2774 = getelementptr inbounds i32, i32* %2770, i64 %2762
  %2775 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39, i32 3, i32 0, i32 2, i32 0, i32 0
  store i32* %2774, i32** %2775, align 8
  %2776 = bitcast i32** %2771 to i64*
  %2777 = ptrtoint i8* %2769 to i64
  %2778 = icmp sgt i64 %2761, 0
  br i1 %2778, label %2779, label %2784

2779:                                             ; preds = %2768
  %2780 = lshr exact i64 %2761, 2
  %2781 = inttoptr i64 %2760 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2769, i8* align 4 %2781, i64 %2761, i1 false) #9
  %2782 = getelementptr inbounds i32, i32* %2770, i64 %2780
  %2783 = ptrtoint i32* %2782 to i64
  br label %2784

2784:                                             ; preds = %2779, %2768
  %2785 = phi i64 [ %2783, %2779 ], [ %2777, %2768 ]
  store i64 %2785, i64* %2776, align 8
  br label %2960

2786:                                             ; preds = %2705, %2893
  %2787 = phi i64 [ %2703, %2705 ], [ %2896, %2893 ]
  %2788 = phi i64 [ 0, %2705 ], [ %2894, %2893 ]
  %2789 = inttoptr i64 %2787 to %"struct.std::__1::pair.270"*
  %2790 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2789, i64 %2788, i32 0, i32 0
  %2791 = load i64, i64* %2790, align 8
  %2792 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2789, i64 %2788, i32 0, i32 1
  %2793 = load i64, i64* %2792, align 8
  %2794 = load %"struct.std::__1::pair.300"*, %"struct.std::__1::pair.300"** %2349, align 8
  %2795 = getelementptr inbounds %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2794, i64 %2788, i32 0
  %2796 = load i64, i64* %2795, align 8
  %2797 = getelementptr inbounds %"struct.std::__1::pair.300", %"struct.std::__1::pair.300"* %2794, i64 %2788, i32 1
  %2798 = load i64, i64* %2797, align 8
  %2799 = icmp eq i64 %2793, 0
  br i1 %2799, label %2812, label %2800

2800:                                             ; preds = %2786
  %2801 = icmp eq i64 %2791, 0
  %2802 = load float*, float** %2679, align 16
  %2803 = load float*, float** %2680, align 8
  %2804 = load float*, float** %2681, align 16
  br label %2805

2805:                                             ; preds = %2884, %2800
  %2806 = phi i64 [ 0, %2800 ], [ %2885, %2884 ]
  br i1 %2801, label %2884, label %2807

2807:                                             ; preds = %2805
  %2808 = mul i64 %2806, %2791
  %2809 = add i64 %2806, %2798
  %2810 = mul i64 %2809, %2701
  %2811 = add i64 %2810, %2796
  br label %2854

2812:                                             ; preds = %2884, %2786
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2706) #9
  %2813 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %2710, align 8
  %2814 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %2813, i64 0, i32 0, i32 17
  %2815 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %2813, i64 0, i32 0, i32 17, i32 0, i32 1
  %2816 = bitcast %"struct.jxl::ExtraChannelInfo"** %2815 to i64*
  %2817 = load i64, i64* %2816, align 8
  %2818 = bitcast %"class.std::__1::vector.18"* %2814 to i64*
  %2819 = load i64, i64* %2818, align 8
  %2820 = sub i64 %2817, %2819
  %2821 = sdiv exact i64 %2820, 96
  %2822 = add nsw i64 %2821, 1
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %2711)
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %2712)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2706, i8 0, i64 24, i1 false) #9
  %2823 = icmp eq i64 %2822, 0
  br i1 %2823, label %2845, label %2824

2824:                                             ; preds = %2812
  %2825 = icmp ugt i64 %2822, 1537228672809129301
  br i1 %2825, label %2826, label %2828

2826:                                             ; preds = %2824
  %2827 = bitcast %"class.std::__1::vector.0"* %39 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2827) #18
  unreachable

2828:                                             ; preds = %2824
  %2829 = mul nsw i64 %2822, 12
  %2830 = call i8* @_Znwm(i64 %2829) #19
  %2831 = bitcast i8* %2830 to %"struct.jxl::PatchBlending"*
  store i8* %2830, i8** %2713, align 8
  store i8* %2830, i8** %2714, align 8
  %2832 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2831, i64 %2822
  store %"struct.jxl::PatchBlending"* %2832, %"struct.jxl::PatchBlending"** %2709, align 8
  br label %2833

2833:                                             ; preds = %2833, %2828
  %2834 = phi %"struct.jxl::PatchBlending"* [ %2831, %2828 ], [ %2840, %2833 ]
  %2835 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2834, i64 0, i32 0
  store i8 0, i8* %2835, align 4
  %2836 = getelementptr inbounds i8, i8* %2835, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2836, i8* nonnull align 1 %2711, i64 3, i1 false)
  %2837 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2834, i64 0, i32 1
  store i32 0, i32* %2837, align 4
  %2838 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2834, i64 0, i32 2
  store i8 0, i8* %2838, align 4
  %2839 = getelementptr inbounds i8, i8* %2835, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2839, i8* nonnull align 1 %2712, i64 3, i1 false)
  %2840 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2834, i64 1
  %2841 = icmp eq %"struct.jxl::PatchBlending"* %2840, %2832
  br i1 %2841, label %2842, label %2833

2842:                                             ; preds = %2833
  %2843 = ptrtoint %"struct.jxl::PatchBlending"* %2832 to i64
  store i64 %2843, i64* %2715, align 8
  %2844 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %2707, align 8
  br label %2845

2845:                                             ; preds = %2812, %2842
  %2846 = phi %"struct.jxl::PatchBlending"* [ null, %2812 ], [ %2844, %2842 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %2711)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %2712)
  %2847 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2846, i64 0, i32 0
  store i8 2, i8* %2847, align 4
  %2848 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %116, align 16
  %2849 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2848, i64 %2788, i32 1, i32 0, i32 0
  %2850 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %2849, align 8
  %2851 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2848, i64 %2788, i32 1, i32 0, i32 1
  %2852 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %2851, align 8
  %2853 = icmp eq %"struct.std::__1::pair.286"* %2850, %2852
  br i1 %2853, label %2887, label %2900

2854:                                             ; preds = %2854, %2807
  %2855 = phi i64 [ 0, %2807 ], [ %2882, %2854 ]
  %2856 = add i64 %2855, %2808
  %2857 = add i64 %2811, %2855
  %2858 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %116, align 16
  %2859 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2858, i64 %2788, i32 0, i32 3, i64 0, i32 0, i32 0
  %2860 = load float*, float** %2859, align 8
  %2861 = getelementptr inbounds float, float* %2860, i64 %2856
  %2862 = bitcast float* %2861 to i32*
  %2863 = load i32, i32* %2862, align 4
  %2864 = getelementptr inbounds float, float* %2802, i64 %2857
  %2865 = bitcast float* %2864 to i32*
  store i32 %2863, i32* %2865, align 4
  %2866 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %116, align 16
  %2867 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2866, i64 %2788, i32 0, i32 3, i64 1, i32 0, i32 0
  %2868 = load float*, float** %2867, align 8
  %2869 = getelementptr inbounds float, float* %2868, i64 %2856
  %2870 = bitcast float* %2869 to i32*
  %2871 = load i32, i32* %2870, align 4
  %2872 = getelementptr inbounds float, float* %2803, i64 %2857
  %2873 = bitcast float* %2872 to i32*
  store i32 %2871, i32* %2873, align 4
  %2874 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %116, align 16
  %2875 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2874, i64 %2788, i32 0, i32 3, i64 2, i32 0, i32 0
  %2876 = load float*, float** %2875, align 8
  %2877 = getelementptr inbounds float, float* %2876, i64 %2856
  %2878 = bitcast float* %2877 to i32*
  %2879 = load i32, i32* %2878, align 4
  %2880 = getelementptr inbounds float, float* %2804, i64 %2857
  %2881 = bitcast float* %2880 to i32*
  store i32 %2879, i32* %2881, align 4
  %2882 = add nuw i64 %2855, 1
  %2883 = icmp eq i64 %2882, %2791
  br i1 %2883, label %2884, label %2854

2884:                                             ; preds = %2854, %2805
  %2885 = add nuw i64 %2806, 1
  %2886 = icmp eq i64 %2885, %2793
  br i1 %2886, label %2812, label %2805

2887:                                             ; preds = %2957, %2845
  %2888 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %2707, align 8
  %2889 = icmp eq %"struct.jxl::PatchBlending"* %2888, null
  br i1 %2889, label %2893, label %2890

2890:                                             ; preds = %2887
  %2891 = ptrtoint %"struct.jxl::PatchBlending"* %2888 to i64
  store i64 %2891, i64* %2715, align 8
  %2892 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2888, i64 0, i32 0
  call void @_ZdlPv(i8* %2892) #19
  br label %2893

2893:                                             ; preds = %2887, %2890
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2706) #9
  %2894 = add nuw i64 %2788, 1
  %2895 = load i64, i64* %2322, align 8
  %2896 = load i64, i64* %2324, align 16
  %2897 = sub i64 %2895, %2896
  %2898 = sdiv exact i64 %2897, 184
  %2899 = icmp ult i64 %2894, %2898
  br i1 %2899, label %2786, label %2738

2900:                                             ; preds = %2845, %2957
  %2901 = phi %"struct.std::__1::pair.286"* [ %2958, %2957 ], [ %2850, %2845 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %2716) #9
  %2902 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2901, i64 0, i32 0
  %2903 = load i32, i32* %2902, align 4
  %2904 = zext i32 %2903 to i64
  store i64 %2904, i64* %2717, align 8
  %2905 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2901, i64 0, i32 1
  %2906 = load i32, i32* %2905, align 4
  %2907 = zext i32 %2906 to i64
  store i64 %2907, i64* %2718, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2720, i8 0, i64 24, i1 false) #9
  %2908 = load i64, i64* %2715, align 8
  %2909 = load i64, i64* %2721, align 8
  %2910 = sub i64 %2908, %2909
  %2911 = sdiv exact i64 %2910, 12
  %2912 = icmp eq i64 %2910, 0
  %2913 = inttoptr i64 %2909 to %"struct.jxl::PatchBlending"*
  br i1 %2912, label %2931, label %2914

2914:                                             ; preds = %2900
  %2915 = icmp ugt i64 %2911, 1537228672809129301
  br i1 %2915, label %2916, label %2918

2916:                                             ; preds = %2914
  %2917 = bitcast %"class.std::__1::vector.0"* %2719 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2917) #18
  unreachable

2918:                                             ; preds = %2914
  %2919 = call i8* @_Znwm(i64 %2910) #19
  %2920 = bitcast i8* %2919 to %"struct.jxl::PatchBlending"*
  store i8* %2919, i8** %2723, align 8
  store i8* %2919, i8** %2724, align 8
  %2921 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2920, i64 %2911
  store %"struct.jxl::PatchBlending"* %2921, %"struct.jxl::PatchBlending"** %2725, align 8
  %2922 = ptrtoint i8* %2919 to i64
  %2923 = icmp sgt i64 %2910, 0
  br i1 %2923, label %2924, label %2929

2924:                                             ; preds = %2918
  %2925 = udiv exact i64 %2910, 12
  %2926 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2913, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2919, i8* align 4 %2926, i64 %2910, i1 false) #9
  %2927 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2920, i64 %2925
  %2928 = ptrtoint %"struct.jxl::PatchBlending"* %2927 to i64
  br label %2929

2929:                                             ; preds = %2924, %2918
  %2930 = phi i64 [ %2928, %2924 ], [ %2922, %2918 ]
  store i64 %2930, i64* %2726, align 8
  br label %2931

2931:                                             ; preds = %2900, %2929
  store i64 0, i64* %2727, align 8
  store i64 %2796, i64* %2728, align 8
  store i64 %2798, i64* %2729, align 8
  store i64 %2791, i64* %2730, align 8
  store i64 %2793, i64* %2731, align 8
  %2932 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %2676, align 8
  %2933 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %2677, align 16
  %2934 = icmp ult %"struct.jxl::PatchPosition"* %2932, %2933
  br i1 %2934, label %2935, label %2951

2935:                                             ; preds = %2931
  %2936 = bitcast %"struct.jxl::PatchPosition"* %2932 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2936, i8* nonnull align 8 %2716, i64 16, i1 false) #9
  %2937 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2932, i64 0, i32 2
  %2938 = bitcast %"class.std::__1::vector.0"* %2937 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2938, i8 0, i64 24, i1 false) #9
  %2939 = load i64, i64* %2732, align 8
  %2940 = bitcast %"class.std::__1::vector.0"* %2937 to i64*
  store i64 %2939, i64* %2940, align 8
  %2941 = load i64, i64* %2726, align 8
  %2942 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2932, i64 0, i32 2, i32 0, i32 1
  %2943 = bitcast %"struct.jxl::PatchBlending"** %2942 to i64*
  store i64 %2941, i64* %2943, align 8
  %2944 = load i64, i64* %2733, align 8
  %2945 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2932, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %2946 = bitcast %"struct.jxl::PatchBlending"** %2945 to i64*
  store i64 %2944, i64* %2946, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2720, i8 0, i64 24, i1 false) #9
  %2947 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2932, i64 0, i32 3
  %2948 = bitcast %"struct.jxl::PatchReferencePosition"* %2947 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2948, i8* align 8 %2735, i64 40, i1 false) #9
  %2949 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2932, i64 1
  %2950 = ptrtoint %"struct.jxl::PatchPosition"* %2949 to i64
  store i64 %2950, i64* %2736, align 8
  br label %2957

2951:                                             ; preds = %2931
  call void @_ZNSt3__16vectorIN3jxl13PatchPositionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"* nonnull %37, %"struct.jxl::PatchPosition"* nonnull dereferenceable(80) %42) #9
  %2952 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %2737, align 8
  %2953 = icmp eq %"struct.jxl::PatchBlending"* %2952, null
  br i1 %2953, label %2957, label %2954

2954:                                             ; preds = %2951
  %2955 = ptrtoint %"struct.jxl::PatchBlending"* %2952 to i64
  store i64 %2955, i64* %2726, align 8
  %2956 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %2952, i64 0, i32 0
  call void @_ZdlPv(i8* %2956) #19
  br label %2957

2957:                                             ; preds = %2935, %2951, %2954
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %2716) #9
  %2958 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2901, i64 1
  %2959 = icmp eq %"struct.std::__1::pair.286"* %2958, %2852
  br i1 %2959, label %2887, label %2900

2960:                                             ; preds = %2738, %2784
  %2961 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39, i32 4
  %2962 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 39, i32 4
  %2963 = bitcast float* %2961 to i8*
  %2964 = bitcast float* %2962 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2963, i8* align 8 %2964, i64 41, i1 false) #9
  %2965 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 40
  %2966 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 6, i32 40
  %2967 = bitcast i32* %2965 to i8*
  %2968 = bitcast i32* %2966 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2967, i8* align 8 %2968, i64 40, i1 false) #9
  %2969 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 49
  %2970 = bitcast i64* %2969 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %2970, align 8
  %2971 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 19
  store i32 0, i32* %2971, align 4
  %2972 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 18
  store i32 0, i32* %2972, align 8
  %2973 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 17
  store i32 0, i32* %2973, align 4
  store i8 1, i8* %2747, align 8
  store i32 0, i32* %2965, align 8
  %2974 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 26
  store i32 0, i32* %2974, align 8
  %2975 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 23
  store i8 0, i8* %2975, align 4
  %2976 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 24
  store i8 0, i8* %2976, align 1
  %2977 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39, i32 7
  store i32 5, i32* %2977, align 8
  %2978 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 41, i32 0
  %2979 = load float, float* %2978, align 4
  %2980 = fmul float %2979, 3.000000e+00
  %2981 = fadd float %2980, 1.000000e+02
  %2982 = fmul float %2981, 2.500000e-01
  store float %2982, float* %2978, align 4
  %2983 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 41, i32 1
  %2984 = load float, float* %2983, align 4
  %2985 = fmul float %2984, 3.000000e+00
  %2986 = fadd float %2985, 1.000000e+02
  %2987 = fmul float %2986, 2.500000e-01
  store float %2987, float* %2983, align 4
  %2988 = getelementptr inbounds %"struct.jxl::FrameInfo", %"struct.jxl::FrameInfo"* %44, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2988) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2988, i8 -86, i64 24, i1 false)
  %2989 = getelementptr inbounds %"struct.jxl::FrameInfo", %"struct.jxl::FrameInfo"* %44, i64 0, i32 1
  store i8 1, i8* %2989, align 1
  %2990 = getelementptr inbounds %"struct.jxl::FrameInfo", %"struct.jxl::FrameInfo"* %44, i64 0, i32 2
  %2991 = getelementptr inbounds %"struct.jxl::FrameInfo", %"struct.jxl::FrameInfo"* %44, i64 0, i32 3
  store i64 0, i64* %2991, align 8
  %2992 = getelementptr inbounds %"struct.jxl::FrameInfo", %"struct.jxl::FrameInfo"* %44, i64 0, i32 4
  store i8 1, i8* %2992, align 8
  %2993 = getelementptr inbounds %"struct.jxl::FrameInfo", %"struct.jxl::FrameInfo"* %44, i64 0, i32 5
  store i8 0, i8* %2993, align 1
  %2994 = getelementptr inbounds %"struct.jxl::FrameInfo", %"struct.jxl::FrameInfo"* %44, i64 0, i32 6
  store i64 0, i64* %2994, align 8
  store i32 2, i32* %2990, align 4
  store i8 1, i8* %2988, align 8
  %2995 = bitcast %"class.jxl::ImageBundle"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %2995) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2995, i8 -86, i64 368, i1 false)
  %2996 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 0
  %2997 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %2996, align 8
  %2998 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %2997, i64 0, i32 0
  %2999 = bitcast %"class.jxl::ImageBundle"* %45 to i64*
  store i64 0, i64* %2999, align 8
  %3000 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 1
  store i32 1, i32* %3000, align 8
  %3001 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 3
  call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %3001) #9
  %3002 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 4, i32 0
  %3003 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 8
  %3004 = bitcast %"class.std::__1::basic_string"* %3003 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3004, i8 0, i64 24, i1 false) #9
  %3005 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 9
  %3006 = bitcast i32* %3002 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3006, i8 0, i64 14, i1 false) #9
  store %"struct.jxl::ImageMetadata"* %2998, %"struct.jxl::ImageMetadata"** %3005, align 8
  %3007 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 10
  %3008 = bitcast %"class.jxl::Image3"* %3007 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3008, i8 0, i64 96, i1 false) #9
  %3009 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 11
  call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %3009) #9
  %3010 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 12
  %3011 = bitcast %"class.std::__1::vector.169"* %3010 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3011, i8 0, i64 32, i1 false) #9
  store i8 0, i8* %2989, align 1
  store i64 0, i64* %2994, align 8
  %3012 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %2996, align 8
  %3013 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %3012, i64 0, i32 0, i32 7
  call void @_ZN3jxl11ImageBundle12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE(%"class.jxl::ImageBundle"* nonnull %45, %"class.jxl::Image3"* nonnull dereferenceable(96) %36, %"struct.jxl::ColorEncoding"* dereferenceable(152) %3013) #9
  %3014 = load %"struct.jxl::ImageMetadata"*, %"struct.jxl::ImageMetadata"** %3005, align 8
  %3015 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %3014, i64 0, i32 17, i32 0, i32 0
  %3016 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %3015, align 8
  %3017 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %3014, i64 0, i32 17, i32 0, i32 1
  %3018 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %3017, align 8
  %3019 = icmp eq %"struct.jxl::ExtraChannelInfo"* %3016, %3018
  br i1 %3019, label %3165, label %3020

3020:                                             ; preds = %2960
  %3021 = ptrtoint %"struct.jxl::ExtraChannelInfo"* %3016 to i64
  %3022 = ptrtoint %"struct.jxl::ExtraChannelInfo"* %3018 to i64
  %3023 = bitcast %"class.std::__1::vector.169"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3023) #9
  %3024 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %46, i64 0, i32 0, i32 0
  %3025 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %46, i64 0, i32 0, i32 1
  %3026 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %46, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3023, i8 0, i64 24, i1 false) #9
  %3027 = sub i64 %3022, %3021
  %3028 = sdiv exact i64 %3027, 96
  call void @_ZNSt3__16vectorIN3jxl5PlaneIfEENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.169"* nonnull %46, i64 %3028)
  %3029 = load %"struct.jxl::ImageMetadata"*, %"struct.jxl::ImageMetadata"** %3005, align 8
  %3030 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %3029, i64 0, i32 17
  %3031 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %3029, i64 0, i32 17, i32 0, i32 1
  %3032 = bitcast %"struct.jxl::ExtraChannelInfo"** %3031 to i64*
  %3033 = load i64, i64* %3032, align 8
  %3034 = bitcast %"class.std::__1::vector.18"* %3030 to i64*
  %3035 = load i64, i64* %3034, align 8
  %3036 = icmp eq i64 %3033, %3035
  br i1 %3036, label %3046, label %3037

3037:                                             ; preds = %3020
  %3038 = bitcast i64* %47 to i8*
  %3039 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %3040 = bitcast i64* %48 to i8*
  %3041 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 10, i32 0, i64 0, i32 0, i32 0
  %3042 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 12, i32 0, i32 0
  %3043 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 12, i32 0, i32 1
  %3044 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %45, i64 0, i32 10, i32 0, i64 0, i32 0, i32 1
  %3045 = bitcast %"class.jxl::Plane.97"** %3025 to i64*
  br label %3068

3046:                                             ; preds = %3153, %3020
  call void @_ZN3jxl11ImageBundle16SetExtraChannelsEONSt3__16vectorINS_5PlaneIfEENS1_9allocatorIS4_EEEE(%"class.jxl::ImageBundle"* nonnull %45, %"class.std::__1::vector.169"* nonnull dereferenceable(24) %46) #9
  %3047 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3024, align 8
  %3048 = icmp eq %"class.jxl::Plane.97"* %3047, null
  br i1 %3048, label %3067, label %3049

3049:                                             ; preds = %3046
  %3050 = bitcast %"class.jxl::Plane.97"* %3047 to i8*
  %3051 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3025, align 8
  %3052 = icmp eq %"class.jxl::Plane.97"* %3051, %3047
  br i1 %3052, label %3065, label %3053

3053:                                             ; preds = %3049, %3060
  %3054 = phi %"class.jxl::Plane.97"* [ %3055, %3060 ], [ %3051, %3049 ]
  %3055 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3054, i64 -1
  %3056 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3054, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %3057 = load i8*, i8** %3056, align 8
  store i8* null, i8** %3056, align 8
  %3058 = icmp eq i8* %3057, null
  br i1 %3058, label %3060, label %3059

3059:                                             ; preds = %3053
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %3057) #9
  br label %3060

3060:                                             ; preds = %3059, %3053
  %3061 = icmp eq %"class.jxl::Plane.97"* %3055, %3047
  br i1 %3061, label %3062, label %3053

3062:                                             ; preds = %3060
  %3063 = bitcast %"class.std::__1::vector.169"* %46 to i8**
  %3064 = load i8*, i8** %3063, align 8
  br label %3065

3065:                                             ; preds = %3062, %3049
  %3066 = phi i8* [ %3064, %3062 ], [ %3050, %3049 ]
  store %"class.jxl::Plane.97"* %3047, %"class.jxl::Plane.97"** %3025, align 8
  call void @_ZdlPv(i8* %3066) #19
  br label %3067

3067:                                             ; preds = %3046, %3065
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3023) #9
  br label %3165

3068:                                             ; preds = %3037, %3153
  %3069 = phi i64 [ 0, %3037 ], [ %3154, %3153 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3038) #9
  %3070 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %3039, align 8
  %3071 = icmp eq %"struct.jxl::jpeg::JPEGData"* %3070, null
  br i1 %3071, label %3072, label %3082

3072:                                             ; preds = %3068
  %3073 = load i32, i32* %3041, align 8
  %3074 = icmp eq i32 %3073, 0
  br i1 %3074, label %3075, label %3089

3075:                                             ; preds = %3072
  %3076 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3042, align 8
  %3077 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3043, align 8
  %3078 = icmp eq %"class.jxl::Plane.97"* %3076, %3077
  br i1 %3078, label %3089, label %3079

3079:                                             ; preds = %3075
  %3080 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3076, i64 0, i32 0, i32 0
  %3081 = load i32, i32* %3080, align 8
  br label %3089

3082:                                             ; preds = %3068
  %3083 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %3070, i64 0, i32 1
  %3084 = load i32, i32* %3083, align 8
  %3085 = sext i32 %3084 to i64
  store i64 %3085, i64* %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3040) #9
  %3086 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %3070, i64 0, i32 2
  %3087 = load i32, i32* %3086, align 4
  %3088 = sext i32 %3087 to i64
  br label %3103

3089:                                             ; preds = %3072, %3075, %3079
  %3090 = phi i32 [ %3073, %3072 ], [ 0, %3075 ], [ %3081, %3079 ]
  %3091 = zext i32 %3090 to i64
  store i64 %3091, i64* %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3040) #9
  %3092 = load i32, i32* %3044, align 4
  %3093 = zext i32 %3092 to i64
  %3094 = icmp eq i32 %3092, 0
  br i1 %3094, label %3095, label %3103

3095:                                             ; preds = %3089
  %3096 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3042, align 8
  %3097 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3043, align 8
  %3098 = icmp eq %"class.jxl::Plane.97"* %3096, %3097
  br i1 %3098, label %3103, label %3099

3099:                                             ; preds = %3095
  %3100 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3096, i64 0, i32 0, i32 1
  %3101 = load i32, i32* %3100, align 4
  %3102 = zext i32 %3101 to i64
  br label %3103

3103:                                             ; preds = %3082, %3089, %3095, %3099
  %3104 = phi i64 [ %3085, %3082 ], [ %3091, %3099 ], [ %3091, %3095 ], [ %3091, %3089 ]
  %3105 = phi i64 [ %3088, %3082 ], [ %3102, %3099 ], [ 0, %3095 ], [ %3093, %3089 ]
  store i64 %3105, i64* %48, align 8
  %3106 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3025, align 8
  %3107 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3026, align 8
  %3108 = icmp ult %"class.jxl::Plane.97"* %3106, %3107
  br i1 %3108, label %3109, label %3113

3109:                                             ; preds = %3103
  %3110 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3106, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %3110, i64 %3104, i64 %3105, i64 4) #9
  %3111 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3106, i64 1
  %3112 = ptrtoint %"class.jxl::Plane.97"* %3111 to i64
  store i64 %3112, i64* %3045, align 8
  br label %3115

3113:                                             ; preds = %3103
  call void @_ZNSt3__16vectorIN3jxl5PlaneIfEENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJmmEEEvDpOT_(%"class.std::__1::vector.169"* nonnull %46, i64* nonnull dereferenceable(8) %47, i64* nonnull dereferenceable(8) %48) #9
  %3114 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3025, align 8
  br label %3115

3115:                                             ; preds = %3109, %3113
  %3116 = phi %"class.jxl::Plane.97"* [ %3111, %3109 ], [ %3114, %3113 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3040) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3038) #9
  %3117 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3116, i64 -1, i32 0, i32 1
  %3118 = load i32, i32* %3117, align 4
  %3119 = icmp eq i32 %3118, 0
  br i1 %3119, label %3153, label %3120

3120:                                             ; preds = %3115
  %3121 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3116, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %3122 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3116, i64 -1, i32 0, i32 4
  %3123 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3116, i64 -1, i32 0, i32 0
  %3124 = load i32, i32* %3123, align 8
  br label %3125

3125:                                             ; preds = %3140, %3120
  %3126 = phi i32 [ %3118, %3120 ], [ %3141, %3140 ]
  %3127 = phi i32 [ %3124, %3120 ], [ %3142, %3140 ]
  %3128 = phi i64 [ 0, %3120 ], [ %3143, %3140 ]
  %3129 = load i8*, i8** %3121, align 8
  %3130 = load i64, i64* %3122, align 8
  %3131 = mul i64 %3130, %3128
  %3132 = getelementptr inbounds i8, i8* %3129, i64 %3131
  %3133 = ptrtoint i8* %3132 to i64
  %3134 = and i64 %3133, 63
  %3135 = icmp eq i64 %3134, 0
  call void @llvm.assume(i1 %3135) #9
  %3136 = bitcast i8* %3132 to float*
  %3137 = icmp eq i32 %3127, 0
  br i1 %3137, label %3140, label %3146

3138:                                             ; preds = %3146
  %3139 = load i32, i32* %3117, align 4
  br label %3140

3140:                                             ; preds = %3138, %3125
  %3141 = phi i32 [ %3139, %3138 ], [ %3126, %3125 ]
  %3142 = phi i32 [ %3150, %3138 ], [ 0, %3125 ]
  %3143 = add nuw nsw i64 %3128, 1
  %3144 = zext i32 %3141 to i64
  %3145 = icmp ult i64 %3143, %3144
  br i1 %3145, label %3125, label %3153

3146:                                             ; preds = %3125, %3146
  %3147 = phi i64 [ %3149, %3146 ], [ 0, %3125 ]
  %3148 = getelementptr inbounds float, float* %3136, i64 %3147
  store float 1.000000e+00, float* %3148, align 4
  %3149 = add nuw nsw i64 %3147, 1
  %3150 = load i32, i32* %3123, align 8
  %3151 = zext i32 %3150 to i64
  %3152 = icmp ult i64 %3149, %3151
  br i1 %3152, label %3146, label %3138

3153:                                             ; preds = %3140, %3115
  %3154 = add nuw i64 %3069, 1
  %3155 = load %"struct.jxl::ImageMetadata"*, %"struct.jxl::ImageMetadata"** %3005, align 8
  %3156 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %3155, i64 0, i32 17
  %3157 = getelementptr inbounds %"struct.jxl::ImageMetadata", %"struct.jxl::ImageMetadata"* %3155, i64 0, i32 17, i32 0, i32 1
  %3158 = bitcast %"struct.jxl::ExtraChannelInfo"** %3157 to i64*
  %3159 = load i64, i64* %3158, align 8
  %3160 = bitcast %"class.std::__1::vector.18"* %3156 to i64*
  %3161 = load i64, i64* %3160, align 8
  %3162 = sub i64 %3159, %3161
  %3163 = sdiv exact i64 %3162, 96
  %3164 = icmp ult i64 %3154, %3163
  br i1 %3164, label %3068, label %3046

3165:                                             ; preds = %3067, %2960
  %3166 = bitcast %"struct.jxl::PassesEncoderState"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 5088, i8* nonnull %3166) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3166, i8* align 8 bitcast ({ { %"struct.jxl::CodecMetadata"*, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 }, %"struct.jxl::FrameDimensions", %"class.jxl::AcStrategyImage", %"class.jxl::DequantMatrices", %"class.jxl::Quantizer", %"class.jxl::Plane.74", %"class.jxl::Plane", %"struct.jxl::ColorCorrelationMap", { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } }, i64, %"class.std::__1::vector.30", %"class.jxl::Plane", %"class.jxl::Image3", %"class.jxl::Image3"*, %"struct.jxl::BlockCtxMap", [4 x %"class.jxl::Image3"], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>], i64 }, %"class.jxl::Plane.97", %"class.jxl::Plane.97", %"class.std::__1::vector.228", %"class.std::__1::vector.241", <{ { i64, [11 x { i64, i64, i8, [7 x i8], i64 }] }, %"class.jxl::Plane.97"*, float, [4 x i8] }>, { float, [4 x i8], i64, float, float, float, i8, [3 x i8], [3 x float], i32, i64, i32, i32, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i8, [7 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [1 x i8], i32, i8, [3 x i8], i64, float, [4 x i8], %"class.jxl::Plane.97"*, i8*, i8*, i8, i8, [2 x i8], %"struct.jxl::ButteraugliParams", i8, [3 x i8], %"struct.jxl::ModularOptions", i32, %"struct.std::__1::pair.254", i32, float, float, i32, i32, i8, i8, [6 x i8], i64, i64 }, %"class.std::__1::vector.255", %"class.std::__1::vector.98", %"class.std::__1::vector.30", float, float, %"class.std::__1::unique_ptr.262" }* @__const._ZN3jxl23FindBestPatchDictionaryERKNS_6Image3IfEEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb.roundtrip_state to i8*), i64 5088, i1 false)
  %3167 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 0
  call void @_ZN3jxl17PassesSharedStateC2Ev(%"struct.jxl::PassesSharedState"* nonnull %3167) #9
  %3168 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 1
  %3169 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 5, i32 0, i32 0
  %3170 = bitcast %"class.jxl::Plane.97"* %3168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3170, i8 0, i64 112, i1 false) #9
  store i64 1, i64* %3169, align 8
  %3171 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 5, i32 0, i32 1
  %3172 = bitcast [11 x %"struct.jxl::PassDefinition"]* %3171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3172, i8* align 8 bitcast (<{ %"struct.jxl::PassDefinition", [10 x %"struct.jxl::PassDefinition"] }>* @constinit to i8*), i64 352, i1 false) #9
  %3173 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 5, i32 1
  store %"class.jxl::Plane.97"* null, %"class.jxl::Plane.97"** %3173, align 8
  %3174 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 5, i32 2
  store float 0.000000e+00, float* %3174, align 8
  %3175 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 0
  store float 1.000000e+00, float* %3175, align 8
  %3176 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 1
  %3177 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 6, i64 0
  store float 0.000000e+00, float* %3177, align 8
  %3178 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 6, i64 1
  store float 0.000000e+00, float* %3178, align 4
  %3179 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 6, i64 2
  store float 0.000000e+00, float* %3179, align 8
  %3180 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 7
  %3181 = bitcast i64* %3176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3181, i8 0, i64 21, i1 false) #9
  store i32 3, i32* %3180, align 4
  %3182 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 8
  store i64 0, i64* %3182, align 8
  %3183 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 9
  store i32 4, i32* %3183, align 8
  %3184 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 10
  store i32 100, i32* %3184, align 4
  %3185 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 11
  store i32 0, i32* %3185, align 8
  %3186 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 13
  call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %3186) #9
  %3187 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 14
  store i8 0, i8* %3187, align 8
  %3188 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 15
  store i64 1, i64* %3188, align 8
  %3189 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 16
  %3190 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 22
  %3191 = bitcast i32* %3189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3191, i8 -1, i64 24, i1 false) #9
  %3192 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 26
  %3193 = bitcast i32* %3190 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3193, i8 0, i64 7, i1 false) #9
  store i32 -1, i32* %3192, align 8
  %3194 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 27
  store i8 0, i8* %3194, align 4
  %3195 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 28
  store i64 3, i64* %3195, align 8
  %3196 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 29
  store float 0.000000e+00, float* %3196, align 8
  %3197 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 30
  %3198 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 36, i32 0
  %3199 = bitcast %"class.jxl::Plane.97"** %3197 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3199, i8 0, i64 26, i1 false) #9
  store float 1.000000e+00, float* %3198, align 4
  %3200 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 36, i32 1
  store float 1.000000e+00, float* %3200, align 4
  %3201 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 36, i32 2
  store float 8.000000e+01, float* %3201, align 4
  %3202 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 36, i32 3
  store i8 0, i8* %3202, align 4
  %3203 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 37
  store i8 1, i8* %3203, align 4
  %3204 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 0
  store i64 16777215, i64* %3204, align 8
  %3205 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 1
  store float 5.000000e-01, float* %3205, align 8
  %3206 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 2
  %3207 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 3
  store i32 0, i32* %3206, align 4
  %3208 = call i8* @_Znwm(i64 32) #19
  %3209 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 3, i32 0, i32 1
  %3210 = bitcast %"class.std::__1::vector.30"* %3207 to i8**
  store i8* %3208, i8** %3210, align 8
  %3211 = getelementptr inbounds i8, i8* %3208, i64 32
  %3212 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 3, i32 0, i32 2, i32 0, i32 0
  %3213 = bitcast i32** %3212 to i8**
  store i8* %3211, i8** %3213, align 8
  %3214 = bitcast i32** %3209 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3208, i8* align 4 bitcast ([8 x i32]* @.ref.tmp.34 to i8*), i64 32, i1 false) #9
  %3215 = ptrtoint i8* %3211 to i64
  store i64 %3215, i64* %3214, align 8
  %3216 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 4
  store float 9.600000e+01, float* %3216, align 8
  %3217 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 6
  store i64 32, i64* %3217, align 8
  %3218 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 7
  store i32 -1, i32* %3218, align 8
  %3219 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 8
  store i32 0, i32* %3219, align 4
  %3220 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 9
  store float 0x3FF028F5C0000000, float* %3220, align 8
  %3221 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 10
  store i32 2, i32* %3221, align 4
  %3222 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 11
  store i8 0, i8* %3222, align 8
  %3223 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 13
  store i32 0, i32* %3223, align 4
  %3224 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 39, i32 14
  store i8 0, i8* %3224, align 8
  %3225 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 40
  %3226 = bitcast i32* %3225 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 1120403456, i32 1120403456, i32 -1>, <4 x i32>* %3226, align 8
  %3227 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 43
  store float 9.500000e+01, float* %3227, align 8
  %3228 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 44
  store float 8.000000e+01, float* %3228, align 4
  %3229 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 45
  store i32 0, i32* %3229, align 8
  %3230 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 46
  store i32 1024, i32* %3230, align 4
  %3231 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 47
  store i8 0, i8* %3231, align 8
  %3232 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 48
  store i8 0, i8* %3232, align 1
  %3233 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 6, i32 49
  %3234 = bitcast i64* %3233 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %3234, align 8
  %3235 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 7
  %3236 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 10
  %3237 = bitcast %"class.std::__1::vector.255"* %3235 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3237, i8 0, i64 72, i1 false) #9
  store float 1.000000e+00, float* %3236, align 8
  %3238 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 11
  store float 1.000000e+00, float* %3238, align 4
  %3239 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %49, i64 0, i32 12
  %3240 = call i8* @_Znwm(i64 8) #19
  %3241 = bitcast i8* %3240 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3jxl24DefaultEncoderHeuristicsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3241, align 8
  %3242 = ptrtoint i8* %3240 to i64
  %3243 = bitcast %"class.std::__1::unique_ptr.262"* %3239 to i64*
  store i64 %3242, i64* %3243, align 8
  %3244 = bitcast %"class.std::__1::unique_ptr.243"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3244) #9
  %3245 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %50, i64 0, i32 0, i32 0, i32 0
  %3246 = call i8* @_Znwm(i64 40) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3246, i8 0, i64 40, i1 false) #9
  %3247 = ptrtoint i8* %3246 to i64
  %3248 = bitcast %"class.std::__1::unique_ptr.243"* %50 to i64*
  store i64 %3247, i64* %3248, align 8
  %3249 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %2996, align 8
  %3250 = bitcast i8* %3246 to %"struct.jxl::BitWriter"*
  %3251 = call i32 @_ZN3jxl11EncodeFrameERKNS_14CompressParamsERKNS_9FrameInfoEPKNS_13CodecMetadataERKNS_11ImageBundleEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_9BitWriterEPNS_6AuxOutE(%"struct.jxl::CompressParams"* nonnull dereferenceable(360) %43, %"struct.jxl::FrameInfo"* nonnull dereferenceable(32) %44, %"struct.jxl::CodecMetadata"* %3249, %"class.jxl::ImageBundle"* nonnull dereferenceable(368) %45, %"struct.jxl::PassesEncoderState"* nonnull %49, %"class.jxl::ThreadPool"* %2, %"struct.jxl::BitWriter"* nonnull %3250, %"struct.jxl::AuxOut"* null) #9
  %3252 = icmp eq i32 %3251, 0
  br i1 %3252, label %3256, label %3253

3253:                                             ; preds = %3165
  %3254 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 817, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.8, i64 0, i64 0)) #9
  %3255 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

3256:                                             ; preds = %3165
  %3257 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %3245, align 8
  %3258 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %3257, i64 0, i32 0
  %3259 = load i64, i64* %3258, align 8
  %3260 = and i64 %3259, 7
  %3261 = icmp eq i64 %3260, 0
  %3262 = ptrtoint %"struct.jxl::BitWriter"* %3257 to i64
  br i1 %3261, label %3266, label %3263

3263:                                             ; preds = %3256
  %3264 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0)) #9
  %3265 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

3266:                                             ; preds = %3256
  %3267 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %3257, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %3268 = load i8*, i8** %3267, align 8
  %3269 = lshr i64 %3259, 3
  %3270 = ptrtoint i8* %3268 to i64
  %3271 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 4, i32 0, i32 1
  %3272 = load %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"** %3271, align 8
  %3273 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %3274 = load %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"** %3273, align 8
  %3275 = icmp ult %"class.std::__1::unique_ptr.243"* %3272, %3274
  br i1 %3275, label %3276, label %3281

3276:                                             ; preds = %3266
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %3245, align 8
  %3277 = bitcast %"class.std::__1::unique_ptr.243"* %3272 to i64*
  store i64 %3262, i64* %3277, align 8
  %3278 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %3272, i64 1
  %3279 = ptrtoint %"class.std::__1::unique_ptr.243"* %3278 to i64
  %3280 = bitcast %"class.std::__1::unique_ptr.243"** %3271 to i64*
  store i64 %3279, i64* %3280, align 8
  br label %3283

3281:                                             ; preds = %3266
  %3282 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 4
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3jxl9BitWriterENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.241"* %3282, %"class.std::__1::unique_ptr.243"* nonnull dereferenceable(8) %50) #9
  br label %3283

3283:                                             ; preds = %3276, %3281
  %3284 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 0
  %3285 = load float, float* %3284, align 8
  %3286 = fcmp olt float %3285, 3.000000e+00
  br i1 %3286, label %3287, label %3410

3287:                                             ; preds = %3283
  %3288 = bitcast %"class.jxl::BitReader"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3288) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3288, i8 -86, i64 56, i1 false)
  %3289 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3288, i8 0, i64 16, i1 false) #9
  store i8* %3268, i8** %3289, align 8
  %3290 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 3
  %3291 = getelementptr inbounds i8, i8* %3268, i64 -8
  %3292 = getelementptr inbounds i8, i8* %3291, i64 %3269
  store i8* %3292, i8** %3290, align 8
  %3293 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 4
  %3294 = bitcast i8** %3293 to i64*
  store i64 %3270, i64* %3294, align 8
  %3295 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 5
  store i64 0, i64* %3295, align 8
  %3296 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 6
  store i8 0, i8* %3296, align 8
  %3297 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 7
  store i64 0, i64* %3297, align 8
  %3298 = icmp ugt i8* %3268, %3292
  br i1 %3298, label %3299, label %3300, !prof !25

3299:                                             ; preds = %3287
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %51) #9
  br label %3306

3300:                                             ; preds = %3287
  %3301 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 0
  %3302 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 1
  %3303 = bitcast i8* %3268 to i64*
  %3304 = load i64, i64* %3303, align 1
  store i64 %3304, i64* %3301, align 8
  %3305 = getelementptr inbounds i8, i8* %3268, i64 7
  store i8* %3305, i8** %3289, align 8
  store i64 56, i64* %3302, align 8
  br label %3306

3306:                                             ; preds = %3299, %3300
  %3307 = bitcast %"class.jxl::ImageBundle"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %3307) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3307, i8 -86, i64 368, i1 false)
  %3308 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %2996, align 8
  %3309 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %3308, i64 0, i32 0
  %3310 = bitcast %"class.jxl::ImageBundle"* %52 to i64*
  store i64 0, i64* %3310, align 8
  %3311 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 1
  store i32 1, i32* %3311, align 8
  %3312 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 3
  call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %3312) #9
  %3313 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 4, i32 0
  %3314 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 8
  %3315 = bitcast %"class.std::__1::basic_string"* %3314 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3315, i8 0, i64 24, i1 false) #9
  %3316 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 9
  %3317 = bitcast i32* %3313 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3317, i8 0, i64 14, i1 false) #9
  store %"struct.jxl::ImageMetadata"* %3309, %"struct.jxl::ImageMetadata"** %3316, align 8
  %3318 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 10
  %3319 = bitcast %"class.jxl::Image3"* %3318 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3319, i8 0, i64 96, i1 false) #9
  %3320 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 11
  call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %3320) #9
  %3321 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %52, i64 0, i32 12
  %3322 = bitcast %"class.std::__1::vector.169"* %3321 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3322, i8 0, i64 32, i1 false) #9
  %3323 = bitcast %"struct.jxl::PassesDecoderState"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 10512, i8* nonnull %3323) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3323, i8* align 8 bitcast ({ { %"struct.jxl::CodecMetadata"*, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.jxl::Passes", i8, [3 x i8], %"struct.jxl::FrameSize", i32, %"class.std::__1::vector.30", %"struct.jxl::FrameOrigin", %"struct.jxl::BlendingInfo", %"class.std::__1::vector.37", %"struct.jxl::AnimationFrame", i8, [3 x i8], i32, i8, [3 x i8], i32, %"struct.jxl::CodecMetadata"*, %"struct.jxl::LoopFilter", i8, [7 x i8], i64 }, %"struct.jxl::FrameDimensions", %"class.jxl::AcStrategyImage", %"class.jxl::DequantMatrices", %"class.jxl::Quantizer", %"class.jxl::Plane.74", %"class.jxl::Plane", %"struct.jxl::ColorCorrelationMap", { %"struct.jxl::NoiseParams", %"class.jxl::PatchDictionary", { i32, [4 x i8], %"class.std::__1::vector.76", %"class.std::__1::vector.90" } }, i64, %"class.std::__1::vector.30", %"class.jxl::Plane", %"class.jxl::Image3", %"class.jxl::Image3"*, %"struct.jxl::BlockCtxMap", [4 x %"class.jxl::Image3"], [4 x <{ { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.jxl::ImageBundle"*, i8, [7 x i8] }>], i64 }, %"struct.jxl::PassesSharedState"*, [3 x %"struct.jxl::Upsampler"], %"class.jxl::Image3", %"class.jxl::Image3", %"class.std::__1::vector.169", %"class.std::__1::vector.307", %"class.std::__1::vector.108", float, float, %"class.jxl::Image3", %"class.std::__1::vector.169", %"class.jxl::Image3", %"class.jxl::Image3", i8*, i64, i8, i8, [6 x i8], %"class.std::__1::function.328", %"class.std::__1::vector.278", %"class.std::__1::vector.333", i64, %"struct.std::__1::atomic", [4 x i8], %"class.std::__1::unique_ptr.230", %"class.std::__1::vector.341", { [9 x float], [4 x i8], %"class.jxl::Plane.97" }, %"class.jxl::GroupBorderAssigner", %"class.std::__1::vector.355", %"class.std::__1::vector.355", %"class.std::__1::vector.355", [4 x %"class.std::__1::vector.355"], %"class.std::__1::vector.169", %"class.std::__1::vector.355", <{ { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, float, %"struct.jxl::OpsinParams", i8, i8, [2 x i8] }> }* @__const._ZN3jxl23FindBestPatchDictionaryERKNS_6Image3IfEEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb.dec_state to i8*), i64 10512, i1 false)
  %3324 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 0
  call void @_ZN3jxl17PassesSharedStateC2Ev(%"struct.jxl::PassesSharedState"* nonnull %3324) #9
  %3325 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 1
  store %"struct.jxl::PassesSharedState"* %3324, %"struct.jxl::PassesSharedState"** %3325, align 8
  %3326 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 2, i64 0, i32 0
  store i64 1, i64* %3326, align 8
  %3327 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 2, i64 1, i32 0
  store i64 1, i64* %3327, align 8
  %3328 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 2, i64 2, i32 0
  store i64 1, i64* %3328, align 8
  %3329 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 3
  %3330 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 10
  %3331 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 15
  store i64 0, i64* %3331, align 8
  %3332 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 18, i32 0, i32 1, i32 0
  %3333 = bitcast %"class.jxl::Image3"* %3329 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3333, i8 0, i64 264, i1 false) #9
  %3334 = bitcast %"class.jxl::Image3"* %3330 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3334, i8 0, i64 312, i1 false) #9
  store void (%"union.std::__1::__function::__policy_storage"*, float*, i64, i64, i64)* @_ZNSt3__110__function16__policy_invokerIFvPKfmmmEE12__call_emptyEPKNS0_16__policy_storageES3_mmm, void (%"union.std::__1::__function::__policy_storage"*, float*, i64, i64, i64)** %3332, align 8
  %3335 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 18, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %3335, align 8
  %3336 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 19
  %3337 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 23
  %3338 = bitcast %"class.std::__1::vector.278"* %3336 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3338, i8 0, i64 60, i1 false) #9
  %3339 = call i8* @_Znwm(i64 104) #19
  %3340 = bitcast i8* %3339 to %"class.jxl::ACImageT"*
  call void @_ZN3jxl8ACImageTIiEC2Emm(%"class.jxl::ACImageT"* nonnull %3340, i64 0, i64 0) #9
  %3341 = ptrtoint i8* %3339 to i64
  %3342 = bitcast %"class.std::__1::unique_ptr.230"* %3337 to i64*
  store i64 %3341, i64* %3342, align 8
  %3343 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 24
  %3344 = bitcast %"class.std::__1::vector.341"* %3343 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3344, i8 0, i64 24, i1 false) #9
  %3345 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 25, i32 1
  %3346 = bitcast %"class.jxl::Plane.97"* %3345 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3346, i8 0, i64 32, i1 false) #9
  %3347 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 26, i32 1
  %3348 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 33, i32 0
  %3349 = bitcast %"class.std::__1::unique_ptr.348"* %3347 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3349, i8 0, i64 224, i1 false) #9
  call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %3348) #9
  %3350 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 33, i32 3
  store i8 1, i8* %3350, align 4
  %3351 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 33, i32 4
  store i8 0, i8* %3351, align 1
  %3352 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 33
  %3353 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %2996, align 8
  %3354 = getelementptr inbounds %"struct.jxl::CodecMetadata", %"struct.jxl::CodecMetadata"* %3353, i64 0, i32 0
  %3355 = call i32 @_ZN3jxl18OutputEncodingInfo3SetERKNS_13ImageMetadataE(%"struct.jxl::OutputEncodingInfo"* %3352, %"struct.jxl::ImageMetadata"* dereferenceable(1600) %3354) #9
  %3356 = icmp eq i32 %3355, 0
  br i1 %3356, label %3360, label %3357

3357:                                             ; preds = %3306
  %3358 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.9, i64 0, i64 0)) #9
  %3359 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

3360:                                             ; preds = %3306
  %3361 = load %"struct.jxl::CodecMetadata"*, %"struct.jxl::CodecMetadata"** %2996, align 8
  %3362 = call i32 @_ZN3jxl11DecodeFrameERKNS_16DecompressParamsEPNS_18PassesDecoderStateEPNS_10ThreadPoolEPNS_9BitReaderEPNS_11ImageBundleERKNS_13CodecMetadataEPKNS_15SizeConstraintsEb(%"struct.jxl::DecompressParams"* dereferenceable(32) bitcast ({ i8, i8, i8, i32, i32, i64, i8, i8 }* @.ref.tmp to %"struct.jxl::DecompressParams"*), %"struct.jxl::PassesDecoderState"* nonnull %53, %"class.jxl::ThreadPool"* %2, %"class.jxl::BitReader"* nonnull %51, %"class.jxl::ImageBundle"* nonnull %52, %"struct.jxl::CodecMetadata"* dereferenceable(2856) %3361, %"struct.jxl::SizeConstraints"* null, i1 zeroext false) #9
  %3363 = icmp eq i32 %3362, 0
  br i1 %3363, label %3367, label %3364

3364:                                             ; preds = %3360
  %3365 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 826, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.10, i64 0, i64 0)) #9
  %3366 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

3367:                                             ; preds = %3360
  store i8 1, i8* %3296, align 8
  %3368 = load i8*, i8** %3293, align 8
  %3369 = icmp eq i8* %3368, null
  %3370 = ptrtoint i8* %3368 to i64
  br i1 %3369, label %3393, label %3371

3371:                                             ; preds = %3367
  %3372 = bitcast i8** %3289 to i64*
  %3373 = load i64, i64* %3372, align 8
  %3374 = sub i64 %3373, %3370
  %3375 = load i64, i64* %3295, align 8
  %3376 = add i64 %3374, %3375
  %3377 = shl i64 %3376, 3
  %3378 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %51, i64 0, i32 1
  %3379 = load i64, i64* %3378, align 8
  %3380 = sub i64 %3377, %3379
  %3381 = load i64, i64* %3297, align 8
  %3382 = icmp ugt i64 %3380, %3381
  br i1 %3382, label %3383, label %3393

3383:                                             ; preds = %3371
  %3384 = load i8*, i8** %3290, align 8
  %3385 = getelementptr inbounds i8, i8* %3384, i64 8
  %3386 = ptrtoint i8* %3385 to i64
  %3387 = sub i64 %3386, %3370
  %3388 = shl i64 %3387, 3
  %3389 = icmp ugt i64 %3380, %3388
  br i1 %3389, label %3390, label %3393

3390:                                             ; preds = %3383
  %3391 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #9
  %3392 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

3393:                                             ; preds = %3371, %3383, %3367
  %3394 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 17, i64 0, i32 0
  %3395 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 0, i32 17, i64 0, i32 0
  %3396 = call dereferenceable(368) %"class.jxl::ImageBundle"* @_ZN3jxl11ImageBundleaSEOS0_(%"class.jxl::ImageBundle"* %3394, %"class.jxl::ImageBundle"* dereferenceable(368) %3395) #9
  %3397 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 17, i64 0, i32 1
  %3398 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %53, i64 0, i32 0, i32 17, i64 0, i32 1
  %3399 = bitcast %"class.jxl::ImageBundle"** %3397 to i8*
  %3400 = bitcast %"class.jxl::ImageBundle"** %3398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3399, i8* align 8 %3400, i64 9, i1 false) #9
  call void @_ZN3jxl18PassesDecoderStateD2Ev(%"struct.jxl::PassesDecoderState"* nonnull %53) #9
  call void @llvm.lifetime.end.p0i8(i64 10512, i8* nonnull %3323) #9
  call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* nonnull %52) #9
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %3307) #9
  %3401 = load i8, i8* %3296, align 8, !range !14
  %3402 = icmp ne i8 %3401, 0
  %3403 = load i8*, i8** %3293, align 8
  %3404 = icmp eq i8* %3403, null
  %3405 = or i1 %3402, %3404
  br i1 %3405, label %3409, label %3406

3406:                                             ; preds = %3393
  %3407 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.38, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0)) #9
  %3408 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

3409:                                             ; preds = %3393
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3288) #9
  br label %3413

3410:                                             ; preds = %3283
  %3411 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 17, i64 0, i32 0
  %3412 = call dereferenceable(368) %"class.jxl::ImageBundle"* @_ZN3jxl11ImageBundleaSEOS0_(%"class.jxl::ImageBundle"* %3411, %"class.jxl::ImageBundle"* nonnull dereferenceable(368) %45) #9
  br label %3413

3413:                                             ; preds = %3410, %3409
  %3414 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 17, i64 0, i32 0
  %3415 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %1, i64 0, i32 0, i32 17, i64 0, i32 1
  store %"class.jxl::ImageBundle"* %3414, %"class.jxl::ImageBundle"** %3415, align 8
  %3416 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %2675, align 16
  %3417 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %2676, align 8
  %3418 = getelementptr inbounds %"struct.std::__1::__less.471", %"struct.std::__1::__less.471"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3418) #9
  call void @_ZNSt3__16__sortIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_(%"struct.jxl::PatchPosition"* %3416, %"struct.jxl::PatchPosition"* %3417, %"struct.std::__1::__less.471"* nonnull dereferenceable(1) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3418) #9
  %3419 = bitcast %"class.std::__1::vector"* %37 to <2 x i64>*
  %3420 = load <2 x i64>, <2 x i64>* %3419, align 16
  %3421 = bitcast %"struct.jxl::PatchPosition"** %2677 to i64*
  %3422 = load i64, i64* %3421, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2674, i8 0, i64 24, i1 false) #9
  %3423 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %58, align 8
  %3424 = icmp eq %"struct.jxl::PatchPosition"* %3423, null
  br i1 %3424, label %3448, label %3425

3425:                                             ; preds = %3413
  %3426 = bitcast %"struct.jxl::PatchPosition"* %3423 to i8*
  %3427 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %86, align 8
  %3428 = icmp eq %"struct.jxl::PatchPosition"* %3427, %3423
  br i1 %3428, label %3445, label %3429

3429:                                             ; preds = %3425, %3440
  %3430 = phi %"struct.jxl::PatchPosition"* [ %3431, %3440 ], [ %3427, %3425 ]
  %3431 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3430, i64 -1
  %3432 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3430, i64 -1, i32 2, i32 0, i32 0
  %3433 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %3432, align 8
  %3434 = icmp eq %"struct.jxl::PatchBlending"* %3433, null
  br i1 %3434, label %3440, label %3435

3435:                                             ; preds = %3429
  %3436 = ptrtoint %"struct.jxl::PatchBlending"* %3433 to i64
  %3437 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3430, i64 -1, i32 2, i32 0, i32 1
  %3438 = bitcast %"struct.jxl::PatchBlending"** %3437 to i64*
  store i64 %3436, i64* %3438, align 8
  %3439 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %3433, i64 0, i32 0
  call void @_ZdlPv(i8* %3439) #19
  br label %3440

3440:                                             ; preds = %3435, %3429
  %3441 = icmp eq %"struct.jxl::PatchPosition"* %3431, %3423
  br i1 %3441, label %3442, label %3429

3442:                                             ; preds = %3440
  %3443 = bitcast %"class.std::__1::vector"* %57 to i8**
  %3444 = load i8*, i8** %3443, align 8
  br label %3445

3445:                                             ; preds = %3442, %3425
  %3446 = phi i8* [ %3444, %3442 ], [ %3426, %3425 ]
  store %"struct.jxl::PatchPosition"* %3423, %"struct.jxl::PatchPosition"** %86, align 8
  call void @_ZdlPv(i8* %3446) #19
  %3447 = bitcast %"class.std::__1::vector"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3447, i8 0, i64 24, i1 false) #9
  br label %3448

3448:                                             ; preds = %3413, %3445
  %3449 = bitcast %"class.std::__1::vector"* %57 to <2 x i64>*
  store <2 x i64> %3420, <2 x i64>* %3449, align 8
  store i64 %3422, i64* %88, align 8
  call void @_ZN3jxl15PatchDictionary17ComputePatchCacheEv(%"class.jxl::PatchDictionary"* %55) #9
  %3450 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %3245, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %3245, align 8
  %3451 = icmp eq %"struct.jxl::BitWriter"* %3450, null
  br i1 %3451, label %3459, label %3452

3452:                                             ; preds = %3448
  %3453 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %3450, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %3454 = load i8*, i8** %3453, align 8
  store i8* null, i8** %3453, align 8
  %3455 = icmp eq i8* %3454, null
  br i1 %3455, label %3457, label %3456

3456:                                             ; preds = %3452
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %3454) #9
  br label %3457

3457:                                             ; preds = %3456, %3452
  %3458 = bitcast %"struct.jxl::BitWriter"* %3450 to i8*
  call void @_ZdlPv(i8* %3458) #19
  br label %3459

3459:                                             ; preds = %3448, %3457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3244) #9
  call void @_ZN3jxl18PassesEncoderStateD2Ev(%"struct.jxl::PassesEncoderState"* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 5088, i8* nonnull %3166) #9
  call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %2995) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2988) #9
  %3460 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39, i32 3, i32 0, i32 0
  %3461 = load i32*, i32** %3460, align 8
  %3462 = icmp eq i32* %3461, null
  br i1 %3462, label %3468, label %3463

3463:                                             ; preds = %3459
  %3464 = ptrtoint i32* %3461 to i64
  %3465 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %43, i64 0, i32 39, i32 3, i32 0, i32 1
  %3466 = bitcast i32** %3465 to i64*
  store i64 %3464, i64* %3466, align 8
  %3467 = bitcast i32* %3461 to i8*
  call void @_ZdlPv(i8* %3467) #19
  br label %3468

3468:                                             ; preds = %3459, %3463
  call void @llvm.lifetime.end.p0i8(i64 360, i8* nonnull %2739) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2678) #9
  %3469 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %2675, align 16
  %3470 = icmp eq %"struct.jxl::PatchPosition"* %3469, null
  br i1 %3470, label %3493, label %3471

3471:                                             ; preds = %3468
  %3472 = bitcast %"struct.jxl::PatchPosition"* %3469 to i8*
  %3473 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %2676, align 8
  %3474 = icmp eq %"struct.jxl::PatchPosition"* %3473, %3469
  br i1 %3474, label %3491, label %3475

3475:                                             ; preds = %3471, %3486
  %3476 = phi %"struct.jxl::PatchPosition"* [ %3477, %3486 ], [ %3473, %3471 ]
  %3477 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3476, i64 -1
  %3478 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3476, i64 -1, i32 2, i32 0, i32 0
  %3479 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %3478, align 8
  %3480 = icmp eq %"struct.jxl::PatchBlending"* %3479, null
  br i1 %3480, label %3486, label %3481

3481:                                             ; preds = %3475
  %3482 = ptrtoint %"struct.jxl::PatchBlending"* %3479 to i64
  %3483 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3476, i64 -1, i32 2, i32 0, i32 1
  %3484 = bitcast %"struct.jxl::PatchBlending"** %3483 to i64*
  store i64 %3482, i64* %3484, align 8
  %3485 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %3479, i64 0, i32 0
  call void @_ZdlPv(i8* %3485) #19
  br label %3486

3486:                                             ; preds = %3481, %3475
  %3487 = icmp eq %"struct.jxl::PatchPosition"* %3477, %3469
  br i1 %3487, label %3488, label %3475

3488:                                             ; preds = %3486
  %3489 = bitcast %"class.std::__1::vector"* %37 to i8**
  %3490 = load i8*, i8** %3489, align 16
  br label %3491

3491:                                             ; preds = %3488, %3471
  %3492 = phi i8* [ %3490, %3488 ], [ %3472, %3471 ]
  store %"struct.jxl::PatchPosition"* %3469, %"struct.jxl::PatchPosition"** %2676, align 8
  call void @_ZdlPv(i8* %3492) #19
  br label %3493

3493:                                             ; preds = %3468, %3491
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2674) #9
  %3494 = load i8*, i8** %2694, align 8
  store i8* null, i8** %2694, align 8
  %3495 = icmp eq i8* %3494, null
  br i1 %3495, label %3497, label %3496

3496:                                             ; preds = %3493
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %3494) #9
  br label %3497

3497:                                             ; preds = %3496, %3493
  %3498 = load i8*, i8** %2688, align 8
  store i8* null, i8** %2688, align 8
  %3499 = icmp eq i8* %3498, null
  br i1 %3499, label %3501, label %3500

3500:                                             ; preds = %3497
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %3498) #9
  br label %3501

3501:                                             ; preds = %3500, %3497
  %3502 = load i8*, i8** %2682, align 8
  store i8* null, i8** %2682, align 8
  %3503 = icmp eq i8* %3502, null
  br i1 %3503, label %3505, label %3504

3504:                                             ; preds = %3501
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %3502) #9
  br label %3505

3505:                                             ; preds = %3501, %3504
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %2597) #9
  %3506 = load %"struct.std::__1::pair.300"*, %"struct.std::__1::pair.300"** %2349, align 8
  %3507 = icmp eq %"struct.std::__1::pair.300"* %3506, null
  br i1 %3507, label %3512, label %3508

3508:                                             ; preds = %3505
  %3509 = ptrtoint %"struct.std::__1::pair.300"* %3506 to i64
  %3510 = bitcast %"struct.std::__1::pair.300"** %2350 to i64*
  store i64 %3509, i64* %3510, align 8
  %3511 = bitcast %"struct.std::__1::pair.300"* %3506 to i8*
  call void @_ZdlPv(i8* %3511) #19
  br label %3512

3512:                                             ; preds = %3505, %3508
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2348) #9
  br label %3513

3513:                                             ; preds = %2303, %2301, %2317, %3512
  %3514 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %32, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEENS6_IS9_EEED2Ev(%"class.std::__1::__vector_base.269"* nonnull %3514) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #9
  ret void

3515:                                             ; preds = %2518, %3521
  %3516 = phi i64 [ %3522, %3521 ], [ %2475, %2518 ]
  %3517 = add i64 %3516, %2521
  %3518 = getelementptr inbounds i8, i8* %2441, i64 %3517
  %3519 = load i8, i8* %3518, align 1
  %3520 = icmp eq i8 %3519, 0
  br i1 %3520, label %3521, label %3524

3521:                                             ; preds = %3515
  %3522 = add i64 %3516, 1
  %3523 = icmp eq i64 %3522, %2474
  br i1 %3523, label %3524, label %3515

3524:                                             ; preds = %3515, %3521, %2518
  %3525 = phi i64 [ %2475, %2518 ], [ %3516, %3515 ], [ %2474, %3521 ]
  %3526 = phi i8 [ %2519, %2518 ], [ 1, %3515 ], [ %2519, %3521 ]
  %3527 = add i64 %2483, 2
  %3528 = add i64 %2485, -2
  %3529 = icmp eq i64 %3528, 0
  br i1 %3529, label %2487, label %2482

3530:                                             ; preds = %2542, %2545
  %3531 = add i64 %2543, 4
  %3532 = add i64 %2544, -4
  %3533 = icmp eq i64 %3532, 0
  br i1 %3533, label %2561, label %2542

3534:                                             ; preds = %768
  %3535 = lshr i64 %775, 30
  %3536 = xor i64 %3535, %775
  %3537 = mul nuw nsw i64 %3536, 1812433253
  %3538 = add nuw i64 %3537, %777
  %3539 = and i64 %3538, 4294967295
  %3540 = getelementptr inbounds %"class.std::__1::mersenne_twister_engine", %"class.std::__1::mersenne_twister_engine"* %24, i64 0, i32 0, i64 %777
  store i64 %3539, i64* %3540, align 8, !noalias !20
  %3541 = add nuw nsw i64 %770, 2
  br label %768
}

declare void @_ZN3jxl17FindDotDictionaryERKNS_14CompressParamsERKNS_6Image3IfEERKNS_19ColorCorrelationMapEPNS_10ThreadPoolE(%"class.std::__1::vector.268"* sret, %"struct.jxl::CompressParams"* dereferenceable(360), %"class.jxl::Image3"* dereferenceable(96), %"struct.jxl::ColorCorrelationMap"* dereferenceable(104), %"class.jxl::ThreadPool"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3jxl11ImageBundle12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE(%"class.jxl::ImageBundle"*, %"class.jxl::Image3"* dereferenceable(96), %"struct.jxl::ColorEncoding"* dereferenceable(152)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3jxl5PlaneIfEENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.169"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.jxl::Plane.97"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.169"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.jxl::Plane.97"*
  br i1 %10, label %12, label %103

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.jxl::Plane.97"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #18
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #19
  %23 = bitcast i8* %22 to %"class.jxl::Plane.97"*
  %24 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %23, i64 %20
  %25 = ptrtoint %"class.jxl::Plane.97"* %24 to i64
  %26 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %23, i64 %1
  %27 = ptrtoint %"class.jxl::Plane.97"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.jxl::Plane.97"*
  %29 = icmp eq %"class.jxl::Plane.97"* %28, %11
  br i1 %29, label %84, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %28, i64 -1, i32 0, i32 0
  %32 = bitcast i32* %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = and i64 %35, 32
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %24, i64 -1
  %40 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %28, i64 -1
  %41 = bitcast %"class.jxl::Plane.97"* %39 to i8*
  %42 = bitcast %"class.jxl::Plane.97"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #9
  %43 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %24, i64 -1, i32 0, i32 5
  %44 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %28, i64 -1, i32 0, i32 5
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  store i8* null, i8** %45, align 8
  %48 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 %47, i64* %48, align 8
  br label %49

49:                                               ; preds = %38, %30
  %50 = phi %"class.jxl::Plane.97"* [ undef, %30 ], [ %39, %38 ]
  %51 = phi %"class.jxl::Plane.97"* [ %24, %30 ], [ %39, %38 ]
  %52 = phi %"class.jxl::Plane.97"* [ %28, %30 ], [ %40, %38 ]
  %53 = icmp ult i8* %34, inttoptr (i64 32 to i8*)
  br i1 %53, label %78, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"class.jxl::Plane.97"* [ %67, %54 ], [ %51, %49 ]
  %56 = phi %"class.jxl::Plane.97"* [ %68, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %55, i64 -1
  %58 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %56, i64 -1
  %59 = bitcast %"class.jxl::Plane.97"* %57 to i8*
  %60 = bitcast %"class.jxl::Plane.97"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #9
  %61 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %55, i64 -1, i32 0, i32 5
  %62 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %56, i64 -1, i32 0, i32 5
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store i8* null, i8** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %55, i64 -2
  %68 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %56, i64 -2
  %69 = bitcast %"class.jxl::Plane.97"* %67 to i8*
  %70 = bitcast %"class.jxl::Plane.97"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #9
  %71 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %55, i64 -2, i32 0, i32 5
  %72 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %56, i64 -2, i32 0, i32 5
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  %75 = load i64, i64* %74, align 8
  store i8* null, i8** %73, align 8
  %76 = bitcast %"class.std::__1::unique_ptr"* %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = icmp eq %"class.jxl::Plane.97"* %68, %11
  br i1 %77, label %78, label %54

78:                                               ; preds = %54, %49
  %79 = phi %"class.jxl::Plane.97"* [ %50, %49 ], [ %67, %54 ]
  %80 = ptrtoint %"class.jxl::Plane.97"* %79 to i64
  %81 = load i64, i64* %6, align 8
  %82 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %13, align 8
  %83 = inttoptr i64 %81 to %"class.jxl::Plane.97"*
  br label %84

84:                                               ; preds = %17, %78
  %85 = phi %"class.jxl::Plane.97"* [ %83, %78 ], [ %28, %17 ]
  %86 = phi %"class.jxl::Plane.97"* [ %82, %78 ], [ %11, %17 ]
  %87 = phi i64 [ %80, %78 ], [ %25, %17 ]
  %88 = phi i64 [ %81, %78 ], [ %18, %17 ]
  store i64 %87, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %89 = icmp eq %"class.jxl::Plane.97"* %86, %85
  br i1 %89, label %99, label %90

90:                                               ; preds = %84, %97
  %91 = phi %"class.jxl::Plane.97"* [ %92, %97 ], [ %86, %84 ]
  %92 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %91, i64 -1
  %93 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %91, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  store i8* null, i8** %93, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %90
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %94) #9
  br label %97

97:                                               ; preds = %96, %90
  %98 = icmp eq %"class.jxl::Plane.97"* %92, %85
  br i1 %98, label %99, label %90

99:                                               ; preds = %97, %84
  %100 = icmp eq i64 %88, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = inttoptr i64 %88 to i8*
  tail call void @_ZdlPv(i8* %102) #19
  br label %103

103:                                              ; preds = %101, %99, %2
  ret void
}

declare void @_ZN3jxl11ImageBundle16SetExtraChannelsEONSt3__16vectorINS_5PlaneIfEENS1_9allocatorIS4_EEEE(%"class.jxl::ImageBundle"*, %"class.std::__1::vector.169"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare i32 @_ZN3jxl11EncodeFrameERKNS_14CompressParamsERKNS_9FrameInfoEPKNS_13CodecMetadataERKNS_11ImageBundleEPNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_9BitWriterEPNS_6AuxOutE(%"struct.jxl::CompressParams"* dereferenceable(360), %"struct.jxl::FrameInfo"* dereferenceable(32), %"struct.jxl::CodecMetadata"*, %"class.jxl::ImageBundle"* dereferenceable(368), %"struct.jxl::PassesEncoderState"*, %"class.jxl::ThreadPool"*, %"struct.jxl::BitWriter"*, %"struct.jxl::AuxOut"*) local_unnamed_addr #1

declare i32 @_ZN3jxl18OutputEncodingInfo3SetERKNS_13ImageMetadataE(%"struct.jxl::OutputEncodingInfo"*, %"struct.jxl::ImageMetadata"* dereferenceable(1600)) local_unnamed_addr #1

declare i32 @_ZN3jxl11DecodeFrameERKNS_16DecompressParamsEPNS_18PassesDecoderStateEPNS_10ThreadPoolEPNS_9BitReaderEPNS_11ImageBundleERKNS_13CodecMetadataEPKNS_15SizeConstraintsEb(%"struct.jxl::DecompressParams"* dereferenceable(32), %"struct.jxl::PassesDecoderState"*, %"class.jxl::ThreadPool"*, %"class.jxl::BitReader"*, %"class.jxl::ImageBundle"*, %"struct.jxl::CodecMetadata"* dereferenceable(2856), %"struct.jxl::SizeConstraints"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl18PassesDecoderStateD2Ev(%"struct.jxl::PassesDecoderState"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 33, i32 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 32
  %9 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %9, align 8
  %11 = icmp eq %"class.jxl::Image3"* %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.jxl::Image3"* %10 to i8*
  %14 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 32, i32 0, i32 1
  %15 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %14, align 8
  %16 = icmp eq %"class.jxl::Image3"* %15, %10
  br i1 %16, label %39, label %17

17:                                               ; preds = %12, %34
  %18 = phi %"class.jxl::Image3"* [ %19, %34 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %18, i64 -1
  %20 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %18, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %21) #9
  br label %24

24:                                               ; preds = %23, %17
  %25 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %18, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8* null, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %26) #9
  br label %29

29:                                               ; preds = %28, %24
  %30 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %18, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  store i8* null, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %31) #9
  br label %34

34:                                               ; preds = %33, %29
  %35 = icmp eq %"class.jxl::Image3"* %19, %10
  br i1 %35, label %36, label %17

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.355"* %8 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %12
  %40 = phi i8* [ %38, %36 ], [ %13, %12 ]
  store %"class.jxl::Image3"* %10, %"class.jxl::Image3"** %14, align 8
  tail call void @_ZdlPv(i8* %40) #19
  br label %41

41:                                               ; preds = %7, %39
  %42 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 31
  %43 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %43, align 8
  %45 = icmp eq %"class.jxl::Plane.97"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.jxl::Plane.97"* %44 to i8*
  %48 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 31, i32 0, i32 1
  %49 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %48, align 8
  %50 = icmp eq %"class.jxl::Plane.97"* %49, %44
  br i1 %50, label %63, label %51

51:                                               ; preds = %46, %58
  %52 = phi %"class.jxl::Plane.97"* [ %53, %58 ], [ %49, %46 ]
  %53 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %52, i64 -1
  %54 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %52, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  store i8* null, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %55) #9
  br label %58

58:                                               ; preds = %57, %51
  %59 = icmp eq %"class.jxl::Plane.97"* %53, %44
  br i1 %59, label %60, label %51

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector.169"* %42 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %46
  %64 = phi i8* [ %62, %60 ], [ %47, %46 ]
  store %"class.jxl::Plane.97"* %44, %"class.jxl::Plane.97"** %48, align 8
  tail call void @_ZdlPv(i8* %64) #19
  br label %65

65:                                               ; preds = %41, %63
  %66 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 3
  %67 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %67, align 8
  %69 = icmp eq %"class.jxl::Image3"* %68, null
  br i1 %69, label %99, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.jxl::Image3"* %68 to i8*
  %72 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 3, i32 0, i32 1
  %73 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %72, align 8
  %74 = icmp eq %"class.jxl::Image3"* %73, %68
  br i1 %74, label %97, label %75

75:                                               ; preds = %70, %92
  %76 = phi %"class.jxl::Image3"* [ %77, %92 ], [ %73, %70 ]
  %77 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %76, i64 -1
  %78 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %76, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  store i8* null, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %75
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %79) #9
  br label %82

82:                                               ; preds = %81, %75
  %83 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %76, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  store i8* null, i8** %83, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %84) #9
  br label %87

87:                                               ; preds = %86, %82
  %88 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %76, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  store i8* null, i8** %88, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %89) #9
  br label %92

92:                                               ; preds = %91, %87
  %93 = icmp eq %"class.jxl::Image3"* %77, %68
  br i1 %93, label %94, label %75

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector.355"* %66 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %70
  %98 = phi i8* [ %96, %94 ], [ %71, %70 ]
  store %"class.jxl::Image3"* %68, %"class.jxl::Image3"** %72, align 8
  tail call void @_ZdlPv(i8* %98) #19
  br label %99

99:                                               ; preds = %65, %97
  %100 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 2
  %101 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %101, align 8
  %103 = icmp eq %"class.jxl::Image3"* %102, null
  br i1 %103, label %504, label %475

104:                                              ; preds = %572
  %105 = bitcast %"class.jxl::Image3"* %575 to i8*
  %106 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 29, i32 0, i32 1
  %107 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %106, align 8
  %108 = icmp eq %"class.jxl::Image3"* %107, %575
  br i1 %108, label %131, label %109

109:                                              ; preds = %104, %126
  %110 = phi %"class.jxl::Image3"* [ %111, %126 ], [ %107, %104 ]
  %111 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %110, i64 -1
  %112 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %110, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  store i8* null, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %109
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %113) #9
  br label %116

116:                                              ; preds = %115, %109
  %117 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %110, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  store i8* null, i8** %117, align 8
  %119 = icmp eq i8* %118, null
  br i1 %119, label %121, label %120

120:                                              ; preds = %116
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %118) #9
  br label %121

121:                                              ; preds = %120, %116
  %122 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %110, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  store i8* null, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %123) #9
  br label %126

126:                                              ; preds = %125, %121
  %127 = icmp eq %"class.jxl::Image3"* %111, %575
  br i1 %127, label %128, label %109

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::vector.355"* %573 to i8**
  %130 = load i8*, i8** %129, align 8
  br label %131

131:                                              ; preds = %128, %104
  %132 = phi i8* [ %130, %128 ], [ %105, %104 ]
  store %"class.jxl::Image3"* %575, %"class.jxl::Image3"** %106, align 8
  tail call void @_ZdlPv(i8* %132) #19
  br label %133

133:                                              ; preds = %572, %131
  %134 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 28
  %135 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %135, align 8
  %137 = icmp eq %"class.jxl::Image3"* %136, null
  br i1 %137, label %167, label %138

138:                                              ; preds = %133
  %139 = bitcast %"class.jxl::Image3"* %136 to i8*
  %140 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 28, i32 0, i32 1
  %141 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %140, align 8
  %142 = icmp eq %"class.jxl::Image3"* %141, %136
  br i1 %142, label %165, label %143

143:                                              ; preds = %138, %160
  %144 = phi %"class.jxl::Image3"* [ %145, %160 ], [ %141, %138 ]
  %145 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %144, i64 -1
  %146 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %144, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  store i8* null, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %150, label %149

149:                                              ; preds = %143
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %147) #9
  br label %150

150:                                              ; preds = %149, %143
  %151 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %144, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  store i8* null, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %150
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %152) #9
  br label %155

155:                                              ; preds = %154, %150
  %156 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %144, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  store i8* null, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %157) #9
  br label %160

160:                                              ; preds = %159, %155
  %161 = icmp eq %"class.jxl::Image3"* %145, %136
  br i1 %161, label %162, label %143

162:                                              ; preds = %160
  %163 = bitcast %"class.std::__1::vector.355"* %134 to i8**
  %164 = load i8*, i8** %163, align 8
  br label %165

165:                                              ; preds = %162, %138
  %166 = phi i8* [ %164, %162 ], [ %139, %138 ]
  store %"class.jxl::Image3"* %136, %"class.jxl::Image3"** %140, align 8
  tail call void @_ZdlPv(i8* %166) #19
  br label %167

167:                                              ; preds = %133, %165
  %168 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 27
  %169 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %168, i64 0, i32 0, i32 0
  %170 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %169, align 8
  %171 = icmp eq %"class.jxl::Image3"* %170, null
  br i1 %171, label %201, label %172

172:                                              ; preds = %167
  %173 = bitcast %"class.jxl::Image3"* %170 to i8*
  %174 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 27, i32 0, i32 1
  %175 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %174, align 8
  %176 = icmp eq %"class.jxl::Image3"* %175, %170
  br i1 %176, label %199, label %177

177:                                              ; preds = %172, %194
  %178 = phi %"class.jxl::Image3"* [ %179, %194 ], [ %175, %172 ]
  %179 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %178, i64 -1
  %180 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %178, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  store i8* null, i8** %180, align 8
  %182 = icmp eq i8* %181, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %177
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %181) #9
  br label %184

184:                                              ; preds = %183, %177
  %185 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %178, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  store i8* null, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %184
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %186) #9
  br label %189

189:                                              ; preds = %188, %184
  %190 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %178, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  store i8* null, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %194, label %193

193:                                              ; preds = %189
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %191) #9
  br label %194

194:                                              ; preds = %193, %189
  %195 = icmp eq %"class.jxl::Image3"* %179, %170
  br i1 %195, label %196, label %177

196:                                              ; preds = %194
  %197 = bitcast %"class.std::__1::vector.355"* %168 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %196, %172
  %200 = phi i8* [ %198, %196 ], [ %173, %172 ]
  store %"class.jxl::Image3"* %170, %"class.jxl::Image3"** %174, align 8
  tail call void @_ZdlPv(i8* %200) #19
  br label %201

201:                                              ; preds = %167, %199
  %202 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 26, i32 1, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::atomic.351"*, %"struct.std::__1::atomic.351"** %202, align 8
  store %"struct.std::__1::atomic.351"* null, %"struct.std::__1::atomic.351"** %202, align 8
  %204 = icmp eq %"struct.std::__1::atomic.351"* %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"struct.std::__1::atomic.351", %"struct.std::__1::atomic.351"* %203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdaPv(i8* %206) #19
  br label %207

207:                                              ; preds = %201, %205
  %208 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 25, i32 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  store i8* null, i8** %208, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %212, label %211

211:                                              ; preds = %207
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %209) #9
  br label %212

212:                                              ; preds = %207, %211
  %213 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 24
  %214 = getelementptr inbounds %"class.std::__1::vector.341", %"class.std::__1::vector.341"* %213, i64 0, i32 0, i32 0
  %215 = load %"class.jxl::FilterPipeline"*, %"class.jxl::FilterPipeline"** %214, align 8
  %216 = icmp eq %"class.jxl::FilterPipeline"* %215, null
  br i1 %216, label %246, label %217

217:                                              ; preds = %212
  %218 = bitcast %"class.jxl::FilterPipeline"* %215 to i8*
  %219 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 24, i32 0, i32 1
  %220 = load %"class.jxl::FilterPipeline"*, %"class.jxl::FilterPipeline"** %219, align 8
  %221 = icmp eq %"class.jxl::FilterPipeline"* %220, %215
  br i1 %221, label %244, label %222

222:                                              ; preds = %217, %239
  %223 = phi %"class.jxl::FilterPipeline"* [ %224, %239 ], [ %220, %217 ]
  %224 = getelementptr inbounds %"class.jxl::FilterPipeline", %"class.jxl::FilterPipeline"* %223, i64 -1
  %225 = getelementptr inbounds %"class.jxl::FilterPipeline", %"class.jxl::FilterPipeline"* %223, i64 -1, i32 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  store i8* null, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %229, label %228

228:                                              ; preds = %222
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %226) #9
  br label %229

229:                                              ; preds = %228, %222
  %230 = getelementptr inbounds %"class.jxl::FilterPipeline", %"class.jxl::FilterPipeline"* %223, i64 -1, i32 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  store i8* null, i8** %230, align 8
  %232 = icmp eq i8* %231, null
  br i1 %232, label %234, label %233

233:                                              ; preds = %229
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %231) #9
  br label %234

234:                                              ; preds = %233, %229
  %235 = getelementptr inbounds %"class.jxl::FilterPipeline", %"class.jxl::FilterPipeline"* %223, i64 -1, i32 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  store i8* null, i8** %235, align 8
  %237 = icmp eq i8* %236, null
  br i1 %237, label %239, label %238

238:                                              ; preds = %234
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %236) #9
  br label %239

239:                                              ; preds = %238, %234
  %240 = icmp eq %"class.jxl::FilterPipeline"* %224, %215
  br i1 %240, label %241, label %222

241:                                              ; preds = %239
  %242 = bitcast %"class.std::__1::vector.341"* %213 to i8**
  %243 = load i8*, i8** %242, align 8
  br label %244

244:                                              ; preds = %241, %217
  %245 = phi i8* [ %243, %241 ], [ %218, %217 ]
  store %"class.jxl::FilterPipeline"* %215, %"class.jxl::FilterPipeline"** %219, align 8
  tail call void @_ZdlPv(i8* %245) #19
  br label %246

246:                                              ; preds = %212, %244
  %247 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %248 = load %"class.jxl::ACImage"*, %"class.jxl::ACImage"** %247, align 8
  store %"class.jxl::ACImage"* null, %"class.jxl::ACImage"** %247, align 8
  %249 = icmp eq %"class.jxl::ACImage"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %246
  %251 = bitcast %"class.jxl::ACImage"* %248 to void (%"class.jxl::ACImage"*)***
  %252 = load void (%"class.jxl::ACImage"*)**, void (%"class.jxl::ACImage"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.jxl::ACImage"*)*, void (%"class.jxl::ACImage"*)** %252, i64 1
  %254 = load void (%"class.jxl::ACImage"*)*, void (%"class.jxl::ACImage"*)** %253, align 8
  tail call void %254(%"class.jxl::ACImage"* nonnull %248) #9
  br label %255

255:                                              ; preds = %246, %250
  %256 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 20
  %257 = getelementptr inbounds %"class.std::__1::vector.333", %"class.std::__1::vector.333"* %256, i64 0, i32 0, i32 0
  %258 = load %"class.std::__1::vector.278"*, %"class.std::__1::vector.278"** %257, align 8
  %259 = icmp eq %"class.std::__1::vector.278"* %258, null
  br i1 %259, label %283, label %260

260:                                              ; preds = %255
  %261 = bitcast %"class.std::__1::vector.278"* %258 to i8*
  %262 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 20, i32 0, i32 1
  %263 = load %"class.std::__1::vector.278"*, %"class.std::__1::vector.278"** %262, align 8
  %264 = icmp eq %"class.std::__1::vector.278"* %263, %258
  br i1 %264, label %281, label %265

265:                                              ; preds = %260, %276
  %266 = phi %"class.std::__1::vector.278"* [ %267, %276 ], [ %263, %260 ]
  %267 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %266, i64 -1
  %268 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %267, i64 0, i32 0, i32 0
  %269 = load float*, float** %268, align 8
  %270 = icmp eq float* %269, null
  br i1 %270, label %276, label %271

271:                                              ; preds = %265
  %272 = ptrtoint float* %269 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %266, i64 -1, i32 0, i32 1
  %274 = bitcast float** %273 to i64*
  store i64 %272, i64* %274, align 8
  %275 = bitcast float* %269 to i8*
  tail call void @_ZdlPv(i8* %275) #19
  br label %276

276:                                              ; preds = %271, %265
  %277 = icmp eq %"class.std::__1::vector.278"* %267, %258
  br i1 %277, label %278, label %265

278:                                              ; preds = %276
  %279 = bitcast %"class.std::__1::vector.333"* %256 to i8**
  %280 = load i8*, i8** %279, align 8
  br label %281

281:                                              ; preds = %278, %260
  %282 = phi i8* [ %280, %278 ], [ %261, %260 ]
  store %"class.std::__1::vector.278"* %258, %"class.std::__1::vector.278"** %262, align 8
  tail call void @_ZdlPv(i8* %282) #19
  br label %283

283:                                              ; preds = %255, %281
  %284 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 19, i32 0, i32 0
  %285 = load float*, float** %284, align 8
  %286 = icmp eq float* %285, null
  br i1 %286, label %292, label %287

287:                                              ; preds = %283
  %288 = ptrtoint float* %285 to i64
  %289 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 19, i32 0, i32 1
  %290 = bitcast float** %289 to i64*
  store i64 %288, i64* %290, align 8
  %291 = bitcast float* %285 to i8*
  tail call void @_ZdlPv(i8* %291) #19
  br label %292

292:                                              ; preds = %283, %287
  %293 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 18, i32 0, i32 2
  %294 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %293, align 8
  %295 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %294, i64 0, i32 1
  %296 = load void (i8*)*, void (i8*)** %295, align 8
  %297 = icmp eq void (i8*)* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %292
  %299 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  tail call void %296(i8* %300) #9
  br label %301

301:                                              ; preds = %292, %298
  %302 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 13, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  store i8* null, i8** %302, align 8
  %304 = icmp eq i8* %303, null
  br i1 %304, label %306, label %305

305:                                              ; preds = %301
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %303) #9
  br label %306

306:                                              ; preds = %305, %301
  %307 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 13, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %308 = load i8*, i8** %307, align 8
  store i8* null, i8** %307, align 8
  %309 = icmp eq i8* %308, null
  br i1 %309, label %311, label %310

310:                                              ; preds = %306
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %308) #9
  br label %311

311:                                              ; preds = %310, %306
  %312 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 13, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  store i8* null, i8** %312, align 8
  %314 = icmp eq i8* %313, null
  br i1 %314, label %316, label %315

315:                                              ; preds = %311
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %313) #9
  br label %316

316:                                              ; preds = %311, %315
  %317 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 12, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %318 = load i8*, i8** %317, align 8
  store i8* null, i8** %317, align 8
  %319 = icmp eq i8* %318, null
  br i1 %319, label %321, label %320

320:                                              ; preds = %316
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %318) #9
  br label %321

321:                                              ; preds = %320, %316
  %322 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 12, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %323 = load i8*, i8** %322, align 8
  store i8* null, i8** %322, align 8
  %324 = icmp eq i8* %323, null
  br i1 %324, label %326, label %325

325:                                              ; preds = %321
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %323) #9
  br label %326

326:                                              ; preds = %325, %321
  %327 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 12, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  store i8* null, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %331, label %330

330:                                              ; preds = %326
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %328) #9
  br label %331

331:                                              ; preds = %326, %330
  %332 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 11
  %333 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %332, i64 0, i32 0, i32 0
  %334 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %333, align 8
  %335 = icmp eq %"class.jxl::Plane.97"* %334, null
  br i1 %335, label %355, label %336

336:                                              ; preds = %331
  %337 = bitcast %"class.jxl::Plane.97"* %334 to i8*
  %338 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 11, i32 0, i32 1
  %339 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %338, align 8
  %340 = icmp eq %"class.jxl::Plane.97"* %339, %334
  br i1 %340, label %353, label %341

341:                                              ; preds = %336, %348
  %342 = phi %"class.jxl::Plane.97"* [ %343, %348 ], [ %339, %336 ]
  %343 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %342, i64 -1
  %344 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %342, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  store i8* null, i8** %344, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %348, label %347

347:                                              ; preds = %341
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %345) #9
  br label %348

348:                                              ; preds = %347, %341
  %349 = icmp eq %"class.jxl::Plane.97"* %343, %334
  br i1 %349, label %350, label %341

350:                                              ; preds = %348
  %351 = bitcast %"class.std::__1::vector.169"* %332 to i8**
  %352 = load i8*, i8** %351, align 8
  br label %353

353:                                              ; preds = %350, %336
  %354 = phi i8* [ %352, %350 ], [ %337, %336 ]
  store %"class.jxl::Plane.97"* %334, %"class.jxl::Plane.97"** %338, align 8
  tail call void @_ZdlPv(i8* %354) #19
  br label %355

355:                                              ; preds = %331, %353
  %356 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  store i8* null, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %360, label %359

359:                                              ; preds = %355
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %357) #9
  br label %360

360:                                              ; preds = %359, %355
  %361 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %362 = load i8*, i8** %361, align 8
  store i8* null, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %365, label %364

364:                                              ; preds = %360
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %362) #9
  br label %365

365:                                              ; preds = %364, %360
  %366 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %367 = load i8*, i8** %366, align 8
  store i8* null, i8** %366, align 8
  %368 = icmp eq i8* %367, null
  br i1 %368, label %370, label %369

369:                                              ; preds = %365
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %367) #9
  br label %370

370:                                              ; preds = %365, %369
  %371 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 7
  %372 = getelementptr inbounds %"class.std::__1::vector.108", %"class.std::__1::vector.108"* %371, i64 0, i32 0, i32 0
  %373 = load %"class.std::__1::vector.98"*, %"class.std::__1::vector.98"** %372, align 8
  %374 = icmp eq %"class.std::__1::vector.98"* %373, null
  br i1 %374, label %397, label %375

375:                                              ; preds = %370
  %376 = bitcast %"class.std::__1::vector.98"* %373 to i8*
  %377 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 7, i32 0, i32 1
  %378 = load %"class.std::__1::vector.98"*, %"class.std::__1::vector.98"** %377, align 8
  %379 = icmp eq %"class.std::__1::vector.98"* %378, %373
  br i1 %379, label %395, label %380

380:                                              ; preds = %375, %390
  %381 = phi %"class.std::__1::vector.98"* [ %382, %390 ], [ %378, %375 ]
  %382 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %381, i64 -1
  %383 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %382, i64 0, i32 0, i32 0
  %384 = load i8*, i8** %383, align 8
  %385 = icmp eq i8* %384, null
  br i1 %385, label %390, label %386

386:                                              ; preds = %380
  %387 = ptrtoint i8* %384 to i64
  %388 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %381, i64 -1, i32 0, i32 1
  %389 = bitcast i8** %388 to i64*
  store i64 %387, i64* %389, align 8
  tail call void @_ZdlPv(i8* nonnull %384) #19
  br label %390

390:                                              ; preds = %386, %380
  %391 = icmp eq %"class.std::__1::vector.98"* %382, %373
  br i1 %391, label %392, label %380

392:                                              ; preds = %390
  %393 = bitcast %"class.std::__1::vector.108"* %371 to i8**
  %394 = load i8*, i8** %393, align 8
  br label %395

395:                                              ; preds = %392, %375
  %396 = phi i8* [ %394, %392 ], [ %376, %375 ]
  store %"class.std::__1::vector.98"* %373, %"class.std::__1::vector.98"** %377, align 8
  tail call void @_ZdlPv(i8* %396) #19
  br label %397

397:                                              ; preds = %370, %395
  %398 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 6
  %399 = getelementptr inbounds %"class.std::__1::vector.307", %"class.std::__1::vector.307"* %398, i64 0, i32 0, i32 0
  %400 = load %"struct.jxl::ANSCode"*, %"struct.jxl::ANSCode"** %399, align 8
  %401 = icmp eq %"struct.jxl::ANSCode"* %400, null
  br i1 %401, label %419, label %402

402:                                              ; preds = %397
  %403 = bitcast %"struct.jxl::ANSCode"* %400 to i8*
  %404 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 6, i32 0, i32 1
  %405 = load %"struct.jxl::ANSCode"*, %"struct.jxl::ANSCode"** %404, align 8
  %406 = icmp eq %"struct.jxl::ANSCode"* %405, %400
  br i1 %406, label %417, label %407

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 6, i32 0, i32 2
  %409 = bitcast %"class.std::__1::__compressed_pair.323"* %408 to %"class.std::__1::allocator.326"*
  br label %410

410:                                              ; preds = %410, %407
  %411 = phi %"struct.jxl::ANSCode"* [ %405, %407 ], [ %412, %410 ]
  %412 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %411, i64 -1
  tail call void @_ZNSt3__19allocatorIN3jxl7ANSCodeEE7destroyEPS2_(%"class.std::__1::allocator.326"* %409, %"struct.jxl::ANSCode"* %412) #9
  %413 = icmp eq %"struct.jxl::ANSCode"* %412, %400
  br i1 %413, label %414, label %410

414:                                              ; preds = %410
  %415 = bitcast %"class.std::__1::vector.307"* %398 to i8**
  %416 = load i8*, i8** %415, align 8
  br label %417

417:                                              ; preds = %414, %402
  %418 = phi i8* [ %416, %414 ], [ %403, %402 ]
  store %"struct.jxl::ANSCode"* %400, %"struct.jxl::ANSCode"** %404, align 8
  tail call void @_ZdlPv(i8* %418) #19
  br label %419

419:                                              ; preds = %397, %417
  %420 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 5
  %421 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %420, i64 0, i32 0, i32 0
  %422 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %421, align 8
  %423 = icmp eq %"class.jxl::Plane.97"* %422, null
  br i1 %423, label %443, label %424

424:                                              ; preds = %419
  %425 = bitcast %"class.jxl::Plane.97"* %422 to i8*
  %426 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 5, i32 0, i32 1
  %427 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %426, align 8
  %428 = icmp eq %"class.jxl::Plane.97"* %427, %422
  br i1 %428, label %441, label %429

429:                                              ; preds = %424, %436
  %430 = phi %"class.jxl::Plane.97"* [ %431, %436 ], [ %427, %424 ]
  %431 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %430, i64 -1
  %432 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %430, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %433 = load i8*, i8** %432, align 8
  store i8* null, i8** %432, align 8
  %434 = icmp eq i8* %433, null
  br i1 %434, label %436, label %435

435:                                              ; preds = %429
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %433) #9
  br label %436

436:                                              ; preds = %435, %429
  %437 = icmp eq %"class.jxl::Plane.97"* %431, %422
  br i1 %437, label %438, label %429

438:                                              ; preds = %436
  %439 = bitcast %"class.std::__1::vector.169"* %420 to i8**
  %440 = load i8*, i8** %439, align 8
  br label %441

441:                                              ; preds = %438, %424
  %442 = phi i8* [ %440, %438 ], [ %425, %424 ]
  store %"class.jxl::Plane.97"* %422, %"class.jxl::Plane.97"** %426, align 8
  tail call void @_ZdlPv(i8* %442) #19
  br label %443

443:                                              ; preds = %419, %441
  %444 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 4, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %445 = load i8*, i8** %444, align 8
  store i8* null, i8** %444, align 8
  %446 = icmp eq i8* %445, null
  br i1 %446, label %448, label %447

447:                                              ; preds = %443
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %445) #9
  br label %448

448:                                              ; preds = %447, %443
  %449 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 4, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %450 = load i8*, i8** %449, align 8
  store i8* null, i8** %449, align 8
  %451 = icmp eq i8* %450, null
  br i1 %451, label %453, label %452

452:                                              ; preds = %448
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %450) #9
  br label %453

453:                                              ; preds = %452, %448
  %454 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 4, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %455 = load i8*, i8** %454, align 8
  store i8* null, i8** %454, align 8
  %456 = icmp eq i8* %455, null
  br i1 %456, label %458, label %457

457:                                              ; preds = %453
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %455) #9
  br label %458

458:                                              ; preds = %453, %457
  %459 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 3, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %460 = load i8*, i8** %459, align 8
  store i8* null, i8** %459, align 8
  %461 = icmp eq i8* %460, null
  br i1 %461, label %463, label %462

462:                                              ; preds = %458
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %460) #9
  br label %463

463:                                              ; preds = %462, %458
  %464 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 3, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %465 = load i8*, i8** %464, align 8
  store i8* null, i8** %464, align 8
  %466 = icmp eq i8* %465, null
  br i1 %466, label %468, label %467

467:                                              ; preds = %463
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %465) #9
  br label %468

468:                                              ; preds = %467, %463
  %469 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 3, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %470 = load i8*, i8** %469, align 8
  store i8* null, i8** %469, align 8
  %471 = icmp eq i8* %470, null
  br i1 %471, label %473, label %472

472:                                              ; preds = %468
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %470) #9
  br label %473

473:                                              ; preds = %468, %472
  %474 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 0
  tail call void @_ZN3jxl17PassesSharedStateD2Ev(%"struct.jxl::PassesSharedState"* %474) #9
  ret void

475:                                              ; preds = %99
  %476 = bitcast %"class.jxl::Image3"* %102 to i8*
  %477 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 2, i32 0, i32 1
  %478 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %477, align 8
  %479 = icmp eq %"class.jxl::Image3"* %478, %102
  br i1 %479, label %502, label %480

480:                                              ; preds = %475, %497
  %481 = phi %"class.jxl::Image3"* [ %482, %497 ], [ %478, %475 ]
  %482 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %481, i64 -1
  %483 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %481, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %484 = load i8*, i8** %483, align 8
  store i8* null, i8** %483, align 8
  %485 = icmp eq i8* %484, null
  br i1 %485, label %487, label %486

486:                                              ; preds = %480
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %484) #9
  br label %487

487:                                              ; preds = %486, %480
  %488 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %481, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %489 = load i8*, i8** %488, align 8
  store i8* null, i8** %488, align 8
  %490 = icmp eq i8* %489, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %487
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %489) #9
  br label %492

492:                                              ; preds = %491, %487
  %493 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %481, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %494 = load i8*, i8** %493, align 8
  store i8* null, i8** %493, align 8
  %495 = icmp eq i8* %494, null
  br i1 %495, label %497, label %496

496:                                              ; preds = %492
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %494) #9
  br label %497

497:                                              ; preds = %496, %492
  %498 = icmp eq %"class.jxl::Image3"* %482, %102
  br i1 %498, label %499, label %480

499:                                              ; preds = %497
  %500 = bitcast %"class.std::__1::vector.355"* %100 to i8**
  %501 = load i8*, i8** %500, align 8
  br label %502

502:                                              ; preds = %499, %475
  %503 = phi i8* [ %501, %499 ], [ %476, %475 ]
  store %"class.jxl::Image3"* %102, %"class.jxl::Image3"** %477, align 8
  tail call void @_ZdlPv(i8* %503) #19
  br label %504

504:                                              ; preds = %502, %99
  %505 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 1
  %506 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %505, i64 0, i32 0, i32 0
  %507 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %506, align 8
  %508 = icmp eq %"class.jxl::Image3"* %507, null
  br i1 %508, label %538, label %509

509:                                              ; preds = %504
  %510 = bitcast %"class.jxl::Image3"* %507 to i8*
  %511 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 1, i32 0, i32 1
  %512 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %511, align 8
  %513 = icmp eq %"class.jxl::Image3"* %512, %507
  br i1 %513, label %536, label %514

514:                                              ; preds = %509, %531
  %515 = phi %"class.jxl::Image3"* [ %516, %531 ], [ %512, %509 ]
  %516 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %515, i64 -1
  %517 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %515, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %518 = load i8*, i8** %517, align 8
  store i8* null, i8** %517, align 8
  %519 = icmp eq i8* %518, null
  br i1 %519, label %521, label %520

520:                                              ; preds = %514
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %518) #9
  br label %521

521:                                              ; preds = %520, %514
  %522 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %515, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %523 = load i8*, i8** %522, align 8
  store i8* null, i8** %522, align 8
  %524 = icmp eq i8* %523, null
  br i1 %524, label %526, label %525

525:                                              ; preds = %521
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %523) #9
  br label %526

526:                                              ; preds = %525, %521
  %527 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %515, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %528 = load i8*, i8** %527, align 8
  store i8* null, i8** %527, align 8
  %529 = icmp eq i8* %528, null
  br i1 %529, label %531, label %530

530:                                              ; preds = %526
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %528) #9
  br label %531

531:                                              ; preds = %530, %526
  %532 = icmp eq %"class.jxl::Image3"* %516, %507
  br i1 %532, label %533, label %514

533:                                              ; preds = %531
  %534 = bitcast %"class.std::__1::vector.355"* %505 to i8**
  %535 = load i8*, i8** %534, align 8
  br label %536

536:                                              ; preds = %533, %509
  %537 = phi i8* [ %535, %533 ], [ %510, %509 ]
  store %"class.jxl::Image3"* %507, %"class.jxl::Image3"** %511, align 8
  tail call void @_ZdlPv(i8* %537) #19
  br label %538

538:                                              ; preds = %536, %504
  %539 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 0
  %540 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %539, i64 0, i32 0, i32 0
  %541 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %540, align 8
  %542 = icmp eq %"class.jxl::Image3"* %541, null
  br i1 %542, label %572, label %543

543:                                              ; preds = %538
  %544 = bitcast %"class.jxl::Image3"* %541 to i8*
  %545 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 30, i64 0, i32 0, i32 1
  %546 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %545, align 8
  %547 = icmp eq %"class.jxl::Image3"* %546, %541
  br i1 %547, label %570, label %548

548:                                              ; preds = %543, %565
  %549 = phi %"class.jxl::Image3"* [ %550, %565 ], [ %546, %543 ]
  %550 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %549, i64 -1
  %551 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %549, i64 -1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %552 = load i8*, i8** %551, align 8
  store i8* null, i8** %551, align 8
  %553 = icmp eq i8* %552, null
  br i1 %553, label %555, label %554

554:                                              ; preds = %548
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %552) #9
  br label %555

555:                                              ; preds = %554, %548
  %556 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %549, i64 -1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %557 = load i8*, i8** %556, align 8
  store i8* null, i8** %556, align 8
  %558 = icmp eq i8* %557, null
  br i1 %558, label %560, label %559

559:                                              ; preds = %555
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %557) #9
  br label %560

560:                                              ; preds = %559, %555
  %561 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %549, i64 -1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %562 = load i8*, i8** %561, align 8
  store i8* null, i8** %561, align 8
  %563 = icmp eq i8* %562, null
  br i1 %563, label %565, label %564

564:                                              ; preds = %560
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %562) #9
  br label %565

565:                                              ; preds = %564, %560
  %566 = icmp eq %"class.jxl::Image3"* %550, %541
  br i1 %566, label %567, label %548

567:                                              ; preds = %565
  %568 = bitcast %"class.std::__1::vector.355"* %539 to i8**
  %569 = load i8*, i8** %568, align 8
  br label %570

570:                                              ; preds = %567, %543
  %571 = phi i8* [ %569, %567 ], [ %544, %543 ]
  store %"class.jxl::Image3"* %541, %"class.jxl::Image3"** %545, align 8
  tail call void @_ZdlPv(i8* %571) #19
  br label %572

572:                                              ; preds = %570, %538
  %573 = getelementptr inbounds %"struct.jxl::PassesDecoderState", %"struct.jxl::PassesDecoderState"* %0, i64 0, i32 29
  %574 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %573, i64 0, i32 0, i32 0
  %575 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %574, align 8
  %576 = icmp eq %"class.jxl::Image3"* %575, null
  br i1 %576, label %133, label %104
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %3, align 8
  %5 = icmp eq %"class.jxl::Plane.97"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.jxl::Plane.97"* %4 to i8*
  %8 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12, i32 0, i32 1
  %9 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %8, align 8
  %10 = icmp eq %"class.jxl::Plane.97"* %9, %4
  br i1 %10, label %23, label %11

11:                                               ; preds = %6, %18
  %12 = phi %"class.jxl::Plane.97"* [ %13, %18 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %12, i64 -1
  %14 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %12, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* null, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %15) #9
  br label %18

18:                                               ; preds = %17, %11
  %19 = icmp eq %"class.jxl::Plane.97"* %13, %4
  br i1 %19, label %20, label %11

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector.169"* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %6
  %24 = phi i8* [ %22, %20 ], [ %7, %6 ]
  store %"class.jxl::Plane.97"* %4, %"class.jxl::Plane.97"** %8, align 8
  tail call void @_ZdlPv(i8* %24) #19
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 2, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  store i8* null, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %28) #9
  br label %31

31:                                               ; preds = %25, %30
  %32 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  store i8* null, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %33) #9
  br label %36

36:                                               ; preds = %35, %31
  %37 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  store i8* null, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %38) #9
  br label %41

41:                                               ; preds = %40, %36
  %42 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  store i8* null, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %43) #9
  br label %46

46:                                               ; preds = %41, %45
  %47 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 8
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #19
  br label %55

55:                                               ; preds = %46, %52
  %56 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %56, align 8
  store %"struct.jxl::jpeg::JPEGData"* null, %"struct.jxl::jpeg::JPEGData"** %56, align 8
  %58 = icmp eq %"struct.jxl::jpeg::JPEGData"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.jxl::jpeg::JPEGData"* %57 to void (%"struct.jxl::jpeg::JPEGData"*)***
  %61 = load void (%"struct.jxl::jpeg::JPEGData"*)**, void (%"struct.jxl::jpeg::JPEGData"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"struct.jxl::jpeg::JPEGData"*)*, void (%"struct.jxl::jpeg::JPEGData"*)** %61, i64 1
  %63 = load void (%"struct.jxl::jpeg::JPEGData"*)*, void (%"struct.jxl::jpeg::JPEGData"*)** %62, align 8
  tail call void %63(%"struct.jxl::jpeg::JPEGData"* nonnull %57) #9
  br label %64

64:                                               ; preds = %55, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(368) %"class.jxl::ImageBundle"* @_ZN3jxl11ImageBundleaSEOS0_(%"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"* dereferenceable(368)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.jxl::ImageBundle"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"struct.jxl::jpeg::JPEGData"* null, %"struct.jxl::jpeg::JPEGData"** %3, align 8
  %6 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %6, align 8
  %8 = bitcast %"class.jxl::ImageBundle"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %"struct.jxl::jpeg::JPEGData"* %7, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %"struct.jxl::jpeg::JPEGData"* %7 to void (%"struct.jxl::jpeg::JPEGData"*)***
  %12 = load void (%"struct.jxl::jpeg::JPEGData"*)**, void (%"struct.jxl::jpeg::JPEGData"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"struct.jxl::jpeg::JPEGData"*)*, void (%"struct.jxl::jpeg::JPEGData"*)** %12, i64 1
  %14 = load void (%"struct.jxl::jpeg::JPEGData"*)*, void (%"struct.jxl::jpeg::JPEGData"*)** %13, align 8
  tail call void %14(%"struct.jxl::jpeg::JPEGData"* nonnull %7) #9
  br label %15

15:                                               ; preds = %2, %10
  %16 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 1
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 3, i32 1
  %20 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 3, i32 1
  %21 = bitcast [3 x i32]* %19 to i8*
  %22 = bitcast [3 x i32]* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 14, i1 false) #9
  %23 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 4
  %24 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 4
  %25 = bitcast %"struct.jxl::FrameOrigin"* %23 to i8*
  %26 = bitcast %"struct.jxl::FrameOrigin"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 14, i1 false)
  %27 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 8
  %28 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 8
  %29 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %15
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #19
  br label %36

36:                                               ; preds = %15, %33
  %37 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #9
  %39 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 0, i8* %40, align 1
  store i8 0, i8* %38, align 1
  %41 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 9
  %42 = bitcast %"struct.jxl::ImageMetadata"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 9
  %45 = bitcast %"struct.jxl::ImageMetadata"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10
  %47 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10
  %48 = bitcast %"class.jxl::Image3"* %46 to i8*
  %49 = bitcast %"class.jxl::Image3"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #9
  %50 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5
  %51 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr"* %51 to i64*
  %54 = load i64, i64* %53, align 8
  store i8* null, i8** %52, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %54, i64* %57, align 8
  %58 = icmp eq i8* %56, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %36
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %56) #9
  br label %60

60:                                               ; preds = %59, %36
  %61 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 1
  %62 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 1
  %63 = bitcast %"class.jxl::Plane.97"* %62 to i8*
  %64 = bitcast %"class.jxl::Plane.97"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #9
  %65 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5
  %66 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::unique_ptr"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  store i8* null, i8** %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  store i64 %69, i64* %72, align 8
  %73 = icmp eq i8* %71, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %60
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %71) #9
  br label %75

75:                                               ; preds = %74, %60
  %76 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 2
  %77 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 2
  %78 = bitcast %"class.jxl::Plane.97"* %77 to i8*
  %79 = bitcast %"class.jxl::Plane.97"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #9
  %80 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5
  %81 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store i8* null, i8** %82, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  store i64 %84, i64* %87, align 8
  %88 = icmp eq i8* %86, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %75
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %86) #9
  br label %90

90:                                               ; preds = %75, %89
  %91 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 1
  %92 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 12, i1 false) #9
  %93 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 4, i32 1
  %94 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 4, i32 1
  %95 = bitcast i32* %93 to i8*
  %96 = bitcast i32* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #9
  %97 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 5
  %98 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 5
  %99 = bitcast i32* %97 to i8*
  %100 = bitcast i32* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 6, i1 false) #9
  %101 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 8
  %102 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %101, i64 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 0
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 8, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 1
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 8, i32 2
  %109 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 2
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %108, i64 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::unique_ptr"* %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i8* null, i8** %110, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %109, i64 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %112, i64* %115, align 8
  %116 = icmp eq i8* %114, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %90
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %114) #9
  br label %118

118:                                              ; preds = %117, %90
  %119 = icmp eq %"class.jxl::ImageBundle"* %1, %0
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = bitcast %"class.jxl::PaddedBytes"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #9
  br label %122

122:                                              ; preds = %118, %120
  %123 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 9
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 9
  store i32 %124, i32* %125, align 8
  %126 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 10, i32 1
  %127 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 10, i32 1
  %128 = bitcast i32* %127 to i64*
  %129 = bitcast i32* %126 to i64*
  %130 = load i64, i64* %128, align 8
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 11, i32 1
  %132 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 11, i32 1
  %133 = bitcast i32* %132 to i64*
  %134 = bitcast i32* %131 to i64*
  %135 = load i64, i64* %133, align 8
  store i64 %135, i64* %134, align 8
  %136 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 12, i32 1
  %137 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 12, i32 1
  %138 = bitcast i32* %137 to i64*
  %139 = bitcast i32* %136 to i64*
  %140 = load i64, i64* %138, align 8
  store i64 %140, i64* %139, align 8
  %141 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 13, i32 1
  %142 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 13, i32 1
  %143 = bitcast i32* %142 to i64*
  %144 = bitcast i32* %141 to i64*
  %145 = load i64, i64* %143, align 8
  store i64 %145, i64* %144, align 8
  %146 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12
  %147 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12
  %148 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %146, i64 0, i32 0, i32 0
  %149 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %148, align 8
  %150 = icmp eq %"class.jxl::Plane.97"* %149, null
  br i1 %150, label %171, label %151

151:                                              ; preds = %122
  %152 = bitcast %"class.jxl::Plane.97"* %149 to i8*
  %153 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12, i32 0, i32 1
  %154 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %153, align 8
  %155 = icmp eq %"class.jxl::Plane.97"* %154, %149
  br i1 %155, label %168, label %156

156:                                              ; preds = %151, %163
  %157 = phi %"class.jxl::Plane.97"* [ %158, %163 ], [ %154, %151 ]
  %158 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %157, i64 -1
  %159 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %157, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  store i8* null, i8** %159, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %163, label %162

162:                                              ; preds = %156
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %160) #9
  br label %163

163:                                              ; preds = %162, %156
  %164 = icmp eq %"class.jxl::Plane.97"* %158, %149
  br i1 %164, label %165, label %156

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::vector.169"* %146 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %165, %151
  %169 = phi i8* [ %167, %165 ], [ %152, %151 ]
  store %"class.jxl::Plane.97"* %149, %"class.jxl::Plane.97"** %153, align 8
  tail call void @_ZdlPv(i8* %169) #19
  %170 = bitcast %"class.std::__1::vector.169"* %146 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #9
  br label %171

171:                                              ; preds = %122, %168
  %172 = bitcast %"class.std::__1::vector.169"* %147 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::vector.169"* %146 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 1
  %176 = bitcast %"class.jxl::Plane.97"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12, i32 0, i32 1
  %179 = bitcast %"class.jxl::Plane.97"** %178 to i64*
  store i64 %177, i64* %179, align 8
  %180 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %181 = bitcast %"class.jxl::Plane.97"** %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %184 = bitcast %"class.jxl::Plane.97"** %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = bitcast %"class.std::__1::vector.169"* %147 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 24, i1 false) #9
  %186 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 13
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 13
  store i64 %187, i64* %188, align 8
  ret %"class.jxl::ImageBundle"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl18PassesEncoderStateD2Ev(%"struct.jxl::PassesEncoderState"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load %"class.jxl::EncoderHeuristics"*, %"class.jxl::EncoderHeuristics"** %2, align 8
  store %"class.jxl::EncoderHeuristics"* null, %"class.jxl::EncoderHeuristics"** %2, align 8
  %4 = icmp eq %"class.jxl::EncoderHeuristics"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.jxl::EncoderHeuristics"* %3 to void (%"class.jxl::EncoderHeuristics"*)***
  %7 = load void (%"class.jxl::EncoderHeuristics"*)**, void (%"class.jxl::EncoderHeuristics"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.jxl::EncoderHeuristics"*)*, void (%"class.jxl::EncoderHeuristics"*)** %7, i64 1
  %9 = load void (%"class.jxl::EncoderHeuristics"*)*, void (%"class.jxl::EncoderHeuristics"*)** %8, align 8
  tail call void %9(%"class.jxl::EncoderHeuristics"* nonnull %3) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 9, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 9, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i8* %21 to i64
  %25 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 8, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  store i64 %24, i64* %26, align 8
  tail call void @_ZdlPv(i8* nonnull %21) #19
  br label %27

27:                                               ; preds = %19, %23
  %28 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %28, i64 0, i32 0, i32 0
  %30 = load %"struct.jxl::PassesEncoderState::PassData"*, %"struct.jxl::PassesEncoderState::PassData"** %29, align 8
  %31 = icmp eq %"struct.jxl::PassesEncoderState::PassData"* %30, null
  br i1 %31, label %46, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.jxl::PassesEncoderState::PassData"* %30 to i8*
  %34 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 7, i32 0, i32 1
  %35 = load %"struct.jxl::PassesEncoderState::PassData"*, %"struct.jxl::PassesEncoderState::PassData"** %34, align 8
  %36 = icmp eq %"struct.jxl::PassesEncoderState::PassData"* %35, %30
  br i1 %36, label %44, label %37

37:                                               ; preds = %32, %37
  %38 = phi %"struct.jxl::PassesEncoderState::PassData"* [ %39, %37 ], [ %35, %32 ]
  %39 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %38, i64 -1
  tail call void @_ZN3jxl18PassesEncoderState8PassDataD2Ev(%"struct.jxl::PassesEncoderState::PassData"* %39) #9
  %40 = icmp eq %"struct.jxl::PassesEncoderState::PassData"* %39, %30
  br i1 %40, label %41, label %37

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::vector.255"* %28 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %32
  %45 = phi i8* [ %43, %41 ], [ %33, %32 ]
  store %"struct.jxl::PassesEncoderState::PassData"* %30, %"struct.jxl::PassesEncoderState::PassData"** %34, align 8
  tail call void @_ZdlPv(i8* %45) #19
  br label %46

46:                                               ; preds = %27, %44
  %47 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 6, i32 39, i32 3, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 6, i32 39, i32 3, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #19
  br label %55

55:                                               ; preds = %46, %50
  %56 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 4
  %57 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"** %57, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.243"* %58, null
  br i1 %59, label %85, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.std::__1::unique_ptr.243"* %58 to i8*
  %62 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 4, i32 0, i32 1
  %63 = load %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"** %62, align 8
  %64 = icmp eq %"class.std::__1::unique_ptr.243"* %63, %58
  br i1 %64, label %83, label %65

65:                                               ; preds = %60, %78
  %66 = phi %"class.std::__1::unique_ptr.243"* [ %67, %78 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %66, i64 -1
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %68, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %68, align 8
  %70 = icmp eq %"struct.jxl::BitWriter"* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %69, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  store i8* null, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %73) #9
  br label %76

76:                                               ; preds = %75, %71
  %77 = bitcast %"struct.jxl::BitWriter"* %69 to i8*
  tail call void @_ZdlPv(i8* %77) #19
  br label %78

78:                                               ; preds = %76, %65
  %79 = icmp eq %"class.std::__1::unique_ptr.243"* %67, %58
  br i1 %79, label %80, label %65

80:                                               ; preds = %78
  %81 = bitcast %"class.std::__1::vector.241"* %56 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %60
  %84 = phi i8* [ %82, %80 ], [ %61, %60 ]
  store %"class.std::__1::unique_ptr.243"* %58, %"class.std::__1::unique_ptr.243"** %62, align 8
  tail call void @_ZdlPv(i8* %84) #19
  br label %85

85:                                               ; preds = %55, %83
  %86 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 3
  %87 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %87, align 8
  %89 = icmp eq %"class.std::__1::unique_ptr.230"* %88, null
  br i1 %89, label %113, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.std::__1::unique_ptr.230"* %88 to i8*
  %92 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 3, i32 0, i32 1
  %93 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %92, align 8
  %94 = icmp eq %"class.std::__1::unique_ptr.230"* %93, %88
  br i1 %94, label %111, label %95

95:                                               ; preds = %90, %106
  %96 = phi %"class.std::__1::unique_ptr.230"* [ %97, %106 ], [ %93, %90 ]
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %96, i64 -1
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.jxl::ACImage"*, %"class.jxl::ACImage"** %98, align 8
  store %"class.jxl::ACImage"* null, %"class.jxl::ACImage"** %98, align 8
  %100 = icmp eq %"class.jxl::ACImage"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.jxl::ACImage"* %99 to void (%"class.jxl::ACImage"*)***
  %103 = load void (%"class.jxl::ACImage"*)**, void (%"class.jxl::ACImage"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.jxl::ACImage"*)*, void (%"class.jxl::ACImage"*)** %103, i64 1
  %105 = load void (%"class.jxl::ACImage"*)*, void (%"class.jxl::ACImage"*)** %104, align 8
  tail call void %105(%"class.jxl::ACImage"* nonnull %99) #9
  br label %106

106:                                              ; preds = %101, %95
  %107 = icmp eq %"class.std::__1::unique_ptr.230"* %97, %88
  br i1 %107, label %108, label %95

108:                                              ; preds = %106
  %109 = bitcast %"class.std::__1::vector.228"* %86 to i8**
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %108, %90
  %112 = phi i8* [ %110, %108 ], [ %91, %90 ]
  store %"class.std::__1::unique_ptr.230"* %88, %"class.std::__1::unique_ptr.230"** %92, align 8
  tail call void @_ZdlPv(i8* %112) #19
  br label %113

113:                                              ; preds = %85, %111
  %114 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  store i8* null, i8** %114, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %113
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %115) #9
  br label %118

118:                                              ; preds = %113, %117
  %119 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  store i8* null, i8** %119, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %120) #9
  br label %123

123:                                              ; preds = %118, %122
  %124 = getelementptr inbounds %"struct.jxl::PassesEncoderState", %"struct.jxl::PassesEncoderState"* %0, i64 0, i32 0
  tail call void @_ZN3jxl17PassesSharedStateD2Ev(%"struct.jxl::PassesSharedState"* %124) #9
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3jxl10LZ77ParamsC1Ev(%"struct.jxl::LZ77Params"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3jxl6AuxOut19DumpPlaneNormalizedIhEEvPKcRKNS_5PlaneIT_EE(%"struct.jxl::AuxOut"*, i8*, %"class.jxl::Plane"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.jxl::Image3.413", align 8
  %5 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4, !noalias !26
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  br label %172

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !26
  %15 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8, !noalias !26
  %17 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 8, !noalias !26
  %19 = icmp eq i32 %18, 0
  %20 = zext i32 %18 to i64
  %21 = zext i32 %6 to i64
  %22 = and i64 %20, 4294967264
  %23 = add nsw i64 %22, -32
  %24 = lshr exact i64 %23, 5
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp ult i32 %18, 32
  %27 = and i64 %20, 4294967264
  %28 = and i64 %25, 1
  %29 = icmp eq i64 %23, 0
  %30 = sub nuw nsw i64 %25, %28
  %31 = icmp eq i64 %28, 0
  %32 = icmp eq i64 %27, %20
  br label %33

33:                                               ; preds = %153, %12
  %34 = phi i8 [ -1, %12 ], [ %154, %153 ]
  %35 = phi i8 [ 0, %12 ], [ %155, %153 ]
  %36 = phi i8 [ 0, %12 ], [ %156, %153 ]
  %37 = phi i8 [ -1, %12 ], [ %157, %153 ]
  %38 = phi i64 [ 0, %12 ], [ %158, %153 ]
  %39 = mul i64 %38, %16
  %40 = getelementptr inbounds i8, i8* %14, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = and i64 %41, 63
  %43 = icmp eq i64 %42, 0
  tail call void @llvm.assume(i1 %43) #9, !noalias !26
  br i1 %19, label %153, label %44

44:                                               ; preds = %33
  br i1 %26, label %45, label %49

45:                                               ; preds = %118, %44
  %46 = phi i8 [ %36, %44 ], [ %152, %118 ]
  %47 = phi i8 [ %37, %44 ], [ %137, %118 ]
  %48 = phi i64 [ 0, %44 ], [ %27, %118 ]
  br label %160

49:                                               ; preds = %44
  %50 = insertelement <16 x i8> undef, i8 %36, i32 0
  %51 = shufflevector <16 x i8> %50, <16 x i8> undef, <16 x i32> zeroinitializer
  %52 = insertelement <16 x i8> undef, i8 %37, i32 0
  %53 = shufflevector <16 x i8> %52, <16 x i8> undef, <16 x i32> zeroinitializer
  br i1 %29, label %93, label %54

54:                                               ; preds = %49, %54
  %55 = phi i64 [ %90, %54 ], [ 0, %49 ]
  %56 = phi <16 x i8> [ %88, %54 ], [ %51, %49 ]
  %57 = phi <16 x i8> [ %89, %54 ], [ %51, %49 ]
  %58 = phi <16 x i8> [ %84, %54 ], [ %53, %49 ]
  %59 = phi <16 x i8> [ %85, %54 ], [ %53, %49 ]
  %60 = phi i64 [ %91, %54 ], [ %30, %49 ]
  %61 = getelementptr inbounds i8, i8* %40, i64 %55
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 64, !noalias !26
  %64 = getelementptr inbounds i8, i8* %61, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 16, !noalias !26
  %67 = icmp ult <16 x i8> %63, %58
  %68 = icmp ult <16 x i8> %66, %59
  %69 = select <16 x i1> %67, <16 x i8> %63, <16 x i8> %58
  %70 = select <16 x i1> %68, <16 x i8> %66, <16 x i8> %59
  %71 = icmp ult <16 x i8> %56, %63
  %72 = icmp ult <16 x i8> %57, %66
  %73 = select <16 x i1> %71, <16 x i8> %63, <16 x i8> %56
  %74 = select <16 x i1> %72, <16 x i8> %66, <16 x i8> %57
  %75 = or i64 %55, 32
  %76 = getelementptr inbounds i8, i8* %40, i64 %75
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 32, !noalias !26
  %79 = getelementptr inbounds i8, i8* %76, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 16, !noalias !26
  %82 = icmp ult <16 x i8> %78, %69
  %83 = icmp ult <16 x i8> %81, %70
  %84 = select <16 x i1> %82, <16 x i8> %78, <16 x i8> %69
  %85 = select <16 x i1> %83, <16 x i8> %81, <16 x i8> %70
  %86 = icmp ult <16 x i8> %73, %78
  %87 = icmp ult <16 x i8> %74, %81
  %88 = select <16 x i1> %86, <16 x i8> %78, <16 x i8> %73
  %89 = select <16 x i1> %87, <16 x i8> %81, <16 x i8> %74
  %90 = add i64 %55, 64
  %91 = add i64 %60, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %54, !llvm.loop !30

93:                                               ; preds = %54, %49
  %94 = phi <16 x i8> [ undef, %49 ], [ %84, %54 ]
  %95 = phi <16 x i8> [ undef, %49 ], [ %85, %54 ]
  %96 = phi <16 x i8> [ undef, %49 ], [ %88, %54 ]
  %97 = phi <16 x i8> [ undef, %49 ], [ %89, %54 ]
  %98 = phi i64 [ 0, %49 ], [ %90, %54 ]
  %99 = phi <16 x i8> [ %51, %49 ], [ %88, %54 ]
  %100 = phi <16 x i8> [ %51, %49 ], [ %89, %54 ]
  %101 = phi <16 x i8> [ %53, %49 ], [ %84, %54 ]
  %102 = phi <16 x i8> [ %53, %49 ], [ %85, %54 ]
  br i1 %31, label %118, label %103

103:                                              ; preds = %93
  %104 = getelementptr inbounds i8, i8* %40, i64 %98
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 32, !noalias !26
  %107 = getelementptr inbounds i8, i8* %104, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 16, !noalias !26
  %110 = icmp ult <16 x i8> %100, %109
  %111 = select <16 x i1> %110, <16 x i8> %109, <16 x i8> %100
  %112 = icmp ult <16 x i8> %99, %106
  %113 = select <16 x i1> %112, <16 x i8> %106, <16 x i8> %99
  %114 = icmp ult <16 x i8> %109, %102
  %115 = select <16 x i1> %114, <16 x i8> %109, <16 x i8> %102
  %116 = icmp ult <16 x i8> %106, %101
  %117 = select <16 x i1> %116, <16 x i8> %106, <16 x i8> %101
  br label %118

118:                                              ; preds = %93, %103
  %119 = phi <16 x i8> [ %94, %93 ], [ %117, %103 ]
  %120 = phi <16 x i8> [ %95, %93 ], [ %115, %103 ]
  %121 = phi <16 x i8> [ %96, %93 ], [ %113, %103 ]
  %122 = phi <16 x i8> [ %97, %93 ], [ %111, %103 ]
  %123 = icmp ult <16 x i8> %119, %120
  %124 = select <16 x i1> %123, <16 x i8> %119, <16 x i8> %120
  %125 = shufflevector <16 x i8> %124, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %126 = icmp ult <16 x i8> %124, %125
  %127 = select <16 x i1> %126, <16 x i8> %124, <16 x i8> %125
  %128 = shufflevector <16 x i8> %127, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %129 = icmp ult <16 x i8> %127, %128
  %130 = select <16 x i1> %129, <16 x i8> %127, <16 x i8> %128
  %131 = shufflevector <16 x i8> %130, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %132 = icmp ult <16 x i8> %130, %131
  %133 = select <16 x i1> %132, <16 x i8> %130, <16 x i8> %131
  %134 = shufflevector <16 x i8> %133, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %135 = icmp ult <16 x i8> %133, %134
  %136 = select <16 x i1> %135, <16 x i8> %133, <16 x i8> %134
  %137 = extractelement <16 x i8> %136, i32 0
  %138 = icmp ugt <16 x i8> %121, %122
  %139 = select <16 x i1> %138, <16 x i8> %121, <16 x i8> %122
  %140 = shufflevector <16 x i8> %139, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %141 = icmp ugt <16 x i8> %139, %140
  %142 = select <16 x i1> %141, <16 x i8> %139, <16 x i8> %140
  %143 = shufflevector <16 x i8> %142, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %144 = icmp ugt <16 x i8> %142, %143
  %145 = select <16 x i1> %144, <16 x i8> %142, <16 x i8> %143
  %146 = shufflevector <16 x i8> %145, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %147 = icmp ugt <16 x i8> %145, %146
  %148 = select <16 x i1> %147, <16 x i8> %145, <16 x i8> %146
  %149 = shufflevector <16 x i8> %148, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %150 = icmp ugt <16 x i8> %148, %149
  %151 = select <16 x i1> %150, <16 x i8> %148, <16 x i8> %149
  %152 = extractelement <16 x i8> %151, i32 0
  br i1 %32, label %153, label %45

153:                                              ; preds = %160, %118, %33
  %154 = phi i8 [ %34, %33 ], [ %137, %118 ], [ %167, %160 ]
  %155 = phi i8 [ %35, %33 ], [ %152, %118 ], [ %169, %160 ]
  %156 = phi i8 [ %36, %33 ], [ %152, %118 ], [ %169, %160 ]
  %157 = phi i8 [ %37, %33 ], [ %137, %118 ], [ %167, %160 ]
  %158 = add nuw nsw i64 %38, 1
  %159 = icmp eq i64 %158, %21
  br i1 %159, label %172, label %33

160:                                              ; preds = %45, %160
  %161 = phi i8 [ %169, %160 ], [ %46, %45 ]
  %162 = phi i8 [ %167, %160 ], [ %47, %45 ]
  %163 = phi i64 [ %170, %160 ], [ %48, %45 ]
  %164 = getelementptr inbounds i8, i8* %40, i64 %163
  %165 = load i8, i8* %164, align 1, !noalias !26
  %166 = icmp ult i8 %165, %162
  %167 = select i1 %166, i8 %165, i8 %162
  %168 = icmp ult i8 %161, %165
  %169 = select i1 %168, i8 %165, i8 %161
  %170 = add nuw nsw i64 %163, 1
  %171 = icmp eq i64 %170, %20
  br i1 %171, label %153, label %160, !llvm.loop !31

172:                                              ; preds = %153, %8
  %173 = phi i64 [ 0, %8 ], [ %21, %153 ]
  %174 = phi i64 [ %11, %8 ], [ %20, %153 ]
  %175 = phi i8 [ -1, %8 ], [ %154, %153 ]
  %176 = phi i8 [ 0, %8 ], [ %155, %153 ]
  %177 = bitcast %"class.jxl::Image3.413"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %177) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 96, i1 false)
  %178 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 0
  %179 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %179, i64 %174, i64 %173, i64 1) #9
  %180 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 1, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %180, i64 %174, i64 %173, i64 1) #9
  %181 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 2, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %181, i64 %174, i64 %173, i64 1) #9
  %182 = icmp eq i8 %176, %175
  %183 = zext i8 %176 to i32
  %184 = zext i8 %175 to i32
  %185 = sub nsw i32 %183, %184
  %186 = sitofp i32 %185 to float
  %187 = fdiv float 2.550000e+02, %186
  %188 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %189 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %2, i64 0, i32 0, i32 4
  %190 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0, i32 4
  %191 = select i1 %182, float 0.000000e+00, float %187
  %192 = load i32, i32* %5, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %351, label %206

194:                                              ; preds = %351
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %353) #9
  br label %195

195:                                              ; preds = %194, %351
  %196 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  store i8* null, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %200, label %199

199:                                              ; preds = %195
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %197) #9
  br label %200

200:                                              ; preds = %199, %195
  %201 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  store i8* null, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %200
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %202) #9
  br label %205

205:                                              ; preds = %200, %204
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %177) #9
  ret void

206:                                              ; preds = %172
  %207 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %208 = load i32, i32* %178, align 8
  br label %211

209:                                              ; preds = %235
  %210 = icmp eq i32 %236, 0
  br i1 %210, label %351, label %255

211:                                              ; preds = %206, %235
  %212 = phi i32 [ %192, %206 ], [ %236, %235 ]
  %213 = phi i32 [ %208, %206 ], [ %237, %235 ]
  %214 = phi i64 [ 0, %206 ], [ %238, %235 ]
  %215 = load i8*, i8** %188, align 8
  %216 = load i64, i64* %189, align 8
  %217 = mul i64 %216, %214
  %218 = getelementptr inbounds i8, i8* %215, i64 %217
  %219 = ptrtoint i8* %218 to i64
  %220 = and i64 %219, 63
  %221 = icmp eq i64 %220, 0
  call void @llvm.assume(i1 %221) #9
  %222 = load i64, i64* %190, align 8
  %223 = mul i64 %222, %214
  %224 = load i8*, i8** %207, align 8
  %225 = ptrtoint i8* %224 to i64
  %226 = and i64 %225, 63
  %227 = icmp eq i64 %226, 0
  call void @llvm.assume(i1 %227) #9
  %228 = getelementptr inbounds i8, i8* %224, i64 %223
  %229 = ptrtoint i8* %228 to i64
  %230 = and i64 %229, 63
  %231 = icmp eq i64 %230, 0
  call void @llvm.assume(i1 %231) #9
  %232 = icmp eq i32 %213, 0
  br i1 %232, label %235, label %241

233:                                              ; preds = %241
  %234 = load i32, i32* %5, align 4
  br label %235

235:                                              ; preds = %233, %211
  %236 = phi i32 [ %234, %233 ], [ %212, %211 ]
  %237 = phi i32 [ %252, %233 ], [ 0, %211 ]
  %238 = add nuw nsw i64 %214, 1
  %239 = zext i32 %236 to i64
  %240 = icmp ult i64 %238, %239
  br i1 %240, label %211, label %209

241:                                              ; preds = %211, %241
  %242 = phi i64 [ %251, %241 ], [ 0, %211 ]
  %243 = getelementptr inbounds i8, i8* %218, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = sub nsw i32 %245, %184
  %247 = sitofp i32 %246 to float
  %248 = fmul float %191, %247
  %249 = fptoui float %248 to i8
  %250 = getelementptr inbounds i8, i8* %228, i64 %242
  store i8 %249, i8* %250, align 1
  %251 = add nuw nsw i64 %242, 1
  %252 = load i32, i32* %178, align 8
  %253 = zext i32 %252 to i64
  %254 = icmp ult i64 %251, %253
  br i1 %254, label %241, label %233

255:                                              ; preds = %209
  %256 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %257 = load i32, i32* %178, align 8
  br label %258

258:                                              ; preds = %296, %255
  %259 = phi i32 [ %236, %255 ], [ %297, %296 ]
  %260 = phi i32 [ %257, %255 ], [ %298, %296 ]
  %261 = phi i64 [ 0, %255 ], [ %299, %296 ]
  %262 = load i8*, i8** %188, align 8
  %263 = load i64, i64* %189, align 8
  %264 = mul i64 %263, %261
  %265 = getelementptr inbounds i8, i8* %262, i64 %264
  %266 = ptrtoint i8* %265 to i64
  %267 = and i64 %266, 63
  %268 = icmp eq i64 %267, 0
  call void @llvm.assume(i1 %268) #9
  %269 = load i64, i64* %190, align 8
  %270 = mul i64 %269, %261
  %271 = load i8*, i8** %256, align 8
  %272 = ptrtoint i8* %271 to i64
  %273 = and i64 %272, 63
  %274 = icmp eq i64 %273, 0
  call void @llvm.assume(i1 %274) #9
  %275 = getelementptr inbounds i8, i8* %271, i64 %270
  %276 = ptrtoint i8* %275 to i64
  %277 = and i64 %276, 63
  %278 = icmp eq i64 %277, 0
  call void @llvm.assume(i1 %278) #9
  %279 = icmp eq i32 %260, 0
  br i1 %279, label %296, label %280

280:                                              ; preds = %258, %280
  %281 = phi i64 [ %290, %280 ], [ 0, %258 ]
  %282 = getelementptr inbounds i8, i8* %265, i64 %281
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = sub nsw i32 %284, %184
  %286 = sitofp i32 %285 to float
  %287 = fmul float %191, %286
  %288 = fptoui float %287 to i8
  %289 = getelementptr inbounds i8, i8* %275, i64 %281
  store i8 %288, i8* %289, align 1
  %290 = add nuw nsw i64 %281, 1
  %291 = load i32, i32* %178, align 8
  %292 = zext i32 %291 to i64
  %293 = icmp ult i64 %290, %292
  br i1 %293, label %280, label %294

294:                                              ; preds = %280
  %295 = load i32, i32* %5, align 4
  br label %296

296:                                              ; preds = %294, %258
  %297 = phi i32 [ %295, %294 ], [ %259, %258 ]
  %298 = phi i32 [ %291, %294 ], [ 0, %258 ]
  %299 = add nuw nsw i64 %261, 1
  %300 = zext i32 %297 to i64
  %301 = icmp ult i64 %299, %300
  br i1 %301, label %258, label %302

302:                                              ; preds = %296
  %303 = icmp eq i32 %297, 0
  br i1 %303, label %351, label %304

304:                                              ; preds = %302
  %305 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %306 = load i32, i32* %178, align 8
  br label %307

307:                                              ; preds = %345, %304
  %308 = phi i32 [ %297, %304 ], [ %346, %345 ]
  %309 = phi i32 [ %306, %304 ], [ %347, %345 ]
  %310 = phi i64 [ 0, %304 ], [ %348, %345 ]
  %311 = load i8*, i8** %188, align 8
  %312 = load i64, i64* %189, align 8
  %313 = mul i64 %312, %310
  %314 = getelementptr inbounds i8, i8* %311, i64 %313
  %315 = ptrtoint i8* %314 to i64
  %316 = and i64 %315, 63
  %317 = icmp eq i64 %316, 0
  call void @llvm.assume(i1 %317) #9
  %318 = load i64, i64* %190, align 8
  %319 = mul i64 %318, %310
  %320 = load i8*, i8** %305, align 8
  %321 = ptrtoint i8* %320 to i64
  %322 = and i64 %321, 63
  %323 = icmp eq i64 %322, 0
  call void @llvm.assume(i1 %323) #9
  %324 = getelementptr inbounds i8, i8* %320, i64 %319
  %325 = ptrtoint i8* %324 to i64
  %326 = and i64 %325, 63
  %327 = icmp eq i64 %326, 0
  call void @llvm.assume(i1 %327) #9
  %328 = icmp eq i32 %309, 0
  br i1 %328, label %345, label %329

329:                                              ; preds = %307, %329
  %330 = phi i64 [ %339, %329 ], [ 0, %307 ]
  %331 = getelementptr inbounds i8, i8* %314, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i32
  %334 = sub nsw i32 %333, %184
  %335 = sitofp i32 %334 to float
  %336 = fmul float %191, %335
  %337 = fptoui float %336 to i8
  %338 = getelementptr inbounds i8, i8* %324, i64 %330
  store i8 %337, i8* %338, align 1
  %339 = add nuw nsw i64 %330, 1
  %340 = load i32, i32* %178, align 8
  %341 = zext i32 %340 to i64
  %342 = icmp ult i64 %339, %341
  br i1 %342, label %329, label %343

343:                                              ; preds = %329
  %344 = load i32, i32* %5, align 4
  br label %345

345:                                              ; preds = %343, %307
  %346 = phi i32 [ %344, %343 ], [ %308, %307 ]
  %347 = phi i32 [ %340, %343 ], [ 0, %307 ]
  %348 = add nuw nsw i64 %310, 1
  %349 = zext i32 %346 to i64
  %350 = icmp ult i64 %348, %349
  br i1 %350, label %307, label %351

351:                                              ; preds = %345, %172, %209, %302
  call void @_ZNK3jxl6AuxOut9DumpImageIhEEvPKcRKNS_6Image3IT_EE(%"struct.jxl::AuxOut"* %0, i8* %1, %"class.jxl::Image3.413"* nonnull dereferenceable(96) %4)
  %352 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  store i8* null, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %195, label %194
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3jxl6AuxOut12DumpXybImageIfEEvPKcRKNS_6Image3IT_EE(%"struct.jxl::AuxOut"*, i8*, %"class.jxl::Image3"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = alloca %"class.jxl::Image3", align 8
  %6 = alloca %"struct.jxl::OpsinParams", align 4
  %7 = alloca %"class.jxl::Rect", align 8
  %8 = alloca %"class.jxl::CodecInOut", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 2
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 2
  %13 = load i8, i8* %12, align 8, !range !14
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %196

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %26

24:                                               ; preds = %15
  %25 = zext i8 %19 to i64
  br label %26

26:                                               ; preds = %21, %24
  %27 = phi i64 [ %23, %21 ], [ %25, %24 ]
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %196, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %32 = bitcast %"class.std::__1::basic_stringbuf"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 256, i1 false)
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %35, i64 0, i32 0
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %40 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %41 = inttoptr i64 %37 to i8*
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %30, i64 %44
  %46 = bitcast i8* %45 to i64*
  store i64 %39, i64* %46, align 8
  %47 = load i8*, i8** %40, align 8
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %30, i64 %50
  %52 = bitcast i8* %51 to %"class.std::__1::ios_base"*
  %53 = bitcast %"class.std::__1::basic_stringbuf"* %35 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %52, i8* %53) #9
  %54 = getelementptr inbounds i8, i8* %51, i64 136
  %55 = bitcast i8* %54 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %55, align 8
  %56 = getelementptr inbounds i8, i8* %51, i64 144
  %57 = bitcast i8* %56 to i32*
  store i32 -1, i32* %57, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %33, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %36) #9
  %58 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %35, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %60 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 3
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 32, i1 false) #9
  store i32 16, i32* %60, align 8
  %62 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  %63 = load i8, i8* %18, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %70 = zext i8 %63 to i64
  %71 = select i1 %64, i8* %66, i8* %69
  %72 = select i1 %64, i64 %68, i64 %70
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %62, i8* %71, i64 %72) #9
  %74 = call i64 @strlen(i8* %1) #9
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, i8* %1, i64 %74) #9
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 4) #9
  %77 = bitcast %"class.jxl::Image3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %77) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 96, i1 false)
  %78 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %2, i64 0, i32 0, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %2, i64 0, i32 0, i64 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %5, i64 0, i32 0, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %84, i64 %80, i64 %83, i64 4) #9
  %85 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %5, i64 0, i32 0, i64 1, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %85, i64 %80, i64 %83, i64 4) #9
  %86 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %5, i64 0, i32 0, i64 2, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %86, i64 %80, i64 %83, i64 4) #9
  %87 = bitcast %"struct.jxl::OpsinParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %87) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %87, i8 -1, i64 192, i1 false)
  call void @_ZN3jxl11OpsinParams4InitEf(%"struct.jxl::OpsinParams"* nonnull %6, float 2.550000e+02) #9
  %88 = bitcast %"class.jxl::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #9
  %89 = bitcast %"class.jxl::Image3"* %5 to <2 x i32>*
  %90 = load <2 x i32>, <2 x i32>* %89, align 8
  %91 = zext <2 x i32> %90 to <2 x i64>
  %92 = getelementptr inbounds %"class.jxl::Rect", %"class.jxl::Rect"* %7, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #9
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %93, align 8
  call void @_ZN3jxl13OpsinToLinearERKNS_6Image3IfEERKNS_4RectEPNS_10ThreadPoolEPS1_RKNS_11OpsinParamsE(%"class.jxl::Image3"* dereferenceable(96) %2, %"class.jxl::Rect"* nonnull dereferenceable(32) %7, %"class.jxl::ThreadPool"* null, %"class.jxl::Image3"* nonnull %5, %"struct.jxl::OpsinParams"* nonnull dereferenceable(192) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #9
  %94 = bitcast %"class.jxl::CodecInOut"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3416, i8* nonnull %94) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* align 8 bitcast ({ %"struct.jxl::SizeConstraints", %"class.jxl::DecoderHints", i32, float, i64, %"struct.jxl::Blobs", { <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.18", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::CustomTransformData" }, { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.std::__1::vector.192", i8, [7 x i8], i64 }* @__const._ZNK3jxl6AuxOut9DumpImageIfEEvPKcRKNS_6Image3IT_EE.io to i8*), i64 3416, i1 false)
  call void @_ZN3jxl10CodecInOutC2Ev(%"class.jxl::CodecInOut"* nonnull %8)
  %95 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 3, i32 3
  store i32 16, i32* %95, align 4
  %96 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 3, i32 4
  store i32 0, i32* %96, align 8
  %97 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 3, i32 1
  store i8 0, i8* %97, align 8
  %98 = call dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding10LinearSRGBEb(i1 zeroext false) #9
  %99 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7
  %100 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 1
  %101 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 12, i1 false) #9
  %102 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 4, i32 1
  %103 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 4, i32 1
  %104 = bitcast i32* %102 to i8*
  %105 = bitcast i32* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #9
  %106 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 5
  %107 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 5
  %108 = bitcast i32* %106 to i8*
  %109 = bitcast i32* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 6, i1 false) #9
  %110 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 8
  %111 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 8, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 8, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = icmp ult i64 %114, %112
  br i1 %115, label %116, label %117

116:                                              ; preds = %29
  call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %110, i64 %112) #9
  br label %117

117:                                              ; preds = %116, %29
  %118 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = icmp eq i8* %119, null
  %121 = select i1 %120, i64 0, i64 %112
  %122 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %110, i64 0, i32 0
  store i64 %121, i64* %122, align 8
  br i1 %120, label %126, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %119, i8* align 1 %125, i64 %121, i1 false) #9
  br label %126

126:                                              ; preds = %117, %123
  %127 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 9
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 9
  store i32 %128, i32* %129, align 8
  %130 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 10, i32 1
  %131 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 10, i32 1
  %132 = bitcast i32* %131 to i64*
  %133 = bitcast i32* %130 to i64*
  %134 = load i64, i64* %132, align 8
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 11, i32 1
  %136 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 11, i32 1
  %137 = bitcast i32* %136 to i64*
  %138 = bitcast i32* %135 to i64*
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 12, i32 1
  %141 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 12, i32 1
  %142 = bitcast i32* %141 to i64*
  %143 = bitcast i32* %140 to i64*
  %144 = load i64, i64* %142, align 8
  store i64 %144, i64* %143, align 8
  %145 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %8, i64 0, i32 6, i32 0, i32 7, i32 13, i32 1
  %146 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %98, i64 0, i32 13, i32 1
  %147 = bitcast i32* %146 to i64*
  %148 = bitcast i32* %145 to i64*
  %149 = load i64, i64* %147, align 8
  store i64 %149, i64* %148, align 8
  call void @_ZN3jxl10CodecInOut12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE(%"class.jxl::CodecInOut"* nonnull %8, %"class.jxl::Image3"* nonnull dereferenceable(96) %5, %"struct.jxl::ColorEncoding"* dereferenceable(152) %99)
  %150 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #9
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_stringbuf"* %35) #9
  %151 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 1, i32 0
  %152 = load i32 (%"union.std::__1::__function::__policy_storage"*, %"class.jxl::CodecInOut"*, %"class.std::__1::basic_string"*)*, i32 (%"union.std::__1::__function::__policy_storage"*, %"class.jxl::CodecInOut"*, %"class.std::__1::basic_string"*)** %151, align 8
  %153 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 0
  %154 = call i32 %152(%"union.std::__1::__function::__policy_storage"* %153, %"class.jxl::CodecInOut"* nonnull dereferenceable(3416) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #9
  %155 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %126
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  call void @_ZdlPv(i8* %161) #19
  br label %162

162:                                              ; preds = %126, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #9
  call void @_ZN3jxl10CodecInOutD2Ev(%"class.jxl::CodecInOut"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 3416, i8* nonnull %94) #9
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %87) #9
  %163 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %5, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  store i8* null, i8** %163, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %162
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %164) #9
  br label %167

167:                                              ; preds = %166, %162
  %168 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %5, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  store i8* null, i8** %168, align 8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %167
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %169) #9
  br label %172

172:                                              ; preds = %171, %167
  %173 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %5, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  store i8* null, i8** %173, align 8
  %175 = icmp eq i8* %174, null
  br i1 %175, label %177, label %176

176:                                              ; preds = %172
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %174) #9
  br label %177

177:                                              ; preds = %172, %176
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %77) #9
  %178 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %178, i64* %38, align 8
  %179 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %180 = inttoptr i64 %178 to i8*
  %181 = getelementptr i8, i8* %180, i64 -24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds i8, i8* %30, i64 %183
  %185 = bitcast i8* %184 to i64*
  store i64 %179, i64* %185, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %186 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %177
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  call void @_ZdlPv(i8* %192) #19
  br label %193

193:                                              ; preds = %177, %190
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %36) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %62, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #9
  %194 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %195 = bitcast %"class.std::__1::basic_ios.base"* %194 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %195) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %30) #9
  br label %196

196:                                              ; preds = %26, %3, %193
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3jxl6AuxOut9DumpImageIfEEvPKcRKNS_6Image3IT_EE(%"struct.jxl::AuxOut"*, i8*, %"class.jxl::Image3"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = alloca %"class.jxl::CodecInOut", align 8
  %6 = alloca %"class.jxl::Image3", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 2
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !14
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %178

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %13
  %23 = zext i8 %17 to i64
  br label %24

24:                                               ; preds = %19, %22
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %178, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 256, i1 false)
  %31 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %33, i64 0, i32 0
  %35 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %39 = inttoptr i64 %35 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %28, i64 %42
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = load i8*, i8** %38, align 8
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %28, i64 %48
  %50 = bitcast i8* %49 to %"class.std::__1::ios_base"*
  %51 = bitcast %"class.std::__1::basic_stringbuf"* %33 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %50, i8* %51) #9
  %52 = getelementptr inbounds i8, i8* %49, i64 136
  %53 = bitcast i8* %52 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %53, align 8
  %54 = getelementptr inbounds i8, i8* %49, i64 144
  %55 = bitcast i8* %54 to i32*
  store i32 -1, i32* %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %31, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %34) #9
  %56 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %33, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %58 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 3
  %59 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #9
  store i32 16, i32* %58, align 8
  %60 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  %61 = load i8, i8* %16, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %68 = zext i8 %61 to i64
  %69 = select i1 %62, i8* %64, i8* %67
  %70 = select i1 %62, i64 %66, i64 %68
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %60, i8* %69, i64 %70) #9
  %72 = call i64 @strlen(i8* %1) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* %1, i64 %72) #9
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 4) #9
  %75 = bitcast %"class.jxl::CodecInOut"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3416, i8* nonnull %75) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 bitcast ({ %"struct.jxl::SizeConstraints", %"class.jxl::DecoderHints", i32, float, i64, %"struct.jxl::Blobs", { <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.18", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::CustomTransformData" }, { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.std::__1::vector.192", i8, [7 x i8], i64 }* @__const._ZNK3jxl6AuxOut9DumpImageIfEEvPKcRKNS_6Image3IT_EE.io to i8*), i64 3416, i1 false)
  call void @_ZN3jxl10CodecInOutC2Ev(%"class.jxl::CodecInOut"* nonnull %5)
  %76 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 3, i32 3
  store i32 16, i32* %76, align 4
  %77 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 3, i32 4
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 3, i32 1
  store i8 0, i8* %78, align 8
  %79 = call dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding4SRGBEb(i1 zeroext false) #9
  %80 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7
  %81 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 1
  %82 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 12, i1 false) #9
  %83 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 4, i32 1
  %84 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 4, i32 1
  %85 = bitcast i32* %83 to i8*
  %86 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #9
  %87 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 5
  %88 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 5
  %89 = bitcast i32* %87 to i8*
  %90 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 6, i1 false) #9
  %91 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 8
  %92 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 8, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 8, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %95, %93
  br i1 %96, label %97, label %98

97:                                               ; preds = %27
  call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %91, i64 %93) #9
  br label %98

98:                                               ; preds = %97, %27
  %99 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  %102 = select i1 %101, i64 0, i64 %93
  %103 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %91, i64 0, i32 0
  store i64 %102, i64* %103, align 8
  br i1 %101, label %107, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %100, i8* align 1 %106, i64 %102, i1 false) #9
  br label %107

107:                                              ; preds = %98, %104
  %108 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 9
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 9
  store i32 %109, i32* %110, align 8
  %111 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 10, i32 1
  %112 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 10, i32 1
  %113 = bitcast i32* %112 to i64*
  %114 = bitcast i32* %111 to i64*
  %115 = load i64, i64* %113, align 8
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 11, i32 1
  %117 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 11, i32 1
  %118 = bitcast i32* %117 to i64*
  %119 = bitcast i32* %116 to i64*
  %120 = load i64, i64* %118, align 8
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 12, i32 1
  %122 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 12, i32 1
  %123 = bitcast i32* %122 to i64*
  %124 = bitcast i32* %121 to i64*
  %125 = load i64, i64* %123, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 13, i32 1
  %127 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 13, i32 1
  %128 = bitcast i32* %127 to i64*
  %129 = bitcast i32* %126 to i64*
  %130 = load i64, i64* %128, align 8
  store i64 %130, i64* %129, align 8
  %131 = bitcast %"class.jxl::Image3"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %131) #9
  call void @_ZN3jxl14ConvertToFloatIfEENS_6Image3IfEERKNS1_IT_EE(%"class.jxl::Image3"* nonnull sret %6, %"class.jxl::Image3"* dereferenceable(96) %2)
  call void @_ZN3jxl10CodecInOut12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE(%"class.jxl::CodecInOut"* nonnull %5, %"class.jxl::Image3"* nonnull dereferenceable(96) %6, %"struct.jxl::ColorEncoding"* dereferenceable(152) %80)
  %132 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %6, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  store i8* null, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %107
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %133) #9
  br label %136

136:                                              ; preds = %135, %107
  %137 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %6, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  store i8* null, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %138) #9
  br label %141

141:                                              ; preds = %140, %136
  %142 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %6, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  store i8* null, i8** %142, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %143) #9
  br label %146

146:                                              ; preds = %141, %145
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %131) #9
  %147 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #9
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %33) #9
  %148 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 1, i32 0
  %149 = load i32 (%"union.std::__1::__function::__policy_storage"*, %"class.jxl::CodecInOut"*, %"class.std::__1::basic_string"*)*, i32 (%"union.std::__1::__function::__policy_storage"*, %"class.jxl::CodecInOut"*, %"class.std::__1::basic_string"*)** %148, align 8
  %150 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 0
  %151 = call i32 %149(%"union.std::__1::__function::__policy_storage"* %150, %"class.jxl::CodecInOut"* nonnull dereferenceable(3416) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #9
  %152 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %146
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #19
  br label %159

159:                                              ; preds = %146, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #9
  call void @_ZN3jxl10CodecInOutD2Ev(%"class.jxl::CodecInOut"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 3416, i8* nonnull %75) #9
  %160 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %160, i64* %36, align 8
  %161 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %162 = inttoptr i64 %160 to i8*
  %163 = getelementptr i8, i8* %162, i64 -24
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i8, i8* %28, i64 %165
  %167 = bitcast i8* %166 to i64*
  store i64 %161, i64* %167, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %168 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %159
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #19
  br label %175

175:                                              ; preds = %159, %172
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %34) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %60, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #9
  %176 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %177 = bitcast %"class.std::__1::basic_ios.base"* %176 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %177) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %28) #9
  br label %178

178:                                              ; preds = %24, %3, %175
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3jxl6AuxOut19DumpPlaneNormalizedIfEEvPKcRKNS_5PlaneIT_EE(%"struct.jxl::AuxOut"*, i8*, %"class.jxl::Plane.97"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.jxl::Image3.413", align 8
  %5 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4, !noalias !33
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  br label %102

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !33
  %15 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8, !noalias !33
  %17 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 8, !noalias !33
  %19 = icmp eq i32 %18, 0
  %20 = zext i32 %18 to i64
  %21 = zext i32 %6 to i64
  %22 = add nsw i64 %20, -1
  %23 = and i64 %20, 3
  %24 = icmp ult i64 %22, 3
  %25 = sub nsw i64 %20, %23
  %26 = icmp eq i64 %23, 0
  br label %27

27:                                               ; preds = %60, %12
  %28 = phi float [ 0x47EFFFFFE0000000, %12 ], [ %61, %60 ]
  %29 = phi float [ 0xC7EFFFFFE0000000, %12 ], [ %62, %60 ]
  %30 = phi float [ 0xC7EFFFFFE0000000, %12 ], [ %63, %60 ]
  %31 = phi float [ 0x47EFFFFFE0000000, %12 ], [ %64, %60 ]
  %32 = phi i64 [ 0, %12 ], [ %65, %60 ]
  %33 = mul i64 %32, %16
  %34 = getelementptr inbounds i8, i8* %14, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = and i64 %35, 63
  %37 = icmp eq i64 %36, 0
  tail call void @llvm.assume(i1 %37) #9, !noalias !33
  %38 = bitcast i8* %34 to float*
  br i1 %19, label %60, label %39

39:                                               ; preds = %27
  br i1 %24, label %40, label %67

40:                                               ; preds = %67, %39
  %41 = phi float [ undef, %39 ], [ %96, %67 ]
  %42 = phi float [ undef, %39 ], [ %98, %67 ]
  %43 = phi float [ %30, %39 ], [ %98, %67 ]
  %44 = phi float [ %31, %39 ], [ %96, %67 ]
  %45 = phi i64 [ 0, %39 ], [ %99, %67 ]
  br i1 %26, label %60, label %46

46:                                               ; preds = %40, %46
  %47 = phi float [ %56, %46 ], [ %43, %40 ]
  %48 = phi float [ %54, %46 ], [ %44, %40 ]
  %49 = phi i64 [ %57, %46 ], [ %45, %40 ]
  %50 = phi i64 [ %58, %46 ], [ %23, %40 ]
  %51 = getelementptr inbounds float, float* %38, i64 %49
  %52 = load float, float* %51, align 4, !noalias !33
  %53 = fcmp olt float %52, %48
  %54 = select i1 %53, float %52, float %48
  %55 = fcmp olt float %47, %52
  %56 = select i1 %55, float %52, float %47
  %57 = add nuw nsw i64 %49, 1
  %58 = add i64 %50, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %46, !llvm.loop !37

60:                                               ; preds = %40, %46, %27
  %61 = phi float [ %28, %27 ], [ %41, %40 ], [ %54, %46 ]
  %62 = phi float [ %29, %27 ], [ %42, %40 ], [ %56, %46 ]
  %63 = phi float [ %30, %27 ], [ %42, %40 ], [ %56, %46 ]
  %64 = phi float [ %31, %27 ], [ %41, %40 ], [ %54, %46 ]
  %65 = add nuw nsw i64 %32, 1
  %66 = icmp eq i64 %65, %21
  br i1 %66, label %102, label %27

67:                                               ; preds = %39, %67
  %68 = phi float [ %98, %67 ], [ %30, %39 ]
  %69 = phi float [ %96, %67 ], [ %31, %39 ]
  %70 = phi i64 [ %99, %67 ], [ 0, %39 ]
  %71 = phi i64 [ %100, %67 ], [ %25, %39 ]
  %72 = getelementptr inbounds float, float* %38, i64 %70
  %73 = load float, float* %72, align 16, !noalias !33
  %74 = fcmp olt float %73, %69
  %75 = select i1 %74, float %73, float %69
  %76 = fcmp olt float %68, %73
  %77 = select i1 %76, float %73, float %68
  %78 = or i64 %70, 1
  %79 = getelementptr inbounds float, float* %38, i64 %78
  %80 = load float, float* %79, align 4, !noalias !33
  %81 = fcmp olt float %80, %75
  %82 = select i1 %81, float %80, float %75
  %83 = fcmp olt float %77, %80
  %84 = select i1 %83, float %80, float %77
  %85 = or i64 %70, 2
  %86 = getelementptr inbounds float, float* %38, i64 %85
  %87 = load float, float* %86, align 8, !noalias !33
  %88 = fcmp olt float %87, %82
  %89 = select i1 %88, float %87, float %82
  %90 = fcmp olt float %84, %87
  %91 = select i1 %90, float %87, float %84
  %92 = or i64 %70, 3
  %93 = getelementptr inbounds float, float* %38, i64 %92
  %94 = load float, float* %93, align 4, !noalias !33
  %95 = fcmp olt float %94, %89
  %96 = select i1 %95, float %94, float %89
  %97 = fcmp olt float %91, %94
  %98 = select i1 %97, float %94, float %91
  %99 = add nuw nsw i64 %70, 4
  %100 = add i64 %71, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %40, label %67

102:                                              ; preds = %60, %8
  %103 = phi i64 [ 0, %8 ], [ %21, %60 ]
  %104 = phi i64 [ %11, %8 ], [ %20, %60 ]
  %105 = phi float [ 0x47EFFFFFE0000000, %8 ], [ %61, %60 ]
  %106 = phi float [ 0xC7EFFFFFE0000000, %8 ], [ %62, %60 ]
  %107 = bitcast %"class.jxl::Image3.413"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %107) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 96, i1 false)
  %108 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %109, i64 %104, i64 %103, i64 1) #9
  %110 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 1, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %110, i64 %104, i64 %103, i64 1) #9
  %111 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 2, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %111, i64 %104, i64 %103, i64 1) #9
  %112 = fcmp oeq float %105, %106
  %113 = fsub float %106, %105
  %114 = fdiv float 2.550000e+02, %113
  %115 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 4
  %117 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0, i32 4
  %118 = select i1 %112, float 0.000000e+00, float %114
  %119 = load i32, i32* %5, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %275, label %133

121:                                              ; preds = %275
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %277) #9
  br label %122

122:                                              ; preds = %121, %275
  %123 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  store i8* null, i8** %123, align 8
  %125 = icmp eq i8* %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %124) #9
  br label %127

127:                                              ; preds = %126, %122
  %128 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  store i8* null, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %127
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %129) #9
  br label %132

132:                                              ; preds = %127, %131
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %107) #9
  ret void

133:                                              ; preds = %102
  %134 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %135 = load i32, i32* %108, align 8
  br label %138

136:                                              ; preds = %163
  %137 = icmp eq i32 %164, 0
  br i1 %137, label %275, label %181

138:                                              ; preds = %133, %163
  %139 = phi i32 [ %119, %133 ], [ %164, %163 ]
  %140 = phi i32 [ %135, %133 ], [ %165, %163 ]
  %141 = phi i64 [ 0, %133 ], [ %166, %163 ]
  %142 = load i8*, i8** %115, align 8
  %143 = load i64, i64* %116, align 8
  %144 = mul i64 %143, %141
  %145 = getelementptr inbounds i8, i8* %142, i64 %144
  %146 = ptrtoint i8* %145 to i64
  %147 = and i64 %146, 63
  %148 = icmp eq i64 %147, 0
  call void @llvm.assume(i1 %148) #9
  %149 = bitcast i8* %145 to float*
  %150 = load i64, i64* %117, align 8
  %151 = mul i64 %150, %141
  %152 = load i8*, i8** %134, align 8
  %153 = ptrtoint i8* %152 to i64
  %154 = and i64 %153, 63
  %155 = icmp eq i64 %154, 0
  call void @llvm.assume(i1 %155) #9
  %156 = getelementptr inbounds i8, i8* %152, i64 %151
  %157 = ptrtoint i8* %156 to i64
  %158 = and i64 %157, 63
  %159 = icmp eq i64 %158, 0
  call void @llvm.assume(i1 %159) #9
  %160 = icmp eq i32 %140, 0
  br i1 %160, label %163, label %169

161:                                              ; preds = %169
  %162 = load i32, i32* %5, align 4
  br label %163

163:                                              ; preds = %161, %138
  %164 = phi i32 [ %162, %161 ], [ %139, %138 ]
  %165 = phi i32 [ %178, %161 ], [ 0, %138 ]
  %166 = add nuw nsw i64 %141, 1
  %167 = zext i32 %164 to i64
  %168 = icmp ult i64 %166, %167
  br i1 %168, label %138, label %136

169:                                              ; preds = %138, %169
  %170 = phi i64 [ %177, %169 ], [ 0, %138 ]
  %171 = getelementptr inbounds float, float* %149, i64 %170
  %172 = load float, float* %171, align 4
  %173 = fsub float %172, %105
  %174 = fmul float %118, %173
  %175 = fptoui float %174 to i8
  %176 = getelementptr inbounds i8, i8* %156, i64 %170
  store i8 %175, i8* %176, align 1
  %177 = add nuw nsw i64 %170, 1
  %178 = load i32, i32* %108, align 8
  %179 = zext i32 %178 to i64
  %180 = icmp ult i64 %177, %179
  br i1 %180, label %169, label %161

181:                                              ; preds = %136
  %182 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %183 = load i32, i32* %108, align 8
  br label %184

184:                                              ; preds = %221, %181
  %185 = phi i32 [ %164, %181 ], [ %222, %221 ]
  %186 = phi i32 [ %183, %181 ], [ %223, %221 ]
  %187 = phi i64 [ 0, %181 ], [ %224, %221 ]
  %188 = load i8*, i8** %115, align 8
  %189 = load i64, i64* %116, align 8
  %190 = mul i64 %189, %187
  %191 = getelementptr inbounds i8, i8* %188, i64 %190
  %192 = ptrtoint i8* %191 to i64
  %193 = and i64 %192, 63
  %194 = icmp eq i64 %193, 0
  call void @llvm.assume(i1 %194) #9
  %195 = bitcast i8* %191 to float*
  %196 = load i64, i64* %117, align 8
  %197 = mul i64 %196, %187
  %198 = load i8*, i8** %182, align 8
  %199 = ptrtoint i8* %198 to i64
  %200 = and i64 %199, 63
  %201 = icmp eq i64 %200, 0
  call void @llvm.assume(i1 %201) #9
  %202 = getelementptr inbounds i8, i8* %198, i64 %197
  %203 = ptrtoint i8* %202 to i64
  %204 = and i64 %203, 63
  %205 = icmp eq i64 %204, 0
  call void @llvm.assume(i1 %205) #9
  %206 = icmp eq i32 %186, 0
  br i1 %206, label %221, label %207

207:                                              ; preds = %184, %207
  %208 = phi i64 [ %215, %207 ], [ 0, %184 ]
  %209 = getelementptr inbounds float, float* %195, i64 %208
  %210 = load float, float* %209, align 4
  %211 = fsub float %210, %105
  %212 = fmul float %118, %211
  %213 = fptoui float %212 to i8
  %214 = getelementptr inbounds i8, i8* %202, i64 %208
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %208, 1
  %216 = load i32, i32* %108, align 8
  %217 = zext i32 %216 to i64
  %218 = icmp ult i64 %215, %217
  br i1 %218, label %207, label %219

219:                                              ; preds = %207
  %220 = load i32, i32* %5, align 4
  br label %221

221:                                              ; preds = %219, %184
  %222 = phi i32 [ %220, %219 ], [ %185, %184 ]
  %223 = phi i32 [ %216, %219 ], [ 0, %184 ]
  %224 = add nuw nsw i64 %187, 1
  %225 = zext i32 %222 to i64
  %226 = icmp ult i64 %224, %225
  br i1 %226, label %184, label %227

227:                                              ; preds = %221
  %228 = icmp eq i32 %222, 0
  br i1 %228, label %275, label %229

229:                                              ; preds = %227
  %230 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %231 = load i32, i32* %108, align 8
  br label %232

232:                                              ; preds = %269, %229
  %233 = phi i32 [ %222, %229 ], [ %270, %269 ]
  %234 = phi i32 [ %231, %229 ], [ %271, %269 ]
  %235 = phi i64 [ 0, %229 ], [ %272, %269 ]
  %236 = load i8*, i8** %115, align 8
  %237 = load i64, i64* %116, align 8
  %238 = mul i64 %237, %235
  %239 = getelementptr inbounds i8, i8* %236, i64 %238
  %240 = ptrtoint i8* %239 to i64
  %241 = and i64 %240, 63
  %242 = icmp eq i64 %241, 0
  call void @llvm.assume(i1 %242) #9
  %243 = bitcast i8* %239 to float*
  %244 = load i64, i64* %117, align 8
  %245 = mul i64 %244, %235
  %246 = load i8*, i8** %230, align 8
  %247 = ptrtoint i8* %246 to i64
  %248 = and i64 %247, 63
  %249 = icmp eq i64 %248, 0
  call void @llvm.assume(i1 %249) #9
  %250 = getelementptr inbounds i8, i8* %246, i64 %245
  %251 = ptrtoint i8* %250 to i64
  %252 = and i64 %251, 63
  %253 = icmp eq i64 %252, 0
  call void @llvm.assume(i1 %253) #9
  %254 = icmp eq i32 %234, 0
  br i1 %254, label %269, label %255

255:                                              ; preds = %232, %255
  %256 = phi i64 [ %263, %255 ], [ 0, %232 ]
  %257 = getelementptr inbounds float, float* %243, i64 %256
  %258 = load float, float* %257, align 4
  %259 = fsub float %258, %105
  %260 = fmul float %118, %259
  %261 = fptoui float %260 to i8
  %262 = getelementptr inbounds i8, i8* %250, i64 %256
  store i8 %261, i8* %262, align 1
  %263 = add nuw nsw i64 %256, 1
  %264 = load i32, i32* %108, align 8
  %265 = zext i32 %264 to i64
  %266 = icmp ult i64 %263, %265
  br i1 %266, label %255, label %267

267:                                              ; preds = %255
  %268 = load i32, i32* %5, align 4
  br label %269

269:                                              ; preds = %267, %232
  %270 = phi i32 [ %268, %267 ], [ %233, %232 ]
  %271 = phi i32 [ %264, %267 ], [ 0, %232 ]
  %272 = add nuw nsw i64 %235, 1
  %273 = zext i32 %270 to i64
  %274 = icmp ult i64 %272, %273
  br i1 %274, label %232, label %275

275:                                              ; preds = %269, %102, %136, %227
  call void @_ZNK3jxl6AuxOut9DumpImageIhEEvPKcRKNS_6Image3IT_EE(%"struct.jxl::AuxOut"* %0, i8* %1, %"class.jxl::Image3.413"* nonnull dereferenceable(96) %4)
  %276 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %4, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  store i8* null, i8** %276, align 8
  %278 = icmp eq i8* %277, null
  br i1 %278, label %122, label %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.286"* @_ZNSt3__16vectorINS_4pairIjjEENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector.284"*, %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.286"* %2 to i64
  %6 = ptrtoint %"struct.std::__1::pair.286"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"struct.std::__1::pair.286"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %872

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.std::__1::pair.286"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %16, align 8
  %18 = ptrtoint %"struct.std::__1::pair.286"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.std::__1::pair.286"** %16 to i64*
  br i1 %21, label %459, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %212

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %25
  %29 = icmp eq %"struct.std::__1::pair.286"* %28, %3
  br i1 %29, label %207, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %3, i64 %31, i32 0
  %33 = ptrtoint i32* %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp ult i64 %36, 4
  br i1 %37, label %133, label %38

38:                                               ; preds = %30
  %39 = xor i64 %25, -1
  %40 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %3, i64 %39, i32 0
  %41 = ptrtoint i32* %40 to i64
  %42 = sub i64 %41, %5
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %44
  %46 = add nsw i64 %25, %43
  %47 = add nsw i64 %46, 1
  %48 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %47
  %49 = icmp ult %"struct.std::__1::pair.286"* %17, %48
  %50 = icmp ult %"struct.std::__1::pair.286"* %28, %45
  %51 = and i1 %49, %50
  br i1 %51, label %133, label %52

52:                                               ; preds = %38
  %53 = and i64 %36, 4611686018427387900
  %54 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %53
  %55 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 %53
  %56 = add nsw i64 %53, -4
  %57 = lshr exact i64 %56, 2
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 12
  br i1 %60, label %112, label %61

61:                                               ; preds = %52
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %64
  %67 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 %64
  %68 = bitcast %"struct.std::__1::pair.286"* %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 4, !alias.scope !38
  %70 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %67, i64 2
  %71 = bitcast %"struct.std::__1::pair.286"* %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 4, !alias.scope !38
  %73 = bitcast %"struct.std::__1::pair.286"* %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 4, !alias.scope !41, !noalias !38
  %74 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %66, i64 2
  %75 = bitcast %"struct.std::__1::pair.286"* %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 4, !alias.scope !41, !noalias !38
  %76 = or i64 %64, 4
  %77 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %76
  %78 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 %76
  %79 = bitcast %"struct.std::__1::pair.286"* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 4, !alias.scope !38
  %81 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %78, i64 2
  %82 = bitcast %"struct.std::__1::pair.286"* %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 4, !alias.scope !38
  %84 = bitcast %"struct.std::__1::pair.286"* %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 4, !alias.scope !41, !noalias !38
  %85 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %77, i64 2
  %86 = bitcast %"struct.std::__1::pair.286"* %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 4, !alias.scope !41, !noalias !38
  %87 = or i64 %64, 8
  %88 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %87
  %89 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 %87
  %90 = bitcast %"struct.std::__1::pair.286"* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 4, !alias.scope !38
  %92 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %89, i64 2
  %93 = bitcast %"struct.std::__1::pair.286"* %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 4, !alias.scope !38
  %95 = bitcast %"struct.std::__1::pair.286"* %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 4, !alias.scope !41, !noalias !38
  %96 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %88, i64 2
  %97 = bitcast %"struct.std::__1::pair.286"* %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 4, !alias.scope !41, !noalias !38
  %98 = or i64 %64, 12
  %99 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %98
  %100 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 %98
  %101 = bitcast %"struct.std::__1::pair.286"* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 4, !alias.scope !38
  %103 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %100, i64 2
  %104 = bitcast %"struct.std::__1::pair.286"* %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 4, !alias.scope !38
  %106 = bitcast %"struct.std::__1::pair.286"* %99 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 4, !alias.scope !41, !noalias !38
  %107 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %99, i64 2
  %108 = bitcast %"struct.std::__1::pair.286"* %107 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %108, align 4, !alias.scope !41, !noalias !38
  %109 = add i64 %64, 16
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !43

112:                                              ; preds = %63, %52
  %113 = phi i64 [ 0, %52 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %116
  %119 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 %116
  %120 = bitcast %"struct.std::__1::pair.286"* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 4, !alias.scope !38
  %122 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %119, i64 2
  %123 = bitcast %"struct.std::__1::pair.286"* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 4, !alias.scope !38
  %125 = bitcast %"struct.std::__1::pair.286"* %118 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 4, !alias.scope !41, !noalias !38
  %126 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %118, i64 2
  %127 = bitcast %"struct.std::__1::pair.286"* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 4, !alias.scope !41, !noalias !38
  %128 = add i64 %116, 4
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !44

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %36, %53
  br i1 %132, label %204, label %133

133:                                              ; preds = %131, %38, %30
  %134 = phi %"struct.std::__1::pair.286"* [ %17, %38 ], [ %17, %30 ], [ %54, %131 ]
  %135 = phi %"struct.std::__1::pair.286"* [ %28, %38 ], [ %28, %30 ], [ %55, %131 ]
  %136 = ptrtoint %"struct.std::__1::pair.286"* %135 to i64
  %137 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %3, i64 -1, i32 0
  %138 = ptrtoint i32* %137 to i64
  %139 = sub i64 %138, %136
  %140 = lshr i64 %139, 3
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %133, %144
  %145 = phi %"struct.std::__1::pair.286"* [ %152, %144 ], [ %134, %133 ]
  %146 = phi %"struct.std::__1::pair.286"* [ %151, %144 ], [ %135, %133 ]
  %147 = phi i64 [ %153, %144 ], [ %142, %133 ]
  %148 = bitcast %"struct.std::__1::pair.286"* %145 to i64*
  %149 = bitcast %"struct.std::__1::pair.286"* %146 to i64*
  %150 = load i64, i64* %149, align 4
  store i64 %150, i64* %148, align 4
  %151 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %146, i64 1
  %152 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %145, i64 1
  %153 = add i64 %147, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !45

155:                                              ; preds = %144, %133
  %156 = phi %"struct.std::__1::pair.286"* [ undef, %133 ], [ %152, %144 ]
  %157 = phi %"struct.std::__1::pair.286"* [ %134, %133 ], [ %152, %144 ]
  %158 = phi %"struct.std::__1::pair.286"* [ %135, %133 ], [ %151, %144 ]
  %159 = icmp ult i64 %139, 56
  br i1 %159, label %204, label %160

160:                                              ; preds = %155, %160
  %161 = phi %"struct.std::__1::pair.286"* [ %202, %160 ], [ %157, %155 ]
  %162 = phi %"struct.std::__1::pair.286"* [ %201, %160 ], [ %158, %155 ]
  %163 = bitcast %"struct.std::__1::pair.286"* %161 to i64*
  %164 = bitcast %"struct.std::__1::pair.286"* %162 to i64*
  %165 = load i64, i64* %164, align 4
  store i64 %165, i64* %163, align 4
  %166 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 1
  %167 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 1
  %168 = bitcast %"struct.std::__1::pair.286"* %167 to i64*
  %169 = bitcast %"struct.std::__1::pair.286"* %166 to i64*
  %170 = load i64, i64* %169, align 4
  store i64 %170, i64* %168, align 4
  %171 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 2
  %172 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 2
  %173 = bitcast %"struct.std::__1::pair.286"* %172 to i64*
  %174 = bitcast %"struct.std::__1::pair.286"* %171 to i64*
  %175 = load i64, i64* %174, align 4
  store i64 %175, i64* %173, align 4
  %176 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 3
  %177 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 3
  %178 = bitcast %"struct.std::__1::pair.286"* %177 to i64*
  %179 = bitcast %"struct.std::__1::pair.286"* %176 to i64*
  %180 = load i64, i64* %179, align 4
  store i64 %180, i64* %178, align 4
  %181 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 4
  %182 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 4
  %183 = bitcast %"struct.std::__1::pair.286"* %182 to i64*
  %184 = bitcast %"struct.std::__1::pair.286"* %181 to i64*
  %185 = load i64, i64* %184, align 4
  store i64 %185, i64* %183, align 4
  %186 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 5
  %187 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 5
  %188 = bitcast %"struct.std::__1::pair.286"* %187 to i64*
  %189 = bitcast %"struct.std::__1::pair.286"* %186 to i64*
  %190 = load i64, i64* %189, align 4
  store i64 %190, i64* %188, align 4
  %191 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 6
  %192 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 6
  %193 = bitcast %"struct.std::__1::pair.286"* %192 to i64*
  %194 = bitcast %"struct.std::__1::pair.286"* %191 to i64*
  %195 = load i64, i64* %194, align 4
  store i64 %195, i64* %193, align 4
  %196 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 7
  %197 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 7
  %198 = bitcast %"struct.std::__1::pair.286"* %197 to i64*
  %199 = bitcast %"struct.std::__1::pair.286"* %196 to i64*
  %200 = load i64, i64* %199, align 4
  store i64 %200, i64* %198, align 4
  %201 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %162, i64 8
  %202 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %161, i64 8
  %203 = icmp eq %"struct.std::__1::pair.286"* %201, %3
  br i1 %203, label %204, label %160, !llvm.loop !46

204:                                              ; preds = %155, %160, %131
  %205 = phi %"struct.std::__1::pair.286"* [ %54, %131 ], [ %156, %155 ], [ %202, %160 ]
  %206 = ptrtoint %"struct.std::__1::pair.286"* %205 to i64
  br label %207

207:                                              ; preds = %204, %27
  %208 = phi i64 [ %18, %27 ], [ %206, %204 ]
  store i64 %208, i64* %22, align 8
  %209 = icmp sgt i64 %24, 0
  br i1 %209, label %210, label %872

210:                                              ; preds = %207
  %211 = inttoptr i64 %208 to %"struct.std::__1::pair.286"*
  br label %212

212:                                              ; preds = %210, %23
  %213 = phi i64 [ %208, %210 ], [ %18, %23 ]
  %214 = phi %"struct.std::__1::pair.286"* [ %211, %210 ], [ %17, %23 ]
  %215 = phi %"struct.std::__1::pair.286"* [ %28, %210 ], [ %3, %23 ]
  %216 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %10
  %217 = ptrtoint %"struct.std::__1::pair.286"* %216 to i64
  %218 = sub i64 %213, %217
  %219 = ashr exact i64 %218, 3
  %220 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %219
  %221 = icmp ult %"struct.std::__1::pair.286"* %220, %17
  br i1 %221, label %222, label %335

222:                                              ; preds = %212
  %223 = sub nsw i64 0, %219
  %224 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %223, i32 0
  %225 = bitcast i32* %224 to i8*
  %226 = xor i64 %6, -1
  %227 = getelementptr i8, i8* %225, i64 %226
  %228 = ptrtoint i8* %227 to i64
  %229 = lshr i64 %228, 3
  %230 = add nuw nsw i64 %229, 1
  %231 = icmp ult i64 %230, 4
  br i1 %231, label %232, label %235

232:                                              ; preds = %330, %235, %222
  %233 = phi %"struct.std::__1::pair.286"* [ %214, %235 ], [ %214, %222 ], [ %253, %330 ]
  %234 = phi %"struct.std::__1::pair.286"* [ %220, %235 ], [ %220, %222 ], [ %254, %330 ]
  br label %392

235:                                              ; preds = %222
  %236 = sub nsw i64 0, %219
  %237 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %17, i64 %236, i32 0
  %238 = bitcast i32* %237 to i8*
  %239 = xor i64 %6, -1
  %240 = getelementptr i8, i8* %238, i64 %239
  %241 = ptrtoint i8* %240 to i64
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %214, i64 %243
  %245 = add nsw i64 %219, %242
  %246 = add nsw i64 %245, 1
  %247 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %246
  %248 = icmp ult %"struct.std::__1::pair.286"* %214, %247
  %249 = icmp ult %"struct.std::__1::pair.286"* %220, %244
  %250 = and i1 %248, %249
  br i1 %250, label %232, label %251

251:                                              ; preds = %235
  %252 = and i64 %230, 4611686018427387900
  %253 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %214, i64 %252
  %254 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %220, i64 %252
  %255 = add nsw i64 %252, -4
  %256 = lshr exact i64 %255, 2
  %257 = add nuw nsw i64 %256, 1
  %258 = and i64 %257, 3
  %259 = icmp ult i64 %255, 12
  br i1 %259, label %311, label %260

260:                                              ; preds = %251
  %261 = sub nsw i64 %257, %258
  br label %262

262:                                              ; preds = %262, %260
  %263 = phi i64 [ 0, %260 ], [ %308, %262 ]
  %264 = phi i64 [ %261, %260 ], [ %309, %262 ]
  %265 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %214, i64 %263
  %266 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %220, i64 %263
  %267 = bitcast %"struct.std::__1::pair.286"* %266 to <2 x i64>*
  %268 = load <2 x i64>, <2 x i64>* %267, align 4, !alias.scope !47
  %269 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %266, i64 2
  %270 = bitcast %"struct.std::__1::pair.286"* %269 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 4, !alias.scope !47
  %272 = bitcast %"struct.std::__1::pair.286"* %265 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %272, align 4, !alias.scope !50, !noalias !47
  %273 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %265, i64 2
  %274 = bitcast %"struct.std::__1::pair.286"* %273 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %274, align 4, !alias.scope !50, !noalias !47
  %275 = or i64 %263, 4
  %276 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %214, i64 %275
  %277 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %220, i64 %275
  %278 = bitcast %"struct.std::__1::pair.286"* %277 to <2 x i64>*
  %279 = load <2 x i64>, <2 x i64>* %278, align 4, !alias.scope !47
  %280 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %277, i64 2
  %281 = bitcast %"struct.std::__1::pair.286"* %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 4, !alias.scope !47
  %283 = bitcast %"struct.std::__1::pair.286"* %276 to <2 x i64>*
  store <2 x i64> %279, <2 x i64>* %283, align 4, !alias.scope !50, !noalias !47
  %284 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %276, i64 2
  %285 = bitcast %"struct.std::__1::pair.286"* %284 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %285, align 4, !alias.scope !50, !noalias !47
  %286 = or i64 %263, 8
  %287 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %214, i64 %286
  %288 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %220, i64 %286
  %289 = bitcast %"struct.std::__1::pair.286"* %288 to <2 x i64>*
  %290 = load <2 x i64>, <2 x i64>* %289, align 4, !alias.scope !47
  %291 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %288, i64 2
  %292 = bitcast %"struct.std::__1::pair.286"* %291 to <2 x i64>*
  %293 = load <2 x i64>, <2 x i64>* %292, align 4, !alias.scope !47
  %294 = bitcast %"struct.std::__1::pair.286"* %287 to <2 x i64>*
  store <2 x i64> %290, <2 x i64>* %294, align 4, !alias.scope !50, !noalias !47
  %295 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %287, i64 2
  %296 = bitcast %"struct.std::__1::pair.286"* %295 to <2 x i64>*
  store <2 x i64> %293, <2 x i64>* %296, align 4, !alias.scope !50, !noalias !47
  %297 = or i64 %263, 12
  %298 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %214, i64 %297
  %299 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %220, i64 %297
  %300 = bitcast %"struct.std::__1::pair.286"* %299 to <2 x i64>*
  %301 = load <2 x i64>, <2 x i64>* %300, align 4, !alias.scope !47
  %302 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %299, i64 2
  %303 = bitcast %"struct.std::__1::pair.286"* %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 4, !alias.scope !47
  %305 = bitcast %"struct.std::__1::pair.286"* %298 to <2 x i64>*
  store <2 x i64> %301, <2 x i64>* %305, align 4, !alias.scope !50, !noalias !47
  %306 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %298, i64 2
  %307 = bitcast %"struct.std::__1::pair.286"* %306 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %307, align 4, !alias.scope !50, !noalias !47
  %308 = add i64 %263, 16
  %309 = add i64 %264, -4
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %262, !llvm.loop !52

311:                                              ; preds = %262, %251
  %312 = phi i64 [ 0, %251 ], [ %308, %262 ]
  %313 = icmp eq i64 %258, 0
  br i1 %313, label %330, label %314

314:                                              ; preds = %311, %314
  %315 = phi i64 [ %327, %314 ], [ %312, %311 ]
  %316 = phi i64 [ %328, %314 ], [ %258, %311 ]
  %317 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %214, i64 %315
  %318 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %220, i64 %315
  %319 = bitcast %"struct.std::__1::pair.286"* %318 to <2 x i64>*
  %320 = load <2 x i64>, <2 x i64>* %319, align 4, !alias.scope !47
  %321 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %318, i64 2
  %322 = bitcast %"struct.std::__1::pair.286"* %321 to <2 x i64>*
  %323 = load <2 x i64>, <2 x i64>* %322, align 4, !alias.scope !47
  %324 = bitcast %"struct.std::__1::pair.286"* %317 to <2 x i64>*
  store <2 x i64> %320, <2 x i64>* %324, align 4, !alias.scope !50, !noalias !47
  %325 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %317, i64 2
  %326 = bitcast %"struct.std::__1::pair.286"* %325 to <2 x i64>*
  store <2 x i64> %323, <2 x i64>* %326, align 4, !alias.scope !50, !noalias !47
  %327 = add i64 %315, 4
  %328 = add i64 %316, -1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %314, !llvm.loop !53

330:                                              ; preds = %314, %311
  %331 = icmp eq i64 %230, %252
  br i1 %331, label %332, label %232

332:                                              ; preds = %392, %330
  %333 = phi %"struct.std::__1::pair.286"* [ %253, %330 ], [ %399, %392 ]
  %334 = ptrtoint %"struct.std::__1::pair.286"* %333 to i64
  br label %335

335:                                              ; preds = %332, %212
  %336 = phi i64 [ %334, %332 ], [ %213, %212 ]
  store i64 %336, i64* %22, align 8
  %337 = icmp eq i64 %218, 0
  br i1 %337, label %401, label %338

338:                                              ; preds = %335
  %339 = add i64 %218, -8
  %340 = lshr i64 %339, 3
  %341 = add nuw nsw i64 %340, 1
  %342 = and i64 %341, 3
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %358, label %344

344:                                              ; preds = %338, %344
  %345 = phi %"struct.std::__1::pair.286"* [ %349, %344 ], [ %214, %338 ]
  %346 = phi %"struct.std::__1::pair.286"* [ %348, %344 ], [ %220, %338 ]
  %347 = phi i64 [ %356, %344 ], [ %342, %338 ]
  %348 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %346, i64 -1
  %349 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %345, i64 -1
  %350 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %348, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %349, i64 0, i32 0
  store i32 %351, i32* %352, align 4
  %353 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %346, i64 -1, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %345, i64 -1, i32 1
  store i32 %354, i32* %355, align 4
  %356 = add i64 %347, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %344, !llvm.loop !54

358:                                              ; preds = %344, %338
  %359 = phi %"struct.std::__1::pair.286"* [ %214, %338 ], [ %349, %344 ]
  %360 = phi %"struct.std::__1::pair.286"* [ %220, %338 ], [ %348, %344 ]
  %361 = icmp ult i64 %339, 24
  br i1 %361, label %401, label %362

362:                                              ; preds = %358, %362
  %363 = phi %"struct.std::__1::pair.286"* [ %384, %362 ], [ %359, %358 ]
  %364 = phi %"struct.std::__1::pair.286"* [ %383, %362 ], [ %360, %358 ]
  %365 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -1, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -1, i32 0
  store i32 %366, i32* %367, align 4
  %368 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -1, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -1, i32 1
  store i32 %369, i32* %370, align 4
  %371 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -2, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -2, i32 0
  store i32 %372, i32* %373, align 4
  %374 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -2, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -2, i32 1
  store i32 %375, i32* %376, align 4
  %377 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -3, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -3, i32 0
  store i32 %378, i32* %379, align 4
  %380 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -3, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -3, i32 1
  store i32 %381, i32* %382, align 4
  %383 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -4
  %384 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -4
  %385 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %383, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  %387 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %384, i64 0, i32 0
  store i32 %386, i32* %387, align 4
  %388 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %364, i64 -4, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %363, i64 -4, i32 1
  store i32 %389, i32* %390, align 4
  %391 = icmp eq %"struct.std::__1::pair.286"* %383, %1
  br i1 %391, label %401, label %362

392:                                              ; preds = %232, %392
  %393 = phi %"struct.std::__1::pair.286"* [ %399, %392 ], [ %233, %232 ]
  %394 = phi %"struct.std::__1::pair.286"* [ %398, %392 ], [ %234, %232 ]
  %395 = bitcast %"struct.std::__1::pair.286"* %394 to i64*
  %396 = bitcast %"struct.std::__1::pair.286"* %393 to i64*
  %397 = load i64, i64* %395, align 4
  store i64 %397, i64* %396, align 4
  %398 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %394, i64 1
  %399 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %393, i64 1
  %400 = icmp ult %"struct.std::__1::pair.286"* %398, %17
  br i1 %400, label %392, label %332, !llvm.loop !55

401:                                              ; preds = %358, %362, %335
  %402 = icmp eq %"struct.std::__1::pair.286"* %215, %2
  br i1 %402, label %872, label %403

403:                                              ; preds = %401
  %404 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %215, i64 -1, i32 0
  %405 = ptrtoint i32* %404 to i64
  %406 = sub i64 %405, %5
  %407 = lshr i64 %406, 3
  %408 = add nuw nsw i64 %407, 1
  %409 = and i64 %408, 3
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %425, label %411

411:                                              ; preds = %403, %411
  %412 = phi %"struct.std::__1::pair.286"* [ %422, %411 ], [ %1, %403 ]
  %413 = phi %"struct.std::__1::pair.286"* [ %421, %411 ], [ %2, %403 ]
  %414 = phi i64 [ %423, %411 ], [ %409, %403 ]
  %415 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %413, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %412, i64 0, i32 0
  store i32 %416, i32* %417, align 4
  %418 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %413, i64 0, i32 1
  %419 = load i32, i32* %418, align 4
  %420 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %412, i64 0, i32 1
  store i32 %419, i32* %420, align 4
  %421 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %413, i64 1
  %422 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %412, i64 1
  %423 = add i64 %414, -1
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %425, label %411, !llvm.loop !56

425:                                              ; preds = %411, %403
  %426 = phi %"struct.std::__1::pair.286"* [ %1, %403 ], [ %422, %411 ]
  %427 = phi %"struct.std::__1::pair.286"* [ %2, %403 ], [ %421, %411 ]
  %428 = icmp ult i64 %406, 24
  br i1 %428, label %872, label %429

429:                                              ; preds = %425, %429
  %430 = phi %"struct.std::__1::pair.286"* [ %457, %429 ], [ %426, %425 ]
  %431 = phi %"struct.std::__1::pair.286"* [ %456, %429 ], [ %427, %425 ]
  %432 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 0, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 0, i32 0
  store i32 %433, i32* %434, align 4
  %435 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 0, i32 1
  store i32 %436, i32* %437, align 4
  %438 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 1, i32 0
  %439 = load i32, i32* %438, align 4
  %440 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 1, i32 0
  store i32 %439, i32* %440, align 4
  %441 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 1, i32 1
  %442 = load i32, i32* %441, align 4
  %443 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 1, i32 1
  store i32 %442, i32* %443, align 4
  %444 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 2, i32 0
  %445 = load i32, i32* %444, align 4
  %446 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 2, i32 0
  store i32 %445, i32* %446, align 4
  %447 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 2, i32 1
  %448 = load i32, i32* %447, align 4
  %449 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 2, i32 1
  store i32 %448, i32* %449, align 4
  %450 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 3, i32 0
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 3, i32 0
  store i32 %451, i32* %452, align 4
  %453 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 3, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 3, i32 1
  store i32 %454, i32* %455, align 4
  %456 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %431, i64 4
  %457 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %430, i64 4
  %458 = icmp eq %"struct.std::__1::pair.286"* %456, %215
  br i1 %458, label %872, label %429

459:                                              ; preds = %12
  %460 = bitcast %"class.std::__1::vector.284"* %0 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = sub i64 %18, %461
  %463 = ashr exact i64 %462, 3
  %464 = add nsw i64 %463, %10
  %465 = icmp ugt i64 %464, 2305843009213693951
  br i1 %465, label %466, label %468

466:                                              ; preds = %459
  %467 = bitcast %"class.std::__1::vector.284"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %467) #18
  unreachable

468:                                              ; preds = %459
  %469 = sub i64 %15, %461
  %470 = ashr exact i64 %469, 3
  %471 = icmp ult i64 %470, 1152921504606846975
  br i1 %471, label %475, label %472

472:                                              ; preds = %468
  %473 = sub i64 %6, %461
  %474 = ashr exact i64 %473, 3
  br label %485

475:                                              ; preds = %468
  %476 = ashr exact i64 %469, 2
  %477 = icmp ult i64 %476, %464
  %478 = select i1 %477, i64 %464, i64 %476
  %479 = sub i64 %6, %461
  %480 = ashr exact i64 %479, 3
  %481 = icmp eq i64 %478, 0
  br i1 %481, label %491, label %482

482:                                              ; preds = %475
  %483 = icmp ugt i64 %478, 2305843009213693951
  br i1 %483, label %484, label %485

484:                                              ; preds = %482
  tail call void @abort() #18
  unreachable

485:                                              ; preds = %472, %482
  %486 = phi i64 [ 2305843009213693951, %472 ], [ %478, %482 ]
  %487 = phi i64 [ %474, %472 ], [ %480, %482 ]
  %488 = shl i64 %486, 3
  %489 = tail call i8* @_Znwm(i64 %488) #19
  %490 = bitcast i8* %489 to %"struct.std::__1::pair.286"*
  br label %491

491:                                              ; preds = %485, %475
  %492 = phi i64 [ %487, %485 ], [ %480, %475 ]
  %493 = phi i64 [ %486, %485 ], [ 0, %475 ]
  %494 = phi %"struct.std::__1::pair.286"* [ %490, %485 ], [ null, %475 ]
  %495 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %494, i64 %492
  %496 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %494, i64 %493
  %497 = ptrtoint %"struct.std::__1::pair.286"* %496 to i64
  %498 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %10
  %499 = add i64 %9, -8
  %500 = lshr i64 %499, 3
  %501 = add nuw nsw i64 %500, 1
  %502 = icmp ult i64 %501, 4
  br i1 %502, label %596, label %503

503:                                              ; preds = %491
  %504 = add i64 %9, -8
  %505 = lshr i64 %504, 3
  %506 = add nsw i64 %492, %505
  %507 = add nsw i64 %506, 1
  %508 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %494, i64 %507
  %509 = add nuw nsw i64 %505, 1
  %510 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %509
  %511 = icmp ult %"struct.std::__1::pair.286"* %495, %510
  %512 = icmp ugt %"struct.std::__1::pair.286"* %508, %2
  %513 = and i1 %511, %512
  br i1 %513, label %596, label %514

514:                                              ; preds = %503
  %515 = and i64 %501, 4611686018427387900
  %516 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %515
  %517 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %515
  %518 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %515
  %519 = add nsw i64 %515, -4
  %520 = lshr exact i64 %519, 2
  %521 = add nuw nsw i64 %520, 1
  %522 = and i64 %521, 3
  %523 = icmp ult i64 %519, 12
  br i1 %523, label %575, label %524

524:                                              ; preds = %514
  %525 = sub nsw i64 %521, %522
  br label %526

526:                                              ; preds = %526, %524
  %527 = phi i64 [ 0, %524 ], [ %572, %526 ]
  %528 = phi i64 [ %525, %524 ], [ %573, %526 ]
  %529 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %527
  %530 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %527
  %531 = bitcast %"struct.std::__1::pair.286"* %530 to <2 x i64>*
  %532 = load <2 x i64>, <2 x i64>* %531, align 4, !alias.scope !57
  %533 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %530, i64 2
  %534 = bitcast %"struct.std::__1::pair.286"* %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 4, !alias.scope !57
  %536 = bitcast %"struct.std::__1::pair.286"* %529 to <2 x i64>*
  store <2 x i64> %532, <2 x i64>* %536, align 4, !alias.scope !60, !noalias !57
  %537 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %529, i64 2
  %538 = bitcast %"struct.std::__1::pair.286"* %537 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %538, align 4, !alias.scope !60, !noalias !57
  %539 = or i64 %527, 4
  %540 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %539
  %541 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %539
  %542 = bitcast %"struct.std::__1::pair.286"* %541 to <2 x i64>*
  %543 = load <2 x i64>, <2 x i64>* %542, align 4, !alias.scope !57
  %544 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %541, i64 2
  %545 = bitcast %"struct.std::__1::pair.286"* %544 to <2 x i64>*
  %546 = load <2 x i64>, <2 x i64>* %545, align 4, !alias.scope !57
  %547 = bitcast %"struct.std::__1::pair.286"* %540 to <2 x i64>*
  store <2 x i64> %543, <2 x i64>* %547, align 4, !alias.scope !60, !noalias !57
  %548 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %540, i64 2
  %549 = bitcast %"struct.std::__1::pair.286"* %548 to <2 x i64>*
  store <2 x i64> %546, <2 x i64>* %549, align 4, !alias.scope !60, !noalias !57
  %550 = or i64 %527, 8
  %551 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %550
  %552 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %550
  %553 = bitcast %"struct.std::__1::pair.286"* %552 to <2 x i64>*
  %554 = load <2 x i64>, <2 x i64>* %553, align 4, !alias.scope !57
  %555 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %552, i64 2
  %556 = bitcast %"struct.std::__1::pair.286"* %555 to <2 x i64>*
  %557 = load <2 x i64>, <2 x i64>* %556, align 4, !alias.scope !57
  %558 = bitcast %"struct.std::__1::pair.286"* %551 to <2 x i64>*
  store <2 x i64> %554, <2 x i64>* %558, align 4, !alias.scope !60, !noalias !57
  %559 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %551, i64 2
  %560 = bitcast %"struct.std::__1::pair.286"* %559 to <2 x i64>*
  store <2 x i64> %557, <2 x i64>* %560, align 4, !alias.scope !60, !noalias !57
  %561 = or i64 %527, 12
  %562 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %561
  %563 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %561
  %564 = bitcast %"struct.std::__1::pair.286"* %563 to <2 x i64>*
  %565 = load <2 x i64>, <2 x i64>* %564, align 4, !alias.scope !57
  %566 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %563, i64 2
  %567 = bitcast %"struct.std::__1::pair.286"* %566 to <2 x i64>*
  %568 = load <2 x i64>, <2 x i64>* %567, align 4, !alias.scope !57
  %569 = bitcast %"struct.std::__1::pair.286"* %562 to <2 x i64>*
  store <2 x i64> %565, <2 x i64>* %569, align 4, !alias.scope !60, !noalias !57
  %570 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %562, i64 2
  %571 = bitcast %"struct.std::__1::pair.286"* %570 to <2 x i64>*
  store <2 x i64> %568, <2 x i64>* %571, align 4, !alias.scope !60, !noalias !57
  %572 = add i64 %527, 16
  %573 = add i64 %528, -4
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %575, label %526, !llvm.loop !62

575:                                              ; preds = %526, %514
  %576 = phi i64 [ 0, %514 ], [ %572, %526 ]
  %577 = icmp eq i64 %522, 0
  br i1 %577, label %594, label %578

578:                                              ; preds = %575, %578
  %579 = phi i64 [ %591, %578 ], [ %576, %575 ]
  %580 = phi i64 [ %592, %578 ], [ %522, %575 ]
  %581 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %579
  %582 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %2, i64 %579
  %583 = bitcast %"struct.std::__1::pair.286"* %582 to <2 x i64>*
  %584 = load <2 x i64>, <2 x i64>* %583, align 4, !alias.scope !57
  %585 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %582, i64 2
  %586 = bitcast %"struct.std::__1::pair.286"* %585 to <2 x i64>*
  %587 = load <2 x i64>, <2 x i64>* %586, align 4, !alias.scope !57
  %588 = bitcast %"struct.std::__1::pair.286"* %581 to <2 x i64>*
  store <2 x i64> %584, <2 x i64>* %588, align 4, !alias.scope !60, !noalias !57
  %589 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %581, i64 2
  %590 = bitcast %"struct.std::__1::pair.286"* %589 to <2 x i64>*
  store <2 x i64> %587, <2 x i64>* %590, align 4, !alias.scope !60, !noalias !57
  %591 = add i64 %579, 4
  %592 = add i64 %580, -1
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %594, label %578, !llvm.loop !63

594:                                              ; preds = %578, %575
  %595 = icmp eq i64 %501, %515
  br i1 %595, label %672, label %596

596:                                              ; preds = %594, %503, %491
  %597 = phi %"struct.std::__1::pair.286"* [ %495, %503 ], [ %495, %491 ], [ %516, %594 ]
  %598 = phi %"struct.std::__1::pair.286"* [ %495, %503 ], [ %495, %491 ], [ %517, %594 ]
  %599 = phi %"struct.std::__1::pair.286"* [ %2, %503 ], [ %2, %491 ], [ %518, %594 ]
  %600 = ptrtoint %"struct.std::__1::pair.286"* %597 to i64
  %601 = add nsw i64 %492, %10
  %602 = add nsw i64 %601, -1
  %603 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %494, i64 %602, i32 0
  %604 = ptrtoint i32* %603 to i64
  %605 = sub i64 %604, %600
  %606 = lshr i64 %605, 3
  %607 = add nuw nsw i64 %606, 1
  %608 = and i64 %607, 7
  %609 = icmp eq i64 %608, 0
  br i1 %609, label %622, label %610

610:                                              ; preds = %596, %610
  %611 = phi %"struct.std::__1::pair.286"* [ %618, %610 ], [ %597, %596 ]
  %612 = phi %"struct.std::__1::pair.286"* [ %618, %610 ], [ %598, %596 ]
  %613 = phi %"struct.std::__1::pair.286"* [ %619, %610 ], [ %599, %596 ]
  %614 = phi i64 [ %620, %610 ], [ %608, %596 ]
  %615 = bitcast %"struct.std::__1::pair.286"* %613 to i64*
  %616 = bitcast %"struct.std::__1::pair.286"* %612 to i64*
  %617 = load i64, i64* %615, align 4
  store i64 %617, i64* %616, align 4
  %618 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %611, i64 1
  %619 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %613, i64 1
  %620 = add i64 %614, -1
  %621 = icmp eq i64 %620, 0
  br i1 %621, label %622, label %610, !llvm.loop !64

622:                                              ; preds = %610, %596
  %623 = phi %"struct.std::__1::pair.286"* [ %597, %596 ], [ %618, %610 ]
  %624 = phi %"struct.std::__1::pair.286"* [ %598, %596 ], [ %618, %610 ]
  %625 = phi %"struct.std::__1::pair.286"* [ %599, %596 ], [ %619, %610 ]
  %626 = icmp ult i64 %605, 56
  br i1 %626, label %672, label %627

627:                                              ; preds = %622, %627
  %628 = phi %"struct.std::__1::pair.286"* [ %669, %627 ], [ %623, %622 ]
  %629 = phi %"struct.std::__1::pair.286"* [ %669, %627 ], [ %624, %622 ]
  %630 = phi %"struct.std::__1::pair.286"* [ %670, %627 ], [ %625, %622 ]
  %631 = bitcast %"struct.std::__1::pair.286"* %630 to i64*
  %632 = bitcast %"struct.std::__1::pair.286"* %629 to i64*
  %633 = load i64, i64* %631, align 4
  store i64 %633, i64* %632, align 4
  %634 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 1
  %635 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 1
  %636 = bitcast %"struct.std::__1::pair.286"* %635 to i64*
  %637 = bitcast %"struct.std::__1::pair.286"* %634 to i64*
  %638 = load i64, i64* %636, align 4
  store i64 %638, i64* %637, align 4
  %639 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 2
  %640 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 2
  %641 = bitcast %"struct.std::__1::pair.286"* %640 to i64*
  %642 = bitcast %"struct.std::__1::pair.286"* %639 to i64*
  %643 = load i64, i64* %641, align 4
  store i64 %643, i64* %642, align 4
  %644 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 3
  %645 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 3
  %646 = bitcast %"struct.std::__1::pair.286"* %645 to i64*
  %647 = bitcast %"struct.std::__1::pair.286"* %644 to i64*
  %648 = load i64, i64* %646, align 4
  store i64 %648, i64* %647, align 4
  %649 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 4
  %650 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 4
  %651 = bitcast %"struct.std::__1::pair.286"* %650 to i64*
  %652 = bitcast %"struct.std::__1::pair.286"* %649 to i64*
  %653 = load i64, i64* %651, align 4
  store i64 %653, i64* %652, align 4
  %654 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 5
  %655 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 5
  %656 = bitcast %"struct.std::__1::pair.286"* %655 to i64*
  %657 = bitcast %"struct.std::__1::pair.286"* %654 to i64*
  %658 = load i64, i64* %656, align 4
  store i64 %658, i64* %657, align 4
  %659 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 6
  %660 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 6
  %661 = bitcast %"struct.std::__1::pair.286"* %660 to i64*
  %662 = bitcast %"struct.std::__1::pair.286"* %659 to i64*
  %663 = load i64, i64* %661, align 4
  store i64 %663, i64* %662, align 4
  %664 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 7
  %665 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 7
  %666 = bitcast %"struct.std::__1::pair.286"* %665 to i64*
  %667 = bitcast %"struct.std::__1::pair.286"* %664 to i64*
  %668 = load i64, i64* %666, align 4
  store i64 %668, i64* %667, align 4
  %669 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %628, i64 8
  %670 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %630, i64 8
  %671 = icmp eq %"struct.std::__1::pair.286"* %498, %669
  br i1 %671, label %672, label %627, !llvm.loop !65

672:                                              ; preds = %622, %627, %594
  %673 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %7, align 8
  %674 = ptrtoint %"struct.std::__1::pair.286"* %673 to i64
  %675 = sub i64 %6, %674
  %676 = ashr exact i64 %675, 3
  %677 = sub nsw i64 0, %676
  %678 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %495, i64 %677
  %679 = ptrtoint %"struct.std::__1::pair.286"* %678 to i64
  %680 = icmp sgt i64 %675, 0
  br i1 %680, label %681, label %684

681:                                              ; preds = %672
  %682 = bitcast %"struct.std::__1::pair.286"* %678 to i8*
  %683 = bitcast %"struct.std::__1::pair.286"* %673 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %682, i8* align 4 %683, i64 %675, i1 false) #9
  br label %684

684:                                              ; preds = %681, %672
  %685 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %16, align 8
  %686 = icmp eq %"struct.std::__1::pair.286"* %685, %1
  br i1 %686, label %865, label %687

687:                                              ; preds = %684
  %688 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %685, i64 -1, i32 0
  %689 = ptrtoint i32* %688 to i64
  %690 = sub i64 %689, %6
  %691 = lshr i64 %690, 3
  %692 = add nuw nsw i64 %691, 1
  %693 = icmp ult i64 %692, 4
  br i1 %693, label %790, label %694

694:                                              ; preds = %687
  %695 = add nsw i64 %492, %10
  %696 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %685, i64 -1, i32 0
  %697 = ptrtoint i32* %696 to i64
  %698 = sub i64 %697, %6
  %699 = lshr i64 %698, 3
  %700 = add nsw i64 %695, %699
  %701 = add nsw i64 %700, 1
  %702 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %494, i64 %701
  %703 = add nuw nsw i64 %699, 1
  %704 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %703
  %705 = icmp ult %"struct.std::__1::pair.286"* %498, %704
  %706 = icmp ugt %"struct.std::__1::pair.286"* %702, %1
  %707 = and i1 %705, %706
  br i1 %707, label %790, label %708

708:                                              ; preds = %694
  %709 = and i64 %692, 4611686018427387900
  %710 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %498, i64 %709
  %711 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %498, i64 %709
  %712 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %709
  %713 = add nsw i64 %709, -4
  %714 = lshr exact i64 %713, 2
  %715 = add nuw nsw i64 %714, 1
  %716 = and i64 %715, 3
  %717 = icmp ult i64 %713, 12
  br i1 %717, label %769, label %718

718:                                              ; preds = %708
  %719 = sub nsw i64 %715, %716
  br label %720

720:                                              ; preds = %720, %718
  %721 = phi i64 [ 0, %718 ], [ %766, %720 ]
  %722 = phi i64 [ %719, %718 ], [ %767, %720 ]
  %723 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %498, i64 %721
  %724 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %721
  %725 = bitcast %"struct.std::__1::pair.286"* %724 to <2 x i64>*
  %726 = load <2 x i64>, <2 x i64>* %725, align 4, !alias.scope !66
  %727 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %724, i64 2
  %728 = bitcast %"struct.std::__1::pair.286"* %727 to <2 x i64>*
  %729 = load <2 x i64>, <2 x i64>* %728, align 4, !alias.scope !66
  %730 = bitcast %"struct.std::__1::pair.286"* %723 to <2 x i64>*
  store <2 x i64> %726, <2 x i64>* %730, align 4, !alias.scope !69, !noalias !66
  %731 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %723, i64 2
  %732 = bitcast %"struct.std::__1::pair.286"* %731 to <2 x i64>*
  store <2 x i64> %729, <2 x i64>* %732, align 4, !alias.scope !69, !noalias !66
  %733 = or i64 %721, 4
  %734 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %498, i64 %733
  %735 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %733
  %736 = bitcast %"struct.std::__1::pair.286"* %735 to <2 x i64>*
  %737 = load <2 x i64>, <2 x i64>* %736, align 4, !alias.scope !66
  %738 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %735, i64 2
  %739 = bitcast %"struct.std::__1::pair.286"* %738 to <2 x i64>*
  %740 = load <2 x i64>, <2 x i64>* %739, align 4, !alias.scope !66
  %741 = bitcast %"struct.std::__1::pair.286"* %734 to <2 x i64>*
  store <2 x i64> %737, <2 x i64>* %741, align 4, !alias.scope !69, !noalias !66
  %742 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %734, i64 2
  %743 = bitcast %"struct.std::__1::pair.286"* %742 to <2 x i64>*
  store <2 x i64> %740, <2 x i64>* %743, align 4, !alias.scope !69, !noalias !66
  %744 = or i64 %721, 8
  %745 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %498, i64 %744
  %746 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %744
  %747 = bitcast %"struct.std::__1::pair.286"* %746 to <2 x i64>*
  %748 = load <2 x i64>, <2 x i64>* %747, align 4, !alias.scope !66
  %749 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %746, i64 2
  %750 = bitcast %"struct.std::__1::pair.286"* %749 to <2 x i64>*
  %751 = load <2 x i64>, <2 x i64>* %750, align 4, !alias.scope !66
  %752 = bitcast %"struct.std::__1::pair.286"* %745 to <2 x i64>*
  store <2 x i64> %748, <2 x i64>* %752, align 4, !alias.scope !69, !noalias !66
  %753 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %745, i64 2
  %754 = bitcast %"struct.std::__1::pair.286"* %753 to <2 x i64>*
  store <2 x i64> %751, <2 x i64>* %754, align 4, !alias.scope !69, !noalias !66
  %755 = or i64 %721, 12
  %756 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %498, i64 %755
  %757 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %755
  %758 = bitcast %"struct.std::__1::pair.286"* %757 to <2 x i64>*
  %759 = load <2 x i64>, <2 x i64>* %758, align 4, !alias.scope !66
  %760 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %757, i64 2
  %761 = bitcast %"struct.std::__1::pair.286"* %760 to <2 x i64>*
  %762 = load <2 x i64>, <2 x i64>* %761, align 4, !alias.scope !66
  %763 = bitcast %"struct.std::__1::pair.286"* %756 to <2 x i64>*
  store <2 x i64> %759, <2 x i64>* %763, align 4, !alias.scope !69, !noalias !66
  %764 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %756, i64 2
  %765 = bitcast %"struct.std::__1::pair.286"* %764 to <2 x i64>*
  store <2 x i64> %762, <2 x i64>* %765, align 4, !alias.scope !69, !noalias !66
  %766 = add i64 %721, 16
  %767 = add i64 %722, -4
  %768 = icmp eq i64 %767, 0
  br i1 %768, label %769, label %720, !llvm.loop !71

769:                                              ; preds = %720, %708
  %770 = phi i64 [ 0, %708 ], [ %766, %720 ]
  %771 = icmp eq i64 %716, 0
  br i1 %771, label %788, label %772

772:                                              ; preds = %769, %772
  %773 = phi i64 [ %785, %772 ], [ %770, %769 ]
  %774 = phi i64 [ %786, %772 ], [ %716, %769 ]
  %775 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %498, i64 %773
  %776 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %773
  %777 = bitcast %"struct.std::__1::pair.286"* %776 to <2 x i64>*
  %778 = load <2 x i64>, <2 x i64>* %777, align 4, !alias.scope !66
  %779 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %776, i64 2
  %780 = bitcast %"struct.std::__1::pair.286"* %779 to <2 x i64>*
  %781 = load <2 x i64>, <2 x i64>* %780, align 4, !alias.scope !66
  %782 = bitcast %"struct.std::__1::pair.286"* %775 to <2 x i64>*
  store <2 x i64> %778, <2 x i64>* %782, align 4, !alias.scope !69, !noalias !66
  %783 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %775, i64 2
  %784 = bitcast %"struct.std::__1::pair.286"* %783 to <2 x i64>*
  store <2 x i64> %781, <2 x i64>* %784, align 4, !alias.scope !69, !noalias !66
  %785 = add i64 %773, 4
  %786 = add i64 %774, -1
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %788, label %772, !llvm.loop !72

788:                                              ; preds = %772, %769
  %789 = icmp eq i64 %692, %709
  br i1 %789, label %865, label %790

790:                                              ; preds = %788, %694, %687
  %791 = phi %"struct.std::__1::pair.286"* [ %498, %694 ], [ %498, %687 ], [ %710, %788 ]
  %792 = phi %"struct.std::__1::pair.286"* [ %498, %694 ], [ %498, %687 ], [ %711, %788 ]
  %793 = phi %"struct.std::__1::pair.286"* [ %1, %694 ], [ %1, %687 ], [ %712, %788 ]
  %794 = ptrtoint %"struct.std::__1::pair.286"* %793 to i64
  %795 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %685, i64 -1, i32 0
  %796 = ptrtoint i32* %795 to i64
  %797 = sub i64 %796, %794
  %798 = lshr i64 %797, 3
  %799 = add nuw nsw i64 %798, 1
  %800 = and i64 %799, 7
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %814, label %802

802:                                              ; preds = %790, %802
  %803 = phi %"struct.std::__1::pair.286"* [ %811, %802 ], [ %791, %790 ]
  %804 = phi %"struct.std::__1::pair.286"* [ %811, %802 ], [ %792, %790 ]
  %805 = phi %"struct.std::__1::pair.286"* [ %810, %802 ], [ %793, %790 ]
  %806 = phi i64 [ %812, %802 ], [ %800, %790 ]
  %807 = bitcast %"struct.std::__1::pair.286"* %804 to i64*
  %808 = bitcast %"struct.std::__1::pair.286"* %805 to i64*
  %809 = load i64, i64* %808, align 4
  store i64 %809, i64* %807, align 4
  %810 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %805, i64 1
  %811 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %803, i64 1
  %812 = add i64 %806, -1
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %814, label %802, !llvm.loop !73

814:                                              ; preds = %802, %790
  %815 = phi %"struct.std::__1::pair.286"* [ undef, %790 ], [ %811, %802 ]
  %816 = phi %"struct.std::__1::pair.286"* [ %791, %790 ], [ %811, %802 ]
  %817 = phi %"struct.std::__1::pair.286"* [ %792, %790 ], [ %811, %802 ]
  %818 = phi %"struct.std::__1::pair.286"* [ %793, %790 ], [ %810, %802 ]
  %819 = icmp ult i64 %797, 56
  br i1 %819, label %865, label %820

820:                                              ; preds = %814, %820
  %821 = phi %"struct.std::__1::pair.286"* [ %863, %820 ], [ %816, %814 ]
  %822 = phi %"struct.std::__1::pair.286"* [ %863, %820 ], [ %817, %814 ]
  %823 = phi %"struct.std::__1::pair.286"* [ %862, %820 ], [ %818, %814 ]
  %824 = bitcast %"struct.std::__1::pair.286"* %822 to i64*
  %825 = bitcast %"struct.std::__1::pair.286"* %823 to i64*
  %826 = load i64, i64* %825, align 4
  store i64 %826, i64* %824, align 4
  %827 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 1
  %828 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 1
  %829 = bitcast %"struct.std::__1::pair.286"* %828 to i64*
  %830 = bitcast %"struct.std::__1::pair.286"* %827 to i64*
  %831 = load i64, i64* %830, align 4
  store i64 %831, i64* %829, align 4
  %832 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 2
  %833 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 2
  %834 = bitcast %"struct.std::__1::pair.286"* %833 to i64*
  %835 = bitcast %"struct.std::__1::pair.286"* %832 to i64*
  %836 = load i64, i64* %835, align 4
  store i64 %836, i64* %834, align 4
  %837 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 3
  %838 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 3
  %839 = bitcast %"struct.std::__1::pair.286"* %838 to i64*
  %840 = bitcast %"struct.std::__1::pair.286"* %837 to i64*
  %841 = load i64, i64* %840, align 4
  store i64 %841, i64* %839, align 4
  %842 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 4
  %843 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 4
  %844 = bitcast %"struct.std::__1::pair.286"* %843 to i64*
  %845 = bitcast %"struct.std::__1::pair.286"* %842 to i64*
  %846 = load i64, i64* %845, align 4
  store i64 %846, i64* %844, align 4
  %847 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 5
  %848 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 5
  %849 = bitcast %"struct.std::__1::pair.286"* %848 to i64*
  %850 = bitcast %"struct.std::__1::pair.286"* %847 to i64*
  %851 = load i64, i64* %850, align 4
  store i64 %851, i64* %849, align 4
  %852 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 6
  %853 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 6
  %854 = bitcast %"struct.std::__1::pair.286"* %853 to i64*
  %855 = bitcast %"struct.std::__1::pair.286"* %852 to i64*
  %856 = load i64, i64* %855, align 4
  store i64 %856, i64* %854, align 4
  %857 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 7
  %858 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 7
  %859 = bitcast %"struct.std::__1::pair.286"* %858 to i64*
  %860 = bitcast %"struct.std::__1::pair.286"* %857 to i64*
  %861 = load i64, i64* %860, align 4
  store i64 %861, i64* %859, align 4
  %862 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %823, i64 8
  %863 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %821, i64 8
  %864 = icmp eq %"struct.std::__1::pair.286"* %862, %685
  br i1 %864, label %865, label %820, !llvm.loop !74

865:                                              ; preds = %814, %820, %788, %684
  %866 = phi %"struct.std::__1::pair.286"* [ %498, %684 ], [ %710, %788 ], [ %815, %814 ], [ %863, %820 ]
  %867 = ptrtoint %"struct.std::__1::pair.286"* %866 to i64
  %868 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %7, align 8
  store i64 %679, i64* %460, align 8
  store i64 %867, i64* %22, align 8
  store i64 %497, i64* %14, align 8
  %869 = icmp eq %"struct.std::__1::pair.286"* %868, null
  br i1 %869, label %872, label %870

870:                                              ; preds = %865
  %871 = bitcast %"struct.std::__1::pair.286"* %868 to i8*
  tail call void @_ZdlPv(i8* %871) #19
  br label %872

872:                                              ; preds = %425, %429, %870, %865, %207, %401, %4
  %873 = phi %"struct.std::__1::pair.286"* [ %1, %4 ], [ %1, %401 ], [ %1, %207 ], [ %495, %865 ], [ %495, %870 ], [ %1, %429 ], [ %1, %425 ]
  ret %"struct.std::__1::pair.286"* %873
}

declare void @_ZN3jxl13TraceRunBeginEPKcPd(i8*, double*) local_unnamed_addr #1

declare void @_ZN3jxl11TraceRunEndEPKcd(i8*, double) local_unnamed_addr #1

declare i32 @_ZN3jxl10ThreadPool22SequentialRunnerStaticEPvS1_PFiS1_mEPFvS1_jmEjj(i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3jxl10ThreadPool14ReturnTrueInitEm(i64) #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @"_ZN3jxl10ThreadPool12RunCallStateIFNS_6StatusEmEZNS_12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPS0_PNS_6AuxOutEbE3$_2E12CallInitFuncEPvm"(i8* nocapture readonly, i64) #0 align 2 {
  %3 = bitcast i8* %0 to i32 (i64)**
  %4 = load i32 (i64)*, i32 (i64)** %3, align 8
  %5 = tail call i32 %4(i64 %1) #9
  %6 = icmp ne i32 %5, 0
  %7 = sext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZN3jxl10ThreadPool12RunCallStateIFNS_6StatusEmEZNS_12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPS0_PNS_6AuxOutEbE3$_2E12CallDataFuncEPvjm"(i8* nocapture readonly, i32, i64) #8 align 2 {
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to %class.anon.401**
  %6 = load %class.anon.401*, %class.anon.401** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %class.anon.401, %class.anon.401* %6, i64 0, i32 0
  %9 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %8, align 8
  %10 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %9, i64 0, i32 0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = and i64 %12, 4294967292
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %235, label %15

15:                                               ; preds = %3
  %16 = shl nuw nsw i64 %7, 2
  %17 = getelementptr inbounds %class.anon.401, %class.anon.401* %6, i64 0, i32 1
  %18 = and i64 %16, 4294967292
  %19 = getelementptr inbounds %class.anon.401, %class.anon.401* %6, i64 0, i32 2
  %20 = getelementptr inbounds %class.anon.401, %class.anon.401* %6, i64 0, i32 3
  %21 = getelementptr inbounds %class.anon.401, %class.anon.401* %6, i64 0, i32 4
  br label %22

22:                                               ; preds = %168, %15
  %23 = phi %"class.jxl::Image3"* [ %9, %15 ], [ %169, %168 ]
  %24 = phi i64 [ %12, %15 ], [ %173, %168 ]
  %25 = phi i64 [ 0, %15 ], [ %170, %168 ]
  %26 = shl i64 %25, 2
  %27 = load %class.anon.399*, %class.anon.399** %17, align 8
  %28 = getelementptr inbounds %class.anon.399, %class.anon.399* %27, i64 0, i32 0
  %29 = load [3 x float*]*, [3 x float*]** %28, align 8
  %30 = getelementptr inbounds %class.anon.399, %class.anon.399* %27, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = mul i64 %31, %18
  %33 = add i64 %32, %26
  %34 = getelementptr inbounds [3 x float*], [3 x float*]* %29, i64 0, i64 0
  %35 = load float*, float** %34, align 8
  %36 = getelementptr inbounds float, float* %35, i64 %33
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds [3 x float*], [3 x float*]* %29, i64 0, i64 1
  %39 = getelementptr inbounds [3 x float*], [3 x float*]* %29, i64 0, i64 2
  %40 = or i64 %26, 1
  %41 = or i64 %26, 2
  %42 = or i64 %26, 3
  br label %43

43:                                               ; preds = %89, %22
  %44 = phi i64 [ 0, %22 ], [ %91, %89 ]
  %45 = phi i8 [ 1, %22 ], [ %90, %89 ]
  %46 = add nuw nsw i64 %44, %16
  %47 = and i64 %46, 4294967295
  %48 = mul i64 %47, %31
  %49 = add i64 %48, %26
  %50 = getelementptr inbounds float, float* %35, i64 %49
  %51 = load float, float* %50, align 4
  %52 = fsub float %51, %37
  %53 = tail call float @llvm.fabs.f32(float %52) #9
  %54 = fpext float %53 to double
  %55 = fcmp ule double %54, 1.000000e-04
  br i1 %55, label %69, label %89

56:                                               ; preds = %89
  %57 = and i8 %90, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %168, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %23, i64 0, i32 0, i64 0, i32 0, i32 1
  br label %93

61:                                               ; preds = %79
  %62 = add i64 %48, %40
  %63 = getelementptr inbounds float, float* %35, i64 %62
  %64 = load float, float* %63, align 4
  %65 = fsub float %64, %37
  %66 = tail call float @llvm.fabs.f32(float %65) #9
  %67 = fpext float %66 to double
  %68 = fcmp ule double %67, 1.000000e-04
  br i1 %68, label %176, label %89

69:                                               ; preds = %43
  %70 = load float*, float** %38, align 8
  %71 = getelementptr inbounds float, float* %70, i64 %49
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds float, float* %70, i64 %33
  %74 = load float, float* %73, align 4
  %75 = fsub float %72, %74
  %76 = tail call float @llvm.fabs.f32(float %75) #9
  %77 = fpext float %76 to double
  %78 = fcmp ule double %77, 1.000000e-04
  br i1 %78, label %79, label %89

79:                                               ; preds = %69
  %80 = load float*, float** %39, align 8
  %81 = getelementptr inbounds float, float* %80, i64 %49
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds float, float* %80, i64 %33
  %84 = load float, float* %83, align 4
  %85 = fsub float %82, %84
  %86 = tail call float @llvm.fabs.f32(float %85) #9
  %87 = fpext float %86 to double
  %88 = fcmp ule double %87, 1.000000e-04
  br i1 %88, label %61, label %89

89:                                               ; preds = %234, %227, %220, %212, %205, %198, %190, %183, %176, %79, %69, %61, %43
  %90 = phi i8 [ 0, %43 ], [ 0, %69 ], [ 0, %79 ], [ 0, %61 ], [ 0, %176 ], [ 0, %183 ], [ 0, %190 ], [ 0, %198 ], [ 0, %205 ], [ 0, %212 ], [ 0, %220 ], [ 0, %227 ], [ %45, %234 ]
  %91 = add nuw nsw i64 %44, 1
  %92 = icmp eq i64 %91, 4
  br i1 %92, label %56, label %43

93:                                               ; preds = %104, %59
  %94 = phi i64 [ -4, %59 ], [ %105, %104 ]
  %95 = phi i64 [ 0, %59 ], [ %154, %104 ]
  %96 = phi i64 [ 0, %59 ], [ %153, %104 ]
  %97 = add nsw i64 %94, %16
  %98 = and i64 %97, 4294967295
  %99 = mul i64 %98, %31
  br label %107

100:                                              ; preds = %104
  %101 = shl i64 %154, 3
  %102 = mul i64 %153, 7
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %168, label %157

104:                                              ; preds = %152
  %105 = add nsw i64 %94, 1
  %106 = icmp eq i64 %105, 8
  br i1 %106, label %100, label %93

107:                                              ; preds = %152, %93
  %108 = phi i64 [ -4, %93 ], [ %155, %152 ]
  %109 = phi i64 [ %95, %93 ], [ %154, %152 ]
  %110 = phi i64 [ %96, %93 ], [ %153, %152 ]
  %111 = add nsw i64 %108, %26
  %112 = icmp uge i64 %111, %24
  %113 = or i64 %111, %97
  %114 = icmp slt i64 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %152, label %116

116:                                              ; preds = %107
  %117 = load i32, i32* %60, align 4
  %118 = zext i32 %117 to i64
  %119 = icmp ult i64 %97, %118
  br i1 %119, label %120, label %152

120:                                              ; preds = %116
  %121 = add i64 %110, 1
  %122 = and i64 %111, 4294967295
  %123 = add i64 %122, %99
  %124 = getelementptr inbounds float, float* %35, i64 %123
  %125 = load float, float* %124, align 4
  %126 = fsub float %125, %37
  %127 = tail call float @llvm.fabs.f32(float %126) #9
  %128 = fpext float %127 to double
  %129 = fcmp ule double %128, 1.000000e-04
  br i1 %129, label %130, label %152

130:                                              ; preds = %120
  %131 = load float*, float** %38, align 8
  %132 = getelementptr inbounds float, float* %131, i64 %123
  %133 = load float, float* %132, align 4
  %134 = getelementptr inbounds float, float* %131, i64 %33
  %135 = load float, float* %134, align 4
  %136 = fsub float %133, %135
  %137 = tail call float @llvm.fabs.f32(float %136) #9
  %138 = fpext float %137 to double
  %139 = fcmp ule double %138, 1.000000e-04
  br i1 %139, label %140, label %152

140:                                              ; preds = %130
  %141 = load float*, float** %39, align 8
  %142 = getelementptr inbounds float, float* %141, i64 %123
  %143 = load float, float* %142, align 4
  %144 = getelementptr inbounds float, float* %141, i64 %33
  %145 = load float, float* %144, align 4
  %146 = fsub float %143, %145
  %147 = tail call float @llvm.fabs.f32(float %146) #9
  %148 = fpext float %147 to double
  %149 = fcmp ule double %148, 1.000000e-04
  br i1 %149, label %150, label %152

150:                                              ; preds = %140
  %151 = add i64 %109, 1
  br label %152

152:                                              ; preds = %150, %140, %130, %120, %116, %107
  %153 = phi i64 [ %110, %116 ], [ %110, %107 ], [ %121, %150 ], [ %121, %120 ], [ %121, %130 ], [ %121, %140 ]
  %154 = phi i64 [ %109, %116 ], [ %109, %107 ], [ %151, %150 ], [ %109, %120 ], [ %109, %130 ], [ %109, %140 ]
  %155 = add nsw i64 %108, 1
  %156 = icmp eq i64 %155, 8
  br i1 %156, label %104, label %107

157:                                              ; preds = %100
  %158 = load i8**, i8*** %19, align 8
  %159 = load i8*, i8** %158, align 8
  %160 = load i64*, i64** %20, align 8
  %161 = load i64, i64* %160, align 8
  %162 = mul i64 %161, %7
  %163 = add i64 %162, %25
  %164 = getelementptr inbounds i8, i8* %159, i64 %163
  store i8 1, i8* %164, align 1
  %165 = load %"struct.std::__1::atomic.395"*, %"struct.std::__1::atomic.395"** %21, align 8
  %166 = getelementptr inbounds %"struct.std::__1::atomic.395", %"struct.std::__1::atomic.395"* %165, i64 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %166 seq_cst, align 1
  %167 = load %"class.jxl::Image3"*, %"class.jxl::Image3"** %8, align 8
  br label %168

168:                                              ; preds = %157, %100, %56
  %169 = phi %"class.jxl::Image3"* [ %167, %157 ], [ %23, %100 ], [ %23, %56 ]
  %170 = add nuw nsw i64 %25, 1
  %171 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %169, i64 0, i32 0, i64 0, i32 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = zext i32 %172 to i64
  %174 = lshr i64 %173, 2
  %175 = icmp ult i64 %170, %174
  br i1 %175, label %22, label %235

176:                                              ; preds = %61
  %177 = getelementptr inbounds float, float* %70, i64 %62
  %178 = load float, float* %177, align 4
  %179 = fsub float %178, %74
  %180 = tail call float @llvm.fabs.f32(float %179) #9
  %181 = fpext float %180 to double
  %182 = fcmp ule double %181, 1.000000e-04
  br i1 %182, label %183, label %89

183:                                              ; preds = %176
  %184 = getelementptr inbounds float, float* %80, i64 %62
  %185 = load float, float* %184, align 4
  %186 = fsub float %185, %84
  %187 = tail call float @llvm.fabs.f32(float %186) #9
  %188 = fpext float %187 to double
  %189 = fcmp ule double %188, 1.000000e-04
  br i1 %189, label %190, label %89

190:                                              ; preds = %183
  %191 = add i64 %48, %41
  %192 = getelementptr inbounds float, float* %35, i64 %191
  %193 = load float, float* %192, align 4
  %194 = fsub float %193, %37
  %195 = tail call float @llvm.fabs.f32(float %194) #9
  %196 = fpext float %195 to double
  %197 = fcmp ule double %196, 1.000000e-04
  br i1 %197, label %198, label %89

198:                                              ; preds = %190
  %199 = getelementptr inbounds float, float* %70, i64 %191
  %200 = load float, float* %199, align 4
  %201 = fsub float %200, %74
  %202 = tail call float @llvm.fabs.f32(float %201) #9
  %203 = fpext float %202 to double
  %204 = fcmp ule double %203, 1.000000e-04
  br i1 %204, label %205, label %89

205:                                              ; preds = %198
  %206 = getelementptr inbounds float, float* %80, i64 %191
  %207 = load float, float* %206, align 4
  %208 = fsub float %207, %84
  %209 = tail call float @llvm.fabs.f32(float %208) #9
  %210 = fpext float %209 to double
  %211 = fcmp ule double %210, 1.000000e-04
  br i1 %211, label %212, label %89

212:                                              ; preds = %205
  %213 = add i64 %48, %42
  %214 = getelementptr inbounds float, float* %35, i64 %213
  %215 = load float, float* %214, align 4
  %216 = fsub float %215, %37
  %217 = tail call float @llvm.fabs.f32(float %216) #9
  %218 = fpext float %217 to double
  %219 = fcmp ule double %218, 1.000000e-04
  br i1 %219, label %220, label %89

220:                                              ; preds = %212
  %221 = getelementptr inbounds float, float* %70, i64 %213
  %222 = load float, float* %221, align 4
  %223 = fsub float %222, %74
  %224 = tail call float @llvm.fabs.f32(float %223) #9
  %225 = fpext float %224 to double
  %226 = fcmp ule double %225, 1.000000e-04
  br i1 %226, label %227, label %89

227:                                              ; preds = %220
  %228 = getelementptr inbounds float, float* %80, i64 %213
  %229 = load float, float* %228, align 4
  %230 = fsub float %229, %84
  %231 = tail call float @llvm.fabs.f32(float %230) #9
  %232 = fpext float %231 to double
  %233 = fcmp ule double %232, 1.000000e-04
  br i1 %233, label %234, label %89

234:                                              ; preds = %227
  br label %89

235:                                              ; preds = %168, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3jxl6AuxOut9DumpImageIhEEvPKcRKNS_6Image3IT_EE(%"struct.jxl::AuxOut"*, i8*, %"class.jxl::Image3.413"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = alloca %"class.jxl::CodecInOut", align 8
  %6 = alloca %"class.jxl::Image3", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 2
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !14
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %178

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %13
  %23 = zext i8 %17 to i64
  br label %24

24:                                               ; preds = %19, %22
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %178, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 256, i1 false)
  %31 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %33, i64 0, i32 0
  %35 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %39 = inttoptr i64 %35 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %28, i64 %42
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = load i8*, i8** %38, align 8
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %28, i64 %48
  %50 = bitcast i8* %49 to %"class.std::__1::ios_base"*
  %51 = bitcast %"class.std::__1::basic_stringbuf"* %33 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %50, i8* %51) #9
  %52 = getelementptr inbounds i8, i8* %49, i64 136
  %53 = bitcast i8* %52 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %53, align 8
  %54 = getelementptr inbounds i8, i8* %49, i64 144
  %55 = bitcast i8* %54 to i32*
  store i32 -1, i32* %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %31, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %34) #9
  %56 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %33, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %58 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 3
  %59 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #9
  store i32 16, i32* %58, align 8
  %60 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  %61 = load i8, i8* %16, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %68 = zext i8 %61 to i64
  %69 = select i1 %62, i8* %64, i8* %67
  %70 = select i1 %62, i64 %66, i64 %68
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %60, i8* %69, i64 %70) #9
  %72 = call i64 @strlen(i8* %1) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* %1, i64 %72) #9
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 4) #9
  %75 = bitcast %"class.jxl::CodecInOut"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3416, i8* nonnull %75) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 bitcast ({ %"struct.jxl::SizeConstraints", %"class.jxl::DecoderHints", i32, float, i64, %"struct.jxl::Blobs", { <{ %"class.jxl::Fields", i8, [7 x i8], %"struct.jxl::BitDepth", i8, i8, [6 x i8], { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, i32, i8, i8, i8, i8, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::ToneMapping", i32, [4 x i8], %"class.std::__1::vector.18", %"struct.jxl::CustomTransformData", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::AnimationHeader", i64, i8, [7 x i8] }>, { %"class.jxl::Fields", i8, [3 x i8], i32, i32, i32, i32, i32 }, %"struct.jxl::CustomTransformData" }, { %"class.std::__1::unique_ptr.105", i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::FrameOrigin", i32, i8, i8, [2 x i8], %"class.std::__1::basic_string", %"struct.jxl::ImageMetadata"*, %"class.jxl::Image3", { %"class.jxl::Fields", i8, [3 x i8], i32, i32, [4 x i8], { %"class.jxl::Fields", i32, i8, [3 x i8], i32, i32 }, i32, i8, i8, [2 x i8], %"class.jxl::PaddedBytes", i32, [4 x i8], %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }, %"class.std::__1::vector.169", i64 }, %"class.std::__1::vector.192", i8, [7 x i8], i64 }* @__const._ZNK3jxl6AuxOut9DumpImageIfEEvPKcRKNS_6Image3IT_EE.io to i8*), i64 3416, i1 false)
  call void @_ZN3jxl10CodecInOutC2Ev(%"class.jxl::CodecInOut"* nonnull %5)
  %76 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 3, i32 3
  store i32 16, i32* %76, align 4
  %77 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 3, i32 4
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 3, i32 1
  store i8 0, i8* %78, align 8
  %79 = call dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding4SRGBEb(i1 zeroext false) #9
  %80 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7
  %81 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 1
  %82 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 12, i1 false) #9
  %83 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 4, i32 1
  %84 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 4, i32 1
  %85 = bitcast i32* %83 to i8*
  %86 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #9
  %87 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 5
  %88 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 5
  %89 = bitcast i32* %87 to i8*
  %90 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 6, i1 false) #9
  %91 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 8
  %92 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 8, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 8, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %95, %93
  br i1 %96, label %97, label %98

97:                                               ; preds = %27
  call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %91, i64 %93) #9
  br label %98

98:                                               ; preds = %97, %27
  %99 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  %102 = select i1 %101, i64 0, i64 %93
  %103 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %91, i64 0, i32 0
  store i64 %102, i64* %103, align 8
  br i1 %101, label %107, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %100, i8* align 1 %106, i64 %102, i1 false) #9
  br label %107

107:                                              ; preds = %98, %104
  %108 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 9
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 9
  store i32 %109, i32* %110, align 8
  %111 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 10, i32 1
  %112 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 10, i32 1
  %113 = bitcast i32* %112 to i64*
  %114 = bitcast i32* %111 to i64*
  %115 = load i64, i64* %113, align 8
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 11, i32 1
  %117 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 11, i32 1
  %118 = bitcast i32* %117 to i64*
  %119 = bitcast i32* %116 to i64*
  %120 = load i64, i64* %118, align 8
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 12, i32 1
  %122 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 12, i32 1
  %123 = bitcast i32* %122 to i64*
  %124 = bitcast i32* %121 to i64*
  %125 = load i64, i64* %123, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %5, i64 0, i32 6, i32 0, i32 7, i32 13, i32 1
  %127 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %79, i64 0, i32 13, i32 1
  %128 = bitcast i32* %127 to i64*
  %129 = bitcast i32* %126 to i64*
  %130 = load i64, i64* %128, align 8
  store i64 %130, i64* %129, align 8
  %131 = bitcast %"class.jxl::Image3"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %131) #9
  call void @_ZN3jxl14ConvertToFloatIhEENS_6Image3IfEERKNS1_IT_EE(%"class.jxl::Image3"* nonnull sret %6, %"class.jxl::Image3.413"* dereferenceable(96) %2)
  call void @_ZN3jxl10CodecInOut12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE(%"class.jxl::CodecInOut"* nonnull %5, %"class.jxl::Image3"* nonnull dereferenceable(96) %6, %"struct.jxl::ColorEncoding"* dereferenceable(152) %80)
  %132 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %6, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  store i8* null, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %107
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %133) #9
  br label %136

136:                                              ; preds = %135, %107
  %137 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %6, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  store i8* null, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %138) #9
  br label %141

141:                                              ; preds = %140, %136
  %142 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %6, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  store i8* null, i8** %142, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %143) #9
  br label %146

146:                                              ; preds = %141, %145
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %131) #9
  %147 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #9
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %33) #9
  %148 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 1, i32 0
  %149 = load i32 (%"union.std::__1::__function::__policy_storage"*, %"class.jxl::CodecInOut"*, %"class.std::__1::basic_string"*)*, i32 (%"union.std::__1::__function::__policy_storage"*, %"class.jxl::CodecInOut"*, %"class.std::__1::basic_string"*)** %148, align 8
  %150 = getelementptr inbounds %"struct.jxl::AuxOut", %"struct.jxl::AuxOut"* %0, i64 0, i32 18, i32 0, i32 0
  %151 = call i32 %149(%"union.std::__1::__function::__policy_storage"* %150, %"class.jxl::CodecInOut"* nonnull dereferenceable(3416) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #9
  %152 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %146
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #19
  br label %159

159:                                              ; preds = %146, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #9
  call void @_ZN3jxl10CodecInOutD2Ev(%"class.jxl::CodecInOut"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 3416, i8* nonnull %75) #9
  %160 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %160, i64* %36, align 8
  %161 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %162 = inttoptr i64 %160 to i8*
  %163 = getelementptr i8, i8* %162, i64 -24
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i8, i8* %28, i64 %165
  %167 = bitcast i8* %166 to i64*
  store i64 %161, i64* %167, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %168 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %159
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #19
  br label %175

175:                                              ; preds = %159, %172
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %34) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %60, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #9
  %176 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %177 = bitcast %"class.std::__1::basic_ios.base"* %176 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %177) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %28) #9
  br label %178

178:                                              ; preds = %24, %3, %175
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl10CodecInOutC2Ev(%"class.jxl::CodecInOut"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.jxl::ImageMetadata"*, align 8
  %3 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 0, i32 0
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 0, i32 2
  store i64 4294967295, i64* %5, align 8
  %6 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 0
  %8 = bitcast %"class.jxl::DecoderHints"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 136, i1 false)
  tail call void @_ZN3jxl13ImageMetadataC1Ev(%"struct.jxl::ImageMetadata"* %7) #9
  %9 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 1
  tail call void @_ZN3jxl10SizeHeaderC1Ev(%"class.jxl::SizeHeader"* %9) #9
  %10 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 2
  tail call void @_ZN3jxl19CustomTransformDataC1Ev(%"struct.jxl::CustomTransformData"* %10) #9
  %11 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7
  %12 = bitcast %"class.jxl::ImageBundle"* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 1
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 3
  tail call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %14) #9
  %15 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 4, i32 0
  %16 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 8
  %17 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9
  %18 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 9
  %19 = bitcast i32* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 14, i1 false) #9
  store %"struct.jxl::ImageMetadata"* %7, %"struct.jxl::ImageMetadata"** %18, align 8
  %20 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 10
  %21 = bitcast %"class.jxl::Image3"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 96, i1 false) #9
  %22 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 11
  tail call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %22) #9
  %23 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7, i32 12
  %24 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8
  %25 = bitcast %"class.std::__1::vector.169"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 57, i1 false)
  tail call void @_ZNSt3__16vectorIN3jxl11ImageBundleENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.192"* %24, i64 1)
  %26 = bitcast %"struct.jxl::ImageMetadata"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  store %"struct.jxl::ImageMetadata"* %7, %"struct.jxl::ImageMetadata"** %2, align 8
  %27 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8, i32 0, i32 1
  %28 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %27, align 8
  %29 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %29, align 8
  %31 = icmp ult %"class.jxl::ImageBundle"* %28, %30
  br i1 %31, label %32, label %51

32:                                               ; preds = %1
  %33 = ptrtoint %"struct.jxl::ImageMetadata"* %7 to i64
  %34 = bitcast %"class.jxl::ImageBundle"* %28 to i64*
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 1
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 3
  tail call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %36) #9
  %37 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 4, i32 0
  %38 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 8
  %39 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #9
  %40 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 9
  %41 = bitcast i32* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 14, i1 false) #9
  %42 = bitcast %"struct.jxl::ImageMetadata"** %40 to i64*
  store i64 %33, i64* %42, align 8
  %43 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 10
  %44 = bitcast %"class.jxl::Image3"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 96, i1 false) #9
  %45 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 11
  tail call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %45) #9
  %46 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 0, i32 12
  %47 = bitcast %"class.std::__1::vector.169"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 32, i1 false) #9
  %48 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %28, i64 1
  %49 = ptrtoint %"class.jxl::ImageBundle"* %48 to i64
  %50 = bitcast %"class.jxl::ImageBundle"** %27 to i64*
  store i64 %49, i64* %50, align 8
  br label %52

51:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN3jxl11ImageBundleENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPNS1_13ImageMetadataEEEEvDpOT_(%"class.std::__1::vector.192"* %24, %"struct.jxl::ImageMetadata"** nonnull dereferenceable(8) %2) #9
  br label %52

52:                                               ; preds = %32, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  ret void
}

declare dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding4SRGBEb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl10CodecInOut12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE(%"class.jxl::CodecInOut"*, %"class.jxl::Image3"* dereferenceable(96), %"struct.jxl::ColorEncoding"* dereferenceable(152)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8, i32 0, i32 1
  %6 = bitcast %"class.jxl::ImageBundle"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.192"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = inttoptr i64 %9 to %"class.jxl::ImageBundle"*
  br i1 %10, label %23, label %12

12:                                               ; preds = %3
  %13 = sub i64 %7, %9
  %14 = sdiv exact i64 %13, 368
  br label %15

15:                                               ; preds = %20, %12
  %16 = phi i64 [ 0, %12 ], [ %21, %20 ]
  %17 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %11, i64 %16, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = add nuw i64 %16, 1
  %22 = icmp ult i64 %21, %14
  br i1 %22, label %15, label %23

23:                                               ; preds = %15, %20, %3
  %24 = phi i64 [ 0, %3 ], [ %16, %20 ], [ %16, %15 ]
  %25 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %11, i64 %24
  tail call void @_ZN3jxl11ImageBundle12SetFromImageEONS_6Image3IfEERKNS_13ColorEncodingE(%"class.jxl::ImageBundle"* %25, %"class.jxl::Image3"* dereferenceable(96) %1, %"struct.jxl::ColorEncoding"* dereferenceable(152) %2) #9
  tail call void @_ZN3jxl18SetIntensityTargetEPNS_10CodecInOutE(%"class.jxl::CodecInOut"* %0) #9
  %26 = load i64, i64* %6, align 8
  %27 = load i64, i64* %8, align 8
  %28 = icmp eq i64 %26, %27
  %29 = inttoptr i64 %27 to %"class.jxl::ImageBundle"*
  br i1 %28, label %41, label %30

30:                                               ; preds = %23
  %31 = sub i64 %26, %27
  %32 = sdiv exact i64 %31, 368
  br label %33

33:                                               ; preds = %38, %30
  %34 = phi i64 [ 0, %30 ], [ %39, %38 ]
  %35 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %34, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = add nuw i64 %34, 1
  %40 = icmp ult i64 %39, %32
  br i1 %40, label %33, label %41

41:                                               ; preds = %33, %38, %23
  %42 = phi i64 [ 0, %23 ], [ %34, %38 ], [ %34, %33 ]
  %43 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %42, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %43, align 8
  %45 = icmp eq %"struct.jxl::jpeg::JPEGData"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  br label %65

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %42, i32 10, i32 0, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = icmp eq i32 %52, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %42, i32 12, i32 0, i32 0
  %57 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %56, align 8
  %58 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %42, i32 12, i32 0, i32 1
  %59 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %58, align 8
  %60 = icmp eq %"class.jxl::Plane.97"* %57, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %57, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %46, %50, %55, %61
  %66 = phi i64 [ %49, %46 ], [ %64, %61 ], [ 0, %55 ], [ %53, %50 ]
  br i1 %28, label %78, label %67

67:                                               ; preds = %65
  %68 = sub i64 %26, %27
  %69 = sdiv exact i64 %68, 368
  br label %70

70:                                               ; preds = %75, %67
  %71 = phi i64 [ 0, %67 ], [ %76, %75 ]
  %72 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %71, i32 5
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = add nuw i64 %71, 1
  %77 = icmp ult i64 %76, %69
  br i1 %77, label %70, label %78

78:                                               ; preds = %70, %75, %65
  %79 = phi i64 [ 0, %65 ], [ %71, %75 ], [ %71, %70 ]
  %80 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %79, i32 0, i32 0, i32 0, i32 0
  %81 = load %"struct.jxl::jpeg::JPEGData"*, %"struct.jxl::jpeg::JPEGData"** %80, align 8
  %82 = icmp eq %"struct.jxl::jpeg::JPEGData"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"struct.jxl::jpeg::JPEGData", %"struct.jxl::jpeg::JPEGData"* %81, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  br label %102

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %79, i32 10, i32 0, i64 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = icmp eq i32 %89, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %79, i32 12, i32 0, i32 0
  %94 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %93, align 8
  %95 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %29, i64 %79, i32 12, i32 0, i32 1
  %96 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %95, align 8
  %97 = icmp eq %"class.jxl::Plane.97"* %94, %96
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %94, i64 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  br label %102

102:                                              ; preds = %83, %87, %92, %98
  %103 = phi i64 [ %86, %83 ], [ %101, %98 ], [ 0, %92 ], [ %90, %87 ]
  %104 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 1
  %105 = tail call i32 @_ZN3jxl10SizeHeader3SetEmm(%"class.jxl::SizeHeader"* %104, i64 %66, i64 %103) #9
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.26, i64 0, i64 0), i32 158, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27, i64 0, i64 0)) #9
  %109 = tail call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

110:                                              ; preds = %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl14ConvertToFloatIhEENS_6Image3IfEERKNS1_IT_EE(%"class.jxl::Image3"* noalias sret, %"class.jxl::Image3.413"* dereferenceable(96)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.jxl::Plane.97", align 8
  %4 = alloca %"class.jxl::Plane.97", align 8
  %5 = alloca %"class.jxl::Plane.97", align 8
  %6 = bitcast %"class.jxl::Plane.97"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0, i32 4
  %8 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false) #9, !alias.scope !75
  %10 = load i32, i32* %9, align 8, !noalias !75
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4, !noalias !75
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %15, i64 %11, i64 %14, i64 4) #9
  %16 = load i32, i32* %12, align 4, !noalias !75
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %61, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 0, i32 0, i32 4
  %21 = load i32, i32* %9, align 8, !noalias !75
  br label %22

22:                                               ; preds = %44, %18
  %23 = phi i32 [ %16, %18 ], [ %45, %44 ]
  %24 = phi i32 [ %21, %18 ], [ %46, %44 ]
  %25 = phi i64 [ 0, %18 ], [ %47, %44 ]
  %26 = load i8*, i8** %19, align 8, !noalias !75
  %27 = load i64, i64* %20, align 8, !noalias !75
  %28 = mul i64 %27, %25
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = ptrtoint i8* %29 to i64
  %31 = and i64 %30, 63
  %32 = icmp eq i64 %31, 0
  call void @llvm.assume(i1 %32) #9
  %33 = load i8*, i8** %8, align 8, !alias.scope !75
  %34 = load i64, i64* %7, align 8, !alias.scope !75
  %35 = mul i64 %34, %25
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = and i64 %37, 63
  %39 = icmp eq i64 %38, 0
  call void @llvm.assume(i1 %39) #9
  %40 = bitcast i8* %36 to float*
  %41 = icmp eq i32 %24, 0
  br i1 %41, label %44, label %50

42:                                               ; preds = %50
  %43 = load i32, i32* %12, align 4, !noalias !75
  br label %44

44:                                               ; preds = %42, %22
  %45 = phi i32 [ %43, %42 ], [ %23, %22 ]
  %46 = phi i32 [ %58, %42 ], [ 0, %22 ]
  %47 = add nuw nsw i64 %25, 1
  %48 = zext i32 %45 to i64
  %49 = icmp ult i64 %47, %48
  br i1 %49, label %22, label %61

50:                                               ; preds = %22, %50
  %51 = phi i64 [ %57, %50 ], [ 0, %22 ]
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = uitofp i8 %53 to float
  %55 = fmul float %54, 0x3F70101020000000
  %56 = getelementptr inbounds float, float* %40, i64 %51
  store float %55, float* %56, align 4
  %57 = add nuw nsw i64 %51, 1
  %58 = load i32, i32* %9, align 8, !noalias !75
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %50, label %42

61:                                               ; preds = %44, %2
  %62 = bitcast %"class.jxl::Plane.97"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %4, i64 0, i32 0, i32 4
  %64 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 32, i1 false) #9, !alias.scope !78
  %66 = load i32, i32* %65, align 8, !noalias !78
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 1, i32 0, i32 1
  %69 = load i32, i32* %68, align 4, !noalias !78
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %4, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %71, i64 %67, i64 %70, i64 4) #9
  %72 = load i32, i32* %68, align 4, !noalias !78
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %117, label %74

74:                                               ; preds = %61
  %75 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 1, i32 0, i32 4
  %77 = load i32, i32* %65, align 8, !noalias !78
  br label %78

78:                                               ; preds = %100, %74
  %79 = phi i32 [ %72, %74 ], [ %101, %100 ]
  %80 = phi i32 [ %77, %74 ], [ %102, %100 ]
  %81 = phi i64 [ 0, %74 ], [ %103, %100 ]
  %82 = load i8*, i8** %75, align 8, !noalias !78
  %83 = load i64, i64* %76, align 8, !noalias !78
  %84 = mul i64 %83, %81
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = ptrtoint i8* %85 to i64
  %87 = and i64 %86, 63
  %88 = icmp eq i64 %87, 0
  call void @llvm.assume(i1 %88) #9
  %89 = load i8*, i8** %64, align 8, !alias.scope !78
  %90 = load i64, i64* %63, align 8, !alias.scope !78
  %91 = mul i64 %90, %81
  %92 = getelementptr inbounds i8, i8* %89, i64 %91
  %93 = ptrtoint i8* %92 to i64
  %94 = and i64 %93, 63
  %95 = icmp eq i64 %94, 0
  call void @llvm.assume(i1 %95) #9
  %96 = bitcast i8* %92 to float*
  %97 = icmp eq i32 %80, 0
  br i1 %97, label %100, label %106

98:                                               ; preds = %106
  %99 = load i32, i32* %68, align 4, !noalias !78
  br label %100

100:                                              ; preds = %98, %78
  %101 = phi i32 [ %99, %98 ], [ %79, %78 ]
  %102 = phi i32 [ %114, %98 ], [ 0, %78 ]
  %103 = add nuw nsw i64 %81, 1
  %104 = zext i32 %101 to i64
  %105 = icmp ult i64 %103, %104
  br i1 %105, label %78, label %117

106:                                              ; preds = %78, %106
  %107 = phi i64 [ %113, %106 ], [ 0, %78 ]
  %108 = getelementptr inbounds i8, i8* %85, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = uitofp i8 %109 to float
  %111 = fmul float %110, 0x3F70101020000000
  %112 = getelementptr inbounds float, float* %96, i64 %107
  store float %111, float* %112, align 4
  %113 = add nuw nsw i64 %107, 1
  %114 = load i32, i32* %65, align 8, !noalias !78
  %115 = zext i32 %114 to i64
  %116 = icmp ult i64 %113, %115
  br i1 %116, label %106, label %98

117:                                              ; preds = %100, %61
  %118 = bitcast %"class.jxl::Plane.97"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #9
  %119 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %5, i64 0, i32 0, i32 4
  %120 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %5, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 32, i1 false) #9, !alias.scope !81
  %122 = load i32, i32* %121, align 8, !noalias !81
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 2, i32 0, i32 1
  %125 = load i32, i32* %124, align 4, !noalias !81
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %5, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %127, i64 %123, i64 %126, i64 4) #9
  %128 = load i32, i32* %124, align 4, !noalias !81
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %173, label %130

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.jxl::Image3.413", %"class.jxl::Image3.413"* %1, i64 0, i32 0, i64 2, i32 0, i32 4
  %133 = load i32, i32* %121, align 8, !noalias !81
  br label %134

134:                                              ; preds = %156, %130
  %135 = phi i32 [ %128, %130 ], [ %157, %156 ]
  %136 = phi i32 [ %133, %130 ], [ %158, %156 ]
  %137 = phi i64 [ 0, %130 ], [ %159, %156 ]
  %138 = load i8*, i8** %131, align 8, !noalias !81
  %139 = load i64, i64* %132, align 8, !noalias !81
  %140 = mul i64 %139, %137
  %141 = getelementptr inbounds i8, i8* %138, i64 %140
  %142 = ptrtoint i8* %141 to i64
  %143 = and i64 %142, 63
  %144 = icmp eq i64 %143, 0
  call void @llvm.assume(i1 %144) #9
  %145 = load i8*, i8** %120, align 8, !alias.scope !81
  %146 = load i64, i64* %119, align 8, !alias.scope !81
  %147 = mul i64 %146, %137
  %148 = getelementptr inbounds i8, i8* %145, i64 %147
  %149 = ptrtoint i8* %148 to i64
  %150 = and i64 %149, 63
  %151 = icmp eq i64 %150, 0
  call void @llvm.assume(i1 %151) #9
  %152 = bitcast i8* %148 to float*
  %153 = icmp eq i32 %136, 0
  br i1 %153, label %156, label %162

154:                                              ; preds = %162
  %155 = load i32, i32* %124, align 4, !noalias !81
  br label %156

156:                                              ; preds = %154, %134
  %157 = phi i32 [ %155, %154 ], [ %135, %134 ]
  %158 = phi i32 [ %170, %154 ], [ 0, %134 ]
  %159 = add nuw nsw i64 %137, 1
  %160 = zext i32 %157 to i64
  %161 = icmp ult i64 %159, %160
  br i1 %161, label %134, label %173

162:                                              ; preds = %134, %162
  %163 = phi i64 [ %169, %162 ], [ 0, %134 ]
  %164 = getelementptr inbounds i8, i8* %141, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = uitofp i8 %165 to float
  %167 = fmul float %166, 0x3F70101020000000
  %168 = getelementptr inbounds float, float* %152, i64 %163
  store float %167, float* %168, align 4
  %169 = add nuw nsw i64 %163, 1
  %170 = load i32, i32* %121, align 8, !noalias !81
  %171 = zext i32 %170 to i64
  %172 = icmp ult i64 %169, %171
  br i1 %172, label %162, label %154

173:                                              ; preds = %156, %117
  call void @_ZN3jxl6Image3IfEC2EONS_5PlaneIfEES4_S4_(%"class.jxl::Image3"* %0, %"class.jxl::Plane.97"* nonnull dereferenceable(32) %3, %"class.jxl::Plane.97"* nonnull dereferenceable(32) %4, %"class.jxl::Plane.97"* nonnull dereferenceable(32) %5)
  %174 = load i8*, i8** %120, align 8
  store i8* null, i8** %120, align 8
  %175 = icmp eq i8* %174, null
  br i1 %175, label %177, label %176

176:                                              ; preds = %173
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %174) #9
  br label %177

177:                                              ; preds = %173, %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #9
  %178 = load i8*, i8** %64, align 8
  store i8* null, i8** %64, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %177
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %178) #9
  br label %181

181:                                              ; preds = %177, %180
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #9
  %182 = load i8*, i8** %8, align 8
  store i8* null, i8** %8, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %185, label %184

184:                                              ; preds = %181
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %182) #9
  br label %185

185:                                              ; preds = %181, %184
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl10CodecInOutD2Ev(%"class.jxl::CodecInOut"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %3, align 8
  %5 = icmp eq %"class.jxl::ImageBundle"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.jxl::ImageBundle"* %4 to i8*
  %8 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 8, i32 0, i32 1
  %9 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %8, align 8
  %10 = icmp eq %"class.jxl::ImageBundle"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.jxl::ImageBundle"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %12, i64 -1
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %13) #9
  %14 = icmp eq %"class.jxl::ImageBundle"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.192"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"class.jxl::ImageBundle"* %4, %"class.jxl::ImageBundle"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 7
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %21) #9
  %22 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ImageMetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 0, i32 17
  %24 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %23, i64 0, i32 0, i32 0
  %25 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %24, align 8
  %26 = icmp eq %"struct.jxl::ExtraChannelInfo"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %20
  %28 = bitcast %"struct.jxl::ExtraChannelInfo"* %25 to i8*
  %29 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 0, i32 17, i32 0, i32 1
  %30 = load %"struct.jxl::ExtraChannelInfo"*, %"struct.jxl::ExtraChannelInfo"** %29, align 8
  %31 = icmp eq %"struct.jxl::ExtraChannelInfo"* %30, %25
  br i1 %31, label %42, label %32

32:                                               ; preds = %27, %32
  %33 = phi %"struct.jxl::ExtraChannelInfo"* [ %34, %32 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"struct.jxl::ExtraChannelInfo", %"struct.jxl::ExtraChannelInfo"* %33, i64 -1
  %35 = bitcast %"struct.jxl::ExtraChannelInfo"* %34 to void (%"struct.jxl::ExtraChannelInfo"*)***
  %36 = load void (%"struct.jxl::ExtraChannelInfo"*)**, void (%"struct.jxl::ExtraChannelInfo"*)*** %35, align 8
  %37 = load void (%"struct.jxl::ExtraChannelInfo"*)*, void (%"struct.jxl::ExtraChannelInfo"*)** %36, align 8
  tail call void %37(%"struct.jxl::ExtraChannelInfo"* %34) #9
  %38 = icmp eq %"struct.jxl::ExtraChannelInfo"* %34, %25
  br i1 %38, label %39, label %32

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::vector.18"* %23 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %27
  %43 = phi i8* [ %41, %39 ], [ %28, %27 ]
  store %"struct.jxl::ExtraChannelInfo"* %25, %"struct.jxl::ExtraChannelInfo"** %29, align 8
  tail call void @_ZdlPv(i8* %43) #19
  br label %44

44:                                               ; preds = %42, %20
  %45 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 0, i32 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 6, i32 0, i32 7, i32 8, i32 2, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  store i8* null, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %47) #9
  br label %50

50:                                               ; preds = %44, %49
  %51 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 5, i32 3, i32 2, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  store i8* null, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %52) #9
  br label %55

55:                                               ; preds = %54, %50
  %56 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 5, i32 2, i32 2, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  store i8* null, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %57) #9
  br label %60

60:                                               ; preds = %59, %55
  %61 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 5, i32 1, i32 2, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  store i8* null, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %62) #9
  br label %65

65:                                               ; preds = %64, %60
  %66 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  store i8* null, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %67) #9
  br label %70

70:                                               ; preds = %65, %69
  %71 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 1
  %72 = getelementptr inbounds %"class.jxl::DecoderHints", %"class.jxl::DecoderHints"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.jxl::DecoderHints::KeyValue"*, %"struct.jxl::DecoderHints::KeyValue"** %72, align 8
  %74 = icmp eq %"struct.jxl::DecoderHints::KeyValue"* %73, null
  br i1 %74, label %106, label %75

75:                                               ; preds = %70
  %76 = bitcast %"struct.jxl::DecoderHints::KeyValue"* %73 to i8*
  %77 = getelementptr inbounds %"class.jxl::CodecInOut", %"class.jxl::CodecInOut"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %78 = load %"struct.jxl::DecoderHints::KeyValue"*, %"struct.jxl::DecoderHints::KeyValue"** %77, align 8
  %79 = icmp eq %"struct.jxl::DecoderHints::KeyValue"* %78, %73
  br i1 %79, label %104, label %80

80:                                               ; preds = %75, %99
  %81 = phi %"struct.jxl::DecoderHints::KeyValue"* [ %82, %99 ], [ %78, %75 ]
  %82 = getelementptr inbounds %"struct.jxl::DecoderHints::KeyValue", %"struct.jxl::DecoderHints::KeyValue"* %81, i64 -1
  %83 = getelementptr inbounds %"struct.jxl::DecoderHints::KeyValue", %"struct.jxl::DecoderHints::KeyValue"* %81, i64 -1, i32 1
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #19
  br label %91

91:                                               ; preds = %88, %80
  %92 = bitcast %"struct.jxl::DecoderHints::KeyValue"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.jxl::DecoderHints::KeyValue", %"struct.jxl::DecoderHints::KeyValue"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #19
  br label %99

99:                                               ; preds = %96, %91
  %100 = icmp eq %"struct.jxl::DecoderHints::KeyValue"* %82, %73
  br i1 %100, label %101, label %80

101:                                              ; preds = %99
  %102 = bitcast %"class.jxl::DecoderHints"* %71 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %75
  %105 = phi i8* [ %103, %101 ], [ %76, %75 ]
  store %"struct.jxl::DecoderHints::KeyValue"* %73, %"struct.jxl::DecoderHints::KeyValue"** %77, align 8
  tail call void @_ZdlPv(i8* %105) #19
  br label %106

106:                                              ; preds = %70, %104
  ret void
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !14
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3jxl11ImageBundleENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.192"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.jxl::ImageBundle"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.192"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 368
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.jxl::ImageBundle"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.jxl::ImageBundle"** %13 to i64*
  %15 = icmp ugt i64 %1, 50127021939428129
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #18
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 368
  %21 = mul i64 %1, 368
  %22 = tail call i8* @_Znwm(i64 %21) #19
  %23 = bitcast i8* %22 to %"class.jxl::ImageBundle"*
  %24 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %23, i64 %20
  %25 = ptrtoint %"class.jxl::ImageBundle"* %24 to i64
  %26 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %23, i64 %1
  %27 = ptrtoint %"class.jxl::ImageBundle"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.jxl::ImageBundle"*
  %29 = icmp eq %"class.jxl::ImageBundle"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.jxl::ImageBundle"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.jxl::ImageBundle"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %31, i64 -1
  %34 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %32, i64 -1
  tail call void @_ZN3jxl11ImageBundleC2EOS0_(%"class.jxl::ImageBundle"* %33, %"class.jxl::ImageBundle"* dereferenceable(368) %34) #9
  %35 = icmp eq %"class.jxl::ImageBundle"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.jxl::ImageBundle"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.jxl::ImageBundle"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.jxl::ImageBundle"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.jxl::ImageBundle"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.jxl::ImageBundle"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.jxl::ImageBundle"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %48, i64 -1
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %49) #9
  %50 = icmp eq %"class.jxl::ImageBundle"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #19
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

declare void @_ZN3jxl13ImageMetadataC1Ev(%"struct.jxl::ImageMetadata"*) unnamed_addr #1

declare void @_ZN3jxl10SizeHeaderC1Ev(%"class.jxl::SizeHeader"*) unnamed_addr #1

declare void @_ZN3jxl19CustomTransformDataC1Ev(%"struct.jxl::CustomTransformData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl11ImageBundleC2EOS0_(%"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"* dereferenceable(368)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.jxl::ImageBundle"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"struct.jxl::jpeg::JPEGData"* null, %"struct.jxl::jpeg::JPEGData"** %3, align 8
  %6 = bitcast %"class.jxl::ImageBundle"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22YCbCrChromaSubsamplingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 3, i32 1
  %12 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 3, i32 1
  %13 = bitcast [3 x i32]* %11 to i8*
  %14 = bitcast [3 x i32]* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 14, i1 false) #9
  %15 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 4
  %17 = bitcast %"struct.jxl::FrameOrigin"* %15 to i8*
  %18 = bitcast %"struct.jxl::FrameOrigin"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 14, i1 false)
  %19 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 8
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #9
  %23 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 9
  %24 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 9
  %25 = bitcast %"struct.jxl::ImageMetadata"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.jxl::ImageMetadata"** %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10
  %29 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10
  %30 = bitcast %"class.jxl::Image3"* %28 to i8*
  %31 = bitcast %"class.jxl::Image3"* %29 to i8*
  %32 = getelementptr %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5
  %33 = bitcast %"class.std::__1::unique_ptr"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 72, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #9
  %34 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 0, i32 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  store i8* null, i8** %35, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::unique_ptr"* %32 to i64*
  store i64 %37, i64* %40, align 8
  %41 = icmp eq i8* %39, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %2
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %39) #9
  br label %43

43:                                               ; preds = %42, %2
  %44 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 1
  %45 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 1
  %46 = bitcast %"class.jxl::Plane.97"* %45 to i8*
  %47 = bitcast %"class.jxl::Plane.97"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #9
  %48 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5
  %49 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 1, i32 0, i32 5
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  store i8* null, i8** %50, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %52, i64* %55, align 8
  %56 = icmp eq i8* %54, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %43
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %54) #9
  br label %58

58:                                               ; preds = %57, %43
  %59 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 2
  %60 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 2
  %61 = bitcast %"class.jxl::Plane.97"* %60 to i8*
  %62 = bitcast %"class.jxl::Plane.97"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #9
  %63 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5
  %64 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 10, i32 0, i64 2, i32 0, i32 5
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store i8* null, i8** %65, align 8
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %70, align 8
  %71 = icmp eq i8* %69, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %58
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %69) #9
  br label %73

73:                                               ; preds = %58, %72
  %74 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 1
  %76 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 12, i1 false) #9
  %77 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 4, i32 1
  %79 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 4, i32 1
  %80 = bitcast i32* %78 to i8*
  %81 = bitcast i32* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false) #9
  %82 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 5
  %83 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 5
  %84 = bitcast i32* %82 to i8*
  %85 = bitcast i32* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 6, i1 false) #9
  %86 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 8
  %87 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 0
  %88 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %86, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 1
  %91 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 8, i32 1
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %90, align 8
  %93 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 8, i32 2
  %94 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 8, i32 2
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  store i8* null, i8** %95, align 8
  %98 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 %97, i64* %98, align 8
  %99 = bitcast %"class.jxl::PaddedBytes"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #9
  %100 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 9
  %101 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 9
  %102 = load i32, i32* %101, align 8
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %104 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 10, i32 1
  %105 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 10, i32 1
  %106 = bitcast i32* %105 to i64*
  %107 = bitcast i32* %104 to i64*
  %108 = load i64, i64* %106, align 8
  store i64 %108, i64* %107, align 8
  %109 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 11, i32 1
  %111 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 11, i32 1
  %112 = bitcast i32* %111 to i64*
  %113 = bitcast i32* %110 to i64*
  %114 = load i64, i64* %112, align 8
  store i64 %114, i64* %113, align 8
  %115 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %116 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 12, i32 1
  %117 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 12, i32 1
  %118 = bitcast i32* %117 to i64*
  %119 = bitcast i32* %116 to i64*
  %120 = load i64, i64* %118, align 8
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %121, align 8
  %122 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 11, i32 13, i32 1
  %123 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 11, i32 13, i32 1
  %124 = bitcast i32* %123 to i64*
  %125 = bitcast i32* %122 to i64*
  %126 = load i64, i64* %124, align 8
  store i64 %126, i64* %125, align 8
  %127 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12
  %128 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12
  %129 = bitcast %"class.std::__1::vector.169"* %127 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #9
  %130 = bitcast %"class.std::__1::vector.169"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::__1::vector.169"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 1
  %134 = bitcast %"class.jxl::Plane.97"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12, i32 0, i32 1
  %137 = bitcast %"class.jxl::Plane.97"** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"class.jxl::Plane.97"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast %"class.jxl::Plane.97"** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast %"class.std::__1::vector.169"* %128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #9
  %144 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %0, i64 0, i32 13
  %145 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %1, i64 0, i32 13
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %144, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl22YCbCrChromaSubsamplingD0Ev(%"struct.jxl::YCbCrChromaSubsampling"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"struct.jxl::YCbCrChromaSubsampling"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK3jxl22YCbCrChromaSubsampling4NameEv(%"struct.jxl::YCbCrChromaSubsampling"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3jxl22YCbCrChromaSubsampling11VisitFieldsEPNS_7VisitorE(%"struct.jxl::YCbCrChromaSubsampling"*, %"class.jxl::Visitor"* noalias) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i64, i32, i32*)***
  %4 = getelementptr inbounds %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::YCbCrChromaSubsampling"* %0, i64 0, i32 1, i64 0
  %5 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*** %3, align 8
  %6 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %5, i64 5
  %7 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %6, align 8
  %8 = tail call i32 %7(%"class.jxl::Visitor"* %1, i64 2, i32 0, i32* %4) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::YCbCrChromaSubsampling"* %0, i64 0, i32 1, i64 1
  %12 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*** %3, align 8
  %13 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %12, i64 5
  %14 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %13, align 8
  %15 = tail call i32 %14(%"class.jxl::Visitor"* %1, i64 2, i32 0, i32* %11) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %2, %10, %19, %26
  %18 = phi i32 [ 0, %26 ], [ %8, %2 ], [ %15, %10 ], [ %24, %19 ]
  ret i32 %18

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::YCbCrChromaSubsampling"* %0, i64 0, i32 1, i64 2
  %21 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*** %3, align 8
  %22 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %21, i64 5
  %23 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %22, align 8
  %24 = tail call i32 %23(%"class.jxl::Visitor"* %1, i64 2, i32 0, i32* %20) #9
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %17

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::YCbCrChromaSubsampling"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.jxl::YCbCrChromaSubsampling", %"struct.jxl::YCbCrChromaSubsampling"* %0, i64 0, i32 3
  %29 = load i32, i32* %4, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN3jxl22YCbCrChromaSubsampling7kHShiftE, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = add nsw i64 %30, -1
  %34 = icmp ult i64 %33, 2
  %35 = select i1 %34, i8 %32, i8 0
  %36 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN3jxl22YCbCrChromaSubsampling7kVShiftE, i64 0, i64 %30
  %37 = load i8, i8* %36, align 1
  %38 = or i64 %30, 2
  %39 = icmp eq i64 %38, 3
  %40 = select i1 %39, i8 %37, i8 0
  %41 = load i32, i32* %11, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN3jxl22YCbCrChromaSubsampling7kHShiftE, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = icmp ult i8 %35, %44
  %46 = select i1 %45, i8 %44, i8 %35
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN3jxl22YCbCrChromaSubsampling7kVShiftE, i64 0, i64 %42
  %48 = load i8, i8* %47, align 1
  %49 = icmp ult i8 %40, %48
  %50 = select i1 %49, i8 %48, i8 %40
  %51 = load i32, i32* %20, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN3jxl22YCbCrChromaSubsampling7kHShiftE, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp ult i8 %46, %54
  %56 = select i1 %55, i8 %54, i8 %46
  store i8 %56, i8* %27, align 4
  %57 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN3jxl22YCbCrChromaSubsampling7kVShiftE, i64 0, i64 %52
  %58 = load i8, i8* %57, align 1
  %59 = icmp ult i8 %50, %58
  %60 = select i1 %59, i8 %58, i8 %50
  store i8 %60, i8* %28, align 1
  br label %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3jxl11ImageBundleENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPNS1_13ImageMetadataEEEEvDpOT_(%"class.std::__1::vector.192"*, %"struct.jxl::ImageMetadata"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.jxl::ImageBundle"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.192"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 368
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 50127021939428129
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.192"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.jxl::ImageBundle"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 368
  %20 = icmp ult i64 %19, 25063510969714064
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 50127021939428129, %14 ]
  %28 = mul i64 %27, 368
  %29 = tail call i8* @_Znwm(i64 %28) #19
  %30 = bitcast i8* %29 to %"class.jxl::ImageBundle"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.jxl::ImageBundle"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9
  %35 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %32
  %36 = ptrtoint %"class.jxl::ImageBundle"* %35 to i64
  %37 = bitcast %"struct.jxl::ImageMetadata"** %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.jxl::ImageBundle"* %34 to i64*
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 1
  store i32 1, i32* %40, align 8
  %41 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 3
  tail call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %41) #9
  %42 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 4, i32 0
  %43 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 8
  %44 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #9
  %45 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 9
  %46 = bitcast i32* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 14, i1 false) #9
  %47 = bitcast %"struct.jxl::ImageMetadata"** %45 to i64*
  store i64 %38, i64* %47, align 8
  %48 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 10
  %49 = bitcast %"class.jxl::Image3"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 96, i1 false) #9
  %50 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 11
  tail call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %50) #9
  %51 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %33, i64 %9, i32 12
  %52 = bitcast %"class.std::__1::vector.169"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #9
  %53 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %34, i64 1
  %54 = ptrtoint %"class.jxl::ImageBundle"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 0
  %56 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %55, align 8
  %57 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %3, align 8
  %58 = icmp eq %"class.jxl::ImageBundle"* %57, %56
  br i1 %58, label %59, label %61

59:                                               ; preds = %31
  %60 = ptrtoint %"class.jxl::ImageBundle"* %56 to i64
  br label %70

61:                                               ; preds = %31, %61
  %62 = phi %"class.jxl::ImageBundle"* [ %64, %61 ], [ %34, %31 ]
  %63 = phi %"class.jxl::ImageBundle"* [ %65, %61 ], [ %57, %31 ]
  %64 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %62, i64 -1
  %65 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %63, i64 -1
  tail call void @_ZN3jxl11ImageBundleC2EOS0_(%"class.jxl::ImageBundle"* %64, %"class.jxl::ImageBundle"* dereferenceable(368) %65) #9
  %66 = icmp eq %"class.jxl::ImageBundle"* %65, %56
  br i1 %66, label %67, label %61

67:                                               ; preds = %61
  %68 = load i64, i64* %6, align 8
  %69 = load %"class.jxl::ImageBundle"*, %"class.jxl::ImageBundle"** %3, align 8
  br label %70

70:                                               ; preds = %59, %67
  %71 = phi %"class.jxl::ImageBundle"* [ %56, %59 ], [ %69, %67 ]
  %72 = phi %"class.jxl::ImageBundle"* [ %34, %59 ], [ %64, %67 ]
  %73 = phi i64 [ %60, %59 ], [ %68, %67 ]
  %74 = ptrtoint %"class.jxl::ImageBundle"* %72 to i64
  store i64 %74, i64* %6, align 8
  store i64 %54, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %75 = inttoptr i64 %73 to %"class.jxl::ImageBundle"*
  %76 = icmp eq %"class.jxl::ImageBundle"* %71, %75
  br i1 %76, label %81, label %77

77:                                               ; preds = %70, %77
  %78 = phi %"class.jxl::ImageBundle"* [ %79, %77 ], [ %71, %70 ]
  %79 = getelementptr inbounds %"class.jxl::ImageBundle", %"class.jxl::ImageBundle"* %78, i64 -1
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %79) #9
  %80 = icmp eq %"class.jxl::ImageBundle"* %79, %75
  br i1 %80, label %81, label %77

81:                                               ; preds = %77, %70
  %82 = icmp eq i64 %73, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %84) #19
  br label %85

85:                                               ; preds = %81, %83
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"*, i64) local_unnamed_addr #1

declare void @_ZN3jxl18SetIntensityTargetEPNS_10CodecInOutE(%"class.jxl::CodecInOut"*) local_unnamed_addr #1

declare i32 @_ZN3jxl10SizeHeader3SetEmm(%"class.jxl::SizeHeader"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl6Image3IfEC2EONS_5PlaneIfEES4_S4_(%"class.jxl::Image3"*, %"class.jxl::Plane.97"* dereferenceable(32), %"class.jxl::Plane.97"* dereferenceable(32), %"class.jxl::Plane.97"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.jxl::Image3"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 96, i1 false)
  %6 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %4, %11
  %18 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i32 343, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0)) #9
  %19 = tail call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %7, %22
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %13, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %20, %24
  %29 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i32 344, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)) #9
  %30 = tail call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

31:                                               ; preds = %24
  %32 = bitcast %"class.jxl::Plane.97"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %32, i64 24, i1 false) #9
  %33 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 0, i32 0, i32 5
  %34 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %1, i64 0, i32 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  store i8* null, i8** %35, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %37, i64* %40, align 8
  %41 = icmp eq i8* %39, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %31
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %39) #9
  br label %43

43:                                               ; preds = %31, %42
  %44 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 1
  %45 = bitcast %"class.jxl::Plane.97"* %44 to i8*
  %46 = bitcast %"class.jxl::Plane.97"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #9
  %47 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 1, i32 0, i32 5
  %48 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %2, i64 0, i32 0, i32 5
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  store i8* null, i8** %49, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 %51, i64* %54, align 8
  %55 = icmp eq i8* %53, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %43
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %53) #9
  br label %57

57:                                               ; preds = %43, %56
  %58 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 2
  %59 = bitcast %"class.jxl::Plane.97"* %58 to i8*
  %60 = bitcast %"class.jxl::Plane.97"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #9
  %61 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %0, i64 0, i32 0, i64 2, i32 0, i32 5
  %62 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0, i32 5
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store i8* null, i8** %63, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %65, i64* %68, align 8
  %69 = icmp eq i8* %67, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %57
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %67) #9
  br label %71

71:                                               ; preds = %57, %70
  ret void
}

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl6FieldsD2Ev(%"class.jxl::Fields"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3jxl12CacheAligned4FreeEPKv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #12

declare void @_ZN3jxl11OpsinParams4InitEf(%"struct.jxl::OpsinParams"*, float) local_unnamed_addr #1

declare void @_ZN3jxl13OpsinToLinearERKNS_6Image3IfEERKNS_4RectEPNS_10ThreadPoolEPS1_RKNS_11OpsinParamsE(%"class.jxl::Image3"* dereferenceable(96), %"class.jxl::Rect"* dereferenceable(32), %"class.jxl::ThreadPool"*, %"class.jxl::Image3"*, %"struct.jxl::OpsinParams"* dereferenceable(192)) local_unnamed_addr #1

declare dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding10LinearSRGBEb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl14ConvertToFloatIfEENS_6Image3IfEERKNS1_IT_EE(%"class.jxl::Image3"* noalias sret, %"class.jxl::Image3"* dereferenceable(96)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.jxl::Plane.97", align 8
  %4 = alloca %"class.jxl::Plane.97", align 8
  %5 = alloca %"class.jxl::Plane.97", align 8
  %6 = bitcast %"class.jxl::Plane.97"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0, i32 4
  %8 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false) #9, !alias.scope !84
  %10 = load i32, i32* %9, align 8, !noalias !84
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4, !noalias !84
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %3, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %15, i64 %11, i64 %14, i64 4) #9
  %16 = load i32, i32* %12, align 4, !noalias !84
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %62, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 0, i32 0, i32 4
  %21 = load i32, i32* %9, align 8, !noalias !84
  br label %22

22:                                               ; preds = %45, %18
  %23 = phi i32 [ %16, %18 ], [ %46, %45 ]
  %24 = phi i32 [ %21, %18 ], [ %47, %45 ]
  %25 = phi i64 [ 0, %18 ], [ %48, %45 ]
  %26 = load i8*, i8** %19, align 8, !noalias !84
  %27 = load i64, i64* %20, align 8, !noalias !84
  %28 = mul i64 %27, %25
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = ptrtoint i8* %29 to i64
  %31 = and i64 %30, 63
  %32 = icmp eq i64 %31, 0
  call void @llvm.assume(i1 %32) #9
  %33 = bitcast i8* %29 to float*
  %34 = load i8*, i8** %8, align 8, !alias.scope !84
  %35 = load i64, i64* %7, align 8, !alias.scope !84
  %36 = mul i64 %35, %25
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, 63
  %40 = icmp eq i64 %39, 0
  call void @llvm.assume(i1 %40) #9
  %41 = bitcast i8* %37 to float*
  %42 = icmp eq i32 %24, 0
  br i1 %42, label %45, label %51

43:                                               ; preds = %51
  %44 = load i32, i32* %12, align 4, !noalias !84
  br label %45

45:                                               ; preds = %43, %22
  %46 = phi i32 [ %44, %43 ], [ %23, %22 ]
  %47 = phi i32 [ %59, %43 ], [ 0, %22 ]
  %48 = add nuw nsw i64 %25, 1
  %49 = zext i32 %46 to i64
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %22, label %62

51:                                               ; preds = %22, %51
  %52 = phi i64 [ %58, %51 ], [ 0, %22 ]
  %53 = getelementptr inbounds float, float* %33, i64 %52
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds float, float* %41, i64 %52
  %57 = bitcast float* %56 to i32*
  store i32 %55, i32* %57, align 4
  %58 = add nuw nsw i64 %52, 1
  %59 = load i32, i32* %9, align 8, !noalias !84
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %58, %60
  br i1 %61, label %51, label %43

62:                                               ; preds = %45, %2
  %63 = bitcast %"class.jxl::Plane.97"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #9
  %64 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %4, i64 0, i32 0, i32 4
  %65 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 32, i1 false) #9, !alias.scope !87
  %67 = load i32, i32* %66, align 8, !noalias !87
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 1, i32 0, i32 1
  %70 = load i32, i32* %69, align 4, !noalias !87
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %4, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %72, i64 %68, i64 %71, i64 4) #9
  %73 = load i32, i32* %69, align 4, !noalias !87
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %119, label %75

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 1, i32 0, i32 4
  %78 = load i32, i32* %66, align 8, !noalias !87
  br label %79

79:                                               ; preds = %102, %75
  %80 = phi i32 [ %73, %75 ], [ %103, %102 ]
  %81 = phi i32 [ %78, %75 ], [ %104, %102 ]
  %82 = phi i64 [ 0, %75 ], [ %105, %102 ]
  %83 = load i8*, i8** %76, align 8, !noalias !87
  %84 = load i64, i64* %77, align 8, !noalias !87
  %85 = mul i64 %84, %82
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = ptrtoint i8* %86 to i64
  %88 = and i64 %87, 63
  %89 = icmp eq i64 %88, 0
  call void @llvm.assume(i1 %89) #9
  %90 = bitcast i8* %86 to float*
  %91 = load i8*, i8** %65, align 8, !alias.scope !87
  %92 = load i64, i64* %64, align 8, !alias.scope !87
  %93 = mul i64 %92, %82
  %94 = getelementptr inbounds i8, i8* %91, i64 %93
  %95 = ptrtoint i8* %94 to i64
  %96 = and i64 %95, 63
  %97 = icmp eq i64 %96, 0
  call void @llvm.assume(i1 %97) #9
  %98 = bitcast i8* %94 to float*
  %99 = icmp eq i32 %81, 0
  br i1 %99, label %102, label %108

100:                                              ; preds = %108
  %101 = load i32, i32* %69, align 4, !noalias !87
  br label %102

102:                                              ; preds = %100, %79
  %103 = phi i32 [ %101, %100 ], [ %80, %79 ]
  %104 = phi i32 [ %116, %100 ], [ 0, %79 ]
  %105 = add nuw nsw i64 %82, 1
  %106 = zext i32 %103 to i64
  %107 = icmp ult i64 %105, %106
  br i1 %107, label %79, label %119

108:                                              ; preds = %79, %108
  %109 = phi i64 [ %115, %108 ], [ 0, %79 ]
  %110 = getelementptr inbounds float, float* %90, i64 %109
  %111 = bitcast float* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds float, float* %98, i64 %109
  %114 = bitcast float* %113 to i32*
  store i32 %112, i32* %114, align 4
  %115 = add nuw nsw i64 %109, 1
  %116 = load i32, i32* %66, align 8, !noalias !87
  %117 = zext i32 %116 to i64
  %118 = icmp ult i64 %115, %117
  br i1 %118, label %108, label %100

119:                                              ; preds = %102, %62
  %120 = bitcast %"class.jxl::Plane.97"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #9
  %121 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %5, i64 0, i32 0, i32 4
  %122 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %5, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 32, i1 false) #9, !alias.scope !90
  %124 = load i32, i32* %123, align 8, !noalias !90
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 2, i32 0, i32 1
  %127 = load i32, i32* %126, align 4, !noalias !90
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %5, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %129, i64 %125, i64 %128, i64 4) #9
  %130 = load i32, i32* %126, align 4, !noalias !90
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %176, label %132

132:                                              ; preds = %119
  %133 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.jxl::Image3", %"class.jxl::Image3"* %1, i64 0, i32 0, i64 2, i32 0, i32 4
  %135 = load i32, i32* %123, align 8, !noalias !90
  br label %136

136:                                              ; preds = %159, %132
  %137 = phi i32 [ %130, %132 ], [ %160, %159 ]
  %138 = phi i32 [ %135, %132 ], [ %161, %159 ]
  %139 = phi i64 [ 0, %132 ], [ %162, %159 ]
  %140 = load i8*, i8** %133, align 8, !noalias !90
  %141 = load i64, i64* %134, align 8, !noalias !90
  %142 = mul i64 %141, %139
  %143 = getelementptr inbounds i8, i8* %140, i64 %142
  %144 = ptrtoint i8* %143 to i64
  %145 = and i64 %144, 63
  %146 = icmp eq i64 %145, 0
  call void @llvm.assume(i1 %146) #9
  %147 = bitcast i8* %143 to float*
  %148 = load i8*, i8** %122, align 8, !alias.scope !90
  %149 = load i64, i64* %121, align 8, !alias.scope !90
  %150 = mul i64 %149, %139
  %151 = getelementptr inbounds i8, i8* %148, i64 %150
  %152 = ptrtoint i8* %151 to i64
  %153 = and i64 %152, 63
  %154 = icmp eq i64 %153, 0
  call void @llvm.assume(i1 %154) #9
  %155 = bitcast i8* %151 to float*
  %156 = icmp eq i32 %138, 0
  br i1 %156, label %159, label %165

157:                                              ; preds = %165
  %158 = load i32, i32* %126, align 4, !noalias !90
  br label %159

159:                                              ; preds = %157, %136
  %160 = phi i32 [ %158, %157 ], [ %137, %136 ]
  %161 = phi i32 [ %173, %157 ], [ 0, %136 ]
  %162 = add nuw nsw i64 %139, 1
  %163 = zext i32 %160 to i64
  %164 = icmp ult i64 %162, %163
  br i1 %164, label %136, label %176

165:                                              ; preds = %136, %165
  %166 = phi i64 [ %172, %165 ], [ 0, %136 ]
  %167 = getelementptr inbounds float, float* %147, i64 %166
  %168 = bitcast float* %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds float, float* %155, i64 %166
  %171 = bitcast float* %170 to i32*
  store i32 %169, i32* %171, align 4
  %172 = add nuw nsw i64 %166, 1
  %173 = load i32, i32* %123, align 8, !noalias !90
  %174 = zext i32 %173 to i64
  %175 = icmp ult i64 %172, %174
  br i1 %175, label %165, label %157

176:                                              ; preds = %159, %119
  call void @_ZN3jxl6Image3IfEC2EONS_5PlaneIfEES4_S4_(%"class.jxl::Image3"* %0, %"class.jxl::Plane.97"* nonnull dereferenceable(32) %3, %"class.jxl::Plane.97"* nonnull dereferenceable(32) %4, %"class.jxl::Plane.97"* nonnull dereferenceable(32) %5)
  %177 = load i8*, i8** %122, align 8
  store i8* null, i8** %122, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %177) #9
  br label %180

180:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #9
  %181 = load i8*, i8** %65, align 8
  store i8* null, i8** %65, align 8
  %182 = icmp eq i8* %181, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %180
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %181) #9
  br label %184

184:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #9
  %185 = load i8*, i8** %8, align 8
  store i8* null, i8** %8, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %185) #9
  br label %188

188:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"*, i64, i64, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl14QuantizedPatchC2Ev(%"struct.jxl::QuantizedPatch"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0
  %3 = getelementptr %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0
  %4 = bitcast %"class.std::__1::vector.271"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 144, i1 false)
  tail call void @_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm(%"class.std::__1::vector.271"* %2, i64 1024) #9
  %5 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %6 = bitcast float** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.278"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %11 = sub i64 %7, %9
  %12 = ashr exact i64 %11, 2
  %13 = icmp ult i64 %12, 1024
  %14 = inttoptr i64 %9 to float*
  br i1 %13, label %15, label %17

15:                                               ; preds = %1
  %16 = sub nuw nsw i64 1024, %12
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.278"* %3, i64 %16) #9
  br label %21

17:                                               ; preds = %1
  %18 = icmp eq i64 %11, 4096
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds float, float* %14, i64 1024
  store float* %20, float** %10, align 8
  br label %21

21:                                               ; preds = %17, %15, %19
  %22 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1
  %23 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.271"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp ult i64 %28, 1024
  %30 = inttoptr i64 %27 to i8*
  br i1 %29, label %35, label %31

31:                                               ; preds = %21
  %32 = icmp eq i64 %28, 1024
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %30, i64 1024
  store i8* %34, i8** %23, align 8
  br label %37

35:                                               ; preds = %21
  %36 = sub nuw nsw i64 1024, %28
  tail call void @_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm(%"class.std::__1::vector.271"* %22, i64 %36) #9
  br label %37

37:                                               ; preds = %35, %33, %31
  %38 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1
  %39 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %40 = bitcast float** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.278"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp ult i64 %45, 1024
  %47 = inttoptr i64 %43 to float*
  br i1 %46, label %52, label %48

48:                                               ; preds = %37
  %49 = icmp eq i64 %44, 4096
  br i1 %49, label %54, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds float, float* %47, i64 1024
  store float* %51, float** %39, align 8
  br label %54

52:                                               ; preds = %37
  %53 = sub nuw nsw i64 1024, %45
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.278"* %38, i64 %53) #9
  br label %54

54:                                               ; preds = %52, %50, %48
  %55 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2
  %56 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.271"* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = icmp ult i64 %61, 1024
  %63 = inttoptr i64 %60 to i8*
  br i1 %62, label %68, label %64

64:                                               ; preds = %54
  %65 = icmp eq i64 %61, 1024
  br i1 %65, label %70, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds i8, i8* %63, i64 1024
  store i8* %67, i8** %56, align 8
  br label %70

68:                                               ; preds = %54
  %69 = sub nuw nsw i64 1024, %61
  tail call void @_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm(%"class.std::__1::vector.271"* %55, i64 %69) #9
  br label %70

70:                                               ; preds = %68, %66, %64
  %71 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2
  %72 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %73 = bitcast float** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector.278"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 2
  %79 = icmp ult i64 %78, 1024
  %80 = inttoptr i64 %76 to float*
  br i1 %79, label %85, label %81

81:                                               ; preds = %70
  %82 = icmp eq i64 %77, 4096
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds float, float* %80, i64 1024
  store float* %84, float** %72, align 8
  br label %87

85:                                               ; preds = %70
  %86 = sub nuw nsw i64 1024, %78
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.278"* %71, i64 %86) #9
  br label %87

87:                                               ; preds = %85, %83, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm(%"class.std::__1::vector.271"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.271"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.271"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #18
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #19
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #19
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.278"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #18
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #18
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #19
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #9
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #9
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #19
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(%"class.std::__1::vector.268"*, %"struct.std::__1::__split_buffer.431"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %1, i64 0, i32 1
  %8 = icmp eq %"struct.std::__1::pair.270"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"struct.std::__1::pair.270"* %4 to i64
  %11 = bitcast %"struct.std::__1::pair.270"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.268"* %0 to i64*
  br label %150

14:                                               ; preds = %2
  %15 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %7, align 8
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.std::__1::pair.270"* [ %143, %16 ], [ %15, %14 ]
  %18 = phi %"struct.std::__1::pair.270"* [ %20, %16 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1
  %20 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1
  %21 = bitcast %"struct.std::__1::pair.270"* %19 to i8*
  %22 = bitcast %"struct.std::__1::pair.270"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false) #9
  %23 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 0
  %24 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 0
  %25 = bitcast %"class.std::__1::vector.271"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #9
  %26 = bitcast %"class.std::__1::vector.271"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.271"* %23 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 1
  %33 = bitcast i8** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast i8** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.std::__1::vector.271"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #9
  %40 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 1
  %42 = bitcast %"class.std::__1::vector.271"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #9
  %43 = bitcast %"class.std::__1::vector.271"* %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.271"* %40 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast i8** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.std::__1::vector.271"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #9
  %57 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 2
  %58 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 2
  %59 = bitcast %"class.std::__1::vector.271"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #9
  %60 = bitcast %"class.std::__1::vector.271"* %58 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.271"* %57 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 1
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 1
  %67 = bitcast i8** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast i8** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast i8** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast %"class.std::__1::vector.271"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #9
  %74 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 0
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 0
  %76 = bitcast %"class.std::__1::vector.278"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #9
  %77 = bitcast %"class.std::__1::vector.278"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::vector.278"* %74 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 1
  %81 = bitcast float** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 1
  %84 = bitcast float** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %86 = bitcast float** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast float** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast %"class.std::__1::vector.278"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #9
  %91 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 1
  %92 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 1
  %93 = bitcast %"class.std::__1::vector.278"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #9
  %94 = bitcast %"class.std::__1::vector.278"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.278"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 1
  %98 = bitcast float** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 1
  %101 = bitcast float** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast float** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %106 = bitcast float** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast %"class.std::__1::vector.278"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #9
  %108 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 2
  %109 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 2
  %110 = bitcast %"class.std::__1::vector.278"* %108 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #9
  %111 = bitcast %"class.std::__1::vector.278"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.std::__1::vector.278"* %108 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 1
  %115 = bitcast float** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 1
  %118 = bitcast float** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast float** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast float** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast %"class.std::__1::vector.278"* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #9
  %125 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 1
  %126 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 1
  %127 = bitcast %"class.std::__1::vector.284"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #9
  %128 = bitcast %"class.std::__1::vector.284"* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::vector.284"* %125 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 1, i32 0, i32 1
  %132 = bitcast %"struct.std::__1::pair.286"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 1, i32 0, i32 1
  %135 = bitcast %"struct.std::__1::pair.286"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast %"struct.std::__1::pair.286"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"struct.std::__1::pair.286"** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast %"class.std::__1::vector.284"* %126 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #9
  %142 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %7, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %142, i64 -1
  store %"struct.std::__1::pair.270"* %143, %"struct.std::__1::pair.270"** %7, align 8
  %144 = icmp eq %"struct.std::__1::pair.270"* %20, %4
  br i1 %144, label %145, label %16

145:                                              ; preds = %16
  %146 = ptrtoint %"struct.std::__1::pair.270"* %143 to i64
  %147 = bitcast %"class.std::__1::vector.268"* %0 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"struct.std::__1::pair.270"** %7 to i64*
  br label %150

150:                                              ; preds = %9, %145
  %151 = phi i64* [ %11, %9 ], [ %149, %145 ]
  %152 = phi i64* [ %13, %9 ], [ %147, %145 ]
  %153 = phi i64 [ %12, %9 ], [ %146, %145 ]
  %154 = phi i64 [ %10, %9 ], [ %148, %145 ]
  store i64 %153, i64* %152, align 8
  store i64 %154, i64* %151, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %1, i64 0, i32 2
  %156 = bitcast %"struct.std::__1::pair.270"** %5 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"struct.std::__1::pair.270"** %155 to i64*
  %159 = load i64, i64* %158, align 8
  store i64 %159, i64* %156, align 8
  store i64 %157, i64* %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %1, i64 0, i32 3, i32 0, i32 0
  %162 = bitcast %"struct.std::__1::pair.270"** %160 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"struct.std::__1::pair.270"** %161 to i64*
  %165 = load i64, i64* %164, align 8
  store i64 %165, i64* %162, align 8
  store i64 %163, i64* %164, align 8
  %166 = load i64, i64* %151, align 8
  %167 = bitcast %"struct.std::__1::__split_buffer.431"* %1 to i64*
  store i64 %166, i64* %167, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEERNS6_IS9_EEED2Ev(%"struct.std::__1::__split_buffer.431"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %0, i64 0, i32 1
  %3 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.270"* %5, %3
  br i1 %6, label %72, label %7

7:                                                ; preds = %1, %69
  %8 = phi %"struct.std::__1::pair.270"* [ %70, %69 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1
  store %"struct.std::__1::pair.270"* %9, %"struct.std::__1::pair.270"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 1, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair.286"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint %"struct.std::__1::pair.286"* %11 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 1, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair.286"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.std::__1::pair.286"* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #19
  br label %18

18:                                               ; preds = %13, %7
  %19 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 0
  %20 = load float*, float** %19, align 8
  %21 = icmp eq float* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = ptrtoint float* %20 to i64
  %24 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 1
  %25 = bitcast float** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast float* %20 to i8*
  tail call void @_ZdlPv(i8* %26) #19
  br label %27

27:                                               ; preds = %22, %18
  %28 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 0
  %29 = load float*, float** %28, align 8
  %30 = icmp eq float* %29, null
  br i1 %30, label %56, label %51

31:                                               ; preds = %65
  %32 = ptrtoint i8* %67 to i64
  %33 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 1
  %34 = bitcast i8** %33 to i64*
  store i64 %32, i64* %34, align 8
  tail call void @_ZdlPv(i8* nonnull %67) #19
  br label %35

35:                                               ; preds = %65, %31
  %36 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = ptrtoint i8* %37 to i64
  %41 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  store i64 %40, i64* %42, align 8
  tail call void @_ZdlPv(i8* nonnull %37) #19
  br label %43

43:                                               ; preds = %39, %35
  %44 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %69, label %47

47:                                               ; preds = %43
  %48 = ptrtoint i8* %45 to i64
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  store i64 %48, i64* %50, align 8
  tail call void @_ZdlPv(i8* nonnull %45) #19
  br label %69

51:                                               ; preds = %27
  %52 = ptrtoint float* %29 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 1
  %54 = bitcast float** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast float* %29 to i8*
  tail call void @_ZdlPv(i8* %55) #19
  br label %56

56:                                               ; preds = %51, %27
  %57 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 0
  %58 = load float*, float** %57, align 8
  %59 = icmp eq float* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint float* %58 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 1
  %63 = bitcast float** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast float* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #19
  br label %65

65:                                               ; preds = %60, %56
  %66 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %35, label %31

69:                                               ; preds = %43, %47
  %70 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %4, align 8
  %71 = icmp eq %"struct.std::__1::pair.270"* %70, %3
  br i1 %71, label %72, label %7

72:                                               ; preds = %69, %1
  %73 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %0, i64 0, i32 0
  %74 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %73, align 8
  %75 = icmp eq %"struct.std::__1::pair.270"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = bitcast %"struct.std::__1::pair.270"* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #19
  br label %78

78:                                               ; preds = %72, %76
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.trunc.f32(float) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::__less.434"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %658, %3
  %5 = phi %"struct.std::__1::pair.270"* [ %1, %3 ], [ %587, %658 ]
  %6 = phi %"struct.std::__1::pair.270"* [ %0, %3 ], [ %23, %658 ]
  %7 = ptrtoint %"struct.std::__1::pair.270"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -2
  %10 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1
  %14 = bitcast %"class.std::__1::vector.284"* %13 to i64*
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair.286"** %15 to i64*
  %17 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.std::__1::pair.286"** %17 to i64*
  %19 = ptrtoint %"struct.std::__1::pair.270"* %5 to i64
  br label %20

20:                                               ; preds = %669, %4
  %21 = phi %"struct.std::__1::pair.270"* [ %6, %4 ], [ %670, %669 ]
  br label %22

22:                                               ; preds = %364, %20
  %23 = phi %"struct.std::__1::pair.270"* [ %21, %20 ], [ %317, %364 ]
  %24 = ptrtoint %"struct.std::__1::pair.270"* %23 to i64
  %25 = sub i64 %7, %24
  %26 = sdiv exact i64 %25, 184
  switch i64 %26, label %102 [
    i64 0, label %673
    i64 1, label %673
    i64 2, label %27
    i64 3, label %87
    i64 4, label %91
    i64 5, label %96
  ]

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 0
  %30 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %28, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %29) #9
  br i1 %30, label %68, label %31

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %29, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %28) #9
  br i1 %32, label %673, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 1
  %35 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 1
  %39 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %38, align 8
  %40 = icmp eq %"struct.std::__1::pair.286"* %37, %39
  br i1 %40, label %673, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 0
  %43 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %42, align 8
  br label %44

44:                                               ; preds = %64, %41
  %45 = phi %"struct.std::__1::pair.286"* [ %65, %64 ], [ %43, %41 ]
  %46 = phi %"struct.std::__1::pair.286"* [ %66, %64 ], [ %37, %41 ]
  %47 = icmp eq %"struct.std::__1::pair.286"* %45, %35
  br i1 %47, label %68, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %45, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %46, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp ult i32 %50, %52
  br i1 %53, label %68, label %54

54:                                               ; preds = %48
  %55 = icmp ult i32 %52, %50
  br i1 %55, label %673, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %45, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %46, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %58, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = icmp ult i32 %60, %58
  br i1 %63, label %673, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %45, i64 1
  %66 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %46, i64 1
  %67 = icmp eq %"struct.std::__1::pair.286"* %66, %39
  br i1 %67, label %673, label %44

68:                                               ; preds = %56, %48, %44, %27
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %29, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %28) #9
  %69 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1
  %71 = bitcast %"class.std::__1::vector.284"* %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::vector.284"* %70 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %71, align 8
  store i64 %72, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 1
  %77 = bitcast %"struct.std::__1::pair.286"** %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"struct.std::__1::pair.286"** %76 to i64*
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %77, align 8
  store i64 %78, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"struct.std::__1::pair.286"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.std::__1::pair.286"** %82 to i64*
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %83, align 8
  store i64 %84, i64* %85, align 8
  br label %673

87:                                               ; preds = %22
  %88 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 1
  %89 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %90 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %88, %"struct.std::__1::pair.270"* %89, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %673

91:                                               ; preds = %22
  %92 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 1
  %93 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 2
  %94 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %95 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %92, %"struct.std::__1::pair.270"* %93, %"struct.std::__1::pair.270"* %94, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %673

96:                                               ; preds = %22
  %97 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 2
  %99 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 3
  %100 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %101 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %97, %"struct.std::__1::pair.270"* %98, %"struct.std::__1::pair.270"* %99, %"struct.std::__1::pair.270"* %100, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %673

102:                                              ; preds = %22
  %103 = icmp slt i64 %25, 1288
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %5, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %673

105:                                              ; preds = %102
  %106 = icmp sgt i64 %25, 183816
  %107 = udiv i64 %25, 368
  %108 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 %107
  br i1 %106, label %109, label %114

109:                                              ; preds = %105
  %110 = udiv i64 %25, 736
  %111 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 %110
  %112 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %108, i64 %110
  %113 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %111, %"struct.std::__1::pair.270"* %108, %"struct.std::__1::pair.270"* %112, %"struct.std::__1::pair.270"* %8, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %116

114:                                              ; preds = %105
  %115 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %108, %"struct.std::__1::pair.270"* %8, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %116

116:                                              ; preds = %114, %109
  %117 = phi i32 [ %113, %109 ], [ %115, %114 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %108, i64 0, i32 0
  %120 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %118, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %119) #9
  br i1 %120, label %449, label %121

121:                                              ; preds = %116
  %122 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %119, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %118) #9
  br i1 %122, label %158, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 1
  %125 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 %107, i32 1, i32 0, i32 0
  %127 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 %107, i32 1, i32 0, i32 1
  %129 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %128, align 8
  %130 = icmp eq %"struct.std::__1::pair.286"* %127, %129
  br i1 %130, label %158, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 0
  %133 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %132, align 8
  br label %134

134:                                              ; preds = %154, %131
  %135 = phi %"struct.std::__1::pair.286"* [ %155, %154 ], [ %133, %131 ]
  %136 = phi %"struct.std::__1::pair.286"* [ %156, %154 ], [ %127, %131 ]
  %137 = icmp eq %"struct.std::__1::pair.286"* %135, %125
  br i1 %137, label %449, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %136, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp ult i32 %140, %142
  br i1 %143, label %449, label %144

144:                                              ; preds = %138
  %145 = icmp ult i32 %142, %140
  br i1 %145, label %158, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %136, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp ult i32 %148, %150
  br i1 %151, label %449, label %152

152:                                              ; preds = %146
  %153 = icmp ult i32 %150, %148
  br i1 %153, label %158, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 1
  %156 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %136, i64 1
  %157 = icmp eq %"struct.std::__1::pair.286"* %156, %129
  br i1 %157, label %158, label %134

158:                                              ; preds = %144, %152, %154, %121, %123
  %159 = icmp eq %"struct.std::__1::pair.270"* %23, %9
  br i1 %159, label %163, label %160

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 %107, i32 1, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 %107, i32 1, i32 0, i32 1
  br label %386

163:                                              ; preds = %426, %158
  %164 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 1
  %165 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %118, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %10) #9
  br i1 %165, label %262, label %166

166:                                              ; preds = %163
  %167 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %10, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %118) #9
  br i1 %167, label %201, label %168

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 1
  %170 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %169, align 8
  %171 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %11, align 8
  %172 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %12, align 8
  %173 = icmp eq %"struct.std::__1::pair.286"* %171, %172
  br i1 %173, label %201, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 0
  %176 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %175, align 8
  br label %177

177:                                              ; preds = %197, %174
  %178 = phi %"struct.std::__1::pair.286"* [ %198, %197 ], [ %176, %174 ]
  %179 = phi %"struct.std::__1::pair.286"* [ %199, %197 ], [ %171, %174 ]
  %180 = icmp eq %"struct.std::__1::pair.286"* %178, %170
  br i1 %180, label %262, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %178, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %179, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp ult i32 %183, %185
  br i1 %186, label %262, label %187

187:                                              ; preds = %181
  %188 = icmp ult i32 %185, %183
  br i1 %188, label %201, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %178, i64 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %179, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = icmp ult i32 %191, %193
  br i1 %194, label %262, label %195

195:                                              ; preds = %189
  %196 = icmp ult i32 %193, %191
  br i1 %196, label %201, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %178, i64 1
  %199 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %179, i64 1
  %200 = icmp eq %"struct.std::__1::pair.286"* %199, %172
  br i1 %200, label %201, label %177

201:                                              ; preds = %187, %195, %197, %166, %168
  %202 = icmp eq %"struct.std::__1::pair.270"* %164, %8
  br i1 %202, label %673, label %203

203:                                              ; preds = %201
  %204 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 1
  %205 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 0
  br label %206

206:                                              ; preds = %203, %259
  %207 = phi %"struct.std::__1::pair.270"* [ %164, %203 ], [ %260, %259 ]
  %208 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 0, i32 0
  %209 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %118, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %208) #9
  br i1 %209, label %245, label %210

210:                                              ; preds = %206
  %211 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %208, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %118) #9
  br i1 %211, label %259, label %212

212:                                              ; preds = %210
  %213 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %204, align 8
  %214 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 0, i32 1, i32 0, i32 0
  %215 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %214, align 8
  %216 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 0, i32 1, i32 0, i32 1
  %217 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %216, align 8
  %218 = icmp eq %"struct.std::__1::pair.286"* %215, %217
  br i1 %218, label %259, label %219

219:                                              ; preds = %212
  %220 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %205, align 8
  br label %221

221:                                              ; preds = %241, %219
  %222 = phi %"struct.std::__1::pair.286"* [ %242, %241 ], [ %220, %219 ]
  %223 = phi %"struct.std::__1::pair.286"* [ %243, %241 ], [ %215, %219 ]
  %224 = icmp eq %"struct.std::__1::pair.286"* %222, %213
  br i1 %224, label %245, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %222, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %223, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = icmp ult i32 %227, %229
  br i1 %230, label %245, label %231

231:                                              ; preds = %225
  %232 = icmp ult i32 %229, %227
  br i1 %232, label %259, label %233

233:                                              ; preds = %231
  %234 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %222, i64 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %223, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = icmp ult i32 %235, %237
  br i1 %238, label %245, label %239

239:                                              ; preds = %233
  %240 = icmp ult i32 %237, %235
  br i1 %240, label %259, label %241

241:                                              ; preds = %239
  %242 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %222, i64 1
  %243 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %223, i64 1
  %244 = icmp eq %"struct.std::__1::pair.286"* %243, %217
  br i1 %244, label %259, label %221

245:                                              ; preds = %206, %233, %225, %221
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %208, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %10) #9
  %246 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 0, i32 1
  %247 = bitcast %"class.std::__1::vector.284"* %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = load i64, i64* %14, align 8
  store i64 %249, i64* %247, align 8
  store i64 %248, i64* %14, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 0, i32 1, i32 0, i32 1
  %251 = bitcast %"struct.std::__1::pair.286"** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = load i64, i64* %16, align 8
  store i64 %253, i64* %251, align 8
  store i64 %252, i64* %16, align 8
  %254 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %255 = bitcast %"struct.std::__1::pair.286"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = load i64, i64* %18, align 8
  store i64 %257, i64* %255, align 8
  store i64 %256, i64* %18, align 8
  %258 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 1
  br label %262

259:                                              ; preds = %239, %241, %231, %210, %212
  %260 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %207, i64 1
  %261 = icmp eq %"struct.std::__1::pair.270"* %260, %8
  br i1 %261, label %673, label %206

262:                                              ; preds = %181, %177, %189, %163, %245
  %263 = phi %"struct.std::__1::pair.270"* [ %258, %245 ], [ %164, %163 ], [ %164, %189 ], [ %164, %177 ], [ %164, %181 ]
  %264 = icmp eq %"struct.std::__1::pair.270"* %263, %8
  br i1 %264, label %673, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 1
  %267 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 0
  br label %268

268:                                              ; preds = %265, %366
  %269 = phi %"struct.std::__1::pair.270"* [ %385, %366 ], [ %263, %265 ]
  %270 = phi %"struct.std::__1::pair.270"* [ %325, %366 ], [ %8, %265 ]
  %271 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %269, i64 0, i32 0
  %272 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %118, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %271) #9
  br i1 %272, label %316, label %273

273:                                              ; preds = %268, %319
  %274 = phi %"struct.jxl::QuantizedPatch"* [ %321, %319 ], [ %271, %268 ]
  %275 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %274, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %118) #9
  br i1 %275, label %319, label %276

276:                                              ; preds = %273
  %277 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %266, align 8
  %278 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %274, i64 1
  %279 = bitcast %"struct.jxl::QuantizedPatch"* %278 to %"struct.std::__1::pair.286"**
  %280 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %279, align 8
  %281 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %274, i64 1, i32 1
  %282 = bitcast i64* %281 to %"struct.std::__1::pair.286"**
  %283 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %282, align 8
  %284 = icmp eq %"struct.std::__1::pair.286"* %280, %283
  br i1 %284, label %319, label %285

285:                                              ; preds = %276
  %286 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %267, align 8
  br label %287

287:                                              ; preds = %307, %285
  %288 = phi %"struct.std::__1::pair.286"* [ %308, %307 ], [ %286, %285 ]
  %289 = phi %"struct.std::__1::pair.286"* [ %309, %307 ], [ %280, %285 ]
  %290 = icmp eq %"struct.std::__1::pair.286"* %288, %277
  br i1 %290, label %314, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %288, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %289, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp ult i32 %293, %295
  br i1 %296, label %314, label %297

297:                                              ; preds = %291
  %298 = icmp ult i32 %295, %293
  br i1 %298, label %319, label %299

299:                                              ; preds = %297
  %300 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %288, i64 0, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %289, i64 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = icmp ult i32 %301, %303
  br i1 %304, label %314, label %305

305:                                              ; preds = %299
  %306 = icmp ult i32 %303, %301
  br i1 %306, label %319, label %307

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %288, i64 1
  %309 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %289, i64 1
  %310 = icmp eq %"struct.std::__1::pair.286"* %309, %283
  br i1 %310, label %319, label %287

311:                                              ; preds = %319
  %312 = bitcast i8** %320 to %"struct.jxl::QuantizedPatch"*
  %313 = bitcast i8** %320 to %"struct.std::__1::pair.270"*
  br label %316

314:                                              ; preds = %299, %291, %287
  %315 = bitcast %"struct.jxl::QuantizedPatch"* %274 to %"struct.std::__1::pair.270"*
  br label %316

316:                                              ; preds = %314, %311, %268
  %317 = phi %"struct.std::__1::pair.270"* [ %269, %268 ], [ %313, %311 ], [ %315, %314 ]
  %318 = phi %"struct.jxl::QuantizedPatch"* [ %271, %268 ], [ %312, %311 ], [ %274, %314 ]
  br label %323

319:                                              ; preds = %305, %307, %297, %273, %276
  %320 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %274, i64 1, i32 2, i64 0, i32 0, i32 1
  %321 = bitcast i8** %320 to %"struct.jxl::QuantizedPatch"*
  %322 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %118, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %321) #9
  br i1 %322, label %311, label %273

323:                                              ; preds = %328, %316
  %324 = phi %"struct.std::__1::pair.270"* [ %270, %316 ], [ %325, %328 ]
  %325 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %324, i64 -1
  %326 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %325, i64 0, i32 0
  %327 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %118, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %326) #9
  br i1 %327, label %328, label %329

328:                                              ; preds = %352, %344, %340, %323
  br label %323

329:                                              ; preds = %323
  %330 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %326, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %118) #9
  br i1 %330, label %364, label %331

331:                                              ; preds = %329
  %332 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %266, align 8
  %333 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %324, i64 -1, i32 1, i32 0, i32 0
  %334 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %333, align 8
  %335 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %324, i64 -1, i32 1, i32 0, i32 1
  %336 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %335, align 8
  %337 = icmp eq %"struct.std::__1::pair.286"* %334, %336
  br i1 %337, label %364, label %338

338:                                              ; preds = %331
  %339 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %267, align 8
  br label %340

340:                                              ; preds = %360, %338
  %341 = phi %"struct.std::__1::pair.286"* [ %361, %360 ], [ %339, %338 ]
  %342 = phi %"struct.std::__1::pair.286"* [ %362, %360 ], [ %334, %338 ]
  %343 = icmp eq %"struct.std::__1::pair.286"* %341, %332
  br i1 %343, label %328, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %341, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %342, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  %349 = icmp ult i32 %346, %348
  br i1 %349, label %328, label %350

350:                                              ; preds = %344
  %351 = icmp ult i32 %348, %346
  br i1 %351, label %364, label %352

352:                                              ; preds = %350
  %353 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %341, i64 0, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %342, i64 0, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = icmp ult i32 %354, %356
  br i1 %357, label %328, label %358

358:                                              ; preds = %352
  %359 = icmp ult i32 %356, %354
  br i1 %359, label %364, label %360

360:                                              ; preds = %358
  %361 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %341, i64 1
  %362 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %342, i64 1
  %363 = icmp eq %"struct.std::__1::pair.286"* %362, %336
  br i1 %363, label %364, label %340

364:                                              ; preds = %329, %331, %358, %360, %350
  %365 = icmp ult %"struct.std::__1::pair.270"* %317, %325
  br i1 %365, label %366, label %22

366:                                              ; preds = %364
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %318, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %326) #9
  %367 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %317, i64 0, i32 1
  %368 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %324, i64 -1, i32 1
  %369 = bitcast %"class.std::__1::vector.284"* %367 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = bitcast %"class.std::__1::vector.284"* %368 to i64*
  %372 = load i64, i64* %371, align 8
  store i64 %372, i64* %369, align 8
  store i64 %370, i64* %371, align 8
  %373 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %317, i64 0, i32 1, i32 0, i32 1
  %374 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %324, i64 -1, i32 1, i32 0, i32 1
  %375 = bitcast %"struct.std::__1::pair.286"** %373 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = bitcast %"struct.std::__1::pair.286"** %374 to i64*
  %378 = load i64, i64* %377, align 8
  store i64 %378, i64* %375, align 8
  store i64 %376, i64* %377, align 8
  %379 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %317, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %380 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %324, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %381 = bitcast %"struct.std::__1::pair.286"** %379 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"struct.std::__1::pair.286"** %380 to i64*
  %384 = load i64, i64* %383, align 8
  store i64 %384, i64* %381, align 8
  store i64 %382, i64* %383, align 8
  %385 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %317, i64 1
  br label %268

386:                                              ; preds = %160, %426
  %387 = phi %"struct.std::__1::pair.270"* [ %9, %160 ], [ %427, %426 ]
  %388 = phi %"struct.std::__1::pair.270"* [ %8, %160 ], [ %387, %426 ]
  %389 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %387, i64 0, i32 0
  %390 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %389, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %119) #9
  br i1 %390, label %429, label %391

391:                                              ; preds = %386
  %392 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %119, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %389) #9
  br i1 %392, label %426, label %393

393:                                              ; preds = %391
  %394 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %388, i64 -1, i32 1, i32 0, i32 1
  %395 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %394, align 8
  %396 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %161, align 8
  %397 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %162, align 8
  %398 = icmp eq %"struct.std::__1::pair.286"* %396, %397
  br i1 %398, label %426, label %399

399:                                              ; preds = %393
  %400 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %388, i64 -1, i32 1, i32 0, i32 0
  %401 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %400, align 8
  br label %402

402:                                              ; preds = %422, %399
  %403 = phi %"struct.std::__1::pair.286"* [ %423, %422 ], [ %401, %399 ]
  %404 = phi %"struct.std::__1::pair.286"* [ %424, %422 ], [ %396, %399 ]
  %405 = icmp eq %"struct.std::__1::pair.286"* %403, %395
  br i1 %405, label %429, label %406

406:                                              ; preds = %402
  %407 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %403, i64 0, i32 0
  %408 = load i32, i32* %407, align 4
  %409 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %404, i64 0, i32 0
  %410 = load i32, i32* %409, align 4
  %411 = icmp ult i32 %408, %410
  br i1 %411, label %429, label %412

412:                                              ; preds = %406
  %413 = icmp ult i32 %410, %408
  br i1 %413, label %426, label %414

414:                                              ; preds = %412
  %415 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %403, i64 0, i32 1
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %404, i64 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = icmp ult i32 %416, %418
  br i1 %419, label %429, label %420

420:                                              ; preds = %414
  %421 = icmp ult i32 %418, %416
  br i1 %421, label %426, label %422

422:                                              ; preds = %420
  %423 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %403, i64 1
  %424 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %404, i64 1
  %425 = icmp eq %"struct.std::__1::pair.286"* %424, %397
  br i1 %425, label %426, label %402

426:                                              ; preds = %412, %420, %422, %391, %393
  %427 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %387, i64 -1
  %428 = icmp eq %"struct.std::__1::pair.270"* %23, %427
  br i1 %428, label %163, label %386

429:                                              ; preds = %386, %414, %402, %406
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %118, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %389) #9
  %430 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1
  %431 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %388, i64 -1, i32 1
  %432 = bitcast %"class.std::__1::vector.284"* %430 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = bitcast %"class.std::__1::vector.284"* %431 to i64*
  %435 = load i64, i64* %434, align 8
  store i64 %435, i64* %432, align 8
  store i64 %433, i64* %434, align 8
  %436 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 1
  %437 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %388, i64 -1, i32 1, i32 0, i32 1
  %438 = bitcast %"struct.std::__1::pair.286"** %436 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"struct.std::__1::pair.286"** %437 to i64*
  %441 = load i64, i64* %440, align 8
  store i64 %441, i64* %438, align 8
  store i64 %439, i64* %440, align 8
  %442 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %443 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %388, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %444 = bitcast %"struct.std::__1::pair.286"** %442 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"struct.std::__1::pair.286"** %443 to i64*
  %447 = load i64, i64* %446, align 8
  store i64 %447, i64* %444, align 8
  store i64 %445, i64* %446, align 8
  %448 = add i32 %117, 1
  br label %449

449:                                              ; preds = %116, %138, %134, %146, %429
  %450 = phi i32 [ %448, %429 ], [ %117, %146 ], [ %117, %134 ], [ %117, %138 ], [ %117, %116 ]
  %451 = phi %"struct.std::__1::pair.270"* [ %387, %429 ], [ %8, %146 ], [ %8, %134 ], [ %8, %138 ], [ %8, %116 ]
  %452 = ptrtoint %"struct.std::__1::pair.270"* %23 to i64
  %453 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %23, i64 1
  %454 = icmp ult %"struct.std::__1::pair.270"* %453, %451
  br i1 %454, label %455, label %584

455:                                              ; preds = %449, %561
  %456 = phi %"struct.std::__1::pair.270"* [ %582, %561 ], [ %108, %449 ]
  %457 = phi i32 [ %580, %561 ], [ %450, %449 ]
  %458 = phi %"struct.std::__1::pair.270"* [ %583, %561 ], [ %453, %449 ]
  %459 = phi %"struct.std::__1::pair.270"* [ %558, %561 ], [ %451, %449 ]
  %460 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %456, i64 0, i32 0
  %461 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %456, i64 0, i32 1, i32 0, i32 0
  %462 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %456, i64 0, i32 1, i32 0, i32 1
  br label %463

463:                                              ; preds = %506, %455
  %464 = phi %"struct.std::__1::pair.270"* [ %458, %455 ], [ %507, %506 ]
  %465 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 0
  %466 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %465, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %460) #9
  br i1 %466, label %506, label %467

467:                                              ; preds = %463
  %468 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %460, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %465) #9
  br i1 %468, label %502, label %469

469:                                              ; preds = %467
  %470 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1, i32 0, i32 1
  %471 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %470, align 8
  %472 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %461, align 8
  %473 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %462, align 8
  %474 = icmp eq %"struct.std::__1::pair.286"* %472, %473
  br i1 %474, label %502, label %475

475:                                              ; preds = %469
  %476 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1, i32 0, i32 0
  %477 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %476, align 8
  br label %478

478:                                              ; preds = %498, %475
  %479 = phi %"struct.std::__1::pair.286"* [ %499, %498 ], [ %477, %475 ]
  %480 = phi %"struct.std::__1::pair.286"* [ %500, %498 ], [ %472, %475 ]
  %481 = icmp eq %"struct.std::__1::pair.286"* %479, %471
  br i1 %481, label %506, label %482

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %479, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %480, i64 0, i32 0
  %486 = load i32, i32* %485, align 4
  %487 = icmp ult i32 %484, %486
  br i1 %487, label %506, label %488

488:                                              ; preds = %482
  %489 = icmp ult i32 %486, %484
  br i1 %489, label %502, label %490

490:                                              ; preds = %488
  %491 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %479, i64 0, i32 1
  %492 = load i32, i32* %491, align 4
  %493 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %480, i64 0, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = icmp ult i32 %492, %494
  br i1 %495, label %506, label %496

496:                                              ; preds = %490
  %497 = icmp ult i32 %494, %492
  br i1 %497, label %502, label %498

498:                                              ; preds = %496
  %499 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %479, i64 1
  %500 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %480, i64 1
  %501 = icmp eq %"struct.std::__1::pair.286"* %500, %473
  br i1 %501, label %502, label %478

502:                                              ; preds = %467, %469, %488, %496, %498
  %503 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %459, i64 -1
  %504 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %503, i64 0, i32 0
  %505 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %504, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %460) #9
  br i1 %505, label %556, label %508

506:                                              ; preds = %490, %478, %482, %463
  %507 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 1
  br label %463

508:                                              ; preds = %502, %546
  %509 = phi %"struct.jxl::QuantizedPatch"* [ %548, %546 ], [ %504, %502 ]
  %510 = phi %"struct.std::__1::pair.270"* [ %511, %546 ], [ %459, %502 ]
  %511 = bitcast %"struct.jxl::QuantizedPatch"* %509 to %"struct.std::__1::pair.270"*
  %512 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %460, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %509) #9
  br i1 %512, label %546, label %513

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 -1, i32 1, i32 0, i32 1
  %515 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %514, align 8
  %516 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %461, align 8
  %517 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %462, align 8
  %518 = icmp eq %"struct.std::__1::pair.286"* %516, %517
  br i1 %518, label %546, label %519

519:                                              ; preds = %513
  %520 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 -1, i32 1, i32 0, i32 0
  %521 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %520, align 8
  br label %522

522:                                              ; preds = %542, %519
  %523 = phi %"struct.std::__1::pair.286"* [ %543, %542 ], [ %521, %519 ]
  %524 = phi %"struct.std::__1::pair.286"* [ %544, %542 ], [ %516, %519 ]
  %525 = icmp eq %"struct.std::__1::pair.286"* %523, %515
  br i1 %525, label %554, label %526

526:                                              ; preds = %522
  %527 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %523, i64 0, i32 0
  %528 = load i32, i32* %527, align 4
  %529 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %524, i64 0, i32 0
  %530 = load i32, i32* %529, align 4
  %531 = icmp ult i32 %528, %530
  br i1 %531, label %554, label %532

532:                                              ; preds = %526
  %533 = icmp ult i32 %530, %528
  br i1 %533, label %546, label %534

534:                                              ; preds = %532
  %535 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %523, i64 0, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %524, i64 0, i32 1
  %538 = load i32, i32* %537, align 4
  %539 = icmp ult i32 %536, %538
  br i1 %539, label %554, label %540

540:                                              ; preds = %534
  %541 = icmp ult i32 %538, %536
  br i1 %541, label %546, label %542

542:                                              ; preds = %540
  %543 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %523, i64 1
  %544 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %524, i64 1
  %545 = icmp eq %"struct.std::__1::pair.286"* %544, %517
  br i1 %545, label %546, label %522

546:                                              ; preds = %532, %540, %542, %508, %513
  %547 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %509, i64 -2, i32 3, i64 2
  %548 = bitcast %"class.std::__1::vector.278"* %547 to %"struct.jxl::QuantizedPatch"*
  %549 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %548, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %460) #9
  br i1 %549, label %550, label %508

550:                                              ; preds = %546
  %551 = bitcast %"struct.jxl::QuantizedPatch"* %509 to %"struct.std::__1::pair.270"*
  %552 = bitcast %"class.std::__1::vector.278"* %547 to %"struct.jxl::QuantizedPatch"*
  %553 = bitcast %"class.std::__1::vector.278"* %547 to %"struct.std::__1::pair.270"*
  br label %556

554:                                              ; preds = %526, %522, %534
  %555 = bitcast %"struct.jxl::QuantizedPatch"* %509 to %"struct.std::__1::pair.270"*
  br label %556

556:                                              ; preds = %554, %550, %502
  %557 = phi %"struct.std::__1::pair.270"* [ %459, %502 ], [ %551, %550 ], [ %510, %554 ]
  %558 = phi %"struct.std::__1::pair.270"* [ %503, %502 ], [ %553, %550 ], [ %555, %554 ]
  %559 = phi %"struct.jxl::QuantizedPatch"* [ %504, %502 ], [ %552, %550 ], [ %509, %554 ]
  %560 = icmp ugt %"struct.std::__1::pair.270"* %464, %558
  br i1 %560, label %584, label %561

561:                                              ; preds = %556
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %465, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %559) #9
  %562 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1
  %563 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %557, i64 -1, i32 1
  %564 = bitcast %"class.std::__1::vector.284"* %562 to i64*
  %565 = load i64, i64* %564, align 8
  %566 = bitcast %"class.std::__1::vector.284"* %563 to i64*
  %567 = load i64, i64* %566, align 8
  store i64 %567, i64* %564, align 8
  store i64 %565, i64* %566, align 8
  %568 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1, i32 0, i32 1
  %569 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %557, i64 -1, i32 1, i32 0, i32 1
  %570 = bitcast %"struct.std::__1::pair.286"** %568 to i64*
  %571 = load i64, i64* %570, align 8
  %572 = bitcast %"struct.std::__1::pair.286"** %569 to i64*
  %573 = load i64, i64* %572, align 8
  store i64 %573, i64* %570, align 8
  store i64 %571, i64* %572, align 8
  %574 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %575 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %557, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %576 = bitcast %"struct.std::__1::pair.286"** %574 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = bitcast %"struct.std::__1::pair.286"** %575 to i64*
  %579 = load i64, i64* %578, align 8
  store i64 %579, i64* %576, align 8
  store i64 %577, i64* %578, align 8
  %580 = add i32 %457, 1
  %581 = icmp eq %"struct.std::__1::pair.270"* %456, %464
  %582 = select i1 %581, %"struct.std::__1::pair.270"* %558, %"struct.std::__1::pair.270"* %456
  %583 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 1
  br label %455

584:                                              ; preds = %556, %449
  %585 = phi %"struct.std::__1::pair.270"* [ %108, %449 ], [ %456, %556 ]
  %586 = phi i32 [ %450, %449 ], [ %457, %556 ]
  %587 = phi %"struct.std::__1::pair.270"* [ %453, %449 ], [ %464, %556 ]
  %588 = icmp eq %"struct.std::__1::pair.270"* %587, %585
  br i1 %588, label %650, label %589

589:                                              ; preds = %584
  %590 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %585, i64 0, i32 0
  %591 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 0, i32 0
  %592 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %590, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %591) #9
  br i1 %592, label %630, label %593

593:                                              ; preds = %589
  %594 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %591, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %590) #9
  br i1 %594, label %650, label %595

595:                                              ; preds = %593
  %596 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %585, i64 0, i32 1, i32 0, i32 1
  %597 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %596, align 8
  %598 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 0, i32 1, i32 0, i32 0
  %599 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %598, align 8
  %600 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 0, i32 1, i32 0, i32 1
  %601 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %600, align 8
  %602 = icmp eq %"struct.std::__1::pair.286"* %599, %601
  br i1 %602, label %650, label %603

603:                                              ; preds = %595
  %604 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %585, i64 0, i32 1, i32 0, i32 0
  %605 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %604, align 8
  br label %606

606:                                              ; preds = %626, %603
  %607 = phi %"struct.std::__1::pair.286"* [ %627, %626 ], [ %605, %603 ]
  %608 = phi %"struct.std::__1::pair.286"* [ %628, %626 ], [ %599, %603 ]
  %609 = icmp eq %"struct.std::__1::pair.286"* %607, %597
  br i1 %609, label %630, label %610

610:                                              ; preds = %606
  %611 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %607, i64 0, i32 0
  %612 = load i32, i32* %611, align 4
  %613 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %608, i64 0, i32 0
  %614 = load i32, i32* %613, align 4
  %615 = icmp ult i32 %612, %614
  br i1 %615, label %630, label %616

616:                                              ; preds = %610
  %617 = icmp ult i32 %614, %612
  br i1 %617, label %650, label %618

618:                                              ; preds = %616
  %619 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %607, i64 0, i32 1
  %620 = load i32, i32* %619, align 4
  %621 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %608, i64 0, i32 1
  %622 = load i32, i32* %621, align 4
  %623 = icmp ult i32 %620, %622
  br i1 %623, label %630, label %624

624:                                              ; preds = %618
  %625 = icmp ult i32 %622, %620
  br i1 %625, label %650, label %626

626:                                              ; preds = %624
  %627 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %607, i64 1
  %628 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %608, i64 1
  %629 = icmp eq %"struct.std::__1::pair.286"* %628, %601
  br i1 %629, label %650, label %606

630:                                              ; preds = %618, %610, %606, %589
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %591, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %590) #9
  %631 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 0, i32 1
  %632 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %585, i64 0, i32 1
  %633 = bitcast %"class.std::__1::vector.284"* %631 to i64*
  %634 = load i64, i64* %633, align 8
  %635 = bitcast %"class.std::__1::vector.284"* %632 to i64*
  %636 = load i64, i64* %635, align 8
  store i64 %636, i64* %633, align 8
  store i64 %634, i64* %635, align 8
  %637 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 0, i32 1, i32 0, i32 1
  %638 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %585, i64 0, i32 1, i32 0, i32 1
  %639 = bitcast %"struct.std::__1::pair.286"** %637 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = bitcast %"struct.std::__1::pair.286"** %638 to i64*
  %642 = load i64, i64* %641, align 8
  store i64 %642, i64* %639, align 8
  store i64 %640, i64* %641, align 8
  %643 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %644 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %585, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %645 = bitcast %"struct.std::__1::pair.286"** %643 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"struct.std::__1::pair.286"** %644 to i64*
  %648 = load i64, i64* %647, align 8
  store i64 %648, i64* %645, align 8
  store i64 %646, i64* %647, align 8
  %649 = add i32 %586, 1
  br label %650

650:                                              ; preds = %616, %626, %624, %595, %593, %584, %630
  %651 = phi i32 [ %649, %630 ], [ %586, %584 ], [ %586, %593 ], [ %586, %595 ], [ %586, %624 ], [ %586, %626 ], [ %586, %616 ]
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %660

653:                                              ; preds = %650
  %654 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEbT0_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %587, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  %655 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 1
  %656 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEbT0_SE_T_(%"struct.std::__1::pair.270"* %655, %"struct.std::__1::pair.270"* %5, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br i1 %656, label %657, label %659

657:                                              ; preds = %653
  br i1 %654, label %673, label %658

658:                                              ; preds = %657, %671
  br label %4

659:                                              ; preds = %653
  br i1 %654, label %669, label %660

660:                                              ; preds = %659, %650
  %661 = ptrtoint %"struct.std::__1::pair.270"* %587 to i64
  %662 = sub i64 %661, %452
  %663 = sdiv exact i64 %662, 184
  %664 = sub i64 %19, %661
  %665 = sdiv exact i64 %664, 184
  %666 = icmp slt i64 %663, %665
  br i1 %666, label %667, label %671

667:                                              ; preds = %660
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_(%"struct.std::__1::pair.270"* %23, %"struct.std::__1::pair.270"* %587, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  %668 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 1
  br label %669

669:                                              ; preds = %667, %659
  %670 = phi %"struct.std::__1::pair.270"* [ %655, %659 ], [ %668, %667 ]
  br label %20

671:                                              ; preds = %660
  %672 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %587, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_(%"struct.std::__1::pair.270"* %672, %"struct.std::__1::pair.270"* %5, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %658

673:                                              ; preds = %657, %262, %22, %22, %201, %259, %54, %64, %62, %33, %31, %68, %87, %91, %96, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::__less.434"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %5, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %6) #9
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %6, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %5) #9
  br i1 %9, label %45, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %15, align 8
  %17 = icmp eq %"struct.std::__1::pair.286"* %14, %16
  br i1 %17, label %45, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %19, align 8
  br label %21

21:                                               ; preds = %41, %18
  %22 = phi %"struct.std::__1::pair.286"* [ %42, %41 ], [ %20, %18 ]
  %23 = phi %"struct.std::__1::pair.286"* [ %43, %41 ], [ %14, %18 ]
  %24 = icmp eq %"struct.std::__1::pair.286"* %22, %12
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %22, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %23, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %45, label %31

31:                                               ; preds = %25
  %32 = icmp ult i32 %29, %27
  br i1 %32, label %45, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %22, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %23, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp ult i32 %35, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %33
  %40 = icmp ult i32 %37, %35
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %22, i64 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %23, i64 1
  %44 = icmp eq %"struct.std::__1::pair.286"* %43, %16
  br i1 %44, label %45, label %21

45:                                               ; preds = %21, %25, %31, %33, %39, %41, %4, %8, %10
  %46 = phi i1 [ true, %4 ], [ false, %8 ], [ false, %10 ], [ false, %31 ], [ false, %41 ], [ true, %25 ], [ false, %39 ], [ true, %21 ], [ true, %33 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  %48 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %47, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %5) #9
  br i1 %48, label %86, label %49

49:                                               ; preds = %45
  %50 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %5, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %47) #9
  br i1 %50, label %86, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %53 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %55 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %57 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %56, align 8
  %58 = icmp eq %"struct.std::__1::pair.286"* %55, %57
  br i1 %58, label %86, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 0
  %61 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %60, align 8
  br label %62

62:                                               ; preds = %82, %59
  %63 = phi %"struct.std::__1::pair.286"* [ %83, %82 ], [ %61, %59 ]
  %64 = phi %"struct.std::__1::pair.286"* [ %84, %82 ], [ %55, %59 ]
  %65 = icmp eq %"struct.std::__1::pair.286"* %63, %53
  br i1 %65, label %86, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %63, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %64, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp ult i32 %68, %70
  br i1 %71, label %86, label %72

72:                                               ; preds = %66
  %73 = icmp ult i32 %70, %68
  br i1 %73, label %86, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %63, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %64, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp ult i32 %76, %78
  br i1 %79, label %86, label %80

80:                                               ; preds = %74
  %81 = icmp ult i32 %78, %76
  br i1 %81, label %86, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %63, i64 1
  %84 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %64, i64 1
  %85 = icmp eq %"struct.std::__1::pair.286"* %84, %57
  br i1 %85, label %86, label %62

86:                                               ; preds = %62, %66, %72, %74, %80, %82, %45, %49, %51
  %87 = phi i1 [ true, %45 ], [ false, %49 ], [ false, %51 ], [ false, %72 ], [ false, %82 ], [ true, %66 ], [ false, %80 ], [ true, %62 ], [ true, %74 ]
  br i1 %46, label %158, label %88

88:                                               ; preds = %86
  br i1 %87, label %89, label %247

89:                                               ; preds = %88
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %5, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %47) #9
  %90 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %92 = bitcast %"class.std::__1::vector.284"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.284"* %91 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %92, align 8
  store i64 %93, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %98 = bitcast %"struct.std::__1::pair.286"** %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.286"** %97 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %98, align 8
  store i64 %99, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"struct.std::__1::pair.286"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"struct.std::__1::pair.286"** %103 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %104, align 8
  store i64 %105, i64* %106, align 8
  %108 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %5, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %6) #9
  br i1 %108, label %145, label %109

109:                                              ; preds = %89
  %110 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %6, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %5) #9
  br i1 %110, label %247, label %111

111:                                              ; preds = %109
  %112 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %96, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 0
  %114 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %116 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %115, align 8
  %117 = icmp eq %"struct.std::__1::pair.286"* %114, %116
  br i1 %117, label %247, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %120 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %119, align 8
  br label %121

121:                                              ; preds = %141, %118
  %122 = phi %"struct.std::__1::pair.286"* [ %142, %141 ], [ %120, %118 ]
  %123 = phi %"struct.std::__1::pair.286"* [ %143, %141 ], [ %114, %118 ]
  %124 = icmp eq %"struct.std::__1::pair.286"* %122, %112
  br i1 %124, label %145, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %122, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %123, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %127, %129
  br i1 %130, label %145, label %131

131:                                              ; preds = %125
  %132 = icmp ult i32 %129, %127
  br i1 %132, label %247, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %122, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %123, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp ult i32 %135, %137
  br i1 %138, label %145, label %139

139:                                              ; preds = %133
  %140 = icmp ult i32 %137, %135
  br i1 %140, label %247, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %122, i64 1
  %143 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %123, i64 1
  %144 = icmp eq %"struct.std::__1::pair.286"* %143, %116
  br i1 %144, label %247, label %121

145:                                              ; preds = %133, %125, %121, %89
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %6, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %5) #9
  %146 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %147 = bitcast %"class.std::__1::vector.284"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = load i64, i64* %92, align 8
  store i64 %149, i64* %147, align 8
  store i64 %148, i64* %92, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %151 = bitcast %"struct.std::__1::pair.286"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = load i64, i64* %98, align 8
  store i64 %153, i64* %151, align 8
  store i64 %152, i64* %98, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %155 = bitcast %"struct.std::__1::pair.286"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = load i64, i64* %104, align 8
  store i64 %157, i64* %155, align 8
  store i64 %156, i64* %104, align 8
  br label %247

158:                                              ; preds = %86
  br i1 %87, label %159, label %178

159:                                              ; preds = %158
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %6, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %47) #9
  %160 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %161 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %162 = bitcast %"class.std::__1::vector.284"* %160 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.std::__1::vector.284"* %161 to i64*
  %165 = load i64, i64* %164, align 8
  store i64 %165, i64* %162, align 8
  store i64 %163, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %167 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.286"** %166 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::pair.286"** %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %168, align 8
  store i64 %169, i64* %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %174 = bitcast %"struct.std::__1::pair.286"** %172 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"struct.std::__1::pair.286"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %174, align 8
  store i64 %175, i64* %176, align 8
  br label %247

178:                                              ; preds = %158
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %6, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %5) #9
  %179 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %180 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %181 = bitcast %"class.std::__1::vector.284"* %179 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.std::__1::vector.284"* %180 to i64*
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %181, align 8
  store i64 %182, i64* %183, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %186 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %187 = bitcast %"struct.std::__1::pair.286"** %185 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"struct.std::__1::pair.286"** %186 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %187, align 8
  store i64 %188, i64* %189, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %193 = bitcast %"struct.std::__1::pair.286"** %191 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"struct.std::__1::pair.286"** %192 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %193, align 8
  store i64 %194, i64* %195, align 8
  %197 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %47, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %5) #9
  br i1 %197, label %234, label %198

198:                                              ; preds = %178
  %199 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %5, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %47) #9
  br i1 %199, label %247, label %200

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %202 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %204 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %203, align 8
  %205 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %186, align 8
  %206 = icmp eq %"struct.std::__1::pair.286"* %204, %205
  br i1 %206, label %247, label %207

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 0
  %209 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %208, align 8
  br label %210

210:                                              ; preds = %230, %207
  %211 = phi %"struct.std::__1::pair.286"* [ %231, %230 ], [ %209, %207 ]
  %212 = phi %"struct.std::__1::pair.286"* [ %232, %230 ], [ %204, %207 ]
  %213 = icmp eq %"struct.std::__1::pair.286"* %211, %202
  br i1 %213, label %234, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %211, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %212, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = icmp ult i32 %216, %218
  br i1 %219, label %234, label %220

220:                                              ; preds = %214
  %221 = icmp ult i32 %218, %216
  br i1 %221, label %247, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %211, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %212, i64 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = icmp ult i32 %224, %226
  br i1 %227, label %234, label %228

228:                                              ; preds = %222
  %229 = icmp ult i32 %226, %224
  br i1 %229, label %247, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %211, i64 1
  %232 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %212, i64 1
  %233 = icmp eq %"struct.std::__1::pair.286"* %232, %205
  br i1 %233, label %247, label %210

234:                                              ; preds = %222, %214, %210, %178
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %5, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %47) #9
  %235 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %236 = load i64, i64* %183, align 8
  %237 = bitcast %"class.std::__1::vector.284"* %235 to i64*
  %238 = load i64, i64* %237, align 8
  store i64 %238, i64* %183, align 8
  store i64 %236, i64* %237, align 8
  %239 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %240 = load i64, i64* %189, align 8
  %241 = bitcast %"struct.std::__1::pair.286"** %239 to i64*
  %242 = load i64, i64* %241, align 8
  store i64 %242, i64* %189, align 8
  store i64 %240, i64* %241, align 8
  %243 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %244 = load i64, i64* %195, align 8
  %245 = bitcast %"struct.std::__1::pair.286"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %195, align 8
  store i64 %244, i64* %245, align 8
  br label %247

247:                                              ; preds = %131, %141, %139, %220, %230, %228, %200, %198, %111, %109, %234, %145, %88, %159
  %248 = phi i32 [ 1, %159 ], [ 0, %88 ], [ 2, %145 ], [ 2, %234 ], [ 1, %109 ], [ 1, %111 ], [ 1, %198 ], [ 1, %200 ], [ 1, %228 ], [ 1, %230 ], [ 1, %220 ], [ 1, %139 ], [ 1, %141 ], [ 1, %131 ]
  ret i32 %248
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_T_(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::__less.434"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %1, %"struct.std::__1::pair.270"* %2, %"struct.std::__1::__less.434"* dereferenceable(1) %4)
  %7 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %7, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %8) #9
  br i1 %9, label %47, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %8, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %7) #9
  br i1 %11, label %171, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %14 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %18 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.286"* %16, %18
  br i1 %19, label %171, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 0
  %22 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %21, align 8
  br label %23

23:                                               ; preds = %43, %20
  %24 = phi %"struct.std::__1::pair.286"* [ %44, %43 ], [ %22, %20 ]
  %25 = phi %"struct.std::__1::pair.286"* [ %45, %43 ], [ %16, %20 ]
  %26 = icmp eq %"struct.std::__1::pair.286"* %24, %14
  br i1 %26, label %47, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %24, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %25, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ult i32 %29, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %27
  %34 = icmp ult i32 %31, %29
  br i1 %34, label %171, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %24, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %25, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %37, %39
  br i1 %40, label %47, label %41

41:                                               ; preds = %35
  %42 = icmp ult i32 %39, %37
  br i1 %42, label %171, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %24, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %25, i64 1
  %46 = icmp eq %"struct.std::__1::pair.286"* %45, %18
  br i1 %46, label %171, label %23

47:                                               ; preds = %35, %27, %23, %5
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %8, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %7) #9
  %48 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1
  %50 = bitcast %"class.std::__1::vector.284"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.284"* %49 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %56 = bitcast %"struct.std::__1::pair.286"** %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::pair.286"** %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"struct.std::__1::pair.286"** %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.std::__1::pair.286"** %61 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %62, align 8
  store i64 %63, i64* %64, align 8
  %66 = add i32 %6, 1
  %67 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0
  %68 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %8, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %67) #9
  br i1 %68, label %105, label %69

69:                                               ; preds = %47
  %70 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %67, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %8) #9
  br i1 %70, label %171, label %71

71:                                               ; preds = %69
  %72 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %54, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %74 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %76 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %75, align 8
  %77 = icmp eq %"struct.std::__1::pair.286"* %74, %76
  br i1 %77, label %171, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 0
  %80 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %79, align 8
  br label %81

81:                                               ; preds = %101, %78
  %82 = phi %"struct.std::__1::pair.286"* [ %102, %101 ], [ %80, %78 ]
  %83 = phi %"struct.std::__1::pair.286"* [ %103, %101 ], [ %74, %78 ]
  %84 = icmp eq %"struct.std::__1::pair.286"* %82, %72
  br i1 %84, label %105, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %82, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %83, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp ult i32 %87, %89
  br i1 %90, label %105, label %91

91:                                               ; preds = %85
  %92 = icmp ult i32 %89, %87
  br i1 %92, label %171, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %82, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %83, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp ult i32 %95, %97
  br i1 %98, label %105, label %99

99:                                               ; preds = %93
  %100 = icmp ult i32 %97, %95
  br i1 %100, label %171, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %82, i64 1
  %103 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %83, i64 1
  %104 = icmp eq %"struct.std::__1::pair.286"* %103, %76
  br i1 %104, label %171, label %81

105:                                              ; preds = %93, %85, %81, %47
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %67, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %8) #9
  %106 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %107 = bitcast %"class.std::__1::vector.284"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = load i64, i64* %50, align 8
  store i64 %109, i64* %107, align 8
  store i64 %108, i64* %50, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %111 = bitcast %"struct.std::__1::pair.286"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = load i64, i64* %56, align 8
  store i64 %113, i64* %111, align 8
  store i64 %112, i64* %56, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"struct.std::__1::pair.286"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = load i64, i64* %62, align 8
  store i64 %117, i64* %115, align 8
  store i64 %116, i64* %62, align 8
  %118 = add i32 %6, 2
  %119 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  %120 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %67, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %119) #9
  br i1 %120, label %157, label %121

121:                                              ; preds = %105
  %122 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %119, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %67) #9
  br i1 %122, label %171, label %123

123:                                              ; preds = %121
  %124 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %110, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %128 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %127, align 8
  %129 = icmp eq %"struct.std::__1::pair.286"* %126, %128
  br i1 %129, label %171, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %132 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %131, align 8
  br label %133

133:                                              ; preds = %153, %130
  %134 = phi %"struct.std::__1::pair.286"* [ %154, %153 ], [ %132, %130 ]
  %135 = phi %"struct.std::__1::pair.286"* [ %155, %153 ], [ %126, %130 ]
  %136 = icmp eq %"struct.std::__1::pair.286"* %134, %124
  br i1 %136, label %157, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %134, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp ult i32 %139, %141
  br i1 %142, label %157, label %143

143:                                              ; preds = %137
  %144 = icmp ult i32 %141, %139
  br i1 %144, label %171, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %134, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp ult i32 %147, %149
  br i1 %150, label %157, label %151

151:                                              ; preds = %145
  %152 = icmp ult i32 %149, %147
  br i1 %152, label %171, label %153

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %134, i64 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 1
  %156 = icmp eq %"struct.std::__1::pair.286"* %155, %128
  br i1 %156, label %171, label %133

157:                                              ; preds = %145, %137, %133, %105
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %119, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %67) #9
  %158 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %159 = bitcast %"class.std::__1::vector.284"* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = load i64, i64* %107, align 8
  store i64 %161, i64* %159, align 8
  store i64 %160, i64* %107, align 8
  %162 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %163 = bitcast %"struct.std::__1::pair.286"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = load i64, i64* %111, align 8
  store i64 %165, i64* %163, align 8
  store i64 %164, i64* %111, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %167 = bitcast %"struct.std::__1::pair.286"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = load i64, i64* %115, align 8
  store i64 %169, i64* %167, align 8
  store i64 %168, i64* %115, align 8
  %170 = add i32 %6, 3
  br label %171

171:                                              ; preds = %33, %43, %41, %91, %101, %99, %143, %153, %151, %123, %121, %71, %69, %12, %10, %157
  %172 = phi i32 [ %170, %157 ], [ %6, %10 ], [ %6, %12 ], [ %66, %69 ], [ %66, %71 ], [ %118, %121 ], [ %118, %123 ], [ %118, %151 ], [ %118, %153 ], [ %118, %143 ], [ %66, %99 ], [ %66, %101 ], [ %66, %91 ], [ %6, %41 ], [ %6, %43 ], [ %6, %33 ]
  ret i32 %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_SE_T_(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::__less.434"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_T_(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %1, %"struct.std::__1::pair.270"* %2, %"struct.std::__1::pair.270"* %3, %"struct.std::__1::__less.434"* dereferenceable(1) %5)
  %8 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %8, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %9) #9
  br i1 %10, label %48, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %9, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %8) #9
  br i1 %12, label %224, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 1
  %15 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 0
  %17 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %19 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %18, align 8
  %20 = icmp eq %"struct.std::__1::pair.286"* %17, %19
  br i1 %20, label %224, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 0
  %23 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %22, align 8
  br label %24

24:                                               ; preds = %44, %21
  %25 = phi %"struct.std::__1::pair.286"* [ %45, %44 ], [ %23, %21 ]
  %26 = phi %"struct.std::__1::pair.286"* [ %46, %44 ], [ %17, %21 ]
  %27 = icmp eq %"struct.std::__1::pair.286"* %25, %15
  br i1 %27, label %48, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %25, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %26, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp ult i32 %30, %32
  br i1 %33, label %48, label %34

34:                                               ; preds = %28
  %35 = icmp ult i32 %32, %30
  br i1 %35, label %224, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %25, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %26, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %38, %40
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = icmp ult i32 %40, %38
  br i1 %43, label %224, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %25, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %26, i64 1
  %47 = icmp eq %"struct.std::__1::pair.286"* %46, %19
  br i1 %47, label %224, label %24

48:                                               ; preds = %36, %28, %24, %6
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %9, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %8) #9
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1
  %51 = bitcast %"class.std::__1::vector.284"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.284"* %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %51, align 8
  store i64 %52, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 1
  %57 = bitcast %"struct.std::__1::pair.286"** %55 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.std::__1::pair.286"** %56 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %57, align 8
  store i64 %58, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"struct.std::__1::pair.286"** %61 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"struct.std::__1::pair.286"** %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  store i64 %64, i64* %65, align 8
  %67 = add i32 %7, 1
  %68 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  %69 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %9, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %68) #9
  br i1 %69, label %106, label %70

70:                                               ; preds = %48
  %71 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %68, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %9) #9
  br i1 %71, label %224, label %72

72:                                               ; preds = %70
  %73 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %55, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 0
  %75 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %77 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %76, align 8
  %78 = icmp eq %"struct.std::__1::pair.286"* %75, %77
  br i1 %78, label %224, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 0
  %81 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %80, align 8
  br label %82

82:                                               ; preds = %102, %79
  %83 = phi %"struct.std::__1::pair.286"* [ %103, %102 ], [ %81, %79 ]
  %84 = phi %"struct.std::__1::pair.286"* [ %104, %102 ], [ %75, %79 ]
  %85 = icmp eq %"struct.std::__1::pair.286"* %83, %73
  br i1 %85, label %106, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %83, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %84, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp ult i32 %88, %90
  br i1 %91, label %106, label %92

92:                                               ; preds = %86
  %93 = icmp ult i32 %90, %88
  br i1 %93, label %224, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %83, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %84, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp ult i32 %96, %98
  br i1 %99, label %106, label %100

100:                                              ; preds = %94
  %101 = icmp ult i32 %98, %96
  br i1 %101, label %224, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %83, i64 1
  %104 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %84, i64 1
  %105 = icmp eq %"struct.std::__1::pair.286"* %104, %77
  br i1 %105, label %224, label %82

106:                                              ; preds = %94, %86, %82, %48
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %68, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %9) #9
  %107 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %108 = bitcast %"class.std::__1::vector.284"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %51, align 8
  store i64 %110, i64* %108, align 8
  store i64 %109, i64* %51, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %112 = bitcast %"struct.std::__1::pair.286"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = load i64, i64* %57, align 8
  store i64 %114, i64* %112, align 8
  store i64 %113, i64* %57, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"struct.std::__1::pair.286"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = load i64, i64* %63, align 8
  store i64 %118, i64* %116, align 8
  store i64 %117, i64* %63, align 8
  %119 = add i32 %7, 2
  %120 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0
  %121 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %68, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %120) #9
  br i1 %121, label %158, label %122

122:                                              ; preds = %106
  %123 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %120, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %68) #9
  br i1 %123, label %224, label %124

124:                                              ; preds = %122
  %125 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %111, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %127 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %129 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %128, align 8
  %130 = icmp eq %"struct.std::__1::pair.286"* %127, %129
  br i1 %130, label %224, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 0
  %133 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %132, align 8
  br label %134

134:                                              ; preds = %154, %131
  %135 = phi %"struct.std::__1::pair.286"* [ %155, %154 ], [ %133, %131 ]
  %136 = phi %"struct.std::__1::pair.286"* [ %156, %154 ], [ %127, %131 ]
  %137 = icmp eq %"struct.std::__1::pair.286"* %135, %125
  br i1 %137, label %158, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %136, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp ult i32 %140, %142
  br i1 %143, label %158, label %144

144:                                              ; preds = %138
  %145 = icmp ult i32 %142, %140
  br i1 %145, label %224, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %136, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp ult i32 %148, %150
  br i1 %151, label %158, label %152

152:                                              ; preds = %146
  %153 = icmp ult i32 %150, %148
  br i1 %153, label %224, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %135, i64 1
  %156 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %136, i64 1
  %157 = icmp eq %"struct.std::__1::pair.286"* %156, %129
  br i1 %157, label %224, label %134

158:                                              ; preds = %146, %138, %134, %106
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %120, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %68) #9
  %159 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %160 = bitcast %"class.std::__1::vector.284"* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %108, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %108, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %164 = bitcast %"struct.std::__1::pair.286"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = load i64, i64* %112, align 8
  store i64 %166, i64* %164, align 8
  store i64 %165, i64* %112, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %168 = bitcast %"struct.std::__1::pair.286"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = load i64, i64* %116, align 8
  store i64 %170, i64* %168, align 8
  store i64 %169, i64* %116, align 8
  %171 = add i32 %7, 3
  %172 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  %173 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %120, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %172) #9
  br i1 %173, label %210, label %174

174:                                              ; preds = %158
  %175 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %172, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %120) #9
  br i1 %175, label %224, label %176

176:                                              ; preds = %174
  %177 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %163, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 0
  %179 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %178, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %181 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %180, align 8
  %182 = icmp eq %"struct.std::__1::pair.286"* %179, %181
  br i1 %182, label %224, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 0
  %185 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %184, align 8
  br label %186

186:                                              ; preds = %206, %183
  %187 = phi %"struct.std::__1::pair.286"* [ %207, %206 ], [ %185, %183 ]
  %188 = phi %"struct.std::__1::pair.286"* [ %208, %206 ], [ %179, %183 ]
  %189 = icmp eq %"struct.std::__1::pair.286"* %187, %177
  br i1 %189, label %210, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %187, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %188, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = icmp ult i32 %192, %194
  br i1 %195, label %210, label %196

196:                                              ; preds = %190
  %197 = icmp ult i32 %194, %192
  br i1 %197, label %224, label %198

198:                                              ; preds = %196
  %199 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %187, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %188, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp ult i32 %200, %202
  br i1 %203, label %210, label %204

204:                                              ; preds = %198
  %205 = icmp ult i32 %202, %200
  br i1 %205, label %224, label %206

206:                                              ; preds = %204
  %207 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %187, i64 1
  %208 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %188, i64 1
  %209 = icmp eq %"struct.std::__1::pair.286"* %208, %181
  br i1 %209, label %224, label %186

210:                                              ; preds = %198, %190, %186, %158
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %172, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %120) #9
  %211 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %212 = bitcast %"class.std::__1::vector.284"* %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = load i64, i64* %160, align 8
  store i64 %214, i64* %212, align 8
  store i64 %213, i64* %160, align 8
  %215 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %216 = bitcast %"struct.std::__1::pair.286"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load i64, i64* %164, align 8
  store i64 %218, i64* %216, align 8
  store i64 %217, i64* %164, align 8
  %219 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %220 = bitcast %"struct.std::__1::pair.286"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = load i64, i64* %168, align 8
  store i64 %222, i64* %220, align 8
  store i64 %221, i64* %168, align 8
  %223 = add i32 %7, 4
  br label %224

224:                                              ; preds = %34, %44, %42, %92, %102, %100, %144, %154, %152, %196, %206, %204, %176, %174, %124, %122, %72, %70, %13, %11, %210
  %225 = phi i32 [ %223, %210 ], [ %7, %11 ], [ %7, %13 ], [ %67, %70 ], [ %67, %72 ], [ %119, %122 ], [ %119, %124 ], [ %171, %174 ], [ %171, %176 ], [ %171, %204 ], [ %171, %206 ], [ %171, %196 ], [ %119, %152 ], [ %119, %154 ], [ %119, %144 ], [ %67, %100 ], [ %67, %102 ], [ %67, %92 ], [ %7, %42 ], [ %7, %44 ], [ %7, %34 ]
  ret i32 %225
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEvT0_SE_T_(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::__less.434"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair.270", align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 2
  %6 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %7 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %6, %"struct.std::__1::pair.270"* %5, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  %8 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 3
  %9 = icmp eq %"struct.std::__1::pair.270"* %8, %1
  br i1 %9, label %81, label %10

10:                                               ; preds = %3
  %11 = bitcast %"struct.std::__1::pair.270"* %4 to i8*
  %12 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0
  %13 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i8** %15 to i64*
  %17 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i8** %20 to i64*
  %22 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i8** %25 to i64*
  %27 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0
  %28 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 1
  %29 = bitcast float** %28 to i64*
  %30 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast float** %30 to i64*
  %32 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 1
  %34 = bitcast float** %33 to i64*
  %35 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast float** %35 to i64*
  %37 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2
  %38 = bitcast %"class.std::__1::vector.278"* %37 to i64*
  %39 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %40 = bitcast float** %39 to i64*
  %41 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1
  %42 = bitcast %"class.std::__1::vector.284"* %41 to i8*
  %43 = bitcast %"class.std::__1::vector.284"* %41 to i64*
  %44 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::pair.286"** %44 to i64*
  %46 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.std::__1::pair.286"** %46 to i64*
  %48 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1
  %59 = bitcast %"class.std::__1::vector.271"* %58 to i8*
  %60 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  %61 = bitcast i8** %60 to i8*
  %62 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %63 = bitcast i8** %62 to i8*
  %64 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %65 = bitcast i8** %64 to i8*
  %66 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 1
  %67 = bitcast float** %66 to i8*
  %68 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 1
  %69 = bitcast float** %68 to i8*
  %70 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %71 = bitcast float** %70 to i8*
  %72 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 1
  %73 = bitcast %"struct.std::__1::pair.286"** %72 to i8*
  %74 = bitcast %"class.std::__1::vector.271"* %12 to <2 x i64>*
  %75 = bitcast %"class.std::__1::vector.271"* %17 to <2 x i64>*
  %76 = bitcast %"class.std::__1::vector.271"* %22 to <2 x i64>*
  %77 = bitcast %"class.std::__1::vector.278"* %27 to <2 x i64>*
  %78 = bitcast %"class.std::__1::vector.278"* %32 to <2 x i64>*
  %79 = bitcast float** %39 to <2 x i64>*
  %80 = bitcast %"class.std::__1::vector.284"* %41 to <2 x i64>*
  br label %82

81:                                               ; preds = %357, %3
  ret void

82:                                               ; preds = %10, %357
  %83 = phi %"struct.std::__1::pair.270"* [ %8, %10 ], [ %358, %357 ]
  %84 = phi %"struct.std::__1::pair.270"* [ %5, %10 ], [ %83, %357 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %84, i64 0, i32 0
  %87 = call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %85, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %86) #9
  br i1 %87, label %125, label %88

88:                                               ; preds = %82
  %89 = call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %86, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %85) #9
  br i1 %89, label %357, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 1, i32 0, i32 1
  %92 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %84, i64 0, i32 1, i32 0, i32 0
  %94 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %84, i64 0, i32 1, i32 0, i32 1
  %96 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %95, align 8
  %97 = icmp eq %"struct.std::__1::pair.286"* %94, %96
  br i1 %97, label %357, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 1, i32 0, i32 0
  %100 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %99, align 8
  br label %101

101:                                              ; preds = %121, %98
  %102 = phi %"struct.std::__1::pair.286"* [ %122, %121 ], [ %100, %98 ]
  %103 = phi %"struct.std::__1::pair.286"* [ %123, %121 ], [ %94, %98 ]
  %104 = icmp eq %"struct.std::__1::pair.286"* %102, %92
  br i1 %104, label %125, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %102, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %103, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp ult i32 %107, %109
  br i1 %110, label %125, label %111

111:                                              ; preds = %105
  %112 = icmp ult i32 %109, %107
  br i1 %112, label %357, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %102, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %103, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp ult i32 %115, %117
  br i1 %118, label %125, label %119

119:                                              ; preds = %113
  %120 = icmp ult i32 %117, %115
  br i1 %120, label %357, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %102, i64 1
  %123 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %103, i64 1
  %124 = icmp eq %"struct.std::__1::pair.286"* %123, %96
  br i1 %124, label %357, label %101

125:                                              ; preds = %113, %105, %101, %82
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %11) #9
  %126 = bitcast %"struct.std::__1::pair.270"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -86, i64 144, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %126, i64 16, i1 false) #9
  %127 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #9
  %128 = bitcast %"class.std::__1::vector.271"* %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8
  store <2 x i64> %129, <2 x i64>* %74, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast i8** %130 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %16, align 8
  %133 = bitcast %"class.std::__1::vector.271"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #9
  %134 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 2, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #9
  %135 = bitcast %"class.std::__1::vector.271"* %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8
  store <2 x i64> %136, <2 x i64>* %75, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %138 = bitcast i8** %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %21, align 8
  %140 = bitcast %"class.std::__1::vector.271"* %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #9
  %141 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 2, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #9
  %142 = bitcast %"class.std::__1::vector.271"* %141 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 8
  store <2 x i64> %143, <2 x i64>* %76, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %145 = bitcast i8** %144 to i64*
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %26, align 8
  %147 = bitcast %"class.std::__1::vector.271"* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false) #9
  %148 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %149 = bitcast %"class.std::__1::vector.278"* %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8
  store <2 x i64> %150, <2 x i64>* %77, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast float** %151 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %31, align 8
  %154 = bitcast %"class.std::__1::vector.278"* %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #9
  %155 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 3, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %156 = bitcast %"class.std::__1::vector.278"* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8
  store <2 x i64> %157, <2 x i64>* %78, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %159 = bitcast float** %158 to i64*
  %160 = load i64, i64* %159, align 8
  store i64 %160, i64* %36, align 8
  %161 = bitcast %"class.std::__1::vector.278"* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #9
  %162 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 3, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #9
  %163 = bitcast %"class.std::__1::vector.278"* %162 to i64*
  %164 = load i64, i64* %163, align 8
  store i64 %164, i64* %38, align 8
  %165 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %166 = bitcast float** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8
  store <2 x i64> %167, <2 x i64>* %79, align 8
  %168 = bitcast %"class.std::__1::vector.278"* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #9
  %169 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #9
  %170 = bitcast %"class.std::__1::vector.284"* %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8
  store <2 x i64> %171, <2 x i64>* %80, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.286"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  store i64 %174, i64* %47, align 8
  %175 = bitcast %"class.std::__1::vector.284"* %169 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 24, i1 false) #9
  br label %176

176:                                              ; preds = %245, %125
  %177 = phi %"struct.std::__1::pair.270"* [ %83, %125 ], [ %178, %245 ]
  %178 = phi %"struct.std::__1::pair.270"* [ %84, %125 ], [ %210, %245 ]
  %179 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 0, i32 0
  %180 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %177, i64 0, i32 0
  %181 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %180, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %179) #9
  %182 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 0, i32 1
  %183 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %177, i64 0, i32 1
  %184 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %183, i64 0, i32 0, i32 0
  %185 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %184, align 8
  %186 = icmp eq %"struct.std::__1::pair.286"* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %176
  %188 = ptrtoint %"struct.std::__1::pair.286"* %185 to i64
  %189 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %177, i64 0, i32 1, i32 0, i32 1
  %190 = bitcast %"struct.std::__1::pair.286"** %189 to i64*
  store i64 %188, i64* %190, align 8
  %191 = bitcast %"struct.std::__1::pair.286"* %185 to i8*
  call void @_ZdlPv(i8* %191) #19
  %192 = bitcast %"class.std::__1::vector.284"* %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 24, i1 false) #9
  br label %193

193:                                              ; preds = %176, %187
  %194 = bitcast %"class.std::__1::vector.284"* %182 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.std::__1::vector.284"* %183 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 0, i32 1, i32 0, i32 1
  %198 = bitcast %"struct.std::__1::pair.286"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %177, i64 0, i32 1, i32 0, i32 1
  %201 = bitcast %"struct.std::__1::pair.286"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %203 = bitcast %"struct.std::__1::pair.286"** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %177, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %206 = bitcast %"struct.std::__1::pair.286"** %205 to i64*
  store i64 %204, i64* %206, align 8
  %207 = bitcast %"class.std::__1::vector.284"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 24, i1 false) #9
  %208 = icmp eq %"struct.std::__1::pair.270"* %178, %0
  br i1 %208, label %308, label %209

209:                                              ; preds = %193
  %210 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1
  %211 = load i64, i64* %48, align 8
  %212 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %210, i64 0, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = icmp eq i64 %211, %213
  br i1 %214, label %217, label %215

215:                                              ; preds = %209
  %216 = icmp ult i64 %211, %213
  br i1 %216, label %245, label %248

217:                                              ; preds = %209
  %218 = load i64, i64* %49, align 8
  %219 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 0, i32 1
  %220 = load i64, i64* %219, align 8
  %221 = icmp eq i64 %218, %220
  br i1 %221, label %222, label %246

222:                                              ; preds = %217
  %223 = mul i64 %218, %211
  %224 = load i8*, i8** %50, align 8
  %225 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = call i32 @memcmp(i8* %224, i8* %226, i64 %223) #20
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %250, label %235

229:                                              ; preds = %235
  %230 = load i8*, i8** %51, align 8
  %231 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = call i32 @memcmp(i8* %230, i8* %232, i64 %223) #20
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %250, label %237

235:                                              ; preds = %222
  %236 = icmp slt i32 %227, 0
  br i1 %236, label %245, label %229

237:                                              ; preds = %229
  %238 = icmp slt i32 %233, 0
  br i1 %238, label %245, label %239

239:                                              ; preds = %237
  %240 = load i8*, i8** %52, align 8
  %241 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = call i32 @memcmp(i8* %240, i8* %242, i64 %223) #20
  %244 = icmp slt i32 %243, 0
  br i1 %244, label %245, label %250

245:                                              ; preds = %296, %288, %284, %239, %237, %235, %215, %246
  br label %176

246:                                              ; preds = %217
  %247 = icmp ult i64 %218, %220
  br i1 %247, label %245, label %273

248:                                              ; preds = %215
  %249 = icmp ult i64 %213, %211
  br i1 %249, label %308, label %275

250:                                              ; preds = %239, %229, %222
  %251 = mul i64 %218, %211
  %252 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = load i8*, i8** %50, align 8
  %255 = call i32 @memcmp(i8* %253, i8* %254, i64 %251) #20
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %275, label %263

257:                                              ; preds = %263
  %258 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = load i8*, i8** %51, align 8
  %261 = call i32 @memcmp(i8* %259, i8* %260, i64 %251) #20
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %275, label %265

263:                                              ; preds = %250
  %264 = icmp slt i32 %255, 0
  br i1 %264, label %308, label %257

265:                                              ; preds = %257
  %266 = icmp slt i32 %261, 0
  br i1 %266, label %308, label %267

267:                                              ; preds = %265
  %268 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = load i8*, i8** %52, align 8
  %271 = call i32 @memcmp(i8* %269, i8* %270, i64 %251) #20
  %272 = icmp slt i32 %271, 0
  br i1 %272, label %308, label %275

273:                                              ; preds = %246
  %274 = icmp ult i64 %220, %218
  br i1 %274, label %308, label %275

275:                                              ; preds = %267, %257, %250, %248, %273
  %276 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %44, align 8
  %277 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 1, i32 0, i32 0
  %278 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %277, align 8
  %279 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %178, i64 -1, i32 1, i32 0, i32 1
  %280 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %279, align 8
  %281 = icmp eq %"struct.std::__1::pair.286"* %278, %280
  br i1 %281, label %308, label %282

282:                                              ; preds = %275
  %283 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %53, align 8
  br label %284

284:                                              ; preds = %304, %282
  %285 = phi %"struct.std::__1::pair.286"* [ %305, %304 ], [ %283, %282 ]
  %286 = phi %"struct.std::__1::pair.286"* [ %306, %304 ], [ %278, %282 ]
  %287 = icmp eq %"struct.std::__1::pair.286"* %285, %276
  br i1 %287, label %245, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %285, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %286, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = icmp ult i32 %290, %292
  br i1 %293, label %245, label %294

294:                                              ; preds = %288
  %295 = icmp ult i32 %292, %290
  br i1 %295, label %308, label %296

296:                                              ; preds = %294
  %297 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %285, i64 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %286, i64 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = icmp ult i32 %298, %300
  br i1 %301, label %245, label %302

302:                                              ; preds = %296
  %303 = icmp ult i32 %300, %298
  br i1 %303, label %308, label %304

304:                                              ; preds = %302
  %305 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %285, i64 1
  %306 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %286, i64 1
  %307 = icmp eq %"struct.std::__1::pair.286"* %306, %280
  br i1 %307, label %308, label %284

308:                                              ; preds = %267, %265, %263, %248, %275, %273, %193, %294, %304, %302
  %309 = bitcast %"struct.std::__1::pair.286"** %202 to i64*
  %310 = bitcast %"struct.std::__1::pair.286"** %197 to i64*
  %311 = bitcast %"class.std::__1::vector.284"* %182 to i64*
  %312 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %179, %"struct.jxl::QuantizedPatch"* nonnull dereferenceable(160) %54) #9
  %313 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %182, i64 0, i32 0, i32 0
  %314 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %313, align 8
  %315 = icmp eq %"struct.std::__1::pair.286"* %314, null
  br i1 %315, label %320, label %316

316:                                              ; preds = %308
  %317 = bitcast %"class.std::__1::vector.284"* %182 to i8*
  %318 = ptrtoint %"struct.std::__1::pair.286"* %314 to i64
  store i64 %318, i64* %310, align 8
  %319 = bitcast %"struct.std::__1::pair.286"* %314 to i8*
  call void @_ZdlPv(i8* %319) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %317, i8 0, i64 24, i1 false) #9
  br label %320

320:                                              ; preds = %308, %316
  %321 = load i64, i64* %43, align 8
  store i64 %321, i64* %311, align 8
  %322 = load i64, i64* %45, align 8
  store i64 %322, i64* %310, align 8
  %323 = load i64, i64* %47, align 8
  store i64 %323, i64* %309, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #9
  %324 = load float*, float** %55, align 8
  %325 = icmp eq float* %324, null
  br i1 %325, label %329, label %326

326:                                              ; preds = %320
  %327 = bitcast float* %324 to i8*
  %328 = ptrtoint float* %324 to i64
  store i64 %328, i64* %40, align 8
  call void @_ZdlPv(i8* %327) #19
  br label %329

329:                                              ; preds = %326, %320
  %330 = load float*, float** %56, align 8
  %331 = icmp eq float* %330, null
  br i1 %331, label %347, label %344

332:                                              ; preds = %353
  %333 = ptrtoint i8* %354 to i64
  store i64 %333, i64* %24, align 8
  call void @_ZdlPv(i8* nonnull %354) #19
  br label %334

334:                                              ; preds = %353, %332
  %335 = load i8*, i8** %51, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %339, label %337

337:                                              ; preds = %334
  %338 = ptrtoint i8* %335 to i64
  store i64 %338, i64* %19, align 8
  call void @_ZdlPv(i8* nonnull %335) #19
  br label %339

339:                                              ; preds = %337, %334
  %340 = load i8*, i8** %50, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %356, label %342

342:                                              ; preds = %339
  %343 = ptrtoint i8* %340 to i64
  store i64 %343, i64* %14, align 8
  call void @_ZdlPv(i8* nonnull %340) #19
  br label %356

344:                                              ; preds = %329
  %345 = ptrtoint float* %330 to i64
  store i64 %345, i64* %34, align 8
  %346 = bitcast float* %330 to i8*
  call void @_ZdlPv(i8* %346) #19
  br label %347

347:                                              ; preds = %344, %329
  %348 = load float*, float** %57, align 8
  %349 = icmp eq float* %348, null
  br i1 %349, label %353, label %350

350:                                              ; preds = %347
  %351 = ptrtoint float* %348 to i64
  store i64 %351, i64* %29, align 8
  %352 = bitcast float* %348 to i8*
  call void @_ZdlPv(i8* %352) #19
  br label %353

353:                                              ; preds = %350, %347
  %354 = load i8*, i8** %52, align 8
  %355 = icmp eq i8* %354, null
  br i1 %355, label %334, label %332

356:                                              ; preds = %339, %342
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %11) #9
  br label %357

357:                                              ; preds = %111, %121, %119, %90, %88, %356
  %358 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %83, i64 1
  %359 = icmp eq %"struct.std::__1::pair.270"* %358, %1
  br i1 %359, label %81, label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEbT0_SE_T_(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::__less.434"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair.270", align 8
  %5 = ptrtoint %"struct.std::__1::pair.270"* %1 to i64
  %6 = ptrtoint %"struct.std::__1::pair.270"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = sdiv exact i64 %7, 184
  switch i64 %8, label %84 [
    i64 0, label %446
    i64 1, label %446
    i64 2, label %9
    i64 3, label %69
    i64 4, label %73
    i64 5, label %78
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %10, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %11) #9
  br i1 %12, label %50, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %11, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %10) #9
  br i1 %14, label %446, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1, i32 0, i32 1
  %17 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %21 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair.286"* %19, %21
  br i1 %22, label %446, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1, i32 0, i32 0
  %25 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %24, align 8
  br label %26

26:                                               ; preds = %46, %23
  %27 = phi %"struct.std::__1::pair.286"* [ %47, %46 ], [ %25, %23 ]
  %28 = phi %"struct.std::__1::pair.286"* [ %48, %46 ], [ %19, %23 ]
  %29 = icmp eq %"struct.std::__1::pair.286"* %27, %17
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %27, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %30
  %37 = icmp ult i32 %34, %32
  br i1 %37, label %446, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %27, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %40, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = icmp ult i32 %42, %40
  br i1 %45, label %446, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %27, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %28, i64 1
  %49 = icmp eq %"struct.std::__1::pair.286"* %48, %21
  br i1 %49, label %446, label %26

50:                                               ; preds = %38, %30, %26, %9
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %11, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %10) #9
  %51 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1
  %53 = bitcast %"class.std::__1::vector.284"* %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.284"* %52 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %53, align 8
  store i64 %54, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1, i32 0, i32 1
  %59 = bitcast %"struct.std::__1::pair.286"** %57 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"struct.std::__1::pair.286"** %58 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %59, align 8
  store i64 %60, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"struct.std::__1::pair.286"** %63 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"struct.std::__1::pair.286"** %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 %66, i64* %67, align 8
  br label %446

69:                                               ; preds = %3
  %70 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %70, %"struct.std::__1::pair.270"* %71, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %446

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 2
  %76 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1
  %77 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_T_(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %74, %"struct.std::__1::pair.270"* %75, %"struct.std::__1::pair.270"* %76, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %446

78:                                               ; preds = %3
  %79 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %80 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 2
  %81 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 3
  %82 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1
  %83 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_SE_SE_T_(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %79, %"struct.std::__1::pair.270"* %80, %"struct.std::__1::pair.270"* %81, %"struct.std::__1::pair.270"* %82, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  br label %446

84:                                               ; preds = %3
  %85 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 2
  %86 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %87 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS2_IjjEENS_9allocatorIS6_EEEEEESA_EEPSA_EEjT0_SE_SE_T_(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %86, %"struct.std::__1::pair.270"* %85, %"struct.std::__1::__less.434"* dereferenceable(1) %2)
  %88 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 3
  %89 = icmp eq %"struct.std::__1::pair.270"* %88, %1
  br i1 %89, label %446, label %90

90:                                               ; preds = %84
  %91 = bitcast %"struct.std::__1::pair.270"* %4 to i8*
  %92 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0
  %93 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  %94 = bitcast i8** %93 to i64*
  %95 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast i8** %95 to i64*
  %97 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %99 = bitcast i8** %98 to i64*
  %100 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i8** %100 to i64*
  %102 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2
  %103 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %104 = bitcast i8** %103 to i64*
  %105 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %106 = bitcast i8** %105 to i64*
  %107 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0
  %108 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 1
  %109 = bitcast float** %108 to i64*
  %110 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast float** %110 to i64*
  %112 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1
  %113 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 1
  %114 = bitcast float** %113 to i64*
  %115 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast float** %115 to i64*
  %117 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2
  %118 = bitcast %"class.std::__1::vector.278"* %117 to i64*
  %119 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %120 = bitcast float** %119 to i64*
  %121 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1
  %122 = bitcast %"class.std::__1::vector.284"* %121 to i8*
  %123 = bitcast %"class.std::__1::vector.284"* %121 to i64*
  %124 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 1
  %125 = bitcast %"struct.std::__1::pair.286"** %124 to i64*
  %126 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %127 = bitcast %"struct.std::__1::pair.286"** %126 to i64*
  %128 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 1
  %130 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0
  %135 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1
  %139 = bitcast %"class.std::__1::vector.271"* %138 to i8*
  %140 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  %141 = bitcast i8** %140 to i8*
  %142 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %143 = bitcast i8** %142 to i8*
  %144 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %145 = bitcast i8** %144 to i8*
  %146 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 0, i32 0, i32 1
  %147 = bitcast float** %146 to i8*
  %148 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 1, i32 0, i32 1
  %149 = bitcast float** %148 to i8*
  %150 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %151 = bitcast float** %150 to i8*
  %152 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 1
  %153 = bitcast %"struct.std::__1::pair.286"** %152 to i8*
  %154 = bitcast %"class.std::__1::vector.271"* %92 to <2 x i64>*
  %155 = bitcast %"class.std::__1::vector.271"* %97 to <2 x i64>*
  %156 = bitcast %"class.std::__1::vector.271"* %102 to <2 x i64>*
  %157 = bitcast %"class.std::__1::vector.278"* %107 to <2 x i64>*
  %158 = bitcast %"class.std::__1::vector.278"* %112 to <2 x i64>*
  %159 = bitcast float** %119 to <2 x i64>*
  %160 = bitcast %"class.std::__1::vector.284"* %121 to <2 x i64>*
  br label %161

161:                                              ; preds = %90, %439
  %162 = phi %"struct.std::__1::pair.270"* [ %88, %90 ], [ %441, %439 ]
  %163 = phi i32 [ 0, %90 ], [ %440, %439 ]
  %164 = phi %"struct.std::__1::pair.270"* [ %85, %90 ], [ %162, %439 ]
  %165 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0
  %166 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %164, i64 0, i32 0
  %167 = call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %165, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %166) #9
  br i1 %167, label %205, label %168

168:                                              ; preds = %161
  %169 = call zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"* %166, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %165) #9
  br i1 %169, label %439, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 1, i32 0, i32 1
  %172 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %171, align 8
  %173 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %164, i64 0, i32 1, i32 0, i32 0
  %174 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %173, align 8
  %175 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %164, i64 0, i32 1, i32 0, i32 1
  %176 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %175, align 8
  %177 = icmp eq %"struct.std::__1::pair.286"* %174, %176
  br i1 %177, label %439, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 1, i32 0, i32 0
  %180 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %179, align 8
  br label %181

181:                                              ; preds = %201, %178
  %182 = phi %"struct.std::__1::pair.286"* [ %202, %201 ], [ %180, %178 ]
  %183 = phi %"struct.std::__1::pair.286"* [ %203, %201 ], [ %174, %178 ]
  %184 = icmp eq %"struct.std::__1::pair.286"* %182, %172
  br i1 %184, label %205, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %182, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %183, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp ult i32 %187, %189
  br i1 %190, label %205, label %191

191:                                              ; preds = %185
  %192 = icmp ult i32 %189, %187
  br i1 %192, label %439, label %193

193:                                              ; preds = %191
  %194 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %182, i64 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %183, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = icmp ult i32 %195, %197
  br i1 %198, label %205, label %199

199:                                              ; preds = %193
  %200 = icmp ult i32 %197, %195
  br i1 %200, label %439, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %182, i64 1
  %203 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %183, i64 1
  %204 = icmp eq %"struct.std::__1::pair.286"* %203, %176
  br i1 %204, label %439, label %181

205:                                              ; preds = %193, %185, %181, %161
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %91) #9
  %206 = bitcast %"struct.std::__1::pair.270"* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 -86, i64 144, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 %206, i64 16, i1 false) #9
  %207 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 16, i1 false) #9
  %208 = bitcast %"class.std::__1::vector.271"* %207 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 8
  store <2 x i64> %209, <2 x i64>* %154, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %211 = bitcast i8** %210 to i64*
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %96, align 8
  %213 = bitcast %"class.std::__1::vector.271"* %207 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 24, i1 false) #9
  %214 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 2, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false) #9
  %215 = bitcast %"class.std::__1::vector.271"* %214 to <2 x i64>*
  %216 = load <2 x i64>, <2 x i64>* %215, align 8
  store <2 x i64> %216, <2 x i64>* %155, align 8
  %217 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %218 = bitcast i8** %217 to i64*
  %219 = load i64, i64* %218, align 8
  store i64 %219, i64* %101, align 8
  %220 = bitcast %"class.std::__1::vector.271"* %214 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 24, i1 false) #9
  %221 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 2, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false) #9
  %222 = bitcast %"class.std::__1::vector.271"* %221 to <2 x i64>*
  %223 = load <2 x i64>, <2 x i64>* %222, align 8
  store <2 x i64> %223, <2 x i64>* %156, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %225 = bitcast i8** %224 to i64*
  %226 = load i64, i64* %225, align 8
  store i64 %226, i64* %106, align 8
  %227 = bitcast %"class.std::__1::vector.271"* %221 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 24, i1 false) #9
  %228 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 16, i1 false) #9
  %229 = bitcast %"class.std::__1::vector.278"* %228 to <2 x i64>*
  %230 = load <2 x i64>, <2 x i64>* %229, align 8
  store <2 x i64> %230, <2 x i64>* %157, align 8
  %231 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %232 = bitcast float** %231 to i64*
  %233 = load i64, i64* %232, align 8
  store i64 %233, i64* %111, align 8
  %234 = bitcast %"class.std::__1::vector.278"* %228 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #9
  %235 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 3, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 16, i1 false) #9
  %236 = bitcast %"class.std::__1::vector.278"* %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8
  store <2 x i64> %237, <2 x i64>* %158, align 8
  %238 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %239 = bitcast float** %238 to i64*
  %240 = load i64, i64* %239, align 8
  store i64 %240, i64* %116, align 8
  %241 = bitcast %"class.std::__1::vector.278"* %235 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 24, i1 false) #9
  %242 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 3, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 16, i1 false) #9
  %243 = bitcast %"class.std::__1::vector.278"* %242 to i64*
  %244 = load i64, i64* %243, align 8
  store i64 %244, i64* %118, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %246 = bitcast float** %245 to <2 x i64>*
  %247 = load <2 x i64>, <2 x i64>* %246, align 8
  store <2 x i64> %247, <2 x i64>* %159, align 8
  %248 = bitcast %"class.std::__1::vector.278"* %242 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 24, i1 false) #9
  %249 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #9
  %250 = bitcast %"class.std::__1::vector.284"* %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8
  store <2 x i64> %251, <2 x i64>* %160, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %253 = bitcast %"struct.std::__1::pair.286"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %127, align 8
  %255 = bitcast %"class.std::__1::vector.284"* %249 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %255, i8 0, i64 24, i1 false) #9
  br label %256

256:                                              ; preds = %325, %205
  %257 = phi %"struct.std::__1::pair.270"* [ %162, %205 ], [ %258, %325 ]
  %258 = phi %"struct.std::__1::pair.270"* [ %164, %205 ], [ %290, %325 ]
  %259 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 0, i32 0
  %260 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %257, i64 0, i32 0
  %261 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %260, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %259) #9
  %262 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 0, i32 1
  %263 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %257, i64 0, i32 1
  %264 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %263, i64 0, i32 0, i32 0
  %265 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %264, align 8
  %266 = icmp eq %"struct.std::__1::pair.286"* %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %256
  %268 = ptrtoint %"struct.std::__1::pair.286"* %265 to i64
  %269 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %257, i64 0, i32 1, i32 0, i32 1
  %270 = bitcast %"struct.std::__1::pair.286"** %269 to i64*
  store i64 %268, i64* %270, align 8
  %271 = bitcast %"struct.std::__1::pair.286"* %265 to i8*
  call void @_ZdlPv(i8* %271) #19
  %272 = bitcast %"class.std::__1::vector.284"* %263 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 24, i1 false) #9
  br label %273

273:                                              ; preds = %256, %267
  %274 = bitcast %"class.std::__1::vector.284"* %262 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.std::__1::vector.284"* %263 to i64*
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 0, i32 1, i32 0, i32 1
  %278 = bitcast %"struct.std::__1::pair.286"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %257, i64 0, i32 1, i32 0, i32 1
  %281 = bitcast %"struct.std::__1::pair.286"** %280 to i64*
  store i64 %279, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %283 = bitcast %"struct.std::__1::pair.286"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %257, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %286 = bitcast %"struct.std::__1::pair.286"** %285 to i64*
  store i64 %284, i64* %286, align 8
  %287 = bitcast %"class.std::__1::vector.284"* %262 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %287, i8 0, i64 24, i1 false) #9
  %288 = icmp eq %"struct.std::__1::pair.270"* %258, %0
  br i1 %288, label %388, label %289

289:                                              ; preds = %273
  %290 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1
  %291 = load i64, i64* %128, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %290, i64 0, i32 0, i32 0
  %293 = load i64, i64* %292, align 8
  %294 = icmp eq i64 %291, %293
  br i1 %294, label %297, label %295

295:                                              ; preds = %289
  %296 = icmp ult i64 %291, %293
  br i1 %296, label %325, label %328

297:                                              ; preds = %289
  %298 = load i64, i64* %129, align 8
  %299 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = icmp eq i64 %298, %300
  br i1 %301, label %302, label %326

302:                                              ; preds = %297
  %303 = mul i64 %298, %291
  %304 = load i8*, i8** %130, align 8
  %305 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = call i32 @memcmp(i8* %304, i8* %306, i64 %303) #20
  %308 = icmp sgt i32 %307, 0
  br i1 %308, label %330, label %315

309:                                              ; preds = %315
  %310 = load i8*, i8** %131, align 8
  %311 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = call i32 @memcmp(i8* %310, i8* %312, i64 %303) #20
  %314 = icmp sgt i32 %313, 0
  br i1 %314, label %330, label %317

315:                                              ; preds = %302
  %316 = icmp slt i32 %307, 0
  br i1 %316, label %325, label %309

317:                                              ; preds = %309
  %318 = icmp slt i32 %313, 0
  br i1 %318, label %325, label %319

319:                                              ; preds = %317
  %320 = load i8*, i8** %132, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %322 = load i8*, i8** %321, align 8
  %323 = call i32 @memcmp(i8* %320, i8* %322, i64 %303) #20
  %324 = icmp slt i32 %323, 0
  br i1 %324, label %325, label %330

325:                                              ; preds = %376, %368, %364, %319, %317, %315, %295, %326
  br label %256

326:                                              ; preds = %297
  %327 = icmp ult i64 %298, %300
  br i1 %327, label %325, label %353

328:                                              ; preds = %295
  %329 = icmp ult i64 %293, %291
  br i1 %329, label %388, label %355

330:                                              ; preds = %319, %309, %302
  %331 = mul i64 %298, %291
  %332 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %333 = load i8*, i8** %332, align 8
  %334 = load i8*, i8** %130, align 8
  %335 = call i32 @memcmp(i8* %333, i8* %334, i64 %331) #20
  %336 = icmp sgt i32 %335, 0
  br i1 %336, label %355, label %343

337:                                              ; preds = %343
  %338 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = load i8*, i8** %131, align 8
  %341 = call i32 @memcmp(i8* %339, i8* %340, i64 %331) #20
  %342 = icmp sgt i32 %341, 0
  br i1 %342, label %355, label %345

343:                                              ; preds = %330
  %344 = icmp slt i32 %335, 0
  br i1 %344, label %388, label %337

345:                                              ; preds = %337
  %346 = icmp slt i32 %341, 0
  br i1 %346, label %388, label %347

347:                                              ; preds = %345
  %348 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = load i8*, i8** %132, align 8
  %351 = call i32 @memcmp(i8* %349, i8* %350, i64 %331) #20
  %352 = icmp slt i32 %351, 0
  br i1 %352, label %388, label %355

353:                                              ; preds = %326
  %354 = icmp ult i64 %300, %298
  br i1 %354, label %388, label %355

355:                                              ; preds = %347, %337, %330, %328, %353
  %356 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %124, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 1, i32 0, i32 0
  %358 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %357, align 8
  %359 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %258, i64 -1, i32 1, i32 0, i32 1
  %360 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %359, align 8
  %361 = icmp eq %"struct.std::__1::pair.286"* %358, %360
  br i1 %361, label %388, label %362

362:                                              ; preds = %355
  %363 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %133, align 8
  br label %364

364:                                              ; preds = %384, %362
  %365 = phi %"struct.std::__1::pair.286"* [ %385, %384 ], [ %363, %362 ]
  %366 = phi %"struct.std::__1::pair.286"* [ %386, %384 ], [ %358, %362 ]
  %367 = icmp eq %"struct.std::__1::pair.286"* %365, %356
  br i1 %367, label %325, label %368

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %365, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %366, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = icmp ult i32 %370, %372
  br i1 %373, label %325, label %374

374:                                              ; preds = %368
  %375 = icmp ult i32 %372, %370
  br i1 %375, label %388, label %376

376:                                              ; preds = %374
  %377 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %365, i64 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %366, i64 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = icmp ult i32 %378, %380
  br i1 %381, label %325, label %382

382:                                              ; preds = %376
  %383 = icmp ult i32 %380, %378
  br i1 %383, label %388, label %384

384:                                              ; preds = %382
  %385 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %365, i64 1
  %386 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %366, i64 1
  %387 = icmp eq %"struct.std::__1::pair.286"* %386, %360
  br i1 %387, label %388, label %364

388:                                              ; preds = %347, %345, %343, %328, %355, %353, %273, %374, %384, %382
  %389 = bitcast %"struct.std::__1::pair.286"** %282 to i64*
  %390 = bitcast %"struct.std::__1::pair.286"** %277 to i64*
  %391 = bitcast %"class.std::__1::vector.284"* %262 to i64*
  %392 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %259, %"struct.jxl::QuantizedPatch"* nonnull dereferenceable(160) %134) #9
  %393 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %262, i64 0, i32 0, i32 0
  %394 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %393, align 8
  %395 = icmp eq %"struct.std::__1::pair.286"* %394, null
  br i1 %395, label %400, label %396

396:                                              ; preds = %388
  %397 = bitcast %"class.std::__1::vector.284"* %262 to i8*
  %398 = ptrtoint %"struct.std::__1::pair.286"* %394 to i64
  store i64 %398, i64* %390, align 8
  %399 = bitcast %"struct.std::__1::pair.286"* %394 to i8*
  call void @_ZdlPv(i8* %399) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %397, i8 0, i64 24, i1 false) #9
  br label %400

400:                                              ; preds = %388, %396
  %401 = load i64, i64* %123, align 8
  store i64 %401, i64* %391, align 8
  %402 = load i64, i64* %125, align 8
  store i64 %402, i64* %390, align 8
  %403 = load i64, i64* %127, align 8
  store i64 %403, i64* %389, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #9
  %404 = add i32 %163, 1
  %405 = icmp eq i32 %404, 8
  %406 = load float*, float** %135, align 8
  %407 = icmp eq float* %406, null
  br i1 %407, label %411, label %408

408:                                              ; preds = %400
  %409 = bitcast float* %406 to i8*
  %410 = ptrtoint float* %406 to i64
  store i64 %410, i64* %120, align 8
  call void @_ZdlPv(i8* %409) #19
  br label %411

411:                                              ; preds = %408, %400
  %412 = load float*, float** %136, align 8
  %413 = icmp eq float* %412, null
  br i1 %413, label %429, label %426

414:                                              ; preds = %435
  %415 = ptrtoint i8* %436 to i64
  store i64 %415, i64* %104, align 8
  call void @_ZdlPv(i8* nonnull %436) #19
  br label %416

416:                                              ; preds = %435, %414
  %417 = load i8*, i8** %131, align 8
  %418 = icmp eq i8* %417, null
  br i1 %418, label %421, label %419

419:                                              ; preds = %416
  %420 = ptrtoint i8* %417 to i64
  store i64 %420, i64* %99, align 8
  call void @_ZdlPv(i8* nonnull %417) #19
  br label %421

421:                                              ; preds = %419, %416
  %422 = load i8*, i8** %130, align 8
  %423 = icmp eq i8* %422, null
  br i1 %423, label %438, label %424

424:                                              ; preds = %421
  %425 = ptrtoint i8* %422 to i64
  store i64 %425, i64* %94, align 8
  call void @_ZdlPv(i8* nonnull %422) #19
  br label %438

426:                                              ; preds = %411
  %427 = ptrtoint float* %412 to i64
  store i64 %427, i64* %114, align 8
  %428 = bitcast float* %412 to i8*
  call void @_ZdlPv(i8* %428) #19
  br label %429

429:                                              ; preds = %426, %411
  %430 = load float*, float** %137, align 8
  %431 = icmp eq float* %430, null
  br i1 %431, label %435, label %432

432:                                              ; preds = %429
  %433 = ptrtoint float* %430 to i64
  store i64 %433, i64* %109, align 8
  %434 = bitcast float* %430 to i8*
  call void @_ZdlPv(i8* %434) #19
  br label %435

435:                                              ; preds = %432, %429
  %436 = load i8*, i8** %132, align 8
  %437 = icmp eq i8* %436, null
  br i1 %437, label %416, label %414

438:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %91) #9
  br i1 %405, label %443, label %439

439:                                              ; preds = %191, %201, %199, %438, %170, %168
  %440 = phi i32 [ %404, %438 ], [ %163, %168 ], [ %163, %170 ], [ %163, %199 ], [ %163, %201 ], [ %163, %191 ]
  %441 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 1
  %442 = icmp eq %"struct.std::__1::pair.270"* %441, %1
  br i1 %442, label %446, label %161

443:                                              ; preds = %438
  %444 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %162, i64 1
  %445 = icmp eq %"struct.std::__1::pair.270"* %444, %1
  br label %446

446:                                              ; preds = %36, %46, %44, %439, %443, %84, %15, %13, %50, %3, %3, %78, %73, %69
  %447 = phi i1 [ true, %78 ], [ true, %73 ], [ true, %69 ], [ true, %3 ], [ true, %3 ], [ true, %50 ], [ true, %13 ], [ true, %15 ], [ true, %84 ], [ %445, %443 ], [ true, %439 ], [ true, %44 ], [ true, %46 ], [ true, %36 ]
  ret i1 %447
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3jxl14QuantizedPatchltERKS0_(%"struct.jxl::QuantizedPatch"*, %"struct.jxl::QuantizedPatch"* dereferenceable(160)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = icmp ult i64 %4, %6
  br label %35

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = mul i64 %12, %4
  %18 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i32 @memcmp(i8* %19, i8* %21, i64 %17) #20
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %35, label %33

24:                                               ; preds = %10
  %25 = icmp ult i64 %12, %14
  br label %35

26:                                               ; preds = %33
  %27 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 1, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i32 @memcmp(i8* %28, i8* %30, i64 %17) #20
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %35, label %37

33:                                               ; preds = %16
  %34 = icmp slt i32 %22, 0
  br i1 %34, label %35, label %26

35:                                               ; preds = %33, %16, %26, %37, %39, %8, %24
  %36 = phi i1 [ %9, %8 ], [ %25, %24 ], [ false, %16 ], [ true, %33 ], [ false, %26 ], [ true, %37 ], [ false, %39 ]
  ret i1 %36

37:                                               ; preds = %26
  %38 = icmp slt i32 %31, 0
  br i1 %38, label %35, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 2, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = tail call i32 @memcmp(i8* %41, i8* %43, i64 %17) #20
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %35, label %46

46:                                               ; preds = %39
  %47 = icmp ne i32 %44, 0
  ret i1 %47
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160), %"struct.jxl::QuantizedPatch"* dereferenceable(160)) local_unnamed_addr #5 comdat {
  %3 = alloca %"struct.jxl::QuantizedPatch", align 8
  %4 = bitcast %"struct.jxl::QuantizedPatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %4) #9
  %5 = bitcast %"struct.jxl::QuantizedPatch"* %0 to i8*
  %6 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 5
  %7 = bitcast %"class.std::__1::vector.271"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 16, i1 false) #9
  %8 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 0
  %9 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0
  %10 = bitcast %"class.std::__1::vector.271"* %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.271"* %8 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %14, align 8
  %15 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.std::__1::vector.271"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #9
  %21 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 1
  %22 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1
  %23 = bitcast %"class.std::__1::vector.271"* %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 1, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = bitcast %"class.std::__1::vector.271"* %21 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast i8** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast %"class.std::__1::vector.271"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  %34 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 2
  %35 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2
  %36 = bitcast %"class.std::__1::vector.271"* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 2, i32 0, i32 1
  %39 = bitcast i8** %38 to i64*
  %40 = bitcast %"class.std::__1::vector.271"* %34 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast i8** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.271"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  %47 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 0
  %48 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0
  %49 = bitcast %"class.std::__1::vector.278"* %48 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8
  %51 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 0, i32 0, i32 1
  %52 = bitcast float** %51 to i64*
  %53 = bitcast %"class.std::__1::vector.278"* %47 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %53, align 8
  %54 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast float** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast float** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.std::__1::vector.278"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #9
  %60 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 1
  %61 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1
  %62 = bitcast %"class.std::__1::vector.278"* %61 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8
  %64 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 1, i32 0, i32 1
  %65 = bitcast float** %64 to i64*
  %66 = bitcast %"class.std::__1::vector.278"* %60 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %66, align 8
  %67 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast float** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast float** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = bitcast %"class.std::__1::vector.278"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #9
  %73 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 2
  %74 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2
  %75 = bitcast %"class.std::__1::vector.278"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::vector.278"* %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 2, i32 0, i32 1
  %80 = bitcast float** %78 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8
  %82 = bitcast float** %79 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %82, align 8
  %83 = bitcast %"class.std::__1::vector.278"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #9
  %84 = tail call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %0, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %1) #9
  %85 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %1, %"struct.jxl::QuantizedPatch"* nonnull dereferenceable(160) %3) #9
  %86 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 2, i32 0, i32 0
  %87 = load float*, float** %86, align 8
  %88 = icmp eq float* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %2
  %90 = bitcast float** %79 to i64*
  %91 = ptrtoint float* %87 to i64
  store i64 %91, i64* %90, align 8
  %92 = bitcast float* %87 to i8*
  call void @_ZdlPv(i8* %92) #19
  br label %93

93:                                               ; preds = %89, %2
  %94 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 1, i32 0, i32 0
  %95 = load float*, float** %94, align 8
  %96 = icmp eq float* %95, null
  br i1 %96, label %114, label %111

97:                                               ; preds = %121
  %98 = ptrtoint i8* %123 to i64
  store i64 %98, i64* %39, align 8
  call void @_ZdlPv(i8* nonnull %123) #19
  br label %99

99:                                               ; preds = %121, %97
  %100 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 1, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = icmp eq i8* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = ptrtoint i8* %101 to i64
  store i64 %104, i64* %26, align 8
  call void @_ZdlPv(i8* nonnull %101) #19
  br label %105

105:                                              ; preds = %103, %99
  %106 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %125, label %109

109:                                              ; preds = %105
  %110 = ptrtoint i8* %107 to i64
  store i64 %110, i64* %13, align 8
  call void @_ZdlPv(i8* nonnull %107) #19
  br label %125

111:                                              ; preds = %93
  %112 = ptrtoint float* %95 to i64
  store i64 %112, i64* %65, align 8
  %113 = bitcast float* %95 to i8*
  call void @_ZdlPv(i8* %113) #19
  br label %114

114:                                              ; preds = %111, %93
  %115 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 3, i64 0, i32 0, i32 0
  %116 = load float*, float** %115, align 8
  %117 = icmp eq float* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = ptrtoint float* %116 to i64
  store i64 %119, i64* %52, align 8
  %120 = bitcast float* %116 to i8*
  call void @_ZdlPv(i8* %120) #19
  br label %121

121:                                              ; preds = %118, %114
  %122 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %3, i64 0, i32 2, i64 2, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %99, label %97

125:                                              ; preds = %105, %109
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"*, %"struct.jxl::QuantizedPatch"* dereferenceable(160)) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"struct.jxl::QuantizedPatch"* %0 to i8*
  %4 = bitcast %"struct.jxl::QuantizedPatch"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0
  %6 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 0
  %7 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %5, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = ptrtoint i8* %8 to i64
  %12 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 8
  tail call void @_ZdlPv(i8* nonnull %8) #19
  %14 = bitcast %"class.std::__1::vector.271"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  br label %15

15:                                               ; preds = %2, %10
  %16 = bitcast %"class.std::__1::vector.271"* %6 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.271"* %5 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0, i32 0, i32 1
  %23 = bitcast i8** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast i8** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"class.std::__1::vector.271"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #9
  %30 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1
  %31 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 1
  %32 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %30, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %113, label %108

35:                                               ; preds = %138
  %36 = ptrtoint float* %156 to i64
  %37 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %38 = bitcast float** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast float* %156 to i8*
  tail call void @_ZdlPv(i8* %39) #19
  %40 = bitcast %"class.std::__1::vector.278"* %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #9
  br label %41

41:                                               ; preds = %138, %35
  %42 = bitcast %"class.std::__1::vector.278"* %154 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.278"* %153 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 0, i32 0, i32 1
  %46 = bitcast float** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %49 = bitcast float** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast float** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast float** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.std::__1::vector.278"* %154 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  %56 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1
  %57 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 1
  %58 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %56, i64 0, i32 0, i32 0
  %59 = load float*, float** %58, align 8
  %60 = icmp eq float* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %41
  %62 = ptrtoint float* %59 to i64
  %63 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %64 = bitcast float** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast float* %59 to i8*
  tail call void @_ZdlPv(i8* %65) #19
  %66 = bitcast %"class.std::__1::vector.278"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #9
  br label %67

67:                                               ; preds = %41, %61
  %68 = bitcast %"class.std::__1::vector.278"* %57 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector.278"* %56 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 1, i32 0, i32 1
  %72 = bitcast float** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %75 = bitcast float** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %77 = bitcast float** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast float** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = bitcast %"class.std::__1::vector.278"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #9
  %82 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2
  %83 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 2
  %84 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %82, i64 0, i32 0, i32 0
  %85 = load float*, float** %84, align 8
  %86 = icmp eq float* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %67
  %88 = ptrtoint float* %85 to i64
  %89 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %90 = bitcast float** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast float* %85 to i8*
  tail call void @_ZdlPv(i8* %91) #19
  %92 = bitcast %"class.std::__1::vector.278"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #9
  br label %93

93:                                               ; preds = %67, %87
  %94 = bitcast %"class.std::__1::vector.278"* %83 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.278"* %82 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 2, i32 0, i32 1
  %98 = bitcast float** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %101 = bitcast float** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast float** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %106 = bitcast float** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast %"class.std::__1::vector.278"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #9
  ret %"struct.jxl::QuantizedPatch"* %0

108:                                              ; preds = %15
  %109 = ptrtoint i8* %33 to i64
  %110 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %111 = bitcast i8** %110 to i64*
  store i64 %109, i64* %111, align 8
  tail call void @_ZdlPv(i8* nonnull %33) #19
  %112 = bitcast %"class.std::__1::vector.271"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #9
  br label %113

113:                                              ; preds = %15, %108
  %114 = bitcast %"class.std::__1::vector.271"* %31 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.std::__1::vector.271"* %30 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 1, i32 0, i32 1
  %118 = bitcast i8** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %121 = bitcast i8** %120 to i64*
  store i64 %119, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast i8** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast i8** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = bitcast %"class.std::__1::vector.271"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #9
  %128 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2
  %129 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 2
  %130 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %128, i64 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %113
  %134 = ptrtoint i8* %131 to i64
  %135 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %136 = bitcast i8** %135 to i64*
  store i64 %134, i64* %136, align 8
  tail call void @_ZdlPv(i8* nonnull %131) #19
  %137 = bitcast %"class.std::__1::vector.271"* %128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #9
  br label %138

138:                                              ; preds = %113, %133
  %139 = bitcast %"class.std::__1::vector.271"* %129 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.std::__1::vector.271"* %128 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 2, i32 0, i32 1
  %143 = bitcast i8** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %146 = bitcast i8** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %148 = bitcast i8** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %151 = bitcast i8** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = bitcast %"class.std::__1::vector.271"* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #9
  %153 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %0, i64 0, i32 3, i64 0
  %154 = getelementptr inbounds %"struct.jxl::QuantizedPatch", %"struct.jxl::QuantizedPatch"* %1, i64 0, i32 3, i64 0
  %155 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %153, i64 0, i32 0, i32 0
  %156 = load float*, float** %155, align 8
  %157 = icmp eq float* %156, null
  br i1 %157, label %41, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIaNS_9allocatorIaEEE6assignIPaEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIaNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.271"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.271"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #9
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #9
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #19
  %46 = bitcast %"class.std::__1::vector.271"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector.271"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #18
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #19
  %61 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #9
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.278"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #19
  %55 = bitcast %"class.std::__1::vector.278"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #18
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #18
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #19
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.278"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIjjEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.284"*, %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.286"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.286"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.286"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.284"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.286"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.286"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.286"* %24, %"struct.std::__1::pair.286"* %2
  %26 = icmp eq %"struct.std::__1::pair.286"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %25, i64 -1, i32 0
  %29 = ptrtoint i32* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair.286"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair.286"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %37, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %36, i64 0, i32 0
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %36, i64 0, i32 1
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !93

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair.286"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair.286"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair.286"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 24
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair.286"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair.286"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 0, i32 0
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 0, i32 1
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 1, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 1, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 1, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 1, i32 1
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 2, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 2, i32 0
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 2, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 2, i32 1
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 3, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 3, i32 0
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 3, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 3, i32 1
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair.286"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair.286"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair.286"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 3
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair.286"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 %89, i1 false) #9
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair.286"*
  %96 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair.286"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair.286"* %85, %"struct.std::__1::pair.286"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair.286"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #19
  %107 = bitcast %"class.std::__1::vector.284"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #9
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 2305843009213693951
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.284"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #18
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 3
  %115 = icmp ult i64 %114, 1152921504606846975
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 2
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 2305843009213693951
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.284"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #18
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 2305843009213693951, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 3
  %126 = tail call i8* @_Znwm(i64 %125) #19
  %127 = bitcast i8* %126 to %"struct.std::__1::pair.286"*
  %128 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair.286"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.284"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %127, i64 %124
  store %"struct.std::__1::pair.286"* %131, %"struct.std::__1::pair.286"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair.286"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 3
  %137 = bitcast %"struct.std::__1::pair.286"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %126, i8* align 4 %137, i64 %6, i1 false) #9
  %138 = getelementptr inbounds %"struct.std::__1::pair.286", %"struct.std::__1::pair.286"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair.286"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE8__appendEm(%"class.std::__1::vector.268"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.431", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"struct.std::__1::pair.270"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair.270"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 184
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %28, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %9 to %"struct.std::__1::pair.270"*
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %26, label %19

17:                                               ; preds = %19
  %18 = ptrtoint %"struct.std::__1::pair.270"* %15 to i64
  br label %26

19:                                               ; preds = %13, %19
  %20 = phi %"struct.std::__1::pair.270"* [ %24, %19 ], [ %14, %13 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %20, i64 0, i32 0
  tail call void @_ZN3jxl14QuantizedPatchC2Ev(%"struct.jxl::QuantizedPatch"* %21) #9
  %22 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %20, i64 0, i32 1
  %23 = bitcast %"class.std::__1::vector.284"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9
  %24 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %20, i64 1
  %25 = icmp eq %"struct.std::__1::pair.270"* %24, %15
  br i1 %25, label %17, label %19

26:                                               ; preds = %13, %17
  %27 = phi i64 [ %18, %17 ], [ %9, %13 ]
  store i64 %27, i64* %8, align 8
  br label %78

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 2
  %30 = bitcast %"struct.std::__1::__split_buffer.431"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %3, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %3, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %3, i64 0, i32 2
  %34 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %3, i64 0, i32 3, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::__split_buffer.431", %"struct.std::__1::__split_buffer.431"* %3, i64 0, i32 3, i32 1, i32 0
  %36 = bitcast %"class.std::__1::vector.268"* %0 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.431"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 40, i1 false)
  %38 = load i64, i64* %36, align 8
  %39 = sub i64 %9, %38
  %40 = sdiv exact i64 %39, 184
  %41 = add i64 %40, %1
  %42 = icmp ugt i64 %41, 100254043878856258
  br i1 %42, label %43, label %45

43:                                               ; preds = %28
  %44 = bitcast %"class.std::__1::vector.268"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #18
  unreachable

45:                                               ; preds = %28
  %46 = sub i64 %6, %38
  %47 = sdiv exact i64 %46, 184
  %48 = icmp ult i64 %47, 50127021939428129
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  store %"struct.std::__1::pair.270"* null, %"struct.std::__1::pair.270"** %34, align 8
  %50 = bitcast %"class.std::__1::allocator.295"** %35 to %"class.std::__1::__compressed_pair.292"**
  store %"class.std::__1::__compressed_pair.292"* %29, %"class.std::__1::__compressed_pair.292"** %50, align 8
  br label %57

51:                                               ; preds = %45
  %52 = shl nsw i64 %47, 1
  %53 = icmp ult i64 %52, %41
  %54 = select i1 %53, i64 %41, i64 %52
  store %"struct.std::__1::pair.270"* null, %"struct.std::__1::pair.270"** %34, align 8
  %55 = bitcast %"class.std::__1::allocator.295"** %35 to %"class.std::__1::__compressed_pair.292"**
  store %"class.std::__1::__compressed_pair.292"* %29, %"class.std::__1::__compressed_pair.292"** %55, align 8
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %51, %49
  %58 = phi i64 [ 100254043878856258, %49 ], [ %54, %51 ]
  %59 = mul i64 %58, 184
  %60 = tail call i8* @_Znwm(i64 %59) #19
  %61 = bitcast i8* %60 to %"struct.std::__1::pair.270"*
  br label %62

62:                                               ; preds = %51, %57
  %63 = phi i64 [ %58, %57 ], [ 0, %51 ]
  %64 = phi %"struct.std::__1::pair.270"* [ %61, %57 ], [ null, %51 ]
  store %"struct.std::__1::pair.270"* %64, %"struct.std::__1::pair.270"** %31, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %64, i64 %40
  store %"struct.std::__1::pair.270"* %65, %"struct.std::__1::pair.270"** %33, align 8
  store %"struct.std::__1::pair.270"* %65, %"struct.std::__1::pair.270"** %32, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %64, i64 %63
  store %"struct.std::__1::pair.270"* %66, %"struct.std::__1::pair.270"** %34, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %65, i64 %1
  br label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.270"* [ %73, %68 ], [ %65, %62 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %69, i64 0, i32 0
  tail call void @_ZN3jxl14QuantizedPatchC2Ev(%"struct.jxl::QuantizedPatch"* %70) #9
  %71 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %69, i64 0, i32 1
  %72 = bitcast %"class.std::__1::vector.284"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #9
  %73 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %69, i64 1
  %74 = icmp eq %"struct.std::__1::pair.270"* %67, %73
  br i1 %74, label %75, label %68

75:                                               ; preds = %68
  %76 = bitcast %"struct.std::__1::pair.270"** %33 to i64*
  %77 = ptrtoint %"struct.std::__1::pair.270"* %67 to i64
  store i64 %77, i64* %76, align 8
  call void @_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(%"class.std::__1::vector.268"* %0, %"struct.std::__1::__split_buffer.431"* nonnull dereferenceable(40) %3)
  call void @_ZNSt3__114__split_bufferINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEERNS6_IS9_EEED2Ev(%"struct.std::__1::__split_buffer.431"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #9
  br label %78

78:                                               ; preds = %75, %26
  ret void
}

declare void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"*) unnamed_addr #1

declare void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl17PassesSharedStateC2Ev(%"struct.jxl::PassesSharedState"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 1
  tail call void @_ZN3jxl11FrameHeaderC1EPKNS_13CodecMetadataE(%"struct.jxl::FrameHeader"* %2, %"struct.jxl::CodecMetadata"* null) #9
  %3 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 3
  %4 = bitcast %"class.jxl::AcStrategyImage"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #9
  %5 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 4
  tail call void @_ZN3jxl15DequantMatricesC2Ev(%"class.jxl::DequantMatrices"* %5)
  %6 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 5
  tail call void @_ZN3jxl9QuantizerC1EPKNS_15DequantMatricesE(%"class.jxl::Quantizer"* %6, %"class.jxl::DequantMatrices"* %5) #9
  %7 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 3
  %9 = bitcast %"class.jxl::Plane.74"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 144, i1 false)
  store i32 84, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 4
  store float 0x3F88618620000000, float* %10, align 4
  %11 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 5
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 6
  store float 1.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 7
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 8
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 1, i32 1
  %16 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 2, i32 1
  %17 = bitcast %"class.std::__1::vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 76, i1 false) #9
  %18 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 13
  %19 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 14
  %20 = bitcast %"class.std::__1::vector.76"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 208, i1 false)
  store %"class.jxl::Image3"* %18, %"class.jxl::Image3"** %19, align 8
  %21 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15
  %22 = bitcast %"struct.jxl::BlockCtxMap"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 96, i1 false) #9
  %23 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 2, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 2, i32 0, i32 0
  %25 = tail call i8* @_Znwm(i64 39) #19
  %26 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 2, i32 0, i32 1
  store i8* %25, i8** %24, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 39
  store i8* %27, i8** %23, align 8
  %28 = bitcast i8** %26 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 16 getelementptr inbounds ([39 x i8], [39 x i8]* @_ZN3jxl11BlockCtxMap14kDefaultCtxMapE, i64 0, i64 0), i64 39, i1 false) #9
  %29 = ptrtoint i8* %27 to i64
  store i64 %29, i64* %28, align 8
  %30 = ptrtoint i8* %25 to i64
  br label %31

31:                                               ; preds = %31, %1
  %32 = phi i64 [ 1, %1 ], [ %49, %31 ]
  %33 = phi i64 [ %30, %1 ], [ %48, %31 ]
  %34 = getelementptr inbounds i8, i8* %25, i64 %32
  %35 = ptrtoint i8* %34 to i64
  %36 = inttoptr i64 %33 to i8*
  %37 = load i8, i8* %36, align 1
  %38 = load i8, i8* %34, align 1
  %39 = icmp ult i8 %37, %38
  %40 = select i1 %39, i64 %35, i64 %33
  %41 = add nuw nsw i64 %32, 1
  %42 = getelementptr inbounds i8, i8* %25, i64 %41
  %43 = ptrtoint i8* %42 to i64
  %44 = inttoptr i64 %40 to i8*
  %45 = load i8, i8* %44, align 1
  %46 = load i8, i8* %42, align 1
  %47 = icmp ult i8 %45, %46
  %48 = select i1 %47, i64 %43, i64 %40
  %49 = add nuw nsw i64 %32, 2
  %50 = icmp eq i64 %49, 39
  br i1 %50, label %51, label %31

51:                                               ; preds = %31
  %52 = inttoptr i64 %48 to i8*
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = add nuw nsw i64 %54, 1
  %56 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 3
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 4
  store i64 1, i64* %57, align 8
  %58 = getelementptr %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 0
  %59 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0, i32 1
  %61 = bitcast %"class.jxl::Image3"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 392, i1 false)
  store i32 1, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0, i32 3
  tail call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %62) #9
  %63 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0, i32 4, i32 0
  %64 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0, i32 8
  %65 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0, i32 11
  %66 = bitcast i32* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 14, i1 false) #9
  %67 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 128, i1 false) #9
  tail call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %65) #9
  %68 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0, i32 12
  %69 = bitcast %"class.std::__1::vector.169"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 32, i1 false) #9
  %70 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 1
  store %"class.jxl::ImageBundle"* %59, %"class.jxl::ImageBundle"** %70, align 8
  %71 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 2
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1
  %73 = getelementptr inbounds %struct.anon.104, %struct.anon.104* %72, i64 0, i32 0
  %74 = bitcast %struct.anon.104* %72 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 0, i32 1
  store i32 1, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 0, i32 3
  tail call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %76) #9
  %77 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 0, i32 4, i32 0
  %78 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 0, i32 8
  %79 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 0, i32 11
  %80 = bitcast i32* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 14, i1 false) #9
  %81 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 128, i1 false) #9
  tail call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %79) #9
  %82 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 0, i32 12
  %83 = bitcast %"class.std::__1::vector.169"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 32, i1 false) #9
  %84 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 1
  store %"class.jxl::ImageBundle"* %73, %"class.jxl::ImageBundle"** %84, align 8
  %85 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 2
  store i8 0, i8* %85, align 8
  %86 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2
  %87 = getelementptr inbounds %struct.anon.104, %struct.anon.104* %86, i64 0, i32 0
  %88 = bitcast %struct.anon.104* %86 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 0, i32 1
  store i32 1, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 0, i32 3
  tail call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %90) #9
  %91 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 0, i32 4, i32 0
  %92 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 0, i32 8
  %93 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 0, i32 11
  %94 = bitcast i32* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 14, i1 false) #9
  %95 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 128, i1 false) #9
  tail call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %93) #9
  %96 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 0, i32 12
  %97 = bitcast %"class.std::__1::vector.169"* %96 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 32, i1 false) #9
  %98 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 1
  store %"class.jxl::ImageBundle"* %87, %"class.jxl::ImageBundle"** %98, align 8
  %99 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 2
  store i8 0, i8* %99, align 8
  %100 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3
  %101 = getelementptr inbounds %struct.anon.104, %struct.anon.104* %100, i64 0, i32 0
  %102 = bitcast %struct.anon.104* %100 to i64*
  store i64 0, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 0, i32 1
  store i32 1, i32* %103, align 8
  %104 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 0, i32 3
  tail call void @_ZN3jxl22YCbCrChromaSubsamplingC1Ev(%"struct.jxl::YCbCrChromaSubsampling"* %104) #9
  %105 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 0, i32 4, i32 0
  %106 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 0, i32 8
  %107 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 0, i32 11
  %108 = bitcast i32* %105 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 14, i1 false) #9
  %109 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 128, i1 false) #9
  tail call void @_ZN3jxl13ColorEncodingC1Ev(%"struct.jxl::ColorEncoding"* %107) #9
  %110 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 0, i32 12
  %111 = bitcast %"class.std::__1::vector.169"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 32, i1 false) #9
  %112 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 1
  store %"class.jxl::ImageBundle"* %101, %"class.jxl::ImageBundle"** %112, align 8
  %113 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 2
  store i8 0, i8* %113, align 8
  %114 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 18
  store i64 0, i64* %114, align 8
  ret void
}

declare void @_ZN3jxl11FrameHeaderC1EPKNS_13CodecMetadataE(%"struct.jxl::FrameHeader"*, %"struct.jxl::CodecMetadata"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl15DequantMatricesC2Ev(%"class.jxl::DequantMatrices"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca [216 x i8], align 4
  %3 = alloca [112 x i8], align 4
  %4 = alloca [216 x i8], align 4
  %5 = alloca %"class.jxl::QuantEncoding", align 8
  %6 = alloca [51 x i64], align 16
  %7 = alloca %"class.jxl::QuantEncoding", align 8
  %8 = bitcast %"class.jxl::DequantMatrices"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"class.jxl::DequantMatrices", %"class.jxl::DequantMatrices"* %0, i64 0, i32 3, i64 0
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 0x3F30000000000000, float 0x3F60000000000000, float 3.906250e-03, float 4.096000e+03>, <4 x float>* %10, align 4
  %11 = getelementptr inbounds %"class.jxl::DequantMatrices", %"class.jxl::DequantMatrices"* %0, i64 0, i32 4, i64 1
  store float 5.120000e+02, float* %11, align 4
  %12 = getelementptr inbounds %"class.jxl::DequantMatrices", %"class.jxl::DequantMatrices"* %0, i64 0, i32 4, i64 2
  store float 2.560000e+02, float* %12, align 4
  %13 = getelementptr inbounds %"class.jxl::DequantMatrices", %"class.jxl::DequantMatrices"* %0, i64 0, i32 6
  %14 = bitcast %"class.std::__1::vector.48"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  %15 = bitcast %"class.jxl::QuantEncoding"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 560, i8* nonnull %15) #9
  %16 = getelementptr inbounds [216 x i8], [216 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %16)
  %17 = getelementptr inbounds [112 x i8], [112 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17)
  %18 = getelementptr inbounds [216 x i8], [216 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %18)
  %19 = getelementptr inbounds [216 x i8], [216 x i8]* %2, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 212, i1 false), !alias.scope !94, !noalias !97
  %20 = getelementptr inbounds [112 x i8], [112 x i8]* %3, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 108, i1 false), !alias.scope !94, !noalias !97
  %21 = getelementptr inbounds [216 x i8], [216 x i8]* %4, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 212, i1 false), !alias.scope !94, !noalias !97
  %22 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %22, align 8, !alias.scope !97
  %23 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %5, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* nonnull align 4 %16, i64 216, i1 false) #9
  %24 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %5, i64 0, i32 0, i32 2, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %17, i64 112, i1 false) #9
  %25 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %5, i64 0, i32 0, i32 3, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 4 %18, i64 216, i1 false) #9
  %26 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %5, i64 0, i32 0, i32 5, i32 0
  store i8 0, i8* %26, align 8, !alias.scope !97
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %18)
  call void @_ZNSt3__16vectorIN3jxl13QuantEncodingENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.48"* %13, i64 17, %"class.jxl::QuantEncoding"* nonnull dereferenceable(560) %5) #9
  %27 = load i32, i32* %22, align 8
  %28 = icmp eq i32 %27, 7
  br i1 %28, label %29, label %45

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %5, i64 0, i32 0, i32 3
  %31 = bitcast %union.anon.51* %30 to %"class.std::__1::vector.61"**
  %32 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %31, align 8
  %33 = icmp eq %"class.std::__1::vector.61"* %32, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %32, i64 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = ptrtoint i32* %36 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %32, i64 0, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast i32* %36 to i8*
  call void @_ZdlPv(i8* %42) #19
  br label %43

43:                                               ; preds = %38, %34
  %44 = bitcast %"class.std::__1::vector.61"* %32 to i8*
  call void @_ZdlPv(i8* %44) #19
  br label %45

45:                                               ; preds = %1, %29, %43
  call void @llvm.lifetime.end.p0i8(i64 560, i8* nonnull %15) #9
  %46 = bitcast [51 x i64]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %46) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 408, i1 false)
  %47 = bitcast %"class.jxl::QuantEncoding"* %7 to i8*
  %48 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %7, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %7, i64 0, i32 0, i32 1, i64 0
  %50 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %7, i64 0, i32 0, i32 2, i32 2, i64 0
  %51 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %7, i64 0, i32 0, i32 3, i32 1, i64 0
  %52 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %7, i64 0, i32 0, i32 5, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %13, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %7, i64 0, i32 0, i32 3
  %55 = bitcast %union.anon.51* %54 to %"class.std::__1::vector.61"**
  br label %56

56:                                               ; preds = %78, %45
  %57 = phi i64 [ 0, %45 ], [ %93, %78 ]
  %58 = phi i64 [ 0, %45 ], [ %92, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 560, i8* nonnull %47) #9
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %16)
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17)
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %18)
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 212, i1 false), !alias.scope !100, !noalias !103
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 108, i1 false), !alias.scope !100, !noalias !103
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 212, i1 false), !alias.scope !100, !noalias !103
  store i32 0, i32* %48, align 8, !alias.scope !103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* nonnull align 4 %16, i64 216, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* nonnull align 4 %17, i64 112, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* nonnull align 4 %18, i64 216, i1 false) #9
  store i8 0, i8* %52, align 8, !alias.scope !103
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %18)
  %59 = load %"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"** %53, align 8
  %60 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %59, i64 %57
  %61 = call dereferenceable(560) %"class.jxl::QuantEncoding"* @_ZN3jxl13QuantEncodingaSERKS0_(%"class.jxl::QuantEncoding"* %60, %"class.jxl::QuantEncoding"* nonnull dereferenceable(560) %7)
  %62 = load i32, i32* %48, align 8
  %63 = icmp eq i32 %62, 7
  br i1 %63, label %64, label %78

64:                                               ; preds = %56
  %65 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %55, align 8
  %66 = icmp eq %"class.std::__1::vector.61"* %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %65, i64 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint i32* %69 to i64
  %73 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %65, i64 0, i32 0, i32 1
  %74 = bitcast i32** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast i32* %69 to i8*
  call void @_ZdlPv(i8* %75) #19
  br label %76

76:                                               ; preds = %71, %67
  %77 = bitcast %"class.std::__1::vector.61"* %65 to i8*
  call void @_ZdlPv(i8* %77) #19
  br label %78

78:                                               ; preds = %56, %64, %76
  call void @llvm.lifetime.end.p0i8(i64 560, i8* nonnull %47) #9
  %79 = getelementptr inbounds [17 x i64], [17 x i64]* @_ZN3jxl15DequantMatrices14required_size_E.const, i64 0, i64 %57
  %80 = load i64, i64* %79, align 8
  %81 = shl i64 %80, 6
  %82 = mul nuw nsw i64 %57, 3
  %83 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %82
  store i64 %58, i64* %83, align 8
  %84 = add i64 %81, %58
  %85 = add nuw nsw i64 %82, 1
  %86 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %85
  store i64 %84, i64* %86, align 8
  %87 = shl i64 %80, 7
  %88 = add i64 %87, %58
  %89 = add nuw nsw i64 %82, 2
  %90 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %89
  store i64 %88, i64* %90, align 8
  %91 = mul i64 %80, 192
  %92 = add i64 %91, %58
  %93 = add nuw nsw i64 %57, 1
  %94 = icmp eq i64 %93, 17
  br i1 %94, label %95, label %56

95:                                               ; preds = %78, %114
  %96 = phi i64 [ %123, %114 ], [ 0, %78 ]
  %97 = mul nuw nsw i64 %96, 3
  %98 = getelementptr %"class.jxl::DequantMatrices", %"class.jxl::DequantMatrices"* %0, i64 0, i32 5, i64 %97
  %99 = bitcast i64* %98 to i8*
  %100 = getelementptr inbounds [27 x i64], [27 x i64]* @_ZN3jxl15DequantMatrices11kQuantTableE.const, i64 0, i64 %96
  %101 = load i64, i64* %100, align 16
  %102 = mul i64 %101, 3
  %103 = getelementptr [51 x i64], [51 x i64]* %6, i64 0, i64 %102
  %104 = bitcast i64* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %104, i64 24, i1 false)
  %105 = or i64 %96, 1
  %106 = icmp eq i64 %105, 27
  br i1 %106, label %107, label %114

107:                                              ; preds = %95
  %108 = call i32 @_ZN3jxl15DequantMatrices7ComputeEv(%"class.jxl::DequantMatrices"* %0) #9
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %107
  %111 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.31, i64 0, i64 0), i32 393, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #9
  %112 = call zeroext i1 @_ZN3jxl5AbortEv() #18
  unreachable

113:                                              ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %46) #9
  ret void

114:                                              ; preds = %95
  %115 = mul nuw nsw i64 %105, 3
  %116 = getelementptr %"class.jxl::DequantMatrices", %"class.jxl::DequantMatrices"* %0, i64 0, i32 5, i64 %115
  %117 = bitcast i64* %116 to i8*
  %118 = getelementptr inbounds [27 x i64], [27 x i64]* @_ZN3jxl15DequantMatrices11kQuantTableE.const, i64 0, i64 %105
  %119 = load i64, i64* %118, align 8
  %120 = mul i64 %119, 3
  %121 = getelementptr [51 x i64], [51 x i64]* %6, i64 0, i64 %120
  %122 = bitcast i64* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %122, i64 24, i1 false)
  %123 = add nuw nsw i64 %96, 2
  br label %95
}

declare void @_ZN3jxl9QuantizerC1EPKNS_15DequantMatricesE(%"class.jxl::Quantizer"*, %"class.jxl::DequantMatrices"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(560) %"class.jxl::QuantEncoding"* @_ZN3jxl13QuantEncodingaSERKS0_(%"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"* dereferenceable(560)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %22

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %union.anon.51* %7 to %"class.std::__1::vector.61"**
  %9 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.61"* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.std::__1::vector.61"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #19
  br label %22

22:                                               ; preds = %6, %20, %2
  %23 = bitcast %"class.jxl::QuantEncoding"* %1 to i8*
  %24 = bitcast %"class.jxl::QuantEncoding"* %0 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %23, i64 553, i1 false)
  %25 = load i32, i32* %3, align 8
  %26 = icmp eq i32 %25, 7
  br i1 %26, label %27, label %75

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %0, i64 0, i32 0, i32 3
  %29 = bitcast %union.anon.51* %28 to %"class.std::__1::vector.61"**
  %30 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %29, align 8
  %31 = icmp eq %"class.std::__1::vector.61"* %30, null
  br i1 %31, label %75, label %32

32:                                               ; preds = %27
  %33 = tail call i8* @_Znwm(i64 24) #19
  %34 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %1, i64 0, i32 0, i32 3
  %35 = bitcast %union.anon.51* %34 to %"class.std::__1::vector.61"**
  %36 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %35, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #9
  %37 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %36, i64 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.61"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 2
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %73, label %45

45:                                               ; preds = %32
  %46 = icmp ugt i64 %43, 4611686018427387903
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast i8* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %48) #18
  unreachable

49:                                               ; preds = %45
  %50 = tail call i8* @_Znwm(i64 %42) #19
  %51 = bitcast i8* %50 to i32*
  %52 = getelementptr inbounds i8, i8* %33, i64 8
  %53 = bitcast i8* %52 to i8**
  store i8* %50, i8** %53, align 8
  %54 = bitcast i8* %33 to i8**
  store i8* %50, i8** %54, align 8
  %55 = getelementptr inbounds i32, i32* %51, i64 %43
  %56 = getelementptr inbounds i8, i8* %33, i64 16
  %57 = bitcast i8* %56 to i32**
  store i32* %55, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %36, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %38, align 8
  %61 = bitcast i8* %52 to i64*
  %62 = ptrtoint i8* %50 to i64
  %63 = ptrtoint i32* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %49
  %67 = lshr exact i64 %64, 2
  %68 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %68, i64 %64, i1 false) #9
  %69 = getelementptr inbounds i32, i32* %51, i64 %67
  %70 = ptrtoint i32* %69 to i64
  br label %71

71:                                               ; preds = %66, %49
  %72 = phi i64 [ %70, %66 ], [ %62, %49 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %32, %71
  %74 = bitcast %union.anon.51* %28 to i8**
  store i8* %33, i8** %74, align 8
  br label %75

75:                                               ; preds = %27, %73, %22
  ret %"class.jxl::QuantEncoding"* %0
}

declare i32 @_ZN3jxl15DequantMatrices7ComputeEv(%"class.jxl::DequantMatrices"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3jxl13QuantEncodingENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.48"*, i64, %"class.jxl::QuantEncoding"* dereferenceable(560)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.jxl::QuantEncoding"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.jxl::QuantEncoding"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 560
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %80, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.jxl::QuantEncoding"*
  %15 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %78, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.jxl::QuantEncoding"* %2 to i8*
  %19 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %2, i64 0, i32 0, i32 3
  %20 = bitcast %union.anon.51* %19 to %"class.std::__1::vector.61"**
  br label %23

21:                                               ; preds = %75
  %22 = ptrtoint %"class.jxl::QuantEncoding"* %15 to i64
  br label %78

23:                                               ; preds = %75, %17
  %24 = phi %"class.jxl::QuantEncoding"* [ %14, %17 ], [ %76, %75 ]
  %25 = bitcast %"class.jxl::QuantEncoding"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %18, i64 553, i1 false) #9
  %26 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %24, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 7
  br i1 %28, label %29, label %75

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %24, i64 0, i32 0, i32 3
  %31 = bitcast %union.anon.51* %30 to %"class.std::__1::vector.61"**
  %32 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %31, align 8
  %33 = icmp eq %"class.std::__1::vector.61"* %32, null
  br i1 %33, label %75, label %34

34:                                               ; preds = %29
  %35 = tail call i8* @_Znwm(i64 24) #19
  %36 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %20, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #9
  %37 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %36, i64 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.61"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 2
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %73, label %45

45:                                               ; preds = %34
  %46 = icmp ugt i64 %43, 4611686018427387903
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast i8* %35 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %48) #18
  unreachable

49:                                               ; preds = %45
  %50 = tail call i8* @_Znwm(i64 %42) #19
  %51 = bitcast i8* %50 to i32*
  %52 = getelementptr inbounds i8, i8* %35, i64 8
  %53 = bitcast i8* %52 to i8**
  store i8* %50, i8** %53, align 8
  %54 = bitcast i8* %35 to i8**
  store i8* %50, i8** %54, align 8
  %55 = getelementptr inbounds i32, i32* %51, i64 %43
  %56 = getelementptr inbounds i8, i8* %35, i64 16
  %57 = bitcast i8* %56 to i32**
  store i32* %55, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %36, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %38, align 8
  %61 = bitcast i8* %52 to i64*
  %62 = ptrtoint i8* %50 to i64
  %63 = ptrtoint i32* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %49
  %67 = lshr exact i64 %64, 2
  %68 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %68, i64 %64, i1 false) #9
  %69 = getelementptr inbounds i32, i32* %51, i64 %67
  %70 = ptrtoint i32* %69 to i64
  br label %71

71:                                               ; preds = %66, %49
  %72 = phi i64 [ %70, %66 ], [ %62, %49 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %71, %34
  %74 = bitcast %union.anon.51* %30 to i8**
  store i8* %35, i8** %74, align 8
  br label %75

75:                                               ; preds = %73, %29, %23
  %76 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %24, i64 1
  %77 = icmp eq %"class.jxl::QuantEncoding"* %76, %15
  br i1 %77, label %21, label %23

78:                                               ; preds = %13, %21
  %79 = phi i64 [ %22, %21 ], [ %9, %13 ]
  store i64 %79, i64* %8, align 8
  br label %229

80:                                               ; preds = %3
  %81 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %9, %82
  %84 = sdiv exact i64 %83, 560
  %85 = add i64 %84, %1
  %86 = icmp ugt i64 %85, 32940614417338485
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #18
  unreachable

89:                                               ; preds = %80
  %90 = sub i64 %6, %82
  %91 = sdiv exact i64 %90, 560
  %92 = icmp ult i64 %91, 16470307208669242
  br i1 %92, label %93, label %98

93:                                               ; preds = %89
  %94 = shl nsw i64 %91, 1
  %95 = icmp ult i64 %94, %85
  %96 = select i1 %95, i64 %85, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %89, %93
  %99 = phi i64 [ %96, %93 ], [ 32940614417338485, %89 ]
  %100 = mul i64 %99, 560
  %101 = tail call i8* @_Znwm(i64 %100) #19
  %102 = bitcast i8* %101 to %"class.jxl::QuantEncoding"*
  br label %103

103:                                              ; preds = %98, %93
  %104 = phi i64 [ %99, %98 ], [ 0, %93 ]
  %105 = phi %"class.jxl::QuantEncoding"* [ %102, %98 ], [ null, %93 ]
  %106 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %105, i64 %84
  %107 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %105, i64 %104
  %108 = ptrtoint %"class.jxl::QuantEncoding"* %107 to i64
  %109 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %106, i64 %1
  %110 = bitcast %"class.jxl::QuantEncoding"* %2 to i8*
  %111 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %2, i64 0, i32 0, i32 3
  %112 = bitcast %union.anon.51* %111 to %"class.std::__1::vector.61"**
  br label %113

113:                                              ; preds = %165, %103
  %114 = phi %"class.jxl::QuantEncoding"* [ %106, %103 ], [ %166, %165 ]
  %115 = bitcast %"class.jxl::QuantEncoding"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %110, i64 553, i1 false) #9
  %116 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %114, i64 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 7
  br i1 %118, label %119, label %165

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %114, i64 0, i32 0, i32 3
  %121 = bitcast %union.anon.51* %120 to %"class.std::__1::vector.61"**
  %122 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %121, align 8
  %123 = icmp eq %"class.std::__1::vector.61"* %122, null
  br i1 %123, label %165, label %124

124:                                              ; preds = %119
  %125 = tail call i8* @_Znwm(i64 24) #19
  %126 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %112, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 24, i1 false) #9
  %127 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %126, i64 0, i32 0, i32 1
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::vector.61"* %126 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  %133 = ashr exact i64 %132, 2
  %134 = icmp eq i64 %132, 0
  br i1 %134, label %163, label %135

135:                                              ; preds = %124
  %136 = icmp ugt i64 %133, 4611686018427387903
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = bitcast i8* %125 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %138) #18
  unreachable

139:                                              ; preds = %135
  %140 = tail call i8* @_Znwm(i64 %132) #19
  %141 = bitcast i8* %140 to i32*
  %142 = getelementptr inbounds i8, i8* %125, i64 8
  %143 = bitcast i8* %142 to i8**
  store i8* %140, i8** %143, align 8
  %144 = bitcast i8* %125 to i8**
  store i8* %140, i8** %144, align 8
  %145 = getelementptr inbounds i32, i32* %141, i64 %133
  %146 = getelementptr inbounds i8, i8* %125, i64 16
  %147 = bitcast i8* %146 to i32**
  store i32* %145, i32** %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %126, i64 0, i32 0, i32 0
  %149 = load i32*, i32** %148, align 8
  %150 = load i64, i64* %128, align 8
  %151 = bitcast i8* %142 to i64*
  %152 = ptrtoint i8* %140 to i64
  %153 = ptrtoint i32* %149 to i64
  %154 = sub i64 %150, %153
  %155 = icmp sgt i64 %154, 0
  br i1 %155, label %156, label %161

156:                                              ; preds = %139
  %157 = lshr exact i64 %154, 2
  %158 = bitcast i32* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %140, i8* align 4 %158, i64 %154, i1 false) #9
  %159 = getelementptr inbounds i32, i32* %141, i64 %157
  %160 = ptrtoint i32* %159 to i64
  br label %161

161:                                              ; preds = %156, %139
  %162 = phi i64 [ %160, %156 ], [ %152, %139 ]
  store i64 %162, i64* %151, align 8
  br label %163

163:                                              ; preds = %161, %124
  %164 = bitcast %union.anon.51* %120 to i8**
  store i8* %125, i8** %164, align 8
  br label %165

165:                                              ; preds = %113, %119, %163
  %166 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %114, i64 1
  %167 = icmp eq %"class.jxl::QuantEncoding"* %109, %166
  br i1 %167, label %168, label %113

168:                                              ; preds = %165
  %169 = ptrtoint %"class.jxl::QuantEncoding"* %109 to i64
  %170 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 0
  %171 = load %"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"** %170, align 8
  %172 = load %"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"** %7, align 8
  %173 = icmp eq %"class.jxl::QuantEncoding"* %172, %171
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = ptrtoint %"class.jxl::QuantEncoding"* %171 to i64
  br label %194

176:                                              ; preds = %168, %189
  %177 = phi %"class.jxl::QuantEncoding"* [ %179, %189 ], [ %106, %168 ]
  %178 = phi %"class.jxl::QuantEncoding"* [ %180, %189 ], [ %172, %168 ]
  %179 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %177, i64 -1
  %180 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %178, i64 -1
  %181 = bitcast %"class.jxl::QuantEncoding"* %179 to i8*
  %182 = bitcast %"class.jxl::QuantEncoding"* %180 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 553, i1 false) #9
  %183 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %179, i64 0, i32 0, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 7
  br i1 %185, label %186, label %189

186:                                              ; preds = %176
  %187 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %178, i64 -1, i32 0, i32 3
  %188 = bitcast %union.anon.51* %187 to %"class.std::__1::vector.61"**
  store %"class.std::__1::vector.61"* null, %"class.std::__1::vector.61"** %188, align 8
  br label %189

189:                                              ; preds = %186, %176
  %190 = icmp eq %"class.jxl::QuantEncoding"* %180, %171
  br i1 %190, label %191, label %176

191:                                              ; preds = %189
  %192 = load i64, i64* %81, align 8
  %193 = load %"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"** %7, align 8
  br label %194

194:                                              ; preds = %174, %191
  %195 = phi %"class.jxl::QuantEncoding"* [ %171, %174 ], [ %193, %191 ]
  %196 = phi %"class.jxl::QuantEncoding"* [ %106, %174 ], [ %179, %191 ]
  %197 = phi i64 [ %175, %174 ], [ %192, %191 ]
  %198 = ptrtoint %"class.jxl::QuantEncoding"* %196 to i64
  store i64 %198, i64* %81, align 8
  store i64 %169, i64* %8, align 8
  store i64 %108, i64* %5, align 8
  %199 = inttoptr i64 %197 to %"class.jxl::QuantEncoding"*
  %200 = icmp eq %"class.jxl::QuantEncoding"* %195, %199
  br i1 %200, label %225, label %201

201:                                              ; preds = %194, %223
  %202 = phi %"class.jxl::QuantEncoding"* [ %203, %223 ], [ %195, %194 ]
  %203 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %202, i64 -1
  %204 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %203, i64 0, i32 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 7
  br i1 %206, label %207, label %223

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %202, i64 -1, i32 0, i32 3
  %209 = bitcast %union.anon.51* %208 to %"class.std::__1::vector.61"**
  %210 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %209, align 8
  %211 = icmp eq %"class.std::__1::vector.61"* %210, null
  br i1 %211, label %223, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %210, i64 0, i32 0, i32 0
  %214 = load i32*, i32** %213, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %212
  %217 = ptrtoint i32* %214 to i64
  %218 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %210, i64 0, i32 0, i32 1
  %219 = bitcast i32** %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = bitcast i32* %214 to i8*
  tail call void @_ZdlPv(i8* %220) #19
  br label %221

221:                                              ; preds = %216, %212
  %222 = bitcast %"class.std::__1::vector.61"* %210 to i8*
  tail call void @_ZdlPv(i8* %222) #19
  br label %223

223:                                              ; preds = %221, %207, %201
  %224 = icmp eq %"class.jxl::QuantEncoding"* %203, %199
  br i1 %224, label %225, label %201

225:                                              ; preds = %223, %194
  %226 = icmp eq i64 %197, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %225
  %228 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %228) #19
  br label %229

229:                                              ; preds = %227, %225, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPKfmmmEE12__call_emptyEPKNS0_16__policy_storageES3_mmm(%"union.std::__1::__function::__policy_storage"*, float*, i64, i64, i64) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #21
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #14 comdat {
  tail call void @abort() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl8ACImageTIiEC2Emm(%"class.jxl::ACImageT"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.jxl::Image3.458", align 8
  %5 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3jxl8ACImageTIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1
  %7 = bitcast %"class.jxl::Image3.458"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 96, i1 false) #9
  %8 = bitcast %"class.jxl::Image3.458"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 0, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* nonnull %9, i64 %1, i64 %2, i64 4) #9
  %10 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 1, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %10, i64 %1, i64 %2, i64 4) #9
  %11 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 2, i32 0
  call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %11, i64 %1, i64 %2, i64 4) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %8, i64 24, i1 false) #9
  %12 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 5
  %13 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 0, i32 0, i32 5
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  store i8* null, i8** %14, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %16, i64* %19, align 8
  %20 = icmp eq i8* %18, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %3
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %18) #9
  br label %22

22:                                               ; preds = %21, %3
  %23 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 1
  %24 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 1
  %25 = bitcast %"class.jxl::Plane.74"* %24 to i8*
  %26 = bitcast %"class.jxl::Plane.74"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #9
  %27 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 5
  %28 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 1, i32 0, i32 5
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  %31 = load i64, i64* %30, align 8
  store i8* null, i8** %29, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq i8* %33, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %22
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %33) #9
  br label %37

37:                                               ; preds = %36, %22
  %38 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 2
  %39 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 2
  %40 = bitcast %"class.jxl::Plane.74"* %39 to i8*
  %41 = bitcast %"class.jxl::Plane.74"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #9
  %42 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 5
  %43 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 2, i32 0, i32 5
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store i8* null, i8** %44, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  store i64 %46, i64* %49, align 8
  %50 = icmp eq i8* %48, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  store i8* null, i8** %52, align 8
  br label %59

53:                                               ; preds = %37
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %48) #9
  %54 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  store i8* null, i8** %56, align 8
  %57 = icmp eq i8* %55, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %55) #9
  br label %59

59:                                               ; preds = %51, %58, %53
  %60 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  store i8* null, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %61) #9
  br label %64

64:                                               ; preds = %63, %59
  %65 = getelementptr inbounds %"class.jxl::Image3.458", %"class.jxl::Image3.458"* %4, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  store i8* null, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %66) #9
  br label %69

69:                                               ; preds = %64, %68
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl8ACImageTIiED2Ev(%"class.jxl::ACImageT"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3jxl8ACImageTIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8* null, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %9) #9
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %14) #9
  br label %17

17:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl8ACImageTIiED0Ev(%"class.jxl::ACImageT"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3jxl8ACImageTIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8* null, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %9) #9
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %14) #9
  br label %17

17:                                               ; preds = %12, %16
  %18 = bitcast %"class.jxl::ACImageT"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3jxl8ACImageTIiE4TypeEv(%"class.jxl::ACImageT"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3jxl8ACImageTIiE8PlaneRowEmmm(%"class.jxl::ACImageT"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = mul i64 %6, %2
  %8 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 %1, i32 0, i32 5, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = and i64 %10, 63
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #9
  %13 = getelementptr inbounds i8, i8* %9, i64 %7
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, 63
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #9
  %17 = bitcast i8* %13 to i32*
  %18 = getelementptr inbounds i32, i32* %17, i64 %3
  ret i32* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNK3jxl8ACImageTIiE8PlaneRowEmmm(%"class.jxl::ACImageT"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = mul i64 %6, %2
  %8 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 %1, i32 0, i32 5, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = and i64 %10, 63
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #9
  %13 = getelementptr inbounds i8, i8* %9, i64 %7
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, 63
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #9
  %17 = bitcast i8* %13 to i32*
  %18 = getelementptr inbounds i32, i32* %17, i64 %3
  ret i32* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK3jxl8ACImageTIiE12PixelsPerRowEv(%"class.jxl::ACImageT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 2
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl8ACImageTIiE8ZeroFillEv(%"class.jxl::ACImageT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 4
  %4 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %2, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %74, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %11

9:                                                ; preds = %11
  %10 = icmp eq i32 %27, 0
  br i1 %10, label %74, label %30

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %26, %11 ]
  %13 = load i64, i64* %3, align 8
  %14 = mul i64 %13, %12
  %15 = load i8*, i8** %8, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = and i64 %16, 63
  %18 = icmp eq i64 %17, 0
  tail call void @llvm.assume(i1 %18) #9
  %19 = getelementptr inbounds i8, i8* %15, i64 %14
  %20 = ptrtoint i8* %19 to i64
  %21 = and i64 %20, 63
  %22 = icmp eq i64 %21, 0
  tail call void @llvm.assume(i1 %22) #9
  %23 = load i32, i32* %4, align 8
  %24 = zext i32 %23 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %19, i8 0, i64 %25, i1 false) #9
  %26 = add nuw nsw i64 %12, 1
  %27 = load i32, i32* %2, align 4
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %11, label %9

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %47, %32 ]
  %34 = load i64, i64* %3, align 8
  %35 = mul i64 %34, %33
  %36 = load i8*, i8** %31, align 8
  %37 = ptrtoint i8* %36 to i64
  %38 = and i64 %37, 63
  %39 = icmp eq i64 %38, 0
  tail call void @llvm.assume(i1 %39) #9
  %40 = getelementptr inbounds i8, i8* %36, i64 %35
  %41 = ptrtoint i8* %40 to i64
  %42 = and i64 %41, 63
  %43 = icmp eq i64 %42, 0
  tail call void @llvm.assume(i1 %43) #9
  %44 = load i32, i32* %4, align 8
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %40, i8 0, i64 %46, i1 false) #9
  %47 = add nuw nsw i64 %33, 1
  %48 = load i32, i32* %2, align 4
  %49 = zext i32 %48 to i64
  %50 = icmp ult i64 %47, %49
  br i1 %50, label %32, label %51

51:                                               ; preds = %32
  %52 = icmp eq i32 %48, 0
  br i1 %52, label %74, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %70, %55 ]
  %57 = load i64, i64* %3, align 8
  %58 = mul i64 %57, %56
  %59 = load i8*, i8** %54, align 8
  %60 = ptrtoint i8* %59 to i64
  %61 = and i64 %60, 63
  %62 = icmp eq i64 %61, 0
  tail call void @llvm.assume(i1 %62) #9
  %63 = getelementptr inbounds i8, i8* %59, i64 %58
  %64 = ptrtoint i8* %63 to i64
  %65 = and i64 %64, 63
  %66 = icmp eq i64 %65, 0
  tail call void @llvm.assume(i1 %66) #9
  %67 = load i32, i32* %4, align 8
  %68 = zext i32 %67 to i64
  %69 = shl nuw nsw i64 %68, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %63, i8 0, i64 %69, i1 false) #9
  %70 = add nuw nsw i64 %56, 1
  %71 = load i32, i32* %2, align 4
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %70, %72
  br i1 %73, label %55, label %74

74:                                               ; preds = %55, %1, %9, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl8ACImageTIiE13ZeroFillPlaneEm(%"class.jxl::ACImageT"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 %1, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 %1, i32 0, i32 5, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 %1, i32 0, i32 4
  %13 = load i8*, i8** %11, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, 63
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #9
  %17 = zext i32 %4 to i64
  %18 = shl nuw nsw i64 %17, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %13, i8 0, i64 %18, i1 false) #9
  %19 = load i32, i32* %7, align 4
  %20 = icmp ugt i32 %19, 1
  br i1 %20, label %21, label %37

21:                                               ; preds = %10, %21
  %22 = phi i64 [ %33, %21 ], [ 1, %10 ]
  %23 = load i32, i32* %3, align 8
  %24 = load i8*, i8** %11, align 8
  %25 = load i64, i64* %12, align 8
  %26 = mul i64 %25, %22
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = ptrtoint i8* %27 to i64
  %29 = and i64 %28, 63
  %30 = icmp eq i64 %29, 0
  tail call void @llvm.assume(i1 %30) #9
  %31 = zext i32 %23 to i64
  %32 = shl nuw nsw i64 %31, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %27, i8 0, i64 %32, i1 false) #9
  %33 = add nuw nsw i64 %22, 1
  %34 = load i32, i32* %7, align 4
  %35 = zext i32 %34 to i64
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %21, label %37

37:                                               ; preds = %21, %10, %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3jxl8ACImageTIiE7IsEmptyEv(%"class.jxl::ACImageT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.jxl::ACImageT", %"class.jxl::ACImageT"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl17PassesSharedStateD2Ev(%"struct.jxl::PassesSharedState"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 3, i32 0
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %2) #9
  %3 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 2, i32 0
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %3) #9
  %4 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 1, i32 0
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %4) #9
  %5 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 17, i64 0, i32 0
  tail call void @_ZN3jxl11ImageBundleD2Ev(%"class.jxl::ImageBundle"* %5) #9
  %6 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 3, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  store i8* null, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %7) #9
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 3, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  store i8* null, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %12) #9
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 3, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  store i8* null, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %17) #9
  br label %20

20:                                               ; preds = %15, %19
  %21 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 2, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8* null, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %293, label %292

24:                                               ; preds = %333
  %25 = ptrtoint i8* %335 to i64
  %26 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 2, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %25, i64* %27, align 8
  tail call void @_ZdlPv(i8* nonnull %335) #19
  br label %28

28:                                               ; preds = %24, %333
  %29 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = ptrtoint i32* %30 to i64
  %34 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 1, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast i32* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #19
  br label %37

37:                                               ; preds = %32, %28
  %38 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 0, i64 2, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i32* %39 to i64
  %43 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 0, i64 2, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i32* %39 to i8*
  tail call void @_ZdlPv(i8* %45) #19
  br label %46

46:                                               ; preds = %41, %37
  %47 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 0, i64 1, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 0, i64 1, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #19
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 0, i64 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint i32* %57 to i64
  %61 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 0, i64 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast i32* %57 to i8*
  tail call void @_ZdlPv(i8* %63) #19
  br label %64

64:                                               ; preds = %55, %59
  %65 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 13, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  store i8* null, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %66) #9
  br label %69

69:                                               ; preds = %68, %64
  %70 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 13, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  store i8* null, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %71) #9
  br label %74

74:                                               ; preds = %73, %69
  %75 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 13, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  store i8* null, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %76) #9
  br label %79

79:                                               ; preds = %74, %78
  %80 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 12, i32 0, i32 5, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  store i8* null, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %81) #9
  br label %84

84:                                               ; preds = %79, %83
  %85 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 11, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = ptrtoint i32* %86 to i64
  %90 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 11, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast i32* %86 to i8*
  tail call void @_ZdlPv(i8* %92) #19
  br label %93

93:                                               ; preds = %84, %88
  %94 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 2, i32 2, i32 0, i32 0
  %95 = load %"struct.jxl::Spline::Point"*, %"struct.jxl::Spline::Point"** %94, align 8
  %96 = icmp eq %"struct.jxl::Spline::Point"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = ptrtoint %"struct.jxl::Spline::Point"* %95 to i64
  %99 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 2, i32 2, i32 0, i32 1
  %100 = bitcast %"struct.jxl::Spline::Point"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"struct.jxl::Spline::Point"* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #19
  br label %102

102:                                              ; preds = %97, %93
  %103 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 2, i32 1
  %104 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.jxl::QuantizedSpline"*, %"class.jxl::QuantizedSpline"** %104, align 8
  %106 = icmp eq %"class.jxl::QuantizedSpline"* %105, null
  br i1 %106, label %130, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.jxl::QuantizedSpline"* %105 to i8*
  %109 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 1
  %110 = load %"class.jxl::QuantizedSpline"*, %"class.jxl::QuantizedSpline"** %109, align 8
  %111 = icmp eq %"class.jxl::QuantizedSpline"* %110, %105
  br i1 %111, label %128, label %112

112:                                              ; preds = %107, %123
  %113 = phi %"class.jxl::QuantizedSpline"* [ %114, %123 ], [ %110, %107 ]
  %114 = getelementptr inbounds %"class.jxl::QuantizedSpline", %"class.jxl::QuantizedSpline"* %113, i64 -1
  %115 = getelementptr inbounds %"class.jxl::QuantizedSpline", %"class.jxl::QuantizedSpline"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %115, align 8
  %117 = icmp eq %"struct.std::__1::pair"* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %112
  %119 = ptrtoint %"struct.std::__1::pair"* %116 to i64
  %120 = getelementptr inbounds %"class.jxl::QuantizedSpline", %"class.jxl::QuantizedSpline"* %113, i64 -1, i32 0, i32 0, i32 1
  %121 = bitcast %"struct.std::__1::pair"** %120 to i64*
  store i64 %119, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::pair"* %116 to i8*
  tail call void @_ZdlPv(i8* %122) #19
  br label %123

123:                                              ; preds = %118, %112
  %124 = icmp eq %"class.jxl::QuantizedSpline"* %114, %105
  br i1 %124, label %125, label %112

125:                                              ; preds = %123
  %126 = bitcast %"class.std::__1::vector.76"* %103 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %107
  %129 = phi i8* [ %127, %125 ], [ %108, %107 ]
  store %"class.jxl::QuantizedSpline"* %105, %"class.jxl::QuantizedSpline"** %109, align 8
  tail call void @_ZdlPv(i8* %129) #19
  br label %130

130:                                              ; preds = %102, %128
  %131 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 1, i32 3, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = ptrtoint i64* %132 to i64
  %136 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 1, i32 3, i32 0, i32 1
  %137 = bitcast i64** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = bitcast i64* %132 to i8*
  tail call void @_ZdlPv(i8* %138) #19
  br label %139

139:                                              ; preds = %134, %130
  %140 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 1, i32 2, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = icmp eq i64* %141, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %139
  %144 = ptrtoint i64* %141 to i64
  %145 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 1, i32 2, i32 0, i32 1
  %146 = bitcast i64** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast i64* %141 to i8*
  tail call void @_ZdlPv(i8* %147) #19
  br label %148

148:                                              ; preds = %143, %139
  %149 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 1, i32 1
  %150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %149, i64 0, i32 0, i32 0
  %151 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %150, align 8
  %152 = icmp eq %"struct.jxl::PatchPosition"* %151, null
  br i1 %152, label %176, label %153

153:                                              ; preds = %148
  %154 = bitcast %"struct.jxl::PatchPosition"* %151 to i8*
  %155 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 9, i32 1, i32 1, i32 0, i32 1
  %156 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %155, align 8
  %157 = icmp eq %"struct.jxl::PatchPosition"* %156, %151
  br i1 %157, label %174, label %158

158:                                              ; preds = %153, %169
  %159 = phi %"struct.jxl::PatchPosition"* [ %160, %169 ], [ %156, %153 ]
  %160 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %159, i64 -1
  %161 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %159, i64 -1, i32 2, i32 0, i32 0
  %162 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %161, align 8
  %163 = icmp eq %"struct.jxl::PatchBlending"* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %158
  %165 = ptrtoint %"struct.jxl::PatchBlending"* %162 to i64
  %166 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %159, i64 -1, i32 2, i32 0, i32 1
  %167 = bitcast %"struct.jxl::PatchBlending"** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %162, i64 0, i32 0
  tail call void @_ZdlPv(i8* %168) #19
  br label %169

169:                                              ; preds = %164, %158
  %170 = icmp eq %"struct.jxl::PatchPosition"* %160, %151
  br i1 %170, label %171, label %158

171:                                              ; preds = %169
  %172 = bitcast %"class.std::__1::vector"* %149 to i8**
  %173 = load i8*, i8** %172, align 8
  br label %174

174:                                              ; preds = %171, %153
  %175 = phi i8* [ %173, %171 ], [ %154, %153 ]
  store %"struct.jxl::PatchPosition"* %151, %"struct.jxl::PatchPosition"** %155, align 8
  tail call void @_ZdlPv(i8* %175) #19
  br label %176

176:                                              ; preds = %148, %174
  %177 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  store i8* null, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %178) #9
  br label %181

181:                                              ; preds = %180, %176
  %182 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 8, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  store i8* null, i8** %182, align 8
  %184 = icmp eq i8* %183, null
  br i1 %184, label %186, label %185

185:                                              ; preds = %181
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %183) #9
  br label %186

186:                                              ; preds = %181, %185
  %187 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 7, i32 0, i32 5, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  store i8* null, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %186
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %188) #9
  br label %191

191:                                              ; preds = %186, %190
  %192 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 6, i32 0, i32 5, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  store i8* null, i8** %192, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %191
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %193) #9
  br label %196

196:                                              ; preds = %191, %195
  %197 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 4, i32 6
  %198 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %197, i64 0, i32 0, i32 0
  %199 = load %"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"** %198, align 8
  %200 = icmp eq %"class.jxl::QuantEncoding"* %199, null
  br i1 %200, label %235, label %201

201:                                              ; preds = %196
  %202 = bitcast %"class.jxl::QuantEncoding"* %199 to i8*
  %203 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 4, i32 6, i32 0, i32 1
  %204 = load %"class.jxl::QuantEncoding"*, %"class.jxl::QuantEncoding"** %203, align 8
  %205 = icmp eq %"class.jxl::QuantEncoding"* %204, %199
  br i1 %205, label %233, label %206

206:                                              ; preds = %201, %228
  %207 = phi %"class.jxl::QuantEncoding"* [ %208, %228 ], [ %204, %201 ]
  %208 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %207, i64 -1
  %209 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %208, i64 0, i32 0, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 7
  br i1 %211, label %212, label %228

212:                                              ; preds = %206
  %213 = getelementptr inbounds %"class.jxl::QuantEncoding", %"class.jxl::QuantEncoding"* %207, i64 -1, i32 0, i32 3
  %214 = bitcast %union.anon.51* %213 to %"class.std::__1::vector.61"**
  %215 = load %"class.std::__1::vector.61"*, %"class.std::__1::vector.61"** %214, align 8
  %216 = icmp eq %"class.std::__1::vector.61"* %215, null
  br i1 %216, label %228, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %215, i64 0, i32 0, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = ptrtoint i32* %219 to i64
  %223 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %215, i64 0, i32 0, i32 1
  %224 = bitcast i32** %223 to i64*
  store i64 %222, i64* %224, align 8
  %225 = bitcast i32* %219 to i8*
  tail call void @_ZdlPv(i8* %225) #19
  br label %226

226:                                              ; preds = %221, %217
  %227 = bitcast %"class.std::__1::vector.61"* %215 to i8*
  tail call void @_ZdlPv(i8* %227) #19
  br label %228

228:                                              ; preds = %226, %212, %206
  %229 = icmp eq %"class.jxl::QuantEncoding"* %208, %199
  br i1 %229, label %230, label %206

230:                                              ; preds = %228
  %231 = bitcast %"class.std::__1::vector.48"* %197 to i8**
  %232 = load i8*, i8** %231, align 8
  br label %233

233:                                              ; preds = %230, %201
  %234 = phi i8* [ %232, %230 ], [ %202, %201 ]
  store %"class.jxl::QuantEncoding"* %199, %"class.jxl::QuantEncoding"** %203, align 8
  tail call void @_ZdlPv(i8* %234) #19
  br label %235

235:                                              ; preds = %233, %196
  %236 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %237 = load float*, float** %236, align 8
  store float* null, float** %236, align 8
  %238 = icmp eq float* %237, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %235
  %240 = bitcast float* %237 to i8*
  %241 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  %242 = load void (i8*, i8*)*, void (i8*, i8*)** %241, align 8
  %243 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 1
  %244 = load i8*, i8** %243, align 8
  tail call void @_ZN3hwy16FreeAlignedBytesEPKvPFvPvS2_ES2_(i8* nonnull %240, void (i8*, i8*)* %242, i8* %244) #9
  br label %245

245:                                              ; preds = %235, %239
  %246 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 3, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %247 = load i8*, i8** %246, align 8
  store i8* null, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %250, label %249

249:                                              ; preds = %245
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %247) #9
  br label %250

250:                                              ; preds = %245, %249
  %251 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl11FrameHeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %251, align 8
  %252 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 1, i32 19
  %253 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %252, i64 0, i32 0, i32 0
  %254 = load %"struct.jxl::BlendingInfo"*, %"struct.jxl::BlendingInfo"** %253, align 8
  %255 = icmp eq %"struct.jxl::BlendingInfo"* %254, null
  br i1 %255, label %273, label %256

256:                                              ; preds = %250
  %257 = bitcast %"struct.jxl::BlendingInfo"* %254 to i8*
  %258 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 1, i32 19, i32 0, i32 1
  %259 = load %"struct.jxl::BlendingInfo"*, %"struct.jxl::BlendingInfo"** %258, align 8
  %260 = icmp eq %"struct.jxl::BlendingInfo"* %259, %254
  br i1 %260, label %271, label %261

261:                                              ; preds = %256, %261
  %262 = phi %"struct.jxl::BlendingInfo"* [ %263, %261 ], [ %259, %256 ]
  %263 = getelementptr inbounds %"struct.jxl::BlendingInfo", %"struct.jxl::BlendingInfo"* %262, i64 -1
  %264 = bitcast %"struct.jxl::BlendingInfo"* %263 to void (%"struct.jxl::BlendingInfo"*)***
  %265 = load void (%"struct.jxl::BlendingInfo"*)**, void (%"struct.jxl::BlendingInfo"*)*** %264, align 8
  %266 = load void (%"struct.jxl::BlendingInfo"*)*, void (%"struct.jxl::BlendingInfo"*)** %265, align 8
  tail call void %266(%"struct.jxl::BlendingInfo"* %263) #9
  %267 = icmp eq %"struct.jxl::BlendingInfo"* %263, %254
  br i1 %267, label %268, label %261

268:                                              ; preds = %261
  %269 = bitcast %"class.std::__1::vector.37"* %252 to i8**
  %270 = load i8*, i8** %269, align 8
  br label %271

271:                                              ; preds = %268, %256
  %272 = phi i8* [ %270, %268 ], [ %257, %256 ]
  store %"struct.jxl::BlendingInfo"* %254, %"struct.jxl::BlendingInfo"** %258, align 8
  tail call void @_ZdlPv(i8* %272) #19
  br label %273

273:                                              ; preds = %271, %250
  %274 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 1, i32 16, i32 0, i32 0
  %275 = load i32*, i32** %274, align 8
  %276 = icmp eq i32* %275, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %273
  %278 = ptrtoint i32* %275 to i64
  %279 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 1, i32 16, i32 0, i32 1
  %280 = bitcast i32** %279 to i64*
  store i64 %278, i64* %280, align 8
  %281 = bitcast i32* %275 to i8*
  tail call void @_ZdlPv(i8* %281) #19
  br label %282

282:                                              ; preds = %277, %273
  %283 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 1, i32 11
  %284 = bitcast %"class.std::__1::basic_string"* %283 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %284, i64 0, i32 1, i32 0
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %283, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  tail call void @_ZdlPv(i8* %290) #19
  br label %291

291:                                              ; preds = %282, %288
  ret void

292:                                              ; preds = %20
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %22) #9
  br label %293

293:                                              ; preds = %292, %20
  %294 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 2, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  store i8* null, i8** %294, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %293
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %295) #9
  br label %298

298:                                              ; preds = %297, %293
  %299 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 2, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  store i8* null, i8** %299, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %300) #9
  br label %303

303:                                              ; preds = %302, %298
  %304 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 1, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  store i8* null, i8** %304, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %305) #9
  br label %308

308:                                              ; preds = %307, %303
  %309 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 1, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8
  store i8* null, i8** %309, align 8
  %311 = icmp eq i8* %310, null
  br i1 %311, label %313, label %312

312:                                              ; preds = %308
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %310) #9
  br label %313

313:                                              ; preds = %312, %308
  %314 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 1, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %315 = load i8*, i8** %314, align 8
  store i8* null, i8** %314, align 8
  %316 = icmp eq i8* %315, null
  br i1 %316, label %318, label %317

317:                                              ; preds = %313
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %315) #9
  br label %318

318:                                              ; preds = %317, %313
  %319 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 0, i32 0, i64 2, i32 0, i32 5, i32 0, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  store i8* null, i8** %319, align 8
  %321 = icmp eq i8* %320, null
  br i1 %321, label %323, label %322

322:                                              ; preds = %318
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %320) #9
  br label %323

323:                                              ; preds = %322, %318
  %324 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 0, i32 0, i64 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %325 = load i8*, i8** %324, align 8
  store i8* null, i8** %324, align 8
  %326 = icmp eq i8* %325, null
  br i1 %326, label %328, label %327

327:                                              ; preds = %323
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %325) #9
  br label %328

328:                                              ; preds = %327, %323
  %329 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 16, i64 0, i32 0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  store i8* null, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %333, label %332

332:                                              ; preds = %328
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %330) #9
  br label %333

333:                                              ; preds = %332, %328
  %334 = getelementptr inbounds %"struct.jxl::PassesSharedState", %"struct.jxl::PassesSharedState"* %0, i64 0, i32 15, i32 2, i32 0, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %28, label %24
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19allocatorIN3jxl7ANSCodeEE7destroyEPS2_(%"class.std::__1::allocator.326"*, %"struct.jxl::ANSCode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %1, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %1, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  br label %11

11:                                               ; preds = %6, %2
  %12 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %1, i64 0, i32 2, i32 0, i32 0
  %13 = load %"struct.jxl::HybridUintConfig"*, %"struct.jxl::HybridUintConfig"** %12, align 8
  %14 = icmp eq %"struct.jxl::HybridUintConfig"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.jxl::HybridUintConfig"* %13 to i64
  %17 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %1, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %"struct.jxl::HybridUintConfig"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"struct.jxl::HybridUintConfig"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %1, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.309", %"class.std::__1::vector.309"* %21, i64 0, i32 0, i32 0
  %23 = load %"struct.jxl::HuffmanDecodingData"*, %"struct.jxl::HuffmanDecodingData"** %22, align 8
  %24 = icmp eq %"struct.jxl::HuffmanDecodingData"* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = bitcast %"struct.jxl::HuffmanDecodingData"* %23 to i8*
  %27 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load %"struct.jxl::HuffmanDecodingData"*, %"struct.jxl::HuffmanDecodingData"** %27, align 8
  %29 = icmp eq %"struct.jxl::HuffmanDecodingData"* %28, %23
  br i1 %29, label %46, label %30

30:                                               ; preds = %25, %41
  %31 = phi %"struct.jxl::HuffmanDecodingData"* [ %32, %41 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"struct.jxl::HuffmanDecodingData", %"struct.jxl::HuffmanDecodingData"* %31, i64 -1
  %33 = getelementptr inbounds %"struct.jxl::HuffmanDecodingData", %"struct.jxl::HuffmanDecodingData"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.jxl::HuffmanCode"*, %"struct.jxl::HuffmanCode"** %33, align 8
  %35 = icmp eq %"struct.jxl::HuffmanCode"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = ptrtoint %"struct.jxl::HuffmanCode"* %34 to i64
  %38 = getelementptr inbounds %"struct.jxl::HuffmanDecodingData", %"struct.jxl::HuffmanDecodingData"* %31, i64 -1, i32 0, i32 0, i32 1
  %39 = bitcast %"struct.jxl::HuffmanCode"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.jxl::HuffmanCode", %"struct.jxl::HuffmanCode"* %34, i64 0, i32 0
  tail call void @_ZdlPv(i8* %40) #19
  br label %41

41:                                               ; preds = %36, %30
  %42 = icmp eq %"struct.jxl::HuffmanDecodingData"* %32, %23
  br i1 %42, label %43, label %30

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::vector.309"* %21 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %25
  %47 = phi i8* [ %45, %43 ], [ %26, %25 ]
  store %"struct.jxl::HuffmanDecodingData"* %23, %"struct.jxl::HuffmanDecodingData"** %27, align 8
  tail call void @_ZdlPv(i8* %47) #19
  br label %48

48:                                               ; preds = %46, %20
  %49 = getelementptr inbounds %"struct.jxl::ANSCode", %"struct.jxl::ANSCode"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  store i8* null, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %50) #9
  br label %53

53:                                               ; preds = %48, %52
  ret void
}

declare void @_ZN3hwy16FreeAlignedBytesEPKvPFvPvS2_ES2_(i8*, void (i8*, i8*)*, i8*) local_unnamed_addr #1

declare void @_ZN3jxl15PatchDictionary17ComputePatchCacheEv(%"class.jxl::PatchDictionary"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl18PassesEncoderState8PassDataD2Ev(%"struct.jxl::PassesEncoderState::PassData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %4 = load %"struct.jxl::HybridUintConfig"*, %"struct.jxl::HybridUintConfig"** %3, align 8
  %5 = icmp eq %"struct.jxl::HybridUintConfig"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.jxl::HybridUintConfig"* %4 to i64
  %8 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.jxl::HybridUintConfig"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.jxl::HybridUintConfig"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"struct.jxl::EntropyEncodingData", %"struct.jxl::EntropyEncodingData"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::vector.215"*, %"class.std::__1::vector.215"** %12, align 8
  %14 = icmp eq %"class.std::__1::vector.215"* %13, null
  br i1 %14, label %56, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.215"* %13 to i8*
  %17 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %18 = load %"class.std::__1::vector.215"*, %"class.std::__1::vector.215"** %17, align 8
  %19 = icmp eq %"class.std::__1::vector.215"* %18, %13
  br i1 %19, label %54, label %20

20:                                               ; preds = %15, %49
  %21 = phi %"class.std::__1::vector.215"* [ %22, %49 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %21, i64 -1
  %23 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.jxl::ANSEncSymbolInfo"*, %"struct.jxl::ANSEncSymbolInfo"** %23, align 8
  %25 = icmp eq %"struct.jxl::ANSEncSymbolInfo"* %24, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.jxl::ANSEncSymbolInfo"* %24 to i8*
  %28 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %21, i64 -1, i32 0, i32 1
  %29 = load %"struct.jxl::ANSEncSymbolInfo"*, %"struct.jxl::ANSEncSymbolInfo"** %28, align 8
  %30 = icmp eq %"struct.jxl::ANSEncSymbolInfo"* %29, %24
  br i1 %30, label %47, label %31

31:                                               ; preds = %26, %42
  %32 = phi %"struct.jxl::ANSEncSymbolInfo"* [ %33, %42 ], [ %29, %26 ]
  %33 = getelementptr inbounds %"struct.jxl::ANSEncSymbolInfo", %"struct.jxl::ANSEncSymbolInfo"* %32, i64 -1
  %34 = getelementptr inbounds %"struct.jxl::ANSEncSymbolInfo", %"struct.jxl::ANSEncSymbolInfo"* %32, i64 -1, i32 2, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = icmp eq i16* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = ptrtoint i16* %35 to i64
  %39 = getelementptr inbounds %"struct.jxl::ANSEncSymbolInfo", %"struct.jxl::ANSEncSymbolInfo"* %32, i64 -1, i32 2, i32 0, i32 1
  %40 = bitcast i16** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast i16* %35 to i8*
  tail call void @_ZdlPv(i8* %41) #19
  br label %42

42:                                               ; preds = %37, %31
  %43 = icmp eq %"struct.jxl::ANSEncSymbolInfo"* %33, %24
  br i1 %43, label %44, label %31

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector.215"* %22 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %26
  %48 = phi i8* [ %46, %44 ], [ %27, %26 ]
  store %"struct.jxl::ANSEncSymbolInfo"* %24, %"struct.jxl::ANSEncSymbolInfo"** %28, align 8
  tail call void @_ZdlPv(i8* %48) #19
  br label %49

49:                                               ; preds = %47, %20
  %50 = icmp eq %"class.std::__1::vector.215"* %22, %13
  br i1 %50, label %51, label %20

51:                                               ; preds = %49
  %52 = bitcast %"struct.jxl::EntropyEncodingData"* %2 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %15
  %55 = phi i8* [ %53, %51 ], [ %16, %15 ]
  store %"class.std::__1::vector.215"* %13, %"class.std::__1::vector.215"** %17, align 8
  tail call void @_ZdlPv(i8* %55) #19
  br label %56

56:                                               ; preds = %11, %54
  %57 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 1, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i8* %58 to i64
  %62 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 1, i32 0, i32 1
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8
  tail call void @_ZdlPv(i8* nonnull %58) #19
  br label %64

64:                                               ; preds = %56, %60
  %65 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %65, align 8
  %67 = icmp eq %"class.std::__1::vector.201"* %66, null
  br i1 %67, label %91, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.std::__1::vector.201"* %66 to i8*
  %70 = getelementptr inbounds %"struct.jxl::PassesEncoderState::PassData", %"struct.jxl::PassesEncoderState::PassData"* %0, i64 0, i32 0, i32 0, i32 1
  %71 = load %"class.std::__1::vector.201"*, %"class.std::__1::vector.201"** %70, align 8
  %72 = icmp eq %"class.std::__1::vector.201"* %71, %66
  br i1 %72, label %89, label %73

73:                                               ; preds = %68, %84
  %74 = phi %"class.std::__1::vector.201"* [ %75, %84 ], [ %71, %68 ]
  %75 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %74, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %75, i64 0, i32 0, i32 0
  %77 = load %"struct.jxl::Token"*, %"struct.jxl::Token"** %76, align 8
  %78 = icmp eq %"struct.jxl::Token"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = ptrtoint %"struct.jxl::Token"* %77 to i64
  %81 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %74, i64 -1, i32 0, i32 1
  %82 = bitcast %"struct.jxl::Token"** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast %"struct.jxl::Token"* %77 to i8*
  tail call void @_ZdlPv(i8* %83) #19
  br label %84

84:                                               ; preds = %79, %73
  %85 = icmp eq %"class.std::__1::vector.201"* %75, %66
  br i1 %85, label %86, label %73

86:                                               ; preds = %84
  %87 = bitcast %"struct.jxl::PassesEncoderState::PassData"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %86, %68
  %90 = phi i8* [ %88, %86 ], [ %69, %68 ]
  store %"class.std::__1::vector.201"* %66, %"class.std::__1::vector.201"** %70, align 8
  tail call void @_ZdlPv(i8* %90) #19
  br label %91

91:                                               ; preds = %64, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_4pairIN3jxl14QuantizedPatchENS_6vectorINS1_IjjEENS_9allocatorIS5_EEEEEENS6_IS9_EEED2Ev(%"class.std::__1::__vector_base.269"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.269", %"class.std::__1::__vector_base.269"* %0, i64 0, i32 0
  %3 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair.270"* %3, null
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::__1::pair.270"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.269", %"class.std::__1::__vector_base.269"* %0, i64 0, i32 1
  %8 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair.270"* %8, %3
  br i1 %9, label %77, label %10

10:                                               ; preds = %5, %72
  %11 = phi %"struct.std::__1::pair.270"* [ %12, %72 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 1, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair.286"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = ptrtoint %"struct.std::__1::pair.286"* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 1, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.286"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::pair.286"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #19
  br label %21

21:                                               ; preds = %16, %10
  %22 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 0
  %23 = load float*, float** %22, align 8
  %24 = icmp eq float* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint float* %23 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 1
  %28 = bitcast float** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast float* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #19
  br label %30

30:                                               ; preds = %25, %21
  %31 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  br i1 %33, label %59, label %54

34:                                               ; preds = %68
  %35 = ptrtoint i8* %70 to i64
  %36 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  store i64 %35, i64* %37, align 8
  tail call void @_ZdlPv(i8* nonnull %70) #19
  br label %38

38:                                               ; preds = %68, %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = ptrtoint i8* %40 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %43, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %40) #19
  br label %46

46:                                               ; preds = %42, %38
  %47 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %72, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i8* %48 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 1
  %53 = bitcast i8** %52 to i64*
  store i64 %51, i64* %53, align 8
  tail call void @_ZdlPv(i8* nonnull %48) #19
  br label %72

54:                                               ; preds = %30
  %55 = ptrtoint float* %32 to i64
  %56 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 1
  %57 = bitcast float** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast float* %32 to i8*
  tail call void @_ZdlPv(i8* %58) #19
  br label %59

59:                                               ; preds = %54, %30
  %60 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 0
  %61 = load float*, float** %60, align 8
  %62 = icmp eq float* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = ptrtoint float* %61 to i64
  %65 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 1
  %66 = bitcast float** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast float* %61 to i8*
  tail call void @_ZdlPv(i8* %67) #19
  br label %68

68:                                               ; preds = %63, %59
  %69 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %38, label %34

72:                                               ; preds = %46, %50
  %73 = icmp eq %"struct.std::__1::pair.270"* %12, %3
  br i1 %73, label %74, label %10

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::__vector_base.269"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %5, %74
  %78 = phi i8* [ %76, %74 ], [ %6, %5 ]
  store %"struct.std::__1::pair.270"* %3, %"struct.std::__1::pair.270"** %7, align 8
  tail call void @_ZdlPv(i8* %78) #19
  br label %79

79:                                               ; preds = %1, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN3jxl14QuantizedPatchENS0_INS1_IjjEENS_9allocatorIS4_EEEEEENS5_IS8_EEE13__vdeallocateEv(%"class.std::__1::vector.268"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair.270"* %3, null
  br i1 %4, label %80, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::__1::pair.270"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair.270"* %8, %3
  br i1 %9, label %77, label %10

10:                                               ; preds = %5, %72
  %11 = phi %"struct.std::__1::pair.270"* [ %12, %72 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 1, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair.286"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = ptrtoint %"struct.std::__1::pair.286"* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 1, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.286"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::pair.286"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #19
  br label %21

21:                                               ; preds = %16, %10
  %22 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 0
  %23 = load float*, float** %22, align 8
  %24 = icmp eq float* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint float* %23 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 2, i32 0, i32 1
  %28 = bitcast float** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast float* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #19
  br label %30

30:                                               ; preds = %25, %21
  %31 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  br i1 %33, label %59, label %54

34:                                               ; preds = %68
  %35 = ptrtoint i8* %70 to i64
  %36 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  store i64 %35, i64* %37, align 8
  tail call void @_ZdlPv(i8* nonnull %70) #19
  br label %38

38:                                               ; preds = %68, %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = ptrtoint i8* %40 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 1, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %43, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %40) #19
  br label %46

46:                                               ; preds = %42, %38
  %47 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %72, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i8* %48 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 0, i32 0, i32 1
  %53 = bitcast i8** %52 to i64*
  store i64 %51, i64* %53, align 8
  tail call void @_ZdlPv(i8* nonnull %48) #19
  br label %72

54:                                               ; preds = %30
  %55 = ptrtoint float* %32 to i64
  %56 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 1, i32 0, i32 1
  %57 = bitcast float** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast float* %32 to i8*
  tail call void @_ZdlPv(i8* %58) #19
  br label %59

59:                                               ; preds = %54, %30
  %60 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 0
  %61 = load float*, float** %60, align 8
  %62 = icmp eq float* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = ptrtoint float* %61 to i64
  %65 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 3, i64 0, i32 0, i32 1
  %66 = bitcast float** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast float* %61 to i8*
  tail call void @_ZdlPv(i8* %67) #19
  br label %68

68:                                               ; preds = %63, %59
  %69 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 -1, i32 0, i32 2, i64 2, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %38, label %34

72:                                               ; preds = %46, %50
  %73 = icmp eq %"struct.std::__1::pair.270"* %12, %3
  br i1 %73, label %74, label %10

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector.268"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %5, %74
  %78 = phi i8* [ %76, %74 ], [ %6, %5 ]
  store %"struct.std::__1::pair.270"* %3, %"struct.std::__1::pair.270"** %7, align 8
  tail call void @_ZdlPv(i8* %78) #19
  %79 = bitcast %"class.std::__1::vector.268"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false)
  br label %80

80:                                               ; preds = %1, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEvT0_SN_T_"(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair.270", align 8
  br label %4

4:                                                ; preds = %554, %2
  %5 = phi %"struct.std::__1::pair.270"* [ %1, %2 ], [ %510, %554 ]
  %6 = phi %"struct.std::__1::pair.270"* [ %0, %2 ], [ %22, %554 ]
  %7 = ptrtoint %"struct.std::__1::pair.270"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %8, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1
  %13 = bitcast %"class.std::__1::vector.284"* %12 to i64*
  %14 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.286"** %14 to i64*
  %16 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair.286"** %16 to i64*
  %18 = ptrtoint %"struct.std::__1::pair.270"* %5 to i64
  br label %19

19:                                               ; preds = %565, %4
  %20 = phi %"struct.std::__1::pair.270"* [ %6, %4 ], [ %566, %565 ]
  br label %21

21:                                               ; preds = %395, %19
  %22 = phi %"struct.std::__1::pair.270"* [ %20, %19 ], [ %378, %395 ]
  %23 = ptrtoint %"struct.std::__1::pair.270"* %22 to i64
  %24 = sub i64 %7, %23
  %25 = sdiv exact i64 %24, 184
  switch i64 %25, label %75 [
    i64 0, label %569
    i64 1, label %569
    i64 2, label %26
    i64 3, label %60
    i64 4, label %64
    i64 5, label %69
  ]

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %28 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %27, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = mul i64 %31, %29
  %33 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = mul i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %569

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %27, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %40, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %41) #9
  %42 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1
  %44 = bitcast %"class.std::__1::vector.284"* %42 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.284"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %44, align 8
  store i64 %45, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 1, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 1
  %50 = bitcast %"struct.std::__1::pair.286"** %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"struct.std::__1::pair.286"** %49 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"struct.std::__1::pair.286"** %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::pair.286"** %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  br label %569

60:                                               ; preds = %21
  %61 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 1
  %62 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %63 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %61, %"struct.std::__1::pair.270"* %62)
  br label %569

64:                                               ; preds = %21
  %65 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 1
  %66 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 2
  %67 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %68 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %65, %"struct.std::__1::pair.270"* %66, %"struct.std::__1::pair.270"* %67)
  br label %569

69:                                               ; preds = %21
  %70 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 2
  %72 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 3
  %73 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %5, i64 -1
  %74 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %70, %"struct.std::__1::pair.270"* %71, %"struct.std::__1::pair.270"* %72, %"struct.std::__1::pair.270"* %73)
  br label %569

75:                                               ; preds = %21
  %76 = icmp slt i64 %24, 1288
  br i1 %76, label %77, label %306

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 2
  %79 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 1
  %80 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %79, %"struct.std::__1::pair.270"* %78) #9
  %81 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 3
  %82 = icmp eq %"struct.std::__1::pair.270"* %81, %5
  br i1 %82, label %569, label %83

83:                                               ; preds = %77
  %84 = bitcast %"struct.std::__1::pair.270"* %3 to i8*
  %85 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0
  %86 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  %87 = bitcast i8** %86 to i64*
  %88 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast i8** %88 to i64*
  %90 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %92 = bitcast i8** %91 to i64*
  %93 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast i8** %93 to i64*
  %95 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2
  %96 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %97 = bitcast i8** %96 to i64*
  %98 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast i8** %98 to i64*
  %100 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0
  %101 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0, i32 0, i32 1
  %102 = bitcast float** %101 to i64*
  %103 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast float** %103 to i64*
  %105 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1, i32 0, i32 1
  %107 = bitcast float** %106 to i64*
  %108 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %109 = bitcast float** %108 to i64*
  %110 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 2
  %111 = bitcast %"class.std::__1::vector.278"* %110 to i64*
  %112 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %113 = bitcast float** %112 to i64*
  %114 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1
  %115 = bitcast %"class.std::__1::vector.284"* %114 to i8*
  %116 = bitcast %"class.std::__1::vector.284"* %114 to i64*
  %117 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %118 = bitcast %"struct.std::__1::pair.286"** %117 to i64*
  %119 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast %"struct.std::__1::pair.286"** %119 to i64*
  %121 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 1
  %123 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0
  %124 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 2, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::vector.271"* %90 to i8*
  %131 = bitcast i8** %86 to i8*
  %132 = bitcast i8** %91 to i8*
  %133 = bitcast i8** %96 to i8*
  %134 = bitcast float** %101 to i8*
  %135 = bitcast float** %106 to i8*
  %136 = bitcast float** %112 to i8*
  %137 = bitcast %"struct.std::__1::pair.286"** %117 to i8*
  %138 = bitcast %"class.std::__1::vector.271"* %85 to <2 x i64>*
  %139 = bitcast %"class.std::__1::vector.271"* %90 to <2 x i64>*
  %140 = bitcast %"class.std::__1::vector.271"* %95 to <2 x i64>*
  %141 = bitcast %"class.std::__1::vector.278"* %100 to <2 x i64>*
  %142 = bitcast %"class.std::__1::vector.278"* %105 to <2 x i64>*
  %143 = bitcast float** %112 to <2 x i64>*
  %144 = bitcast %"class.std::__1::vector.284"* %114 to <2 x i64>*
  br label %145

145:                                              ; preds = %303, %83
  %146 = phi %"struct.std::__1::pair.270"* [ %81, %83 ], [ %304, %303 ]
  %147 = phi %"struct.std::__1::pair.270"* [ %78, %83 ], [ %146, %303 ]
  %148 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = mul i64 %151, %149
  %153 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %147, i64 0, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %147, i64 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = mul i64 %156, %154
  %158 = icmp ugt i64 %152, %157
  br i1 %158, label %159, label %303

159:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %84) #9
  %160 = bitcast %"struct.std::__1::pair.270"* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 -86, i64 144, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 8 %160, i64 16, i1 false) #9
  %161 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 16, i1 false) #9
  %162 = bitcast %"class.std::__1::vector.271"* %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8
  store <2 x i64> %163, <2 x i64>* %138, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast i8** %164 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %89, align 8
  %167 = bitcast %"class.std::__1::vector.271"* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #9
  %168 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 2, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #9
  %169 = bitcast %"class.std::__1::vector.271"* %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8
  store <2 x i64> %170, <2 x i64>* %139, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %172 = bitcast i8** %171 to i64*
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* %94, align 8
  %174 = bitcast %"class.std::__1::vector.271"* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 24, i1 false) #9
  %175 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 2, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 16, i1 false) #9
  %176 = bitcast %"class.std::__1::vector.271"* %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8
  store <2 x i64> %177, <2 x i64>* %140, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %179 = bitcast i8** %178 to i64*
  %180 = load i64, i64* %179, align 8
  store i64 %180, i64* %99, align 8
  %181 = bitcast %"class.std::__1::vector.271"* %175 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %181, i8 0, i64 24, i1 false) #9
  %182 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #9
  %183 = bitcast %"class.std::__1::vector.278"* %182 to <2 x i64>*
  %184 = load <2 x i64>, <2 x i64>* %183, align 8
  store <2 x i64> %184, <2 x i64>* %141, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %186 = bitcast float** %185 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %104, align 8
  %188 = bitcast %"class.std::__1::vector.278"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #9
  %189 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 3, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 16, i1 false) #9
  %190 = bitcast %"class.std::__1::vector.278"* %189 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 8
  store <2 x i64> %191, <2 x i64>* %142, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %193 = bitcast float** %192 to i64*
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %109, align 8
  %195 = bitcast %"class.std::__1::vector.278"* %189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 24, i1 false) #9
  %196 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 3, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #9
  %197 = bitcast %"class.std::__1::vector.278"* %196 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %111, align 8
  %199 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %200 = bitcast float** %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8
  store <2 x i64> %201, <2 x i64>* %143, align 8
  %202 = bitcast %"class.std::__1::vector.278"* %196 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 24, i1 false) #9
  %203 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false) #9
  %204 = bitcast %"class.std::__1::vector.284"* %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8
  store <2 x i64> %205, <2 x i64>* %144, align 8
  %206 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %207 = bitcast %"struct.std::__1::pair.286"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %120, align 8
  %209 = bitcast %"class.std::__1::vector.284"* %203 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 24, i1 false) #9
  br label %210

210:                                              ; preds = %243, %159
  %211 = phi %"struct.std::__1::pair.270"* [ %146, %159 ], [ %212, %243 ]
  %212 = phi %"struct.std::__1::pair.270"* [ %147, %159 ], [ %244, %243 ]
  %213 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %212, i64 0, i32 0
  %214 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %211, i64 0, i32 0
  %215 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %214, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %213) #9
  %216 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %212, i64 0, i32 1
  %217 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %211, i64 0, i32 1
  %218 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %217, i64 0, i32 0, i32 0
  %219 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %218, align 8
  %220 = icmp eq %"struct.std::__1::pair.286"* %219, null
  br i1 %220, label %227, label %221

221:                                              ; preds = %210
  %222 = ptrtoint %"struct.std::__1::pair.286"* %219 to i64
  %223 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %211, i64 0, i32 1, i32 0, i32 1
  %224 = bitcast %"struct.std::__1::pair.286"** %223 to i64*
  store i64 %222, i64* %224, align 8
  %225 = bitcast %"struct.std::__1::pair.286"* %219 to i8*
  call void @_ZdlPv(i8* %225) #19
  %226 = bitcast %"class.std::__1::vector.284"* %217 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 24, i1 false) #9
  br label %227

227:                                              ; preds = %210, %221
  %228 = bitcast %"class.std::__1::vector.284"* %216 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.std::__1::vector.284"* %217 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %212, i64 0, i32 1, i32 0, i32 1
  %232 = bitcast %"struct.std::__1::pair.286"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %211, i64 0, i32 1, i32 0, i32 1
  %235 = bitcast %"struct.std::__1::pair.286"** %234 to i64*
  store i64 %233, i64* %235, align 8
  %236 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %212, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %237 = bitcast %"struct.std::__1::pair.286"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %211, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %240 = bitcast %"struct.std::__1::pair.286"** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast %"class.std::__1::vector.284"* %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 24, i1 false) #9
  %242 = icmp eq %"struct.std::__1::pair.270"* %212, %22
  br i1 %242, label %254, label %243

243:                                              ; preds = %227
  %244 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %212, i64 -1
  %245 = load i64, i64* %121, align 8
  %246 = load i64, i64* %122, align 8
  %247 = mul i64 %246, %245
  %248 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %244, i64 0, i32 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %212, i64 -1, i32 0, i32 1
  %251 = load i64, i64* %250, align 8
  %252 = mul i64 %251, %249
  %253 = icmp ugt i64 %247, %252
  br i1 %253, label %210, label %254

254:                                              ; preds = %243, %227
  %255 = bitcast %"class.std::__1::vector.284"* %216 to i64*
  %256 = bitcast %"struct.std::__1::pair.286"** %231 to i64*
  %257 = bitcast %"struct.std::__1::pair.286"** %236 to i64*
  %258 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %213, %"struct.jxl::QuantizedPatch"* nonnull dereferenceable(160) %123) #9
  %259 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %216, i64 0, i32 0, i32 0
  %260 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %259, align 8
  %261 = icmp eq %"struct.std::__1::pair.286"* %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %254
  %263 = bitcast %"class.std::__1::vector.284"* %216 to i8*
  %264 = ptrtoint %"struct.std::__1::pair.286"* %260 to i64
  store i64 %264, i64* %256, align 8
  %265 = bitcast %"struct.std::__1::pair.286"* %260 to i8*
  call void @_ZdlPv(i8* %265) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %263, i8 0, i64 24, i1 false) #9
  br label %266

266:                                              ; preds = %262, %254
  %267 = load i64, i64* %116, align 8
  store i64 %267, i64* %255, align 8
  %268 = load i64, i64* %118, align 8
  store i64 %268, i64* %256, align 8
  %269 = load i64, i64* %120, align 8
  store i64 %269, i64* %257, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #9
  %270 = load float*, float** %124, align 8
  %271 = icmp eq float* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %266
  %273 = bitcast float* %270 to i8*
  %274 = ptrtoint float* %270 to i64
  store i64 %274, i64* %113, align 8
  call void @_ZdlPv(i8* %273) #19
  br label %275

275:                                              ; preds = %272, %266
  %276 = load float*, float** %125, align 8
  %277 = icmp eq float* %276, null
  br i1 %277, label %293, label %290

278:                                              ; preds = %299
  %279 = ptrtoint i8* %300 to i64
  store i64 %279, i64* %97, align 8
  call void @_ZdlPv(i8* nonnull %300) #19
  br label %280

280:                                              ; preds = %299, %278
  %281 = load i8*, i8** %128, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %280
  %284 = ptrtoint i8* %281 to i64
  store i64 %284, i64* %92, align 8
  call void @_ZdlPv(i8* nonnull %281) #19
  br label %285

285:                                              ; preds = %283, %280
  %286 = load i8*, i8** %129, align 8
  %287 = icmp eq i8* %286, null
  br i1 %287, label %302, label %288

288:                                              ; preds = %285
  %289 = ptrtoint i8* %286 to i64
  store i64 %289, i64* %87, align 8
  call void @_ZdlPv(i8* nonnull %286) #19
  br label %302

290:                                              ; preds = %275
  %291 = ptrtoint float* %276 to i64
  store i64 %291, i64* %107, align 8
  %292 = bitcast float* %276 to i8*
  call void @_ZdlPv(i8* %292) #19
  br label %293

293:                                              ; preds = %290, %275
  %294 = load float*, float** %126, align 8
  %295 = icmp eq float* %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %293
  %297 = ptrtoint float* %294 to i64
  store i64 %297, i64* %102, align 8
  %298 = bitcast float* %294 to i8*
  call void @_ZdlPv(i8* %298) #19
  br label %299

299:                                              ; preds = %296, %293
  %300 = load i8*, i8** %127, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %280, label %278

302:                                              ; preds = %288, %285
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %84) #9
  br label %303

303:                                              ; preds = %302, %145
  %304 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %146, i64 1
  %305 = icmp eq %"struct.std::__1::pair.270"* %304, %5
  br i1 %305, label %569, label %145

306:                                              ; preds = %75
  %307 = icmp sgt i64 %24, 183816
  %308 = udiv i64 %24, 368
  %309 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 %308
  br i1 %307, label %310, label %315

310:                                              ; preds = %306
  %311 = udiv i64 %24, 736
  %312 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 %311
  %313 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %309, i64 %311
  %314 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %312, %"struct.std::__1::pair.270"* %309, %"struct.std::__1::pair.270"* %313, %"struct.std::__1::pair.270"* %8)
  br label %317

315:                                              ; preds = %306
  %316 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %309, %"struct.std::__1::pair.270"* %8)
  br label %317

317:                                              ; preds = %315, %310
  %318 = phi i32 [ %314, %310 ], [ %316, %315 ]
  %319 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 0, i32 0
  %320 = load i64, i64* %319, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 0, i32 1
  %322 = load i64, i64* %321, align 8
  %323 = mul i64 %322, %320
  %324 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %309, i64 0, i32 0, i32 0
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 %308, i32 0, i32 1
  %327 = load i64, i64* %326, align 8
  %328 = mul i64 %327, %325
  %329 = icmp ugt i64 %323, %328
  br i1 %329, label %447, label %330

330:                                              ; preds = %317, %418
  %331 = phi %"struct.std::__1::pair.270"* [ %332, %418 ], [ %8, %317 ]
  %332 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %331, i64 -1
  %333 = icmp eq %"struct.std::__1::pair.270"* %22, %332
  br i1 %333, label %334, label %418

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 1
  %336 = load i64, i64* %9, align 8
  %337 = load i64, i64* %10, align 8
  %338 = mul i64 %337, %336
  %339 = icmp ugt i64 %323, %338
  br i1 %339, label %368, label %340

340:                                              ; preds = %334
  %341 = icmp eq %"struct.std::__1::pair.270"* %335, %8
  br i1 %341, label %569, label %342

342:                                              ; preds = %340, %365
  %343 = phi %"struct.std::__1::pair.270"* [ %366, %365 ], [ %335, %340 ]
  %344 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 0, i32 0, i32 0
  %345 = load i64, i64* %344, align 8
  %346 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 0, i32 0, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = mul i64 %347, %345
  %349 = icmp ugt i64 %323, %348
  br i1 %349, label %350, label %365

350:                                              ; preds = %342
  %351 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %351, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %11) #9
  %352 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 0, i32 1
  %353 = bitcast %"class.std::__1::vector.284"* %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = load i64, i64* %13, align 8
  store i64 %355, i64* %353, align 8
  store i64 %354, i64* %13, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 0, i32 1, i32 0, i32 1
  %357 = bitcast %"struct.std::__1::pair.286"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = load i64, i64* %15, align 8
  store i64 %359, i64* %357, align 8
  store i64 %358, i64* %15, align 8
  %360 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %361 = bitcast %"struct.std::__1::pair.286"** %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = load i64, i64* %17, align 8
  store i64 %363, i64* %361, align 8
  store i64 %362, i64* %17, align 8
  %364 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 1
  br label %368

365:                                              ; preds = %342
  %366 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %343, i64 1
  %367 = icmp eq %"struct.std::__1::pair.270"* %366, %8
  br i1 %367, label %569, label %342

368:                                              ; preds = %350, %334
  %369 = phi %"struct.std::__1::pair.270"* [ %335, %334 ], [ %364, %350 ]
  %370 = icmp eq %"struct.std::__1::pair.270"* %369, %8
  br i1 %370, label %569, label %371

371:                                              ; preds = %368, %397
  %372 = phi %"struct.std::__1::pair.270"* [ %385, %397 ], [ %369, %368 ]
  %373 = phi %"struct.std::__1::pair.270"* [ %388, %397 ], [ %8, %368 ]
  %374 = load i64, i64* %319, align 8
  %375 = load i64, i64* %321, align 8
  %376 = mul i64 %375, %374
  br label %377

377:                                              ; preds = %377, %371
  %378 = phi %"struct.std::__1::pair.270"* [ %372, %371 ], [ %385, %377 ]
  %379 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %378, i64 0, i32 0, i32 0
  %380 = load i64, i64* %379, align 8
  %381 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %378, i64 0, i32 0, i32 1
  %382 = load i64, i64* %381, align 8
  %383 = mul i64 %382, %380
  %384 = icmp ugt i64 %376, %383
  %385 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %378, i64 1
  br i1 %384, label %386, label %377

386:                                              ; preds = %377, %386
  %387 = phi %"struct.std::__1::pair.270"* [ %388, %386 ], [ %373, %377 ]
  %388 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %387, i64 -1
  %389 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %388, i64 0, i32 0, i32 0
  %390 = load i64, i64* %389, align 8
  %391 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %387, i64 -1, i32 0, i32 1
  %392 = load i64, i64* %391, align 8
  %393 = mul i64 %392, %390
  %394 = icmp ugt i64 %376, %393
  br i1 %394, label %386, label %395

395:                                              ; preds = %386
  %396 = icmp ult %"struct.std::__1::pair.270"* %378, %388
  br i1 %396, label %397, label %21

397:                                              ; preds = %395
  %398 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %378, i64 0, i32 0
  %399 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %388, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %398, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %399) #9
  %400 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %378, i64 0, i32 1
  %401 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %387, i64 -1, i32 1
  %402 = bitcast %"class.std::__1::vector.284"* %400 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = bitcast %"class.std::__1::vector.284"* %401 to i64*
  %405 = load i64, i64* %404, align 8
  store i64 %405, i64* %402, align 8
  store i64 %403, i64* %404, align 8
  %406 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %378, i64 0, i32 1, i32 0, i32 1
  %407 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %387, i64 -1, i32 1, i32 0, i32 1
  %408 = bitcast %"struct.std::__1::pair.286"** %406 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = bitcast %"struct.std::__1::pair.286"** %407 to i64*
  %411 = load i64, i64* %410, align 8
  store i64 %411, i64* %408, align 8
  store i64 %409, i64* %410, align 8
  %412 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %378, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %413 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %387, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %414 = bitcast %"struct.std::__1::pair.286"** %412 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = bitcast %"struct.std::__1::pair.286"** %413 to i64*
  %417 = load i64, i64* %416, align 8
  store i64 %417, i64* %414, align 8
  store i64 %415, i64* %416, align 8
  br label %371

418:                                              ; preds = %330
  %419 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %332, i64 0, i32 0, i32 0
  %420 = load i64, i64* %419, align 8
  %421 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %331, i64 -1, i32 0, i32 1
  %422 = load i64, i64* %421, align 8
  %423 = mul i64 %422, %420
  %424 = icmp ugt i64 %423, %328
  br i1 %424, label %425, label %330

425:                                              ; preds = %418
  %426 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 0
  %427 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %332, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %426, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %427) #9
  %428 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 1
  %429 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %331, i64 -1, i32 1
  %430 = bitcast %"class.std::__1::vector.284"* %428 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = bitcast %"class.std::__1::vector.284"* %429 to i64*
  %433 = load i64, i64* %432, align 8
  store i64 %433, i64* %430, align 8
  store i64 %431, i64* %432, align 8
  %434 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 1, i32 0, i32 1
  %435 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %331, i64 -1, i32 1, i32 0, i32 1
  %436 = bitcast %"struct.std::__1::pair.286"** %434 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = bitcast %"struct.std::__1::pair.286"** %435 to i64*
  %439 = load i64, i64* %438, align 8
  store i64 %439, i64* %436, align 8
  store i64 %437, i64* %438, align 8
  %440 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %441 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %331, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %442 = bitcast %"struct.std::__1::pair.286"** %440 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = bitcast %"struct.std::__1::pair.286"** %441 to i64*
  %445 = load i64, i64* %444, align 8
  store i64 %445, i64* %442, align 8
  store i64 %443, i64* %444, align 8
  %446 = add i32 %318, 1
  br label %447

447:                                              ; preds = %317, %425
  %448 = phi i32 [ %446, %425 ], [ %318, %317 ]
  %449 = phi %"struct.std::__1::pair.270"* [ %332, %425 ], [ %8, %317 ]
  %450 = ptrtoint %"struct.std::__1::pair.270"* %22 to i64
  %451 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %22, i64 1
  %452 = icmp ult %"struct.std::__1::pair.270"* %451, %449
  br i1 %452, label %453, label %507

453:                                              ; preds = %447, %483
  %454 = phi %"struct.std::__1::pair.270"* [ %506, %483 ], [ %309, %447 ]
  %455 = phi i32 [ %504, %483 ], [ %448, %447 ]
  %456 = phi %"struct.std::__1::pair.270"* [ %471, %483 ], [ %451, %447 ]
  %457 = phi %"struct.std::__1::pair.270"* [ %474, %483 ], [ %449, %447 ]
  %458 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %454, i64 0, i32 0, i32 0
  %459 = load i64, i64* %458, align 8
  %460 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %454, i64 0, i32 0, i32 1
  %461 = load i64, i64* %460, align 8
  %462 = mul i64 %461, %459
  br label %463

463:                                              ; preds = %463, %453
  %464 = phi %"struct.std::__1::pair.270"* [ %456, %453 ], [ %471, %463 ]
  %465 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 0, i32 0
  %466 = load i64, i64* %465, align 8
  %467 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 0, i32 1
  %468 = load i64, i64* %467, align 8
  %469 = mul i64 %468, %466
  %470 = icmp ugt i64 %469, %462
  %471 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 1
  br i1 %470, label %463, label %472

472:                                              ; preds = %463, %472
  %473 = phi %"struct.std::__1::pair.270"* [ %474, %472 ], [ %457, %463 ]
  %474 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %473, i64 -1
  %475 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %474, i64 0, i32 0, i32 0
  %476 = load i64, i64* %475, align 8
  %477 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %473, i64 -1, i32 0, i32 1
  %478 = load i64, i64* %477, align 8
  %479 = mul i64 %478, %476
  %480 = icmp ugt i64 %479, %462
  br i1 %480, label %481, label %472

481:                                              ; preds = %472
  %482 = icmp ugt %"struct.std::__1::pair.270"* %464, %474
  br i1 %482, label %507, label %483

483:                                              ; preds = %481
  %484 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 0
  %485 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %474, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %484, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %485) #9
  %486 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1
  %487 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %473, i64 -1, i32 1
  %488 = bitcast %"class.std::__1::vector.284"* %486 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = bitcast %"class.std::__1::vector.284"* %487 to i64*
  %491 = load i64, i64* %490, align 8
  store i64 %491, i64* %488, align 8
  store i64 %489, i64* %490, align 8
  %492 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1, i32 0, i32 1
  %493 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %473, i64 -1, i32 1, i32 0, i32 1
  %494 = bitcast %"struct.std::__1::pair.286"** %492 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = bitcast %"struct.std::__1::pair.286"** %493 to i64*
  %497 = load i64, i64* %496, align 8
  store i64 %497, i64* %494, align 8
  store i64 %495, i64* %496, align 8
  %498 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %464, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %499 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %473, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %500 = bitcast %"struct.std::__1::pair.286"** %498 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = bitcast %"struct.std::__1::pair.286"** %499 to i64*
  %503 = load i64, i64* %502, align 8
  store i64 %503, i64* %500, align 8
  store i64 %501, i64* %502, align 8
  %504 = add i32 %455, 1
  %505 = icmp eq %"struct.std::__1::pair.270"* %454, %464
  %506 = select i1 %505, %"struct.std::__1::pair.270"* %474, %"struct.std::__1::pair.270"* %454
  br label %453

507:                                              ; preds = %481, %447
  %508 = phi %"struct.std::__1::pair.270"* [ %309, %447 ], [ %454, %481 ]
  %509 = phi i32 [ %448, %447 ], [ %455, %481 ]
  %510 = phi %"struct.std::__1::pair.270"* [ %451, %447 ], [ %464, %481 ]
  %511 = icmp eq %"struct.std::__1::pair.270"* %510, %508
  br i1 %511, label %546, label %512

512:                                              ; preds = %507
  %513 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %508, i64 0, i32 0, i32 0
  %514 = load i64, i64* %513, align 8
  %515 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %508, i64 0, i32 0, i32 1
  %516 = load i64, i64* %515, align 8
  %517 = mul i64 %516, %514
  %518 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 0, i32 0, i32 0
  %519 = load i64, i64* %518, align 8
  %520 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 0, i32 0, i32 1
  %521 = load i64, i64* %520, align 8
  %522 = mul i64 %521, %519
  %523 = icmp ugt i64 %517, %522
  br i1 %523, label %524, label %546

524:                                              ; preds = %512
  %525 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 0, i32 0
  %526 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %508, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %525, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %526) #9
  %527 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 0, i32 1
  %528 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %508, i64 0, i32 1
  %529 = bitcast %"class.std::__1::vector.284"* %527 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = bitcast %"class.std::__1::vector.284"* %528 to i64*
  %532 = load i64, i64* %531, align 8
  store i64 %532, i64* %529, align 8
  store i64 %530, i64* %531, align 8
  %533 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 0, i32 1, i32 0, i32 1
  %534 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %508, i64 0, i32 1, i32 0, i32 1
  %535 = bitcast %"struct.std::__1::pair.286"** %533 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = bitcast %"struct.std::__1::pair.286"** %534 to i64*
  %538 = load i64, i64* %537, align 8
  store i64 %538, i64* %535, align 8
  store i64 %536, i64* %537, align 8
  %539 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %540 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %508, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %541 = bitcast %"struct.std::__1::pair.286"** %539 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::pair.286"** %540 to i64*
  %544 = load i64, i64* %543, align 8
  store i64 %544, i64* %541, align 8
  store i64 %542, i64* %543, align 8
  %545 = add i32 %509, 1
  br label %546

546:                                              ; preds = %507, %524, %512
  %547 = phi i32 [ %545, %524 ], [ %509, %512 ], [ %509, %507 ]
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %556

549:                                              ; preds = %546
  %550 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEbT0_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %510)
  %551 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 1
  %552 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEbT0_SN_T_"(%"struct.std::__1::pair.270"* %551, %"struct.std::__1::pair.270"* %5)
  br i1 %552, label %553, label %555

553:                                              ; preds = %549
  br i1 %550, label %569, label %554

554:                                              ; preds = %553, %567
  br label %4

555:                                              ; preds = %549
  br i1 %550, label %565, label %556

556:                                              ; preds = %555, %546
  %557 = ptrtoint %"struct.std::__1::pair.270"* %510 to i64
  %558 = sub i64 %557, %450
  %559 = sdiv exact i64 %558, 184
  %560 = sub i64 %18, %557
  %561 = sdiv exact i64 %560, 184
  %562 = icmp slt i64 %559, %561
  br i1 %562, label %563, label %567

563:                                              ; preds = %556
  tail call fastcc void @"_ZNSt3__16__sortIRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEvT0_SN_T_"(%"struct.std::__1::pair.270"* %22, %"struct.std::__1::pair.270"* %510)
  %564 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 1
  br label %565

565:                                              ; preds = %563, %555
  %566 = phi %"struct.std::__1::pair.270"* [ %551, %555 ], [ %564, %563 ]
  br label %19

567:                                              ; preds = %556
  %568 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %510, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEvT0_SN_T_"(%"struct.std::__1::pair.270"* %568, %"struct.std::__1::pair.270"* %5)
  br label %554

569:                                              ; preds = %553, %368, %21, %21, %340, %365, %303, %77, %26, %39, %60, %64, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_T_"(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %7, %5
  %9 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = mul i64 %12, %10
  %14 = icmp ugt i64 %8, %13
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = mul i64 %18, %16
  %20 = icmp ugt i64 %19, %8
  br i1 %14, label %64, label %21

21:                                               ; preds = %3
  br i1 %20, label %22, label %127

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %23, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %24) #9
  %25 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %27 = bitcast %"class.std::__1::vector.284"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.284"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair.286"** %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::pair.286"** %32 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  store i64 %34, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair.286"** %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"struct.std::__1::pair.286"** %38 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %39, align 8
  store i64 %40, i64* %41, align 8
  %43 = load i64, i64* %4, align 8
  %44 = load i64, i64* %6, align 8
  %45 = mul i64 %44, %43
  %46 = load i64, i64* %9, align 8
  %47 = load i64, i64* %11, align 8
  %48 = mul i64 %47, %46
  %49 = icmp ugt i64 %45, %48
  br i1 %49, label %50, label %127

50:                                               ; preds = %22
  %51 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %51, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %23) #9
  %52 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %53 = bitcast %"class.std::__1::vector.284"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load i64, i64* %27, align 8
  store i64 %55, i64* %53, align 8
  store i64 %54, i64* %27, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %57 = bitcast %"struct.std::__1::pair.286"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %33, align 8
  store i64 %59, i64* %57, align 8
  store i64 %58, i64* %33, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast %"struct.std::__1::pair.286"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = load i64, i64* %39, align 8
  store i64 %63, i64* %61, align 8
  store i64 %62, i64* %39, align 8
  br label %127

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  br i1 %20, label %66, label %86

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %65, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %67) #9
  %68 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %70 = bitcast %"class.std::__1::vector.284"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.284"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %70, align 8
  store i64 %71, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %76 = bitcast %"struct.std::__1::pair.286"** %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"struct.std::__1::pair.286"** %75 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %76, align 8
  store i64 %77, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"struct.std::__1::pair.286"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"struct.std::__1::pair.286"** %81 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %82, align 8
  store i64 %83, i64* %84, align 8
  br label %127

86:                                               ; preds = %64
  %87 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %65, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %87) #9
  %88 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %89 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %90 = bitcast %"class.std::__1::vector.284"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::vector.284"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %90, align 8
  store i64 %91, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %96 = bitcast %"struct.std::__1::pair.286"** %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"struct.std::__1::pair.286"** %95 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %102 = bitcast %"struct.std::__1::pair.286"** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.286"** %101 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %102, align 8
  store i64 %103, i64* %104, align 8
  %106 = load i64, i64* %15, align 8
  %107 = load i64, i64* %17, align 8
  %108 = mul i64 %107, %106
  %109 = load i64, i64* %4, align 8
  %110 = load i64, i64* %6, align 8
  %111 = mul i64 %110, %109
  %112 = icmp ugt i64 %108, %111
  br i1 %112, label %113, label %127

113:                                              ; preds = %86
  %114 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %87, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %114) #9
  %115 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %116 = load i64, i64* %92, align 8
  %117 = bitcast %"class.std::__1::vector.284"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %92, align 8
  store i64 %116, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %120 = load i64, i64* %98, align 8
  %121 = bitcast %"struct.std::__1::pair.286"** %119 to i64*
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %98, align 8
  store i64 %120, i64* %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %124 = load i64, i64* %104, align 8
  %125 = bitcast %"struct.std::__1::pair.286"** %123 to i64*
  %126 = load i64, i64* %125, align 8
  store i64 %126, i64* %104, align 8
  store i64 %124, i64* %125, align 8
  br label %127

127:                                              ; preds = %86, %113, %22, %50, %21, %66
  %128 = phi i32 [ 1, %66 ], [ 0, %21 ], [ 2, %50 ], [ 1, %22 ], [ 2, %113 ], [ 1, %86 ]
  ret i32 %128
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_T_"(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_T_"(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %1, %"struct.std::__1::pair.270"* %2)
  %6 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %9, %7
  %11 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = mul i64 %14, %12
  %16 = icmp ugt i64 %10, %15
  br i1 %16, label %17, label %87

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %18, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %19) #9
  %20 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1
  %22 = bitcast %"class.std::__1::vector.284"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.284"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  store i64 %23, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %27 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast %"struct.std::__1::pair.286"** %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::pair.286"** %27 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.286"** %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"struct.std::__1::pair.286"** %33 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %34, align 8
  store i64 %35, i64* %36, align 8
  %38 = add i32 %5, 1
  %39 = load i64, i64* %11, align 8
  %40 = load i64, i64* %13, align 8
  %41 = mul i64 %40, %39
  %42 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = mul i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %87

48:                                               ; preds = %17
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %49, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %18) #9
  %50 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %51 = bitcast %"class.std::__1::vector.284"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = load i64, i64* %22, align 8
  store i64 %53, i64* %51, align 8
  store i64 %52, i64* %22, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::pair.286"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = load i64, i64* %28, align 8
  store i64 %57, i64* %55, align 8
  store i64 %56, i64* %28, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.std::__1::pair.286"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = load i64, i64* %34, align 8
  store i64 %61, i64* %59, align 8
  store i64 %60, i64* %34, align 8
  %62 = add i32 %5, 2
  %63 = load i64, i64* %42, align 8
  %64 = load i64, i64* %44, align 8
  %65 = mul i64 %64, %63
  %66 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = mul i64 %69, %67
  %71 = icmp ugt i64 %65, %70
  br i1 %71, label %72, label %87

72:                                               ; preds = %48
  %73 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %73, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %49) #9
  %74 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %75 = bitcast %"class.std::__1::vector.284"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %51, align 8
  store i64 %77, i64* %75, align 8
  store i64 %76, i64* %51, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %79 = bitcast %"struct.std::__1::pair.286"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = load i64, i64* %55, align 8
  store i64 %81, i64* %79, align 8
  store i64 %80, i64* %55, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"struct.std::__1::pair.286"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = load i64, i64* %59, align 8
  store i64 %85, i64* %83, align 8
  store i64 %84, i64* %59, align 8
  %86 = add i32 %5, 3
  br label %87

87:                                               ; preds = %17, %72, %48, %4
  %88 = phi i32 [ %86, %72 ], [ %62, %48 ], [ %38, %17 ], [ %5, %4 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_SN_T_"(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_T_"(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %1, %"struct.std::__1::pair.270"* %2, %"struct.std::__1::pair.270"* %3)
  %7 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = mul i64 %10, %8
  %12 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %15, %13
  %17 = icmp ugt i64 %11, %16
  br i1 %17, label %18, label %112

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %19, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %20) #9
  %21 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1
  %23 = bitcast %"class.std::__1::vector.284"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.284"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 %24, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 1
  %29 = bitcast %"struct.std::__1::pair.286"** %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.std::__1::pair.286"** %28 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  store i64 %30, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"struct.std::__1::pair.286"** %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.std::__1::pair.286"** %34 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %35, align 8
  store i64 %36, i64* %37, align 8
  %39 = add i32 %6, 1
  %40 = load i64, i64* %12, align 8
  %41 = load i64, i64* %14, align 8
  %42 = mul i64 %41, %40
  %43 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = mul i64 %46, %44
  %48 = icmp ugt i64 %42, %47
  br i1 %48, label %49, label %112

49:                                               ; preds = %18
  %50 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %50, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %19) #9
  %51 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %52 = bitcast %"class.std::__1::vector.284"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = load i64, i64* %23, align 8
  store i64 %54, i64* %52, align 8
  store i64 %53, i64* %23, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 1
  %56 = bitcast %"struct.std::__1::pair.286"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = load i64, i64* %29, align 8
  store i64 %58, i64* %56, align 8
  store i64 %57, i64* %29, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.std::__1::pair.286"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = load i64, i64* %35, align 8
  store i64 %62, i64* %60, align 8
  store i64 %61, i64* %35, align 8
  %63 = add i32 %6, 2
  %64 = load i64, i64* %43, align 8
  %65 = load i64, i64* %45, align 8
  %66 = mul i64 %65, %64
  %67 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = mul i64 %70, %68
  %72 = icmp ugt i64 %66, %71
  br i1 %72, label %73, label %112

73:                                               ; preds = %49
  %74 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %74, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %50) #9
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1
  %76 = bitcast %"class.std::__1::vector.284"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = load i64, i64* %52, align 8
  store i64 %78, i64* %76, align 8
  store i64 %77, i64* %52, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 1
  %80 = bitcast %"struct.std::__1::pair.286"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = load i64, i64* %56, align 8
  store i64 %82, i64* %80, align 8
  store i64 %81, i64* %56, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"struct.std::__1::pair.286"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = load i64, i64* %60, align 8
  store i64 %86, i64* %84, align 8
  store i64 %85, i64* %60, align 8
  %87 = add i32 %6, 3
  %88 = load i64, i64* %67, align 8
  %89 = load i64, i64* %69, align 8
  %90 = mul i64 %89, %88
  %91 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = mul i64 %94, %92
  %96 = icmp ugt i64 %90, %95
  br i1 %96, label %97, label %112

97:                                               ; preds = %73
  %98 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %98, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %74) #9
  %99 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %100 = bitcast %"class.std::__1::vector.284"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = load i64, i64* %76, align 8
  store i64 %102, i64* %100, align 8
  store i64 %101, i64* %76, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %104 = bitcast %"struct.std::__1::pair.286"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %80, align 8
  store i64 %106, i64* %104, align 8
  store i64 %105, i64* %80, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"struct.std::__1::pair.286"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %84, align 8
  store i64 %110, i64* %108, align 8
  store i64 %109, i64* %84, align 8
  %111 = add i32 %6, 4
  br label %112

112:                                              ; preds = %18, %73, %97, %49, %5
  %113 = phi i32 [ %111, %97 ], [ %87, %73 ], [ %63, %49 ], [ %39, %18 ], [ %6, %5 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEbT0_SN_T_"(%"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair.270", align 8
  %4 = ptrtoint %"struct.std::__1::pair.270"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.270"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 184
  switch i64 %7, label %57 [
    i64 0, label %301
    i64 1, label %301
    i64 2, label %8
    i64 3, label %42
    i64 4, label %46
    i64 5, label %51
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1
  %10 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %9, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = mul i64 %13, %11
  %15 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = mul i64 %18, %16
  %20 = icmp ugt i64 %14, %19
  br i1 %20, label %21, label %301

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %9, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN3jxl14QuantizedPatchEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.jxl::QuantizedPatch"* dereferenceable(160) %22, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %23) #9
  %24 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1
  %26 = bitcast %"class.std::__1::vector.284"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.284"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  store i64 %27, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1, i32 0, i32 1
  %32 = bitcast %"struct.std::__1::pair.286"** %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.std::__1::pair.286"** %31 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.std::__1::pair.286"** %36 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::pair.286"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %38, align 8
  store i64 %39, i64* %40, align 8
  br label %301

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %44 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1
  %45 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_T_"(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %43, %"struct.std::__1::pair.270"* %44)
  br label %301

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 2
  %49 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1
  %50 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_T_"(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %47, %"struct.std::__1::pair.270"* %48, %"struct.std::__1::pair.270"* %49)
  br label %301

51:                                               ; preds = %2
  %52 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 2
  %54 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 3
  %55 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1, i64 -1
  %56 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_SN_SN_T_"(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %52, %"struct.std::__1::pair.270"* %53, %"struct.std::__1::pair.270"* %54, %"struct.std::__1::pair.270"* %55)
  br label %301

57:                                               ; preds = %2
  %58 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 2
  %59 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 1
  %60 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3jxl23FindBestPatchDictionaryERKNS1_6Image3IfEEPNS1_18PassesEncoderStateEPNS1_10ThreadPoolEPNS1_6AuxOutEbE3$_1PNS_4pairINS1_14QuantizedPatchENS_6vectorINSE_IjjEENS_9allocatorISH_EEEEEEEEjT0_SN_SN_T_"(%"struct.std::__1::pair.270"* %0, %"struct.std::__1::pair.270"* %59, %"struct.std::__1::pair.270"* %58)
  %61 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %0, i64 3
  %62 = icmp eq %"struct.std::__1::pair.270"* %61, %1
  br i1 %62, label %301, label %63

63:                                               ; preds = %57
  %64 = bitcast %"struct.std::__1::pair.270"* %3 to i8*
  %65 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0
  %66 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  %67 = bitcast i8** %66 to i64*
  %68 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast i8** %68 to i64*
  %70 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %72 = bitcast i8** %71 to i64*
  %73 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast i8** %73 to i64*
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2
  %76 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %77 = bitcast i8** %76 to i64*
  %78 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast i8** %78 to i64*
  %80 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0
  %81 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0, i32 0, i32 1
  %82 = bitcast float** %81 to i64*
  %83 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast float** %83 to i64*
  %85 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1
  %86 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1, i32 0, i32 1
  %87 = bitcast float** %86 to i64*
  %88 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast float** %88 to i64*
  %90 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 2
  %91 = bitcast %"class.std::__1::vector.278"* %90 to i64*
  %92 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %93 = bitcast float** %92 to i64*
  %94 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1
  %95 = bitcast %"class.std::__1::vector.284"* %94 to i8*
  %96 = bitcast %"class.std::__1::vector.284"* %94 to i64*
  %97 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %98 = bitcast %"struct.std::__1::pair.286"** %97 to i64*
  %99 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"struct.std::__1::pair.286"** %99 to i64*
  %101 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 1
  %103 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 2, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1
  %111 = bitcast %"class.std::__1::vector.271"* %110 to i8*
  %112 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  %113 = bitcast i8** %112 to i8*
  %114 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %115 = bitcast i8** %114 to i8*
  %116 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %117 = bitcast i8** %116 to i8*
  %118 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 0, i32 0, i32 1
  %119 = bitcast float** %118 to i8*
  %120 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 1, i32 0, i32 1
  %121 = bitcast float** %120 to i8*
  %122 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %123 = bitcast float** %122 to i8*
  %124 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %3, i64 0, i32 1, i32 0, i32 1
  %125 = bitcast %"struct.std::__1::pair.286"** %124 to i8*
  %126 = bitcast %"class.std::__1::vector.271"* %65 to <2 x i64>*
  %127 = bitcast %"class.std::__1::vector.271"* %70 to <2 x i64>*
  %128 = bitcast %"class.std::__1::vector.271"* %75 to <2 x i64>*
  %129 = bitcast %"class.std::__1::vector.278"* %80 to <2 x i64>*
  %130 = bitcast %"class.std::__1::vector.278"* %85 to <2 x i64>*
  %131 = bitcast float** %92 to <2 x i64>*
  %132 = bitcast %"class.std::__1::vector.284"* %94 to <2 x i64>*
  br label %133

133:                                              ; preds = %63, %294
  %134 = phi %"struct.std::__1::pair.270"* [ %61, %63 ], [ %296, %294 ]
  %135 = phi i32 [ 0, %63 ], [ %295, %294 ]
  %136 = phi %"struct.std::__1::pair.270"* [ %58, %63 ], [ %134, %294 ]
  %137 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = mul i64 %140, %138
  %142 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %136, i64 0, i32 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %136, i64 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = mul i64 %145, %143
  %147 = icmp ugt i64 %141, %146
  br i1 %147, label %148, label %294

148:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %64) #9
  %149 = bitcast %"struct.std::__1::pair.270"* %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 -86, i64 144, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %149, i64 16, i1 false) #9
  %150 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #9
  %151 = bitcast %"class.std::__1::vector.271"* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8
  store <2 x i64> %152, <2 x i64>* %126, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2, i32 0, i32 0
  %154 = bitcast i8** %153 to i64*
  %155 = load i64, i64* %154, align 8
  store i64 %155, i64* %69, align 8
  %156 = bitcast %"class.std::__1::vector.271"* %150 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 24, i1 false) #9
  %157 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 2, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #9
  %158 = bitcast %"class.std::__1::vector.271"* %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8
  store <2 x i64> %159, <2 x i64>* %127, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2, i32 0, i32 0
  %161 = bitcast i8** %160 to i64*
  %162 = load i64, i64* %161, align 8
  store i64 %162, i64* %74, align 8
  %163 = bitcast %"class.std::__1::vector.271"* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 24, i1 false) #9
  %164 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 2, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #9
  %165 = bitcast %"class.std::__1::vector.271"* %164 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8
  store <2 x i64> %166, <2 x i64>* %128, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2, i32 0, i32 0
  %168 = bitcast i8** %167 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %79, align 8
  %170 = bitcast %"class.std::__1::vector.271"* %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #9
  %171 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false) #9
  %172 = bitcast %"class.std::__1::vector.278"* %171 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8
  store <2 x i64> %173, <2 x i64>* %129, align 8
  %174 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %175 = bitcast float** %174 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %84, align 8
  %177 = bitcast %"class.std::__1::vector.278"* %171 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 24, i1 false) #9
  %178 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 3, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #9
  %179 = bitcast %"class.std::__1::vector.278"* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  store <2 x i64> %180, <2 x i64>* %130, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %182 = bitcast float** %181 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %89, align 8
  %184 = bitcast %"class.std::__1::vector.278"* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 24, i1 false) #9
  %185 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 3, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #9
  %186 = bitcast %"class.std::__1::vector.278"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %91, align 8
  %188 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 0, i32 3, i64 2, i32 0, i32 1
  %189 = bitcast float** %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8
  store <2 x i64> %190, <2 x i64>* %131, align 8
  %191 = bitcast %"class.std::__1::vector.278"* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #9
  %192 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false) #9
  %193 = bitcast %"class.std::__1::vector.284"* %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8
  store <2 x i64> %194, <2 x i64>* %132, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %196 = bitcast %"struct.std::__1::pair.286"** %195 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %100, align 8
  %198 = bitcast %"class.std::__1::vector.284"* %192 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 24, i1 false) #9
  br label %199

199:                                              ; preds = %232, %148
  %200 = phi %"struct.std::__1::pair.270"* [ %134, %148 ], [ %201, %232 ]
  %201 = phi %"struct.std::__1::pair.270"* [ %136, %148 ], [ %233, %232 ]
  %202 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %201, i64 0, i32 0
  %203 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %200, i64 0, i32 0
  %204 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %203, %"struct.jxl::QuantizedPatch"* dereferenceable(160) %202) #9
  %205 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %201, i64 0, i32 1
  %206 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %200, i64 0, i32 1
  %207 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %206, i64 0, i32 0, i32 0
  %208 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %207, align 8
  %209 = icmp eq %"struct.std::__1::pair.286"* %208, null
  br i1 %209, label %216, label %210

210:                                              ; preds = %199
  %211 = ptrtoint %"struct.std::__1::pair.286"* %208 to i64
  %212 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %200, i64 0, i32 1, i32 0, i32 1
  %213 = bitcast %"struct.std::__1::pair.286"** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast %"struct.std::__1::pair.286"* %208 to i8*
  call void @_ZdlPv(i8* %214) #19
  %215 = bitcast %"class.std::__1::vector.284"* %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 24, i1 false) #9
  br label %216

216:                                              ; preds = %199, %210
  %217 = bitcast %"class.std::__1::vector.284"* %205 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.std::__1::vector.284"* %206 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %201, i64 0, i32 1, i32 0, i32 1
  %221 = bitcast %"struct.std::__1::pair.286"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %200, i64 0, i32 1, i32 0, i32 1
  %224 = bitcast %"struct.std::__1::pair.286"** %223 to i64*
  store i64 %222, i64* %224, align 8
  %225 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %201, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %226 = bitcast %"struct.std::__1::pair.286"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %200, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %229 = bitcast %"struct.std::__1::pair.286"** %228 to i64*
  store i64 %227, i64* %229, align 8
  %230 = bitcast %"class.std::__1::vector.284"* %205 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 24, i1 false) #9
  %231 = icmp eq %"struct.std::__1::pair.270"* %201, %0
  br i1 %231, label %243, label %232

232:                                              ; preds = %216
  %233 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %201, i64 -1
  %234 = load i64, i64* %101, align 8
  %235 = load i64, i64* %102, align 8
  %236 = mul i64 %235, %234
  %237 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %233, i64 0, i32 0, i32 0
  %238 = load i64, i64* %237, align 8
  %239 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %201, i64 -1, i32 0, i32 1
  %240 = load i64, i64* %239, align 8
  %241 = mul i64 %240, %238
  %242 = icmp ugt i64 %236, %241
  br i1 %242, label %199, label %243

243:                                              ; preds = %216, %232
  %244 = bitcast %"class.std::__1::vector.284"* %205 to i64*
  %245 = bitcast %"struct.std::__1::pair.286"** %220 to i64*
  %246 = bitcast %"struct.std::__1::pair.286"** %225 to i64*
  %247 = call dereferenceable(160) %"struct.jxl::QuantizedPatch"* @_ZN3jxl14QuantizedPatchaSEOS0_(%"struct.jxl::QuantizedPatch"* %202, %"struct.jxl::QuantizedPatch"* nonnull dereferenceable(160) %103) #9
  %248 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %205, i64 0, i32 0, i32 0
  %249 = load %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"** %248, align 8
  %250 = icmp eq %"struct.std::__1::pair.286"* %249, null
  br i1 %250, label %255, label %251

251:                                              ; preds = %243
  %252 = bitcast %"class.std::__1::vector.284"* %205 to i8*
  %253 = ptrtoint %"struct.std::__1::pair.286"* %249 to i64
  store i64 %253, i64* %245, align 8
  %254 = bitcast %"struct.std::__1::pair.286"* %249 to i8*
  call void @_ZdlPv(i8* %254) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %252, i8 0, i64 24, i1 false) #9
  br label %255

255:                                              ; preds = %243, %251
  %256 = load i64, i64* %96, align 8
  store i64 %256, i64* %244, align 8
  %257 = load i64, i64* %98, align 8
  store i64 %257, i64* %245, align 8
  %258 = load i64, i64* %100, align 8
  store i64 %258, i64* %246, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #9
  %259 = add i32 %135, 1
  %260 = icmp eq i32 %259, 8
  %261 = load float*, float** %104, align 8
  %262 = icmp eq float* %261, null
  br i1 %262, label %266, label %263

263:                                              ; preds = %255
  %264 = bitcast float* %261 to i8*
  %265 = ptrtoint float* %261 to i64
  store i64 %265, i64* %93, align 8
  call void @_ZdlPv(i8* %264) #19
  br label %266

266:                                              ; preds = %263, %255
  %267 = load float*, float** %105, align 8
  %268 = icmp eq float* %267, null
  br i1 %268, label %284, label %281

269:                                              ; preds = %290
  %270 = ptrtoint i8* %291 to i64
  store i64 %270, i64* %77, align 8
  call void @_ZdlPv(i8* nonnull %291) #19
  br label %271

271:                                              ; preds = %290, %269
  %272 = load i8*, i8** %108, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = ptrtoint i8* %272 to i64
  store i64 %275, i64* %72, align 8
  call void @_ZdlPv(i8* nonnull %272) #19
  br label %276

276:                                              ; preds = %274, %271
  %277 = load i8*, i8** %109, align 8
  %278 = icmp eq i8* %277, null
  br i1 %278, label %293, label %279

279:                                              ; preds = %276
  %280 = ptrtoint i8* %277 to i64
  store i64 %280, i64* %67, align 8
  call void @_ZdlPv(i8* nonnull %277) #19
  br label %293

281:                                              ; preds = %266
  %282 = ptrtoint float* %267 to i64
  store i64 %282, i64* %87, align 8
  %283 = bitcast float* %267 to i8*
  call void @_ZdlPv(i8* %283) #19
  br label %284

284:                                              ; preds = %281, %266
  %285 = load float*, float** %106, align 8
  %286 = icmp eq float* %285, null
  br i1 %286, label %290, label %287

287:                                              ; preds = %284
  %288 = ptrtoint float* %285 to i64
  store i64 %288, i64* %82, align 8
  %289 = bitcast float* %285 to i8*
  call void @_ZdlPv(i8* %289) #19
  br label %290

290:                                              ; preds = %287, %284
  %291 = load i8*, i8** %107, align 8
  %292 = icmp eq i8* %291, null
  br i1 %292, label %271, label %269

293:                                              ; preds = %276, %279
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %64) #9
  br i1 %260, label %298, label %294

294:                                              ; preds = %293, %133
  %295 = phi i32 [ %259, %293 ], [ %135, %133 ]
  %296 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 1
  %297 = icmp eq %"struct.std::__1::pair.270"* %296, %1
  br i1 %297, label %301, label %133

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %134, i64 1
  %300 = icmp eq %"struct.std::__1::pair.270"* %299, %1
  br label %301

301:                                              ; preds = %294, %298, %57, %8, %21, %2, %2, %51, %46, %42
  %302 = phi i1 [ true, %51 ], [ true, %46 ], [ true, %42 ], [ true, %2 ], [ true, %2 ], [ true, %21 ], [ true, %8 ], [ true, %57 ], [ %300, %298 ], [ true, %294 ]
  ret i1 %302
}

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #15

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3jxl13PatchPositionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.jxl::PatchPosition"* dereferenceable(80)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.jxl::PatchPosition"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 230584300921369395
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.jxl::PatchPosition"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 80
  %20 = icmp ult i64 %19, 115292150460684697
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 230584300921369395, %14 ]
  %28 = mul i64 %27, 80
  %29 = tail call i8* @_Znwm(i64 %28) #19
  %30 = bitcast i8* %29 to %"struct.jxl::PatchPosition"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.jxl::PatchPosition"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %33, i64 %32
  %36 = ptrtoint %"struct.jxl::PatchPosition"* %35 to i64
  %37 = bitcast %"struct.jxl::PatchPosition"* %34 to i8*
  %38 = bitcast %"struct.jxl::PatchPosition"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #9
  %39 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %33, i64 %9, i32 2
  %40 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2
  %41 = bitcast %"class.std::__1::vector.0"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #9
  %42 = bitcast %"class.std::__1::vector.0"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.0"* %39 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 1
  %46 = bitcast %"struct.jxl::PatchBlending"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %33, i64 %9, i32 2, i32 0, i32 1
  %49 = bitcast %"struct.jxl::PatchBlending"** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"struct.jxl::PatchBlending"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %33, i64 %9, i32 2, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"struct.jxl::PatchBlending"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.std::__1::vector.0"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  %56 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %33, i64 %9, i32 3
  %57 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3
  %58 = bitcast %"struct.jxl::PatchReferencePosition"* %56 to i8*
  %59 = bitcast %"struct.jxl::PatchReferencePosition"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false) #9
  %60 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %34, i64 1
  %61 = ptrtoint %"struct.jxl::PatchPosition"* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %63 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %62, align 8
  %64 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %3, align 8
  %65 = icmp eq %"struct.jxl::PatchPosition"* %64, %63
  br i1 %65, label %66, label %68

66:                                               ; preds = %31
  %67 = ptrtoint %"struct.jxl::PatchPosition"* %63 to i64
  br label %100

68:                                               ; preds = %31, %68
  %69 = phi %"struct.jxl::PatchPosition"* [ %71, %68 ], [ %34, %31 ]
  %70 = phi %"struct.jxl::PatchPosition"* [ %72, %68 ], [ %64, %31 ]
  %71 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %69, i64 -1
  %72 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %70, i64 -1
  %73 = bitcast %"struct.jxl::PatchPosition"* %71 to i8*
  %74 = bitcast %"struct.jxl::PatchPosition"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #9
  %75 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %69, i64 -1, i32 2
  %76 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %70, i64 -1, i32 2
  %77 = bitcast %"class.std::__1::vector.0"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #9
  %78 = bitcast %"class.std::__1::vector.0"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.0"* %75 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %70, i64 -1, i32 2, i32 0, i32 1
  %82 = bitcast %"struct.jxl::PatchBlending"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %69, i64 -1, i32 2, i32 0, i32 1
  %85 = bitcast %"struct.jxl::PatchBlending"** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %70, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.jxl::PatchBlending"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %69, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"struct.jxl::PatchBlending"** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast %"class.std::__1::vector.0"* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #9
  %92 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %69, i64 -1, i32 3
  %93 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %70, i64 -1, i32 3
  %94 = bitcast %"struct.jxl::PatchReferencePosition"* %92 to i8*
  %95 = bitcast %"struct.jxl::PatchReferencePosition"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 40, i1 false) #9
  %96 = icmp eq %"struct.jxl::PatchPosition"* %72, %63
  br i1 %96, label %97, label %68

97:                                               ; preds = %68
  %98 = load i64, i64* %6, align 8
  %99 = load %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"** %3, align 8
  br label %100

100:                                              ; preds = %66, %97
  %101 = phi %"struct.jxl::PatchPosition"* [ %63, %66 ], [ %99, %97 ]
  %102 = phi %"struct.jxl::PatchPosition"* [ %34, %66 ], [ %71, %97 ]
  %103 = phi i64 [ %67, %66 ], [ %98, %97 ]
  %104 = ptrtoint %"struct.jxl::PatchPosition"* %102 to i64
  store i64 %104, i64* %6, align 8
  store i64 %61, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %105 = inttoptr i64 %103 to %"struct.jxl::PatchPosition"*
  %106 = icmp eq %"struct.jxl::PatchPosition"* %101, %105
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %118
  %108 = phi %"struct.jxl::PatchPosition"* [ %109, %118 ], [ %101, %100 ]
  %109 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %108, i64 -1
  %110 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %108, i64 -1, i32 2, i32 0, i32 0
  %111 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %110, align 8
  %112 = icmp eq %"struct.jxl::PatchBlending"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = ptrtoint %"struct.jxl::PatchBlending"* %111 to i64
  %115 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %108, i64 -1, i32 2, i32 0, i32 1
  %116 = bitcast %"struct.jxl::PatchBlending"** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %111, i64 0, i32 0
  tail call void @_ZdlPv(i8* %117) #19
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"struct.jxl::PatchPosition"* %109, %105
  br i1 %119, label %120, label %107

120:                                              ; preds = %118, %100
  %121 = icmp eq i64 %103, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %103 to i8*
  tail call void @_ZdlPv(i8* %123) #19
  br label %124

124:                                              ; preds = %120, %122
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3jxl5PlaneIfEENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJmmEEEvDpOT_(%"class.std::__1::vector.169"*, i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.jxl::Plane.97"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.169"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.169"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #18
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.jxl::Plane.97"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #18
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #19
  %34 = bitcast i8* %33 to %"class.jxl::Plane.97"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.jxl::Plane.97"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %37, i64 %10
  %39 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %37, i64 %36
  %40 = ptrtoint %"class.jxl::Plane.97"* %39 to i64
  %41 = load i64, i64* %1, align 8
  %42 = load i64, i64* %2, align 8
  %43 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %38, i64 0, i32 0
  tail call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %43, i64 %41, i64 %42, i64 4) #9
  %44 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %38, i64 1
  %45 = ptrtoint %"class.jxl::Plane.97"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %46, align 8
  %48 = ptrtoint %"class.jxl::Plane.97"* %47 to i64
  %49 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %4, align 8
  %50 = icmp eq %"class.jxl::Plane.97"* %49, %47
  br i1 %50, label %101, label %51

51:                                               ; preds = %35
  %52 = getelementptr %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint i32* %52 to i64
  %54 = sub i64 %53, %48
  %55 = and i64 %54, 32
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %38, i64 -1
  %59 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %49, i64 -1
  %60 = bitcast %"class.jxl::Plane.97"* %58 to i8*
  %61 = bitcast %"class.jxl::Plane.97"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #9
  %62 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %38, i64 -1, i32 0, i32 5
  %63 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %49, i64 -1, i32 0, i32 5
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store i8* null, i8** %64, align 8
  %67 = bitcast %"class.std::__1::unique_ptr"* %62 to i64*
  store i64 %66, i64* %67, align 8
  br label %68

68:                                               ; preds = %57, %51
  %69 = phi %"class.jxl::Plane.97"* [ undef, %51 ], [ %58, %57 ]
  %70 = phi %"class.jxl::Plane.97"* [ %38, %51 ], [ %58, %57 ]
  %71 = phi %"class.jxl::Plane.97"* [ %49, %51 ], [ %59, %57 ]
  %72 = icmp ult i64 %54, 32
  br i1 %72, label %97, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"class.jxl::Plane.97"* [ %86, %73 ], [ %70, %68 ]
  %75 = phi %"class.jxl::Plane.97"* [ %87, %73 ], [ %71, %68 ]
  %76 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %74, i64 -1
  %77 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %75, i64 -1
  %78 = bitcast %"class.jxl::Plane.97"* %76 to i8*
  %79 = bitcast %"class.jxl::Plane.97"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #9
  %80 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %74, i64 -1, i32 0, i32 5
  %81 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %75, i64 -1, i32 0, i32 5
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store i8* null, i8** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %74, i64 -2
  %87 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %75, i64 -2
  %88 = bitcast %"class.jxl::Plane.97"* %86 to i8*
  %89 = bitcast %"class.jxl::Plane.97"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #9
  %90 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %74, i64 -2, i32 0, i32 5
  %91 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %75, i64 -2, i32 0, i32 5
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store i8* null, i8** %92, align 8
  %95 = bitcast %"class.std::__1::unique_ptr"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = icmp eq %"class.jxl::Plane.97"* %87, %47
  br i1 %96, label %97, label %73

97:                                               ; preds = %73, %68
  %98 = phi %"class.jxl::Plane.97"* [ %69, %68 ], [ %86, %73 ]
  %99 = load i64, i64* %7, align 8
  %100 = load %"class.jxl::Plane.97"*, %"class.jxl::Plane.97"** %4, align 8
  br label %101

101:                                              ; preds = %35, %97
  %102 = phi %"class.jxl::Plane.97"* [ %100, %97 ], [ %47, %35 ]
  %103 = phi %"class.jxl::Plane.97"* [ %98, %97 ], [ %38, %35 ]
  %104 = phi i64 [ %99, %97 ], [ %48, %35 ]
  %105 = ptrtoint %"class.jxl::Plane.97"* %103 to i64
  store i64 %105, i64* %7, align 8
  store i64 %45, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %106 = inttoptr i64 %104 to %"class.jxl::Plane.97"*
  %107 = icmp eq %"class.jxl::Plane.97"* %102, %106
  br i1 %107, label %117, label %108

108:                                              ; preds = %101, %115
  %109 = phi %"class.jxl::Plane.97"* [ %110, %115 ], [ %102, %101 ]
  %110 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %109, i64 -1
  %111 = getelementptr inbounds %"class.jxl::Plane.97", %"class.jxl::Plane.97"* %109, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  store i8* null, i8** %111, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %108
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %112) #9
  br label %115

115:                                              ; preds = %114, %108
  %116 = icmp eq %"class.jxl::Plane.97"* %110, %106
  br i1 %116, label %117, label %108

117:                                              ; preds = %115, %101
  %118 = icmp eq i64 %104, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %120) #19
  br label %121

121:                                              ; preds = %117, %119
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3jxl9BitWriterENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.241"*, %"class.std::__1::unique_ptr.243"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.243"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.241"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.241"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.243"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.243"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.243"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.243"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.243"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.243"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.243"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.243"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.243"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.jxl::BitWriter"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.243"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.243"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.243"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.243"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !106

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.243"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.243"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.243"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.243"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.243"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.243"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.243"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.243"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.243"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.243"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.243"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.243"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.243"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.243"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.243"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.243"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.243"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.243"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.243"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.243"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.243"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.243"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.243"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.243"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.243"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.243"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.243"*
  %138 = icmp eq %"class.std::__1::unique_ptr.243"* %133, %137
  br i1 %138, label %154, label %139

139:                                              ; preds = %132, %152
  %140 = phi %"class.std::__1::unique_ptr.243"* [ %141, %152 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %142, align 8
  store %"struct.jxl::BitWriter"* null, %"struct.jxl::BitWriter"** %142, align 8
  %144 = icmp eq %"struct.jxl::BitWriter"* %143, null
  br i1 %144, label %152, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %143, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  store i8* null, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %150, label %149

149:                                              ; preds = %145
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %147) #9
  br label %150

150:                                              ; preds = %149, %145
  %151 = bitcast %"struct.jxl::BitWriter"* %143 to i8*
  tail call void @_ZdlPv(i8* %151) #19
  br label %152

152:                                              ; preds = %150, %139
  %153 = icmp eq %"class.std::__1::unique_ptr.243"* %141, %137
  br i1 %153, label %154, label %139

154:                                              ; preds = %152, %132
  %155 = icmp eq i64 %135, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %157) #19
  br label %158

158:                                              ; preds = %154, %156
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"*) local_unnamed_addr #16 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 56
  br i1 %8, label %9, label %24

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 0
  %11 = load i8*, i8** %5, align 8
  %12 = icmp ult i8* %11, %4
  br i1 %12, label %13, label %24

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %14, i8** %5, align 8
  %15 = load i8, i8* %11, align 1
  %16 = zext i8 %15 to i64
  %17 = shl i64 %16, %7
  %18 = load i64, i64* %10, align 8
  %19 = or i64 %17, %18
  store i64 %19, i64* %10, align 8
  %20 = add nuw nsw i64 %7, 8
  store i64 %20, i64* %6, align 8
  %21 = icmp ult i64 %20, 56
  %22 = icmp ult i8* %14, %4
  %23 = and i1 %21, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %13, %9, %33, %44, %55, %66, %77, %88, %1
  %25 = phi i64 [ %7, %1 ], [ %7, %9 ], [ %20, %13 ], [ %40, %33 ], [ %51, %44 ], [ %62, %55 ], [ %73, %66 ], [ %84, %77 ], [ %95, %88 ]
  %26 = sub i64 63, %25
  %27 = lshr i64 %26, 3
  %28 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %27
  store i64 %30, i64* %28, align 8
  %31 = and i64 %26, -8
  %32 = add i64 %31, %25
  store i64 %32, i64* %6, align 8
  ret void

33:                                               ; preds = %13
  %34 = getelementptr inbounds i8, i8* %11, i64 2
  store i8* %34, i8** %5, align 8
  %35 = load i8, i8* %14, align 1
  %36 = zext i8 %35 to i64
  %37 = shl i64 %36, %20
  %38 = load i64, i64* %10, align 8
  %39 = or i64 %37, %38
  store i64 %39, i64* %10, align 8
  %40 = add nuw nsw i64 %7, 16
  store i64 %40, i64* %6, align 8
  %41 = icmp ult i64 %40, 56
  %42 = icmp ult i8* %34, %4
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %24

44:                                               ; preds = %33
  %45 = getelementptr inbounds i8, i8* %11, i64 3
  store i8* %45, i8** %5, align 8
  %46 = load i8, i8* %34, align 1
  %47 = zext i8 %46 to i64
  %48 = shl i64 %47, %40
  %49 = load i64, i64* %10, align 8
  %50 = or i64 %48, %49
  store i64 %50, i64* %10, align 8
  %51 = add nuw nsw i64 %7, 24
  store i64 %51, i64* %6, align 8
  %52 = icmp ult i64 %51, 56
  %53 = icmp ult i8* %45, %4
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %24

55:                                               ; preds = %44
  %56 = getelementptr inbounds i8, i8* %11, i64 4
  store i8* %56, i8** %5, align 8
  %57 = load i8, i8* %45, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, %51
  %60 = load i64, i64* %10, align 8
  %61 = or i64 %59, %60
  store i64 %61, i64* %10, align 8
  %62 = add nuw nsw i64 %7, 32
  store i64 %62, i64* %6, align 8
  %63 = icmp ult i64 %62, 56
  %64 = icmp ult i8* %56, %4
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %24

66:                                               ; preds = %55
  %67 = getelementptr inbounds i8, i8* %11, i64 5
  store i8* %67, i8** %5, align 8
  %68 = load i8, i8* %56, align 1
  %69 = zext i8 %68 to i64
  %70 = shl i64 %69, %62
  %71 = load i64, i64* %10, align 8
  %72 = or i64 %70, %71
  store i64 %72, i64* %10, align 8
  %73 = add nuw nsw i64 %7, 40
  store i64 %73, i64* %6, align 8
  %74 = icmp ult i64 %73, 56
  %75 = icmp ult i8* %67, %4
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %24

77:                                               ; preds = %66
  %78 = getelementptr inbounds i8, i8* %11, i64 6
  store i8* %78, i8** %5, align 8
  %79 = load i8, i8* %67, align 1
  %80 = zext i8 %79 to i64
  %81 = shl i64 %80, %73
  %82 = load i64, i64* %10, align 8
  %83 = or i64 %81, %82
  store i64 %83, i64* %10, align 8
  %84 = add nuw nsw i64 %7, 48
  store i64 %84, i64* %6, align 8
  %85 = icmp ult i64 %84, 56
  %86 = icmp ult i8* %78, %4
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %24

88:                                               ; preds = %77
  %89 = getelementptr inbounds i8, i8* %11, i64 7
  store i8* %89, i8** %5, align 8
  %90 = load i8, i8* %78, align 1
  %91 = zext i8 %90 to i64
  %92 = shl i64 %91, %84
  %93 = load i64, i64* %10, align 8
  %94 = or i64 %92, %93
  store i64 %94, i64* %10, align 8
  %95 = add nuw nsw i64 %7, 56
  store i64 %95, i64* %6, align 8
  br label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_(%"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.std::__1::__less.471"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %16 = bitcast { i64, i64 }* %4 to i8*
  %17 = bitcast %"struct.jxl::PatchReferencePosition"* %5 to i8*
  %18 = bitcast { i64, i64 }* %12 to i8*
  %19 = bitcast %"struct.jxl::PatchReferencePosition"* %13 to i8*
  %20 = bitcast { i64, i64 }* %6 to i8*
  %21 = bitcast %"struct.jxl::PatchReferencePosition"* %7 to i8*
  %22 = bitcast { i64, i64 }* %8 to i8*
  %23 = bitcast %"struct.jxl::PatchReferencePosition"* %9 to i8*
  %24 = bitcast { i64, i64 }* %10 to i8*
  %25 = bitcast %"struct.jxl::PatchReferencePosition"* %11 to i8*
  br label %26

26:                                               ; preds = %858, %3
  %27 = phi %"struct.jxl::PatchPosition"* [ %1, %3 ], [ %756, %858 ]
  %28 = phi %"struct.jxl::PatchPosition"* [ %0, %3 ], [ %55, %858 ]
  %29 = ptrtoint %"struct.jxl::PatchPosition"* %27 to i64
  %30 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1
  %31 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -2
  %32 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %30, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 1
  %34 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 0
  %35 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 1
  %36 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 2
  %37 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 3
  %38 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 4
  %39 = bitcast %"struct.jxl::PatchPosition"* %30 to i8*
  %40 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 2
  %41 = bitcast %"class.std::__1::vector.0"* %40 to i64*
  %42 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 2, i32 0, i32 1
  %43 = bitcast %"struct.jxl::PatchBlending"** %42 to i64*
  %44 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"struct.jxl::PatchBlending"** %44 to i64*
  %46 = bitcast %"class.std::__1::vector.0"* %40 to i8*
  %47 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3
  %48 = bitcast %"struct.jxl::PatchReferencePosition"* %47 to i8*
  %49 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %40, i64 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::vector.0"* %40 to <2 x i64>*
  %51 = ptrtoint %"struct.jxl::PatchPosition"* %27 to i64
  br label %52

52:                                               ; preds = %869, %26
  %53 = phi %"struct.jxl::PatchPosition"* [ %28, %26 ], [ %870, %869 ]
  br label %54

54:                                               ; preds = %468, %52
  %55 = phi %"struct.jxl::PatchPosition"* [ %53, %52 ], [ %412, %468 ]
  %56 = ptrtoint %"struct.jxl::PatchPosition"* %55 to i64
  %57 = sub i64 %29, %56
  %58 = sdiv exact i64 %57, 80
  switch i64 %58, label %168 [
    i64 0, label %873
    i64 1, label %873
    i64 2, label %59
    i64 3, label %153
    i64 4, label %157
    i64 5, label %162
  ]

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1
  %61 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 1
  %63 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3, i32 4
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %61, align 8, !noalias !107
  %74 = load i64, i64* %62, align 8, !noalias !107
  %75 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 3
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 4
  %86 = load i64, i64* %85, align 8
  %87 = load i64, i64* %75, align 8, !noalias !110
  %88 = load i64, i64* %76, align 8, !noalias !110
  %89 = icmp ult i64 %64, %78
  br i1 %89, label %116, label %90

90:                                               ; preds = %59
  %91 = icmp ult i64 %78, %64
  br i1 %91, label %873, label %92

92:                                               ; preds = %90
  %93 = icmp ult i64 %66, %80
  br i1 %93, label %116, label %94

94:                                               ; preds = %92
  %95 = icmp ult i64 %80, %66
  br i1 %95, label %873, label %96

96:                                               ; preds = %94
  %97 = icmp ult i64 %68, %82
  br i1 %97, label %116, label %98

98:                                               ; preds = %96
  %99 = icmp ult i64 %82, %68
  br i1 %99, label %873, label %100

100:                                              ; preds = %98
  %101 = icmp ult i64 %70, %84
  br i1 %101, label %116, label %102

102:                                              ; preds = %100
  %103 = icmp uge i64 %84, %70
  %104 = icmp ult i64 %72, %86
  %105 = and i1 %103, %104
  br i1 %105, label %116, label %106

106:                                              ; preds = %102
  %107 = icmp ult i64 %84, %70
  %108 = icmp ult i64 %86, %72
  %109 = or i1 %107, %108
  br i1 %109, label %873, label %110

110:                                              ; preds = %106
  %111 = icmp ult i64 %73, %87
  br i1 %111, label %116, label %112

112:                                              ; preds = %110
  %113 = icmp uge i64 %87, %73
  %114 = icmp ult i64 %74, %88
  %115 = and i1 %113, %114
  br i1 %115, label %116, label %873

116:                                              ; preds = %100, %96, %92, %59, %110, %102, %112
  %117 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117)
  %118 = bitcast %"struct.jxl::PatchReferencePosition"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %118)
  %119 = bitcast %"struct.jxl::PatchPosition"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 %119, i64 16, i1 false) #9
  %120 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 2
  %121 = bitcast %"class.std::__1::vector.0"* %120 to i64*
  %122 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 2, i32 0, i32 1
  %123 = bitcast %"struct.jxl::PatchBlending"** %122 to i64*
  %124 = bitcast %"class.std::__1::vector.0"* %120 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8
  %126 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %127 = bitcast %"struct.jxl::PatchBlending"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector.0"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #9
  %130 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3
  %131 = bitcast %"struct.jxl::PatchReferencePosition"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 8 %131, i64 40, i1 false) #9
  %132 = bitcast %"struct.jxl::PatchPosition"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %132, i64 16, i1 false) #9
  %133 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 2
  %134 = bitcast %"class.std::__1::vector.0"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %121, align 8
  %136 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 2, i32 0, i32 1
  %137 = bitcast %"struct.jxl::PatchBlending"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %123, align 8
  %139 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"struct.jxl::PatchBlending"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %127, align 8
  %142 = bitcast %"class.std::__1::vector.0"* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #9
  %143 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1, i32 3
  %144 = bitcast %"struct.jxl::PatchReferencePosition"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %144, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* nonnull align 8 %117, i64 16, i1 false) #9
  %145 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %133, i64 0, i32 0, i32 0
  %146 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %145, align 8
  %147 = icmp eq %"struct.jxl::PatchBlending"* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %116
  %149 = ptrtoint %"struct.jxl::PatchBlending"* %146 to i64
  store i64 %149, i64* %137, align 8
  %150 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %146, i64 0, i32 0
  tail call void @_ZdlPv(i8* %150) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #9
  br label %151

151:                                              ; preds = %116, %148
  %152 = bitcast %"class.std::__1::vector.0"* %133 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %152, align 8
  store i64 %128, i64* %140, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* nonnull align 8 %118, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %118)
  br label %873

153:                                              ; preds = %54
  %154 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 1
  %155 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1
  %156 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %154, %"struct.jxl::PatchPosition"* %155, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %873

157:                                              ; preds = %54
  %158 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 1
  %159 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 2
  %160 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1
  %161 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %158, %"struct.jxl::PatchPosition"* %159, %"struct.jxl::PatchPosition"* %160, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %873

162:                                              ; preds = %54
  %163 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 1
  %164 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 2
  %165 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 3
  %166 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %27, i64 -1
  %167 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %163, %"struct.jxl::PatchPosition"* %164, %"struct.jxl::PatchPosition"* %165, %"struct.jxl::PatchPosition"* %166, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %873

168:                                              ; preds = %54
  %169 = icmp slt i64 %57, 560
  br i1 %169, label %170, label %171

170:                                              ; preds = %168
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %27, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %873

171:                                              ; preds = %168
  %172 = icmp sgt i64 %57, 79920
  %173 = udiv i64 %57, 160
  %174 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %173
  br i1 %172, label %175, label %180

175:                                              ; preds = %171
  %176 = udiv i64 %57, 320
  %177 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %176
  %178 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %174, i64 %176
  %179 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %177, %"struct.jxl::PatchPosition"* %174, %"struct.jxl::PatchPosition"* %178, %"struct.jxl::PatchPosition"* %30, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %182

180:                                              ; preds = %171
  %181 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %174, %"struct.jxl::PatchPosition"* %30, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %182

182:                                              ; preds = %180, %175
  %183 = phi i32 [ %179, %175 ], [ %181, %180 ]
  %184 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 0
  %185 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 1
  %186 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 0
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 2
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 3
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3, i32 4
  %195 = load i64, i64* %194, align 8
  %196 = load i64, i64* %184, align 8, !noalias !113
  %197 = load i64, i64* %185, align 8, !noalias !113
  %198 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %174, i64 0, i32 0
  %199 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %173, i32 1
  %200 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %173, i32 3, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %173, i32 3, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %173, i32 3, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %173, i32 3, i32 3
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 %173, i32 3, i32 4
  %209 = load i64, i64* %208, align 8
  %210 = load i64, i64* %198, align 8, !noalias !116
  %211 = load i64, i64* %199, align 8, !noalias !116
  %212 = icmp ult i64 %187, %201
  br i1 %212, label %589, label %213

213:                                              ; preds = %182
  %214 = icmp ult i64 %201, %187
  br i1 %214, label %239, label %215

215:                                              ; preds = %213
  %216 = icmp ult i64 %189, %203
  br i1 %216, label %589, label %217

217:                                              ; preds = %215
  %218 = icmp ult i64 %203, %189
  br i1 %218, label %239, label %219

219:                                              ; preds = %217
  %220 = icmp ult i64 %191, %205
  br i1 %220, label %589, label %221

221:                                              ; preds = %219
  %222 = icmp ult i64 %205, %191
  br i1 %222, label %239, label %223

223:                                              ; preds = %221
  %224 = icmp ult i64 %193, %207
  br i1 %224, label %589, label %225

225:                                              ; preds = %223
  %226 = icmp uge i64 %207, %193
  %227 = icmp ult i64 %195, %209
  %228 = and i1 %226, %227
  br i1 %228, label %589, label %229

229:                                              ; preds = %225
  %230 = icmp ult i64 %207, %193
  %231 = icmp ult i64 %209, %195
  %232 = or i1 %230, %231
  br i1 %232, label %239, label %233

233:                                              ; preds = %229
  %234 = icmp ult i64 %196, %210
  br i1 %234, label %589, label %235

235:                                              ; preds = %233
  %236 = icmp uge i64 %210, %196
  %237 = icmp ult i64 %197, %211
  %238 = and i1 %236, %237
  br i1 %238, label %589, label %239

239:                                              ; preds = %229, %221, %217, %213, %235
  %240 = icmp eq %"struct.jxl::PatchPosition"* %55, %31
  br i1 %240, label %241, label %506

241:                                              ; preds = %550, %239
  %242 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 1
  %243 = load i64, i64* %34, align 8
  %244 = load i64, i64* %35, align 8
  %245 = load i64, i64* %36, align 8
  %246 = load i64, i64* %37, align 8
  %247 = load i64, i64* %38, align 8
  %248 = load i64, i64* %32, align 8, !noalias !119
  %249 = load i64, i64* %33, align 8, !noalias !119
  %250 = icmp ult i64 %187, %243
  br i1 %250, label %349, label %251

251:                                              ; preds = %241
  %252 = icmp ult i64 %243, %187
  br i1 %252, label %277, label %253

253:                                              ; preds = %251
  %254 = icmp ult i64 %189, %244
  br i1 %254, label %349, label %255

255:                                              ; preds = %253
  %256 = icmp ult i64 %244, %189
  br i1 %256, label %277, label %257

257:                                              ; preds = %255
  %258 = icmp ult i64 %191, %245
  br i1 %258, label %349, label %259

259:                                              ; preds = %257
  %260 = icmp ult i64 %245, %191
  br i1 %260, label %277, label %261

261:                                              ; preds = %259
  %262 = icmp ult i64 %193, %246
  br i1 %262, label %349, label %263

263:                                              ; preds = %261
  %264 = icmp uge i64 %246, %193
  %265 = icmp ult i64 %195, %247
  %266 = and i1 %264, %265
  br i1 %266, label %349, label %267

267:                                              ; preds = %263
  %268 = icmp ult i64 %246, %193
  %269 = icmp ult i64 %247, %195
  %270 = or i1 %268, %269
  br i1 %270, label %277, label %271

271:                                              ; preds = %267
  %272 = icmp ult i64 %196, %248
  br i1 %272, label %349, label %273

273:                                              ; preds = %271
  %274 = icmp uge i64 %248, %196
  %275 = icmp ult i64 %197, %249
  %276 = and i1 %274, %275
  br i1 %276, label %349, label %277

277:                                              ; preds = %267, %259, %255, %251, %273
  %278 = icmp eq %"struct.jxl::PatchPosition"* %242, %30
  br i1 %278, label %873, label %279

279:                                              ; preds = %277, %346
  %280 = phi %"struct.jxl::PatchPosition"* [ %347, %346 ], [ %242, %277 ]
  %281 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 0
  %282 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 1
  %283 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 3, i32 0
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 3, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 3, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 3, i32 3
  %290 = load i64, i64* %289, align 8
  %291 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 3, i32 4
  %292 = load i64, i64* %291, align 8
  %293 = load i64, i64* %281, align 8, !noalias !122
  %294 = load i64, i64* %282, align 8, !noalias !122
  %295 = icmp ult i64 %187, %284
  br i1 %295, label %322, label %296

296:                                              ; preds = %279
  %297 = icmp ult i64 %284, %187
  br i1 %297, label %346, label %298

298:                                              ; preds = %296
  %299 = icmp ult i64 %189, %286
  br i1 %299, label %322, label %300

300:                                              ; preds = %298
  %301 = icmp ult i64 %286, %189
  br i1 %301, label %346, label %302

302:                                              ; preds = %300
  %303 = icmp ult i64 %191, %288
  br i1 %303, label %322, label %304

304:                                              ; preds = %302
  %305 = icmp ult i64 %288, %191
  br i1 %305, label %346, label %306

306:                                              ; preds = %304
  %307 = icmp ult i64 %193, %290
  br i1 %307, label %322, label %308

308:                                              ; preds = %306
  %309 = icmp uge i64 %290, %193
  %310 = icmp ult i64 %195, %292
  %311 = and i1 %309, %310
  br i1 %311, label %322, label %312

312:                                              ; preds = %308
  %313 = icmp ult i64 %290, %193
  %314 = icmp ult i64 %292, %195
  %315 = or i1 %313, %314
  br i1 %315, label %346, label %316

316:                                              ; preds = %312
  %317 = icmp ult i64 %196, %293
  br i1 %317, label %322, label %318

318:                                              ; preds = %316
  %319 = icmp uge i64 %293, %196
  %320 = icmp ult i64 %197, %294
  %321 = and i1 %319, %320
  br i1 %321, label %322, label %346

322:                                              ; preds = %306, %302, %298, %279, %316, %308, %318
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19)
  %323 = bitcast %"struct.jxl::PatchPosition"* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %323, i64 16, i1 false) #9
  %324 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 2
  %325 = bitcast %"class.std::__1::vector.0"* %324 to i64*
  %326 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 2, i32 0, i32 1
  %327 = bitcast %"struct.jxl::PatchBlending"** %326 to i64*
  %328 = bitcast %"class.std::__1::vector.0"* %324 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8
  %330 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %331 = bitcast %"struct.jxl::PatchBlending"** %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = bitcast %"class.std::__1::vector.0"* %324 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 24, i1 false) #9
  %334 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 0, i32 3
  %335 = bitcast %"struct.jxl::PatchReferencePosition"* %334 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %335, i64 40, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %323, i8* align 8 %39, i64 16, i1 false) #9
  %336 = load i64, i64* %41, align 8
  store i64 %336, i64* %325, align 8
  %337 = load i64, i64* %43, align 8
  store i64 %337, i64* %327, align 8
  %338 = load i64, i64* %45, align 8
  store i64 %338, i64* %331, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %335, i8* align 8 %48, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %18, i64 16, i1 false) #9
  %339 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %49, align 8
  %340 = icmp eq %"struct.jxl::PatchBlending"* %339, null
  br i1 %340, label %344, label %341

341:                                              ; preds = %322
  %342 = ptrtoint %"struct.jxl::PatchBlending"* %339 to i64
  store i64 %342, i64* %43, align 8
  %343 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %339, i64 0, i32 0
  tail call void @_ZdlPv(i8* %343) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  br label %344

344:                                              ; preds = %322, %341
  store <2 x i64> %329, <2 x i64>* %50, align 8
  store i64 %332, i64* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %19, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19)
  %345 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 1
  br label %349

346:                                              ; preds = %304, %300, %296, %312, %318
  %347 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %280, i64 1
  %348 = icmp eq %"struct.jxl::PatchPosition"* %347, %30
  br i1 %348, label %873, label %279

349:                                              ; preds = %261, %257, %253, %241, %271, %263, %273, %344
  %350 = phi %"struct.jxl::PatchPosition"* [ %345, %344 ], [ %242, %273 ], [ %242, %263 ], [ %242, %271 ], [ %242, %241 ], [ %242, %253 ], [ %242, %257 ], [ %242, %261 ]
  %351 = icmp eq %"struct.jxl::PatchPosition"* %350, %30
  br i1 %351, label %873, label %352

352:                                              ; preds = %349, %503
  %353 = phi %"struct.jxl::PatchPosition"* [ %505, %503 ], [ %350, %349 ]
  %354 = phi %"struct.jxl::PatchPosition"* [ %425, %503 ], [ %30, %349 ]
  %355 = load i64, i64* %186, align 8
  %356 = load i64, i64* %188, align 8
  %357 = load i64, i64* %190, align 8
  %358 = load i64, i64* %192, align 8
  %359 = load i64, i64* %194, align 8
  %360 = load i64, i64* %184, align 8, !noalias !125
  %361 = load i64, i64* %185, align 8, !noalias !125
  %362 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %353, i64 0, i32 3, i32 0
  %363 = load i64, i64* %362, align 8
  %364 = icmp ult i64 %355, %363
  br i1 %364, label %411, label %365

365:                                              ; preds = %352
  %366 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %353, i64 0, i32 3, i32 4
  %367 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %353, i64 0, i32 3, i32 3
  %368 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %353, i64 0, i32 3, i32 2
  %369 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %353, i64 0, i32 3, i32 1
  %370 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %353, i64 0, i32 1
  br label %371

371:                                              ; preds = %365, %413
  %372 = phi i64* [ %415, %413 ], [ %370, %365 ]
  %373 = phi i64* [ %421, %413 ], [ %366, %365 ]
  %374 = phi i64* [ %420, %413 ], [ %367, %365 ]
  %375 = phi i64* [ %419, %413 ], [ %368, %365 ]
  %376 = phi i64* [ %418, %413 ], [ %369, %365 ]
  %377 = phi i64 [ %417, %413 ], [ %363, %365 ]
  %378 = phi %"struct.jxl::PatchPosition"* [ %414, %413 ], [ %353, %365 ]
  %379 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 0, i32 0
  %380 = load i64, i64* %376, align 8
  %381 = load i64, i64* %375, align 8
  %382 = load i64, i64* %374, align 8
  %383 = load i64, i64* %373, align 8
  %384 = load i64, i64* %379, align 8, !noalias !128
  %385 = load i64, i64* %372, align 8, !noalias !128
  %386 = icmp ult i64 %377, %355
  br i1 %386, label %413, label %387

387:                                              ; preds = %371
  %388 = icmp ult i64 %356, %380
  br i1 %388, label %411, label %389

389:                                              ; preds = %387
  %390 = icmp ult i64 %380, %356
  br i1 %390, label %413, label %391

391:                                              ; preds = %389
  %392 = icmp ult i64 %357, %381
  br i1 %392, label %411, label %393

393:                                              ; preds = %391
  %394 = icmp ult i64 %381, %357
  br i1 %394, label %413, label %395

395:                                              ; preds = %393
  %396 = icmp ult i64 %358, %382
  br i1 %396, label %411, label %397

397:                                              ; preds = %395
  %398 = icmp uge i64 %382, %358
  %399 = icmp ult i64 %359, %383
  %400 = and i1 %398, %399
  br i1 %400, label %411, label %401

401:                                              ; preds = %397
  %402 = icmp ult i64 %382, %358
  %403 = icmp ult i64 %383, %359
  %404 = or i1 %402, %403
  br i1 %404, label %413, label %405

405:                                              ; preds = %401
  %406 = icmp ult i64 %360, %384
  br i1 %406, label %411, label %407

407:                                              ; preds = %405
  %408 = icmp uge i64 %384, %360
  %409 = icmp ult i64 %361, %385
  %410 = and i1 %408, %409
  br i1 %410, label %411, label %413

411:                                              ; preds = %407, %413, %387, %391, %395, %397, %405, %352
  %412 = phi %"struct.jxl::PatchPosition"* [ %353, %352 ], [ %414, %413 ], [ %378, %387 ], [ %378, %391 ], [ %378, %395 ], [ %378, %397 ], [ %378, %405 ], [ %378, %407 ]
  br label %423

413:                                              ; preds = %393, %389, %371, %401, %407
  %414 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 1
  %415 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 1, i32 1
  %416 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 1, i32 3, i32 0
  %417 = load i64, i64* %416, align 8
  %418 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 1, i32 3, i32 1
  %419 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 1, i32 3, i32 2
  %420 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 1, i32 3, i32 3
  %421 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %378, i64 1, i32 3, i32 4
  %422 = icmp ult i64 %355, %417
  br i1 %422, label %411, label %371

423:                                              ; preds = %463, %411
  %424 = phi %"struct.jxl::PatchPosition"* [ %354, %411 ], [ %425, %463 ]
  %425 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1
  %426 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %425, i64 0, i32 0
  %427 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 1
  %428 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 3, i32 0
  %429 = load i64, i64* %428, align 8
  %430 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 3, i32 1
  %431 = load i64, i64* %430, align 8
  %432 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 3, i32 2
  %433 = load i64, i64* %432, align 8
  %434 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 3, i32 3
  %435 = load i64, i64* %434, align 8
  %436 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 3, i32 4
  %437 = load i64, i64* %436, align 8
  %438 = load i64, i64* %426, align 8, !noalias !131
  %439 = load i64, i64* %427, align 8, !noalias !131
  %440 = icmp ult i64 %355, %429
  br i1 %440, label %463, label %441

441:                                              ; preds = %423
  %442 = icmp ult i64 %429, %355
  br i1 %442, label %468, label %443

443:                                              ; preds = %441
  %444 = icmp ult i64 %356, %431
  br i1 %444, label %463, label %445

445:                                              ; preds = %443
  %446 = icmp ult i64 %431, %356
  br i1 %446, label %468, label %447

447:                                              ; preds = %445
  %448 = icmp ult i64 %357, %433
  br i1 %448, label %463, label %449

449:                                              ; preds = %447
  %450 = icmp ult i64 %433, %357
  br i1 %450, label %468, label %451

451:                                              ; preds = %449
  %452 = icmp ult i64 %358, %435
  br i1 %452, label %463, label %453

453:                                              ; preds = %451
  %454 = icmp uge i64 %435, %358
  %455 = icmp ult i64 %359, %437
  %456 = and i1 %454, %455
  br i1 %456, label %463, label %457

457:                                              ; preds = %453
  %458 = icmp ult i64 %435, %358
  %459 = icmp ult i64 %437, %359
  %460 = or i1 %458, %459
  br i1 %460, label %468, label %461

461:                                              ; preds = %457
  %462 = icmp ult i64 %360, %438
  br i1 %462, label %463, label %464

463:                                              ; preds = %461, %453, %451, %447, %443, %423, %464
  br label %423

464:                                              ; preds = %461
  %465 = icmp uge i64 %438, %360
  %466 = icmp ult i64 %361, %439
  %467 = and i1 %465, %466
  br i1 %467, label %463, label %468

468:                                              ; preds = %449, %445, %441, %457, %464
  %469 = icmp ult %"struct.jxl::PatchPosition"* %412, %425
  br i1 %469, label %470, label %54

470:                                              ; preds = %468
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21)
  %471 = bitcast %"struct.jxl::PatchPosition"* %412 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %471, i64 16, i1 false) #9
  %472 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %412, i64 0, i32 2
  %473 = bitcast %"class.std::__1::vector.0"* %472 to i64*
  %474 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %412, i64 0, i32 2, i32 0, i32 1
  %475 = bitcast %"struct.jxl::PatchBlending"** %474 to i64*
  %476 = bitcast %"class.std::__1::vector.0"* %472 to <2 x i64>*
  %477 = load <2 x i64>, <2 x i64>* %476, align 8
  %478 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %412, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %479 = bitcast %"struct.jxl::PatchBlending"** %478 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = bitcast %"class.std::__1::vector.0"* %472 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %481, i8 0, i64 24, i1 false) #9
  %482 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %412, i64 0, i32 3
  %483 = bitcast %"struct.jxl::PatchReferencePosition"* %482 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %483, i64 40, i1 false) #9
  %484 = bitcast %"struct.jxl::PatchPosition"* %425 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* align 8 %484, i64 16, i1 false) #9
  %485 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 2
  %486 = bitcast %"class.std::__1::vector.0"* %485 to i64*
  %487 = load i64, i64* %486, align 8
  store i64 %487, i64* %473, align 8
  %488 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 2, i32 0, i32 1
  %489 = bitcast %"struct.jxl::PatchBlending"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  store i64 %490, i64* %475, align 8
  %491 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %492 = bitcast %"struct.jxl::PatchBlending"** %491 to i64*
  %493 = load i64, i64* %492, align 8
  store i64 %493, i64* %479, align 8
  %494 = bitcast %"class.std::__1::vector.0"* %485 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %494, i8 0, i64 24, i1 false) #9
  %495 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %424, i64 -1, i32 3
  %496 = bitcast %"struct.jxl::PatchReferencePosition"* %495 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %483, i8* align 8 %496, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %484, i8* nonnull align 8 %20, i64 16, i1 false) #9
  %497 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %485, i64 0, i32 0, i32 0
  %498 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %497, align 8
  %499 = icmp eq %"struct.jxl::PatchBlending"* %498, null
  br i1 %499, label %503, label %500

500:                                              ; preds = %470
  %501 = ptrtoint %"struct.jxl::PatchBlending"* %498 to i64
  store i64 %501, i64* %489, align 8
  %502 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %498, i64 0, i32 0
  tail call void @_ZdlPv(i8* %502) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %494, i8 0, i64 24, i1 false) #9
  br label %503

503:                                              ; preds = %470, %500
  %504 = bitcast %"class.std::__1::vector.0"* %485 to <2 x i64>*
  store <2 x i64> %477, <2 x i64>* %504, align 8
  store i64 %480, i64* %492, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %496, i8* nonnull align 8 %21, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21)
  %505 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %412, i64 1
  br label %352

506:                                              ; preds = %239, %550
  %507 = phi %"struct.jxl::PatchPosition"* [ %551, %550 ], [ %31, %239 ]
  %508 = phi %"struct.jxl::PatchPosition"* [ %507, %550 ], [ %30, %239 ]
  %509 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %507, i64 0, i32 0
  %510 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 1
  %511 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 3, i32 0
  %512 = load i64, i64* %511, align 8
  %513 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 3, i32 1
  %514 = load i64, i64* %513, align 8
  %515 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 3, i32 2
  %516 = load i64, i64* %515, align 8
  %517 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 3, i32 3
  %518 = load i64, i64* %517, align 8
  %519 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 3, i32 4
  %520 = load i64, i64* %519, align 8
  %521 = load i64, i64* %509, align 8, !noalias !134
  %522 = load i64, i64* %510, align 8, !noalias !134
  %523 = icmp ult i64 %512, %201
  br i1 %523, label %553, label %524

524:                                              ; preds = %506
  %525 = icmp ult i64 %201, %512
  br i1 %525, label %550, label %526

526:                                              ; preds = %524
  %527 = icmp ult i64 %514, %203
  br i1 %527, label %553, label %528

528:                                              ; preds = %526
  %529 = icmp ult i64 %203, %514
  br i1 %529, label %550, label %530

530:                                              ; preds = %528
  %531 = icmp ult i64 %516, %205
  br i1 %531, label %553, label %532

532:                                              ; preds = %530
  %533 = icmp ult i64 %205, %516
  br i1 %533, label %550, label %534

534:                                              ; preds = %532
  %535 = icmp ult i64 %518, %207
  br i1 %535, label %553, label %536

536:                                              ; preds = %534
  %537 = icmp uge i64 %207, %518
  %538 = icmp ult i64 %520, %209
  %539 = and i1 %537, %538
  br i1 %539, label %553, label %540

540:                                              ; preds = %536
  %541 = icmp ult i64 %207, %518
  %542 = icmp ult i64 %209, %520
  %543 = or i1 %541, %542
  br i1 %543, label %550, label %544

544:                                              ; preds = %540
  %545 = icmp ult i64 %521, %210
  br i1 %545, label %553, label %546

546:                                              ; preds = %544
  %547 = icmp uge i64 %210, %521
  %548 = icmp ult i64 %522, %211
  %549 = and i1 %547, %548
  br i1 %549, label %553, label %550

550:                                              ; preds = %540, %532, %528, %524, %546
  %551 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %507, i64 -1
  %552 = icmp eq %"struct.jxl::PatchPosition"* %55, %551
  br i1 %552, label %241, label %506

553:                                              ; preds = %534, %530, %526, %506, %544, %536, %546
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17)
  %554 = bitcast %"struct.jxl::PatchPosition"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %554, i64 16, i1 false) #9
  %555 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 2
  %556 = bitcast %"class.std::__1::vector.0"* %555 to i64*
  %557 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 2, i32 0, i32 1
  %558 = bitcast %"struct.jxl::PatchBlending"** %557 to i64*
  %559 = bitcast %"class.std::__1::vector.0"* %555 to <2 x i64>*
  %560 = load <2 x i64>, <2 x i64>* %559, align 8
  %561 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %562 = bitcast %"struct.jxl::PatchBlending"** %561 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = bitcast %"class.std::__1::vector.0"* %555 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %564, i8 0, i64 24, i1 false) #9
  %565 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 0, i32 3
  %566 = bitcast %"struct.jxl::PatchReferencePosition"* %565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %566, i64 40, i1 false) #9
  %567 = bitcast %"struct.jxl::PatchPosition"* %507 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %554, i8* align 8 %567, i64 16, i1 false) #9
  %568 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 2
  %569 = bitcast %"class.std::__1::vector.0"* %568 to i64*
  %570 = load i64, i64* %569, align 8
  store i64 %570, i64* %556, align 8
  %571 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 2, i32 0, i32 1
  %572 = bitcast %"struct.jxl::PatchBlending"** %571 to i64*
  %573 = load i64, i64* %572, align 8
  store i64 %573, i64* %558, align 8
  %574 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %575 = bitcast %"struct.jxl::PatchBlending"** %574 to i64*
  %576 = load i64, i64* %575, align 8
  store i64 %576, i64* %562, align 8
  %577 = bitcast %"class.std::__1::vector.0"* %568 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %577, i8 0, i64 24, i1 false) #9
  %578 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %508, i64 -1, i32 3
  %579 = bitcast %"struct.jxl::PatchReferencePosition"* %578 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %566, i8* align 8 %579, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %567, i8* nonnull align 8 %16, i64 16, i1 false) #9
  %580 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %568, i64 0, i32 0, i32 0
  %581 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %580, align 8
  %582 = icmp eq %"struct.jxl::PatchBlending"* %581, null
  br i1 %582, label %586, label %583

583:                                              ; preds = %553
  %584 = ptrtoint %"struct.jxl::PatchBlending"* %581 to i64
  store i64 %584, i64* %572, align 8
  %585 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %581, i64 0, i32 0
  tail call void @_ZdlPv(i8* %585) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %577, i8 0, i64 24, i1 false) #9
  br label %586

586:                                              ; preds = %553, %583
  %587 = bitcast %"class.std::__1::vector.0"* %568 to <2 x i64>*
  store <2 x i64> %560, <2 x i64>* %587, align 8
  store i64 %563, i64* %575, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %579, i8* nonnull align 8 %17, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17)
  %588 = add i32 %183, 1
  br label %589

589:                                              ; preds = %223, %219, %215, %182, %233, %225, %235, %586
  %590 = phi i32 [ %588, %586 ], [ %183, %235 ], [ %183, %225 ], [ %183, %233 ], [ %183, %182 ], [ %183, %215 ], [ %183, %219 ], [ %183, %223 ]
  %591 = phi %"struct.jxl::PatchPosition"* [ %507, %586 ], [ %30, %235 ], [ %30, %225 ], [ %30, %233 ], [ %30, %182 ], [ %30, %215 ], [ %30, %219 ], [ %30, %223 ]
  %592 = ptrtoint %"struct.jxl::PatchPosition"* %55 to i64
  %593 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %55, i64 1
  %594 = icmp ult %"struct.jxl::PatchPosition"* %593, %591
  br i1 %594, label %595, label %753

595:                                              ; preds = %589, %747
  %596 = phi %"struct.jxl::PatchPosition"* [ %751, %747 ], [ %174, %589 ]
  %597 = phi i32 [ %749, %747 ], [ %590, %589 ]
  %598 = phi %"struct.jxl::PatchPosition"* [ %752, %747 ], [ %593, %589 ]
  %599 = phi %"struct.jxl::PatchPosition"* [ %712, %747 ], [ %591, %589 ]
  %600 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %596, i64 0, i32 0
  %601 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %596, i64 0, i32 1
  %602 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %596, i64 0, i32 3, i32 0
  %603 = load i64, i64* %602, align 8
  %604 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %596, i64 0, i32 3, i32 1
  %605 = load i64, i64* %604, align 8
  %606 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %596, i64 0, i32 3, i32 2
  %607 = load i64, i64* %606, align 8
  %608 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %596, i64 0, i32 3, i32 3
  %609 = load i64, i64* %608, align 8
  %610 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %596, i64 0, i32 3, i32 4
  %611 = load i64, i64* %610, align 8
  %612 = load i64, i64* %600, align 8, !noalias !137
  %613 = load i64, i64* %601, align 8, !noalias !137
  br label %614

614:                                              ; preds = %662, %595
  %615 = phi %"struct.jxl::PatchPosition"* [ %598, %595 ], [ %663, %662 ]
  %616 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 0
  %617 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 1
  %618 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 3, i32 0
  %619 = load i64, i64* %618, align 8
  %620 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 3, i32 1
  %621 = load i64, i64* %620, align 8
  %622 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 3, i32 2
  %623 = load i64, i64* %622, align 8
  %624 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 3, i32 3
  %625 = load i64, i64* %624, align 8
  %626 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 3, i32 4
  %627 = load i64, i64* %626, align 8
  %628 = load i64, i64* %616, align 8, !noalias !140
  %629 = load i64, i64* %617, align 8, !noalias !140
  %630 = icmp ult i64 %619, %603
  br i1 %630, label %662, label %631

631:                                              ; preds = %614
  %632 = icmp ult i64 %603, %619
  br i1 %632, label %657, label %633

633:                                              ; preds = %631
  %634 = icmp ult i64 %621, %605
  br i1 %634, label %662, label %635

635:                                              ; preds = %633
  %636 = icmp ult i64 %605, %621
  br i1 %636, label %657, label %637

637:                                              ; preds = %635
  %638 = icmp ult i64 %623, %607
  br i1 %638, label %662, label %639

639:                                              ; preds = %637
  %640 = icmp ult i64 %607, %623
  br i1 %640, label %657, label %641

641:                                              ; preds = %639
  %642 = icmp ult i64 %625, %609
  br i1 %642, label %662, label %643

643:                                              ; preds = %641
  %644 = icmp uge i64 %609, %625
  %645 = icmp ult i64 %627, %611
  %646 = and i1 %644, %645
  br i1 %646, label %662, label %647

647:                                              ; preds = %643
  %648 = icmp ult i64 %609, %625
  %649 = icmp ult i64 %611, %627
  %650 = or i1 %648, %649
  br i1 %650, label %657, label %651

651:                                              ; preds = %647
  %652 = icmp ult i64 %628, %612
  br i1 %652, label %662, label %653

653:                                              ; preds = %651
  %654 = icmp uge i64 %612, %628
  %655 = icmp ult i64 %629, %613
  %656 = and i1 %654, %655
  br i1 %656, label %662, label %657

657:                                              ; preds = %653, %647, %639, %635, %631
  %658 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %599, i64 -1
  %659 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %599, i64 -1, i32 3, i32 0
  %660 = load i64, i64* %659, align 8
  %661 = icmp ult i64 %660, %603
  br i1 %661, label %710, label %664

662:                                              ; preds = %641, %637, %633, %614, %651, %643, %653
  %663 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 1
  br label %614

664:                                              ; preds = %657, %705
  %665 = phi %"struct.jxl::PatchPosition"* [ %667, %705 ], [ %599, %657 ]
  %666 = phi i64 [ %708, %705 ], [ %660, %657 ]
  %667 = phi %"struct.jxl::PatchPosition"* [ %706, %705 ], [ %658, %657 ]
  %668 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %665, i64 -1, i32 3, i32 1
  %669 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %665, i64 -1, i32 3, i32 2
  %670 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %665, i64 -1, i32 3, i32 3
  %671 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %665, i64 -1, i32 3, i32 4
  %672 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %665, i64 -1, i32 0
  %673 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %665, i64 -1, i32 1
  %674 = load i64, i64* %668, align 8
  %675 = load i64, i64* %669, align 8
  %676 = load i64, i64* %670, align 8
  %677 = load i64, i64* %671, align 8
  %678 = load i64, i64* %672, align 8, !noalias !143
  %679 = load i64, i64* %673, align 8, !noalias !143
  %680 = icmp ult i64 %603, %666
  br i1 %680, label %705, label %681

681:                                              ; preds = %664
  %682 = icmp ult i64 %674, %605
  br i1 %682, label %710, label %683

683:                                              ; preds = %681
  %684 = icmp ult i64 %605, %674
  br i1 %684, label %705, label %685

685:                                              ; preds = %683
  %686 = icmp ult i64 %675, %607
  br i1 %686, label %710, label %687

687:                                              ; preds = %685
  %688 = icmp ult i64 %607, %675
  br i1 %688, label %705, label %689

689:                                              ; preds = %687
  %690 = icmp ult i64 %676, %609
  br i1 %690, label %710, label %691

691:                                              ; preds = %689
  %692 = icmp uge i64 %609, %676
  %693 = icmp ult i64 %677, %611
  %694 = and i1 %692, %693
  br i1 %694, label %710, label %695

695:                                              ; preds = %691
  %696 = icmp ult i64 %609, %676
  %697 = icmp ult i64 %611, %677
  %698 = or i1 %696, %697
  br i1 %698, label %705, label %699

699:                                              ; preds = %695
  %700 = icmp ult i64 %678, %612
  br i1 %700, label %710, label %701

701:                                              ; preds = %699
  %702 = icmp uge i64 %612, %678
  %703 = icmp ult i64 %679, %613
  %704 = and i1 %702, %703
  br i1 %704, label %710, label %705

705:                                              ; preds = %695, %687, %683, %664, %701
  %706 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %667, i64 -1
  %707 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %667, i64 -1, i32 3, i32 0
  %708 = load i64, i64* %707, align 8
  %709 = icmp ult i64 %708, %603
  br i1 %709, label %710, label %664

710:                                              ; preds = %701, %691, %699, %705, %681, %685, %689, %657
  %711 = phi %"struct.jxl::PatchPosition"* [ %599, %657 ], [ %665, %689 ], [ %665, %685 ], [ %665, %681 ], [ %667, %705 ], [ %665, %699 ], [ %665, %691 ], [ %665, %701 ]
  %712 = phi %"struct.jxl::PatchPosition"* [ %658, %657 ], [ %667, %689 ], [ %667, %685 ], [ %667, %681 ], [ %706, %705 ], [ %667, %699 ], [ %667, %691 ], [ %667, %701 ]
  %713 = icmp ugt %"struct.jxl::PatchPosition"* %615, %712
  br i1 %713, label %753, label %714

714:                                              ; preds = %710
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23)
  %715 = bitcast %"struct.jxl::PatchPosition"* %615 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %715, i64 16, i1 false) #9
  %716 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 2
  %717 = bitcast %"class.std::__1::vector.0"* %716 to i64*
  %718 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 2, i32 0, i32 1
  %719 = bitcast %"struct.jxl::PatchBlending"** %718 to i64*
  %720 = bitcast %"class.std::__1::vector.0"* %716 to <2 x i64>*
  %721 = load <2 x i64>, <2 x i64>* %720, align 8
  %722 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %723 = bitcast %"struct.jxl::PatchBlending"** %722 to i64*
  %724 = load i64, i64* %723, align 8
  %725 = bitcast %"class.std::__1::vector.0"* %716 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %725, i8 0, i64 24, i1 false) #9
  %726 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 0, i32 3
  %727 = bitcast %"struct.jxl::PatchReferencePosition"* %726 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %727, i64 40, i1 false) #9
  %728 = bitcast %"struct.jxl::PatchPosition"* %712 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %715, i8* align 8 %728, i64 16, i1 false) #9
  %729 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %711, i64 -1, i32 2
  %730 = bitcast %"class.std::__1::vector.0"* %729 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %717, align 8
  %732 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %711, i64 -1, i32 2, i32 0, i32 1
  %733 = bitcast %"struct.jxl::PatchBlending"** %732 to i64*
  %734 = load i64, i64* %733, align 8
  store i64 %734, i64* %719, align 8
  %735 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %711, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %736 = bitcast %"struct.jxl::PatchBlending"** %735 to i64*
  %737 = load i64, i64* %736, align 8
  store i64 %737, i64* %723, align 8
  %738 = bitcast %"class.std::__1::vector.0"* %729 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %738, i8 0, i64 24, i1 false) #9
  %739 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %711, i64 -1, i32 3
  %740 = bitcast %"struct.jxl::PatchReferencePosition"* %739 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %727, i8* align 8 %740, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %728, i8* nonnull align 8 %22, i64 16, i1 false) #9
  %741 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %729, i64 0, i32 0, i32 0
  %742 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %741, align 8
  %743 = icmp eq %"struct.jxl::PatchBlending"* %742, null
  br i1 %743, label %747, label %744

744:                                              ; preds = %714
  %745 = ptrtoint %"struct.jxl::PatchBlending"* %742 to i64
  store i64 %745, i64* %733, align 8
  %746 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %742, i64 0, i32 0
  tail call void @_ZdlPv(i8* %746) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %738, i8 0, i64 24, i1 false) #9
  br label %747

747:                                              ; preds = %714, %744
  %748 = bitcast %"class.std::__1::vector.0"* %729 to <2 x i64>*
  store <2 x i64> %721, <2 x i64>* %748, align 8
  store i64 %724, i64* %736, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %740, i8* nonnull align 8 %23, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23)
  %749 = add i32 %597, 1
  %750 = icmp eq %"struct.jxl::PatchPosition"* %596, %615
  %751 = select i1 %750, %"struct.jxl::PatchPosition"* %712, %"struct.jxl::PatchPosition"* %596
  %752 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %615, i64 1
  br label %595

753:                                              ; preds = %710, %589
  %754 = phi %"struct.jxl::PatchPosition"* [ %174, %589 ], [ %596, %710 ]
  %755 = phi i32 [ %590, %589 ], [ %597, %710 ]
  %756 = phi %"struct.jxl::PatchPosition"* [ %593, %589 ], [ %615, %710 ]
  %757 = icmp eq %"struct.jxl::PatchPosition"* %756, %754
  br i1 %757, label %850, label %758

758:                                              ; preds = %753
  %759 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 0
  %760 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 1
  %761 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 3, i32 0
  %762 = load i64, i64* %761, align 8
  %763 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 3, i32 1
  %764 = load i64, i64* %763, align 8
  %765 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 3, i32 2
  %766 = load i64, i64* %765, align 8
  %767 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 3, i32 3
  %768 = load i64, i64* %767, align 8
  %769 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 3, i32 4
  %770 = load i64, i64* %769, align 8
  %771 = load i64, i64* %759, align 8, !noalias !146
  %772 = load i64, i64* %760, align 8, !noalias !146
  %773 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 0
  %774 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 1
  %775 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 3, i32 0
  %776 = load i64, i64* %775, align 8
  %777 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 3, i32 1
  %778 = load i64, i64* %777, align 8
  %779 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 3, i32 2
  %780 = load i64, i64* %779, align 8
  %781 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 3, i32 3
  %782 = load i64, i64* %781, align 8
  %783 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 3, i32 4
  %784 = load i64, i64* %783, align 8
  %785 = load i64, i64* %773, align 8, !noalias !149
  %786 = load i64, i64* %774, align 8, !noalias !149
  %787 = icmp ult i64 %762, %776
  br i1 %787, label %814, label %788

788:                                              ; preds = %758
  %789 = icmp ult i64 %776, %762
  br i1 %789, label %850, label %790

790:                                              ; preds = %788
  %791 = icmp ult i64 %764, %778
  br i1 %791, label %814, label %792

792:                                              ; preds = %790
  %793 = icmp ult i64 %778, %764
  br i1 %793, label %850, label %794

794:                                              ; preds = %792
  %795 = icmp ult i64 %766, %780
  br i1 %795, label %814, label %796

796:                                              ; preds = %794
  %797 = icmp ult i64 %780, %766
  br i1 %797, label %850, label %798

798:                                              ; preds = %796
  %799 = icmp ult i64 %768, %782
  br i1 %799, label %814, label %800

800:                                              ; preds = %798
  %801 = icmp uge i64 %782, %768
  %802 = icmp ult i64 %770, %784
  %803 = and i1 %801, %802
  br i1 %803, label %814, label %804

804:                                              ; preds = %800
  %805 = icmp ult i64 %782, %768
  %806 = icmp ult i64 %784, %770
  %807 = or i1 %805, %806
  br i1 %807, label %850, label %808

808:                                              ; preds = %804
  %809 = icmp ult i64 %771, %785
  br i1 %809, label %814, label %810

810:                                              ; preds = %808
  %811 = icmp uge i64 %785, %771
  %812 = icmp ult i64 %772, %786
  %813 = and i1 %811, %812
  br i1 %813, label %814, label %850

814:                                              ; preds = %798, %794, %790, %758, %808, %800, %810
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25)
  %815 = bitcast %"struct.jxl::PatchPosition"* %756 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %815, i64 16, i1 false) #9
  %816 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 2
  %817 = bitcast %"class.std::__1::vector.0"* %816 to i64*
  %818 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 2, i32 0, i32 1
  %819 = bitcast %"struct.jxl::PatchBlending"** %818 to i64*
  %820 = bitcast %"class.std::__1::vector.0"* %816 to <2 x i64>*
  %821 = load <2 x i64>, <2 x i64>* %820, align 8
  %822 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %823 = bitcast %"struct.jxl::PatchBlending"** %822 to i64*
  %824 = load i64, i64* %823, align 8
  %825 = bitcast %"class.std::__1::vector.0"* %816 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %825, i8 0, i64 24, i1 false) #9
  %826 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 0, i32 3
  %827 = bitcast %"struct.jxl::PatchReferencePosition"* %826 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %827, i64 40, i1 false) #9
  %828 = bitcast %"struct.jxl::PatchPosition"* %754 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %815, i8* align 8 %828, i64 16, i1 false) #9
  %829 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 2
  %830 = bitcast %"class.std::__1::vector.0"* %829 to i64*
  %831 = load i64, i64* %830, align 8
  store i64 %831, i64* %817, align 8
  %832 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 2, i32 0, i32 1
  %833 = bitcast %"struct.jxl::PatchBlending"** %832 to i64*
  %834 = load i64, i64* %833, align 8
  store i64 %834, i64* %819, align 8
  %835 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %836 = bitcast %"struct.jxl::PatchBlending"** %835 to i64*
  %837 = load i64, i64* %836, align 8
  store i64 %837, i64* %823, align 8
  %838 = bitcast %"class.std::__1::vector.0"* %829 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %838, i8 0, i64 24, i1 false) #9
  %839 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %754, i64 0, i32 3
  %840 = bitcast %"struct.jxl::PatchReferencePosition"* %839 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %827, i8* align 8 %840, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %828, i8* nonnull align 8 %24, i64 16, i1 false) #9
  %841 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %829, i64 0, i32 0, i32 0
  %842 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %841, align 8
  %843 = icmp eq %"struct.jxl::PatchBlending"* %842, null
  br i1 %843, label %847, label %844

844:                                              ; preds = %814
  %845 = ptrtoint %"struct.jxl::PatchBlending"* %842 to i64
  store i64 %845, i64* %833, align 8
  %846 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %842, i64 0, i32 0
  tail call void @_ZdlPv(i8* %846) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %838, i8 0, i64 24, i1 false) #9
  br label %847

847:                                              ; preds = %814, %844
  %848 = bitcast %"class.std::__1::vector.0"* %829 to <2 x i64>*
  store <2 x i64> %821, <2 x i64>* %848, align 8
  store i64 %824, i64* %836, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %840, i8* nonnull align 8 %25, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25)
  %849 = add i32 %755, 1
  br label %850

850:                                              ; preds = %796, %792, %788, %804, %753, %847, %810
  %851 = phi i32 [ %849, %847 ], [ %755, %810 ], [ %755, %753 ], [ %755, %804 ], [ %755, %788 ], [ %755, %792 ], [ %755, %796 ]
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %853, label %860

853:                                              ; preds = %850
  %854 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEbT0_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %756, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  %855 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 1
  %856 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEbT0_S7_T_(%"struct.jxl::PatchPosition"* %855, %"struct.jxl::PatchPosition"* %27, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br i1 %856, label %857, label %859

857:                                              ; preds = %853
  br i1 %854, label %873, label %858

858:                                              ; preds = %857, %871
  br label %26

859:                                              ; preds = %853
  br i1 %854, label %869, label %860

860:                                              ; preds = %859, %850
  %861 = ptrtoint %"struct.jxl::PatchPosition"* %756 to i64
  %862 = sub i64 %861, %592
  %863 = sdiv exact i64 %862, 80
  %864 = sub i64 %51, %861
  %865 = sdiv exact i64 %864, 80
  %866 = icmp slt i64 %863, %865
  br i1 %866, label %867, label %871

867:                                              ; preds = %860
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_(%"struct.jxl::PatchPosition"* %55, %"struct.jxl::PatchPosition"* %756, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  %868 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 1
  br label %869

869:                                              ; preds = %867, %859
  %870 = phi %"struct.jxl::PatchPosition"* [ %855, %859 ], [ %868, %867 ]
  br label %52

871:                                              ; preds = %860
  %872 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %756, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_(%"struct.jxl::PatchPosition"* %872, %"struct.jxl::PatchPosition"* %27, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %858

873:                                              ; preds = %857, %349, %54, %54, %277, %346, %98, %94, %90, %106, %112, %151, %153, %157, %162, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_(%"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.std::__1::__less.471"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %15 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %15, align 8, !noalias !152
  %28 = load i64, i64* %16, align 8, !noalias !152
  %29 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %29, align 8, !noalias !155
  %42 = load i64, i64* %30, align 8, !noalias !155
  %43 = icmp ult i64 %18, %32
  br i1 %43, label %70, label %44

44:                                               ; preds = %4
  %45 = icmp ult i64 %32, %18
  br i1 %45, label %70, label %46

46:                                               ; preds = %44
  %47 = icmp ult i64 %20, %34
  br i1 %47, label %70, label %48

48:                                               ; preds = %46
  %49 = icmp ult i64 %34, %20
  br i1 %49, label %70, label %50

50:                                               ; preds = %48
  %51 = icmp ult i64 %22, %36
  br i1 %51, label %70, label %52

52:                                               ; preds = %50
  %53 = icmp ult i64 %36, %22
  br i1 %53, label %70, label %54

54:                                               ; preds = %52
  %55 = icmp ult i64 %24, %38
  br i1 %55, label %70, label %56

56:                                               ; preds = %54
  %57 = icmp uge i64 %38, %24
  %58 = icmp ult i64 %26, %40
  %59 = and i1 %57, %58
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = icmp ult i64 %38, %24
  %62 = icmp ult i64 %40, %26
  %63 = or i1 %61, %62
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = icmp ult i64 %27, %41
  br i1 %65, label %70, label %66

66:                                               ; preds = %64
  %67 = icmp uge i64 %41, %27
  %68 = icmp ult i64 %28, %42
  %69 = and i1 %67, %68
  br label %70

70:                                               ; preds = %4, %44, %46, %48, %50, %52, %54, %56, %60, %64, %66
  %71 = phi i1 [ %69, %66 ], [ true, %56 ], [ true, %64 ], [ true, %4 ], [ true, %46 ], [ true, %50 ], [ true, %54 ], [ false, %60 ], [ false, %44 ], [ false, %48 ], [ false, %52 ]
  %72 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 0
  %73 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 4
  %83 = load i64, i64* %82, align 8
  %84 = load i64, i64* %72, align 8, !noalias !158
  %85 = load i64, i64* %73, align 8, !noalias !158
  %86 = icmp ult i64 %75, %18
  br i1 %86, label %113, label %87

87:                                               ; preds = %70
  %88 = icmp ult i64 %18, %75
  br i1 %88, label %113, label %89

89:                                               ; preds = %87
  %90 = icmp ult i64 %77, %20
  br i1 %90, label %113, label %91

91:                                               ; preds = %89
  %92 = icmp ult i64 %20, %77
  br i1 %92, label %113, label %93

93:                                               ; preds = %91
  %94 = icmp ult i64 %79, %22
  br i1 %94, label %113, label %95

95:                                               ; preds = %93
  %96 = icmp ult i64 %22, %79
  br i1 %96, label %113, label %97

97:                                               ; preds = %95
  %98 = icmp ult i64 %81, %24
  br i1 %98, label %113, label %99

99:                                               ; preds = %97
  %100 = icmp uge i64 %24, %81
  %101 = icmp ult i64 %83, %26
  %102 = and i1 %100, %101
  br i1 %102, label %113, label %103

103:                                              ; preds = %99
  %104 = icmp ult i64 %24, %81
  %105 = icmp ult i64 %26, %83
  %106 = or i1 %104, %105
  br i1 %106, label %113, label %107

107:                                              ; preds = %103
  %108 = icmp ult i64 %84, %27
  br i1 %108, label %113, label %109

109:                                              ; preds = %107
  %110 = icmp uge i64 %27, %84
  %111 = icmp ult i64 %85, %28
  %112 = and i1 %110, %111
  br label %113

113:                                              ; preds = %70, %87, %89, %91, %93, %95, %97, %99, %103, %107, %109
  %114 = phi i1 [ %112, %109 ], [ true, %99 ], [ true, %107 ], [ true, %70 ], [ true, %89 ], [ true, %93 ], [ true, %97 ], [ false, %103 ], [ false, %87 ], [ false, %91 ], [ false, %95 ]
  br i1 %71, label %221, label %115

115:                                              ; preds = %113
  br i1 %114, label %116, label %359

116:                                              ; preds = %115
  %117 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117)
  %118 = bitcast %"struct.jxl::PatchReferencePosition"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %118)
  %119 = bitcast %"struct.jxl::PatchPosition"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 %119, i64 16, i1 false) #9
  %120 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2
  %121 = bitcast %"class.std::__1::vector.0"* %120 to i64*
  %122 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 1
  %123 = bitcast %"struct.jxl::PatchBlending"** %122 to i64*
  %124 = bitcast %"class.std::__1::vector.0"* %120 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8
  %126 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %127 = bitcast %"struct.jxl::PatchBlending"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector.0"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #9
  %130 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3
  %131 = bitcast %"struct.jxl::PatchReferencePosition"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 8 %131, i64 40, i1 false) #9
  %132 = bitcast %"struct.jxl::PatchPosition"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %132, i64 16, i1 false) #9
  %133 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2
  %134 = bitcast %"class.std::__1::vector.0"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %121, align 8
  %136 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 1
  %137 = bitcast %"struct.jxl::PatchBlending"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %123, align 8
  %139 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"struct.jxl::PatchBlending"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %127, align 8
  %142 = bitcast %"class.std::__1::vector.0"* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #9
  %143 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3
  %144 = bitcast %"struct.jxl::PatchReferencePosition"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %144, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* nonnull align 8 %117, i64 16, i1 false) #9
  %145 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %133, i64 0, i32 0, i32 0
  %146 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %145, align 8
  %147 = icmp eq %"struct.jxl::PatchBlending"* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %116
  %149 = ptrtoint %"struct.jxl::PatchBlending"* %146 to i64
  store i64 %149, i64* %137, align 8
  %150 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %146, i64 0, i32 0
  tail call void @_ZdlPv(i8* %150) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #9
  br label %151

151:                                              ; preds = %116, %148
  %152 = bitcast %"class.std::__1::vector.0"* %133 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %152, align 8
  store i64 %128, i64* %140, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* nonnull align 8 %118, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %118)
  %153 = load i64, i64* %17, align 8
  %154 = load i64, i64* %19, align 8
  %155 = load i64, i64* %21, align 8
  %156 = load i64, i64* %23, align 8
  %157 = load i64, i64* %25, align 8
  %158 = load i64, i64* %15, align 8, !noalias !161
  %159 = load i64, i64* %16, align 8, !noalias !161
  %160 = load i64, i64* %31, align 8
  %161 = load i64, i64* %33, align 8
  %162 = load i64, i64* %35, align 8
  %163 = load i64, i64* %37, align 8
  %164 = load i64, i64* %39, align 8
  %165 = load i64, i64* %29, align 8, !noalias !164
  %166 = load i64, i64* %30, align 8, !noalias !164
  %167 = icmp ult i64 %153, %160
  br i1 %167, label %194, label %168

168:                                              ; preds = %151
  %169 = icmp ult i64 %160, %153
  br i1 %169, label %359, label %170

170:                                              ; preds = %168
  %171 = icmp ult i64 %154, %161
  br i1 %171, label %194, label %172

172:                                              ; preds = %170
  %173 = icmp ult i64 %161, %154
  br i1 %173, label %359, label %174

174:                                              ; preds = %172
  %175 = icmp ult i64 %155, %162
  br i1 %175, label %194, label %176

176:                                              ; preds = %174
  %177 = icmp ult i64 %162, %155
  br i1 %177, label %359, label %178

178:                                              ; preds = %176
  %179 = icmp ult i64 %156, %163
  br i1 %179, label %194, label %180

180:                                              ; preds = %178
  %181 = icmp uge i64 %163, %156
  %182 = icmp ult i64 %157, %164
  %183 = and i1 %181, %182
  br i1 %183, label %194, label %184

184:                                              ; preds = %180
  %185 = icmp ult i64 %163, %156
  %186 = icmp ult i64 %164, %157
  %187 = or i1 %185, %186
  br i1 %187, label %359, label %188

188:                                              ; preds = %184
  %189 = icmp ult i64 %158, %165
  br i1 %189, label %194, label %190

190:                                              ; preds = %188
  %191 = icmp uge i64 %165, %158
  %192 = icmp ult i64 %159, %166
  %193 = and i1 %191, %192
  br i1 %193, label %194, label %359

194:                                              ; preds = %178, %174, %170, %151, %188, %180, %190
  %195 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195)
  %196 = bitcast %"struct.jxl::PatchReferencePosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %196)
  %197 = bitcast %"struct.jxl::PatchPosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %195, i8* align 8 %197, i64 16, i1 false) #9
  %198 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2
  %199 = bitcast %"class.std::__1::vector.0"* %198 to i64*
  %200 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 1
  %201 = bitcast %"struct.jxl::PatchBlending"** %200 to i64*
  %202 = bitcast %"class.std::__1::vector.0"* %198 to <2 x i64>*
  %203 = load <2 x i64>, <2 x i64>* %202, align 8
  %204 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %205 = bitcast %"struct.jxl::PatchBlending"** %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.std::__1::vector.0"* %198 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 24, i1 false) #9
  %208 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3
  %209 = bitcast %"struct.jxl::PatchReferencePosition"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %196, i8* align 8 %209, i64 40, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %119, i64 16, i1 false) #9
  %210 = load i64, i64* %121, align 8
  store i64 %210, i64* %199, align 8
  %211 = load i64, i64* %123, align 8
  store i64 %211, i64* %201, align 8
  %212 = load i64, i64* %127, align 8
  store i64 %212, i64* %205, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %131, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 8 %195, i64 16, i1 false) #9
  %213 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %120, i64 0, i32 0, i32 0
  %214 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %213, align 8
  %215 = icmp eq %"struct.jxl::PatchBlending"* %214, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %194
  %217 = ptrtoint %"struct.jxl::PatchBlending"* %214 to i64
  store i64 %217, i64* %123, align 8
  %218 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %214, i64 0, i32 0
  tail call void @_ZdlPv(i8* %218) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #9
  br label %219

219:                                              ; preds = %194, %216
  %220 = bitcast %"class.std::__1::vector.0"* %120 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %220, align 8
  store i64 %206, i64* %127, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %196, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %196)
  br label %359

221:                                              ; preds = %113
  br i1 %114, label %222, label %259

222:                                              ; preds = %221
  %223 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %223)
  %224 = bitcast %"struct.jxl::PatchReferencePosition"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %224)
  %225 = bitcast %"struct.jxl::PatchPosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %223, i8* align 8 %225, i64 16, i1 false) #9
  %226 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2
  %227 = bitcast %"class.std::__1::vector.0"* %226 to i64*
  %228 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 1
  %229 = bitcast %"struct.jxl::PatchBlending"** %228 to i64*
  %230 = bitcast %"class.std::__1::vector.0"* %226 to <2 x i64>*
  %231 = load <2 x i64>, <2 x i64>* %230, align 8
  %232 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %233 = bitcast %"struct.jxl::PatchBlending"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.std::__1::vector.0"* %226 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 24, i1 false) #9
  %236 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3
  %237 = bitcast %"struct.jxl::PatchReferencePosition"* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %224, i8* align 8 %237, i64 40, i1 false) #9
  %238 = bitcast %"struct.jxl::PatchPosition"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %238, i64 16, i1 false) #9
  %239 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2
  %240 = bitcast %"class.std::__1::vector.0"* %239 to i64*
  %241 = load i64, i64* %240, align 8
  store i64 %241, i64* %227, align 8
  %242 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 1
  %243 = bitcast %"struct.jxl::PatchBlending"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  store i64 %244, i64* %229, align 8
  %245 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %246 = bitcast %"struct.jxl::PatchBlending"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  store i64 %247, i64* %233, align 8
  %248 = bitcast %"class.std::__1::vector.0"* %239 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 24, i1 false) #9
  %249 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3
  %250 = bitcast %"struct.jxl::PatchReferencePosition"* %249 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %250, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* nonnull align 8 %223, i64 16, i1 false) #9
  %251 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %239, i64 0, i32 0, i32 0
  %252 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %251, align 8
  %253 = icmp eq %"struct.jxl::PatchBlending"* %252, null
  br i1 %253, label %257, label %254

254:                                              ; preds = %222
  %255 = ptrtoint %"struct.jxl::PatchBlending"* %252 to i64
  store i64 %255, i64* %243, align 8
  %256 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %252, i64 0, i32 0
  tail call void @_ZdlPv(i8* %256) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 24, i1 false) #9
  br label %257

257:                                              ; preds = %222, %254
  %258 = bitcast %"class.std::__1::vector.0"* %239 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %258, align 8
  store i64 %234, i64* %246, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* nonnull align 8 %224, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %223)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %224)
  br label %359

259:                                              ; preds = %221
  %260 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %260)
  %261 = bitcast %"struct.jxl::PatchReferencePosition"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %261)
  %262 = bitcast %"struct.jxl::PatchPosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %260, i8* align 8 %262, i64 16, i1 false) #9
  %263 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2
  %264 = bitcast %"class.std::__1::vector.0"* %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 1
  %267 = bitcast %"struct.jxl::PatchBlending"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %270 = bitcast %"struct.jxl::PatchBlending"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.std::__1::vector.0"* %263 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 24, i1 false) #9
  %273 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3
  %274 = bitcast %"struct.jxl::PatchReferencePosition"* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %261, i8* align 8 %274, i64 40, i1 false) #9
  %275 = bitcast %"struct.jxl::PatchPosition"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %275, i64 16, i1 false) #9
  %276 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2
  %277 = bitcast %"class.std::__1::vector.0"* %276 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %264, align 8
  %279 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 1
  %280 = bitcast %"struct.jxl::PatchBlending"** %279 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %267, align 8
  %282 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %283 = bitcast %"struct.jxl::PatchBlending"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %270, align 8
  %285 = bitcast %"class.std::__1::vector.0"* %276 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 24, i1 false) #9
  %286 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3
  %287 = bitcast %"struct.jxl::PatchReferencePosition"* %286 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %287, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* nonnull align 8 %260, i64 16, i1 false) #9
  %288 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %276, i64 0, i32 0, i32 0
  %289 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %288, align 8
  %290 = icmp eq %"struct.jxl::PatchBlending"* %289, null
  br i1 %290, label %294, label %291

291:                                              ; preds = %259
  %292 = ptrtoint %"struct.jxl::PatchBlending"* %289 to i64
  store i64 %292, i64* %280, align 8
  %293 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %289, i64 0, i32 0
  tail call void @_ZdlPv(i8* %293) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 24, i1 false) #9
  br label %294

294:                                              ; preds = %259, %291
  store i64 %265, i64* %277, align 8
  store i64 %268, i64* %280, align 8
  store i64 %271, i64* %283, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* nonnull align 8 %261, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %260)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %261)
  %295 = load i64, i64* %74, align 8
  %296 = load i64, i64* %76, align 8
  %297 = load i64, i64* %78, align 8
  %298 = load i64, i64* %80, align 8
  %299 = load i64, i64* %82, align 8
  %300 = load i64, i64* %72, align 8, !noalias !167
  %301 = load i64, i64* %73, align 8, !noalias !167
  %302 = load i64, i64* %17, align 8
  %303 = load i64, i64* %19, align 8
  %304 = load i64, i64* %21, align 8
  %305 = load i64, i64* %23, align 8
  %306 = load i64, i64* %25, align 8
  %307 = load i64, i64* %15, align 8, !noalias !170
  %308 = load i64, i64* %16, align 8, !noalias !170
  %309 = icmp ult i64 %295, %302
  br i1 %309, label %336, label %310

310:                                              ; preds = %294
  %311 = icmp ult i64 %302, %295
  br i1 %311, label %359, label %312

312:                                              ; preds = %310
  %313 = icmp ult i64 %296, %303
  br i1 %313, label %336, label %314

314:                                              ; preds = %312
  %315 = icmp ult i64 %303, %296
  br i1 %315, label %359, label %316

316:                                              ; preds = %314
  %317 = icmp ult i64 %297, %304
  br i1 %317, label %336, label %318

318:                                              ; preds = %316
  %319 = icmp ult i64 %304, %297
  br i1 %319, label %359, label %320

320:                                              ; preds = %318
  %321 = icmp ult i64 %298, %305
  br i1 %321, label %336, label %322

322:                                              ; preds = %320
  %323 = icmp uge i64 %305, %298
  %324 = icmp ult i64 %299, %306
  %325 = and i1 %323, %324
  br i1 %325, label %336, label %326

326:                                              ; preds = %322
  %327 = icmp ult i64 %305, %298
  %328 = icmp ult i64 %306, %299
  %329 = or i1 %327, %328
  br i1 %329, label %359, label %330

330:                                              ; preds = %326
  %331 = icmp ult i64 %300, %307
  br i1 %331, label %336, label %332

332:                                              ; preds = %330
  %333 = icmp uge i64 %307, %300
  %334 = icmp ult i64 %301, %308
  %335 = and i1 %333, %334
  br i1 %335, label %336, label %359

336:                                              ; preds = %320, %316, %312, %294, %330, %322, %332
  %337 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %337)
  %338 = bitcast %"struct.jxl::PatchReferencePosition"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %337, i8* align 8 %275, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 24, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %338, i8* align 8 %287, i64 40, i1 false) #9
  %339 = bitcast %"struct.jxl::PatchPosition"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* align 8 %339, i64 16, i1 false) #9
  %340 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2
  %341 = bitcast %"class.std::__1::vector.0"* %340 to i64*
  %342 = load i64, i64* %341, align 8
  store i64 %342, i64* %277, align 8
  %343 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 1
  %344 = bitcast %"struct.jxl::PatchBlending"** %343 to i64*
  %345 = load i64, i64* %344, align 8
  store i64 %345, i64* %280, align 8
  %346 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %347 = bitcast %"struct.jxl::PatchBlending"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  store i64 %348, i64* %283, align 8
  %349 = bitcast %"class.std::__1::vector.0"* %340 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %349, i8 0, i64 24, i1 false) #9
  %350 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3
  %351 = bitcast %"struct.jxl::PatchReferencePosition"* %350 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %351, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %339, i8* nonnull align 8 %337, i64 16, i1 false) #9
  %352 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %340, i64 0, i32 0, i32 0
  %353 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %352, align 8
  %354 = icmp eq %"struct.jxl::PatchBlending"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %336
  %356 = ptrtoint %"struct.jxl::PatchBlending"* %353 to i64
  store i64 %356, i64* %344, align 8
  %357 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %353, i64 0, i32 0
  tail call void @_ZdlPv(i8* %357) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %349, i8 0, i64 24, i1 false) #9
  br label %358

358:                                              ; preds = %336, %355
  store i64 %265, i64* %341, align 8
  store i64 %268, i64* %344, align 8
  store i64 %271, i64* %347, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* nonnull align 8 %338, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %337)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338)
  br label %359

359:                                              ; preds = %318, %314, %310, %326, %176, %172, %168, %184, %332, %358, %190, %219, %115, %257
  %360 = phi i32 [ 1, %257 ], [ 0, %115 ], [ 2, %219 ], [ 1, %190 ], [ 2, %358 ], [ 1, %332 ], [ 1, %184 ], [ 1, %168 ], [ 1, %172 ], [ 1, %176 ], [ 1, %326 ], [ 1, %310 ], [ 1, %314 ], [ 1, %318 ]
  ret i32 %360
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.std::__1::__less.471"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %12 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_(%"struct.jxl::PatchPosition"* %0, %"struct.jxl::PatchPosition"* %1, %"struct.jxl::PatchPosition"* %2, %"struct.std::__1::__less.471"* dereferenceable(1) %4)
  %13 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8, !noalias !173
  %26 = load i64, i64* %14, align 8, !noalias !173
  %27 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %27, align 8, !noalias !176
  %40 = load i64, i64* %28, align 8, !noalias !176
  %41 = icmp ult i64 %16, %30
  br i1 %41, label %68, label %42

42:                                               ; preds = %5
  %43 = icmp ult i64 %30, %16
  br i1 %43, label %258, label %44

44:                                               ; preds = %42
  %45 = icmp ult i64 %18, %32
  br i1 %45, label %68, label %46

46:                                               ; preds = %44
  %47 = icmp ult i64 %32, %18
  br i1 %47, label %258, label %48

48:                                               ; preds = %46
  %49 = icmp ult i64 %20, %34
  br i1 %49, label %68, label %50

50:                                               ; preds = %48
  %51 = icmp ult i64 %34, %20
  br i1 %51, label %258, label %52

52:                                               ; preds = %50
  %53 = icmp ult i64 %22, %36
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = icmp uge i64 %36, %22
  %56 = icmp ult i64 %24, %38
  %57 = and i1 %55, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %54
  %59 = icmp ult i64 %36, %22
  %60 = icmp ult i64 %38, %24
  %61 = or i1 %59, %60
  br i1 %61, label %258, label %62

62:                                               ; preds = %58
  %63 = icmp ult i64 %25, %39
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = icmp uge i64 %39, %25
  %66 = icmp ult i64 %26, %40
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %258

68:                                               ; preds = %52, %48, %44, %5, %62, %54, %64
  %69 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69)
  %70 = bitcast %"struct.jxl::PatchReferencePosition"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70)
  %71 = bitcast %"struct.jxl::PatchPosition"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %71, i64 16, i1 false) #9
  %72 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2
  %73 = bitcast %"class.std::__1::vector.0"* %72 to i64*
  %74 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 1
  %75 = bitcast %"struct.jxl::PatchBlending"** %74 to i64*
  %76 = bitcast %"class.std::__1::vector.0"* %72 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  %78 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast %"struct.jxl::PatchBlending"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector.0"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #9
  %82 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3
  %83 = bitcast %"struct.jxl::PatchReferencePosition"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 %83, i64 40, i1 false) #9
  %84 = bitcast %"struct.jxl::PatchPosition"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %84, i64 16, i1 false) #9
  %85 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 2
  %86 = bitcast %"class.std::__1::vector.0"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %73, align 8
  %88 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 2, i32 0, i32 1
  %89 = bitcast %"struct.jxl::PatchBlending"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %75, align 8
  %91 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"struct.jxl::PatchBlending"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %79, align 8
  %94 = bitcast %"class.std::__1::vector.0"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #9
  %95 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3
  %96 = bitcast %"struct.jxl::PatchReferencePosition"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %96, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %69, i64 16, i1 false) #9
  %97 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %85, i64 0, i32 0, i32 0
  %98 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %97, align 8
  %99 = icmp eq %"struct.jxl::PatchBlending"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %68
  %101 = ptrtoint %"struct.jxl::PatchBlending"* %98 to i64
  store i64 %101, i64* %89, align 8
  %102 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %98, i64 0, i32 0
  tail call void @_ZdlPv(i8* %102) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #9
  br label %103

103:                                              ; preds = %68, %100
  %104 = bitcast %"class.std::__1::vector.0"* %85 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %104, align 8
  store i64 %80, i64* %92, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* nonnull align 8 %70, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70)
  %105 = add i32 %12, 1
  %106 = load i64, i64* %29, align 8
  %107 = load i64, i64* %31, align 8
  %108 = load i64, i64* %33, align 8
  %109 = load i64, i64* %35, align 8
  %110 = load i64, i64* %37, align 8
  %111 = load i64, i64* %27, align 8, !noalias !179
  %112 = load i64, i64* %28, align 8, !noalias !179
  %113 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 0
  %114 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 3
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 4
  %124 = load i64, i64* %123, align 8
  %125 = load i64, i64* %113, align 8, !noalias !182
  %126 = load i64, i64* %114, align 8, !noalias !182
  %127 = icmp ult i64 %106, %116
  br i1 %127, label %154, label %128

128:                                              ; preds = %103
  %129 = icmp ult i64 %116, %106
  br i1 %129, label %258, label %130

130:                                              ; preds = %128
  %131 = icmp ult i64 %107, %118
  br i1 %131, label %154, label %132

132:                                              ; preds = %130
  %133 = icmp ult i64 %118, %107
  br i1 %133, label %258, label %134

134:                                              ; preds = %132
  %135 = icmp ult i64 %108, %120
  br i1 %135, label %154, label %136

136:                                              ; preds = %134
  %137 = icmp ult i64 %120, %108
  br i1 %137, label %258, label %138

138:                                              ; preds = %136
  %139 = icmp ult i64 %109, %122
  br i1 %139, label %154, label %140

140:                                              ; preds = %138
  %141 = icmp uge i64 %122, %109
  %142 = icmp ult i64 %110, %124
  %143 = and i1 %141, %142
  br i1 %143, label %154, label %144

144:                                              ; preds = %140
  %145 = icmp ult i64 %122, %109
  %146 = icmp ult i64 %124, %110
  %147 = or i1 %145, %146
  br i1 %147, label %258, label %148

148:                                              ; preds = %144
  %149 = icmp ult i64 %111, %125
  br i1 %149, label %154, label %150

150:                                              ; preds = %148
  %151 = icmp uge i64 %125, %111
  %152 = icmp ult i64 %112, %126
  %153 = and i1 %151, %152
  br i1 %153, label %154, label %258

154:                                              ; preds = %138, %134, %130, %103, %148, %140, %150
  %155 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155)
  %156 = bitcast %"struct.jxl::PatchReferencePosition"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %156)
  %157 = bitcast %"struct.jxl::PatchPosition"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 8 %157, i64 16, i1 false) #9
  %158 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2
  %159 = bitcast %"class.std::__1::vector.0"* %158 to i64*
  %160 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 1
  %161 = bitcast %"struct.jxl::PatchBlending"** %160 to i64*
  %162 = bitcast %"class.std::__1::vector.0"* %158 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8
  %164 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast %"struct.jxl::PatchBlending"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.std::__1::vector.0"* %158 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #9
  %168 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3
  %169 = bitcast %"struct.jxl::PatchReferencePosition"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %156, i8* align 8 %169, i64 40, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %71, i64 16, i1 false) #9
  %170 = load i64, i64* %73, align 8
  store i64 %170, i64* %159, align 8
  %171 = load i64, i64* %75, align 8
  store i64 %171, i64* %161, align 8
  %172 = load i64, i64* %79, align 8
  store i64 %172, i64* %165, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %83, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %155, i64 16, i1 false) #9
  %173 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %72, i64 0, i32 0, i32 0
  %174 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %173, align 8
  %175 = icmp eq %"struct.jxl::PatchBlending"* %174, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %154
  %177 = ptrtoint %"struct.jxl::PatchBlending"* %174 to i64
  store i64 %177, i64* %75, align 8
  %178 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %174, i64 0, i32 0
  tail call void @_ZdlPv(i8* %178) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #9
  br label %179

179:                                              ; preds = %154, %176
  %180 = bitcast %"class.std::__1::vector.0"* %72 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %180, align 8
  store i64 %166, i64* %79, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %156, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %156)
  %181 = add i32 %12, 2
  %182 = load i64, i64* %115, align 8
  %183 = load i64, i64* %117, align 8
  %184 = load i64, i64* %119, align 8
  %185 = load i64, i64* %121, align 8
  %186 = load i64, i64* %123, align 8
  %187 = load i64, i64* %113, align 8, !noalias !185
  %188 = load i64, i64* %114, align 8, !noalias !185
  %189 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 0
  %190 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 1
  %191 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 2
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 3
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 4
  %200 = load i64, i64* %199, align 8
  %201 = load i64, i64* %189, align 8, !noalias !188
  %202 = load i64, i64* %190, align 8, !noalias !188
  %203 = icmp ult i64 %182, %192
  br i1 %203, label %230, label %204

204:                                              ; preds = %179
  %205 = icmp ult i64 %192, %182
  br i1 %205, label %258, label %206

206:                                              ; preds = %204
  %207 = icmp ult i64 %183, %194
  br i1 %207, label %230, label %208

208:                                              ; preds = %206
  %209 = icmp ult i64 %194, %183
  br i1 %209, label %258, label %210

210:                                              ; preds = %208
  %211 = icmp ult i64 %184, %196
  br i1 %211, label %230, label %212

212:                                              ; preds = %210
  %213 = icmp ult i64 %196, %184
  br i1 %213, label %258, label %214

214:                                              ; preds = %212
  %215 = icmp ult i64 %185, %198
  br i1 %215, label %230, label %216

216:                                              ; preds = %214
  %217 = icmp uge i64 %198, %185
  %218 = icmp ult i64 %186, %200
  %219 = and i1 %217, %218
  br i1 %219, label %230, label %220

220:                                              ; preds = %216
  %221 = icmp ult i64 %198, %185
  %222 = icmp ult i64 %200, %186
  %223 = or i1 %221, %222
  br i1 %223, label %258, label %224

224:                                              ; preds = %220
  %225 = icmp ult i64 %187, %201
  br i1 %225, label %230, label %226

226:                                              ; preds = %224
  %227 = icmp uge i64 %201, %187
  %228 = icmp ult i64 %188, %202
  %229 = and i1 %227, %228
  br i1 %229, label %230, label %258

230:                                              ; preds = %214, %210, %206, %179, %224, %216, %226
  %231 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231)
  %232 = bitcast %"struct.jxl::PatchReferencePosition"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %232)
  %233 = bitcast %"struct.jxl::PatchPosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %231, i8* align 8 %233, i64 16, i1 false) #9
  %234 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2
  %235 = bitcast %"class.std::__1::vector.0"* %234 to i64*
  %236 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 1
  %237 = bitcast %"struct.jxl::PatchBlending"** %236 to i64*
  %238 = bitcast %"class.std::__1::vector.0"* %234 to <2 x i64>*
  %239 = load <2 x i64>, <2 x i64>* %238, align 8
  %240 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %241 = bitcast %"struct.jxl::PatchBlending"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.std::__1::vector.0"* %234 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #9
  %244 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3
  %245 = bitcast %"struct.jxl::PatchReferencePosition"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %232, i8* align 8 %245, i64 40, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %157, i64 16, i1 false) #9
  %246 = load i64, i64* %159, align 8
  store i64 %246, i64* %235, align 8
  %247 = load i64, i64* %161, align 8
  store i64 %247, i64* %237, align 8
  %248 = load i64, i64* %165, align 8
  store i64 %248, i64* %241, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %169, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 8 %231, i64 16, i1 false) #9
  %249 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %158, i64 0, i32 0, i32 0
  %250 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %249, align 8
  %251 = icmp eq %"struct.jxl::PatchBlending"* %250, null
  br i1 %251, label %255, label %252

252:                                              ; preds = %230
  %253 = ptrtoint %"struct.jxl::PatchBlending"* %250 to i64
  store i64 %253, i64* %161, align 8
  %254 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %250, i64 0, i32 0
  tail call void @_ZdlPv(i8* %254) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #9
  br label %255

255:                                              ; preds = %230, %252
  %256 = bitcast %"class.std::__1::vector.0"* %158 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %256, align 8
  store i64 %242, i64* %165, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* nonnull align 8 %232, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %232)
  %257 = add i32 %12, 3
  br label %258

258:                                              ; preds = %212, %208, %204, %220, %136, %132, %128, %144, %50, %46, %42, %58, %150, %255, %226, %64
  %259 = phi i32 [ %257, %255 ], [ %181, %226 ], [ %105, %150 ], [ %12, %64 ], [ %12, %58 ], [ %12, %42 ], [ %12, %46 ], [ %12, %50 ], [ %105, %144 ], [ %105, %128 ], [ %105, %132 ], [ %105, %136 ], [ %181, %220 ], [ %181, %204 ], [ %181, %208 ], [ %181, %212 ]
  ret i32 %259
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.std::__1::__less.471"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %15 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.jxl::PatchPosition"* %0, %"struct.jxl::PatchPosition"* %1, %"struct.jxl::PatchPosition"* %2, %"struct.jxl::PatchPosition"* %3, %"struct.std::__1::__less.471"* dereferenceable(1) %5)
  %16 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 3, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 3, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 3, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 3, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 3, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %16, align 8, !noalias !191
  %29 = load i64, i64* %17, align 8, !noalias !191
  %30 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3, i32 4
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %30, align 8, !noalias !194
  %43 = load i64, i64* %31, align 8, !noalias !194
  %44 = icmp ult i64 %19, %33
  br i1 %44, label %71, label %45

45:                                               ; preds = %6
  %46 = icmp ult i64 %33, %19
  br i1 %46, label %337, label %47

47:                                               ; preds = %45
  %48 = icmp ult i64 %21, %35
  br i1 %48, label %71, label %49

49:                                               ; preds = %47
  %50 = icmp ult i64 %35, %21
  br i1 %50, label %337, label %51

51:                                               ; preds = %49
  %52 = icmp ult i64 %23, %37
  br i1 %52, label %71, label %53

53:                                               ; preds = %51
  %54 = icmp ult i64 %37, %23
  br i1 %54, label %337, label %55

55:                                               ; preds = %53
  %56 = icmp ult i64 %25, %39
  br i1 %56, label %71, label %57

57:                                               ; preds = %55
  %58 = icmp uge i64 %39, %25
  %59 = icmp ult i64 %27, %41
  %60 = and i1 %58, %59
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = icmp ult i64 %39, %25
  %63 = icmp ult i64 %41, %27
  %64 = or i1 %62, %63
  br i1 %64, label %337, label %65

65:                                               ; preds = %61
  %66 = icmp ult i64 %28, %42
  br i1 %66, label %71, label %67

67:                                               ; preds = %65
  %68 = icmp uge i64 %42, %28
  %69 = icmp ult i64 %29, %43
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %337

71:                                               ; preds = %55, %51, %47, %6, %65, %57, %67
  %72 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72)
  %73 = bitcast %"struct.jxl::PatchReferencePosition"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73)
  %74 = bitcast %"struct.jxl::PatchPosition"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %74, i64 16, i1 false) #9
  %75 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 2
  %76 = bitcast %"class.std::__1::vector.0"* %75 to i64*
  %77 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 2, i32 0, i32 1
  %78 = bitcast %"struct.jxl::PatchBlending"** %77 to i64*
  %79 = bitcast %"class.std::__1::vector.0"* %75 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8
  %81 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"struct.jxl::PatchBlending"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.0"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9
  %85 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %3, i64 0, i32 3
  %86 = bitcast %"struct.jxl::PatchReferencePosition"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %86, i64 40, i1 false) #9
  %87 = bitcast %"struct.jxl::PatchPosition"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %87, i64 16, i1 false) #9
  %88 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 2
  %89 = bitcast %"class.std::__1::vector.0"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %76, align 8
  %91 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 2, i32 0, i32 1
  %92 = bitcast %"struct.jxl::PatchBlending"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %78, align 8
  %94 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast %"struct.jxl::PatchBlending"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %82, align 8
  %97 = bitcast %"class.std::__1::vector.0"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #9
  %98 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %4, i64 0, i32 3
  %99 = bitcast %"struct.jxl::PatchReferencePosition"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %99, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %72, i64 16, i1 false) #9
  %100 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %88, i64 0, i32 0, i32 0
  %101 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %100, align 8
  %102 = icmp eq %"struct.jxl::PatchBlending"* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %71
  %104 = ptrtoint %"struct.jxl::PatchBlending"* %101 to i64
  store i64 %104, i64* %92, align 8
  %105 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %101, i64 0, i32 0
  tail call void @_ZdlPv(i8* %105) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #9
  br label %106

106:                                              ; preds = %71, %103
  %107 = bitcast %"class.std::__1::vector.0"* %88 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %107, align 8
  store i64 %83, i64* %95, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %73, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73)
  %108 = add i32 %15, 1
  %109 = load i64, i64* %32, align 8
  %110 = load i64, i64* %34, align 8
  %111 = load i64, i64* %36, align 8
  %112 = load i64, i64* %38, align 8
  %113 = load i64, i64* %40, align 8
  %114 = load i64, i64* %30, align 8, !noalias !197
  %115 = load i64, i64* %31, align 8, !noalias !197
  %116 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 0
  %117 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 1
  %118 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 2
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 3
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3, i32 4
  %127 = load i64, i64* %126, align 8
  %128 = load i64, i64* %116, align 8, !noalias !200
  %129 = load i64, i64* %117, align 8, !noalias !200
  %130 = icmp ult i64 %109, %119
  br i1 %130, label %157, label %131

131:                                              ; preds = %106
  %132 = icmp ult i64 %119, %109
  br i1 %132, label %337, label %133

133:                                              ; preds = %131
  %134 = icmp ult i64 %110, %121
  br i1 %134, label %157, label %135

135:                                              ; preds = %133
  %136 = icmp ult i64 %121, %110
  br i1 %136, label %337, label %137

137:                                              ; preds = %135
  %138 = icmp ult i64 %111, %123
  br i1 %138, label %157, label %139

139:                                              ; preds = %137
  %140 = icmp ult i64 %123, %111
  br i1 %140, label %337, label %141

141:                                              ; preds = %139
  %142 = icmp ult i64 %112, %125
  br i1 %142, label %157, label %143

143:                                              ; preds = %141
  %144 = icmp uge i64 %125, %112
  %145 = icmp ult i64 %113, %127
  %146 = and i1 %144, %145
  br i1 %146, label %157, label %147

147:                                              ; preds = %143
  %148 = icmp ult i64 %125, %112
  %149 = icmp ult i64 %127, %113
  %150 = or i1 %148, %149
  br i1 %150, label %337, label %151

151:                                              ; preds = %147
  %152 = icmp ult i64 %114, %128
  br i1 %152, label %157, label %153

153:                                              ; preds = %151
  %154 = icmp uge i64 %128, %114
  %155 = icmp ult i64 %115, %129
  %156 = and i1 %154, %155
  br i1 %156, label %157, label %337

157:                                              ; preds = %141, %137, %133, %106, %151, %143, %153
  %158 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158)
  %159 = bitcast %"struct.jxl::PatchReferencePosition"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %159)
  %160 = bitcast %"struct.jxl::PatchPosition"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %158, i8* align 8 %160, i64 16, i1 false) #9
  %161 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2
  %162 = bitcast %"class.std::__1::vector.0"* %161 to i64*
  %163 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 1
  %164 = bitcast %"struct.jxl::PatchBlending"** %163 to i64*
  %165 = bitcast %"class.std::__1::vector.0"* %161 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8
  %167 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %168 = bitcast %"struct.jxl::PatchBlending"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.std::__1::vector.0"* %161 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #9
  %171 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %2, i64 0, i32 3
  %172 = bitcast %"struct.jxl::PatchReferencePosition"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %159, i8* align 8 %172, i64 40, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %74, i64 16, i1 false) #9
  %173 = load i64, i64* %76, align 8
  store i64 %173, i64* %162, align 8
  %174 = load i64, i64* %78, align 8
  store i64 %174, i64* %164, align 8
  %175 = load i64, i64* %82, align 8
  store i64 %175, i64* %168, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %86, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %158, i64 16, i1 false) #9
  %176 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %75, i64 0, i32 0, i32 0
  %177 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %176, align 8
  %178 = icmp eq %"struct.jxl::PatchBlending"* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %157
  %180 = ptrtoint %"struct.jxl::PatchBlending"* %177 to i64
  store i64 %180, i64* %78, align 8
  %181 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %177, i64 0, i32 0
  tail call void @_ZdlPv(i8* %181) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9
  br label %182

182:                                              ; preds = %157, %179
  %183 = bitcast %"class.std::__1::vector.0"* %75 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %183, align 8
  store i64 %169, i64* %82, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %159, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %159)
  %184 = add i32 %15, 2
  %185 = load i64, i64* %118, align 8
  %186 = load i64, i64* %120, align 8
  %187 = load i64, i64* %122, align 8
  %188 = load i64, i64* %124, align 8
  %189 = load i64, i64* %126, align 8
  %190 = load i64, i64* %116, align 8, !noalias !203
  %191 = load i64, i64* %117, align 8, !noalias !203
  %192 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 0
  %193 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 1
  %194 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 2
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 3
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3, i32 4
  %203 = load i64, i64* %202, align 8
  %204 = load i64, i64* %192, align 8, !noalias !206
  %205 = load i64, i64* %193, align 8, !noalias !206
  %206 = icmp ult i64 %185, %195
  br i1 %206, label %233, label %207

207:                                              ; preds = %182
  %208 = icmp ult i64 %195, %185
  br i1 %208, label %337, label %209

209:                                              ; preds = %207
  %210 = icmp ult i64 %186, %197
  br i1 %210, label %233, label %211

211:                                              ; preds = %209
  %212 = icmp ult i64 %197, %186
  br i1 %212, label %337, label %213

213:                                              ; preds = %211
  %214 = icmp ult i64 %187, %199
  br i1 %214, label %233, label %215

215:                                              ; preds = %213
  %216 = icmp ult i64 %199, %187
  br i1 %216, label %337, label %217

217:                                              ; preds = %215
  %218 = icmp ult i64 %188, %201
  br i1 %218, label %233, label %219

219:                                              ; preds = %217
  %220 = icmp uge i64 %201, %188
  %221 = icmp ult i64 %189, %203
  %222 = and i1 %220, %221
  br i1 %222, label %233, label %223

223:                                              ; preds = %219
  %224 = icmp ult i64 %201, %188
  %225 = icmp ult i64 %203, %189
  %226 = or i1 %224, %225
  br i1 %226, label %337, label %227

227:                                              ; preds = %223
  %228 = icmp ult i64 %190, %204
  br i1 %228, label %233, label %229

229:                                              ; preds = %227
  %230 = icmp uge i64 %204, %190
  %231 = icmp ult i64 %191, %205
  %232 = and i1 %230, %231
  br i1 %232, label %233, label %337

233:                                              ; preds = %217, %213, %209, %182, %227, %219, %229
  %234 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234)
  %235 = bitcast %"struct.jxl::PatchReferencePosition"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %235)
  %236 = bitcast %"struct.jxl::PatchPosition"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %234, i8* align 8 %236, i64 16, i1 false) #9
  %237 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2
  %238 = bitcast %"class.std::__1::vector.0"* %237 to i64*
  %239 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 1
  %240 = bitcast %"struct.jxl::PatchBlending"** %239 to i64*
  %241 = bitcast %"class.std::__1::vector.0"* %237 to <2 x i64>*
  %242 = load <2 x i64>, <2 x i64>* %241, align 8
  %243 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %244 = bitcast %"struct.jxl::PatchBlending"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.std::__1::vector.0"* %237 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 24, i1 false) #9
  %247 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 0, i32 3
  %248 = bitcast %"struct.jxl::PatchReferencePosition"* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %235, i8* align 8 %248, i64 40, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %160, i64 16, i1 false) #9
  %249 = load i64, i64* %162, align 8
  store i64 %249, i64* %238, align 8
  %250 = load i64, i64* %164, align 8
  store i64 %250, i64* %240, align 8
  %251 = load i64, i64* %168, align 8
  store i64 %251, i64* %244, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %172, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* nonnull align 8 %234, i64 16, i1 false) #9
  %252 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %161, i64 0, i32 0, i32 0
  %253 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %252, align 8
  %254 = icmp eq %"struct.jxl::PatchBlending"* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %233
  %256 = ptrtoint %"struct.jxl::PatchBlending"* %253 to i64
  store i64 %256, i64* %164, align 8
  %257 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %253, i64 0, i32 0
  tail call void @_ZdlPv(i8* %257) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #9
  br label %258

258:                                              ; preds = %233, %255
  %259 = bitcast %"class.std::__1::vector.0"* %161 to <2 x i64>*
  store <2 x i64> %242, <2 x i64>* %259, align 8
  store i64 %245, i64* %168, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* nonnull align 8 %235, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %235)
  %260 = add i32 %15, 3
  %261 = load i64, i64* %194, align 8
  %262 = load i64, i64* %196, align 8
  %263 = load i64, i64* %198, align 8
  %264 = load i64, i64* %200, align 8
  %265 = load i64, i64* %202, align 8
  %266 = load i64, i64* %192, align 8, !noalias !209
  %267 = load i64, i64* %193, align 8, !noalias !209
  %268 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 0
  %269 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 1
  %270 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 0
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 1
  %273 = load i64, i64* %272, align 8
  %274 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 2
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 3
  %277 = load i64, i64* %276, align 8
  %278 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 4
  %279 = load i64, i64* %278, align 8
  %280 = load i64, i64* %268, align 8, !noalias !212
  %281 = load i64, i64* %269, align 8, !noalias !212
  %282 = icmp ult i64 %261, %271
  br i1 %282, label %309, label %283

283:                                              ; preds = %258
  %284 = icmp ult i64 %271, %261
  br i1 %284, label %337, label %285

285:                                              ; preds = %283
  %286 = icmp ult i64 %262, %273
  br i1 %286, label %309, label %287

287:                                              ; preds = %285
  %288 = icmp ult i64 %273, %262
  br i1 %288, label %337, label %289

289:                                              ; preds = %287
  %290 = icmp ult i64 %263, %275
  br i1 %290, label %309, label %291

291:                                              ; preds = %289
  %292 = icmp ult i64 %275, %263
  br i1 %292, label %337, label %293

293:                                              ; preds = %291
  %294 = icmp ult i64 %264, %277
  br i1 %294, label %309, label %295

295:                                              ; preds = %293
  %296 = icmp uge i64 %277, %264
  %297 = icmp ult i64 %265, %279
  %298 = and i1 %296, %297
  br i1 %298, label %309, label %299

299:                                              ; preds = %295
  %300 = icmp ult i64 %277, %264
  %301 = icmp ult i64 %279, %265
  %302 = or i1 %300, %301
  br i1 %302, label %337, label %303

303:                                              ; preds = %299
  %304 = icmp ult i64 %266, %280
  br i1 %304, label %309, label %305

305:                                              ; preds = %303
  %306 = icmp uge i64 %280, %266
  %307 = icmp ult i64 %267, %281
  %308 = and i1 %306, %307
  br i1 %308, label %309, label %337

309:                                              ; preds = %293, %289, %285, %258, %303, %295, %305
  %310 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %310)
  %311 = bitcast %"struct.jxl::PatchReferencePosition"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %311)
  %312 = bitcast %"struct.jxl::PatchPosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %310, i8* align 8 %312, i64 16, i1 false) #9
  %313 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2
  %314 = bitcast %"class.std::__1::vector.0"* %313 to i64*
  %315 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 1
  %316 = bitcast %"struct.jxl::PatchBlending"** %315 to i64*
  %317 = bitcast %"class.std::__1::vector.0"* %313 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8
  %319 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %320 = bitcast %"struct.jxl::PatchBlending"** %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.std::__1::vector.0"* %313 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %322, i8 0, i64 24, i1 false) #9
  %323 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3
  %324 = bitcast %"struct.jxl::PatchReferencePosition"* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %311, i8* align 8 %324, i64 40, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %312, i8* align 8 %236, i64 16, i1 false) #9
  %325 = load i64, i64* %238, align 8
  store i64 %325, i64* %314, align 8
  %326 = load i64, i64* %240, align 8
  store i64 %326, i64* %316, align 8
  %327 = load i64, i64* %244, align 8
  store i64 %327, i64* %320, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %324, i8* align 8 %248, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* nonnull align 8 %310, i64 16, i1 false) #9
  %328 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %237, i64 0, i32 0, i32 0
  %329 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %328, align 8
  %330 = icmp eq %"struct.jxl::PatchBlending"* %329, null
  br i1 %330, label %334, label %331

331:                                              ; preds = %309
  %332 = ptrtoint %"struct.jxl::PatchBlending"* %329 to i64
  store i64 %332, i64* %240, align 8
  %333 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %329, i64 0, i32 0
  tail call void @_ZdlPv(i8* %333) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 24, i1 false) #9
  br label %334

334:                                              ; preds = %309, %331
  %335 = bitcast %"class.std::__1::vector.0"* %237 to <2 x i64>*
  store <2 x i64> %318, <2 x i64>* %335, align 8
  store i64 %321, i64* %244, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* nonnull align 8 %311, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %310)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %311)
  %336 = add i32 %15, 4
  br label %337

337:                                              ; preds = %291, %287, %283, %299, %215, %211, %207, %223, %139, %135, %131, %147, %53, %49, %45, %61, %153, %305, %334, %229, %67
  %338 = phi i32 [ %336, %334 ], [ %260, %305 ], [ %184, %229 ], [ %108, %153 ], [ %15, %67 ], [ %15, %61 ], [ %15, %45 ], [ %15, %49 ], [ %15, %53 ], [ %108, %147 ], [ %108, %131 ], [ %108, %135 ], [ %108, %139 ], [ %184, %223 ], [ %184, %207 ], [ %184, %211 ], [ %184, %215 ], [ %260, %299 ], [ %260, %283 ], [ %260, %287 ], [ %260, %291 ]
  ret i32 %338
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEvT0_S7_T_(%"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.std::__1::__less.471"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 2
  %5 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_(%"struct.jxl::PatchPosition"* %0, %"struct.jxl::PatchPosition"* %5, %"struct.jxl::PatchPosition"* %4, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  %7 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 3
  %8 = icmp eq %"struct.jxl::PatchPosition"* %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %176, %3
  ret void

10:                                               ; preds = %3, %176
  %11 = phi %"struct.jxl::PatchPosition"* [ %177, %176 ], [ %7, %3 ]
  %12 = phi %"struct.jxl::PatchPosition"* [ %11, %176 ], [ %4, %3 ]
  %13 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 3, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 3, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 3, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 3, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 3, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8, !noalias !215
  %26 = load i64, i64* %14, align 8, !noalias !215
  %27 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %12, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %12, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %12, i64 0, i32 3, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %12, i64 0, i32 3, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %12, i64 0, i32 3, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %12, i64 0, i32 3, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %12, i64 0, i32 3, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %27, align 8, !noalias !218
  %40 = load i64, i64* %28, align 8, !noalias !218
  %41 = icmp ult i64 %16, %30
  br i1 %41, label %68, label %42

42:                                               ; preds = %10
  %43 = icmp ult i64 %30, %16
  br i1 %43, label %176, label %44

44:                                               ; preds = %42
  %45 = icmp ult i64 %18, %32
  br i1 %45, label %68, label %46

46:                                               ; preds = %44
  %47 = icmp ult i64 %32, %18
  br i1 %47, label %176, label %48

48:                                               ; preds = %46
  %49 = icmp ult i64 %20, %34
  br i1 %49, label %68, label %50

50:                                               ; preds = %48
  %51 = icmp ult i64 %34, %20
  br i1 %51, label %176, label %52

52:                                               ; preds = %50
  %53 = icmp ult i64 %22, %36
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = icmp uge i64 %36, %22
  %56 = icmp ult i64 %24, %38
  %57 = and i1 %55, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %54
  %59 = icmp ult i64 %36, %22
  %60 = icmp ult i64 %38, %24
  %61 = or i1 %59, %60
  br i1 %61, label %176, label %62

62:                                               ; preds = %58
  %63 = icmp ult i64 %25, %39
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = icmp uge i64 %39, %25
  %66 = icmp ult i64 %26, %40
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %176

68:                                               ; preds = %52, %48, %44, %10, %62, %54, %64
  %69 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 2
  %70 = bitcast %"class.std::__1::vector.0"* %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8
  %72 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"struct.jxl::PatchBlending"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector.0"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #9
  br label %76

76:                                               ; preds = %151, %68
  %77 = phi %"struct.jxl::PatchPosition"* [ %11, %68 ], [ %78, %151 ]
  %78 = phi %"struct.jxl::PatchPosition"* [ %12, %68 ], [ %113, %151 ]
  %79 = bitcast %"struct.jxl::PatchPosition"* %77 to i8*
  %80 = bitcast %"struct.jxl::PatchPosition"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 16, i1 false) #9
  %81 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %77, i64 0, i32 2
  %82 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 0, i32 2
  %83 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %81, i64 0, i32 0, i32 0
  %84 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %83, align 8
  %85 = icmp eq %"struct.jxl::PatchBlending"* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %76
  %87 = ptrtoint %"struct.jxl::PatchBlending"* %84 to i64
  %88 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %77, i64 0, i32 2, i32 0, i32 1
  %89 = bitcast %"struct.jxl::PatchBlending"** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %84, i64 0, i32 0
  tail call void @_ZdlPv(i8* %90) #19
  %91 = bitcast %"class.std::__1::vector.0"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #9
  br label %92

92:                                               ; preds = %76, %86
  %93 = bitcast %"class.std::__1::vector.0"* %82 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.0"* %81 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 0, i32 2, i32 0, i32 1
  %97 = bitcast %"struct.jxl::PatchBlending"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %77, i64 0, i32 2, i32 0, i32 1
  %100 = bitcast %"struct.jxl::PatchBlending"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %102 = bitcast %"struct.jxl::PatchBlending"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %77, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.jxl::PatchBlending"** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast %"class.std::__1::vector.0"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #9
  %107 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %77, i64 0, i32 3
  %108 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 0, i32 3
  %109 = bitcast %"struct.jxl::PatchReferencePosition"* %107 to i8*
  %110 = bitcast %"struct.jxl::PatchReferencePosition"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 40, i1 false) #9
  %111 = icmp eq %"struct.jxl::PatchPosition"* %78, %0
  br i1 %111, label %156, label %112

112:                                              ; preds = %92
  %113 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 -1
  %114 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %113, i64 0, i32 0
  %115 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 -1, i32 1
  %116 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 -1, i32 3, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 -1, i32 3, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 -1, i32 3, i32 2
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 -1, i32 3, i32 3
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %78, i64 -1, i32 3, i32 4
  %125 = load i64, i64* %124, align 8
  %126 = load i64, i64* %114, align 8, !noalias !221
  %127 = load i64, i64* %115, align 8, !noalias !221
  %128 = icmp ult i64 %16, %117
  br i1 %128, label %151, label %129

129:                                              ; preds = %112
  %130 = icmp ult i64 %117, %16
  br i1 %130, label %156, label %131

131:                                              ; preds = %129
  %132 = icmp ult i64 %18, %119
  br i1 %132, label %151, label %133

133:                                              ; preds = %131
  %134 = icmp ult i64 %119, %18
  br i1 %134, label %156, label %135

135:                                              ; preds = %133
  %136 = icmp ult i64 %20, %121
  br i1 %136, label %151, label %137

137:                                              ; preds = %135
  %138 = icmp ult i64 %121, %20
  br i1 %138, label %156, label %139

139:                                              ; preds = %137
  %140 = icmp ult i64 %22, %123
  br i1 %140, label %151, label %141

141:                                              ; preds = %139
  %142 = icmp uge i64 %123, %22
  %143 = icmp ult i64 %24, %125
  %144 = and i1 %142, %143
  br i1 %144, label %151, label %145

145:                                              ; preds = %141
  %146 = icmp ult i64 %123, %22
  %147 = icmp ult i64 %125, %24
  %148 = or i1 %146, %147
  br i1 %148, label %156, label %149

149:                                              ; preds = %145
  %150 = icmp ult i64 %25, %126
  br i1 %150, label %151, label %152

151:                                              ; preds = %149, %141, %139, %135, %131, %112, %152
  br label %76

152:                                              ; preds = %149
  %153 = icmp uge i64 %126, %25
  %154 = icmp ult i64 %26, %127
  %155 = and i1 %153, %154
  br i1 %155, label %151, label %156

156:                                              ; preds = %137, %133, %129, %145, %152, %92
  %157 = phi %"struct.jxl::PatchPosition"* [ %78, %137 ], [ %78, %133 ], [ %78, %129 ], [ %78, %145 ], [ %78, %152 ], [ %0, %92 ]
  %158 = bitcast %"struct.jxl::PatchBlending"** %101 to i64*
  %159 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %157, i64 0, i32 0
  store i64 %25, i64* %159, align 8
  %160 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %157, i64 0, i32 1
  store i64 %26, i64* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %82, i64 0, i32 0, i32 0
  %162 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %161, align 8
  %163 = icmp eq %"struct.jxl::PatchBlending"* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %156
  %165 = bitcast %"struct.jxl::PatchBlending"** %96 to i64*
  %166 = bitcast %"class.std::__1::vector.0"* %82 to i8*
  %167 = ptrtoint %"struct.jxl::PatchBlending"* %162 to i64
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %162, i64 0, i32 0
  tail call void @_ZdlPv(i8* %168) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 24, i1 false) #9
  br label %169

169:                                              ; preds = %164, %156
  %170 = bitcast %"class.std::__1::vector.0"* %82 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %170, align 8
  store i64 %74, i64* %158, align 8
  %171 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %157, i64 0, i32 3, i32 0
  store i64 %16, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %157, i64 0, i32 3, i32 1
  store i64 %18, i64* %172, align 8
  %173 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %157, i64 0, i32 3, i32 2
  store i64 %20, i64* %173, align 8
  %174 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %157, i64 0, i32 3, i32 3
  store i64 %22, i64* %174, align 8
  %175 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %157, i64 0, i32 3, i32 4
  store i64 %24, i64* %175, align 8
  br label %176

176:                                              ; preds = %50, %46, %42, %58, %169, %64
  %177 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 1
  %178 = icmp eq %"struct.jxl::PatchPosition"* %177, %1
  br i1 %178, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEbT0_S7_T_(%"struct.jxl::PatchPosition"*, %"struct.jxl::PatchPosition"*, %"struct.std::__1::__less.471"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %"struct.jxl::PatchReferencePosition", align 8
  %6 = ptrtoint %"struct.jxl::PatchPosition"* %1 to i64
  %7 = ptrtoint %"struct.jxl::PatchPosition"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 80
  switch i64 %9, label %119 [
    i64 0, label %301
    i64 1, label %301
    i64 2, label %10
    i64 3, label %104
    i64 4, label %108
    i64 5, label %113
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1
  %12 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 1
  %14 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 3, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 3, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 3, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 3, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 3, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = load i64, i64* %12, align 8, !noalias !224
  %25 = load i64, i64* %13, align 8, !noalias !224
  %26 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %26, align 8, !noalias !227
  %39 = load i64, i64* %27, align 8, !noalias !227
  %40 = icmp ult i64 %15, %29
  br i1 %40, label %67, label %41

41:                                               ; preds = %10
  %42 = icmp ult i64 %29, %15
  br i1 %42, label %301, label %43

43:                                               ; preds = %41
  %44 = icmp ult i64 %17, %31
  br i1 %44, label %67, label %45

45:                                               ; preds = %43
  %46 = icmp ult i64 %31, %17
  br i1 %46, label %301, label %47

47:                                               ; preds = %45
  %48 = icmp ult i64 %19, %33
  br i1 %48, label %67, label %49

49:                                               ; preds = %47
  %50 = icmp ult i64 %33, %19
  br i1 %50, label %301, label %51

51:                                               ; preds = %49
  %52 = icmp ult i64 %21, %35
  br i1 %52, label %67, label %53

53:                                               ; preds = %51
  %54 = icmp uge i64 %35, %21
  %55 = icmp ult i64 %23, %37
  %56 = and i1 %54, %55
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = icmp ult i64 %35, %21
  %59 = icmp ult i64 %37, %23
  %60 = or i1 %58, %59
  br i1 %60, label %301, label %61

61:                                               ; preds = %57
  %62 = icmp ult i64 %24, %38
  br i1 %62, label %67, label %63

63:                                               ; preds = %61
  %64 = icmp uge i64 %38, %24
  %65 = icmp ult i64 %25, %39
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %301

67:                                               ; preds = %51, %47, %43, %10, %61, %53, %63
  %68 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68)
  %69 = bitcast %"struct.jxl::PatchReferencePosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %69)
  %70 = bitcast %"struct.jxl::PatchPosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %70, i64 16, i1 false) #9
  %71 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2
  %72 = bitcast %"class.std::__1::vector.0"* %71 to i64*
  %73 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 1
  %74 = bitcast %"struct.jxl::PatchBlending"** %73 to i64*
  %75 = bitcast %"class.std::__1::vector.0"* %71 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"struct.jxl::PatchBlending"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.0"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #9
  %81 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 0, i32 3
  %82 = bitcast %"struct.jxl::PatchReferencePosition"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %82, i64 40, i1 false) #9
  %83 = bitcast %"struct.jxl::PatchPosition"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %83, i64 16, i1 false) #9
  %84 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 2
  %85 = bitcast %"class.std::__1::vector.0"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %72, align 8
  %87 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 2, i32 0, i32 1
  %88 = bitcast %"struct.jxl::PatchBlending"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %74, align 8
  %90 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast %"struct.jxl::PatchBlending"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %78, align 8
  %93 = bitcast %"class.std::__1::vector.0"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #9
  %94 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1, i32 3
  %95 = bitcast %"struct.jxl::PatchReferencePosition"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %95, i64 40, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %68, i64 16, i1 false) #9
  %96 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %84, i64 0, i32 0, i32 0
  %97 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %96, align 8
  %98 = icmp eq %"struct.jxl::PatchBlending"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %67
  %100 = ptrtoint %"struct.jxl::PatchBlending"* %97 to i64
  store i64 %100, i64* %88, align 8
  %101 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %97, i64 0, i32 0
  tail call void @_ZdlPv(i8* %101) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #9
  br label %102

102:                                              ; preds = %67, %99
  %103 = bitcast %"class.std::__1::vector.0"* %84 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %103, align 8
  store i64 %79, i64* %91, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* nonnull align 8 %69, i64 40, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %69)
  br label %301

104:                                              ; preds = %3
  %105 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 1
  %106 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1
  %107 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_(%"struct.jxl::PatchPosition"* %0, %"struct.jxl::PatchPosition"* %105, %"struct.jxl::PatchPosition"* %106, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %301

108:                                              ; preds = %3
  %109 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 1
  %110 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 2
  %111 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1
  %112 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.jxl::PatchPosition"* %0, %"struct.jxl::PatchPosition"* %109, %"struct.jxl::PatchPosition"* %110, %"struct.jxl::PatchPosition"* %111, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %301

113:                                              ; preds = %3
  %114 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 1
  %115 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 2
  %116 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 3
  %117 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %1, i64 -1
  %118 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.jxl::PatchPosition"* %0, %"struct.jxl::PatchPosition"* %114, %"struct.jxl::PatchPosition"* %115, %"struct.jxl::PatchPosition"* %116, %"struct.jxl::PatchPosition"* %117, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  br label %301

119:                                              ; preds = %3
  %120 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 2
  %121 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 1
  %122 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3jxl13PatchPositionES3_EEPS3_EEjT0_S7_S7_T_(%"struct.jxl::PatchPosition"* %0, %"struct.jxl::PatchPosition"* %121, %"struct.jxl::PatchPosition"* %120, %"struct.std::__1::__less.471"* dereferenceable(1) %2)
  %123 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %0, i64 3
  %124 = icmp eq %"struct.jxl::PatchPosition"* %123, %1
  br i1 %124, label %301, label %125

125:                                              ; preds = %119, %294
  %126 = phi %"struct.jxl::PatchPosition"* [ %296, %294 ], [ %123, %119 ]
  %127 = phi i32 [ %295, %294 ], [ 0, %119 ]
  %128 = phi %"struct.jxl::PatchPosition"* [ %126, %294 ], [ %120, %119 ]
  %129 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 0
  %130 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 1
  %131 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 3, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 3, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 3, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 3, i32 3
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 3, i32 4
  %140 = load i64, i64* %139, align 8
  %141 = load i64, i64* %129, align 8, !noalias !230
  %142 = load i64, i64* %130, align 8, !noalias !230
  %143 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %128, i64 0, i32 0
  %144 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %128, i64 0, i32 1
  %145 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %128, i64 0, i32 3, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %128, i64 0, i32 3, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %128, i64 0, i32 3, i32 2
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %128, i64 0, i32 3, i32 3
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %128, i64 0, i32 3, i32 4
  %154 = load i64, i64* %153, align 8
  %155 = load i64, i64* %143, align 8, !noalias !233
  %156 = load i64, i64* %144, align 8, !noalias !233
  %157 = icmp ult i64 %132, %146
  br i1 %157, label %184, label %158

158:                                              ; preds = %125
  %159 = icmp ult i64 %146, %132
  br i1 %159, label %294, label %160

160:                                              ; preds = %158
  %161 = icmp ult i64 %134, %148
  br i1 %161, label %184, label %162

162:                                              ; preds = %160
  %163 = icmp ult i64 %148, %134
  br i1 %163, label %294, label %164

164:                                              ; preds = %162
  %165 = icmp ult i64 %136, %150
  br i1 %165, label %184, label %166

166:                                              ; preds = %164
  %167 = icmp ult i64 %150, %136
  br i1 %167, label %294, label %168

168:                                              ; preds = %166
  %169 = icmp ult i64 %138, %152
  br i1 %169, label %184, label %170

170:                                              ; preds = %168
  %171 = icmp uge i64 %152, %138
  %172 = icmp ult i64 %140, %154
  %173 = and i1 %171, %172
  br i1 %173, label %184, label %174

174:                                              ; preds = %170
  %175 = icmp ult i64 %152, %138
  %176 = icmp ult i64 %154, %140
  %177 = or i1 %175, %176
  br i1 %177, label %294, label %178

178:                                              ; preds = %174
  %179 = icmp ult i64 %141, %155
  br i1 %179, label %184, label %180

180:                                              ; preds = %178
  %181 = icmp uge i64 %155, %141
  %182 = icmp ult i64 %142, %156
  %183 = and i1 %181, %182
  br i1 %183, label %184, label %294

184:                                              ; preds = %168, %164, %160, %125, %178, %170, %180
  %185 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 2
  %186 = bitcast %"class.std::__1::vector.0"* %185 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8
  %188 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %189 = bitcast %"struct.jxl::PatchBlending"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::vector.0"* %185 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #9
  br label %192

192:                                              ; preds = %267, %184
  %193 = phi %"struct.jxl::PatchPosition"* [ %126, %184 ], [ %194, %267 ]
  %194 = phi %"struct.jxl::PatchPosition"* [ %128, %184 ], [ %229, %267 ]
  %195 = bitcast %"struct.jxl::PatchPosition"* %193 to i8*
  %196 = bitcast %"struct.jxl::PatchPosition"* %194 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 16, i1 false) #9
  %197 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %193, i64 0, i32 2
  %198 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 0, i32 2
  %199 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %197, i64 0, i32 0, i32 0
  %200 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %199, align 8
  %201 = icmp eq %"struct.jxl::PatchBlending"* %200, null
  br i1 %201, label %208, label %202

202:                                              ; preds = %192
  %203 = ptrtoint %"struct.jxl::PatchBlending"* %200 to i64
  %204 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %193, i64 0, i32 2, i32 0, i32 1
  %205 = bitcast %"struct.jxl::PatchBlending"** %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %200, i64 0, i32 0
  tail call void @_ZdlPv(i8* %206) #19
  %207 = bitcast %"class.std::__1::vector.0"* %197 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 24, i1 false) #9
  br label %208

208:                                              ; preds = %192, %202
  %209 = bitcast %"class.std::__1::vector.0"* %198 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.std::__1::vector.0"* %197 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 0, i32 2, i32 0, i32 1
  %213 = bitcast %"struct.jxl::PatchBlending"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %193, i64 0, i32 2, i32 0, i32 1
  %216 = bitcast %"struct.jxl::PatchBlending"** %215 to i64*
  store i64 %214, i64* %216, align 8
  %217 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %218 = bitcast %"struct.jxl::PatchBlending"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %193, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %221 = bitcast %"struct.jxl::PatchBlending"** %220 to i64*
  store i64 %219, i64* %221, align 8
  %222 = bitcast %"class.std::__1::vector.0"* %198 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %222, i8 0, i64 24, i1 false) #9
  %223 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %193, i64 0, i32 3
  %224 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 0, i32 3
  %225 = bitcast %"struct.jxl::PatchReferencePosition"* %223 to i8*
  %226 = bitcast %"struct.jxl::PatchReferencePosition"* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 40, i1 false) #9
  %227 = icmp eq %"struct.jxl::PatchPosition"* %194, %0
  br i1 %227, label %272, label %228

228:                                              ; preds = %208
  %229 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 -1
  %230 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %229, i64 0, i32 0
  %231 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 -1, i32 1
  %232 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 -1, i32 3, i32 0
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 -1, i32 3, i32 1
  %235 = load i64, i64* %234, align 8
  %236 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 -1, i32 3, i32 2
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 -1, i32 3, i32 3
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %194, i64 -1, i32 3, i32 4
  %241 = load i64, i64* %240, align 8
  %242 = load i64, i64* %230, align 8, !noalias !236
  %243 = load i64, i64* %231, align 8, !noalias !236
  %244 = icmp ult i64 %132, %233
  br i1 %244, label %267, label %245

245:                                              ; preds = %228
  %246 = icmp ult i64 %233, %132
  br i1 %246, label %272, label %247

247:                                              ; preds = %245
  %248 = icmp ult i64 %134, %235
  br i1 %248, label %267, label %249

249:                                              ; preds = %247
  %250 = icmp ult i64 %235, %134
  br i1 %250, label %272, label %251

251:                                              ; preds = %249
  %252 = icmp ult i64 %136, %237
  br i1 %252, label %267, label %253

253:                                              ; preds = %251
  %254 = icmp ult i64 %237, %136
  br i1 %254, label %272, label %255

255:                                              ; preds = %253
  %256 = icmp ult i64 %138, %239
  br i1 %256, label %267, label %257

257:                                              ; preds = %255
  %258 = icmp uge i64 %239, %138
  %259 = icmp ult i64 %140, %241
  %260 = and i1 %258, %259
  br i1 %260, label %267, label %261

261:                                              ; preds = %257
  %262 = icmp ult i64 %239, %138
  %263 = icmp ult i64 %241, %140
  %264 = or i1 %262, %263
  br i1 %264, label %272, label %265

265:                                              ; preds = %261
  %266 = icmp ult i64 %141, %242
  br i1 %266, label %267, label %268

267:                                              ; preds = %265, %257, %255, %251, %247, %228, %268
  br label %192

268:                                              ; preds = %265
  %269 = icmp uge i64 %242, %141
  %270 = icmp ult i64 %142, %243
  %271 = and i1 %269, %270
  br i1 %271, label %267, label %272

272:                                              ; preds = %253, %249, %245, %261, %268, %208
  %273 = phi %"struct.jxl::PatchPosition"* [ %194, %253 ], [ %194, %249 ], [ %194, %245 ], [ %194, %261 ], [ %194, %268 ], [ %0, %208 ]
  %274 = bitcast %"struct.jxl::PatchBlending"** %217 to i64*
  %275 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %273, i64 0, i32 0
  store i64 %141, i64* %275, align 8
  %276 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %273, i64 0, i32 1
  store i64 %142, i64* %276, align 8
  %277 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %198, i64 0, i32 0, i32 0
  %278 = load %"struct.jxl::PatchBlending"*, %"struct.jxl::PatchBlending"** %277, align 8
  %279 = icmp eq %"struct.jxl::PatchBlending"* %278, null
  br i1 %279, label %285, label %280

280:                                              ; preds = %272
  %281 = bitcast %"struct.jxl::PatchBlending"** %212 to i64*
  %282 = bitcast %"class.std::__1::vector.0"* %198 to i8*
  %283 = ptrtoint %"struct.jxl::PatchBlending"* %278 to i64
  store i64 %283, i64* %281, align 8
  %284 = getelementptr inbounds %"struct.jxl::PatchBlending", %"struct.jxl::PatchBlending"* %278, i64 0, i32 0
  tail call void @_ZdlPv(i8* %284) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 24, i1 false) #9
  br label %285

285:                                              ; preds = %280, %272
  %286 = bitcast %"class.std::__1::vector.0"* %198 to <2 x i64>*
  store <2 x i64> %187, <2 x i64>* %286, align 8
  store i64 %190, i64* %274, align 8
  %287 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %273, i64 0, i32 3, i32 0
  store i64 %132, i64* %287, align 8
  %288 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %273, i64 0, i32 3, i32 1
  store i64 %134, i64* %288, align 8
  %289 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %273, i64 0, i32 3, i32 2
  store i64 %136, i64* %289, align 8
  %290 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %273, i64 0, i32 3, i32 3
  store i64 %138, i64* %290, align 8
  %291 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %273, i64 0, i32 3, i32 4
  store i64 %140, i64* %291, align 8
  %292 = add i32 %127, 1
  %293 = icmp eq i32 %292, 8
  br i1 %293, label %298, label %294

294:                                              ; preds = %285, %166, %162, %158, %174, %180
  %295 = phi i32 [ %292, %285 ], [ %127, %180 ], [ %127, %174 ], [ %127, %158 ], [ %127, %162 ], [ %127, %166 ]
  %296 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 1
  %297 = icmp eq %"struct.jxl::PatchPosition"* %296, %1
  br i1 %297, label %301, label %125

298:                                              ; preds = %285
  %299 = getelementptr inbounds %"struct.jxl::PatchPosition", %"struct.jxl::PatchPosition"* %126, i64 1
  %300 = icmp eq %"struct.jxl::PatchPosition"* %299, %1
  br label %301

301:                                              ; preds = %294, %298, %119, %49, %45, %41, %57, %63, %102, %3, %3, %113, %108, %104
  %302 = phi i1 [ true, %113 ], [ true, %108 ], [ true, %104 ], [ true, %3 ], [ true, %3 ], [ true, %102 ], [ true, %63 ], [ true, %57 ], [ true, %41 ], [ true, %45 ], [ true, %49 ], [ true, %119 ], [ %300, %298 ], [ true, %294 ]
  ret i1 %302
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { nounwind readonly }
attributes #21 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__110make_tupleIJRKmS2_S2_S2_S2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_"}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3jxl12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb: argument 1"}
!17 = distinct !{!17, !"_ZN3jxl12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb"}
!18 = !{!19}
!19 = distinct !{!19, !17, !"_ZN3jxl12_GLOBAL__N_119FindTextLikePatchesERKNS_6Image3IfEEPKNS_18PassesEncoderStateEPNS_10ThreadPoolEPNS_6AuxOutEb: argument 0"}
!20 = !{!19, !16}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = !{!"branch_weights", i32 1, i32 2000}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN3jxl11ImageMinMaxIhEEvRKNS_5PlaneIT_EEPS2_S6_: argument 0"}
!28 = distinct !{!28, !"_ZN3jxl11ImageMinMaxIhEEvRKNS_5PlaneIT_EEPS2_S6_"}
!29 = distinct !{!29, !28, !"_ZN3jxl11ImageMinMaxIhEEvRKNS_5PlaneIT_EEPS2_S6_: argument 1"}
!30 = distinct !{!30, !22}
!31 = distinct !{!31, !32, !22}
!32 = !{!"llvm.loop.unroll.runtime.disable"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZN3jxl11ImageMinMaxIfEEvRKNS_5PlaneIT_EEPS2_S6_: argument 0"}
!35 = distinct !{!35, !"_ZN3jxl11ImageMinMaxIfEEvRKNS_5PlaneIT_EEPS2_S6_"}
!36 = distinct !{!36, !35, !"_ZN3jxl11ImageMinMaxIfEEvRKNS_5PlaneIT_EEPS2_S6_: argument 1"}
!37 = distinct !{!37, !24}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !22}
!44 = distinct !{!44, !24}
!45 = distinct !{!45, !24}
!46 = distinct !{!46, !22}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !22}
!53 = distinct !{!53, !24}
!54 = distinct !{!54, !24}
!55 = distinct !{!55, !22}
!56 = distinct !{!56, !24}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !22}
!63 = distinct !{!63, !24}
!64 = distinct !{!64, !24}
!65 = distinct !{!65, !22}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !22}
!72 = distinct !{!72, !24}
!73 = distinct !{!73, !24}
!74 = distinct !{!74, !22}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN3jxl14ConvertToFloatIhEENS_5PlaneIfEERKNS1_IT_EE: argument 0"}
!77 = distinct !{!77, !"_ZN3jxl14ConvertToFloatIhEENS_5PlaneIfEERKNS1_IT_EE"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN3jxl14ConvertToFloatIhEENS_5PlaneIfEERKNS1_IT_EE: argument 0"}
!80 = distinct !{!80, !"_ZN3jxl14ConvertToFloatIhEENS_5PlaneIfEERKNS1_IT_EE"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN3jxl14ConvertToFloatIhEENS_5PlaneIfEERKNS1_IT_EE: argument 0"}
!83 = distinct !{!83, !"_ZN3jxl14ConvertToFloatIhEENS_5PlaneIfEERKNS1_IT_EE"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN3jxl14ConvertToFloatIfEENS_5PlaneIfEERKNS1_IT_EE: argument 0"}
!86 = distinct !{!86, !"_ZN3jxl14ConvertToFloatIfEENS_5PlaneIfEERKNS1_IT_EE"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN3jxl14ConvertToFloatIfEENS_5PlaneIfEERKNS1_IT_EE: argument 0"}
!89 = distinct !{!89, !"_ZN3jxl14ConvertToFloatIfEENS_5PlaneIfEERKNS1_IT_EE"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN3jxl14ConvertToFloatIfEENS_5PlaneIfEERKNS1_IT_EE: argument 0"}
!92 = distinct !{!92, !"_ZN3jxl14ConvertToFloatIfEENS_5PlaneIfEERKNS1_IT_EE"}
!93 = distinct !{!93, !24}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZN3jxl21QuantEncodingInternal7LibraryEh: argument 0"}
!96 = distinct !{!96, !"_ZN3jxl21QuantEncodingInternal7LibraryEh"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN3jxl13QuantEncoding7LibraryEh: argument 0"}
!99 = distinct !{!99, !"_ZN3jxl13QuantEncoding7LibraryEh"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN3jxl21QuantEncodingInternal7LibraryEh: argument 0"}
!102 = distinct !{!102, !"_ZN3jxl21QuantEncodingInternal7LibraryEh"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN3jxl13QuantEncoding7LibraryEh: argument 0"}
!105 = distinct !{!105, !"_ZN3jxl13QuantEncoding7LibraryEh"}
!106 = distinct !{!106, !24}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!112 = distinct !{!112, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!124 = distinct !{!124, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!136 = distinct !{!136, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!139 = distinct !{!139, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!142 = distinct !{!142, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!145 = distinct !{!145, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!148 = distinct !{!148, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!151 = distinct !{!151, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!154 = distinct !{!154, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!157 = distinct !{!157, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!160 = distinct !{!160, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!163 = distinct !{!163, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!166 = distinct !{!166, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!169 = distinct !{!169, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!172 = distinct !{!172, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!175 = distinct !{!175, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!178 = distinct !{!178, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!181 = distinct !{!181, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!184 = distinct !{!184, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!187 = distinct !{!187, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!190 = distinct !{!190, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!193 = distinct !{!193, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!194 = !{!195}
!195 = distinct !{!195, !196, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!196 = distinct !{!196, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!197 = !{!198}
!198 = distinct !{!198, !199, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!199 = distinct !{!199, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!200 = !{!201}
!201 = distinct !{!201, !202, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!202 = distinct !{!202, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!205 = distinct !{!205, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!206 = !{!207}
!207 = distinct !{!207, !208, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!208 = distinct !{!208, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!209 = !{!210}
!210 = distinct !{!210, !211, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!211 = distinct !{!211, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!212 = !{!213}
!213 = distinct !{!213, !214, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!214 = distinct !{!214, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!215 = !{!216}
!216 = distinct !{!216, !217, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!217 = distinct !{!217, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!218 = !{!219}
!219 = distinct !{!219, !220, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!220 = distinct !{!220, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!221 = !{!222}
!222 = distinct !{!222, !223, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!223 = distinct !{!223, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!224 = !{!225}
!225 = distinct !{!225, !226, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!226 = distinct !{!226, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!227 = !{!228}
!228 = distinct !{!228, !229, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!229 = distinct !{!229, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!230 = !{!231}
!231 = distinct !{!231, !232, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!232 = distinct !{!232, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!235 = distinct !{!235, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
!236 = !{!237}
!237 = distinct !{!237, !238, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_: argument 0"}
!238 = distinct !{!238, !"_ZNSt3__110make_tupleIJRKN3jxl22PatchReferencePositionERKmS6_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS9_"}
