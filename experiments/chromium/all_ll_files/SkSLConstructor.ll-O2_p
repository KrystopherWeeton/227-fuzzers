; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLConstructor.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLConstructor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Expression"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr" }

$_ZNK4SkSL4Type9slotCountEv = comdat any

$_ZN4SkSL14AnyConstructorD2Ev = comdat any

$_ZN4SkSL14AnyConstructorD0Ev = comdat any

$_ZNK4SkSL14AnyConstructor11descriptionEv = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv = comdat any

$_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

@.str = private unnamed_addr constant [19 x i8] c"cannot construct '\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@_ZTVN4SkSL14AnyConstructorE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::AnyConstructor"*)* @_ZN4SkSL14AnyConstructorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::AnyConstructor"*)* @_ZN4SkSL14AnyConstructorD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [32 x i8] c"' is not a valid parameter to '\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"' constructor\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"invalid arguments to '\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"' constructor (expected \00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c" scalars, but found \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [3 x i8] c", \00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %class.SkSTArray, align 8
  %12 = alloca %class.SkSTArray, align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %class.SkSTArray, align 8
  %23 = alloca <2 x i64>, align 16
  %24 = alloca %class.SkSTArray, align 8
  %25 = alloca %class.SkSTArray, align 8
  %26 = alloca %class.SkSTArray, align 8
  %27 = alloca %class.SkSTArray, align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %32 = bitcast i8* %31 to %class.SkTArray*
  %33 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 4294967294
  %37 = icmp eq i64 %36, 2
  br i1 %37, label %38, label %70

38:                                               ; preds = %4
  %39 = bitcast <2 x i64>* %23 to %"struct.SkSL::StringFragment"*
  %40 = bitcast i8* %31 to %"class.std::__1::unique_ptr"**
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  %44 = bitcast %"class.SkSL::Expression"* %43 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %45 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %45, i64 3
  %47 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %46, align 8
  %48 = tail call dereferenceable(184) %"class.SkSL::Type"* %47(%"class.SkSL::Expression"* %43) #9
  %49 = bitcast <2 x i64>* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 0, i32 1, i32 0
  %51 = bitcast i8** %50 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  store <2 x i64> %52, <2 x i64>* %23, align 16
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %39, i8* %54, i64 %56) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #9
  br i1 %57, label %58, label %70

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %60 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %59, align 8
  %61 = icmp eq %"class.SkSL::Type"* %60, null
  %62 = select i1 %61, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %60
  %63 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  switch i32 %64, label %65 [
    i32 13, label %70
    i32 2, label %70
    i32 5, label %70
    i32 6, label %70
    i32 7, label %70
    i32 14, label %70
    i32 10, label %70
    i32 12, label %70
  ]

65:                                               ; preds = %58
  %66 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::unique_ptr"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %67, align 8
  br label %843

70:                                               ; preds = %58, %58, %58, %58, %58, %58, %58, %58, %38, %4
  %71 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %779 [
    i32 8, label %73
    i32 11, label %111
    i32 4, label %111
    i32 0, label %691
    i32 9, label %733
  ]

73:                                               ; preds = %70
  %74 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %24, i64 0, i32 0, i32 0, i64 16
  %75 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %24, i64 0, i32 0, i32 0, i64 0
  %76 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %24, i64 0, i32 0, i32 0, i64 24
  %77 = bitcast i8* %76 to i64*
  %78 = bitcast i8* %74 to i8**
  store i8* %75, i8** %78, align 8
  store i64 17179869184, i64* %77, align 8
  %79 = bitcast i8* %74 to %class.SkTArray*
  %80 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %79, %class.SkTArray* dereferenceable(16) %32) #9
  %81 = call %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %class.SkSTArray* nonnull %24) #9
  %82 = ptrtoint %"class.SkSL::Expression"* %81 to i64
  %83 = load i64, i64* %77, align 8
  %84 = and i64 %83, 4294967294
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %73
  %87 = bitcast i8* %74 to %"class.std::__1::unique_ptr"**
  br label %92

88:                                               ; preds = %103, %73
  %89 = phi i64 [ %83, %73 ], [ %105, %103 ]
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %843, label %109

92:                                               ; preds = %103, %86
  %93 = phi i64 [ 0, %86 ], [ %104, %103 ]
  %94 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %87, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 %93, i32 0, i32 0, i32 0
  %96 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %95, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %95, align 8
  %97 = icmp eq %"class.SkSL::Expression"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.SkSL::Expression"* %96 to void (%"class.SkSL::Expression"*)***
  %100 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %100, i64 1
  %102 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %101, align 8
  call void %102(%"class.SkSL::Expression"* nonnull %96) #9
  br label %103

103:                                              ; preds = %98, %92
  %104 = add nuw nsw i64 %93, 1
  %105 = load i64, i64* %77, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %106, 2147483647
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %92, label %88

109:                                              ; preds = %88
  %110 = load i8*, i8** %78, align 8
  call void @_Z7sk_freePv(i8* %110) #9
  br label %843

111:                                              ; preds = %70, %70
  %112 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %25, i64 0, i32 0, i32 0, i64 16
  %113 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %25, i64 0, i32 0, i32 0, i64 0
  %114 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %25, i64 0, i32 0, i32 0, i64 24
  %115 = bitcast i8* %114 to i64*
  %116 = bitcast i8* %112 to i8**
  store i8* %113, i8** %116, align 8
  store i64 17179869184, i64* %115, align 8
  %117 = bitcast i8* %112 to %class.SkTArray*
  %118 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %117, %class.SkTArray* dereferenceable(16) %32) #9
  %119 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119)
  %120 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %12, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120)
  %121 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121)
  %122 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %22, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122)
  %123 = load i64, i64* %115, align 8
  %124 = and i64 %123, 4294967294
  %125 = icmp eq i64 %124, 2
  %126 = bitcast i8* %112 to %"class.std::__1::unique_ptr"**
  br i1 %125, label %127, label %222

127:                                              ; preds = %111
  %128 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %126, align 8
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  %131 = bitcast %"class.SkSL::Expression"* %130 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %132 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %131, align 8
  %133 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %132, i64 3
  %134 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %133, align 8
  %135 = call dereferenceable(184) %"class.SkSL::Type"* %134(%"class.SkSL::Expression"* %130) #9
  %136 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %135, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 8
  br i1 %138, label %139, label %154

139:                                              ; preds = %127
  %140 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %141 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %140, align 8
  %142 = icmp eq %"class.SkSL::Type"* %141, null
  %143 = select i1 %142, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %141
  %144 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %129, align 8
  %145 = call %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %143, %"class.SkSL::Expression"* %144) #9
  %146 = load i32, i32* %71, align 8
  %147 = icmp eq i32 %146, 4
  br i1 %147, label %148, label %151

148:                                              ; preds = %139
  %149 = call %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Expression"* %145) #9
  %150 = ptrtoint %"class.SkSL::Expression"* %149 to i64
  br label %661

151:                                              ; preds = %139
  %152 = call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Expression"* %145) #9
  %153 = ptrtoint %"class.SkSL::Expression"* %152 to i64
  br label %661

154:                                              ; preds = %127
  %155 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  %156 = bitcast %"class.SkSL::Expression"* %155 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %157 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %156, align 8
  %158 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %157, i64 3
  %159 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %158, align 8
  %160 = call dereferenceable(184) %"class.SkSL::Type"* %159(%"class.SkSL::Expression"* %155) #9
  %161 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %160, i64 0, i32 3
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 11
  br i1 %163, label %164, label %183

164:                                              ; preds = %154
  %165 = load i32, i32* %71, align 8
  %166 = icmp eq i32 %165, 11
  br i1 %166, label %167, label %222

167:                                              ; preds = %164
  %168 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  %169 = bitcast %"class.SkSL::Expression"* %168 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %170 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %169, align 8
  %171 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %170, i64 3
  %172 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %171, align 8
  %173 = call dereferenceable(184) %"class.SkSL::Type"* %172(%"class.SkSL::Expression"* %168) #9
  %174 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %173, i64 0, i32 8
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %175, %177
  br i1 %178, label %179, label %222

179:                                              ; preds = %167
  %180 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %129, align 8
  %181 = call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Expression"* %180) #9
  %182 = ptrtoint %"class.SkSL::Expression"* %181 to i64
  br label %661

183:                                              ; preds = %154
  %184 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  %185 = bitcast %"class.SkSL::Expression"* %184 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %186 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %185, align 8
  %187 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %186, i64 3
  %188 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %187, align 8
  %189 = call dereferenceable(184) %"class.SkSL::Type"* %188(%"class.SkSL::Expression"* %184) #9
  %190 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %189, i64 0, i32 3
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 4
  %193 = load i32, i32* %71, align 8
  %194 = icmp eq i32 %193, 4
  %195 = and i1 %192, %194
  br i1 %195, label %196, label %222

196:                                              ; preds = %183
  %197 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %198 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %197, align 8
  %199 = icmp eq %"class.SkSL::Type"* %198, null
  %200 = select i1 %199, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %198
  %201 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  %202 = bitcast %"class.SkSL::Expression"* %201 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %203 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %202, align 8
  %204 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %203, i64 3
  %205 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %204, align 8
  %206 = call dereferenceable(184) %"class.SkSL::Type"* %205(%"class.SkSL::Expression"* %201) #9
  %207 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %206, i64 0, i32 8
  %208 = load i32, i32* %207, align 8
  %209 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  %210 = bitcast %"class.SkSL::Expression"* %209 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %211 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %210, align 8
  %212 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %211, i64 3
  %213 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %212, align 8
  %214 = call dereferenceable(184) %"class.SkSL::Type"* %213(%"class.SkSL::Expression"* %209) #9
  %215 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %214, i64 0, i32 9
  %216 = load i32, i32* %215, align 4
  %217 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %200, %"class.SkSL::Context"* dereferenceable(744) %0, i32 %208, i32 %216) #9
  %218 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %129, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %129, align 8
  %219 = call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %217, %"class.SkSL::Expression"* %218) #9
  %220 = call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorMatrixResize4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Expression"* %219) #9
  %221 = ptrtoint %"class.SkSL::Expression"* %220 to i64
  br label %661

222:                                              ; preds = %111, %183, %167, %164
  %223 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 9
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %226 = load i32, i32* %225, align 8
  %227 = mul nsw i32 %226, %224
  %228 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %126, align 8
  %229 = icmp eq %"class.std::__1::unique_ptr"* %228, null
  br i1 %229, label %503, label %230

230:                                              ; preds = %222
  %231 = load i64, i64* %115, align 8
  %232 = lshr i64 %231, 1
  %233 = and i64 %232, 2147483647
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %228, i64 %233
  %235 = icmp eq i64 %233, 0
  br i1 %235, label %503, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %238 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %11, i64 0, i32 0, i32 0, i64 0
  %239 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %11, i64 0, i32 0, i32 0, i64 16
  %240 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %11, i64 0, i32 0, i32 0, i64 24
  %241 = bitcast i8* %240 to i64*
  %242 = bitcast i8* %239 to i8**
  %243 = bitcast i8* %239 to %class.SkTArray*
  %244 = bitcast i8* %239 to %"class.std::__1::unique_ptr"**
  %245 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %12, i64 0, i32 0, i32 0, i64 16
  %246 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %12, i64 0, i32 0, i32 0, i64 24
  %247 = bitcast i8* %246 to i64*
  %248 = bitcast i8* %245 to i8**
  %249 = bitcast i8* %245 to %class.SkTArray*
  %250 = bitcast i8* %245 to %"class.std::__1::unique_ptr"**
  br label %253

251:                                              ; preds = %501
  %252 = icmp eq %"class.std::__1::unique_ptr"* %502, %234
  br i1 %252, label %503, label %253

253:                                              ; preds = %236, %251
  %254 = phi %"class.std::__1::unique_ptr"* [ %228, %236 ], [ %502, %251 ]
  %255 = phi i32 [ 0, %236 ], [ %474, %251 ]
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %254, i64 0, i32 0, i32 0, i32 0
  %257 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %256, align 8
  %258 = bitcast %"class.SkSL::Expression"* %257 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %259 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %258, align 8
  %260 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %259, i64 3
  %261 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %260, align 8
  %262 = call dereferenceable(184) %"class.SkSL::Type"* %261(%"class.SkSL::Expression"* %257) #9
  %263 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %262, i64 0, i32 3
  %264 = load i32, i32* %263, align 8
  %265 = icmp eq i32 %264, 8
  br i1 %265, label %404, label %266

266:                                              ; preds = %253
  %267 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %256, align 8
  %268 = bitcast %"class.SkSL::Expression"* %267 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %269 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %268, align 8
  %270 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %269, i64 3
  %271 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %270, align 8
  %272 = call dereferenceable(184) %"class.SkSL::Type"* %271(%"class.SkSL::Expression"* %267) #9
  %273 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %272, i64 0, i32 3
  %274 = load i32, i32* %273, align 8
  %275 = icmp eq i32 %274, 11
  br i1 %275, label %404, label %276

276:                                              ; preds = %266
  %277 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %278 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %277, align 8
  %279 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #9
  %280 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #9
  %281 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #9
  %282 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %282) #9
  %283 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %256, align 8
  %284 = bitcast %"class.SkSL::Expression"* %283 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %285 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %284, align 8
  %286 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %285, i64 3
  %287 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %286, align 8
  %288 = call dereferenceable(184) %"class.SkSL::Type"* %287(%"class.SkSL::Expression"* %283) #9
  %289 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %288, i64 0, i32 18
  %290 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %289, align 8, !noalias !2
  %291 = icmp eq %"class.SkSL::Type"* %290, null
  %292 = select i1 %291, %"class.SkSL::Type"* %288, %"class.SkSL::Type"* %290
  %293 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %292, i64 0, i32 0, i32 1, i32 0
  %294 = load i8*, i8** %293, align 8, !noalias !2
  %295 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %292, i64 0, i32 0, i32 1, i32 1
  %296 = load i64, i64* %295, align 8, !noalias !2
  %297 = icmp ugt i64 %296, -17
  br i1 %297, label %298, label %300

298:                                              ; preds = %276
  %299 = bitcast %"class.SkSL::String"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %299) #10
  unreachable

300:                                              ; preds = %276
  %301 = icmp ult i64 %296, 23
  br i1 %301, label %310, label %302

302:                                              ; preds = %300
  %303 = add nuw i64 %296, 16
  %304 = and i64 %303, -16
  %305 = call i8* @_Znwm(i64 %304) #11
  %306 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %305, i8** %306, align 8, !alias.scope !2
  %307 = or i64 %304, -9223372036854775808
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %307, i64* %308, align 8, !alias.scope !2
  %309 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %296, i64* %309, align 8, !alias.scope !2
  br label %315

310:                                              ; preds = %300
  %311 = trunc i64 %296 to i8
  %312 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %312, i64 0, i32 1, i32 0
  store i8 %311, i8* %313, align 1, !alias.scope !2
  %314 = icmp eq i64 %296, 0
  br i1 %314, label %317, label %315

315:                                              ; preds = %310, %302
  %316 = phi i8* [ %305, %302 ], [ %282, %310 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %316, i8* align 1 %294, i64 %296, i1 false) #9
  br label %317

317:                                              ; preds = %315, %310
  %318 = phi i8* [ %282, %310 ], [ %316, %315 ]
  %319 = getelementptr inbounds i8, i8* %318, i64 %296
  store i8 0, i8* %319, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %9) #9
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)) #9
  %320 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %320) #9
  %321 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %322 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %321, align 8, !noalias !5
  %323 = icmp eq %"class.SkSL::Type"* %322, null
  %324 = select i1 %323, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %322
  %325 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %324, i64 0, i32 0, i32 1, i32 0
  %326 = load i8*, i8** %325, align 8, !noalias !5
  %327 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %324, i64 0, i32 0, i32 1, i32 1
  %328 = load i64, i64* %327, align 8, !noalias !5
  %329 = icmp ugt i64 %328, -17
  br i1 %329, label %330, label %332

330:                                              ; preds = %317
  %331 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %331) #10
  unreachable

332:                                              ; preds = %317
  %333 = icmp ult i64 %328, 23
  br i1 %333, label %342, label %334

334:                                              ; preds = %332
  %335 = add nuw i64 %328, 16
  %336 = and i64 %335, -16
  %337 = call i8* @_Znwm(i64 %336) #11
  %338 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %337, i8** %338, align 8, !alias.scope !5
  %339 = or i64 %336, -9223372036854775808
  %340 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %339, i64* %340, align 8, !alias.scope !5
  %341 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %328, i64* %341, align 8, !alias.scope !5
  br label %347

342:                                              ; preds = %332
  %343 = trunc i64 %328 to i8
  %344 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %345 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %344, i64 0, i32 1, i32 0
  store i8 %343, i8* %345, align 1, !alias.scope !5
  %346 = icmp eq i64 %328, 0
  br i1 %346, label %349, label %347

347:                                              ; preds = %342, %334
  %348 = phi i8* [ %337, %334 ], [ %320, %342 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %348, i8* align 1 %326, i64 %328, i1 false) #9
  br label %349

349:                                              ; preds = %347, %342
  %350 = phi i8* [ %320, %342 ], [ %348, %347 ]
  %351 = getelementptr inbounds i8, i8* %350, i64 %328
  store i8 0, i8* %351, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #9
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #9
  %352 = bitcast %"class.SkSL::ErrorReporter"* %278 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %353 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %353, i64 2
  %355 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %354, align 8
  call void %355(%"class.SkSL::ErrorReporter"* %278, i32 %1, %"class.SkSL::String"* nonnull %5) #9
  %356 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %357 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %356, i64 0, i32 1, i32 0
  %358 = load i8, i8* %357, align 1
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %363

360:                                              ; preds = %349
  %361 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load i8*, i8** %361, align 8
  call void @_ZdlPv(i8* %362) #11
  br label %363

363:                                              ; preds = %360, %349
  %364 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %365 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %364, i64 0, i32 1, i32 0
  %366 = load i8, i8* %365, align 1
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %371

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load i8*, i8** %369, align 8
  call void @_ZdlPv(i8* %370) #11
  br label %371

371:                                              ; preds = %368, %363
  %372 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  %374 = load i8, i8* %373, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %379

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load i8*, i8** %377, align 8
  call void @_ZdlPv(i8* %378) #11
  br label %379

379:                                              ; preds = %376, %371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %320) #9
  %380 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %381 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %380, i64 0, i32 1, i32 0
  %382 = load i8, i8* %381, align 1
  %383 = icmp slt i8 %382, 0
  br i1 %383, label %384, label %387

384:                                              ; preds = %379
  %385 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load i8*, i8** %385, align 8
  call void @_ZdlPv(i8* %386) #11
  br label %387

387:                                              ; preds = %384, %379
  %388 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %389 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %388, i64 0, i32 1, i32 0
  %390 = load i8, i8* %389, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %395

392:                                              ; preds = %387
  %393 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load i8*, i8** %393, align 8
  call void @_ZdlPv(i8* %394) #11
  br label %395

395:                                              ; preds = %392, %387
  %396 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %397 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %396, i64 0, i32 1, i32 0
  %398 = load i8, i8* %397, align 1
  %399 = icmp slt i8 %398, 0
  br i1 %399, label %400, label %403

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load i8*, i8** %401, align 8
  call void @_ZdlPv(i8* %402) #11
  br label %403

403:                                              ; preds = %395, %400
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %282) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #9
  br label %661

404:                                              ; preds = %266, %253
  %405 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %256, align 8
  %406 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %405, i64 0, i32 0, i32 1
  %407 = load i32, i32* %406, align 8
  %408 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %237, align 8
  %409 = icmp eq %"class.SkSL::Type"* %408, null
  %410 = select i1 %409, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %408
  %411 = bitcast %"class.SkSL::Expression"* %405 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %412 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %411, align 8
  %413 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %412, i64 3
  %414 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %413, align 8
  %415 = call dereferenceable(184) %"class.SkSL::Type"* %414(%"class.SkSL::Expression"* %405) #9
  %416 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %415, i64 0, i32 8
  %417 = load i32, i32* %416, align 8
  %418 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %410, %"class.SkSL::Context"* dereferenceable(744) %0, i32 %417, i32 1) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %238) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 -86, i64 16, i1 false)
  store i8* %238, i8** %242, align 8
  store i64 17179869184, i64* %241, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %243, i32 1, i32 1) #9
  %419 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %244, align 8
  %420 = load i64, i64* %241, align 8
  %421 = lshr i64 %420, 1
  %422 = and i64 %421, 2147483647
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %419, i64 %422
  %424 = add i64 %420, 2
  %425 = and i64 %424, 4294967294
  %426 = and i64 %420, -4294967295
  %427 = or i64 %425, %426
  store i64 %427, i64* %241, align 8
  %428 = bitcast %"class.std::__1::unique_ptr"* %254 to i64*
  %429 = load i64, i64* %428, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %256, align 8
  %430 = bitcast %"class.std::__1::unique_ptr"* %423 to i64*
  store i64 %429, i64* %430, align 8
  store i8* %120, i8** %248, align 8
  store i64 17179869184, i64* %247, align 8
  %431 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %249, %class.SkTArray* dereferenceable(16) %243) #9
  %432 = call %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %407, %"class.SkSL::Type"* dereferenceable(184) %418, %class.SkSTArray* nonnull %12) #9
  %433 = ptrtoint %"class.SkSL::Expression"* %432 to i64
  %434 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %256, align 8
  store i64 %433, i64* %428, align 8
  %435 = icmp eq %"class.SkSL::Expression"* %434, null
  br i1 %435, label %441, label %436

436:                                              ; preds = %404
  %437 = bitcast %"class.SkSL::Expression"* %434 to void (%"class.SkSL::Expression"*)***
  %438 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %437, align 8
  %439 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %438, i64 1
  %440 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %439, align 8
  call void %440(%"class.SkSL::Expression"* nonnull %434) #9
  br label %441

441:                                              ; preds = %404, %436
  %442 = load i64, i64* %247, align 8
  %443 = and i64 %442, 4294967294
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %449

445:                                              ; preds = %460, %441
  %446 = phi i64 [ %442, %441 ], [ %462, %460 ]
  %447 = and i64 %446, 1
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %468, label %466

449:                                              ; preds = %441, %460
  %450 = phi i64 [ %461, %460 ], [ 0, %441 ]
  %451 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %250, align 8
  %452 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %451, i64 %450, i32 0, i32 0, i32 0
  %453 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %452, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %452, align 8
  %454 = icmp eq %"class.SkSL::Expression"* %453, null
  br i1 %454, label %460, label %455

455:                                              ; preds = %449
  %456 = bitcast %"class.SkSL::Expression"* %453 to void (%"class.SkSL::Expression"*)***
  %457 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %456, align 8
  %458 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %457, i64 1
  %459 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %458, align 8
  call void %459(%"class.SkSL::Expression"* nonnull %453) #9
  br label %460

460:                                              ; preds = %455, %449
  %461 = add nuw nsw i64 %450, 1
  %462 = load i64, i64* %247, align 8
  %463 = lshr i64 %462, 1
  %464 = and i64 %463, 2147483647
  %465 = icmp ult i64 %461, %464
  br i1 %465, label %449, label %445

466:                                              ; preds = %445
  %467 = load i8*, i8** %248, align 8
  call void @_Z7sk_freePv(i8* %467) #9
  br label %468

468:                                              ; preds = %466, %445
  %469 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %256, align 8
  %470 = icmp ne %"class.SkSL::Expression"* %469, null
  %471 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %418, i64 0, i32 8
  %472 = load i32, i32* %471, align 8
  %473 = select i1 %470, i32 %472, i32 0
  %474 = add nsw i32 %473, %255
  %475 = load i64, i64* %241, align 8
  %476 = and i64 %475, 4294967294
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %478, label %482

478:                                              ; preds = %493, %468
  %479 = phi i64 [ %475, %468 ], [ %495, %493 ]
  %480 = and i64 %479, 1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %501, label %499

482:                                              ; preds = %468, %493
  %483 = phi i64 [ %494, %493 ], [ 0, %468 ]
  %484 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %244, align 8
  %485 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %484, i64 %483, i32 0, i32 0, i32 0
  %486 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %485, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %485, align 8
  %487 = icmp eq %"class.SkSL::Expression"* %486, null
  br i1 %487, label %493, label %488

488:                                              ; preds = %482
  %489 = bitcast %"class.SkSL::Expression"* %486 to void (%"class.SkSL::Expression"*)***
  %490 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %489, align 8
  %491 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %490, i64 1
  %492 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %491, align 8
  call void %492(%"class.SkSL::Expression"* nonnull %486) #9
  br label %493

493:                                              ; preds = %488, %482
  %494 = add nuw nsw i64 %483, 1
  %495 = load i64, i64* %241, align 8
  %496 = lshr i64 %495, 1
  %497 = and i64 %496, 2147483647
  %498 = icmp ult i64 %494, %497
  br i1 %498, label %482, label %478

499:                                              ; preds = %478
  %500 = load i8*, i8** %242, align 8
  call void @_Z7sk_freePv(i8* %500) #9
  br label %501

501:                                              ; preds = %478, %499
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %238) #9
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %254, i64 1
  br i1 %470, label %251, label %661

503:                                              ; preds = %251, %222, %230
  %504 = phi i32 [ 0, %230 ], [ 0, %222 ], [ %474, %251 ]
  %505 = icmp eq i32 %504, %227
  br i1 %505, label %624, label %506

506:                                              ; preds = %503
  %507 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %508 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %507, align 8
  %509 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %509) #9
  %510 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %510) #9
  %511 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %511) #9
  %512 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %512) #9
  %513 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %513) #9
  %514 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #9
  %515 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %516 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %515, align 8, !noalias !8
  %517 = icmp eq %"class.SkSL::Type"* %516, null
  %518 = select i1 %517, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %516
  %519 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %518, i64 0, i32 0, i32 1, i32 0
  %520 = load i8*, i8** %519, align 8, !noalias !8
  %521 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %518, i64 0, i32 0, i32 1, i32 1
  %522 = load i64, i64* %521, align 8, !noalias !8
  %523 = icmp ugt i64 %522, -17
  br i1 %523, label %524, label %526

524:                                              ; preds = %506
  %525 = bitcast %"class.SkSL::String"* %19 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %525) #10
  unreachable

526:                                              ; preds = %506
  %527 = icmp ult i64 %522, 23
  br i1 %527, label %536, label %528

528:                                              ; preds = %526
  %529 = add nuw i64 %522, 16
  %530 = and i64 %529, -16
  %531 = call i8* @_Znwm(i64 %530) #11
  %532 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %531, i8** %532, align 8, !alias.scope !8
  %533 = or i64 %530, -9223372036854775808
  %534 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %533, i64* %534, align 8, !alias.scope !8
  %535 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %522, i64* %535, align 8, !alias.scope !8
  br label %541

536:                                              ; preds = %526
  %537 = trunc i64 %522 to i8
  %538 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %539 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %538, i64 0, i32 1, i32 0
  store i8 %537, i8* %539, align 1, !alias.scope !8
  %540 = icmp eq i64 %522, 0
  br i1 %540, label %543, label %541

541:                                              ; preds = %536, %528
  %542 = phi i8* [ %531, %528 ], [ %514, %536 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %542, i8* align 1 %520, i64 %522, i1 false) #9
  br label %543

543:                                              ; preds = %541, %536
  %544 = phi i8* [ %514, %536 ], [ %542, %541 ]
  %545 = getelementptr inbounds i8, i8* %544, i64 %522
  store i8 0, i8* %545, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %19) #9
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::String"* nonnull %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)) #9
  %546 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %546) #9
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %20, i32 %227) #9
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, %"class.SkSL::String"* nonnull dereferenceable(24) %20) #9
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #9
  %547 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %547) #9
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %21, i32 %504) #9
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, %"class.SkSL::String"* nonnull dereferenceable(24) %21) #9
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #9
  %548 = bitcast %"class.SkSL::ErrorReporter"* %508 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %549 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %548, align 8
  %550 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %549, i64 2
  %551 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %550, align 8
  call void %551(%"class.SkSL::ErrorReporter"* %508, i32 %1, %"class.SkSL::String"* nonnull %13) #9
  %552 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %553 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %552, i64 0, i32 1, i32 0
  %554 = load i8, i8* %553, align 1
  %555 = icmp slt i8 %554, 0
  br i1 %555, label %556, label %559

556:                                              ; preds = %543
  %557 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load i8*, i8** %557, align 8
  call void @_ZdlPv(i8* %558) #11
  br label %559

559:                                              ; preds = %556, %543
  %560 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %561 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %560, i64 0, i32 1, i32 0
  %562 = load i8, i8* %561, align 1
  %563 = icmp slt i8 %562, 0
  br i1 %563, label %564, label %567

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load i8*, i8** %565, align 8
  call void @_ZdlPv(i8* %566) #11
  br label %567

567:                                              ; preds = %564, %559
  %568 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %569 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %568, i64 0, i32 1, i32 0
  %570 = load i8, i8* %569, align 1
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %567
  %573 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load i8*, i8** %573, align 8
  call void @_ZdlPv(i8* %574) #11
  br label %575

575:                                              ; preds = %572, %567
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %547) #9
  %576 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %577 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %576, i64 0, i32 1, i32 0
  %578 = load i8, i8* %577, align 1
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %583

580:                                              ; preds = %575
  %581 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %582 = load i8*, i8** %581, align 8
  call void @_ZdlPv(i8* %582) #11
  br label %583

583:                                              ; preds = %580, %575
  %584 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %585 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %584, i64 0, i32 1, i32 0
  %586 = load i8, i8* %585, align 1
  %587 = icmp slt i8 %586, 0
  br i1 %587, label %588, label %591

588:                                              ; preds = %583
  %589 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %590 = load i8*, i8** %589, align 8
  call void @_ZdlPv(i8* %590) #11
  br label %591

591:                                              ; preds = %588, %583
  %592 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %593 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %592, i64 0, i32 1, i32 0
  %594 = load i8, i8* %593, align 1
  %595 = icmp slt i8 %594, 0
  br i1 %595, label %596, label %599

596:                                              ; preds = %591
  %597 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %598 = load i8*, i8** %597, align 8
  call void @_ZdlPv(i8* %598) #11
  br label %599

599:                                              ; preds = %596, %591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %546) #9
  %600 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %601 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %600, i64 0, i32 1, i32 0
  %602 = load i8, i8* %601, align 1
  %603 = icmp slt i8 %602, 0
  br i1 %603, label %604, label %607

604:                                              ; preds = %599
  %605 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %606 = load i8*, i8** %605, align 8
  call void @_ZdlPv(i8* %606) #11
  br label %607

607:                                              ; preds = %604, %599
  %608 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %609 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %608, i64 0, i32 1, i32 0
  %610 = load i8, i8* %609, align 1
  %611 = icmp slt i8 %610, 0
  br i1 %611, label %612, label %615

612:                                              ; preds = %607
  %613 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = load i8*, i8** %613, align 8
  call void @_ZdlPv(i8* %614) #11
  br label %615

615:                                              ; preds = %612, %607
  %616 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %617 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %616, i64 0, i32 1, i32 0
  %618 = load i8, i8* %617, align 1
  %619 = icmp slt i8 %618, 0
  br i1 %619, label %620, label %623

620:                                              ; preds = %615
  %621 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %622 = load i8*, i8** %621, align 8
  call void @_ZdlPv(i8* %622) #11
  br label %623

623:                                              ; preds = %620, %615
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %513) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %512) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %511) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %510) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %509) #9
  br label %661

624:                                              ; preds = %503
  %625 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %22, i64 0, i32 0, i32 0, i64 16
  %626 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %22, i64 0, i32 0, i32 0, i64 24
  %627 = bitcast i8* %626 to i64*
  %628 = bitcast i8* %625 to i8**
  store i8* %122, i8** %628, align 8
  store i64 17179869184, i64* %627, align 8
  %629 = bitcast i8* %625 to %class.SkTArray*
  %630 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %629, %class.SkTArray* dereferenceable(16) %117) #9
  %631 = call %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %class.SkSTArray* nonnull %22) #9
  %632 = ptrtoint %"class.SkSL::Expression"* %631 to i64
  %633 = load i64, i64* %627, align 8
  %634 = and i64 %633, 4294967294
  %635 = icmp eq i64 %634, 0
  br i1 %635, label %638, label %636

636:                                              ; preds = %624
  %637 = bitcast i8* %625 to %"class.std::__1::unique_ptr"**
  br label %642

638:                                              ; preds = %653, %624
  %639 = phi i64 [ %633, %624 ], [ %655, %653 ]
  %640 = and i64 %639, 1
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %661, label %659

642:                                              ; preds = %653, %636
  %643 = phi i64 [ 0, %636 ], [ %654, %653 ]
  %644 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %637, align 8
  %645 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %644, i64 %643, i32 0, i32 0, i32 0
  %646 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %645, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %645, align 8
  %647 = icmp eq %"class.SkSL::Expression"* %646, null
  br i1 %647, label %653, label %648

648:                                              ; preds = %642
  %649 = bitcast %"class.SkSL::Expression"* %646 to void (%"class.SkSL::Expression"*)***
  %650 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %649, align 8
  %651 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %650, i64 1
  %652 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %651, align 8
  call void %652(%"class.SkSL::Expression"* nonnull %646) #9
  br label %653

653:                                              ; preds = %648, %642
  %654 = add nuw nsw i64 %643, 1
  %655 = load i64, i64* %627, align 8
  %656 = lshr i64 %655, 1
  %657 = and i64 %656, 2147483647
  %658 = icmp ult i64 %654, %657
  br i1 %658, label %642, label %638

659:                                              ; preds = %638
  %660 = load i8*, i8** %628, align 8
  call void @_Z7sk_freePv(i8* %660) #9
  br label %661

661:                                              ; preds = %501, %403, %638, %659, %151, %148, %179, %196, %623
  %662 = phi i64 [ %182, %179 ], [ 0, %623 ], [ %221, %196 ], [ %150, %148 ], [ %153, %151 ], [ %632, %659 ], [ %632, %638 ], [ 0, %403 ], [ 0, %501 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122)
  %663 = load i64, i64* %115, align 8
  %664 = and i64 %663, 4294967294
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %668, label %666

666:                                              ; preds = %661
  %667 = bitcast i8* %112 to %"class.std::__1::unique_ptr"**
  br label %672

668:                                              ; preds = %683, %661
  %669 = phi i64 [ %663, %661 ], [ %685, %683 ]
  %670 = and i64 %669, 1
  %671 = icmp eq i64 %670, 0
  br i1 %671, label %843, label %689

672:                                              ; preds = %683, %666
  %673 = phi i64 [ 0, %666 ], [ %684, %683 ]
  %674 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %667, align 8
  %675 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %674, i64 %673, i32 0, i32 0, i32 0
  %676 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %675, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %675, align 8
  %677 = icmp eq %"class.SkSL::Expression"* %676, null
  br i1 %677, label %683, label %678

678:                                              ; preds = %672
  %679 = bitcast %"class.SkSL::Expression"* %676 to void (%"class.SkSL::Expression"*)***
  %680 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %679, align 8
  %681 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %680, i64 1
  %682 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %681, align 8
  call void %682(%"class.SkSL::Expression"* nonnull %676) #9
  br label %683

683:                                              ; preds = %678, %672
  %684 = add nuw nsw i64 %673, 1
  %685 = load i64, i64* %115, align 8
  %686 = lshr i64 %685, 1
  %687 = and i64 %686, 2147483647
  %688 = icmp ult i64 %684, %687
  br i1 %688, label %672, label %668

689:                                              ; preds = %668
  %690 = load i8*, i8** %116, align 8
  call void @_Z7sk_freePv(i8* %690) #9
  br label %843

691:                                              ; preds = %70
  %692 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %693 = load i32, i32* %692, align 8
  %694 = icmp sgt i32 %693, 0
  br i1 %694, label %695, label %779

695:                                              ; preds = %691
  %696 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %26, i64 0, i32 0, i32 0, i64 16
  %697 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %26, i64 0, i32 0, i32 0, i64 0
  %698 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %26, i64 0, i32 0, i32 0, i64 24
  %699 = bitcast i8* %698 to i64*
  %700 = bitcast i8* %696 to i8**
  store i8* %697, i8** %700, align 8
  store i64 17179869184, i64* %699, align 8
  %701 = bitcast i8* %696 to %class.SkTArray*
  %702 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %701, %class.SkTArray* dereferenceable(16) %32) #9
  %703 = call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %class.SkSTArray* nonnull %26) #9
  %704 = ptrtoint %"class.SkSL::Expression"* %703 to i64
  %705 = load i64, i64* %699, align 8
  %706 = and i64 %705, 4294967294
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %710, label %708

708:                                              ; preds = %695
  %709 = bitcast i8* %696 to %"class.std::__1::unique_ptr"**
  br label %714

710:                                              ; preds = %725, %695
  %711 = phi i64 [ %705, %695 ], [ %727, %725 ]
  %712 = and i64 %711, 1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %843, label %731

714:                                              ; preds = %725, %708
  %715 = phi i64 [ 0, %708 ], [ %726, %725 ]
  %716 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %709, align 8
  %717 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %716, i64 %715, i32 0, i32 0, i32 0
  %718 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %717, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %717, align 8
  %719 = icmp eq %"class.SkSL::Expression"* %718, null
  br i1 %719, label %725, label %720

720:                                              ; preds = %714
  %721 = bitcast %"class.SkSL::Expression"* %718 to void (%"class.SkSL::Expression"*)***
  %722 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %721, align 8
  %723 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %722, i64 1
  %724 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %723, align 8
  call void %724(%"class.SkSL::Expression"* nonnull %718) #9
  br label %725

725:                                              ; preds = %720, %714
  %726 = add nuw nsw i64 %715, 1
  %727 = load i64, i64* %699, align 8
  %728 = lshr i64 %727, 1
  %729 = and i64 %728, 2147483647
  %730 = icmp ult i64 %726, %729
  br i1 %730, label %714, label %710

731:                                              ; preds = %710
  %732 = load i8*, i8** %700, align 8
  call void @_Z7sk_freePv(i8* %732) #9
  br label %843

733:                                              ; preds = %70
  %734 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 10
  %735 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 10, i32 0, i32 1
  %736 = bitcast %"struct.SkSL::Type::Field"** %735 to i64*
  %737 = load i64, i64* %736, align 8
  %738 = bitcast %"class.std::__1::vector.8"* %734 to i64*
  %739 = load i64, i64* %738, align 8
  %740 = icmp eq i64 %737, %739
  br i1 %740, label %779, label %741

741:                                              ; preds = %733
  %742 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %27, i64 0, i32 0, i32 0, i64 16
  %743 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %27, i64 0, i32 0, i32 0, i64 0
  %744 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %27, i64 0, i32 0, i32 0, i64 24
  %745 = bitcast i8* %744 to i64*
  %746 = bitcast i8* %742 to i8**
  store i8* %743, i8** %746, align 8
  store i64 17179869184, i64* %745, align 8
  %747 = bitcast i8* %742 to %class.SkTArray*
  %748 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %747, %class.SkTArray* dereferenceable(16) %32) #9
  %749 = call %"class.SkSL::Expression"* @_ZN4SkSL17ConstructorStruct7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %class.SkSTArray* nonnull %27) #9
  %750 = ptrtoint %"class.SkSL::Expression"* %749 to i64
  %751 = load i64, i64* %745, align 8
  %752 = and i64 %751, 4294967294
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %756, label %754

754:                                              ; preds = %741
  %755 = bitcast i8* %742 to %"class.std::__1::unique_ptr"**
  br label %760

756:                                              ; preds = %771, %741
  %757 = phi i64 [ %751, %741 ], [ %773, %771 ]
  %758 = and i64 %757, 1
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %843, label %777

760:                                              ; preds = %771, %754
  %761 = phi i64 [ 0, %754 ], [ %772, %771 ]
  %762 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %755, align 8
  %763 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %762, i64 %761, i32 0, i32 0, i32 0
  %764 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %763, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %763, align 8
  %765 = icmp eq %"class.SkSL::Expression"* %764, null
  br i1 %765, label %771, label %766

766:                                              ; preds = %760
  %767 = bitcast %"class.SkSL::Expression"* %764 to void (%"class.SkSL::Expression"*)***
  %768 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %767, align 8
  %769 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %768, i64 1
  %770 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %769, align 8
  call void %770(%"class.SkSL::Expression"* nonnull %764) #9
  br label %771

771:                                              ; preds = %766, %760
  %772 = add nuw nsw i64 %761, 1
  %773 = load i64, i64* %745, align 8
  %774 = lshr i64 %773, 1
  %775 = and i64 %774, 2147483647
  %776 = icmp ult i64 %772, %775
  br i1 %776, label %760, label %756

777:                                              ; preds = %756
  %778 = load i8*, i8** %746, align 8
  call void @_Z7sk_freePv(i8* %778) #9
  br label %843

779:                                              ; preds = %70, %691, %733
  %780 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %781 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %780, align 8
  %782 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %782) #9
  %783 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %783) #9
  %784 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %785 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %784, align 8, !noalias !11
  %786 = icmp eq %"class.SkSL::Type"* %785, null
  %787 = select i1 %786, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %785
  %788 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %787, i64 0, i32 0, i32 1, i32 0
  %789 = load i8*, i8** %788, align 8, !noalias !11
  %790 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %787, i64 0, i32 0, i32 1, i32 1
  %791 = load i64, i64* %790, align 8, !noalias !11
  %792 = icmp ugt i64 %791, -17
  br i1 %792, label %793, label %795

793:                                              ; preds = %779
  %794 = bitcast %"class.SkSL::String"* %30 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %794) #10
  unreachable

795:                                              ; preds = %779
  %796 = icmp ult i64 %791, 23
  br i1 %796, label %805, label %797

797:                                              ; preds = %795
  %798 = add nuw i64 %791, 16
  %799 = and i64 %798, -16
  %800 = call i8* @_Znwm(i64 %799) #11
  %801 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %800, i8** %801, align 8, !alias.scope !11
  %802 = or i64 %799, -9223372036854775808
  %803 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %802, i64* %803, align 8, !alias.scope !11
  %804 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %791, i64* %804, align 8, !alias.scope !11
  br label %810

805:                                              ; preds = %795
  %806 = trunc i64 %791 to i8
  %807 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %807, i64 0, i32 1, i32 0
  store i8 %806, i8* %808, align 1, !alias.scope !11
  %809 = icmp eq i64 %791, 0
  br i1 %809, label %812, label %810

810:                                              ; preds = %805, %797
  %811 = phi i8* [ %800, %797 ], [ %783, %805 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %811, i8* align 1 %789, i64 %791, i1 false) #9
  br label %812

812:                                              ; preds = %805, %810
  %813 = phi i8* [ %783, %805 ], [ %811, %810 ]
  %814 = getelementptr inbounds i8, i8* %813, i64 %791
  store i8 0, i8* %814, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %29, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %30) #9
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9
  %815 = bitcast %"class.SkSL::ErrorReporter"* %781 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %816 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %815, align 8
  %817 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %816, i64 2
  %818 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %817, align 8
  call void %818(%"class.SkSL::ErrorReporter"* %781, i32 %1, %"class.SkSL::String"* nonnull %28) #9
  %819 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %820 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %819, i64 0, i32 1, i32 0
  %821 = load i8, i8* %820, align 1
  %822 = icmp slt i8 %821, 0
  br i1 %822, label %823, label %826

823:                                              ; preds = %812
  %824 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %825 = load i8*, i8** %824, align 8
  call void @_ZdlPv(i8* %825) #11
  br label %826

826:                                              ; preds = %812, %823
  %827 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %828 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %827, i64 0, i32 1, i32 0
  %829 = load i8, i8* %828, align 1
  %830 = icmp slt i8 %829, 0
  br i1 %830, label %831, label %834

831:                                              ; preds = %826
  %832 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %833 = load i8*, i8** %832, align 8
  call void @_ZdlPv(i8* %833) #11
  br label %834

834:                                              ; preds = %826, %831
  %835 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %836 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %835, i64 0, i32 1, i32 0
  %837 = load i8, i8* %836, align 1
  %838 = icmp slt i8 %837, 0
  br i1 %838, label %839, label %842

839:                                              ; preds = %834
  %840 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %841 = load i8*, i8** %840, align 8
  call void @_ZdlPv(i8* %841) #11
  br label %842

842:                                              ; preds = %834, %839
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %783) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %782) #9
  br label %843

843:                                              ; preds = %777, %756, %731, %710, %689, %668, %109, %88, %842, %65
  %844 = phi i64 [ 0, %842 ], [ %69, %65 ], [ %82, %88 ], [ %82, %109 ], [ %662, %668 ], [ %662, %689 ], [ %704, %710 ], [ %704, %731 ], [ %750, %756 ], [ %750, %777 ]
  %845 = inttoptr i64 %844 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %845
}

declare %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL17ConstructorStruct7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi(%"class.SkSL::AnyConstructor"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %4 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %3, align 8
  %5 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, i64 12
  %6 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, align 8
  %7 = tail call { %"class.std::__1::unique_ptr"*, i64 } %6(%"class.SkSL::AnyConstructor"* %0) #9
  %8 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %7, 0
  %9 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %7, 1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %9
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %2, %25
  %13 = phi %"class.std::__1::unique_ptr"* [ %27, %25 ], [ %8, %2 ]
  %14 = phi i32 [ %26, %25 ], [ %1, %2 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::Expression"* %16 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %18 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %18, i64 3
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call dereferenceable(184) %"class.SkSL::Type"* %20(%"class.SkSL::Expression"* %16) #9
  %22 = tail call i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"* %21)
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %14, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %12
  %26 = sub nsw i32 %14, %23
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 1
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, %10
  br i1 %28, label %37, label %12

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %30, align 8
  %32 = bitcast %"class.SkSL::Expression"* %31 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)***
  %33 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)** %33, i64 9
  %35 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)** %34, align 8
  %36 = tail call %"class.SkSL::Expression"* %35(%"class.SkSL::Expression"* %31, i32 %14) #9
  br label %37

37:                                               ; preds = %25, %2, %29
  %38 = phi %"class.SkSL::Expression"* [ %36, %29 ], [ null, %2 ], [ null, %25 ]
  ret %"class.SkSL::Expression"* %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %41 [
    i32 13, label %42
    i32 2, label %42
    i32 3, label %42
    i32 5, label %42
    i32 6, label %42
    i32 7, label %42
    i32 14, label %42
    i32 10, label %42
    i32 12, label %42
    i32 8, label %4
    i32 1, label %4
    i32 11, label %5
    i32 4, label %9
    i32 9, label %16
    i32 0, label %31
  ]

4:                                                ; preds = %1, %1
  br label %42

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  br label %42

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, %11
  %15 = sext i32 %14 to i64
  br label %42

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %18 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %20 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %19, align 8
  %21 = icmp eq %"struct.SkSL::Type::Field"* %18, %20
  br i1 %21, label %42, label %22

22:                                               ; preds = %16, %22
  %23 = phi i64 [ %28, %22 ], [ 0, %16 ]
  %24 = phi %"struct.SkSL::Type::Field"* [ %29, %22 ], [ %18, %16 ]
  %25 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %24, i64 0, i32 2
  %26 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %25, align 8
  %27 = tail call i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"* %26)
  %28 = add i64 %27, %23
  %29 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %24, i64 1
  %30 = icmp eq %"struct.SkSL::Type::Field"* %29, %20
  br i1 %30, label %42, label %22

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 6
  %36 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %35, align 8
  %37 = icmp eq %"class.SkSL::Type"* %36, null
  %38 = select i1 %37, %"class.SkSL::Type"* %0, %"class.SkSL::Type"* %36
  %39 = tail call i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"* %38)
  %40 = mul i64 %39, %34
  ret i64 %40

41:                                               ; preds = %1
  tail call void @llvm.trap()
  unreachable

42:                                               ; preds = %22, %16, %1, %1, %1, %1, %1, %1, %1, %1, %1, %9, %5, %4
  %43 = phi i64 [ %15, %9 ], [ %8, %5 ], [ 1, %4 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %16 ], [ %28, %22 ]
  ret i64 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE(%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %0, i64 0, i32 0
  %4 = bitcast %"class.SkSL::AnyConstructor"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %5 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, i64 3
  %7 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %6, align 8
  %8 = tail call dereferenceable(184) %"class.SkSL::Type"* %7(%"class.SkSL::Expression"* %3) #9
  %9 = tail call i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"* %8)
  %10 = trunc i64 %9 to i32
  %11 = bitcast %"class.SkSL::AnyConstructor"* %0 to %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)***
  %12 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)***
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %16, label %37

14:                                               ; preds = %29
  %15 = icmp eq i32 %36, %10
  br i1 %15, label %37, label %16

16:                                               ; preds = %2, %14
  %17 = phi i32 [ %36, %14 ], [ 0, %2 ]
  %18 = load %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)**, %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)*** %11, align 8
  %19 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)** %18, i64 9
  %20 = load %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)** %19, align 8
  %21 = tail call %"class.SkSL::Expression"* %20(%"class.SkSL::AnyConstructor"* %0, i32 %17) #9
  %22 = icmp eq %"class.SkSL::Expression"* %21, null
  br i1 %22, label %37, label %23

23:                                               ; preds = %16
  %24 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*** %12, align 8
  %25 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)** %24, i64 9
  %26 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)** %25, align 8
  %27 = tail call %"class.SkSL::Expression"* %26(%"class.SkSL::Expression"* %1, i32 %17) #9
  %28 = icmp eq %"class.SkSL::Expression"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.SkSL::Expression"* %21 to i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)***
  %31 = load i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)**, i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)*, i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)** %31, i64 5
  %33 = load i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)*, i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)** %32, align 8
  %34 = tail call i32 %33(%"class.SkSL::Expression"* nonnull %21, %"class.SkSL::Expression"* nonnull dereferenceable(24) %27) #9
  %35 = icmp eq i32 %34, 1
  %36 = add nuw nsw i32 %17, 1
  br i1 %35, label %14, label %37

37:                                               ; preds = %29, %23, %16, %14, %2
  %38 = phi i32 [ 1, %2 ], [ -1, %16 ], [ -1, %23 ], [ 1, %14 ], [ %34, %29 ]
  ret i32 %38
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZN4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* readnone) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::AnyConstructor"*
  ret %"class.SkSL::AnyConstructor"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* readnone) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::AnyConstructor"*
  ret %"class.SkSL::AnyConstructor"* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14AnyConstructorD2Ev(%"class.SkSL::AnyConstructor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14AnyConstructorD0Ev(%"class.SkSL::AnyConstructor"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14AnyConstructor11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  %6 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %7 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %8 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #9
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 18
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8, !noalias !14
  %15 = icmp eq %"class.SkSL::Type"* %14, null
  %16 = select i1 %15, %"class.SkSL::Type"* %12, %"class.SkSL::Type"* %14
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !14
  %19 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !14
  %21 = icmp ugt i64 %20, -17
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %23) #10
  unreachable

24:                                               ; preds = %2
  %25 = icmp ult i64 %20, 23
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = add nuw i64 %20, 16
  %28 = and i64 %27, -16
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8, !alias.scope !14
  %31 = or i64 %28, -9223372036854775808
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %31, i64* %32, align 8, !alias.scope !14
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %33, align 8, !alias.scope !14
  %34 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %40

35:                                               ; preds = %24
  %36 = trunc i64 %20 to i8
  %37 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1, !alias.scope !14
  %39 = icmp eq i64 %20, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35, %26
  %41 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %34, %26 ]
  %42 = phi i8* [ %5, %35 ], [ %29, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %18, i64 %20, i1 false) #9
  br label %43

43:                                               ; preds = %35, %40
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %41, %40 ]
  %45 = phi i8* [ %5, %35 ], [ %42, %40 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %20
  store i8 0, i8* %46, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #9
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %43, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  %54 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %55 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %54, align 8
  %56 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %55, i64 12
  %57 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %56, align 8
  %58 = call { %"class.std::__1::unique_ptr"*, i64 } %57(%"class.SkSL::AnyConstructor"* %1) #9
  %59 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %58, 0
  %60 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %58, 1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %84, label %63

63:                                               ; preds = %53
  %64 = bitcast %"class.SkSL::String"* %4 to i8*
  %65 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #9
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %70, i64 0, i32 0
  %72 = bitcast %"class.SkSL::Expression"* %70 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %73 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %73, i64 2
  %75 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %74, align 8
  call void %75(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %71) #9
  %76 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #9
  %77 = load i8, i8* %66, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %63
  %80 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %79, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #9
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %83 = icmp eq i64 %60, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %81, %101, %53
  %85 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #9
  ret void

86:                                               ; preds = %81, %101
  %87 = phi %"class.std::__1::unique_ptr"* [ %102, %101 ], [ %82, %81 ]
  %88 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #9
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %89, align 8
  %91 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %90, i64 0, i32 0
  %92 = bitcast %"class.SkSL::Expression"* %90 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %93 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %93, i64 2
  %95 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %94, align 8
  call void %95(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %91) #9
  %96 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #9
  %97 = load i8, i8* %66, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %86
  %100 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %86, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #9
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr"* %102, %61
  br i1 %103, label %84, label %86, !llvm.loop !19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv(%"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %3 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %2, align 8
  %4 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %3, i64 12
  %5 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, align 8
  %6 = tail call { %"class.std::__1::unique_ptr"*, i64 } %5(%"class.SkSL::AnyConstructor"* %0) #9
  %7 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 0
  %8 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %23, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.std::__1::unique_ptr"* %22, %9
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.std::__1::unique_ptr"* [ %22, %11 ], [ %7, %1 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::Expression"* %16 to i1 (%"class.SkSL::Expression"*)***
  %18 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %18, i64 4
  %20 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.SkSL::Expression"* %16) #9
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br i1 %21, label %11, label %23

23:                                               ; preds = %13, %11, %1
  %24 = phi i1 [ true, %1 ], [ true, %11 ], [ false, %13 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv(%"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %3 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %2, align 8
  %4 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %3, i64 12
  %5 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, align 8
  %6 = tail call { %"class.std::__1::unique_ptr"*, i64 } %5(%"class.SkSL::AnyConstructor"* %0) #9
  %7 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 0
  %8 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %23, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.std::__1::unique_ptr"* %22, %9
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.std::__1::unique_ptr"* [ %22, %11 ], [ %7, %1 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::Expression"* %16 to i1 (%"class.SkSL::Expression"*)***
  %18 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %18, i64 6
  %20 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.SkSL::Expression"* %16) #9
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br i1 %21, label %11, label %23

23:                                               ; preds = %13, %11, %1
  %24 = phi i1 [ true, %1 ], [ true, %11 ], [ false, %13 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::AnyConstructor"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %4 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %3, align 8
  %5 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, i64 12
  %6 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, align 8
  %7 = tail call { %"class.std::__1::unique_ptr"*, i64 } %6(%"class.SkSL::AnyConstructor"* %0) #9
  %8 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %7, 0
  %9 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %7, 1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %9
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %24, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.std::__1::unique_ptr"* %23, %10
  br i1 %13, label %24, label %14

14:                                               ; preds = %2, %12
  %15 = phi %"class.std::__1::unique_ptr"* [ %23, %12 ], [ %8, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %18 = bitcast %"class.SkSL::Expression"* %17 to i1 (%"class.SkSL::Expression"*, i32)***
  %19 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %19, i64 7
  %21 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.SkSL::Expression"* %17, i32 %1) #9
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  br i1 %22, label %24, label %12

24:                                               ; preds = %12, %14, %2
  %25 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %12 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #9
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #9
  ret { i64, i8 } %8
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #1

declare dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"*, %"class.SkSL::Context"* dereferenceable(744), i32, i32) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorMatrixResize4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #1

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #1

declare %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #9
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #9
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #9
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #9
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #9
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4SkSL4Type11displayNameEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4SkSL4Type11displayNameEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4SkSL4Type11displayNameEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4SkSL4Type11displayNameEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4SkSL4Type11displayNameEv"}
!17 = distinct !{!17, !18, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4SkSL4Type11descriptionEv"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
