; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/ulpfec_header_reader_writer.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/ulpfec_header_reader_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::UlpfecHeaderReader" = type { %"class.webrtc::FecHeaderReader" }
%"class.webrtc::FecHeaderReader" = type { i32 (...)**, i64, i64 }
%"class.webrtc::UlpfecHeaderWriter" = type { %"class.webrtc::FecHeaderWriter" }
%"class.webrtc::FecHeaderWriter" = type { i32 (...)**, i64, i64, i64 }
%"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket" = type { %"class.webrtc::ForwardErrorCorrection::SortablePacket", %"class.std::__1::list", i32, i64, i32, i16, i64, i64, i64, %"class.rtc::scoped_refptr" }
%"class.webrtc::ForwardErrorCorrection::SortablePacket" = type { i32, i16 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::ForwardErrorCorrection::Packet"* }
%"class.webrtc::ForwardErrorCorrection::Packet" = type <{ i32 (...)**, %"class.rtc::CopyOnWriteBuffer", i32, [4 x i8] }>
%"class.rtc::CopyOnWriteBuffer" = type { %"class.rtc::scoped_refptr.1", i64, i64 }
%"class.rtc::scoped_refptr.1" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type <{ %"class.rtc::BufferT", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZTVN6webrtc18UlpfecHeaderReaderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::UlpfecHeaderReader"*)* @_ZN6webrtc18UlpfecHeaderReaderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::UlpfecHeaderReader"*)* @_ZN6webrtc18UlpfecHeaderReaderD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::UlpfecHeaderReader"*, %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"*)* @_ZNK6webrtc18UlpfecHeaderReader13ReadFecHeaderEPNS_22ForwardErrorCorrection17ReceivedFecPacketE to i8*)] }, align 8
@_ZTVN6webrtc18UlpfecHeaderWriterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::UlpfecHeaderWriter"*)* @_ZN6webrtc18UlpfecHeaderWriterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::UlpfecHeaderWriter"*)* @_ZN6webrtc18UlpfecHeaderWriterD0Ev to i8*), i8* bitcast (i64 (%"class.webrtc::UlpfecHeaderWriter"*, i8*, i64)* @_ZNK6webrtc18UlpfecHeaderWriter17MinPacketMaskSizeEPKhm to i8*), i8* bitcast (i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)* @_ZNK6webrtc18UlpfecHeaderWriter13FecHeaderSizeEm to i8*), i8* bitcast (void (%"class.webrtc::UlpfecHeaderWriter"*, i32, i16, i8*, i64, %"class.webrtc::ForwardErrorCorrection::Packet"*)* @_ZNK6webrtc18UlpfecHeaderWriter17FinalizeFecHeaderEjtPKhmPNS_22ForwardErrorCorrection6PacketE to i8*)] }, align 8

@_ZN6webrtc18UlpfecHeaderReaderC1Ev = hidden unnamed_addr alias void (%"class.webrtc::UlpfecHeaderReader"*), void (%"class.webrtc::UlpfecHeaderReader"*)* @_ZN6webrtc18UlpfecHeaderReaderC2Ev
@_ZN6webrtc18UlpfecHeaderReaderD1Ev = hidden unnamed_addr alias void (%"class.webrtc::UlpfecHeaderReader"*), void (%"class.webrtc::UlpfecHeaderReader"*)* @_ZN6webrtc18UlpfecHeaderReaderD2Ev
@_ZN6webrtc18UlpfecHeaderWriterC1Ev = hidden unnamed_addr alias void (%"class.webrtc::UlpfecHeaderWriter"*), void (%"class.webrtc::UlpfecHeaderWriter"*)* @_ZN6webrtc18UlpfecHeaderWriterC2Ev
@_ZN6webrtc18UlpfecHeaderWriterD1Ev = hidden unnamed_addr alias void (%"class.webrtc::UlpfecHeaderWriter"*), void (%"class.webrtc::UlpfecHeaderWriter"*)* @_ZN6webrtc18UlpfecHeaderWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18UlpfecHeaderReaderC2Ev(%"class.webrtc::UlpfecHeaderReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::UlpfecHeaderReader", %"class.webrtc::UlpfecHeaderReader"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc15FecHeaderReaderC2Emm(%"class.webrtc::FecHeaderReader"* %2, i64 192, i64 48) #6
  %3 = getelementptr inbounds %"class.webrtc::UlpfecHeaderReader", %"class.webrtc::UlpfecHeaderReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc18UlpfecHeaderReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN6webrtc15FecHeaderReaderC2Emm(%"class.webrtc::FecHeaderReader"*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc15FecHeaderReaderD2Ev(%"class.webrtc::FecHeaderReader"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18UlpfecHeaderReaderD2Ev(%"class.webrtc::UlpfecHeaderReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::UlpfecHeaderReader", %"class.webrtc::UlpfecHeaderReader"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc15FecHeaderReaderD2Ev(%"class.webrtc::FecHeaderReader"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18UlpfecHeaderReaderD0Ev(%"class.webrtc::UlpfecHeaderReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::UlpfecHeaderReader", %"class.webrtc::UlpfecHeaderReader"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc15FecHeaderReaderD2Ev(%"class.webrtc::FecHeaderReader"* %2) #6
  %3 = bitcast %"class.webrtc::UlpfecHeaderReader"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc18UlpfecHeaderReader13ReadFecHeaderEPNS_22ForwardErrorCorrection17ReceivedFecPacketE(%"class.webrtc::UlpfecHeaderReader"* nocapture readnone, %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 9, i32 0
  %4 = load %"class.webrtc::ForwardErrorCorrection::Packet"*, %"class.webrtc::ForwardErrorCorrection::Packet"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::Packet", %"class.webrtc::ForwardErrorCorrection::Packet"* %4, i64 0, i32 1
  %6 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %6, align 8
  %8 = icmp eq %"class.rtc::FinalRefCountedObject"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %7, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::Packet", %"class.webrtc::ForwardErrorCorrection::Packet"* %4, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  tail call void @_ZN3rtc17CopyOnWriteBuffer24UnshareAndEnsureCapacityEm(%"class.rtc::CopyOnWriteBuffer"* %5, i64 %14) #6
  %15 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %6, align 8
  %16 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %15, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = load i64, i64* %12, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = load %"class.webrtc::ForwardErrorCorrection::Packet"*, %"class.webrtc::ForwardErrorCorrection::Packet"** %3, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = phi %"class.webrtc::ForwardErrorCorrection::Packet"* [ %20, %9 ], [ %4, %2 ]
  %23 = phi i8* [ %19, %9 ], [ null, %2 ]
  %24 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::Packet", %"class.webrtc::ForwardErrorCorrection::Packet"* %22, i64 0, i32 1, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, 12
  br i1 %26, label %61, label %27

27:                                               ; preds = %21
  %28 = load i8, i8* %23, align 1
  %29 = and i8 %28, 64
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i64 2, i64 6
  %32 = select i1 %30, i64 14, i64 18
  %33 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 3
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %23, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = shl nuw i16 %36, 8
  %38 = getelementptr inbounds i8, i8* %23, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = or i16 %37, %40
  %42 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 4
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 5
  store i16 %41, i16* %45, align 4
  %46 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 6
  store i64 12, i64* %46, align 8
  %47 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 7
  store i64 %31, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %23, i64 10
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = shl nuw nsw i64 %50, 8
  %52 = getelementptr inbounds i8, i8* %23, i64 11
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = or i64 %51, %54
  %56 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket", %"class.webrtc::ForwardErrorCorrection::ReceivedFecPacket"* %1, i64 0, i32 8
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %23, i64 8
  %58 = bitcast i8* %57 to i16*
  %59 = bitcast i8* %34 to i16*
  %60 = load i16, i16* %58, align 1
  store i16 %60, i16* %59, align 1
  br label %61

61:                                               ; preds = %21, %27
  %62 = phi i1 [ true, %27 ], [ false, %21 ]
  ret i1 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18UlpfecHeaderWriterC2Ev(%"class.webrtc::UlpfecHeaderWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::UlpfecHeaderWriter", %"class.webrtc::UlpfecHeaderWriter"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc15FecHeaderWriterC2Emmm(%"class.webrtc::FecHeaderWriter"* %2, i64 48, i64 48, i64 18) #6
  %3 = getelementptr inbounds %"class.webrtc::UlpfecHeaderWriter", %"class.webrtc::UlpfecHeaderWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc18UlpfecHeaderWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN6webrtc15FecHeaderWriterC2Emmm(%"class.webrtc::FecHeaderWriter"*, i64, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc15FecHeaderWriterD2Ev(%"class.webrtc::FecHeaderWriter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18UlpfecHeaderWriterD2Ev(%"class.webrtc::UlpfecHeaderWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::UlpfecHeaderWriter", %"class.webrtc::UlpfecHeaderWriter"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc15FecHeaderWriterD2Ev(%"class.webrtc::FecHeaderWriter"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18UlpfecHeaderWriterD0Ev(%"class.webrtc::UlpfecHeaderWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::UlpfecHeaderWriter", %"class.webrtc::UlpfecHeaderWriter"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc15FecHeaderWriterD2Ev(%"class.webrtc::FecHeaderWriter"* %2) #6
  %3 = bitcast %"class.webrtc::UlpfecHeaderWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK6webrtc18UlpfecHeaderWriter17MinPacketMaskSizeEPKhm(%"class.webrtc::UlpfecHeaderWriter"* nocapture readnone, i8* nocapture readnone, i64 returned) unnamed_addr #5 align 2 {
  ret i64 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK6webrtc18UlpfecHeaderWriter13FecHeaderSizeEm(%"class.webrtc::UlpfecHeaderWriter"* nocapture readnone, i64) unnamed_addr #5 align 2 {
  %3 = icmp ult i64 %1, 3
  %4 = select i1 %3, i64 14, i64 18
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc18UlpfecHeaderWriter17FinalizeFecHeaderEjtPKhmPNS_22ForwardErrorCorrection6PacketE(%"class.webrtc::UlpfecHeaderWriter"*, i32, i16 zeroext, i8* nocapture readonly, i64, %"class.webrtc::ForwardErrorCorrection::Packet"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::Packet", %"class.webrtc::ForwardErrorCorrection::Packet"* %5, i64 0, i32 1
  %8 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %8, align 8
  %10 = icmp eq %"class.rtc::FinalRefCountedObject"* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %9, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::Packet", %"class.webrtc::ForwardErrorCorrection::Packet"* %5, i64 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  tail call void @_ZN3rtc17CopyOnWriteBuffer24UnshareAndEnsureCapacityEm(%"class.rtc::CopyOnWriteBuffer"* %7, i64 %16) #6
  %17 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %8, align 8
  %18 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %17, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = load i64, i64* %14, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  br label %22

22:                                               ; preds = %6, %11
  %23 = phi i8* [ %21, %11 ], [ null, %6 ]
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 63
  %26 = icmp eq i64 %4, 6
  %27 = or i8 %25, 64
  %28 = select i1 %26, i8 %27, i8 %25
  store i8 %28, i8* %23, align 1
  %29 = getelementptr inbounds i8, i8* %23, i64 8
  %30 = getelementptr inbounds i8, i8* %23, i64 2
  %31 = bitcast i8* %30 to i16*
  %32 = bitcast i8* %29 to i16*
  %33 = load i16, i16* %31, align 1
  store i16 %33, i16* %32, align 1
  %34 = lshr i16 %2, 8
  %35 = trunc i16 %34 to i8
  store i8 %35, i8* %30, align 1
  %36 = trunc i16 %2 to i8
  %37 = getelementptr inbounds i8, i8* %23, i64 3
  store i8 %36, i8* %37, align 1
  %38 = bitcast %"class.webrtc::UlpfecHeaderWriter"* %0 to i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)***
  %39 = load i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)**, i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)*, i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)** %39, i64 3
  %41 = load i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)*, i64 (%"class.webrtc::UlpfecHeaderWriter"*, i64)** %40, align 8
  %42 = tail call i64 %41(%"class.webrtc::UlpfecHeaderWriter"* %0, i64 %4) #6
  %43 = getelementptr inbounds i8, i8* %23, i64 10
  %44 = getelementptr inbounds %"class.webrtc::ForwardErrorCorrection::Packet", %"class.webrtc::ForwardErrorCorrection::Packet"* %5, i64 0, i32 1, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %42
  %47 = trunc i64 %46 to i16
  %48 = lshr i16 %47, 8
  %49 = trunc i16 %48 to i8
  store i8 %49, i8* %43, align 1
  %50 = trunc i64 %46 to i8
  %51 = getelementptr inbounds i8, i8* %23, i64 11
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds i8, i8* %23, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %3, i64 %4, i1 false)
  ret void
}

declare void @_ZN3rtc17CopyOnWriteBuffer24UnshareAndEnsureCapacityEm(%"class.rtc::CopyOnWriteBuffer"*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
