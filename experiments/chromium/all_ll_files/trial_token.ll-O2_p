; ModuleID = '../../third_party/blink/common/origin_trials/trial_token.cc'
source_filename = "../../third_party/blink/common/origin_trials/trial_token.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::allocator" = type { i8 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"union.absl::variant_internal::DestructibleUnionImpl.12" }
%"union.absl::variant_internal::DestructibleUnionImpl.12" = type { %"union.absl::variant_internal::DestructibleUnionImpl.13" }
%"union.absl::variant_internal::DestructibleUnionImpl.13" = type { %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.41" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GURL* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"isSubdomain\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"feature\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"expiry\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"isThirdParty\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"usage\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"public_key.length() == 32UL\00", align 1
@.str.7 = private unnamed_addr constant [60 x i8] c"../../third_party/blink/common/origin_trials/trial_token.cc\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"subset\00", align 1

@_ZN5blink10TrialTokenD1Ev = hidden unnamed_addr alias void (%"class.blink::TrialToken"*), void (%"class.blink::TrialToken"*)* @_ZN5blink10TrialTokenD2Ev
@_ZN5blink10TrialTokenC1ERKN3url6OriginEbRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN4base4TimeEbNS0_16UsageRestrictionE = hidden unnamed_addr alias void (%"class.blink::TrialToken"*, %"class.url::Origin"*, i1, %"class.std::__1::basic_string"*, i64, i1, i32), void (%"class.blink::TrialToken"*, %"class.url::Origin"*, i1, %"class.std::__1::basic_string"*, i64, i1, i32)* @_ZN5blink10TrialTokenC2ERKN3url6OriginEbRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN4base4TimeEbNS0_16UsageRestrictionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10TrialTokenD2Ev(%"class.blink::TrialToken"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %20) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TrialToken"* @_ZN5blink10TrialToken4FromEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_PNS_22OriginTrialTokenStatusE(i8*, i64, i8*, i64, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %11 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 -86, i8* %8, align 1
  %14 = call i32 @_ZN5blink10TrialToken7ExtractEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_PNS3_12basic_stringIcS5_NS3_9allocatorIcEEEESB_Ph(i8* %0, i64 %1, i8* %2, i64 %3, %"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull %7, i8* nonnull %8)
  store i32 %14, i32* %4, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %5
  %17 = load i8, i8* %8, align 1
  %18 = call %"class.blink::TrialToken"* @_ZN5blink10TrialToken5ParseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEh(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i8 zeroext %17)
  %19 = icmp eq %"class.blink::TrialToken"* %18, null
  br i1 %19, label %46, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %18, i64 0, i32 4
  %22 = icmp eq %"class.std::__1::basic_string"* %21, %7
  br i1 %22, label %46, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %27, label %39, label %32

32:                                               ; preds = %23
  br i1 %31, label %35, label %33

33:                                               ; preds = %32
  %34 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %11, i64 24, i1 false) #11
  br label %46

35:                                               ; preds = %32
  %36 = load i8*, i8** %12, align 8
  %37 = load i64, i64* %13, align 8
  %38 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %36, i64 %37) #11
  br label %46

39:                                               ; preds = %23
  %40 = load i8*, i8** %12, align 8
  %41 = load i64, i64* %13, align 8
  %42 = zext i8 %30 to i64
  %43 = select i1 %31, i8* %40, i8* %11
  %44 = select i1 %31, i64 %41, i64 %42
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %43, i64 %44) #11
  br label %46

46:                                               ; preds = %16, %20, %33, %35, %39
  %47 = phi i32 [ 6, %16 ], [ 0, %20 ], [ 0, %33 ], [ 0, %35 ], [ 0, %39 ]
  store i32 %47, i32* %4, align 4
  br label %48

48:                                               ; preds = %5, %46
  %49 = phi %"class.blink::TrialToken"* [ %18, %46 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  %50 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %55) #10
  br label %56

56:                                               ; preds = %48, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %57 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %56, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret %"class.blink::TrialToken"* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10TrialToken7ExtractEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_PNS3_12basic_stringIcS5_NS3_9allocatorIcEEEESB_Ph(i8*, i64, i8*, i64, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %0, i8** %14, align 8
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %1, i64* %15, align 8
  %16 = add i64 %1, -1
  %17 = icmp ugt i64 %16, 6143
  br i1 %17, label %121, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %21 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8, %"class.std::__1::basic_string"* nonnull %9) #11
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %112

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i64, i64* %25, align 8
  %31 = zext i8 %28 to i64
  %32 = select i1 %29, i64 %30, i64 %31
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %112, label %34

34:                                               ; preds = %24
  %35 = load i8*, i8** %20, align 8
  %36 = select i1 %29, i8* %35, i8* %19
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, -2
  %39 = icmp eq i8 %38, 2
  br i1 %39, label %40, label %112

40:                                               ; preds = %34
  %41 = icmp ult i64 %32, 69
  br i1 %41, label %112, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds i8, i8* %36, i64 65
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 8
  %47 = getelementptr inbounds i8, i8* %36, i64 66
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = or i64 %46, %49
  %51 = shl nuw nsw i64 %50, 8
  %52 = getelementptr inbounds i8, i8* %36, i64 67
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = or i64 %51, %54
  %56 = shl nuw nsw i64 %55, 8
  %57 = getelementptr inbounds i8, i8* %36, i64 68
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = or i64 %56, %59
  %61 = add i64 %32, -69
  %62 = icmp eq i64 %61, %60
  br i1 %62, label %63, label %112

63:                                               ; preds = %42
  %64 = getelementptr inbounds i8, i8* %36, i64 1
  %65 = add nuw nsw i64 %60, 4
  %66 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = bitcast [2 x %"class.base::BasicStringPiece"]* %11 to i8*
  %69 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #11
  %70 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0
  %71 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0, i32 0
  store i8* %36, i8** %71, align 8
  %72 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0, i32 1
  store i64 1, i64* %72, align 8
  %73 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 0
  store i8* %43, i8** %73, align 8
  %74 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 1
  store i64 %65, i64* %74, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %10, i64 2, %"class.base::BasicStringPiece"* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #11
  %75 = call zeroext i1 @_ZN5blink10TrialToken17ValidateSignatureEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEES6_(i8* %64, i64 64, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i8* %2, i64 %3)
  br i1 %75, label %76, label %103

76:                                               ; preds = %63
  store i8 %37, i8* %6, align 1
  %77 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #11
  %78 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i64 69, i64 %60, %"class.std::__1::allocator"* nonnull dereferenceable(1) %78) #11
  %79 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %83, %76
  %87 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %77, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #11
  %88 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #11
  %89 = call i8* @_Znwm(i64 80) #10
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %89, i8** %90, align 8, !alias.scope !2
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> <i64 64, i64 -9223372036854775728>, <2 x i64>* %92, align 8, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %89, i8* align 1 %64, i64 64, i1 false) #11
  %93 = getelementptr inbounds i8, i8* %89, i64 64
  store i8 0, i8* %93, align 1
  %94 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #10
  br label %101

101:                                              ; preds = %98, %86
  %102 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %88, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #11
  br label %103

103:                                              ; preds = %63, %101
  %104 = phi i32 [ 0, %101 ], [ 5, %63 ]
  %105 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %103
  %110 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %103, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  br label %112

112:                                              ; preds = %22, %111, %42, %34, %40, %24
  %113 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %22 ], [ %26, %111 ], [ %26, %42 ], [ %26, %34 ], [ %26, %40 ], [ %26, %24 ]
  %114 = phi i32 [ 6, %22 ], [ %104, %111 ], [ 6, %42 ], [ 7, %34 ], [ 6, %40 ], [ 6, %24 ]
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %112, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  br label %121

121:                                              ; preds = %7, %120
  %122 = phi i32 [ %114, %120 ], [ 6, %7 ]
  ret i32 %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TrialToken"* @_ZN5blink10TrialToken5ParseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEh(%"class.std::__1::basic_string"* dereferenceable(24), i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.5", align 8
  %4 = alloca %"class.url::Origin", align 8
  %5 = alloca %class.GURL, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, 4096
  %13 = and i1 %9, %12
  br i1 %13, label %183, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = select i1 %9, i8* %17, i8* %18
  %20 = zext i8 %8 to i64
  %21 = select i1 %9, i64 %11, i64 %20
  call void @_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(%"class.absl::optional.5"* nonnull sret %3, i8* %19, i64 %21, i32 0, i64 200) #11
  %22 = load i8, i8* %15, align 8, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %181, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i8
  %29 = icmp eq i8 %28, 6
  br i1 %29, label %30, label %175

30:                                               ; preds = %24
  %31 = call %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6) #11
  %32 = icmp eq %"class.std::__1::basic_string"* %31, null
  br i1 %32, label %175, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 80, i1 false)
  %35 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %35) #11
  %36 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %43 = select i1 %39, i8* %41, i8* %42
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %38 to i64
  %47 = select i1 %39, i64 %45, i64 %46
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* %43, i64 %47) #11
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %4, %class.GURL* nonnull dereferenceable(120) %5) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %35) #11
  %48 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %173

51:                                               ; preds = %33
  %52 = load i8, i8* %15, align 8, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %55, !prof !6

54:                                               ; preds = %51
  call void @llvm.trap() #11
  unreachable

55:                                               ; preds = %51
  %56 = call %"class.base::Value"* @_ZN4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #11
  %57 = icmp eq %"class.base::Value"* %56, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i8
  %62 = icmp eq i8 %61, 1
  br i1 %62, label %63, label %173

63:                                               ; preds = %58
  %64 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* nonnull %56) #11
  %65 = zext i1 %64 to i8
  br label %66

66:                                               ; preds = %55, %63
  %67 = phi i8 [ %65, %63 ], [ 0, %55 ]
  %68 = load i8, i8* %15, align 8, !range !5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %71, !prof !6

70:                                               ; preds = %66
  call void @llvm.trap() #11
  unreachable

71:                                               ; preds = %66
  %72 = call %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #11
  %73 = icmp eq %"class.std::__1::basic_string"* %72, null
  br i1 %73, label %173, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  br label %84

82:                                               ; preds = %74
  %83 = zext i8 %77 to i64
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi i64 [ %81, %79 ], [ %83, %82 ]
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %173, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %15, align 8, !range !5
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %91, !prof !6

90:                                               ; preds = %87
  call void @llvm.trap() #11
  unreachable

91:                                               ; preds = %87
  %92 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #11
  %93 = trunc i64 %92 to i8
  %94 = lshr i64 %92, 32
  %95 = trunc i64 %94 to i32
  %96 = icmp eq i8 %93, 0
  %97 = select i1 %96, i32 0, i32 %95
  %98 = icmp slt i32 %97, 1
  br i1 %98, label %173, label %99

99:                                               ; preds = %91
  %100 = icmp eq i8 %1, 3
  br i1 %100, label %101, label %145

101:                                              ; preds = %99
  %102 = load i8, i8* %15, align 8, !range !5
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %105, !prof !6

104:                                              ; preds = %101
  call void @llvm.trap() #11
  unreachable

105:                                              ; preds = %101
  %106 = call %"class.base::Value"* @_ZN4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12) #11
  %107 = icmp eq %"class.base::Value"* %106, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = trunc i64 %110 to i8
  %112 = icmp eq i8 %111, 1
  br i1 %112, label %113, label %173

113:                                              ; preds = %108
  %114 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* nonnull %106) #11
  br label %115

115:                                              ; preds = %105, %113
  %116 = phi i1 [ %114, %113 ], [ false, %105 ]
  %117 = load i8, i8* %15, align 8, !range !5
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %120, !prof !6

119:                                              ; preds = %115
  call void @llvm.trap() #11
  unreachable

120:                                              ; preds = %115
  %121 = call %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #11
  %122 = icmp eq %"class.std::__1::basic_string"* %121, null
  br i1 %122, label %145, label %123

123:                                              ; preds = %120
  %124 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  br label %133

131:                                              ; preds = %123
  %132 = zext i8 %126 to i64
  br label %133

133:                                              ; preds = %128, %131
  %134 = phi i64 [ %130, %128 ], [ %132, %131 ]
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %126 to i64
  %140 = select i1 %127, i64 %138, i64 %139
  %141 = icmp eq i64 %140, 6
  br i1 %141, label %142, label %173

142:                                              ; preds = %136
  %143 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %121, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6) #11
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %173

145:                                              ; preds = %120, %133, %142, %99
  %146 = phi i1 [ false, %99 ], [ %116, %142 ], [ %116, %133 ], [ %116, %120 ]
  %147 = phi i32 [ 0, %99 ], [ 1, %142 ], [ 0, %133 ], [ 0, %120 ]
  %148 = call i8* @_Znwm(i64 152) #10
  %149 = sitofp i32 %97 to double
  %150 = call i64 @_ZN4base4Time11FromDoubleTEd(double %149) #11
  %151 = zext i1 %146 to i8
  %152 = bitcast i8* %148 to %"class.url::Origin"*
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %152, %"class.url::Origin"* nonnull dereferenceable(80) %4) #11
  %153 = getelementptr inbounds i8, i8* %148, i64 80
  store i8 %67, i8* %153, align 8
  %154 = getelementptr inbounds i8, i8* %148, i64 88
  %155 = load i8, i8* %76, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %145
  %158 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* nonnull align 8 %158, i64 24, i1 false) #11
  br label %165

159:                                              ; preds = %145
  %160 = bitcast i8* %154 to %"class.std::__1::basic_string"*
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %162, i64 %164) #11
  br label %165

165:                                              ; preds = %157, %159
  %166 = getelementptr inbounds i8, i8* %148, i64 112
  %167 = bitcast i8* %166 to i64*
  store i64 %150, i64* %167, align 8
  %168 = getelementptr inbounds i8, i8* %148, i64 120
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #11
  %169 = getelementptr inbounds i8, i8* %148, i64 144
  store i8 %151, i8* %169, align 8
  %170 = getelementptr inbounds i8, i8* %148, i64 148
  %171 = bitcast i8* %170 to i32*
  store i32 %147, i32* %171, align 4
  %172 = ptrtoint i8* %148 to i64
  br label %173

173:                                              ; preds = %33, %142, %136, %108, %91, %84, %71, %58, %165
  %174 = phi i64 [ %172, %165 ], [ 0, %33 ], [ 0, %58 ], [ 0, %71 ], [ 0, %84 ], [ 0, %91 ], [ 0, %108 ], [ 0, %136 ], [ 0, %142 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %34) #11
  br label %175

175:                                              ; preds = %30, %24, %173
  %176 = phi i64 [ 0, %30 ], [ 0, %24 ], [ %174, %173 ]
  %177 = load i8, i8* %15, align 8
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %180) #11
  store i8 0, i8* %15, align 8
  br label %181

181:                                              ; preds = %14, %175, %179
  %182 = phi i64 [ %176, %175 ], [ %176, %179 ], [ 0, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #11
  br label %183

183:                                              ; preds = %2, %181
  %184 = phi i64 [ %182, %181 ], [ 0, %2 ]
  %185 = inttoptr i64 %184 to %"class.blink::TrialToken"*
  ret %"class.blink::TrialToken"* %185
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10TrialToken7IsValidERKN3url6OriginERKN4base4TimeE(%"class.blink::TrialToken"*, %"class.url::Origin"* dereferenceable(80), %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK5blink10TrialToken14ValidateOriginERKN3url6OriginE(%"class.blink::TrialToken"* %0, %"class.url::Origin"* dereferenceable(80) %1)
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %9, %7
  %11 = select i1 %10, i32 0, i32 3
  br label %12

12:                                               ; preds = %5, %3
  %13 = phi i32 [ 4, %3 ], [ %11, %5 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10TrialToken14ValidateOriginERKN3url6OriginE(%"class.blink::TrialToken"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %110, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %14

12:                                               ; preds = %6
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #11
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi %"class.std::__1::basic_string"* [ %11, %10 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0, i32 0, i32 0
  br label %23

21:                                               ; preds = %14
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #11
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi %"class.std::__1::basic_string"* [ %20, %19 ], [ %22, %21 ]
  %25 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = icmp eq i64 %32, %40
  br i1 %41, label %42, label %113

42:                                               ; preds = %23
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %46 = select i1 %28, i8* %44, i8* %45
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %50 = select i1 %36, i8* %48, i8* %49
  %51 = icmp eq i64 %32, 0
  br i1 %28, label %58, label %52

52:                                               ; preds = %42
  br i1 %51, label %74, label %53

53:                                               ; preds = %52
  %54 = ptrtoint i8* %44 to i64
  %55 = trunc i64 %54 to i8
  %56 = load i8, i8* %50, align 1
  %57 = icmp eq i8 %56, %55
  br i1 %57, label %59, label %113

58:                                               ; preds = %42
  br i1 %51, label %74, label %71

59:                                               ; preds = %53, %66
  %60 = phi i64 [ %63, %66 ], [ %31, %53 ]
  %61 = phi i8* [ %64, %66 ], [ %45, %53 ]
  %62 = phi i8* [ %67, %66 ], [ %50, %53 ]
  %63 = add i64 %60, -1
  %64 = getelementptr inbounds i8, i8* %61, i64 1
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds i8, i8* %62, i64 1
  %68 = load i8, i8* %64, align 1
  %69 = load i8, i8* %67, align 1
  %70 = icmp eq i8 %68, %69
  br i1 %70, label %59, label %113

71:                                               ; preds = %58
  %72 = tail call i32 @bcmp(i8* %46, i8* %50, i64 %32) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %113

74:                                               ; preds = %59, %52, %58, %71
  %75 = load i8, i8* %16, align 8, !range !5
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0, i32 0, i32 1
  br label %81

79:                                               ; preds = %74
  %80 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #11
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.std::__1::basic_string"* [ %78, %77 ], [ %80, %79 ]
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %90 = select i1 %86, i8* %88, i8* %89
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %85 to i64
  %94 = select i1 %86, i64 %92, i64 %93
  %95 = tail call zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"* %1, i8* %90, i64 %94) #11
  br i1 %95, label %96, label %113

96:                                               ; preds = %81
  %97 = load i8, i8* %7, align 8, !range !5
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 2
  %100 = load i16, i16* %99, align 8
  %101 = select i1 %98, i16 %100, i16 0
  %102 = load i8, i8* %16, align 8, !range !5
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0, i32 0, i32 2
  %106 = load i16, i16* %105, align 8
  br label %107

107:                                              ; preds = %96, %104
  %108 = phi i16 [ %106, %104 ], [ 0, %96 ]
  %109 = icmp eq i16 %101, %108
  br label %113

110:                                              ; preds = %2
  %111 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0
  %112 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %1, %"class.url::Origin"* dereferenceable(80) %111) #11
  br label %113

113:                                              ; preds = %66, %53, %23, %71, %81, %107, %110
  %114 = phi i1 [ %112, %110 ], [ false, %81 ], [ false, %71 ], [ %109, %107 ], [ false, %23 ], [ false, %53 ], [ false, %66 ]
  ret i1 %114
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10TrialToken12ValidateDateERKN4base4TimeE(%"class.blink::TrialToken"* nocapture readonly, %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %6, %4
  ret i1 %7
}

declare zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10TrialToken17ValidateSignatureEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEES6_(i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp eq i64 %4, 32
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %4) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 32) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0), i32 281, %"class.logging::CheckOpResult"* nonnull %7) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp eq i64 %1, 64
  br i1 %24, label %25, label %40

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %35 = zext i8 %28 to i64
  %36 = select i1 %29, i8* %31, i8* %34
  %37 = select i1 %29, i64 %33, i64 %35
  %38 = call i32 @ED25519_verify(i8* %36, i64 %37, i8* %0, i8* %3) #11
  %39 = icmp ne i32 %38, 0
  br label %40

40:                                               ; preds = %23, %25
  %41 = phi i1 [ %39, %25 ], [ false, %23 ]
  ret i1 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(%"class.absl::optional.5"* sret, i8*, i64, i32, i64) local_unnamed_addr #4

declare %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #4

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"*) local_unnamed_addr #4

declare i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i64 @_ZN4base4Time11FromDoubleTEd(double) local_unnamed_addr #4

declare zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10TrialToken19ValidateFeatureNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.blink::TrialToken"*, i8* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = select i1 %8, i8* %16, i8* %17
  %19 = tail call i32 @bcmp(i8* %1, i8* %18, i64 %2) #11
  %20 = icmp eq i32 %19, 0
  br label %21

21:                                               ; preds = %3, %14
  %22 = phi i1 [ false, %3 ], [ %20, %14 ]
  ret i1 %22
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i32 @ED25519_verify(i8*, i64, i8*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10TrialTokenC2ERKN3url6OriginEbRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN4base4TimeEbNS0_16UsageRestrictionE(%"class.blink::TrialToken"*, %"class.url::Origin"* dereferenceable(80), i1 zeroext, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %8 = zext i1 %2 to i8
  %9 = zext i1 %5 to i8
  %10 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %1) #11
  %11 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 1
  store i8 %8, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  br label %25

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %22, i64 %24) #11
  br label %25

25:                                               ; preds = %17, %20
  %26 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %4, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 4
  %28 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #11
  %29 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 5
  store i8 %9, i8* %29, align 8
  %30 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 6
  store i32 %6, i32* %30, align 4
  ret void
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::TrialToken"* @_ZN5blink10TrialToken26CreateTrialTokenForTestingERKN3url6OriginEbRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN4base4TimeEbNS0_16UsageRestrictionE(%"class.url::Origin"* dereferenceable(80), i1 zeroext, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %7 = tail call i8* @_Znwm(i64 152) #10
  %8 = bitcast i8* %7 to %"class.blink::TrialToken"*
  %9 = zext i1 %1 to i8
  %10 = zext i1 %4 to i8
  %11 = bitcast i8* %7 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %11, %"class.url::Origin"* dereferenceable(80) %0) #11
  %12 = getelementptr inbounds i8, i8* %7, i64 80
  store i8 %9, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 88
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %6
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %19, i64 24, i1 false) #11
  br label %26

20:                                               ; preds = %6
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #11
  br label %26

26:                                               ; preds = %18, %20
  %27 = getelementptr inbounds i8, i8* %7, i64 112
  %28 = bitcast i8* %27 to i64*
  store i64 %3, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %7, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  %30 = getelementptr inbounds i8, i8* %7, i64 144
  store i8 %10, i8* %30, align 8
  %31 = getelementptr inbounds i8, i8* %7, i64 148
  %32 = bitcast i8* %31 to i32*
  store i32 %5, i32* %32, align 4
  ret %"class.blink::TrialToken"* %8
}

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #4

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
