; ModuleID = '../../net/cert/internal/revocation_util.cc'
source_filename = "../../net/cert/internal/revocation_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net24CheckRevocationDateValidERKNS_3der15GeneralizedTimeEPS2_RKN4base4TimeERKNS5_9TimeDeltaE(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"*, %"class.base::Time"* dereferenceable(8), %"class.base::TimeDelta"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.net::der::GeneralizedTime"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.net::der::GeneralizedTime"*
  %10 = alloca %"class.base::Time", align 8
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  store i64 -6148914691236517206, i64* %6, align 8
  %12 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8) %2, %"struct.net::der::GeneralizedTime"* nonnull %7) #5
  br i1 %12, label %13, label %36

13:                                               ; preds = %4
  %14 = call zeroext i1 @_ZN3net3dergtERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %0, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %7) #5
  br i1 %14, label %36, label %15

15:                                               ; preds = %13
  %16 = icmp eq %"struct.net::der::GeneralizedTime"* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = call zeroext i1 @_ZN3net3derleERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %1, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %7) #5
  br i1 %18, label %36, label %19

19:                                               ; preds = %15, %17
  %20 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  store i64 -6148914691236517206, i64* %8, align 8
  %21 = bitcast %"class.base::Time"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #5
  %22 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #5
  %25 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %5, i64 %23) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #5
  %29 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %10, i64 0, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* nonnull dereferenceable(8) %10, %"struct.net::der::GeneralizedTime"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #5
  br i1 %30, label %31, label %34

31:                                               ; preds = %19
  %32 = call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %0, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %9) #5
  %33 = xor i1 %32, true
  br label %34

34:                                               ; preds = %31, %19
  %35 = phi i1 [ false, %19 ], [ %33, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %36

36:                                               ; preds = %17, %13, %4, %34
  %37 = phi i1 [ %35, %34 ], [ false, %4 ], [ false, %13 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  ret i1 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8), %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3dergtERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3derleERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #5
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #5
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #5
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #5
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
