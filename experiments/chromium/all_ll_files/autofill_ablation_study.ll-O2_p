; ModuleID = '../../components/autofill/core/browser/autofill_ablation_study.cc'
source_filename = "../../components/autofill/core/browser/autofill_ablation_study.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type <{ %"struct.base::Feature"*, i8*, i8, [7 x i8] }>
%"struct.base::FeatureParam.13" = type <{ %"struct.base::Feature"*, i8*, i32, [4 x i8] }>
%"class.autofill::AutofillAblationStudy" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.icu_69::TimeZone" = type { %"class.icu_69::UObject", %"class.icu_69::UnicodeString" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.6" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%struct.md5_state_st = type { [4 x i32], i32, i32, [64 x i8], i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.4 }
%struct.anon.4 = type { i8 }

@_ZN8autofill8features28kAutofillEnableAblationStudyE = external global %"struct.base::Feature", align 8
@_ZN8autofill8features28kAutofillShowTypePredictionsE = external global %"struct.base::Feature", align 8
@_ZN8autofill8features46kAutofillAblationStudyEnabledForAddressesParamE = external global %"struct.base::FeatureParam", align 8
@_ZN8autofill8features45kAutofillAblationStudyEnabledForPaymentsParamE = external global %"struct.base::FeatureParam", align 8
@_ZN8autofill8features49kAutofillAblationStudyAblationWeightPerMilleParamE = external global %"struct.base::FeatureParam.13", align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN8autofill21AutofillAblationStudyC1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillAblationStudy"*), void (%"class.autofill::AutofillAblationStudy"*)* @_ZN8autofill21AutofillAblationStudyC2Ev
@_ZN8autofill21AutofillAblationStudyD1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillAblationStudy"*), void (%"class.autofill::AutofillAblationStudy"*)* @_ZN8autofill21AutofillAblationStudyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8autofill26DaysSinceLocalWindowsEpochERKN4base4TimeE(%"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %6 = tail call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* %0) #6
  store i64 %6, i64* %5, align 8
  %7 = tail call %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZone13createDefaultEv() #6
  %8 = bitcast %"class.icu_69::TimeZone"* %7 to i32 (%"class.icu_69::TimeZone"*)***
  %9 = load i32 (%"class.icu_69::TimeZone"*)**, i32 (%"class.icu_69::TimeZone"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.icu_69::TimeZone"*)*, i32 (%"class.icu_69::TimeZone"*)** %9, i64 8
  %11 = load i32 (%"class.icu_69::TimeZone"*)*, i32 (%"class.icu_69::TimeZone"*)** %10, align 8
  %12 = tail call i32 %11(%"class.icu_69::TimeZone"* %7) #6
  %13 = sext i32 %12 to i64
  %14 = mul nsw i64 %13, 1000
  %15 = icmp eq i64 %14, -9223372036854775808
  br i1 %15, label %23, label %16

16:                                               ; preds = %1
  %17 = icmp slt i32 %12, 0
  %18 = select i1 %17, i64 -9223372036854775808, i64 9223372036854775807
  %19 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %6, i64 %14) #6
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = select i1 %20, i64 %18, i64 %21, !prof !2
  br label %31

23:                                               ; preds = %1
  %24 = add i64 %6, -9223372036854775807
  %25 = icmp ugt i64 %24, 1
  %26 = icmp eq i64 %6, -9223372036854775808
  %27 = or i1 %26, %25
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br label %31

31:                                               ; preds = %16, %23, %28
  %32 = phi i64 [ %22, %16 ], [ -9223372036854775808, %23 ], [ -9223372036854775808, %28 ]
  store i64 %32, i64* %5, align 8
  %33 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %3) #6
  %34 = icmp eq %"class.icu_69::TimeZone"* %7, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.icu_69::TimeZone"* %7 to void (%"class.icu_69::TimeZone"*)***
  %37 = load void (%"class.icu_69::TimeZone"*)**, void (%"class.icu_69::TimeZone"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.icu_69::TimeZone"*)*, void (%"class.icu_69::TimeZone"*)** %37, i64 1
  %39 = load void (%"class.icu_69::TimeZone"*)*, void (%"class.icu_69::TimeZone"*)** %38, align 8
  call void %39(%"class.icu_69::TimeZone"* nonnull %7) #6
  br label %40

40:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret i32 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"*) local_unnamed_addr #2

declare %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZone13createDefaultEv() local_unnamed_addr #2

declare i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8autofill15GetAblationHashERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERK4GURLRKN4base4TimeE(%"class.std::__1::basic_string"* dereferenceable(24), %class.GURL* dereferenceable(120), %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %4 = alloca %struct.md5_state_st, align 4
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.url::Origin", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"struct.base::MD5Digest", align 8
  %12 = bitcast %struct.md5_state_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 92, i1 false)
  call void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st* nonnull %4) #6
  %13 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  store i8* %22, i8** %14, align 8
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %17 to i64
  %27 = select i1 %18, i64 %25, i64 %26
  store i64 %27, i64* %23, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6
  %28 = bitcast %"class.url::Origin"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %28) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 80, i1 false)
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %6, %class.GURL* dereferenceable(120) %1) #6
  %29 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #6
  %30 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #6
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.url::Origin"* nonnull %6) #6
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %30
  store i8* %38, i8** %31, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %34 to i64
  %43 = select i1 %35, i64 %41, i64 %42
  store i64 %43, i64* %39, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7) #6
  %44 = load i8, i8* %33, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %3
  %47 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %47) #7
  br label %48

48:                                               ; preds = %3, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #6
  %49 = call i32 @_ZN8autofill26DaysSinceLocalWindowsEpochERKN4base4TimeE(%"class.base::Time"* dereferenceable(8) %2)
  %50 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #6
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %9, i32 %49) #6
  %54 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #6
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %56 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i8*, i8** %51, align 8
  %61 = select i1 %59, i8* %60, i8* %50
  store i8* %61, i8** %55, align 8
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %63 = load i64, i64* %52, align 8
  %64 = zext i8 %58 to i64
  %65 = select i1 %59, i64 %63, i64 %64
  store i64 %65, i64* %62, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #6
  %66 = getelementptr inbounds %"struct.base::MD5Digest", %"struct.base::MD5Digest"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 16, i1 false)
  call void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"* nonnull %11, %struct.md5_state_st* nonnull %4) #6
  %67 = bitcast %"struct.base::MD5Digest"* %11 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = call i64 @llvm.bswap.i64(i64 %68) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #6
  %70 = load i8, i8* %57, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %48
  %73 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %73) #7
  br label %74

74:                                               ; preds = %48, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #6
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %12) #6
  ret i64 %69
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st*) local_unnamed_addr #2

declare void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #2

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"*, %struct.md5_state_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillAblationStudyC2Ev(%"class.autofill::AutofillAblationStudy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillAblationStudy", %"class.autofill::AutofillAblationStudy"* %0, i64 0, i32 0
  tail call void @_ZN4base17RandBytesAsStringEm(%"class.std::__1::basic_string"* sret %2, i64 8) #6
  ret void
}

declare void @_ZN4base17RandBytesAsStringEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillAblationStudyD2Ev(%"class.autofill::AutofillAblationStudy"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.autofill::AutofillAblationStudy"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.autofill::AutofillAblationStudy", %"class.autofill::AutofillAblationStudy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #7
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8autofill21AutofillAblationStudy16GetAblationGroupERK4GURLNS_24FormTypeForAblationStudyE(%"class.autofill::AutofillAblationStudy"*, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features28kAutofillEnableAblationStudyE) #6
  br i1 %5, label %6, label %33

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features28kAutofillShowTypePredictionsE) #6
  br i1 %7, label %33, label %8

8:                                                ; preds = %6
  switch i32 %2, label %13 [
    i32 0, label %33
    i32 1, label %9
    i32 2, label %11
  ]

9:                                                ; preds = %8
  %10 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN8autofill8features46kAutofillAblationStudyEnabledForAddressesParamE) #6
  br i1 %10, label %13, label %33

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN8autofill8features45kAutofillAblationStudyEnabledForPaymentsParamE) #6
  br i1 %12, label %13, label %33

13:                                               ; preds = %11, %9, %8
  %14 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam.13"* nonnull @_ZN8autofill8features49kAutofillAblationStudyAblationWeightPerMilleParamE) #6
  %15 = add i32 %14, -1
  %16 = icmp ugt i32 %15, 999
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = tail call i64 @_ZN8autofill13AutofillClock3NowEv() #6
  %20 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.autofill::AutofillAblationStudy", %"class.autofill::AutofillAblationStudy"* %0, i64 0, i32 0
  %22 = call i64 @_ZN8autofill15GetAblationHashERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERK4GURLRKN4base4TimeE(%"class.std::__1::basic_string"* dereferenceable(24) %21, %class.GURL* dereferenceable(120) %1, %"class.base::Time"* nonnull dereferenceable(8) %4) #6
  %23 = urem i64 %22, 1000
  %24 = zext i32 %14 to i64
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %17
  %27 = shl i32 %14, 1
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %23, %28
  %30 = select i1 %29, i32 1, i32 2
  br label %31

31:                                               ; preds = %17, %26
  %32 = phi i32 [ 0, %17 ], [ %30, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %33

33:                                               ; preds = %31, %13, %11, %9, %8, %6, %3
  %34 = phi i32 [ 2, %3 ], [ 2, %6 ], [ 2, %8 ], [ 2, %9 ], [ 2, %11 ], [ %32, %31 ], [ 2, %13 ]
  ret i32 %34
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #2

declare i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam.13"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8autofill21AutofillAblationStudy20GetAblationGroupImplERK4GURLRKN4base4TimeEj(%"class.autofill::AutofillAblationStudy"*, %class.GURL* dereferenceable(120), %"class.base::Time"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.autofill::AutofillAblationStudy", %"class.autofill::AutofillAblationStudy"* %0, i64 0, i32 0
  %6 = tail call i64 @_ZN8autofill15GetAblationHashERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERK4GURLRKN4base4TimeE(%"class.std::__1::basic_string"* dereferenceable(24) %5, %class.GURL* dereferenceable(120) %1, %"class.base::Time"* dereferenceable(8) %2)
  %7 = urem i64 %6, 1000
  %8 = zext i32 %3 to i64
  %9 = icmp ult i64 %7, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = shl i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = icmp ult i64 %7, %12
  %14 = select i1 %13, i32 1, i32 2
  br label %15

15:                                               ; preds = %10, %4
  %16 = phi i32 [ 0, %4 ], [ %14, %10 ]
  ret i32 %16
}

declare i64 @_ZN8autofill13AutofillClock3NowEv() local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
