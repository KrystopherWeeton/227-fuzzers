; ModuleID = '../../third_party/blink/renderer/platform/network/http_parsers.cc'
source_filename = "../../third_party/blink/renderer/platform/network/http_parsers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator> >::InstanceStorage" = type { [16 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.2 }
%union.anon.2 = type { %"class.std::__1::basic_string" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.6" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::KURL"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GURL* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.13", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.12 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.12 = type { %"class.blink::SecurityOrigin"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.13" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.mojo::StructPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.mojo::StructPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.mojo::StructPtr.32" = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.network::mojom::CSPHashSource"* }
%"class.network::mojom::CSPHashSource" = type { i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i8* }
%"class.mojo::StructPtr.79" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector.83", %"class.WTF::Vector.88", %"class.WTF::Vector.93", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85" }
%"class.WTF::VectorBufferBase.85" = type { %"class.mojo::StructPtr.25"*, i32, i32 }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.93" = type { %"class.WTF::VectorBuffer.94" }
%"class.WTF::VectorBuffer.94" = type { %"class.WTF::VectorBufferBase.95" }
%"class.WTF::VectorBufferBase.95" = type { %"class.mojo::StructPtr.44"*, i32, i32 }
%"class.mojo::StructPtr.51" = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.network::mojom::CSPSourceList"* }
%"class.network::mojom::CSPSourceList" = type <{ %"class.std::__1::vector.55", %"class.std::__1::vector.62", %"class.std::__1::vector.69", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.mojo::StructPtr"* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.mojo::StructPtr.32"* }
%"class.mojo::InlinedStructPtr.101" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.110" = type { %"class.std::__1::unique_ptr.111" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.88", i8, i8, [6 x i8] }>
%"class.mojo::StructPtr.103" = type { %"class.std::__1::unique_ptr.104" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.62", i8, i8, [6 x i8] }>
%"class.mojo::StructPtr.141" = type { %"class.std::__1::unique_ptr.142" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.25", %"class.WTF::HashMap", %"class.WTF::HashMap.147", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.101", i8, %"class.WTF::Vector.88", i32, %"class.mojo::StructPtr.110", %"class.WTF::Vector.88" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.147" = type { %"class.WTF::HashTable.148" }
%"class.WTF::HashTable.148" = type <{ %"struct.WTF::KeyValuePair.151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.151" = type { i32, %"class.mojo::StructPtr.79" }
%"class.mojo::StructPtr.117" = type { %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr", %"class.base::flat_map", %"class.base::flat_map.128", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.std::__1::vector.62", i32, %"class.mojo::StructPtr.103", %"class.std::__1::vector.62" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.121" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.123" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.128" = type { %"class.base::internal::flat_tree.129" }
%"class.base::internal::flat_tree.129" = type { %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"struct.std::__1::pair.132"*, %"struct.std::__1::pair.132"*, %"class.std::__1::__compressed_pair.133" }
%"struct.std::__1::pair.132" = type { i32, %"class.mojo::StructPtr.51" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::pair.132"* }
%"class.mojo::StructPtr.162" = type { %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.network::mojom::blink::AllowCSPFromHeaderValue"* }
%"class.network::mojom::blink::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" = type { %class.scoped_refptr.12* }
%"class.mojo::StructPtr.155" = type { %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"class.mojo::StructPtr.176" = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.network::mojom::blink::LinkHeader"* }
%"class.network::mojom::blink::LinkHeader" = type { %"class.blink::KURL", i32, i32, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.169" = type { %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional" }
%"class.mojo::StructPtr.190" = type { %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector.88"* }
%"class.mojo::StructPtr.183" = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.62"* }
%"class.mojo::StructPtr.230" = type { %"class.std::__1::unique_ptr.231" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.network::mojom::blink::ParsedHeaders"* }
%"class.network::mojom::blink::ParsedHeaders" = type <{ %"class.WTF::Vector.234", %"class.mojo::StructPtr.162", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.239", %"class.base::TimeDelta", %"class.absl::optional.239", i32, [4 x i8], %"class.WTF::Vector.249", %"class.mojo::StructPtr.190", i8, [7 x i8] }>
%"class.WTF::Vector.234" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236" }
%"class.WTF::VectorBufferBase.236" = type { %"class.mojo::StructPtr.141"*, i32, i32 }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional", i32, %"class.absl::optional" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional", i32, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.239" = type { %"class.absl::optional_internal::optional_data.240" }
%"class.absl::optional_internal::optional_data.240" = type { %"class.absl::optional_internal::optional_data_base.241" }
%"class.absl::optional_internal::optional_data_base.241" = type { %"class.absl::optional_internal::optional_data_dtor_base.242" }
%"class.absl::optional_internal::optional_data_dtor_base.242" = type { i8, %union.anon.243 }
%union.anon.243 = type { %"class.WTF::Vector.244" }
%"class.WTF::Vector.244" = type { %"class.WTF::VectorBuffer.245" }
%"class.WTF::VectorBuffer.245" = type { %"class.WTF::VectorBufferBase.246" }
%"class.WTF::VectorBufferBase.246" = type { i32*, i32, i32 }
%"class.WTF::Vector.249" = type { %"class.WTF::VectorBuffer.250" }
%"class.WTF::VectorBuffer.250" = type { %"class.WTF::VectorBufferBase.251" }
%"class.WTF::VectorBufferBase.251" = type { %"class.mojo::StructPtr.176"*, i32, i32 }
%"class.mojo::StructPtr.197" = type { %"class.std::__1::unique_ptr.198" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.201", %"class.mojo::StructPtr.155", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.208", %"class.base::TimeDelta", %"class.absl::optional.208", i32, [4 x i8], %"class.std::__1::vector.220", %"class.mojo::StructPtr.183", i8, [7 x i8] }>
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.mojo::StructPtr.117"*, %"class.mojo::StructPtr.117"*, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.mojo::StructPtr.117"* }
%"class.absl::optional.208" = type { %"class.absl::optional_internal::optional_data.209" }
%"class.absl::optional_internal::optional_data.209" = type { %"class.absl::optional_internal::optional_data_base.210" }
%"class.absl::optional_internal::optional_data_base.210" = type { %"class.absl::optional_internal::optional_data_dtor_base.211" }
%"class.absl::optional_internal::optional_data_dtor_base.211" = type { i8, %union.anon.212 }
%union.anon.212 = type { %"class.std::__1::vector.213" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { i32*, i32*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { i32* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.mojo::StructPtr.169"*, %"class.mojo::StructPtr.169"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.mojo::StructPtr.169"* }
%"class.net::HttpContentDisposition" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.262", %"class.absl::optional.262" }
%"class.absl::optional.262" = type { %"class.absl::optional_internal::optional_data.263" }
%"class.absl::optional_internal::optional_data.263" = type { %"class.absl::optional_internal::optional_data_base.264" }
%"class.absl::optional_internal::optional_data_base.264" = type { %"class.absl::optional_internal::optional_data_dtor_base.265" }
%"class.absl::optional_internal::optional_data_dtor_base.265" = type { i8, %union.anon.266 }
%union.anon.266 = type { %"class.base::TimeDelta" }
%"struct.std::__1::pair.270" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"struct.std::__1::pair.270"*, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.281", %class.scoped_refptr.296, %class.scoped_refptr.297, %"struct.blink::CacheControlHeader", %"class.absl::optional.262", %"class.absl::optional.257", %"class.absl::optional.257", %"class.absl::optional.257", i64, %"class.blink::KURL", %"class.WTF::Vector.298", %"class.WTF::String", %"class.WTF::Vector.88", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.303", %"class.WTF::Vector.88", %"class.blink::KURL", %"class.absl::optional.308" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.276" }
%"class.WTF::HashMap.276" = type { %"class.WTF::HashTable.277" }
%"class.WTF::HashTable.277" = type <{ %"struct.WTF::KeyValuePair.280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.280" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.281" = type { %"class.absl::optional_internal::optional_data.282" }
%"class.absl::optional_internal::optional_data.282" = type { %"class.absl::optional_internal::optional_data_base.283" }
%"class.absl::optional_internal::optional_data_base.283" = type { %"class.absl::optional_internal::optional_data_dtor_base.284" }
%"class.absl::optional_internal::optional_data_dtor_base.284" = type { i8, %union.anon.285 }
%union.anon.285 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.88", %"class.WTF::String", i64, i64, %"class.WTF::Vector.286", %"class.WTF::Vector.291" }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.296 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.297 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.257" = type { %"class.absl::optional_internal::optional_data.258" }
%"class.absl::optional_internal::optional_data.258" = type { %"class.absl::optional_internal::optional_data_base.259" }
%"class.absl::optional_internal::optional_data_base.259" = type { %"class.absl::optional_internal::optional_data_dtor_base.260" }
%"class.absl::optional_internal::optional_data_dtor_base.260" = type { i8, %union.anon.261 }
%union.anon.261 = type { %"class.base::Time" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300" }
%"class.WTF::VectorBufferBase.300" = type { %"class.blink::KURL"*, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.303" = type { %"class.absl::optional_internal::optional_data.304" }
%"class.absl::optional_internal::optional_data.304" = type { %"class.absl::optional_internal::optional_data_base.305" }
%"class.absl::optional_internal::optional_data_base.305" = type { %"class.absl::optional_internal::optional_data_dtor_base.306" }
%"class.absl::optional_internal::optional_data_dtor_base.306" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector.319", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.314" }
%"struct.std::__1::atomic.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__atomic_base.316" }
%"struct.std::__1::__atomic_base.316" = type { %"struct.std::__1::__cxx_atomic_impl.317" }
%"struct.std::__1::__cxx_atomic_impl.317" = type { %"struct.std::__1::__cxx_atomic_base_impl.318" }
%"struct.std::__1::__cxx_atomic_base_impl.318" = type { i32 }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.321" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.WTF::Vector.330" = type { %"class.WTF::VectorBuffer.331" }
%"class.WTF::VectorBuffer.331" = type { %"class.WTF::VectorBufferBase.332" }
%"class.WTF::VectorBufferBase.332" = type { %"class.std::__1::unique_ptr.333"*, i32, i32 }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::ServerTimingHeader"* }
%"class.blink::ServerTimingHeader" = type <{ %"class.WTF::String", double, %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::HeaderFieldTokenizer" = type { i32, %"class.WTF::String" }
%"class.blink::ContentSecurityPolicyResponseHeaders" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", i8, [7 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringHasher" = type { i32, i8, i16 }

$_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_9CSPSourceEEENS3_INS0_5blink9CSPSourceEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE = comdat any

$_ZN7network5mojom14ConvertToBlinkINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3WTF6StringEEENS9_6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNS2_6vectorIT_NS6_ISG_EEEE = comdat any

$_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_13CSPHashSourceEEENS3_INS0_5blink13CSPHashSourceEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE = comdat any

$_ZN7network5mojom14ConvertToBlinkINS0_16CSPDirectiveNameENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES2_N3WTF6StringEEENSA_7HashMapIT1_T2_NSA_11DefaultHashISD_E4HashENSA_10HashTraitsISD_EENSI_ISE_EENSA_18PartitionAllocatorEEERKN4base8flat_mapIT_T0_NS3_4lessIvEENS3_6vectorINS3_4pairISP_SQ_EENS7_ISV_EEEEEE = comdat any

$_ZN7network5mojom5blink17TimingAllowOrigin20NewSerializedOriginsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE = comdat any

$_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_21ContentSecurityPolicyEEENS3_INS0_5blink21ContentSecurityPolicyEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE = comdat any

$_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_10LinkHeaderEEENS3_INS0_5blink10LinkHeaderEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EERbSI_SI_SI_SI_SI_SI_SI_SI_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEERbSC_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EERbSO_SO_RNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEESO_NS9_6VectorISC_Lj0ESI_EERNS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEESV_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm = comdat any

$_ZN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEEC2IJN3WTF6VectorINS0_INS3_21ContentSecurityPolicyEEELj0ENS7_18PartitionAllocatorEEENS0_INS3_23AllowCSPFromHeaderValueEEERNS1_25CrossOriginEmbedderPolicyERNS1_23CrossOriginOpenerPolicyERbN4absl8optionalINS8_INS2_18WebClientHintsTypeELj0ESB_EEEERN4base9TimeDeltaESO_RNS2_18XFrameOptionsValueENS8_INS0_INS3_10LinkHeaderEEELj0ESB_EENS0_INS3_17TimingAllowOriginEEESJ_EEENSP_10in_place_tEDpOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS2_14default_deleteIS5_EEEEEEmm = comdat any

@.str = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"nosniff\00", align 1
@_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E17kNoCacheDirective = internal constant [9 x i8] c"no-cache\00", align 1
@_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E17kNoStoreDirective = internal constant [9 x i8] c"no-store\00", align 1
@_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E24kMustRevalidateDirective = internal constant [16 x i8] c"must-revalidate\00", align 16
@_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E16kMaxAgeDirective = internal constant [8 x i8] c"max-age\00", align 1
@_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E30kStaleWhileRevalidateDirective = internal unnamed_addr constant [23 x i8] c"stale-while-revalidate\00", align 16
@.str.3 = private unnamed_addr constant [18 x i8] c"HTTP/1.1 200 OK\0D\0A\00", align 1
@_ZN5blink10http_names19kContentDispositionE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names12kContentTypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, WTF::String>]\00", align 1
@_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers = internal global i64 0, align 8
@.str.9 = private unnamed_addr constant [13 x i8] c"content-type\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"content-length\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"content-disposition\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"content-range\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"range\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"set-cookie\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, WTF::AtomicString>]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPHashSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, mojo::StructPtr<network::mojom::blink::CSPSourceList> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::ContentSecurityPolicy>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv = private unnamed_addr constant [82 x i8] c"const char *WTF::GetStringWithTypeName() [T = network::mojom::WebClientHintsType]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv = private unnamed_addr constant [98 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::LinkHeader>]\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS2_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [190 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<std::__1::unique_ptr<blink::ServerTimingHeader, std::__1::default_delete<blink::ServerTimingHeader> >, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::ServerTimingHeader, std::__1::default_delete<blink::ServerTimingHeader> >]\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN7network5mojom14ConvertToBlinkEh(i8 returned zeroext) local_unnamed_addr #0 {
  ret i8 %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7network5mojom14ConvertToBlinkENS0_16CSPDirectiveNameE(i32 returned) local_unnamed_addr #0 {
  ret i32 %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7network5mojom14ConvertToBlinkENS0_18WebClientHintsTypeE(i32 returned) local_unnamed_addr #0 {
  ret i32 %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN7network5mojom14ConvertToBlinkERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = select i1 %5, i8* %7, i8* %8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %4 to i64
  %13 = select i1 %5, i64 %11, i64 %12
  %14 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %9, i64 %13) #15
  ret %"class.WTF::StringImpl"* %14
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN7network5mojom14ConvertToBlinkERKN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEE(%"class.absl::optional"* dereferenceable(32)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  %19 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %14, i64 %18) #15
  br label %20

20:                                               ; preds = %1, %5
  %21 = phi %"class.WTF::StringImpl"* [ %19, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERK4GURL(%"class.blink::KURL"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1 {
  tail call void @_ZN5blink4KURLC1ERK4GURL(%"class.blink::KURL"* %0, %class.GURL* dereferenceable(120) %1) #15
  ret void
}

declare void @_ZN5blink4KURLC1ERK4GURL(%"class.blink::KURL"*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN7network5mojom14ConvertToBlinkERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1 {
  %2 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80) %0) #15
  ret %"class.blink::SecurityOrigin"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_9CSPSourceEEE(%"class.mojo::StructPtr.25"* noalias nocapture sret, %"class.mojo::StructPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.network::mojom::CSPSource"*, %"class.network::mojom::CSPSource"** %7, align 8
  %9 = bitcast %"class.network::mojom::CSPSource"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.network::mojom::CSPSource"* %8 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  %21 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %16, i64 %20) #15
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %22, align 8
  %23 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  %24 = load %"class.network::mojom::CSPSource"*, %"class.network::mojom::CSPSource"** %7, align 8
  %25 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %24, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  %38 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %33, i64 %37) #15
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = load %"class.network::mojom::CSPSource"*, %"class.network::mojom::CSPSource"** %7, align 8
  %41 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %40, i64 0, i32 2
  %42 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %40, i64 0, i32 4
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %51 = select i1 %47, i8* %49, i8* %50
  %52 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %40, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %46 to i64
  %55 = select i1 %47, i64 %53, i64 %54
  %56 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %51, i64 %55) #15
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = load %"class.network::mojom::CSPSource"*, %"class.network::mojom::CSPSource"** %7, align 8
  %59 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %58, i64 0, i32 5
  %60 = getelementptr inbounds %"class.network::mojom::CSPSource", %"class.network::mojom::CSPSource"* %58, i64 0, i32 6
  %61 = tail call i8* @_Znwm(i64 40) #16, !noalias !3
  %62 = bitcast i8* %61 to %"class.network::mojom::blink::CSPSource"*
  %63 = load i32, i32* %41, align 4, !noalias !3
  %64 = load i8, i8* %59, align 1, !range !2, !noalias !3
  %65 = icmp ne i8 %64, 0
  %66 = load i8, i8* %60, align 1, !range !2, !noalias !3
  %67 = icmp ne i8 %66, 0
  call void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"* nonnull %62, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %63, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %65, i1 zeroext %67) #15, !noalias !3
  %68 = ptrtoint i8* %61 to i64
  %69 = bitcast %"class.mojo::StructPtr.25"* %0 to i64*
  store i64 %68, i64* %69, align 8, !alias.scope !3
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #15
  br label %85

85:                                               ; preds = %2, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #15
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #15
  br label %101

101:                                              ; preds = %85, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #15
  br label %117

117:                                              ; preds = %101, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_13CSPHashSourceEEE(%"class.mojo::StructPtr.44"* noalias nocapture sret, %"class.mojo::StructPtr.32"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.network::mojom::CSPHashSource"*, %"class.network::mojom::CSPHashSource"** %10, align 8
  %12 = getelementptr inbounds %"class.network::mojom::CSPHashSource", %"class.network::mojom::CSPHashSource"* %11, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #15, !alias.scope !6
  %13 = getelementptr inbounds %"class.network::mojom::CSPHashSource", %"class.network::mojom::CSPHashSource"* %11, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !6
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !6
  %18 = sub i64 %15, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  %21 = inttoptr i64 %17 to i8*
  %22 = inttoptr i64 %15 to i8*
  br i1 %20, label %33, label %23, !prof !9

23:                                               ; preds = %2
  %24 = and i64 %18, 4294967295
  %25 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %24) #15
  %26 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8, !alias.scope !6
  %29 = trunc i64 %25 to i32
  store i32 %29, i32* %8, align 8, !alias.scope !6
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8, !noalias !6
  %32 = load i8*, i8** %13, align 8, !noalias !6
  br label %33

33:                                               ; preds = %23, %2
  %34 = phi i64 [ 0, %2 ], [ %27, %23 ]
  %35 = phi i32 [ 0, %2 ], [ %29, %23 ]
  %36 = phi i8* [ %22, %2 ], [ %32, %23 ]
  %37 = phi i8* [ %21, %2 ], [ %31, %23 ]
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = bitcast %"class.WTF::Vector"* %5 to i64*
  br label %65

41:                                               ; preds = %33, %57
  %42 = phi i32 [ %59, %57 ], [ 0, %33 ]
  %43 = phi i32 [ %58, %57 ], [ %35, %33 ]
  %44 = phi i8* [ %55, %57 ], [ %37, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15, !noalias !6
  %45 = load i8, i8* %44, align 1
  store i8 %45, i8* %4, align 1, !noalias !6
  %46 = icmp eq i32 %42, %43
  br i1 %46, label %53, label %47, !prof !9

47:                                               ; preds = %41
  %48 = load i8*, i8** %7, align 8, !alias.scope !6
  %49 = zext i32 %42 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  store i8 %45, i8* %50, align 1
  %51 = load i32, i32* %9, align 4, !alias.scope !6
  %52 = add i32 %51, 1
  store i32 %52, i32* %9, align 4, !alias.scope !6
  br label %54

53:                                               ; preds = %41
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector"* nonnull %5, i8* nonnull dereferenceable(1) %4) #15
  br label %54

54:                                               ; preds = %53, %47
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15, !noalias !6
  %55 = getelementptr inbounds i8, i8* %44, i64 1
  %56 = icmp eq i8* %55, %36
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %8, align 8, !alias.scope !6
  %59 = load i32, i32* %9, align 4, !alias.scope !6
  br label %41

60:                                               ; preds = %54
  %61 = bitcast %"class.WTF::Vector"* %5 to i64*
  %62 = load i64, i64* %61, align 8, !noalias !10
  %63 = load i32, i32* %8, align 8, !noalias !10
  %64 = load i32, i32* %9, align 4, !noalias !10
  br label %65

65:                                               ; preds = %39, %60
  %66 = phi i64* [ %40, %39 ], [ %61, %60 ]
  %67 = phi i32 [ 0, %39 ], [ %64, %60 ]
  %68 = phi i32 [ %35, %39 ], [ %63, %60 ]
  %69 = phi i64 [ %34, %39 ], [ %62, %60 ]
  %70 = load %"class.network::mojom::CSPHashSource"*, %"class.network::mojom::CSPHashSource"** %10, align 8
  %71 = getelementptr inbounds %"class.network::mojom::CSPHashSource", %"class.network::mojom::CSPHashSource"* %70, i64 0, i32 0
  %72 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #15, !noalias !10
  %73 = call i8* @_Znwm(i64 24) #16, !noalias !10
  %74 = bitcast i8* %73 to %"class.network::mojom::blink::CSPHashSource"*
  %75 = load i32, i32* %71, align 4, !noalias !10
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %78 = bitcast %"class.WTF::Vector"* %3 to i64*
  store i64 0, i64* %78, align 8, !noalias !10
  store atomic i64 0, i64* %66 monotonic, align 8, !noalias !10
  store atomic i64 %69, i64* %78 monotonic, align 8, !noalias !10
  store i32 %68, i32* %76, align 8, !noalias !10
  store i32 0, i32* %8, align 8, !noalias !10
  store i32 %67, i32* %77, align 4, !noalias !10
  store i32 0, i32* %9, align 4, !noalias !10
  call void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"* nonnull %74, i32 %75, %"class.WTF::Vector"* nonnull %3) #15, !noalias !10
  %79 = ptrtoint i8* %73 to i64
  %80 = bitcast %"class.mojo::StructPtr.44"* %0 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !10
  %81 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8, !noalias !10
  %83 = icmp eq i8* %82, null
  br i1 %83, label %89, label %84, !prof !13

84:                                               ; preds = %65
  %85 = load i32, i32* %77, align 4, !noalias !10
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %88, label %87, !prof !9

87:                                               ; preds = %84
  store i32 0, i32* %77, align 4, !noalias !10
  br label %88

88:                                               ; preds = %87, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %82) #15, !noalias !10
  store i8* null, i8** %81, align 8, !noalias !10
  br label %89

89:                                               ; preds = %65, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #15, !noalias !10
  %90 = load i8*, i8** %7, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %97, label %92, !prof !13

92:                                               ; preds = %89
  %93 = load i32, i32* %9, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95, !prof !9

95:                                               ; preds = %92
  store i32 0, i32* %9, align 4
  br label %96

96:                                               ; preds = %95, %92
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %90) #15
  store i8* null, i8** %7, align 8
  br label %97

97:                                               ; preds = %89, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_13CSPSourceListEEE(%"class.mojo::StructPtr.79"* noalias sret, %"class.mojo::StructPtr.51"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::Vector.83", align 8
  %4 = alloca %"class.WTF::Vector.88", align 8
  %5 = alloca %"class.WTF::Vector.93", align 8
  %6 = bitcast %"class.WTF::Vector.83"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %3, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.mojo::StructPtr.51", %"class.mojo::StructPtr.51"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::Vector.83"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.network::mojom::CSPSourceList"*, %"class.network::mojom::CSPSourceList"** %9, align 8
  %12 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %11, i64 0, i32 0
  call void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_9CSPSourceEEENS3_INS0_5blink9CSPSourceEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.83"* nonnull sret %3, %"class.std::__1::vector.55"* dereferenceable(24) %12)
  %13 = bitcast %"class.WTF::Vector.88"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %4, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.WTF::Vector.88"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load %"class.network::mojom::CSPSourceList"*, %"class.network::mojom::CSPSourceList"** %9, align 8
  %18 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %17, i64 0, i32 1
  call void @_ZN7network5mojom14ConvertToBlinkINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3WTF6StringEEENS9_6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNS2_6vectorIT_NS6_ISG_EEEE(%"class.WTF::Vector.88"* nonnull sret %4, %"class.std::__1::vector.62"* dereferenceable(24) %18)
  %19 = bitcast %"class.WTF::Vector.93"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %5, i64 0, i32 0, i32 0, i32 2
  %22 = bitcast %"class.WTF::Vector.93"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load %"class.network::mojom::CSPSourceList"*, %"class.network::mojom::CSPSourceList"** %9, align 8
  %24 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %23, i64 0, i32 2
  call void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_13CSPHashSourceEEENS3_INS0_5blink13CSPHashSourceEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.93"* nonnull sret %5, %"class.std::__1::vector.69"* dereferenceable(24) %24)
  %25 = load %"class.network::mojom::CSPSourceList"*, %"class.network::mojom::CSPSourceList"** %9, align 8
  %26 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 3
  %27 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 4
  %28 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 5
  %29 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 6
  %30 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 7
  %31 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 8
  %32 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 9
  %33 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 10
  %34 = getelementptr inbounds %"class.network::mojom::CSPSourceList", %"class.network::mojom::CSPSourceList"* %25, i64 0, i32 11
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EERbSI_SI_SI_SI_SI_SI_SI_SI_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.79"* %0, %"class.WTF::Vector.83"* nonnull dereferenceable(16) %3, %"class.WTF::Vector.88"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.93"* nonnull dereferenceable(16) %5, i8* dereferenceable(1) %26, i8* dereferenceable(1) %27, i8* dereferenceable(1) %28, i8* dereferenceable(1) %29, i8* dereferenceable(1) %30, i8* dereferenceable(1) %31, i8* dereferenceable(1) %32, i8* dereferenceable(1) %33, i8* dereferenceable(1) %34) #15
  %35 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %20, align 8
  %36 = icmp eq %"class.mojo::StructPtr.44"* %35, null
  br i1 %36, label %59, label %37, !prof !13

37:                                               ; preds = %2
  %38 = bitcast %"class.mojo::StructPtr.44"* %35 to i8*
  %39 = load i32, i32* %21, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %57, label %41, !prof !9

41:                                               ; preds = %37
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %35, i64 %42
  br label %44

44:                                               ; preds = %51, %41
  %45 = phi %"class.mojo::StructPtr.44"* [ %52, %51 ], [ %35, %41 ]
  %46 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %48 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %47) #15
  %50 = bitcast %"class.network::mojom::blink::CSPHashSource"* %47 to i8*
  call void @_ZdlPv(i8* %50) #16
  br label %51

51:                                               ; preds = %49, %44
  %52 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %45, i64 1
  %53 = icmp eq %"class.mojo::StructPtr.44"* %52, %43
  br i1 %53, label %54, label %44

54:                                               ; preds = %51
  store i32 0, i32* %21, align 4
  %55 = bitcast %"class.WTF::Vector.93"* %5 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %37
  %58 = phi i8* [ %56, %54 ], [ %38, %37 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %58) #15
  store %"class.mojo::StructPtr.44"* null, %"class.mojo::StructPtr.44"** %20, align 8
  br label %59

59:                                               ; preds = %2, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  %60 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %61 = icmp eq %"class.WTF::String"* %60, null
  br i1 %61, label %95, label %62, !prof !13

62:                                               ; preds = %59
  %63 = bitcast %"class.WTF::String"* %60 to i8*
  %64 = load i32, i32* %15, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %93, label %66, !prof !9

66:                                               ; preds = %62
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 %67
  br label %69

69:                                               ; preds = %87, %66
  %70 = phi %"class.WTF::String"* [ %88, %87 ], [ %60, %66 ]
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %87

87:                                               ; preds = %86, %83, %69
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 1
  %89 = icmp eq %"class.WTF::String"* %88, %68
  br i1 %89, label %90, label %69

90:                                               ; preds = %87
  store i32 0, i32* %15, align 4
  %91 = bitcast %"class.WTF::Vector.88"* %4 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %62
  %94 = phi i8* [ %92, %90 ], [ %63, %62 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  br label %95

95:                                               ; preds = %59, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  %96 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %7, align 8
  %97 = icmp eq %"class.mojo::StructPtr.25"* %96, null
  br i1 %97, label %120, label %98, !prof !13

98:                                               ; preds = %95
  %99 = bitcast %"class.mojo::StructPtr.25"* %96 to i8*
  %100 = load i32, i32* %8, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %118, label %102, !prof !9

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %96, i64 %103
  br label %105

105:                                              ; preds = %112, %102
  %106 = phi %"class.mojo::StructPtr.25"* [ %113, %112 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %106, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %107, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %107, align 8
  %109 = icmp eq %"class.network::mojom::blink::CSPSource"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %105
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %108) #15
  %111 = bitcast %"class.network::mojom::blink::CSPSource"* %108 to i8*
  call void @_ZdlPv(i8* %111) #16
  br label %112

112:                                              ; preds = %110, %105
  %113 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %106, i64 1
  %114 = icmp eq %"class.mojo::StructPtr.25"* %113, %104
  br i1 %114, label %115, label %105

115:                                              ; preds = %112
  store i32 0, i32* %8, align 4
  %116 = bitcast %"class.WTF::Vector.83"* %3 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %98
  %119 = phi i8* [ %117, %115 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #15
  store %"class.mojo::StructPtr.25"* null, %"class.mojo::StructPtr.25"** %7, align 8
  br label %120

120:                                              ; preds = %95, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_9CSPSourceEEENS3_INS0_5blink9CSPSourceEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.83"* noalias sret, %"class.std::__1::vector.55"* dereferenceable(24)) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.mojo::StructPtr.25", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.83"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %8 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.mojo::StructPtr"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.55"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  %17 = inttoptr i64 %12 to %"class.mojo::StructPtr"*
  %18 = inttoptr i64 %10 to %"class.mojo::StructPtr"*
  br i1 %16, label %30, label %19, !prof !9

19:                                               ; preds = %2
  %20 = and i64 %14, 4294967295
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.83"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %5, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %27, align 8
  %29 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %8, align 8
  br label %30

30:                                               ; preds = %2, %19
  %31 = phi %"class.mojo::StructPtr"* [ %18, %2 ], [ %29, %19 ]
  %32 = phi %"class.mojo::StructPtr"* [ %17, %2 ], [ %28, %19 ]
  %33 = icmp eq %"class.mojo::StructPtr"* %32, %31
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.mojo::StructPtr.25"* %3 to i8*
  %36 = bitcast %"class.mojo::StructPtr.25"* %3 to i64*
  %37 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %39

38:                                               ; preds = %58, %30
  ret void

39:                                               ; preds = %34, %58
  %40 = phi %"class.mojo::StructPtr"* [ %32, %34 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_9CSPSourceEEE(%"class.mojo::StructPtr.25"* nonnull sret %3, %"class.mojo::StructPtr"* dereferenceable(8) %40)
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %5, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %53, label %44, !prof !9

44:                                               ; preds = %39
  %45 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %4, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %45, i64 %46
  %48 = bitcast %"class.mojo::StructPtr.25"* %47 to i64*
  %49 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %49, align 8
  %50 = load i64, i64* %36, align 8
  store i64 %50, i64* %48, align 8
  %51 = load i32, i32* %6, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %6, align 4
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %37, align 8
  br label %58

53:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.83"* %0, %"class.mojo::StructPtr.25"* nonnull dereferenceable(8) %3) #15
  %54 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %37, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %37, align 8
  %55 = icmp eq %"class.network::mojom::blink::CSPSource"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.network::mojom::blink::CSPSource"* %54 to i8*
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %54) #15
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %44, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  %59 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 1
  %60 = icmp eq %"class.mojo::StructPtr"* %59, %31
  br i1 %60, label %38, label %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom14ConvertToBlinkINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3WTF6StringEEENS9_6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNS2_6vectorIT_NS6_ISG_EEEE(%"class.WTF::Vector.88"* noalias sret, %"class.std::__1::vector.62"* dereferenceable(24)) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.88"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %8 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.62"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  %17 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  %18 = inttoptr i64 %10 to %"class.std::__1::basic_string"*
  br i1 %16, label %30, label %19, !prof !9

19:                                               ; preds = %2
  %20 = and i64 %14, 4294967295
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.88"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %5, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  br label %30

30:                                               ; preds = %2, %19
  %31 = phi %"class.std::__1::basic_string"* [ %18, %2 ], [ %29, %19 ]
  %32 = phi %"class.std::__1::basic_string"* [ %17, %2 ], [ %28, %19 ]
  %33 = icmp eq %"class.std::__1::basic_string"* %32, %31
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.WTF::String"* %3 to i8*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %38

37:                                               ; preds = %80, %30
  ret void

38:                                               ; preds = %34, %80
  %39 = phi %"class.std::__1::basic_string"* [ %32, %34 ], [ %81, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %47 = select i1 %43, i8* %45, i8* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %42 to i64
  %51 = select i1 %43, i64 %49, i64 %50
  %52 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %47, i64 %51) #15
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %36, align 8
  %53 = load i32, i32* %6, align 4
  %54 = load i32, i32* %5, align 8
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %64, label %56, !prof !9

56:                                               ; preds = %38
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %59 = zext i32 %53 to i64
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 %59
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 %57, i64* %61, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %62 = load i32, i32* %6, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %6, align 4
  br label %80

64:                                               ; preds = %38
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.88"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %56, %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %82 = icmp eq %"class.std::__1::basic_string"* %81, %31
  br i1 %82, label %37, label %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_13CSPHashSourceEEENS3_INS0_5blink13CSPHashSourceEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.93"* noalias sret, %"class.std::__1::vector.69"* dereferenceable(24)) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.mojo::StructPtr.44", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.93"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %8 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.mojo::StructPtr.32"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.69"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  %17 = inttoptr i64 %12 to %"class.mojo::StructPtr.32"*
  %18 = inttoptr i64 %10 to %"class.mojo::StructPtr.32"*
  br i1 %16, label %30, label %19, !prof !9

19:                                               ; preds = %2
  %20 = and i64 %14, 4294967295
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %5, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"** %27, align 8
  %29 = load %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"** %8, align 8
  br label %30

30:                                               ; preds = %2, %19
  %31 = phi %"class.mojo::StructPtr.32"* [ %18, %2 ], [ %29, %19 ]
  %32 = phi %"class.mojo::StructPtr.32"* [ %17, %2 ], [ %28, %19 ]
  %33 = icmp eq %"class.mojo::StructPtr.32"* %32, %31
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.mojo::StructPtr.44"* %3 to i8*
  %36 = bitcast %"class.mojo::StructPtr.44"* %3 to i64*
  %37 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %39

38:                                               ; preds = %58, %30
  ret void

39:                                               ; preds = %34, %58
  %40 = phi %"class.mojo::StructPtr.32"* [ %32, %34 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_13CSPHashSourceEEE(%"class.mojo::StructPtr.44"* nonnull sret %3, %"class.mojo::StructPtr.32"* dereferenceable(8) %40)
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %5, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %53, label %44, !prof !9

44:                                               ; preds = %39
  %45 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %4, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %45, i64 %46
  %48 = bitcast %"class.mojo::StructPtr.44"* %47 to i64*
  %49 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %49, align 8
  %50 = load i64, i64* %36, align 8
  store i64 %50, i64* %48, align 8
  %51 = load i32, i32* %6, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %6, align 4
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %37, align 8
  br label %58

53:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.93"* %0, %"class.mojo::StructPtr.44"* nonnull dereferenceable(8) %3) #15
  %54 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %37, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %37, align 8
  %55 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.network::mojom::blink::CSPHashSource"* %54 to i8*
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %54) #15
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %44, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  %59 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %40, i64 1
  %60 = icmp eq %"class.mojo::StructPtr.32"* %59, %31
  br i1 %60, label %38, label %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo16InlinedStructPtrINS0_27ContentSecurityPolicyHeaderEEE(%"class.mojo::InlinedStructPtr.101"* noalias sret, %"class.mojo::InlinedStructPtr"* dereferenceable(40)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = bitcast %"class.mojo::InlinedStructPtr"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.mojo::InlinedStructPtr"* %1 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %12, i64 %16) #15
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %0, i64 0, i32 0
  %22 = load i32, i32* %19, align 4, !noalias !14
  %23 = load i32, i32* %20, align 4, !noalias !14
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* %21, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %22, i32 %23) #15
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %0, i64 0, i32 1
  store i32 1, i32* %24, align 8, !alias.scope !14
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %40

40:                                               ; preds = %2, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_15CSPTrustedTypesEEE(%"class.mojo::StructPtr.110"* noalias sret, %"class.mojo::StructPtr.103"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::Vector.88", align 8
  %4 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.network::mojom::CSPTrustedTypes"*, %"class.network::mojom::CSPTrustedTypes"** %4, align 8
  %6 = icmp eq %"class.network::mojom::CSPTrustedTypes"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.mojo::StructPtr.110"* %0 to i64*
  store i64 0, i64* %8, align 8
  br label %53

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::Vector.88"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.network::mojom::CSPTrustedTypes", %"class.network::mojom::CSPTrustedTypes"* %5, i64 0, i32 0
  call void @_ZN7network5mojom14ConvertToBlinkINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3WTF6StringEEENS9_6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNS2_6vectorIT_NS6_ISG_EEEE(%"class.WTF::Vector.88"* nonnull sret %3, %"class.std::__1::vector.62"* dereferenceable(24) %11)
  %12 = load %"class.network::mojom::CSPTrustedTypes"*, %"class.network::mojom::CSPTrustedTypes"** %4, align 8
  %13 = getelementptr inbounds %"class.network::mojom::CSPTrustedTypes", %"class.network::mojom::CSPTrustedTypes"* %12, i64 0, i32 1
  %14 = getelementptr inbounds %"class.network::mojom::CSPTrustedTypes", %"class.network::mojom::CSPTrustedTypes"* %12, i64 0, i32 2
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEERbSC_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.110"* %0, %"class.WTF::Vector.88"* nonnull dereferenceable(16) %3, i8* dereferenceable(1) %13, i8* dereferenceable(1) %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !13

18:                                               ; preds = %9
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !9

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.88"* %3 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %9, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  br label %53

53:                                               ; preds = %52, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_21ContentSecurityPolicyEEE(%"class.mojo::StructPtr.141"* noalias sret, %"class.mojo::StructPtr.117"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.mojo::StructPtr.79", align 8
  %6 = alloca %"class.mojo::StructPtr.25", align 8
  %7 = alloca %"class.WTF::HashMap", align 8
  %8 = alloca %"class.WTF::HashMap.147", align 8
  %9 = alloca %"class.mojo::InlinedStructPtr.101", align 8
  %10 = alloca %"class.WTF::Vector.88", align 8
  %11 = alloca %"class.mojo::StructPtr.110", align 8
  %12 = alloca %"class.WTF::Vector.88", align 8
  %13 = bitcast %"class.mojo::StructPtr.25"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.mojo::StructPtr.117", %"class.mojo::StructPtr.117"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %14, align 8
  %16 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %15, i64 0, i32 0
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_9CSPSourceEEE(%"class.mojo::StructPtr.25"* nonnull sret %6, %"class.mojo::StructPtr"* dereferenceable(8) %16)
  %17 = bitcast %"class.WTF::HashMap"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %14, align 8
  %19 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %18, i64 0, i32 1
  call void @_ZN7network5mojom14ConvertToBlinkINS0_16CSPDirectiveNameENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES2_N3WTF6StringEEENSA_7HashMapIT1_T2_NSA_11DefaultHashISD_E4HashENSA_10HashTraitsISD_EENSI_ISE_EENSA_18PartitionAllocatorEEERKN4base8flat_mapIT_T0_NS3_4lessIvEENS3_6vectorINS3_4pairISP_SQ_EENS7_ISV_EEEEEE(%"class.WTF::HashMap"* nonnull sret %7, %"class.base::flat_map"* dereferenceable(24) %19)
  %20 = bitcast %"class.WTF::HashMap.147"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  %21 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false) #15, !alias.scope !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 20, i1 false) #15, !alias.scope !17
  %22 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::pair.132"*, %"struct.std::__1::pair.132"** %22, align 8, !noalias !17
  %24 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %25 = load %"struct.std::__1::pair.132"*, %"struct.std::__1::pair.132"** %24, align 8, !noalias !17
  %26 = icmp eq %"struct.std::__1::pair.132"* %23, %25
  br i1 %26, label %47, label %27

27:                                               ; preds = %2
  %28 = bitcast i32* %4 to i8*
  %29 = bitcast %"class.mojo::StructPtr.79"* %5 to i8*
  %30 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %8, i64 0, i32 0
  %31 = getelementptr inbounds %"class.mojo::StructPtr.79", %"class.mojo::StructPtr.79"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %42, %27
  %33 = phi %"struct.std::__1::pair.132"* [ %23, %27 ], [ %43, %42 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #15, !noalias !17
  %34 = getelementptr inbounds %"struct.std::__1::pair.132", %"struct.std::__1::pair.132"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %4, align 4, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15, !noalias !17
  %36 = getelementptr inbounds %"struct.std::__1::pair.132", %"struct.std::__1::pair.132"* %33, i64 0, i32 1
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_13CSPSourceListEEE(%"class.mojo::StructPtr.79"* nonnull sret %5, %"class.mojo::StructPtr.51"* dereferenceable(8) %36) #15
  %37 = call { %"struct.WTF::KeyValuePair.151"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.148"* nonnull %30, i32* nonnull dereferenceable(4) %4, %"class.mojo::StructPtr.79"* nonnull dereferenceable(8) %5) #15
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %31, align 8, !noalias !17
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %31, align 8, !noalias !17
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %32
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #15
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %40, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #15, !noalias !17
  %43 = getelementptr inbounds %"struct.std::__1::pair.132", %"struct.std::__1::pair.132"* %33, i64 1
  %44 = icmp eq %"struct.std::__1::pair.132"* %43, %25
  br i1 %44, label %45, label %32

45:                                               ; preds = %42
  %46 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %14, align 8
  br label %47

47:                                               ; preds = %45, %2
  %48 = phi %"class.network::mojom::ContentSecurityPolicy"* [ %46, %45 ], [ %21, %2 ]
  %49 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 3
  %50 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 4
  %51 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 5
  %52 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 6
  %53 = bitcast %"class.mojo::InlinedStructPtr.101"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15
  %54 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 7
  %55 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15, !noalias !20
  %56 = bitcast %"class.mojo::InlinedStructPtr"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1, !noalias !20
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8, !noalias !20
  %62 = bitcast %"class.mojo::InlinedStructPtr"* %54 to i8*
  %63 = select i1 %59, i8* %61, i8* %62
  %64 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8, !noalias !20
  %66 = zext i8 %58 to i64
  %67 = select i1 %59, i64 %65, i64 %66
  %68 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %63, i64 %67) #15, !noalias !20
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %69, align 8, !noalias !20
  %70 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 7, i32 0, i32 1
  %71 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %48, i64 0, i32 7, i32 0, i32 2
  %72 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %9, i64 0, i32 0
  %73 = load i32, i32* %70, align 4, !noalias !23
  %74 = load i32, i32* %71, align 4, !noalias !23
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %72, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %73, i32 %74) #15
  %75 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %9, i64 0, i32 1
  store i32 1, i32* %75, align 8, !alias.scope !23
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8, !noalias !20
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %47
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #15
  br label %91

91:                                               ; preds = %47, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15, !noalias !20
  %92 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %14, align 8
  %93 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %92, i64 0, i32 8
  %94 = bitcast %"class.WTF::Vector.88"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #15
  %95 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %92, i64 0, i32 9
  call void @_ZN7network5mojom14ConvertToBlinkINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3WTF6StringEEENS9_6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNS2_6vectorIT_NS6_ISG_EEEE(%"class.WTF::Vector.88"* nonnull sret %10, %"class.std::__1::vector.62"* dereferenceable(24) %95)
  %96 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %14, align 8
  %97 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %96, i64 0, i32 10
  %98 = bitcast %"class.mojo::StructPtr.110"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #15
  %99 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %96, i64 0, i32 11
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_15CSPTrustedTypesEEE(%"class.mojo::StructPtr.110"* nonnull sret %11, %"class.mojo::StructPtr.103"* dereferenceable(8) %99)
  %100 = bitcast %"class.WTF::Vector.88"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #15
  %101 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %14, align 8
  %102 = getelementptr inbounds %"class.network::mojom::ContentSecurityPolicy", %"class.network::mojom::ContentSecurityPolicy"* %101, i64 0, i32 12
  call void @_ZN7network5mojom14ConvertToBlinkINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3WTF6StringEEENS9_6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNS2_6vectorIT_NS6_ISG_EEEE(%"class.WTF::Vector.88"* nonnull sret %12, %"class.std::__1::vector.62"* dereferenceable(24) %102)
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EERbSO_SO_RNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEESO_NS9_6VectorISC_Lj0ESI_EERNS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEESV_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.141"* %0, %"class.mojo::StructPtr.25"* nonnull dereferenceable(8) %6, %"class.WTF::HashMap"* nonnull dereferenceable(24) %7, %"class.WTF::HashMap.147"* nonnull dereferenceable(24) %8, i8* dereferenceable(1) %49, i8* dereferenceable(1) %50, i8* dereferenceable(1) %51, i32* dereferenceable(4) %52, %"class.mojo::InlinedStructPtr.101"* nonnull dereferenceable(24) %9, i8* dereferenceable(1) %93, %"class.WTF::Vector.88"* nonnull dereferenceable(16) %10, i32* dereferenceable(4) %97, %"class.mojo::StructPtr.110"* nonnull dereferenceable(8) %11, %"class.WTF::Vector.88"* nonnull dereferenceable(16) %12) #15
  %103 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %12, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %103, align 8
  %105 = icmp eq %"class.WTF::String"* %104, null
  br i1 %105, label %140, label %106, !prof !13

106:                                              ; preds = %91
  %107 = bitcast %"class.WTF::String"* %104 to i8*
  %108 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %12, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %138, label %111, !prof !9

111:                                              ; preds = %106
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %112
  br label %114

114:                                              ; preds = %132, %111
  %115 = phi %"class.WTF::String"* [ %133, %132 ], [ %104, %111 ]
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #15
  br label %132

132:                                              ; preds = %131, %128, %114
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 1
  %134 = icmp eq %"class.WTF::String"* %133, %113
  br i1 %134, label %135, label %114

135:                                              ; preds = %132
  store i32 0, i32* %108, align 4
  %136 = bitcast %"class.WTF::Vector.88"* %12 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %135, %106
  %139 = phi i8* [ %137, %135 ], [ %107, %106 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %139) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %103, align 8
  br label %140

140:                                              ; preds = %91, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #15
  %141 = getelementptr inbounds %"class.mojo::StructPtr.110", %"class.mojo::StructPtr.110"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %142 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %141, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %141, align 8
  %143 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %142) #15
  %145 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %142 to i8*
  call void @_ZdlPv(i8* %145) #16
  br label %146

146:                                              ; preds = %140, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #15
  %147 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %10, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::String"*, %"class.WTF::String"** %147, align 8
  %149 = icmp eq %"class.WTF::String"* %148, null
  br i1 %149, label %184, label %150, !prof !13

150:                                              ; preds = %146
  %151 = bitcast %"class.WTF::String"* %148 to i8*
  %152 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %10, i64 0, i32 0, i32 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %182, label %155, !prof !9

155:                                              ; preds = %150
  %156 = zext i32 %153 to i64
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %148, i64 %156
  br label %158

158:                                              ; preds = %176, %155
  %159 = phi %"class.WTF::String"* [ %177, %176 ], [ %148, %155 ]
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #15
  br label %176

176:                                              ; preds = %175, %172, %158
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 1
  %178 = icmp eq %"class.WTF::String"* %177, %157
  br i1 %178, label %179, label %158

179:                                              ; preds = %176
  store i32 0, i32* %152, align 4
  %180 = bitcast %"class.WTF::Vector.88"* %10 to i8**
  %181 = load i8*, i8** %180, align 8
  br label %182

182:                                              ; preds = %179, %150
  %183 = phi i8* [ %181, %179 ], [ %151, %150 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %183) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %147, align 8
  br label %184

184:                                              ; preds = %146, %182
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #15
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %72) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #15
  %185 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %8, i64 0, i32 0, i32 0
  %186 = load %"struct.WTF::KeyValuePair.151"*, %"struct.WTF::KeyValuePair.151"** %185, align 8
  %187 = icmp eq %"struct.WTF::KeyValuePair.151"* %186, null
  br i1 %187, label %210, label %188, !prof !13

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %8, i64 0, i32 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %208, label %192

192:                                              ; preds = %188
  %193 = zext i32 %190 to i64
  br label %194

194:                                              ; preds = %205, %192
  %195 = phi i64 [ 0, %192 ], [ %206, %205 ]
  %196 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %186, i64 %195, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, -1000001
  br i1 %198, label %205, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %186, i64 %195, i32 1, i32 0, i32 0, i32 0, i32 0
  %201 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %200, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %200, align 8
  %202 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %199
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %201) #15
  %204 = bitcast %"class.network::mojom::blink::CSPSourceList"* %201 to i8*
  call void @_ZdlPv(i8* %204) #16
  br label %205

205:                                              ; preds = %203, %199, %194
  %206 = add nuw nsw i64 %195, 1
  %207 = icmp eq i64 %206, %193
  br i1 %207, label %208, label %194

208:                                              ; preds = %205, %188
  %209 = bitcast %"struct.WTF::KeyValuePair.151"* %186 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %209) #15
  store %"struct.WTF::KeyValuePair.151"* null, %"struct.WTF::KeyValuePair.151"** %185, align 8
  br label %210

210:                                              ; preds = %184, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  %211 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 0
  %212 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %211, align 8
  %213 = icmp eq %"struct.WTF::KeyValuePair"* %212, null
  br i1 %213, label %247, label %214, !prof !13

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 1
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %245, label %218

218:                                              ; preds = %214
  %219 = zext i32 %216 to i64
  br label %220

220:                                              ; preds = %242, %218
  %221 = phi i64 [ 0, %218 ], [ %243, %242 ]
  %222 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %212, i64 %221, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, -1000001
  br i1 %224, label %242, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %212, i64 %221, i32 1, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #15
  br label %242

242:                                              ; preds = %241, %238, %225, %220
  %243 = add nuw nsw i64 %221, 1
  %244 = icmp eq i64 %243, %219
  br i1 %244, label %245, label %220

245:                                              ; preds = %242, %214
  %246 = bitcast %"struct.WTF::KeyValuePair"* %212 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #15
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %211, align 8
  br label %247

247:                                              ; preds = %210, %245
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  %248 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %248, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %248, align 8
  %250 = icmp eq %"class.network::mojom::blink::CSPSource"* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %249) #15
  %252 = bitcast %"class.network::mojom::blink::CSPSource"* %249 to i8*
  call void @_ZdlPv(i8* %252) #16
  br label %253

253:                                              ; preds = %247, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom14ConvertToBlinkINS0_16CSPDirectiveNameENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES2_N3WTF6StringEEENSA_7HashMapIT1_T2_NSA_11DefaultHashISD_E4HashENSA_10HashTraitsISD_EENSI_ISE_EENSA_18PartitionAllocatorEEERKN4base8flat_mapIT_T0_NS3_4lessIvEENS3_6vectorINS3_4pairISP_SQ_EENS7_ISV_EEEEEE(%"class.WTF::HashMap"* noalias sret, %"class.base::flat_map"* dereferenceable(24)) local_unnamed_addr #1 comdat {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::HashMap"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #15
  %7 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %8, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = bitcast i32* %3 to i8*
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  br label %18

17:                                               ; preds = %52, %2
  ret void

18:                                               ; preds = %12, %52
  %19 = phi %"struct.std::__1::pair"* [ %8, %12 ], [ %53, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %25 to i64
  %34 = select i1 %26, i64 %32, i64 %33
  %35 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %30, i64 %34) #15
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %15, align 8
  %36 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %16, i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %18
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %18, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 1
  %54 = icmp eq %"struct.std::__1::pair"* %53, %10
  br i1 %54, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_23AllowCSPFromHeaderValueEEE(%"class.mojo::StructPtr.162"* noalias nocapture sret, %"class.mojo::StructPtr.155"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %class.scoped_refptr.12, align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.mojo::StructPtr.155", %"class.mojo::StructPtr.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.network::mojom::AllowCSPFromHeaderValue"*, %"class.network::mojom::AllowCSPFromHeaderValue"** %5, align 8
  %7 = icmp eq %"class.network::mojom::AllowCSPFromHeaderValue"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.mojo::StructPtr.162"* %0 to i64*
  store i64 0, i64* %9, align 8
  br label %82

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.network::mojom::AllowCSPFromHeaderValue", %"class.network::mojom::AllowCSPFromHeaderValue"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %81 [
    i32 0, label %13
    i32 1, label %22
    i32 2, label %42
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.network::mojom::AllowCSPFromHeaderValue", %"class.network::mojom::AllowCSPFromHeaderValue"* %6, i64 0, i32 1
  %15 = bitcast %"union.network::mojom::AllowCSPFromHeaderValue::Union_"* %14 to i8*
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = tail call i8* @_Znwm(i64 16) #16, !noalias !26
  %19 = bitcast i8* %18 to %"class.network::mojom::blink::AllowCSPFromHeaderValue"*
  tail call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueC1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %19) #15, !noalias !26
  %20 = ptrtoint i8* %18 to i64
  %21 = bitcast %"class.mojo::StructPtr.162"* %0 to i64*
  store i64 %20, i64* %21, align 8, !alias.scope !26
  tail call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue14set_allow_starEb(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %19, i1 zeroext %17) #15, !noalias !26
  br label %82

22:                                               ; preds = %10
  %23 = bitcast %class.scoped_refptr.12* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.network::mojom::AllowCSPFromHeaderValue", %"class.network::mojom::AllowCSPFromHeaderValue"* %6, i64 0, i32 1, i32 0
  %25 = load %"class.url::Origin"*, %"class.url::Origin"** %24, align 8
  %26 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80) %25) #15
  %27 = getelementptr inbounds %class.scoped_refptr.12, %class.scoped_refptr.12* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %26, %"class.blink::SecurityOrigin"** %27, align 8
  %28 = tail call i8* @_Znwm(i64 16) #16, !noalias !29
  %29 = bitcast i8* %28 to %"class.network::mojom::blink::AllowCSPFromHeaderValue"*
  tail call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueC1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %29) #15, !noalias !29
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.mojo::StructPtr.162"* %0 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !29
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue10set_originERK13scoped_refptrIKN5blink14SecurityOriginEE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %29, %class.scoped_refptr.12* nonnull dereferenceable(8) %3) #15, !noalias !29
  %32 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %27, align 8
  %33 = icmp eq %"class.blink::SecurityOrigin"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #15
  %36 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %32) #15
  %40 = bitcast %"class.blink::SecurityOrigin"* %32 to i8*
  call void @free(i8* %40) #15
  br label %41

41:                                               ; preds = %22, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %82

42:                                               ; preds = %10
  %43 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #15
  %44 = getelementptr inbounds %"class.network::mojom::AllowCSPFromHeaderValue", %"class.network::mojom::AllowCSPFromHeaderValue"* %6, i64 0, i32 1
  %45 = bitcast %"union.network::mojom::AllowCSPFromHeaderValue::Union_"* %44 to %"class.std::__1::basic_string"**
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %49 to i64
  %58 = select i1 %50, i64 %56, i64 %57
  %59 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %54, i64 %58) #15
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %60, align 8
  %61 = tail call i8* @_Znwm(i64 16) #16, !noalias !32
  %62 = bitcast i8* %61 to %"class.network::mojom::blink::AllowCSPFromHeaderValue"*
  tail call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueC1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %62) #15, !noalias !32
  %63 = ptrtoint i8* %61 to i64
  %64 = bitcast %"class.mojo::StructPtr.162"* %0 to i64*
  store i64 %63, i64* %64, align 8, !alias.scope !32
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue17set_error_messageERKN3WTF6StringE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %62, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15, !noalias !32
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %42
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %42, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #15
  br label %82

81:                                               ; preds = %10
  unreachable

82:                                               ; preds = %80, %41, %13, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_10LinkHeaderEEE(%"class.mojo::StructPtr.176"* noalias nocapture sret, %"class.mojo::StructPtr.169"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.mojo::StructPtr.169", %"class.mojo::StructPtr.169"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.network::mojom::LinkHeader"*, %"class.network::mojom::LinkHeader"** %6, align 8
  %8 = getelementptr inbounds %"class.network::mojom::LinkHeader", %"class.network::mojom::LinkHeader"* %7, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERK4GURL(%"class.blink::KURL"* nonnull %3, %class.GURL* dereferenceable(120) %8) #15
  %9 = load %"class.network::mojom::LinkHeader"*, %"class.network::mojom::LinkHeader"** %6, align 8
  %10 = getelementptr inbounds %"class.network::mojom::LinkHeader", %"class.network::mojom::LinkHeader"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.network::mojom::LinkHeader", %"class.network::mojom::LinkHeader"* %9, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.network::mojom::LinkHeader", %"class.network::mojom::LinkHeader"* %9, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.network::mojom::LinkHeader", %"class.network::mojom::LinkHeader"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.network::mojom::LinkHeader", %"class.network::mojom::LinkHeader"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.network::mojom::LinkHeader", %"class.network::mojom::LinkHeader"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %24 to i64
  %33 = select i1 %25, i64 %31, i64 %32
  %34 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %29, i64 %33) #15
  br label %35

35:                                               ; preds = %2, %20
  %36 = phi %"class.WTF::StringImpl"* [ %34, %20 ], [ null, %2 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = call i8* @_Znwm(i64 136) #16, !noalias !35
  %39 = bitcast i8* %38 to %"class.network::mojom::blink::LinkHeader"*
  call void @_ZN7network5mojom5blink10LinkHeaderC1ERKN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeERKN3WTF6StringE(%"class.network::mojom::blink::LinkHeader"* nonnull %39, %"class.blink::KURL"* nonnull dereferenceable(112) %3, i32 %11, i32 %13, i32 %15, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15, !noalias !35
  %40 = ptrtoint i8* %38 to i64
  %41 = bitcast %"class.mojo::StructPtr.176"* %0 to i64*
  store i64 %40, i64* %41, align 8, !alias.scope !35
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #15
  br label %57

57:                                               ; preds = %35, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_17TimingAllowOriginEEE(%"class.mojo::StructPtr.190"* noalias sret, %"class.mojo::StructPtr.183"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::Vector.88", align 8
  %4 = getelementptr inbounds %"class.mojo::StructPtr.183", %"class.mojo::StructPtr.183"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.network::mojom::TimingAllowOrigin"*, %"class.network::mojom::TimingAllowOrigin"** %4, align 8
  %6 = icmp eq %"class.network::mojom::TimingAllowOrigin"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.mojo::StructPtr.190"* %0 to i64*
  store i64 0, i64* %8, align 8
  br label %58

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.network::mojom::TimingAllowOrigin", %"class.network::mojom::TimingAllowOrigin"* %5, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %53

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.network::mojom::TimingAllowOrigin", %"class.network::mojom::TimingAllowOrigin"* %5, i64 0, i32 1, i32 0
  %15 = load %"class.std::__1::vector.62"*, %"class.std::__1::vector.62"** %14, align 8
  call void @_ZN7network5mojom14ConvertToBlinkINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3WTF6StringEEENS9_6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNS2_6vectorIT_NS6_ISG_EEEE(%"class.WTF::Vector.88"* nonnull sret %3, %"class.std::__1::vector.62"* dereferenceable(24) %15)
  call void @_ZN7network5mojom5blink17TimingAllowOrigin20NewSerializedOriginsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.mojo::StructPtr.190"* sret %0, %"class.WTF::Vector.88"* nonnull %3)
  %16 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %18 = icmp eq %"class.WTF::String"* %17, null
  br i1 %18, label %58, label %19, !prof !13

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::String"* %17 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24, !prof !9

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 %25
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi %"class.WTF::String"* [ %46, %45 ], [ %17, %24 ]
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #15
  br label %45

45:                                               ; preds = %44, %41, %27
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 1
  %47 = icmp eq %"class.WTF::String"* %46, %26
  br i1 %47, label %48, label %27

48:                                               ; preds = %45
  store i32 0, i32* %21, align 4
  %49 = bitcast %"class.WTF::Vector.88"* %3 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %19
  %52 = phi i8* [ %50, %48 ], [ %20, %19 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %16, align 8
  br label %58

53:                                               ; preds = %9
  %54 = tail call i8* @_Znwm(i64 16) #16, !noalias !38
  %55 = bitcast i8* %54 to %"class.network::mojom::blink::TimingAllowOrigin"*
  tail call void @_ZN7network5mojom5blink17TimingAllowOriginC1Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %55) #15, !noalias !38
  %56 = ptrtoint i8* %54 to i64
  %57 = bitcast %"class.mojo::StructPtr.190"* %0 to i64*
  store i64 %56, i64* %57, align 8, !alias.scope !38
  tail call void @_ZN7network5mojom5blink17TimingAllowOrigin7set_allEh(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %55, i8 zeroext 0) #15, !noalias !38
  br label %58

58:                                               ; preds = %51, %13, %53, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink17TimingAllowOrigin20NewSerializedOriginsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.mojo::StructPtr.190"* noalias sret, %"class.WTF::Vector.88"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.88", align 8
  %4 = tail call i8* @_Znwm(i64 16) #16
  %5 = bitcast i8* %4 to %"class.network::mojom::blink::TimingAllowOrigin"*
  tail call void @_ZN7network5mojom5blink17TimingAllowOriginC1Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %5) #15
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.mojo::StructPtr.190"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.88"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.88"* %3 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.88"* %3 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  call void @_ZN7network5mojom5blink17TimingAllowOrigin22set_serialized_originsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %5, %"class.WTF::Vector.88"* nonnull %3) #15
  %18 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::String"*, %"class.WTF::String"** %18, align 8
  %20 = icmp eq %"class.WTF::String"* %19, null
  br i1 %20, label %54, label %21, !prof !13

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::String"* %19 to i8*
  %23 = load i32, i32* %9, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %52, label %25, !prof !9

25:                                               ; preds = %21
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 %26
  br label %28

28:                                               ; preds = %46, %25
  %29 = phi %"class.WTF::String"* [ %47, %46 ], [ %19, %25 ]
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %46

46:                                               ; preds = %45, %42, %28
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %48 = icmp eq %"class.WTF::String"* %47, %27
  br i1 %48, label %49, label %28

49:                                               ; preds = %46
  store i32 0, i32* %9, align 4
  %50 = bitcast %"class.WTF::Vector.88"* %3 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %21
  %53 = phi i8* [ %51, %49 ], [ %22, %21 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %18, align 8
  br label %54

54:                                               ; preds = %2, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_13ParsedHeadersEEE(%"class.mojo::StructPtr.230"* noalias sret, %"class.mojo::StructPtr.197"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::Vector.234", align 8
  %6 = alloca %"class.mojo::StructPtr.162", align 8
  %7 = alloca %"class.absl::optional.239", align 8
  %8 = alloca %"class.WTF::Vector.244", align 8
  %9 = alloca %"class.absl::optional.239", align 8
  %10 = alloca %"class.WTF::Vector.244", align 8
  %11 = alloca %"class.WTF::Vector.249", align 8
  %12 = alloca %"class.mojo::StructPtr.190", align 8
  %13 = bitcast %"class.WTF::Vector.234"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.mojo::StructPtr.197", %"class.mojo::StructPtr.197"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %14, align 8
  %16 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %15, i64 0, i32 0
  call void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_21ContentSecurityPolicyEEENS3_INS0_5blink21ContentSecurityPolicyEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.234"* nonnull sret %5, %"class.std::__1::vector.201"* dereferenceable(24) %16)
  %17 = bitcast %"class.mojo::StructPtr.162"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %14, align 8
  %19 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %18, i64 0, i32 1
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_23AllowCSPFromHeaderValueEEE(%"class.mojo::StructPtr.162"* nonnull sret %6, %"class.mojo::StructPtr.155"* dereferenceable(8) %19)
  %20 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %14, align 8
  %21 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %20, i64 0, i32 2
  %22 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %20, i64 0, i32 3
  %23 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %20, i64 0, i32 4
  %24 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %20, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %98, label %28

28:                                               ; preds = %2
  %29 = bitcast %"class.WTF::Vector.244"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %20, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %8, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %8, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #15, !alias.scope !41
  %34 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %20, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !41
  %37 = bitcast %"class.std::__1::vector.213"* %30 to i64*
  %38 = load i64, i64* %37, align 8, !noalias !41
  %39 = sub i64 %36, %38
  %40 = lshr exact i64 %39, 2
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %41, 0
  %43 = inttoptr i64 %38 to i32*
  %44 = inttoptr i64 %36 to i32*
  br i1 %42, label %56, label %45, !prof !9

45:                                               ; preds = %28
  %46 = and i64 %40, 4294967295
  %47 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64 %46) #15
  %48 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %47, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv, i64 0, i64 0)) #15
  %49 = ptrtoint i8* %48 to i64
  %50 = bitcast %"class.WTF::Vector.244"* %8 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8, !alias.scope !41
  %51 = lshr i64 %47, 2
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %32, align 8, !alias.scope !41
  %53 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %30, i64 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8, !noalias !41
  %55 = load i32*, i32** %34, align 8, !noalias !41
  br label %56

56:                                               ; preds = %45, %28
  %57 = phi i64 [ 0, %28 ], [ %49, %45 ]
  %58 = phi i32 [ 0, %28 ], [ %52, %45 ]
  %59 = phi i32* [ %44, %28 ], [ %55, %45 ]
  %60 = phi i32* [ %43, %28 ], [ %54, %45 ]
  %61 = icmp eq i32* %60, %59
  br i1 %61, label %62, label %64

62:                                               ; preds = %56
  %63 = bitcast %"class.WTF::Vector.244"* %8 to i64*
  br label %88

64:                                               ; preds = %56
  %65 = bitcast i32* %4 to i8*
  br label %66

66:                                               ; preds = %82, %64
  %67 = phi i32 [ %58, %64 ], [ %83, %82 ]
  %68 = phi i32* [ %60, %64 ], [ %80, %82 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #15, !noalias !41
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %4, align 4, !noalias !41
  %70 = load i32, i32* %33, align 4, !alias.scope !41
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %78, label %72, !prof !9

72:                                               ; preds = %66
  %73 = load i32*, i32** %31, align 8, !alias.scope !41
  %74 = zext i32 %70 to i64
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  store i32 %69, i32* %75, align 4
  %76 = load i32, i32* %33, align 4, !alias.scope !41
  %77 = add i32 %76, 1
  store i32 %77, i32* %33, align 4, !alias.scope !41
  br label %79

78:                                               ; preds = %66
  call void @_ZN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.244"* nonnull %8, i32* nonnull dereferenceable(4) %4) #15
  br label %79

79:                                               ; preds = %78, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #15, !noalias !41
  %80 = getelementptr inbounds i32, i32* %68, i64 1
  %81 = icmp eq i32* %80, %59
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = load i32, i32* %32, align 8, !alias.scope !41
  br label %66

84:                                               ; preds = %79
  %85 = bitcast %"class.WTF::Vector.244"* %8 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !44
  %87 = load i32, i32* %32, align 8, !noalias !44
  br label %88

88:                                               ; preds = %62, %84
  %89 = phi i64* [ %63, %62 ], [ %85, %84 ]
  %90 = phi i32 [ %58, %62 ], [ %87, %84 ]
  %91 = phi i64 [ %57, %62 ], [ %86, %84 ]
  store i8 1, i8* %24, align 8, !alias.scope !44
  %92 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %93 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %95 = bitcast %"class.WTF::Vector.244"* %92 to i64*
  store i64 0, i64* %95, align 8, !alias.scope !44
  store atomic i64 0, i64* %89 monotonic, align 8, !noalias !44
  store atomic i64 %91, i64* %95 monotonic, align 8, !alias.scope !44
  store i32 %90, i32* %93, align 8, !alias.scope !44
  store i32 0, i32* %32, align 8, !noalias !44
  %96 = load i32, i32* %33, align 4, !noalias !44
  store i32 %96, i32* %94, align 4, !alias.scope !44
  store i32 0, i32* %33, align 4, !noalias !44
  %97 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %14, align 8
  br label %99

98:                                               ; preds = %2
  store i8 0, i8* %24, align 8
  br label %99

99:                                               ; preds = %98, %88
  %100 = phi %"class.network::mojom::ParsedHeaders"* [ %97, %88 ], [ %20, %98 ]
  %101 = phi i1 [ true, %88 ], [ false, %98 ]
  %102 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %100, i64 0, i32 7
  %103 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #15
  %104 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %100, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %177, label %107

107:                                              ; preds = %99
  %108 = bitcast %"class.WTF::Vector.244"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #15
  %109 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %100, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %10, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %10, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %10, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #15, !alias.scope !47
  %113 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %100, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast i32** %113 to i64*
  %115 = load i64, i64* %114, align 8, !noalias !47
  %116 = bitcast %"class.std::__1::vector.213"* %109 to i64*
  %117 = load i64, i64* %116, align 8, !noalias !47
  %118 = sub i64 %115, %117
  %119 = lshr exact i64 %118, 2
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %120, 0
  %122 = inttoptr i64 %117 to i32*
  %123 = inttoptr i64 %115 to i32*
  br i1 %121, label %135, label %124, !prof !9

124:                                              ; preds = %107
  %125 = and i64 %119, 4294967295
  %126 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64 %125) #15
  %127 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %126, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv, i64 0, i64 0)) #15
  %128 = ptrtoint i8* %127 to i64
  %129 = bitcast %"class.WTF::Vector.244"* %10 to i64*
  store atomic i64 %128, i64* %129 monotonic, align 8, !alias.scope !47
  %130 = lshr i64 %126, 2
  %131 = trunc i64 %130 to i32
  store i32 %131, i32* %111, align 8, !alias.scope !47
  %132 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %109, i64 0, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8, !noalias !47
  %134 = load i32*, i32** %113, align 8, !noalias !47
  br label %135

135:                                              ; preds = %124, %107
  %136 = phi i64 [ 0, %107 ], [ %128, %124 ]
  %137 = phi i32 [ 0, %107 ], [ %131, %124 ]
  %138 = phi i32* [ %123, %107 ], [ %134, %124 ]
  %139 = phi i32* [ %122, %107 ], [ %133, %124 ]
  %140 = icmp eq i32* %139, %138
  br i1 %140, label %141, label %143

141:                                              ; preds = %135
  %142 = bitcast %"class.WTF::Vector.244"* %10 to i64*
  br label %167

143:                                              ; preds = %135
  %144 = bitcast i32* %3 to i8*
  br label %145

145:                                              ; preds = %161, %143
  %146 = phi i32 [ %137, %143 ], [ %162, %161 ]
  %147 = phi i32* [ %139, %143 ], [ %159, %161 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #15, !noalias !47
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %3, align 4, !noalias !47
  %149 = load i32, i32* %112, align 4, !alias.scope !47
  %150 = icmp eq i32 %149, %146
  br i1 %150, label %157, label %151, !prof !9

151:                                              ; preds = %145
  %152 = load i32*, i32** %110, align 8, !alias.scope !47
  %153 = zext i32 %149 to i64
  %154 = getelementptr inbounds i32, i32* %152, i64 %153
  store i32 %148, i32* %154, align 4
  %155 = load i32, i32* %112, align 4, !alias.scope !47
  %156 = add i32 %155, 1
  store i32 %156, i32* %112, align 4, !alias.scope !47
  br label %158

157:                                              ; preds = %145
  call void @_ZN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.244"* nonnull %10, i32* nonnull dereferenceable(4) %3) #15
  br label %158

158:                                              ; preds = %157, %151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #15, !noalias !47
  %159 = getelementptr inbounds i32, i32* %147, i64 1
  %160 = icmp eq i32* %159, %138
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %111, align 8, !alias.scope !47
  br label %145

163:                                              ; preds = %158
  %164 = bitcast %"class.WTF::Vector.244"* %10 to i64*
  %165 = load i64, i64* %164, align 8, !noalias !50
  %166 = load i32, i32* %111, align 8, !noalias !50
  br label %167

167:                                              ; preds = %141, %163
  %168 = phi i64* [ %142, %141 ], [ %164, %163 ]
  %169 = phi i32 [ %137, %141 ], [ %166, %163 ]
  %170 = phi i64 [ %136, %141 ], [ %165, %163 ]
  store i8 1, i8* %103, align 8, !alias.scope !50
  %171 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %172 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %174 = bitcast %"class.WTF::Vector.244"* %171 to i64*
  store i64 0, i64* %174, align 8, !alias.scope !50
  store atomic i64 0, i64* %168 monotonic, align 8, !noalias !50
  store atomic i64 %170, i64* %174 monotonic, align 8, !alias.scope !50
  store i32 %169, i32* %172, align 8, !alias.scope !50
  store i32 0, i32* %111, align 8, !noalias !50
  %175 = load i32, i32* %112, align 4, !noalias !50
  store i32 %175, i32* %173, align 4, !alias.scope !50
  store i32 0, i32* %112, align 4, !noalias !50
  %176 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %14, align 8
  br label %178

177:                                              ; preds = %99
  store i8 0, i8* %103, align 8
  br label %178

178:                                              ; preds = %177, %167
  %179 = phi %"class.network::mojom::ParsedHeaders"* [ %176, %167 ], [ %100, %177 ]
  %180 = phi i1 [ true, %167 ], [ false, %177 ]
  %181 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %179, i64 0, i32 9
  %182 = bitcast %"class.WTF::Vector.249"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #15
  %183 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %179, i64 0, i32 11
  call void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_10LinkHeaderEEENS3_INS0_5blink10LinkHeaderEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.249"* nonnull sret %11, %"class.std::__1::vector.220"* dereferenceable(24) %183)
  %184 = bitcast %"class.mojo::StructPtr.190"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #15
  %185 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %14, align 8
  %186 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %185, i64 0, i32 12
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_17TimingAllowOriginEEE(%"class.mojo::StructPtr.190"* nonnull sret %12, %"class.mojo::StructPtr.183"* dereferenceable(8) %186)
  %187 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %14, align 8
  %188 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %187, i64 0, i32 13
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEEC2IJN3WTF6VectorINS0_INS3_21ContentSecurityPolicyEEELj0ENS7_18PartitionAllocatorEEENS0_INS3_23AllowCSPFromHeaderValueEEERNS1_25CrossOriginEmbedderPolicyERNS1_23CrossOriginOpenerPolicyERbN4absl8optionalINS8_INS2_18WebClientHintsTypeELj0ESB_EEEERN4base9TimeDeltaESO_RNS2_18XFrameOptionsValueENS8_INS0_INS3_10LinkHeaderEEELj0ESB_EENS0_INS3_17TimingAllowOriginEEESJ_EEENSP_10in_place_tEDpOT_(%"class.mojo::StructPtr.230"* %0, %"class.WTF::Vector.234"* nonnull dereferenceable(16) %5, %"class.mojo::StructPtr.162"* nonnull dereferenceable(8) %6, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %21, %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80) %22, i8* dereferenceable(1) %23, %"class.absl::optional.239"* nonnull dereferenceable(24) %7, %"class.base::TimeDelta"* dereferenceable(8) %102, %"class.absl::optional.239"* nonnull dereferenceable(24) %9, i32* dereferenceable(4) %181, %"class.WTF::Vector.249"* nonnull dereferenceable(16) %11, %"class.mojo::StructPtr.190"* nonnull dereferenceable(8) %12, i8* dereferenceable(1) %188) #15
  %189 = getelementptr inbounds %"class.mojo::StructPtr.190", %"class.mojo::StructPtr.190"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = load %"class.network::mojom::blink::TimingAllowOrigin"*, %"class.network::mojom::blink::TimingAllowOrigin"** %189, align 8
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %189, align 8
  %191 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %178
  call void @_ZN7network5mojom5blink17TimingAllowOriginD1Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %190) #15
  %193 = bitcast %"class.network::mojom::blink::TimingAllowOrigin"* %190 to i8*
  call void @_ZdlPv(i8* %193) #16
  br label %194

194:                                              ; preds = %178, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #15
  %195 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %11, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %195, align 8
  %197 = icmp eq %"class.mojo::StructPtr.176"* %196, null
  br i1 %197, label %221, label %198, !prof !13

198:                                              ; preds = %194
  %199 = bitcast %"class.mojo::StructPtr.176"* %196 to i8*
  %200 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %11, i64 0, i32 0, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %219, label %203, !prof !9

203:                                              ; preds = %198
  %204 = zext i32 %201 to i64
  %205 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %196, i64 %204
  br label %206

206:                                              ; preds = %213, %203
  %207 = phi %"class.mojo::StructPtr.176"* [ %214, %213 ], [ %196, %203 ]
  %208 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %207, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = load %"class.network::mojom::blink::LinkHeader"*, %"class.network::mojom::blink::LinkHeader"** %208, align 8
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %208, align 8
  %210 = icmp eq %"class.network::mojom::blink::LinkHeader"* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %206
  call void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"* nonnull %209) #15
  %212 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %209, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %212) #16
  br label %213

213:                                              ; preds = %211, %206
  %214 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %207, i64 1
  %215 = icmp eq %"class.mojo::StructPtr.176"* %214, %205
  br i1 %215, label %216, label %206

216:                                              ; preds = %213
  store i32 0, i32* %200, align 4
  %217 = bitcast %"class.WTF::Vector.249"* %11 to i8**
  %218 = load i8*, i8** %217, align 8
  br label %219

219:                                              ; preds = %216, %198
  %220 = phi i8* [ %218, %216 ], [ %199, %198 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %220) #15
  store %"class.mojo::StructPtr.176"* null, %"class.mojo::StructPtr.176"** %195, align 8
  br label %221

221:                                              ; preds = %194, %219
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #15
  %222 = load i8, i8* %103, align 8, !range !2
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %236, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %226 = load i32*, i32** %225, align 8
  %227 = icmp eq i32* %226, null
  %228 = bitcast i32* %226 to i8*
  br i1 %227, label %235, label %229, !prof !13

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %234, label %233, !prof !9

233:                                              ; preds = %229
  store i32 0, i32* %230, align 4
  br label %234

234:                                              ; preds = %233, %229
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %228) #15
  store i32* null, i32** %225, align 8
  br label %235

235:                                              ; preds = %234, %224
  store i8 0, i8* %103, align 8
  br label %236

236:                                              ; preds = %221, %235
  br i1 %180, label %237, label %250

237:                                              ; preds = %236
  %238 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %10, i64 0, i32 0, i32 0, i32 0
  %239 = load i32*, i32** %238, align 8
  %240 = icmp eq i32* %239, null
  %241 = bitcast i32* %239 to i8*
  br i1 %240, label %248, label %242, !prof !13

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %10, i64 0, i32 0, i32 0, i32 2
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246, !prof !9

246:                                              ; preds = %242
  store i32 0, i32* %243, align 4
  br label %247

247:                                              ; preds = %246, %242
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %241) #15
  store i32* null, i32** %238, align 8
  br label %248

248:                                              ; preds = %237, %247
  %249 = bitcast %"class.WTF::Vector.244"* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #15
  br label %250

250:                                              ; preds = %236, %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #15
  %251 = load i8, i8* %24, align 8, !range !2
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %265, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %255 = load i32*, i32** %254, align 8
  %256 = icmp eq i32* %255, null
  %257 = bitcast i32* %255 to i8*
  br i1 %256, label %264, label %258, !prof !13

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %263, label %262, !prof !9

262:                                              ; preds = %258
  store i32 0, i32* %259, align 4
  br label %263

263:                                              ; preds = %262, %258
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %257) #15
  store i32* null, i32** %254, align 8
  br label %264

264:                                              ; preds = %263, %253
  store i8 0, i8* %24, align 8
  br label %265

265:                                              ; preds = %250, %264
  br i1 %101, label %266, label %279

266:                                              ; preds = %265
  %267 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %8, i64 0, i32 0, i32 0, i32 0
  %268 = load i32*, i32** %267, align 8
  %269 = icmp eq i32* %268, null
  %270 = bitcast i32* %268 to i8*
  br i1 %269, label %277, label %271, !prof !13

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %8, i64 0, i32 0, i32 0, i32 2
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %276, label %275, !prof !9

275:                                              ; preds = %271
  store i32 0, i32* %272, align 4
  br label %276

276:                                              ; preds = %275, %271
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %270) #15
  store i32* null, i32** %267, align 8
  br label %277

277:                                              ; preds = %266, %276
  %278 = bitcast %"class.WTF::Vector.244"* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #15
  br label %279

279:                                              ; preds = %265, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #15
  %280 = getelementptr inbounds %"class.mojo::StructPtr.162", %"class.mojo::StructPtr.162"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %281 = load %"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %280, align 8
  store %"class.network::mojom::blink::AllowCSPFromHeaderValue"* null, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %280, align 8
  %282 = icmp eq %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %281, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %279
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %281) #15
  %284 = bitcast %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %281 to i8*
  call void @_ZdlPv(i8* %284) #16
  br label %285

285:                                              ; preds = %279, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %286 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %5, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %286, align 8
  %288 = icmp eq %"class.mojo::StructPtr.141"* %287, null
  br i1 %288, label %312, label %289, !prof !13

289:                                              ; preds = %285
  %290 = bitcast %"class.mojo::StructPtr.141"* %287 to i8*
  %291 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %5, i64 0, i32 0, i32 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %310, label %294, !prof !9

294:                                              ; preds = %289
  %295 = zext i32 %292 to i64
  %296 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %287, i64 %295
  br label %297

297:                                              ; preds = %304, %294
  %298 = phi %"class.mojo::StructPtr.141"* [ %305, %304 ], [ %287, %294 ]
  %299 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %298, i64 0, i32 0, i32 0, i32 0, i32 0
  %300 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %299, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %299, align 8
  %301 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %297
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %300) #15
  %303 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %300 to i8*
  call void @_ZdlPv(i8* %303) #16
  br label %304

304:                                              ; preds = %302, %297
  %305 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %298, i64 1
  %306 = icmp eq %"class.mojo::StructPtr.141"* %305, %296
  br i1 %306, label %307, label %297

307:                                              ; preds = %304
  store i32 0, i32* %291, align 4
  %308 = bitcast %"class.WTF::Vector.234"* %5 to i8**
  %309 = load i8*, i8** %308, align 8
  br label %310

310:                                              ; preds = %307, %289
  %311 = phi i8* [ %309, %307 ], [ %290, %289 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %311) #15
  store %"class.mojo::StructPtr.141"* null, %"class.mojo::StructPtr.141"** %286, align 8
  br label %312

312:                                              ; preds = %285, %310
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_21ContentSecurityPolicyEEENS3_INS0_5blink21ContentSecurityPolicyEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.234"* noalias sret, %"class.std::__1::vector.201"* dereferenceable(24)) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.mojo::StructPtr.141", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.234"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %8 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.mojo::StructPtr.117"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.201"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  %17 = inttoptr i64 %12 to %"class.mojo::StructPtr.117"*
  %18 = inttoptr i64 %10 to %"class.mojo::StructPtr.117"*
  br i1 %16, label %30, label %19, !prof !9

19:                                               ; preds = %2
  %20 = and i64 %14, 4294967295
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.234"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %5, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.mojo::StructPtr.117"*, %"class.mojo::StructPtr.117"** %27, align 8
  %29 = load %"class.mojo::StructPtr.117"*, %"class.mojo::StructPtr.117"** %8, align 8
  br label %30

30:                                               ; preds = %2, %19
  %31 = phi %"class.mojo::StructPtr.117"* [ %18, %2 ], [ %29, %19 ]
  %32 = phi %"class.mojo::StructPtr.117"* [ %17, %2 ], [ %28, %19 ]
  %33 = icmp eq %"class.mojo::StructPtr.117"* %32, %31
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.mojo::StructPtr.141"* %3 to i8*
  %36 = bitcast %"class.mojo::StructPtr.141"* %3 to i64*
  %37 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %39

38:                                               ; preds = %58, %30
  ret void

39:                                               ; preds = %34, %58
  %40 = phi %"class.mojo::StructPtr.117"* [ %32, %34 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_21ContentSecurityPolicyEEE(%"class.mojo::StructPtr.141"* nonnull sret %3, %"class.mojo::StructPtr.117"* dereferenceable(8) %40)
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %5, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %53, label %44, !prof !9

44:                                               ; preds = %39
  %45 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %4, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %45, i64 %46
  %48 = bitcast %"class.mojo::StructPtr.141"* %47 to i64*
  %49 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %49, align 8
  %50 = load i64, i64* %36, align 8
  store i64 %50, i64* %48, align 8
  %51 = load i32, i32* %6, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %6, align 4
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %37, align 8
  br label %58

53:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.234"* %0, %"class.mojo::StructPtr.141"* nonnull dereferenceable(8) %3) #15
  %54 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %37, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %37, align 8
  %55 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %54 to i8*
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %54) #15
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %44, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  %59 = getelementptr inbounds %"class.mojo::StructPtr.117", %"class.mojo::StructPtr.117"* %40, i64 1
  %60 = icmp eq %"class.mojo::StructPtr.117"* %59, %31
  br i1 %60, label %38, label %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_10LinkHeaderEEENS3_INS0_5blink10LinkHeaderEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.249"* noalias sret, %"class.std::__1::vector.220"* dereferenceable(24)) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.mojo::StructPtr.176", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.249"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %8 = getelementptr inbounds %"class.std::__1::vector.220", %"class.std::__1::vector.220"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.mojo::StructPtr.169"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.220"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  %17 = inttoptr i64 %12 to %"class.mojo::StructPtr.169"*
  %18 = inttoptr i64 %10 to %"class.mojo::StructPtr.169"*
  br i1 %16, label %30, label %19, !prof !9

19:                                               ; preds = %2
  %20 = and i64 %14, 4294967295
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.249"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %5, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.220", %"class.std::__1::vector.220"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.mojo::StructPtr.169"*, %"class.mojo::StructPtr.169"** %27, align 8
  %29 = load %"class.mojo::StructPtr.169"*, %"class.mojo::StructPtr.169"** %8, align 8
  br label %30

30:                                               ; preds = %2, %19
  %31 = phi %"class.mojo::StructPtr.169"* [ %18, %2 ], [ %29, %19 ]
  %32 = phi %"class.mojo::StructPtr.169"* [ %17, %2 ], [ %28, %19 ]
  %33 = icmp eq %"class.mojo::StructPtr.169"* %32, %31
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.mojo::StructPtr.176"* %3 to i8*
  %36 = bitcast %"class.mojo::StructPtr.176"* %3 to i64*
  %37 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %39

38:                                               ; preds = %58, %30
  ret void

39:                                               ; preds = %34, %58
  %40 = phi %"class.mojo::StructPtr.169"* [ %32, %34 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_10LinkHeaderEEE(%"class.mojo::StructPtr.176"* nonnull sret %3, %"class.mojo::StructPtr.169"* dereferenceable(8) %40)
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %5, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %53, label %44, !prof !9

44:                                               ; preds = %39
  %45 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %4, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %45, i64 %46
  %48 = bitcast %"class.mojo::StructPtr.176"* %47 to i64*
  %49 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %49, align 8
  %50 = load i64, i64* %36, align 8
  store i64 %50, i64* %48, align 8
  %51 = load i32, i32* %6, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %6, align 4
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %37, align 8
  br label %58

53:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.249"* %0, %"class.mojo::StructPtr.176"* nonnull dereferenceable(8) %3) #15
  %54 = load %"class.network::mojom::blink::LinkHeader"*, %"class.network::mojom::blink::LinkHeader"** %37, align 8
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %37, align 8
  %55 = icmp eq %"class.network::mojom::blink::LinkHeader"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  call void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"* nonnull %54) #15
  %57 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %54, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %44, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  %59 = getelementptr inbounds %"class.mojo::StructPtr.169", %"class.mojo::StructPtr.169"* %40, i64 1
  %60 = icmp eq %"class.mojo::StructPtr.169"* %59, %31
  br i1 %60, label %38, label %39
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22IsValidHTTPHeaderValueERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %190, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %101, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %101

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %16 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  %17 = zext i32 %7 to i64
  %18 = icmp ult i32 %7, 8
  br i1 %18, label %85, label %19

19:                                               ; preds = %14
  %20 = and i64 %17, 4294967288
  %21 = add nsw i64 %20, -8
  %22 = lshr exact i64 %21, 3
  %23 = add nuw nsw i64 %22, 1
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = sub nuw nsw i64 %23, %24
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i64 [ 0, %26 ], [ %54, %28 ]
  %30 = phi <4 x i32> [ zeroinitializer, %26 ], [ %52, %28 ]
  %31 = phi <4 x i32> [ zeroinitializer, %26 ], [ %53, %28 ]
  %32 = phi i64 [ %27, %26 ], [ %55, %28 ]
  %33 = getelementptr inbounds i16, i16* %16, i64 %29
  %34 = bitcast i16* %33 to <4 x i16>*
  %35 = load <4 x i16>, <4 x i16>* %34, align 2
  %36 = getelementptr inbounds i16, i16* %33, i64 4
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %35 to <4 x i32>
  %40 = zext <4 x i16> %38 to <4 x i32>
  %41 = or <4 x i32> %30, %39
  %42 = or <4 x i32> %31, %40
  %43 = or i64 %29, 8
  %44 = getelementptr inbounds i16, i16* %16, i64 %43
  %45 = bitcast i16* %44 to <4 x i16>*
  %46 = load <4 x i16>, <4 x i16>* %45, align 2
  %47 = getelementptr inbounds i16, i16* %44, i64 4
  %48 = bitcast i16* %47 to <4 x i16>*
  %49 = load <4 x i16>, <4 x i16>* %48, align 2
  %50 = zext <4 x i16> %46 to <4 x i32>
  %51 = zext <4 x i16> %49 to <4 x i32>
  %52 = or <4 x i32> %41, %50
  %53 = or <4 x i32> %42, %51
  %54 = add i64 %29, 16
  %55 = add i64 %32, -2
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %28, !llvm.loop !53

57:                                               ; preds = %28, %19
  %58 = phi <4 x i32> [ undef, %19 ], [ %52, %28 ]
  %59 = phi <4 x i32> [ undef, %19 ], [ %53, %28 ]
  %60 = phi i64 [ 0, %19 ], [ %54, %28 ]
  %61 = phi <4 x i32> [ zeroinitializer, %19 ], [ %52, %28 ]
  %62 = phi <4 x i32> [ zeroinitializer, %19 ], [ %53, %28 ]
  %63 = icmp eq i64 %24, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds i16, i16* %16, i64 %60
  %66 = getelementptr inbounds i16, i16* %65, i64 4
  %67 = bitcast i16* %66 to <4 x i16>*
  %68 = load <4 x i16>, <4 x i16>* %67, align 2
  %69 = zext <4 x i16> %68 to <4 x i32>
  %70 = or <4 x i32> %62, %69
  %71 = bitcast i16* %65 to <4 x i16>*
  %72 = load <4 x i16>, <4 x i16>* %71, align 2
  %73 = zext <4 x i16> %72 to <4 x i32>
  %74 = or <4 x i32> %61, %73
  br label %75

75:                                               ; preds = %57, %64
  %76 = phi <4 x i32> [ %58, %57 ], [ %74, %64 ]
  %77 = phi <4 x i32> [ %59, %57 ], [ %70, %64 ]
  %78 = or <4 x i32> %77, %76
  %79 = shufflevector <4 x i32> %78, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %80 = or <4 x i32> %78, %79
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %82 = or <4 x i32> %80, %81
  %83 = extractelement <4 x i32> %82, i32 0
  %84 = icmp eq i64 %20, %17
  br i1 %84, label %97, label %85

85:                                               ; preds = %75, %14
  %86 = phi i64 [ 0, %14 ], [ %20, %75 ]
  %87 = phi i32 [ 0, %14 ], [ %83, %75 ]
  br label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i32 [ %94, %88 ], [ %87, %85 ]
  %91 = getelementptr inbounds i16, i16* %16, i64 %89
  %92 = load i16, i16* %91, align 2
  %93 = zext i16 %92 to i32
  %94 = or i32 %90, %93
  %95 = add nuw nsw i64 %89, 1
  %96 = icmp eq i64 %95, %17
  br i1 %96, label %97, label %88, !llvm.loop !55

97:                                               ; preds = %88, %75
  %98 = phi i32 [ %83, %75 ], [ %94, %88 ]
  %99 = and i32 %98, 65280
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %193

101:                                              ; preds = %97, %5, %9
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %105, label %116, label %107

107:                                              ; preds = %101
  br i1 %8, label %132, label %108

108:                                              ; preds = %107
  %109 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  %110 = zext i32 %7 to i64
  %111 = tail call i8* @memchr(i8* %109, i32 13, i64 %110) #17
  %112 = icmp eq i8* %111, null
  %113 = ptrtoint i8* %111 to i64
  %114 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %115 = sub i64 %113, %114
  br i1 %112, label %132, label %128

116:                                              ; preds = %101
  %117 = bitcast %"class.WTF::StringImpl"* %106 to i16*
  br i1 %8, label %132, label %118

118:                                              ; preds = %116
  %119 = zext i32 %7 to i64
  br label %120

120:                                              ; preds = %125, %118
  %121 = phi i64 [ %126, %125 ], [ 0, %118 ]
  %122 = getelementptr inbounds i16, i16* %117, i64 %121
  %123 = load i16, i16* %122, align 2
  %124 = icmp eq i16 %123, 13
  br i1 %124, label %128, label %125

125:                                              ; preds = %120
  %126 = add nuw nsw i64 %121, 1
  %127 = icmp eq i64 %126, %119
  br i1 %127, label %132, label %120

128:                                              ; preds = %120, %108
  %129 = phi i64 [ %115, %108 ], [ %121, %120 ]
  %130 = trunc i64 %129 to i32
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %132, label %193

132:                                              ; preds = %125, %128, %107, %116, %108
  %133 = load atomic i32, i32* %102 monotonic, align 4
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  br i1 %8, label %161, label %137

137:                                              ; preds = %136
  %138 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  %139 = zext i32 %7 to i64
  %140 = tail call i8* @memchr(i8* %138, i32 10, i64 %139) #17
  %141 = icmp eq i8* %140, null
  %142 = ptrtoint i8* %140 to i64
  %143 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %144 = sub i64 %142, %143
  br i1 %141, label %161, label %157

145:                                              ; preds = %132
  %146 = bitcast %"class.WTF::StringImpl"* %106 to i16*
  br i1 %8, label %161, label %147

147:                                              ; preds = %145
  %148 = zext i32 %7 to i64
  br label %149

149:                                              ; preds = %154, %147
  %150 = phi i64 [ %155, %154 ], [ 0, %147 ]
  %151 = getelementptr inbounds i16, i16* %146, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = icmp eq i16 %152, 10
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = add nuw nsw i64 %150, 1
  %156 = icmp eq i64 %155, %148
  br i1 %156, label %161, label %149

157:                                              ; preds = %149, %137
  %158 = phi i64 [ %144, %137 ], [ %150, %149 ]
  %159 = trunc i64 %158 to i32
  %160 = icmp eq i32 %159, -1
  br i1 %160, label %161, label %193

161:                                              ; preds = %154, %157, %136, %145, %137
  %162 = load atomic i32, i32* %102 monotonic, align 4
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %161
  br i1 %8, label %190, label %166

166:                                              ; preds = %165
  %167 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  %168 = zext i32 %7 to i64
  %169 = tail call i8* @memchr(i8* %167, i32 0, i64 %168) #17
  %170 = icmp eq i8* %169, null
  %171 = ptrtoint i8* %169 to i64
  %172 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %173 = sub i64 %171, %172
  %174 = trunc i64 %173 to i32
  %175 = select i1 %170, i32 -1, i32 %174
  br label %190

176:                                              ; preds = %161
  %177 = bitcast %"class.WTF::StringImpl"* %106 to i16*
  br i1 %8, label %190, label %178

178:                                              ; preds = %176
  %179 = zext i32 %7 to i64
  br label %180

180:                                              ; preds = %185, %178
  %181 = phi i64 [ %186, %185 ], [ 0, %178 ]
  %182 = getelementptr inbounds i16, i16* %177, i64 %181
  %183 = load i16, i16* %182, align 2
  %184 = icmp eq i16 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %180
  %186 = add nuw nsw i64 %181, 1
  %187 = icmp eq i64 %186, %179
  br i1 %187, label %190, label %180

188:                                              ; preds = %180
  %189 = trunc i64 %181 to i32
  br label %190

190:                                              ; preds = %185, %1, %165, %166, %176, %188
  %191 = phi i32 [ -1, %165 ], [ %175, %166 ], [ -1, %176 ], [ %189, %188 ], [ -1, %1 ], [ -1, %185 ]
  %192 = icmp eq i32 %191, -1
  br label %193

193:                                              ; preds = %157, %128, %190, %97
  %194 = phi i1 [ false, %157 ], [ false, %128 ], [ false, %97 ], [ %192, %190 ]
  ret i1 %194
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16IsValidHTTPTokenERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %51, label %9

9:                                                ; preds = %5, %48
  %10 = phi %"class.WTF::StringImpl"* [ %50, %48 ], [ %3, %5 ]
  %11 = phi i64 [ %49, %48 ], [ 0, %5 ]
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %9 ]
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %11, %18
  br i1 %19, label %20, label %51

20:                                               ; preds = %16
  br i1 %12, label %44, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %11, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  br i1 %30, label %37, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.WTF::StringImpl"* %31 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %11
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  br label %41

37:                                               ; preds = %26
  %38 = bitcast %"class.WTF::StringImpl"* %31 to i16*
  %39 = getelementptr inbounds i16, i16* %38, i64 %11
  %40 = load i16, i16* %39, align 2
  br label %41

41:                                               ; preds = %32, %37
  %42 = phi i16 [ %36, %32 ], [ %40, %37 ]
  %43 = icmp ugt i16 %42, 127
  br i1 %43, label %51, label %44

44:                                               ; preds = %20, %21, %41
  %45 = phi i16 [ %42, %41 ], [ 0, %21 ], [ 0, %20 ]
  %46 = trunc i16 %45 to i8
  %47 = tail call zeroext i1 @_ZN3net8HttpUtil11IsTokenCharEc(i8 signext %46) #15
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = add nuw nsw i64 %11, 1
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  br label %9

51:                                               ; preds = %16, %44, %41, %5, %1
  %52 = phi i1 [ false, %1 ], [ false, %5 ], [ true, %16 ], [ false, %44 ], [ false, %41 ]
  ret i1 %52
}

declare zeroext i1 @_ZN3net8HttpUtil11IsTokenCharEc(i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink30IsContentDispositionAttachmentERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %2 = alloca %"class.net::HttpContentDisposition", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.net::HttpContentDisposition"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #15
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %0, i32 0) #15
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #15
  call void @_ZN3net22HttpContentDispositionC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.net::HttpContentDisposition"* nonnull %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #15
  %8 = getelementptr inbounds %"class.net::HttpContentDisposition", %"class.net::HttpContentDisposition"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  call void @_ZN3net22HttpContentDispositionD1Ev(%"class.net::HttpContentDisposition"* nonnull %2) #15
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %1, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #16
  br label %26

26:                                               ; preds = %18, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #15
  ret i1 %10
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZN3net22HttpContentDispositionC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.net::HttpContentDisposition"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net22HttpContentDispositionD1Ev(%"class.net::HttpContentDisposition"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16ParseHTTPRefreshERKN3WTF6StringEPFbDsERN4base9TimeDeltaERS1_(%"class.WTF::String"* dereferenceable(8), i1 (i16)*, %"class.base::TimeDelta"* nocapture dereferenceable(8), %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #1 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %640, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i1 (i16)* %1, null
  %17 = select i1 %16, i1 (i16)* @_ZN5blink12_GLOBAL__N_112IsWhitespaceEDs, i1 (i16)* %1
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %640, label %19

19:                                               ; preds = %13
  %20 = add i32 %15, -1
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %19, %53
  %23 = phi i64 [ 0, %19 ], [ %54, %53 ]
  %24 = phi i32 [ 0, %19 ], [ %51, %53 ]
  %25 = phi %"class.WTF::StringImpl"* [ %11, %19 ], [ %55, %53 ]
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = icmp ult i64 %23, %30
  br i1 %31, label %32, label %47

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  br i1 %36, label %43, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %23
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  br label %47

43:                                               ; preds = %32
  %44 = bitcast %"class.WTF::StringImpl"* %37 to i16*
  %45 = getelementptr inbounds i16, i16* %44, i64 %23
  %46 = load i16, i16* %45, align 2
  br label %47

47:                                               ; preds = %43, %38, %27, %22
  %48 = phi i16 [ 0, %27 ], [ 0, %22 ], [ %42, %38 ], [ %46, %43 ]
  %49 = tail call zeroext i1 %17(i16 zeroext %48) #15
  br i1 %49, label %50, label %56

50:                                               ; preds = %47
  %51 = add nuw i32 %24, 1
  %52 = icmp eq i64 %23, %21
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = add nuw nsw i64 %23, 1
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %22

56:                                               ; preds = %47
  %57 = trunc i64 %23 to i32
  br label %58

58:                                               ; preds = %50, %56
  %59 = phi i32 [ %57, %56 ], [ %51, %50 ]
  %60 = icmp ult i32 %59, %15
  br i1 %60, label %61, label %640

61:                                               ; preds = %58, %129
  %62 = phi i32 [ %130, %129 ], [ %59, %58 ]
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %126, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp ugt i32 %67, %62
  br i1 %68, label %69, label %126

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  br i1 %73, label %81, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::StringImpl"* %74 to i8*
  %77 = zext i32 %62 to i64
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  br label %86

81:                                               ; preds = %69
  %82 = bitcast %"class.WTF::StringImpl"* %74 to i16*
  %83 = zext i32 %62 to i64
  %84 = getelementptr inbounds i16, i16* %82, i64 %83
  %85 = load i16, i16* %84, align 2
  br label %86

86:                                               ; preds = %75, %81
  %87 = phi i16 [ %80, %75 ], [ %85, %81 ]
  %88 = icmp eq i16 %87, 44
  br i1 %88, label %171, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  br i1 %93, label %101, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.WTF::StringImpl"* %94 to i8*
  %97 = zext i32 %62 to i64
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i16
  br label %106

101:                                              ; preds = %89
  %102 = bitcast %"class.WTF::StringImpl"* %94 to i16*
  %103 = zext i32 %62 to i64
  %104 = getelementptr inbounds i16, i16* %102, i64 %103
  %105 = load i16, i16* %104, align 2
  br label %106

106:                                              ; preds = %95, %101
  %107 = phi i16 [ %100, %95 ], [ %105, %101 ]
  %108 = icmp eq i16 %107, 59
  br i1 %108, label %171, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  br i1 %113, label %121, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.WTF::StringImpl"* %114 to i8*
  %117 = zext i32 %62 to i64
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  br label %126

121:                                              ; preds = %109
  %122 = bitcast %"class.WTF::StringImpl"* %114 to i16*
  %123 = zext i32 %62 to i64
  %124 = getelementptr inbounds i16, i16* %122, i64 %123
  %125 = load i16, i16* %124, align 2
  br label %126

126:                                              ; preds = %65, %61, %121, %115
  %127 = phi i16 [ %120, %115 ], [ %125, %121 ], [ 0, %61 ], [ 0, %65 ]
  %128 = tail call zeroext i1 %17(i16 zeroext %127) #15
  br i1 %128, label %171, label %129

129:                                              ; preds = %126
  %130 = add i32 %62, 1
  %131 = icmp eq i32 %130, %15
  br i1 %131, label %132, label %61

132:                                              ; preds = %129
  %133 = bitcast %"class.WTF::String"* %3 to i64*
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  store i64 0, i64* %133, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #15
  br label %150

150:                                              ; preds = %149, %146, %132
  %151 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #15
  %152 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %0) #15
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %153, align 8
  %154 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116ParseRefreshTimeERKN3WTF6StringERN4base9TimeDeltaE(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.base::TimeDelta"* dereferenceable(8) %2)
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #15
  br label %170

170:                                              ; preds = %150, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #15
  br label %640

171:                                              ; preds = %126, %86, %106
  %172 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #15
  %173 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #15
  %174 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 0, i32 %62) #15
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %175, align 8
  %176 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %7) #15
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %177, align 8
  %178 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116ParseRefreshTimeERKN3WTF6StringERN4base9TimeDeltaE(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.base::TimeDelta"* dereferenceable(8) %2)
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %171
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #15
  br label %194

194:                                              ; preds = %171, %190, %193
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #15
  br label %210

210:                                              ; preds = %194, %206, %209
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #15
  br i1 %178, label %211, label %640

211:                                              ; preds = %210
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 1
  %216 = load i32, i32* %215, align 4
  br label %217

217:                                              ; preds = %214, %211
  %218 = phi i32 [ %216, %214 ], [ 0, %211 ]
  %219 = icmp ult i32 %62, %218
  br i1 %219, label %220, label %260

220:                                              ; preds = %217
  %221 = zext i32 %62 to i64
  %222 = add i32 %218, -1
  %223 = zext i32 %222 to i64
  br label %224

224:                                              ; preds = %220, %255
  %225 = phi i64 [ %221, %220 ], [ %256, %255 ]
  %226 = phi i32 [ %62, %220 ], [ %253, %255 ]
  %227 = phi %"class.WTF::StringImpl"* [ %212, %220 ], [ %257, %255 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %249, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = zext i32 %231 to i64
  %233 = icmp ult i64 %225, %232
  br i1 %233, label %234, label %249

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 1
  br i1 %238, label %245, label %240

240:                                              ; preds = %234
  %241 = bitcast %"class.WTF::StringImpl"* %239 to i8*
  %242 = getelementptr inbounds i8, i8* %241, i64 %225
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i16
  br label %249

245:                                              ; preds = %234
  %246 = bitcast %"class.WTF::StringImpl"* %239 to i16*
  %247 = getelementptr inbounds i16, i16* %246, i64 %225
  %248 = load i16, i16* %247, align 2
  br label %249

249:                                              ; preds = %245, %240, %229, %224
  %250 = phi i16 [ 0, %229 ], [ 0, %224 ], [ %244, %240 ], [ %248, %245 ]
  %251 = call zeroext i1 %17(i16 zeroext %250) #15
  br i1 %251, label %252, label %258

252:                                              ; preds = %249
  %253 = add nuw i32 %226, 1
  %254 = icmp eq i64 %225, %223
  br i1 %254, label %260, label %255

255:                                              ; preds = %252
  %256 = add nuw nsw i64 %225, 1
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %224

258:                                              ; preds = %249
  %259 = trunc i64 %225 to i32
  br label %260

260:                                              ; preds = %252, %258, %217
  %261 = phi i32 [ %62, %217 ], [ %259, %258 ], [ %253, %252 ]
  %262 = icmp ult i32 %261, %15
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %262, label %265, label %312

265:                                              ; preds = %260
  br i1 %264, label %361, label %266

266:                                              ; preds = %265
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = icmp ugt i32 %268, %261
  br i1 %269, label %270, label %313

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 1
  br i1 %274, label %282, label %276

276:                                              ; preds = %270
  %277 = bitcast %"class.WTF::StringImpl"* %275 to i8*
  %278 = zext i32 %261 to i64
  %279 = getelementptr inbounds i8, i8* %277, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i16
  br label %287

282:                                              ; preds = %270
  %283 = bitcast %"class.WTF::StringImpl"* %275 to i16*
  %284 = zext i32 %261 to i64
  %285 = getelementptr inbounds i16, i16* %283, i64 %284
  %286 = load i16, i16* %285, align 2
  br label %287

287:                                              ; preds = %276, %282
  %288 = phi i16 [ %281, %276 ], [ %286, %282 ]
  %289 = icmp eq i16 %288, 44
  br i1 %289, label %310, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 1
  br i1 %294, label %302, label %296

296:                                              ; preds = %290
  %297 = bitcast %"class.WTF::StringImpl"* %295 to i8*
  %298 = zext i32 %261 to i64
  %299 = getelementptr inbounds i8, i8* %297, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i16
  br label %307

302:                                              ; preds = %290
  %303 = bitcast %"class.WTF::StringImpl"* %295 to i16*
  %304 = zext i32 %261 to i64
  %305 = getelementptr inbounds i16, i16* %303, i64 %304
  %306 = load i16, i16* %305, align 2
  br label %307

307:                                              ; preds = %296, %302
  %308 = phi i16 [ %301, %296 ], [ %306, %302 ]
  %309 = icmp eq i16 %308, 59
  br i1 %309, label %310, label %313

310:                                              ; preds = %307, %287
  %311 = add nuw i32 %261, 1
  br label %313

312:                                              ; preds = %260
  br i1 %264, label %361, label %313

313:                                              ; preds = %266, %310, %307, %312
  %314 = phi i32 [ %261, %312 ], [ %261, %266 ], [ %311, %310 ], [ %261, %307 ]
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 1
  %316 = load i32, i32* %315, align 4
  %317 = icmp ult i32 %314, %316
  br i1 %317, label %318, label %361

318:                                              ; preds = %313
  %319 = zext i32 %314 to i64
  %320 = add i32 %316, -1
  %321 = zext i32 %320 to i64
  br label %322

322:                                              ; preds = %318, %353
  %323 = phi i64 [ %319, %318 ], [ %354, %353 ]
  %324 = phi i32 [ %314, %318 ], [ %351, %353 ]
  %325 = phi %"class.WTF::StringImpl"* [ %263, %318 ], [ %355, %353 ]
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %347, label %327

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = zext i32 %329 to i64
  %331 = icmp ult i64 %323, %330
  br i1 %331, label %332, label %347

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 1
  br i1 %336, label %343, label %338

338:                                              ; preds = %332
  %339 = bitcast %"class.WTF::StringImpl"* %337 to i8*
  %340 = getelementptr inbounds i8, i8* %339, i64 %323
  %341 = load i8, i8* %340, align 1
  %342 = zext i8 %341 to i16
  br label %347

343:                                              ; preds = %332
  %344 = bitcast %"class.WTF::StringImpl"* %337 to i16*
  %345 = getelementptr inbounds i16, i16* %344, i64 %323
  %346 = load i16, i16* %345, align 2
  br label %347

347:                                              ; preds = %343, %338, %327, %322
  %348 = phi i16 [ 0, %327 ], [ 0, %322 ], [ %342, %338 ], [ %346, %343 ]
  %349 = call zeroext i1 %17(i16 zeroext %348) #15
  br i1 %349, label %350, label %356

350:                                              ; preds = %347
  %351 = add nuw i32 %324, 1
  %352 = icmp eq i64 %323, %321
  br i1 %352, label %358, label %353

353:                                              ; preds = %350
  %354 = add nuw nsw i64 %323, 1
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %322

356:                                              ; preds = %347
  %357 = trunc i64 %323 to i32
  br label %358

358:                                              ; preds = %350, %356
  %359 = phi i32 [ %357, %356 ], [ %351, %350 ]
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %361

361:                                              ; preds = %358, %265, %312, %313
  %362 = phi %"class.WTF::StringImpl"* [ %263, %313 ], [ null, %312 ], [ null, %265 ], [ %360, %358 ]
  %363 = phi i32 [ %314, %313 ], [ %261, %312 ], [ %261, %265 ], [ %359, %358 ]
  %364 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %364) #15
  %365 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %366 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %365, i64* %366, align 8
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %367, align 8
  %368 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 3, i32* %368, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %361
  %371 = call i32 @_ZN3WTF10StringImpl21FindIgnoringASCIICaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %362, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, i32 %363) #15
  br label %372

372:                                              ; preds = %361, %370
  %373 = phi i32 [ %371, %370 ], [ -1, %361 ]
  %374 = icmp eq i32 %373, %363
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %364) #15
  br i1 %374, label %375, label %494

375:                                              ; preds = %372
  %376 = add i32 %363, 3
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %597, label %379

379:                                              ; preds = %375
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = icmp ult i32 %376, %381
  br i1 %382, label %383, label %426

383:                                              ; preds = %379
  %384 = zext i32 %376 to i64
  %385 = add i32 %381, -1
  br label %386

386:                                              ; preds = %383, %417
  %387 = phi i64 [ %384, %383 ], [ %419, %417 ]
  %388 = phi i32 [ %376, %383 ], [ %415, %417 ]
  %389 = phi %"class.WTF::StringImpl"* [ %377, %383 ], [ %418, %417 ]
  %390 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %390, label %411, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = zext i32 %393 to i64
  %395 = icmp ult i64 %387, %394
  br i1 %395, label %396, label %411

396:                                              ; preds = %391
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 1
  br i1 %400, label %407, label %402

402:                                              ; preds = %396
  %403 = bitcast %"class.WTF::StringImpl"* %401 to i8*
  %404 = getelementptr inbounds i8, i8* %403, i64 %387
  %405 = load i8, i8* %404, align 1
  %406 = zext i8 %405 to i16
  br label %411

407:                                              ; preds = %396
  %408 = bitcast %"class.WTF::StringImpl"* %401 to i16*
  %409 = getelementptr inbounds i16, i16* %408, i64 %387
  %410 = load i16, i16* %409, align 2
  br label %411

411:                                              ; preds = %407, %402, %391, %386
  %412 = phi i16 [ 0, %391 ], [ 0, %386 ], [ %406, %402 ], [ %410, %407 ]
  %413 = call zeroext i1 %17(i16 zeroext %412) #15
  br i1 %413, label %414, label %420

414:                                              ; preds = %411
  %415 = add i32 %388, 1
  %416 = icmp eq i32 %388, %385
  br i1 %416, label %422, label %417

417:                                              ; preds = %414
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %419 = add nuw nsw i64 %387, 1
  br label %386

420:                                              ; preds = %411
  %421 = trunc i64 %387 to i32
  br label %422

422:                                              ; preds = %414, %420
  %423 = phi i32 [ %421, %420 ], [ %415, %414 ]
  %424 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %425 = icmp eq %"class.WTF::StringImpl"* %424, null
  br i1 %425, label %597, label %426

426:                                              ; preds = %379, %422
  %427 = phi i32 [ %423, %422 ], [ %376, %379 ]
  %428 = phi %"class.WTF::StringImpl"* [ %424, %422 ], [ %377, %379 ]
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 1
  %430 = load i32, i32* %429, align 4
  %431 = icmp ugt i32 %430, %427
  br i1 %431, label %432, label %494

432:                                              ; preds = %426
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 1
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 1
  br i1 %436, label %444, label %438

438:                                              ; preds = %432
  %439 = bitcast %"class.WTF::StringImpl"* %437 to i8*
  %440 = zext i32 %427 to i64
  %441 = getelementptr inbounds i8, i8* %439, i64 %440
  %442 = load i8, i8* %441, align 1
  %443 = zext i8 %442 to i16
  br label %449

444:                                              ; preds = %432
  %445 = bitcast %"class.WTF::StringImpl"* %437 to i16*
  %446 = zext i32 %427 to i64
  %447 = getelementptr inbounds i16, i16* %445, i64 %446
  %448 = load i16, i16* %447, align 2
  br label %449

449:                                              ; preds = %438, %444
  %450 = phi i16 [ %443, %438 ], [ %448, %444 ]
  %451 = icmp eq i16 %450, 61
  br i1 %451, label %452, label %494

452:                                              ; preds = %449
  %453 = add nuw i32 %427, 1
  %454 = icmp ult i32 %453, %430
  br i1 %454, label %455, label %494

455:                                              ; preds = %452
  %456 = zext i32 %453 to i64
  %457 = add i32 %430, -1
  br label %458

458:                                              ; preds = %455, %489
  %459 = phi i64 [ %456, %455 ], [ %491, %489 ]
  %460 = phi i32 [ %453, %455 ], [ %487, %489 ]
  %461 = phi %"class.WTF::StringImpl"* [ %428, %455 ], [ %490, %489 ]
  %462 = icmp eq %"class.WTF::StringImpl"* %461, null
  br i1 %462, label %483, label %463

463:                                              ; preds = %458
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 1
  %465 = load i32, i32* %464, align 4
  %466 = zext i32 %465 to i64
  %467 = icmp ult i64 %459, %466
  br i1 %467, label %468, label %483

468:                                              ; preds = %463
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load atomic i32, i32* %469 monotonic, align 4
  %471 = and i32 %470, 1
  %472 = icmp eq i32 %471, 0
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 1
  br i1 %472, label %479, label %474

474:                                              ; preds = %468
  %475 = bitcast %"class.WTF::StringImpl"* %473 to i8*
  %476 = getelementptr inbounds i8, i8* %475, i64 %459
  %477 = load i8, i8* %476, align 1
  %478 = zext i8 %477 to i16
  br label %483

479:                                              ; preds = %468
  %480 = bitcast %"class.WTF::StringImpl"* %473 to i16*
  %481 = getelementptr inbounds i16, i16* %480, i64 %459
  %482 = load i16, i16* %481, align 2
  br label %483

483:                                              ; preds = %479, %474, %463, %458
  %484 = phi i16 [ 0, %463 ], [ 0, %458 ], [ %478, %474 ], [ %482, %479 ]
  %485 = call zeroext i1 %17(i16 zeroext %484) #15
  br i1 %485, label %486, label %492

486:                                              ; preds = %483
  %487 = add i32 %460, 1
  %488 = icmp eq i32 %460, %457
  br i1 %488, label %494, label %489

489:                                              ; preds = %486
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %491 = add nuw nsw i64 %459, 1
  br label %458

492:                                              ; preds = %483
  %493 = trunc i64 %459 to i32
  br label %494

494:                                              ; preds = %486, %492, %426, %449, %452, %372
  %495 = phi i32 [ %363, %426 ], [ %363, %449 ], [ %453, %452 ], [ %363, %372 ], [ %493, %492 ], [ %487, %486 ]
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %597, label %498

498:                                              ; preds = %494
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 1
  %500 = load i32, i32* %499, align 4
  %501 = icmp ugt i32 %500, %495
  br i1 %501, label %502, label %597

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 1
  %506 = icmp eq i32 %505, 0
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 1
  br i1 %506, label %514, label %508

508:                                              ; preds = %502
  %509 = bitcast %"class.WTF::StringImpl"* %507 to i8*
  %510 = zext i32 %495 to i64
  %511 = getelementptr inbounds i8, i8* %509, i64 %510
  %512 = load i8, i8* %511, align 1
  %513 = zext i8 %512 to i16
  br label %519

514:                                              ; preds = %502
  %515 = bitcast %"class.WTF::StringImpl"* %507 to i16*
  %516 = zext i32 %495 to i64
  %517 = getelementptr inbounds i16, i16* %515, i64 %516
  %518 = load i16, i16* %517, align 2
  br label %519

519:                                              ; preds = %508, %514
  %520 = phi i16 [ %513, %508 ], [ %518, %514 ]
  %521 = icmp eq i16 %520, 34
  br i1 %521, label %542, label %522

522:                                              ; preds = %519
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = load atomic i32, i32* %523 monotonic, align 4
  %525 = and i32 %524, 1
  %526 = icmp eq i32 %525, 0
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 1
  br i1 %526, label %534, label %528

528:                                              ; preds = %522
  %529 = bitcast %"class.WTF::StringImpl"* %527 to i8*
  %530 = zext i32 %495 to i64
  %531 = getelementptr inbounds i8, i8* %529, i64 %530
  %532 = load i8, i8* %531, align 1
  %533 = zext i8 %532 to i16
  br label %539

534:                                              ; preds = %522
  %535 = bitcast %"class.WTF::StringImpl"* %527 to i16*
  %536 = zext i32 %495 to i64
  %537 = getelementptr inbounds i16, i16* %535, i64 %536
  %538 = load i16, i16* %537, align 2
  br label %539

539:                                              ; preds = %528, %534
  %540 = phi i16 [ %533, %528 ], [ %538, %534 ]
  %541 = icmp eq i16 %540, 39
  br i1 %541, label %542, label %597

542:                                              ; preds = %539, %519
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 1
  %546 = icmp eq i32 %545, 0
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 1
  br i1 %546, label %554, label %548

548:                                              ; preds = %542
  %549 = bitcast %"class.WTF::StringImpl"* %547 to i8*
  %550 = zext i32 %495 to i64
  %551 = getelementptr inbounds i8, i8* %549, i64 %550
  %552 = load i8, i8* %551, align 1
  %553 = zext i8 %552 to i16
  br label %559

554:                                              ; preds = %542
  %555 = bitcast %"class.WTF::StringImpl"* %547 to i16*
  %556 = zext i32 %495 to i64
  %557 = getelementptr inbounds i16, i16* %555, i64 %556
  %558 = load i16, i16* %557, align 2
  br label %559

559:                                              ; preds = %548, %554
  %560 = phi i16 [ %553, %548 ], [ %558, %554 ]
  %561 = add nuw i32 %495, 1
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 1
  %564 = bitcast %"class.WTF::StringImpl"* %563 to i8*
  %565 = bitcast %"class.WTF::StringImpl"* %563 to i16*
  %566 = zext i32 %15 to i64
  %567 = zext i32 %561 to i64
  br label %568

568:                                              ; preds = %587, %559
  %569 = phi i64 [ %590, %587 ], [ %566, %559 ]
  %570 = icmp ugt i64 %569, %567
  %571 = trunc i64 %569 to i32
  br i1 %570, label %572, label %591

572:                                              ; preds = %568
  %573 = add i32 %571, -1
  %574 = icmp ugt i32 %500, %573
  br i1 %574, label %575, label %587

575:                                              ; preds = %572
  %576 = load atomic i32, i32* %562 monotonic, align 4
  %577 = and i32 %576, 1
  %578 = icmp eq i32 %577, 0
  %579 = zext i32 %573 to i64
  br i1 %578, label %584, label %580

580:                                              ; preds = %575
  %581 = getelementptr inbounds i8, i8* %564, i64 %579
  %582 = load i8, i8* %581, align 1
  %583 = zext i8 %582 to i16
  br label %587

584:                                              ; preds = %575
  %585 = getelementptr inbounds i16, i16* %565, i64 %579
  %586 = load i16, i16* %585, align 2
  br label %587

587:                                              ; preds = %572, %580, %584
  %588 = phi i16 [ 0, %572 ], [ %583, %580 ], [ %586, %584 ]
  %589 = icmp eq i16 %588, %560
  %590 = add nsw i64 %569, -1
  br i1 %589, label %593, label %568

591:                                              ; preds = %568
  %592 = trunc i64 %569 to i32
  br label %593

593:                                              ; preds = %587, %591
  %594 = phi i32 [ %592, %591 ], [ %573, %587 ]
  %595 = icmp eq i32 %594, %561
  %596 = select i1 %595, i32 %15, i32 %594
  br label %597

597:                                              ; preds = %498, %422, %375, %494, %593, %539
  %598 = phi i32 [ %561, %593 ], [ %495, %539 ], [ %495, %494 ], [ %363, %375 ], [ %363, %422 ], [ %495, %498 ]
  %599 = phi i32 [ %596, %593 ], [ %15, %539 ], [ %15, %494 ], [ %15, %375 ], [ %15, %422 ], [ %15, %498 ]
  %600 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %600) #15
  %601 = sub i32 %599, %598
  %602 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 %598, i32 %601) #15
  %603 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %602, %"class.WTF::StringImpl"** %603, align 8
  %604 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %9) #15
  %605 = ptrtoint %"class.WTF::StringImpl"* %604 to i64
  %606 = bitcast %"class.WTF::String"* %3 to i64*
  %607 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8
  store i64 %605, i64* %606, align 8
  %609 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %609, label %623, label %610

610:                                              ; preds = %597
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = load atomic i32, i32* %611 monotonic, align 4
  %613 = and i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 0
  %616 = load i32, i32* %615, align 4
  br i1 %614, label %617, label %619

617:                                              ; preds = %610
  %618 = add i32 %616, -1
  store i32 %618, i32* %615, align 4
  br label %619

619:                                              ; preds = %617, %610
  %620 = phi i32 [ %618, %617 ], [ %616, %610 ]
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %623

622:                                              ; preds = %619
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %608) #15
  br label %623

623:                                              ; preds = %622, %619, %597
  %624 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %603, align 8
  %625 = icmp eq %"class.WTF::StringImpl"* %624, null
  br i1 %625, label %639, label %626

626:                                              ; preds = %623
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %628 = load atomic i32, i32* %627 monotonic, align 4
  %629 = and i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 0
  %632 = load i32, i32* %631, align 4
  br i1 %630, label %633, label %635

633:                                              ; preds = %626
  %634 = add i32 %632, -1
  store i32 %634, i32* %631, align 4
  br label %635

635:                                              ; preds = %633, %626
  %636 = phi i32 [ %634, %633 ], [ %632, %626 ]
  %637 = icmp eq i32 %636, 0
  br i1 %637, label %638, label %639

638:                                              ; preds = %635
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %624) #15
  br label %639

639:                                              ; preds = %623, %635, %638
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %600) #15
  br label %640

640:                                              ; preds = %13, %4, %210, %58, %639, %170
  %641 = phi i1 [ %154, %170 ], [ true, %639 ], [ false, %58 ], [ false, %210 ], [ false, %4 ], [ false, %13 ]
  ret i1 %641
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_112IsWhitespaceEDs(i16 zeroext) #0 {
  %2 = icmp eq i16 %0, 32
  %3 = icmp eq i16 %0, 9
  %4 = or i1 %2, %3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116ParseRefreshTimeERKN3WTF6StringERN4base9TimeDeltaE(%"class.WTF::String"* dereferenceable(8), %"class.base::TimeDelta"* nocapture dereferenceable(8)) unnamed_addr #1 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %2 ]
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %16 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %17 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  br label %18

18:                                               ; preds = %55, %11
  %19 = phi i64 [ %58, %55 ], [ 0, %11 ]
  %20 = phi i32 [ %56, %55 ], [ 0, %11 ]
  %21 = phi i32 [ %57, %55 ], [ %12, %11 ]
  br i1 %7, label %24, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %13, align 4
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i32 [ %23, %22 ], [ 0, %18 ]
  %26 = zext i32 %25 to i64
  %27 = icmp ult i64 %19, %26
  br i1 %27, label %28, label %59

28:                                               ; preds = %24
  br i1 %7, label %94, label %29

29:                                               ; preds = %28
  %30 = load i32, i32* %13, align 4
  %31 = zext i32 %30 to i64
  %32 = icmp ult i64 %19, %31
  br i1 %32, label %33, label %94

33:                                               ; preds = %29
  %34 = load atomic i32, i32* %14 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %16, i64 %19
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  br label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds i16, i16* %17, i64 %19
  %43 = load i16, i16* %42, align 2
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi i16 [ %40, %37 ], [ %43, %41 ]
  %46 = icmp eq i16 %45, 46
  br i1 %46, label %47, label %52

47:                                               ; preds = %44
  %48 = add nsw i32 %20, 1
  %49 = icmp eq i32 %48, 2
  %50 = trunc i64 %19 to i32
  %51 = select i1 %49, i32 %50, i32 %21
  br label %55

52:                                               ; preds = %44
  %53 = add i16 %45, -48
  %54 = icmp ult i16 %53, 10
  br i1 %54, label %55, label %94

55:                                               ; preds = %47, %52
  %56 = phi i32 [ %20, %52 ], [ %48, %47 ]
  %57 = phi i32 [ %21, %52 ], [ %51, %47 ]
  %58 = add nuw nsw i64 %19, 1
  br label %18

59:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 -86, i8* %3, align 1
  %60 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #15
  %61 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 0, i32 %21) #15
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %4, i8* nonnull %3) #15
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #15
  br label %79

79:                                               ; preds = %59, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %80 = load i8, i8* %3, align 1, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79
  %83 = fmul double %63, 1.000000e+06
  %84 = fcmp ult double %83, 0xC3E0000000000000
  %85 = fcmp ugt double %83, 0x43DFFFFFFFFFFFFF
  %86 = fcmp ogt double %83, 0xC3E0000000000000
  %87 = select i1 %86, double %83, double 0xC3E0000000000000
  %88 = fptosi double %87 to i64
  %89 = select i1 %84, i64 0, i64 9223372036854775807
  %90 = select i1 %85, i64 %89, i64 %88
  %91 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  store i64 %90, i64* %91, align 8
  br label %92

92:                                               ; preds = %79, %82
  %93 = phi i1 [ true, %82 ], [ false, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  br label %94

94:                                               ; preds = %29, %28, %52, %92
  %95 = phi i1 [ %93, %92 ], [ false, %52 ], [ false, %28 ], [ false, %29 ]
  ret i1 %95
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN5blink9ParseDateERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #15
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* %0, i32 0) #15
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = select i1 %7, i8* %9, i8* %3
  %11 = call { i8, i64 } @_ZN3WTF37ParseDateFromNullTerminatedCharactersEPKc(i8* %10) #15
  %12 = load i8, i8* %5, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %15) #16
  br label %16

16:                                               ; preds = %1, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #15
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZN3WTF37ParseDateFromNullTerminatedCharactersEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink28ExtractMIMETypeFromMediaTypeERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  br label %148

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = or i1 %4, %10
  br i1 %11, label %46, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %17 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %18 = bitcast %"class.WTF::StringImpl"* %16 to i16*
  %19 = zext i32 %9 to i64
  %20 = zext i32 %14 to i64
  br label %21

21:                                               ; preds = %38, %12
  %22 = phi i64 [ 0, %12 ], [ %39, %38 ]
  %23 = phi i32 [ 0, %12 ], [ %40, %38 ]
  %24 = icmp eq i64 %22, %20
  br i1 %24, label %42, label %25

25:                                               ; preds = %21
  %26 = load atomic i32, i32* %15 monotonic, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, i8* %17, i64 %22
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  br label %36

33:                                               ; preds = %25
  %34 = getelementptr inbounds i16, i16* %18, i64 %22
  %35 = load i16, i16* %34, align 2
  br label %36

36:                                               ; preds = %29, %33
  %37 = phi i16 [ %32, %29 ], [ %35, %33 ]
  switch i16 %37, label %44 [
    i16 9, label %38
    i16 32, label %38
  ]

38:                                               ; preds = %36, %36
  %39 = add nuw nsw i64 %22, 1
  %40 = add nuw i32 %23, 1
  %41 = icmp ult i64 %39, %19
  br i1 %41, label %21, label %46

42:                                               ; preds = %21
  %43 = trunc i64 %22 to i32
  br label %46

44:                                               ; preds = %36
  %45 = trunc i64 %22 to i32
  br label %46

46:                                               ; preds = %38, %42, %44, %7
  %47 = phi i32 [ 0, %7 ], [ %43, %42 ], [ %45, %44 ], [ %40, %38 ]
  %48 = icmp eq i32 %47, %9
  br i1 %48, label %58, label %49

49:                                               ; preds = %46
  %50 = icmp ult i32 %47, %9
  br i1 %50, label %51, label %105

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %55 = bitcast %"class.WTF::StringImpl"* %54 to i8*
  %56 = bitcast %"class.WTF::StringImpl"* %54 to i16*
  %57 = zext i32 %47 to i64
  br label %77

58:                                               ; preds = %46
  %59 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  br i1 %4, label %148, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %148

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #15
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !9

74:                                               ; preds = %65
  tail call void @llvm.trap() #15
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %148

77:                                               ; preds = %100, %51
  %78 = phi i64 [ %57, %51 ], [ %102, %100 ]
  %79 = phi i32 [ %47, %51 ], [ %101, %100 ]
  br i1 %4, label %97, label %80

80:                                               ; preds = %77
  %81 = load i32, i32* %52, align 4
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %78, %82
  br i1 %83, label %84, label %97

84:                                               ; preds = %80
  %85 = load atomic i32, i32* %53 monotonic, align 4
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds i8, i8* %55, i64 %78
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i16
  br label %95

92:                                               ; preds = %84
  %93 = getelementptr inbounds i16, i16* %56, i64 %78
  %94 = load i16, i16* %93, align 2
  br label %95

95:                                               ; preds = %88, %92
  %96 = phi i16 [ %91, %88 ], [ %94, %92 ]
  switch i16 %96, label %97 [
    i16 44, label %105
    i16 59, label %105
    i16 9, label %100
    i16 32, label %100
  ]

97:                                               ; preds = %77, %80, %95
  %98 = trunc i64 %78 to i32
  %99 = add i32 %98, 1
  br label %100

100:                                              ; preds = %97, %95, %95
  %101 = phi i32 [ %99, %97 ], [ %79, %95 ], [ %79, %95 ]
  %102 = add nuw nsw i64 %78, 1
  %103 = trunc i64 %102 to i32
  %104 = icmp eq i32 %9, %103
  br i1 %104, label %105, label %77

105:                                              ; preds = %95, %95, %100, %49
  %106 = phi i32 [ %47, %49 ], [ %79, %95 ], [ %79, %95 ], [ %101, %100 ]
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0
  %108 = sub i32 %106, %47
  %109 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %107, i32 %47, i32 %108) #15
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %148, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 acquire, align 4
  %114 = and i32 %113, 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %111
  %117 = load atomic i32, i32* %112 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %134

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i33
  %124 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #15
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !9

129:                                              ; preds = %120
  tail call void @llvm.trap() #15
  unreachable

130:                                              ; preds = %120
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %121, align 4
  br label %134

132:                                              ; preds = %111
  %133 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %109) #15
  br label %134

134:                                              ; preds = %116, %130, %132
  %135 = phi %"class.WTF::StringImpl"* [ %109, %130 ], [ %109, %116 ], [ %133, %132 ]
  %136 = ptrtoint %"class.WTF::StringImpl"* %135 to i64
  %137 = load atomic i32, i32* %112 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %134
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %134
  %145 = phi i32 [ %143, %142 ], [ %141, %134 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #15
  br label %148

148:                                              ; preds = %5, %105, %147, %144, %75, %60, %58
  %149 = phi i64 [ %59, %58 ], [ %59, %60 ], [ %59, %75 ], [ %136, %144 ], [ %136, %147 ], [ 0, %105 ], [ %6, %5 ]
  %150 = inttoptr i64 %149 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink29ParseContentTypeOptionsHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::Vector.88", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %123, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %123, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.WTF::Vector.88"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #15
  %18 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 1, i32* %22, align 8
  call void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, i1 zeroext false, %"class.WTF::Vector.88"* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15
  %23 = load i32, i32* %17, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %85, label %25

25:                                               ; preds = %14
  %26 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  %27 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.88"* nonnull %4, i32 0) #15
  %28 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %27) #15
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %6) #15
  %31 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %35, i64* %36, align 8
  br label %45

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

45:                                               ; preds = %37, %33
  %46 = phi i64 [ %44, %37 ], [ %35, %33 ]
  %47 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #15
  %50 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %46, i64* %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 7, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %32, label %67, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #15
  br label %67

67:                                               ; preds = %45, %63, %66
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #15
  br label %83

83:                                               ; preds = %82, %79, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  %84 = zext i1 %53 to i32
  br label %85

85:                                               ; preds = %83, %14
  %86 = phi i32 [ 0, %14 ], [ %84, %83 ]
  %87 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %88 = icmp eq %"class.WTF::String"* %87, null
  br i1 %88, label %122, label %89, !prof !13

89:                                               ; preds = %85
  %90 = bitcast %"class.WTF::String"* %87 to i8*
  %91 = load i32, i32* %17, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %120, label %93, !prof !9

93:                                               ; preds = %89
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 %94
  br label %96

96:                                               ; preds = %114, %93
  %97 = phi %"class.WTF::String"* [ %115, %114 ], [ %87, %93 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #15
  br label %114

114:                                              ; preds = %113, %110, %96
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 1
  %116 = icmp eq %"class.WTF::String"* %115, %95
  br i1 %116, label %117, label %96

117:                                              ; preds = %114
  store i32 0, i32* %17, align 4
  %118 = bitcast %"class.WTF::Vector.88"* %4 to i8**
  %119 = load i8*, i8** %118, align 8
  br label %120

120:                                              ; preds = %117, %89
  %121 = phi i8* [ %119, %117 ], [ %90, %89 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %121) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %16, align 8
  br label %122

122:                                              ; preds = %85, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br label %123

123:                                              ; preds = %1, %10, %122
  %124 = phi i32 [ %86, %122 ], [ 0, %10 ], [ 0, %1 ]
  ret i32 %124
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_(%"struct.blink::CacheControlHeader"* noalias nocapture sret, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"struct.std::__1::pair.270", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"struct.std::__1::pair.270", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"struct.std::__1::pair.270", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"struct.std::__1::pair.270", align 8
  %18 = alloca %"struct.std::__1::pair.270", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"struct.std::__1::pair.270", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::Vector.267", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = getelementptr inbounds %"struct.blink::CacheControlHeader", %"struct.blink::CacheControlHeader"* %0, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 -86, i64 40, i1 false)
  %33 = getelementptr inbounds %"struct.blink::CacheControlHeader", %"struct.blink::CacheControlHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::CacheControlHeader", %"struct.blink::CacheControlHeader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 -95, i8* %32, align 8
  store i8 0, i8* %33, align 8
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %1399, label %38

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %1399, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.WTF::Vector.267"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #15
  %44 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %24, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %24, i64 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %24, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #15
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %48 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %50 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"* %47, i1 (i16)* nonnull @_ZN5blinkL18IsControlCharacterEDs) #15
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %1107, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %1091, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.WTF::String"* %5 to i8*
  %58 = bitcast %"class.WTF::String"* %6 to i8*
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::String"* %7 to i8*
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::String"* %8 to i8*
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %65 = bitcast %"struct.std::__1::pair.270"* %11 to i8*
  %66 = bitcast %"class.WTF::String"* %12 to i8*
  %67 = bitcast %"class.WTF::String"* %13 to i8*
  %68 = bitcast %"struct.std::__1::pair.270"* %9 to i8*
  %69 = bitcast %"class.WTF::String"* %10 to i8*
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %9, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %9, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  %74 = bitcast %"struct.std::__1::pair.270"* %9 to i64*
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %9, i64 0, i32 1, i32 0, i32 0
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 0, i32 1
  %81 = bitcast %"class.WTF::String"* %80 to i64*
  %82 = bitcast %"struct.std::__1::pair.270"* %11 to i64*
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 0, i32 1, i32 0, i32 0
  %85 = bitcast %"struct.std::__1::pair.270"* %14 to i8*
  %86 = bitcast %"class.WTF::String"* %15 to i8*
  %87 = bitcast %"class.WTF::String"* %16 to i8*
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %14, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %14, i64 0, i32 1
  %92 = bitcast %"class.WTF::String"* %91 to i64*
  %93 = bitcast %"struct.std::__1::pair.270"* %14 to i64*
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %14, i64 0, i32 1, i32 0, i32 0
  %96 = bitcast %"struct.std::__1::pair.270"* %17 to i8*
  %97 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 0, i32 1
  %99 = bitcast %"class.WTF::String"* %98 to i64*
  %100 = bitcast %"struct.std::__1::pair.270"* %17 to i64*
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %17, i64 0, i32 1, i32 0, i32 0
  %103 = bitcast %"struct.std::__1::pair.270"* %18 to i8*
  %104 = bitcast %"class.WTF::String"* %19 to i8*
  %105 = bitcast %"class.WTF::String"* %20 to i8*
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %108 = bitcast %"struct.std::__1::pair.270"* %18 to i64*
  %109 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 0, i32 1
  %110 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %109 to i64*
  %113 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %18, i64 0, i32 1, i32 0, i32 0
  br label %114

114:                                              ; preds = %56, %1088
  %115 = phi i32 [ %1086, %1088 ], [ 0, %56 ]
  %116 = phi %"class.WTF::StringImpl"* [ %1089, %1088 ], [ %50, %56 ]
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 1
  br i1 %120, label %139, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp ugt i32 %124, %115
  br i1 %125, label %126, label %157

126:                                              ; preds = %122
  %127 = bitcast %"class.WTF::StringImpl"* %121 to i8*
  %128 = zext i32 %115 to i64
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  %130 = sub i32 %124, %115
  %131 = zext i32 %130 to i64
  %132 = call i8* @memchr(i8* %129, i32 44, i64 %131) #17
  %133 = icmp eq i8* %132, null
  %134 = ptrtoint i8* %132 to i64
  %135 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %136 = sub i64 %134, %135
  %137 = trunc i64 %136 to i32
  %138 = select i1 %133, i32 -1, i32 %137
  br label %157

139:                                              ; preds = %114
  %140 = bitcast %"class.WTF::StringImpl"* %121 to i16*
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = icmp ugt i32 %142, %115
  br i1 %143, label %144, label %157

144:                                              ; preds = %139
  %145 = zext i32 %115 to i64
  br label %146

146:                                              ; preds = %151, %144
  %147 = phi i64 [ %145, %144 ], [ %152, %151 ]
  %148 = getelementptr inbounds i16, i16* %140, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = icmp eq i16 %149, 44
  br i1 %150, label %155, label %151

151:                                              ; preds = %146
  %152 = add nuw nsw i64 %147, 1
  %153 = trunc i64 %152 to i32
  %154 = icmp eq i32 %142, %153
  br i1 %154, label %157, label %146

155:                                              ; preds = %146
  %156 = trunc i64 %147 to i32
  br label %157

157:                                              ; preds = %151, %155, %139, %126, %122
  %158 = phi i32 [ %142, %139 ], [ %124, %126 ], [ %124, %122 ], [ %142, %155 ], [ %142, %151 ]
  %159 = phi i32 [ -1, %139 ], [ %138, %126 ], [ -1, %122 ], [ %156, %155 ], [ -1, %151 ]
  %160 = load atomic i32, i32* %117 monotonic, align 4
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %176, label %163

163:                                              ; preds = %157
  %164 = icmp ugt i32 %158, %115
  br i1 %164, label %165, label %887

165:                                              ; preds = %163
  %166 = bitcast %"class.WTF::StringImpl"* %121 to i8*
  %167 = zext i32 %115 to i64
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  %169 = sub i32 %158, %115
  %170 = zext i32 %169 to i64
  %171 = call i8* @memchr(i8* %168, i32 61, i64 %170) #17
  %172 = icmp eq i8* %171, null
  %173 = ptrtoint i8* %171 to i64
  %174 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %175 = sub i64 %173, %174
  br i1 %172, label %887, label %190

176:                                              ; preds = %157
  %177 = bitcast %"class.WTF::StringImpl"* %121 to i16*
  %178 = icmp ugt i32 %158, %115
  br i1 %178, label %179, label %887

179:                                              ; preds = %176
  %180 = zext i32 %115 to i64
  br label %181

181:                                              ; preds = %186, %179
  %182 = phi i64 [ %180, %179 ], [ %187, %186 ]
  %183 = getelementptr inbounds i16, i16* %177, i64 %182
  %184 = load i16, i16* %183, align 2
  %185 = icmp eq i16 %184, 61
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = add nuw nsw i64 %182, 1
  %188 = trunc i64 %187 to i32
  %189 = icmp eq i32 %158, %188
  br i1 %189, label %887, label %181

190:                                              ; preds = %181, %165
  %191 = phi i64 [ %175, %165 ], [ %182, %181 ]
  %192 = trunc i64 %191 to i32
  %193 = icmp eq i32 %192, -1
  br i1 %193, label %887, label %194

194:                                              ; preds = %190
  %195 = icmp ugt i32 %159, %192
  %196 = icmp eq i32 %159, -1
  %197 = or i1 %196, %195
  br i1 %197, label %198, label %889

198:                                              ; preds = %194
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #15
  %199 = sub i32 %192, %115
  %200 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 %115, i32 %199) #15
  store %"class.WTF::StringImpl"* %200, %"class.WTF::StringImpl"** %59, align 8
  %201 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %6) #15
  store %"class.WTF::StringImpl"* %201, %"class.WTF::StringImpl"** %60, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %198
  %204 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %201, i1 (i16)* nonnull @_ZN5blinkL22IsCacheHeaderSeparatorEDs, i32 0) #15
  br label %205

205:                                              ; preds = %203, %198
  %206 = phi i32 [ %204, %203 ], [ -1, %198 ]
  %207 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %5, i32 0, i32 %206) #15
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #15
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #15
  br label %239

239:                                              ; preds = %238, %235, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #15
  %240 = add nuw i32 %192, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #15
  %241 = sub i32 %54, %240
  %242 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 %240, i32 %241) #15
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %64, align 8
  %243 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %8) #15
  store %"class.WTF::StringImpl"* %243, %"class.WTF::StringImpl"** %62, align 8
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %261, label %246

246:                                              ; preds = %239
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #15
  br label %259

259:                                              ; preds = %258, %255
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  br label %261

261:                                              ; preds = %259, %239
  %262 = phi %"class.WTF::StringImpl"* [ %260, %259 ], [ %243, %239 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #15
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #15
  br label %779

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %595, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 1
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 1
  br i1 %273, label %279, label %275

275:                                              ; preds = %269
  %276 = bitcast %"class.WTF::StringImpl"* %274 to i8*
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i16
  br label %282

279:                                              ; preds = %269
  %280 = bitcast %"class.WTF::StringImpl"* %274 to i16*
  %281 = load i16, i16* %280, align 2
  br label %282

282:                                              ; preds = %279, %275
  %283 = phi i16 [ %278, %275 ], [ %281, %279 ]
  %284 = icmp eq i16 %283, 34
  br i1 %284, label %285, label %595

285:                                              ; preds = %282
  %286 = load atomic i32, i32* %270 monotonic, align 4
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %301, label %289

289:                                              ; preds = %285
  %290 = icmp ugt i32 %267, 1
  br i1 %290, label %291, label %482

291:                                              ; preds = %289
  %292 = bitcast %"class.WTF::StringImpl"* %274 to i8*
  %293 = getelementptr inbounds i8, i8* %292, i64 1
  %294 = add i32 %267, -1
  %295 = zext i32 %294 to i64
  %296 = call i8* @memchr(i8* %293, i32 34, i64 %295) #17
  %297 = icmp eq i8* %296, null
  %298 = ptrtoint i8* %296 to i64
  %299 = ptrtoint %"class.WTF::StringImpl"* %274 to i64
  %300 = sub i64 %298, %299
  br i1 %297, label %482, label %313

301:                                              ; preds = %285
  %302 = bitcast %"class.WTF::StringImpl"* %274 to i16*
  %303 = icmp ugt i32 %267, 1
  br i1 %303, label %304, label %482

304:                                              ; preds = %301, %309
  %305 = phi i64 [ %310, %309 ], [ 1, %301 ]
  %306 = getelementptr inbounds i16, i16* %302, i64 %305
  %307 = load i16, i16* %306, align 2
  %308 = icmp eq i16 %307, 34
  br i1 %308, label %313, label %309

309:                                              ; preds = %304
  %310 = add nuw nsw i64 %305, 1
  %311 = trunc i64 %310 to i32
  %312 = icmp eq i32 %267, %311
  br i1 %312, label %482, label %304

313:                                              ; preds = %304, %291
  %314 = phi i64 [ %300, %291 ], [ %305, %304 ]
  %315 = trunc i64 %314 to i32
  %316 = icmp eq i32 %315, -1
  br i1 %316, label %482, label %317

317:                                              ; preds = %313
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #15
  %318 = add i32 %315, -1
  %319 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 1, i32 %318) #15
  store %"class.WTF::StringImpl"* %319, %"class.WTF::StringImpl"** %70, align 8
  %320 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %10) #15
  %321 = ptrtoint %"class.WTF::StringImpl"* %320 to i64
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %71, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %322, label %340, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %340

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i33
  %332 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %331, i33 1) #15
  %333 = extractvalue { i33, i1 } %332, 1
  %334 = extractvalue { i33, i1 } %332, 0
  %335 = icmp slt i33 %334, 0
  %336 = or i1 %333, %335
  br i1 %336, label %337, label %338, !prof !9

337:                                              ; preds = %328
  call void @llvm.trap() #15
  unreachable

338:                                              ; preds = %328
  %339 = trunc i33 %334 to i32
  store i32 %339, i32* %329, align 4
  br label %340

340:                                              ; preds = %338, %323, %317
  store i64 %321, i64* %73, align 8
  %341 = load i32, i32* %46, align 4
  %342 = load i32, i32* %45, align 8
  %343 = icmp eq i32 %341, %342
  br i1 %343, label %355, label %344, !prof !9

344:                                              ; preds = %340
  %345 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %44, align 8
  %346 = zext i32 %341 to i64
  %347 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %345, i64 %346
  %348 = load i64, i64* %74, align 8
  %349 = bitcast %"struct.std::__1::pair.270"* %347 to i64*
  store i64 %348, i64* %349, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %350 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %345, i64 %346, i32 1
  %351 = load i64, i64* %73, align 8
  %352 = bitcast %"class.WTF::String"* %350 to i64*
  store i64 %351, i64* %352, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %353 = load i32, i32* %46, align 4
  %354 = add i32 %353, 1
  store i32 %354, i32* %46, align 4
  br label %371

355:                                              ; preds = %340
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.267"* nonnull %24, %"struct.std::__1::pair.270"* nonnull dereferenceable(16) %9) #15
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %371, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  br i1 %362, label %365, label %367

365:                                              ; preds = %358
  %366 = add i32 %364, -1
  store i32 %366, i32* %363, align 4
  br label %367

367:                                              ; preds = %365, %358
  %368 = phi i32 [ %366, %365 ], [ %364, %358 ]
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #15
  br label %371

371:                                              ; preds = %370, %367, %355, %344
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %372, null
  br i1 %373, label %387, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  br i1 %378, label %381, label %383

381:                                              ; preds = %374
  %382 = add i32 %380, -1
  store i32 %382, i32* %379, align 4
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i32 [ %382, %381 ], [ %380, %374 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %372) #15
  br label %387

387:                                              ; preds = %386, %383, %371
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %387
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #15
  br label %403

403:                                              ; preds = %402, %399, %387
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #15
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %404, null
  br i1 %405, label %852, label %406

406:                                              ; preds = %403
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 1
  br i1 %410, label %429, label %412

412:                                              ; preds = %406
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = icmp ugt i32 %414, %240
  br i1 %415, label %416, label %447

416:                                              ; preds = %412
  %417 = bitcast %"class.WTF::StringImpl"* %411 to i8*
  %418 = zext i32 %240 to i64
  %419 = getelementptr inbounds i8, i8* %417, i64 %418
  %420 = sub i32 %414, %240
  %421 = zext i32 %420 to i64
  %422 = call i8* @memchr(i8* %419, i32 34, i64 %421) #17
  %423 = icmp eq i8* %422, null
  %424 = ptrtoint i8* %422 to i64
  %425 = ptrtoint %"class.WTF::StringImpl"* %411 to i64
  %426 = sub i64 %424, %425
  %427 = trunc i64 %426 to i32
  %428 = select i1 %423, i32 -1, i32 %427
  br label %447

429:                                              ; preds = %406
  %430 = bitcast %"class.WTF::StringImpl"* %411 to i16*
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 1
  %432 = load i32, i32* %431, align 4
  %433 = icmp ugt i32 %432, %240
  br i1 %433, label %434, label %447

434:                                              ; preds = %429
  %435 = zext i32 %240 to i64
  br label %436

436:                                              ; preds = %441, %434
  %437 = phi i64 [ %435, %434 ], [ %442, %441 ]
  %438 = getelementptr inbounds i16, i16* %430, i64 %437
  %439 = load i16, i16* %438, align 2
  %440 = icmp eq i16 %439, 34
  br i1 %440, label %445, label %441

441:                                              ; preds = %436
  %442 = add nuw nsw i64 %437, 1
  %443 = trunc i64 %442 to i32
  %444 = icmp eq i32 %432, %443
  br i1 %444, label %447, label %436

445:                                              ; preds = %436
  %446 = trunc i64 %437 to i32
  br label %447

447:                                              ; preds = %441, %445, %412, %416, %429
  %448 = phi i32 [ -1, %429 ], [ %428, %416 ], [ -1, %412 ], [ %446, %445 ], [ -1, %441 ]
  %449 = phi i32 [ %432, %429 ], [ %414, %416 ], [ %414, %412 ], [ %432, %445 ], [ %432, %441 ]
  %450 = add i32 %315, 1
  %451 = add i32 %450, %448
  %452 = load atomic i32, i32* %407 monotonic, align 4
  %453 = and i32 %452, 1
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %468, label %455

455:                                              ; preds = %447
  %456 = icmp ugt i32 %449, %451
  br i1 %456, label %457, label %852

457:                                              ; preds = %455
  %458 = bitcast %"class.WTF::StringImpl"* %411 to i8*
  %459 = zext i32 %451 to i64
  %460 = getelementptr inbounds i8, i8* %458, i64 %459
  %461 = sub i32 %449, %451
  %462 = zext i32 %461 to i64
  %463 = call i8* @memchr(i8* %460, i32 44, i64 %462) #17
  %464 = icmp eq i8* %463, null
  %465 = ptrtoint i8* %463 to i64
  %466 = ptrtoint %"class.WTF::StringImpl"* %411 to i64
  %467 = sub i64 %465, %466
  br i1 %464, label %852, label %591

468:                                              ; preds = %447
  %469 = bitcast %"class.WTF::StringImpl"* %411 to i16*
  %470 = icmp ugt i32 %449, %451
  br i1 %470, label %471, label %852

471:                                              ; preds = %468
  %472 = zext i32 %451 to i64
  br label %473

473:                                              ; preds = %478, %471
  %474 = phi i64 [ %472, %471 ], [ %479, %478 ]
  %475 = getelementptr inbounds i16, i16* %469, i64 %474
  %476 = load i16, i16* %475, align 2
  %477 = icmp eq i16 %476, 44
  br i1 %477, label %591, label %478

478:                                              ; preds = %473
  %479 = add nuw nsw i64 %474, 1
  %480 = trunc i64 %479 to i32
  %481 = icmp eq i32 %449, %480
  br i1 %481, label %852, label %473

482:                                              ; preds = %309, %313, %289, %291, %301
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #15
  %483 = add i32 %267, -1
  %484 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 1, i32 %483) #15
  store %"class.WTF::StringImpl"* %484, %"class.WTF::StringImpl"** %77, align 8
  %485 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %13) #15
  store %"class.WTF::StringImpl"* %485, %"class.WTF::StringImpl"** %78, align 8
  %486 = icmp eq %"class.WTF::StringImpl"* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %482
  %488 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %485, i1 (i16)* nonnull @_ZN5blinkL22IsCacheHeaderSeparatorEDs, i32 0) #15
  br label %489

489:                                              ; preds = %487, %482
  %490 = phi i32 [ %488, %487 ], [ -1, %482 ]
  %491 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %12, i32 0, i32 %490) #15
  %492 = ptrtoint %"class.WTF::StringImpl"* %491 to i64
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %79, align 8
  %493 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %493, label %511, label %494

494:                                              ; preds = %489
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = load atomic i32, i32* %495 monotonic, align 4
  %497 = and i32 %496, 2
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %511

499:                                              ; preds = %494
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %501 = load i32, i32* %500, align 4
  %502 = zext i32 %501 to i33
  %503 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %502, i33 1) #15
  %504 = extractvalue { i33, i1 } %503, 1
  %505 = extractvalue { i33, i1 } %503, 0
  %506 = icmp slt i33 %505, 0
  %507 = or i1 %504, %506
  br i1 %507, label %508, label %509, !prof !9

508:                                              ; preds = %499
  call void @llvm.trap() #15
  unreachable

509:                                              ; preds = %499
  %510 = trunc i33 %505 to i32
  store i32 %510, i32* %500, align 4
  br label %511

511:                                              ; preds = %509, %494, %489
  store i64 %492, i64* %81, align 8
  %512 = load i32, i32* %46, align 4
  %513 = load i32, i32* %45, align 8
  %514 = icmp eq i32 %512, %513
  br i1 %514, label %526, label %515, !prof !9

515:                                              ; preds = %511
  %516 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %44, align 8
  %517 = zext i32 %512 to i64
  %518 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %516, i64 %517
  %519 = load i64, i64* %82, align 8
  %520 = bitcast %"struct.std::__1::pair.270"* %518 to i64*
  store i64 %519, i64* %520, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %521 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %516, i64 %517, i32 1
  %522 = load i64, i64* %81, align 8
  %523 = bitcast %"class.WTF::String"* %521 to i64*
  store i64 %522, i64* %523, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %524 = load i32, i32* %46, align 4
  %525 = add i32 %524, 1
  store i32 %525, i32* %46, align 4
  br label %542

526:                                              ; preds = %511
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.267"* nonnull %24, %"struct.std::__1::pair.270"* nonnull dereferenceable(16) %11) #15
  %527 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %528 = icmp eq %"class.WTF::StringImpl"* %527, null
  br i1 %528, label %542, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load atomic i32, i32* %530 monotonic, align 4
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  br i1 %533, label %536, label %538

536:                                              ; preds = %529
  %537 = add i32 %535, -1
  store i32 %537, i32* %534, align 4
  br label %538

538:                                              ; preds = %536, %529
  %539 = phi i32 [ %537, %536 ], [ %535, %529 ]
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %527) #15
  br label %542

542:                                              ; preds = %541, %538, %526, %515
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %543, null
  br i1 %544, label %558, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 monotonic, align 4
  %548 = and i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 0
  %551 = load i32, i32* %550, align 4
  br i1 %549, label %552, label %554

552:                                              ; preds = %545
  %553 = add i32 %551, -1
  store i32 %553, i32* %550, align 4
  br label %554

554:                                              ; preds = %552, %545
  %555 = phi i32 [ %553, %552 ], [ %551, %545 ]
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %558

557:                                              ; preds = %554
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %543) #15
  br label %558

558:                                              ; preds = %557, %554, %542
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %560 = icmp eq %"class.WTF::StringImpl"* %559, null
  br i1 %560, label %574, label %561

561:                                              ; preds = %558
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = load atomic i32, i32* %562 monotonic, align 4
  %564 = and i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 0
  %567 = load i32, i32* %566, align 4
  br i1 %565, label %568, label %570

568:                                              ; preds = %561
  %569 = add i32 %567, -1
  store i32 %569, i32* %566, align 4
  br label %570

570:                                              ; preds = %568, %561
  %571 = phi i32 [ %569, %568 ], [ %567, %561 ]
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %574

573:                                              ; preds = %570
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %559) #15
  br label %574

574:                                              ; preds = %573, %570, %558
  %575 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %576 = icmp eq %"class.WTF::StringImpl"* %575, null
  br i1 %576, label %590, label %577

577:                                              ; preds = %574
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %575, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %579 = load atomic i32, i32* %578 monotonic, align 4
  %580 = and i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %575, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  br i1 %581, label %584, label %586

584:                                              ; preds = %577
  %585 = add i32 %583, -1
  store i32 %585, i32* %582, align 4
  br label %586

586:                                              ; preds = %584, %577
  %587 = phi i32 [ %585, %584 ], [ %583, %577 ]
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %590

589:                                              ; preds = %586
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %575) #15
  br label %590

590:                                              ; preds = %589, %586, %574
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #15
  br label %852

591:                                              ; preds = %473, %457
  %592 = phi i64 [ %467, %457 ], [ %474, %473 ]
  %593 = trunc i64 %592 to i32
  %594 = icmp eq i32 %593, -1
  br i1 %594, label %852, label %849

595:                                              ; preds = %282, %265
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %597 = load atomic i32, i32* %596 monotonic, align 4
  %598 = and i32 %597, 1
  %599 = icmp eq i32 %598, 0
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 1
  br i1 %599, label %610, label %601

601:                                              ; preds = %595
  br i1 %268, label %777, label %602

602:                                              ; preds = %601
  %603 = bitcast %"class.WTF::StringImpl"* %600 to i8*
  %604 = zext i32 %267 to i64
  %605 = call i8* @memchr(i8* %603, i32 44, i64 %604) #17
  %606 = icmp eq i8* %605, null
  %607 = ptrtoint i8* %605 to i64
  %608 = ptrtoint %"class.WTF::StringImpl"* %600 to i64
  %609 = sub i64 %607, %608
  br i1 %606, label %777, label %622

610:                                              ; preds = %595
  %611 = bitcast %"class.WTF::StringImpl"* %600 to i16*
  br i1 %268, label %777, label %612

612:                                              ; preds = %610
  %613 = zext i32 %267 to i64
  br label %614

614:                                              ; preds = %619, %612
  %615 = phi i64 [ %620, %619 ], [ 0, %612 ]
  %616 = getelementptr inbounds i16, i16* %611, i64 %615
  %617 = load i16, i16* %616, align 2
  %618 = icmp eq i16 %617, 44
  br i1 %618, label %622, label %619

619:                                              ; preds = %614
  %620 = add nuw nsw i64 %615, 1
  %621 = icmp eq i64 %620, %613
  br i1 %621, label %777, label %614

622:                                              ; preds = %614, %602
  %623 = phi i64 [ %609, %602 ], [ %615, %614 ]
  %624 = trunc i64 %623 to i32
  %625 = icmp eq i32 %624, -1
  br i1 %625, label %777, label %626

626:                                              ; preds = %622
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #15
  %627 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 0, i32 %624) #15
  store %"class.WTF::StringImpl"* %627, %"class.WTF::StringImpl"** %88, align 8
  %628 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %16) #15
  store %"class.WTF::StringImpl"* %628, %"class.WTF::StringImpl"** %89, align 8
  %629 = icmp eq %"class.WTF::StringImpl"* %628, null
  br i1 %629, label %632, label %630

630:                                              ; preds = %626
  %631 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %628, i1 (i16)* nonnull @_ZN5blinkL22IsCacheHeaderSeparatorEDs, i32 0) #15
  br label %632

632:                                              ; preds = %630, %626
  %633 = phi i32 [ %631, %630 ], [ -1, %626 ]
  %634 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %15, i32 0, i32 %633) #15
  %635 = ptrtoint %"class.WTF::StringImpl"* %634 to i64
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %90, align 8
  %636 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %636, label %654, label %637

637:                                              ; preds = %632
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %639 = load atomic i32, i32* %638 monotonic, align 4
  %640 = and i32 %639, 2
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %654

642:                                              ; preds = %637
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %644 = load i32, i32* %643, align 4
  %645 = zext i32 %644 to i33
  %646 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %645, i33 1) #15
  %647 = extractvalue { i33, i1 } %646, 1
  %648 = extractvalue { i33, i1 } %646, 0
  %649 = icmp slt i33 %648, 0
  %650 = or i1 %647, %649
  br i1 %650, label %651, label %652, !prof !9

651:                                              ; preds = %642
  call void @llvm.trap() #15
  unreachable

652:                                              ; preds = %642
  %653 = trunc i33 %648 to i32
  store i32 %653, i32* %643, align 4
  br label %654

654:                                              ; preds = %652, %637, %632
  store i64 %635, i64* %92, align 8
  %655 = load i32, i32* %46, align 4
  %656 = load i32, i32* %45, align 8
  %657 = icmp eq i32 %655, %656
  br i1 %657, label %669, label %658, !prof !9

658:                                              ; preds = %654
  %659 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %44, align 8
  %660 = zext i32 %655 to i64
  %661 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %659, i64 %660
  %662 = load i64, i64* %93, align 8
  %663 = bitcast %"struct.std::__1::pair.270"* %661 to i64*
  store i64 %662, i64* %663, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8
  %664 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %659, i64 %660, i32 1
  %665 = load i64, i64* %92, align 8
  %666 = bitcast %"class.WTF::String"* %664 to i64*
  store i64 %665, i64* %666, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %94, align 8
  %667 = load i32, i32* %46, align 4
  %668 = add i32 %667, 1
  store i32 %668, i32* %46, align 4
  br label %685

669:                                              ; preds = %654
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.267"* nonnull %24, %"struct.std::__1::pair.270"* nonnull dereferenceable(16) %14) #15
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %671 = icmp eq %"class.WTF::StringImpl"* %670, null
  br i1 %671, label %685, label %672

672:                                              ; preds = %669
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %670, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %674 = load atomic i32, i32* %673 monotonic, align 4
  %675 = and i32 %674, 2
  %676 = icmp eq i32 %675, 0
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %670, i64 0, i32 0
  %678 = load i32, i32* %677, align 4
  br i1 %676, label %679, label %681

679:                                              ; preds = %672
  %680 = add i32 %678, -1
  store i32 %680, i32* %677, align 4
  br label %681

681:                                              ; preds = %679, %672
  %682 = phi i32 [ %680, %679 ], [ %678, %672 ]
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %684, label %685

684:                                              ; preds = %681
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %670) #15
  br label %685

685:                                              ; preds = %684, %681, %669, %658
  %686 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %687 = icmp eq %"class.WTF::StringImpl"* %686, null
  br i1 %687, label %701, label %688

688:                                              ; preds = %685
  %689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = load atomic i32, i32* %689 monotonic, align 4
  %691 = and i32 %690, 2
  %692 = icmp eq i32 %691, 0
  %693 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 0
  %694 = load i32, i32* %693, align 4
  br i1 %692, label %695, label %697

695:                                              ; preds = %688
  %696 = add i32 %694, -1
  store i32 %696, i32* %693, align 4
  br label %697

697:                                              ; preds = %695, %688
  %698 = phi i32 [ %696, %695 ], [ %694, %688 ]
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %701

700:                                              ; preds = %697
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %686) #15
  br label %701

701:                                              ; preds = %700, %697, %685
  %702 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %703 = icmp eq %"class.WTF::StringImpl"* %702, null
  br i1 %703, label %717, label %704

704:                                              ; preds = %701
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %706 = load atomic i32, i32* %705 monotonic, align 4
  %707 = and i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 0
  %710 = load i32, i32* %709, align 4
  br i1 %708, label %711, label %713

711:                                              ; preds = %704
  %712 = add i32 %710, -1
  store i32 %712, i32* %709, align 4
  br label %713

713:                                              ; preds = %711, %704
  %714 = phi i32 [ %712, %711 ], [ %710, %704 ]
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %716, label %717

716:                                              ; preds = %713
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %702) #15
  br label %717

717:                                              ; preds = %716, %713, %701
  %718 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %719 = icmp eq %"class.WTF::StringImpl"* %718, null
  br i1 %719, label %733, label %720

720:                                              ; preds = %717
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %722 = load atomic i32, i32* %721 monotonic, align 4
  %723 = and i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 0
  %726 = load i32, i32* %725, align 4
  br i1 %724, label %727, label %729

727:                                              ; preds = %720
  %728 = add i32 %726, -1
  store i32 %728, i32* %725, align 4
  br label %729

729:                                              ; preds = %727, %720
  %730 = phi i32 [ %728, %727 ], [ %726, %720 ]
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %732, label %733

732:                                              ; preds = %729
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %718) #15
  br label %733

733:                                              ; preds = %732, %729, %717
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  %734 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %735 = icmp eq %"class.WTF::StringImpl"* %734, null
  br i1 %735, label %849, label %736

736:                                              ; preds = %733
  %737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = load atomic i32, i32* %737 monotonic, align 4
  %739 = and i32 %738, 1
  %740 = icmp eq i32 %739, 0
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 1
  br i1 %740, label %759, label %742

742:                                              ; preds = %736
  %743 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 0, i32 1
  %744 = load i32, i32* %743, align 4
  %745 = icmp ugt i32 %744, %240
  br i1 %745, label %746, label %849

746:                                              ; preds = %742
  %747 = bitcast %"class.WTF::StringImpl"* %741 to i8*
  %748 = zext i32 %240 to i64
  %749 = getelementptr inbounds i8, i8* %747, i64 %748
  %750 = sub i32 %744, %240
  %751 = zext i32 %750 to i64
  %752 = call i8* @memchr(i8* %749, i32 44, i64 %751) #17
  %753 = icmp eq i8* %752, null
  %754 = ptrtoint i8* %752 to i64
  %755 = ptrtoint %"class.WTF::StringImpl"* %741 to i64
  %756 = sub i64 %754, %755
  %757 = trunc i64 %756 to i32
  %758 = select i1 %753, i32 -1, i32 %757
  br label %849

759:                                              ; preds = %736
  %760 = bitcast %"class.WTF::StringImpl"* %741 to i16*
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 0, i32 1
  %762 = load i32, i32* %761, align 4
  %763 = icmp ugt i32 %762, %240
  br i1 %763, label %764, label %849

764:                                              ; preds = %759
  %765 = zext i32 %240 to i64
  br label %766

766:                                              ; preds = %771, %764
  %767 = phi i64 [ %765, %764 ], [ %772, %771 ]
  %768 = getelementptr inbounds i16, i16* %760, i64 %767
  %769 = load i16, i16* %768, align 2
  %770 = icmp eq i16 %769, 44
  br i1 %770, label %775, label %771

771:                                              ; preds = %766
  %772 = add nuw nsw i64 %767, 1
  %773 = trunc i64 %772 to i32
  %774 = icmp eq i32 %762, %773
  br i1 %774, label %849, label %766

775:                                              ; preds = %766
  %776 = trunc i64 %767 to i32
  br label %849

777:                                              ; preds = %619, %622, %601, %602, %610
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #15
  %778 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %262, i1 (i16)* nonnull @_ZN5blinkL22IsCacheHeaderSeparatorEDs, i32 0) #15
  br label %779

779:                                              ; preds = %777, %264
  %780 = phi i32 [ %778, %777 ], [ -1, %264 ]
  %781 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 0, i32 %780) #15
  %782 = ptrtoint %"class.WTF::StringImpl"* %781 to i64
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %97, align 8
  %783 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %783, label %801, label %784

784:                                              ; preds = %779
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %786 = load atomic i32, i32* %785 monotonic, align 4
  %787 = and i32 %786, 2
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %801

789:                                              ; preds = %784
  %790 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %791 = load i32, i32* %790, align 4
  %792 = zext i32 %791 to i33
  %793 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %792, i33 1) #15
  %794 = extractvalue { i33, i1 } %793, 1
  %795 = extractvalue { i33, i1 } %793, 0
  %796 = icmp slt i33 %795, 0
  %797 = or i1 %794, %796
  br i1 %797, label %798, label %799, !prof !9

798:                                              ; preds = %789
  call void @llvm.trap() #15
  unreachable

799:                                              ; preds = %789
  %800 = trunc i33 %795 to i32
  store i32 %800, i32* %790, align 4
  br label %801

801:                                              ; preds = %799, %784, %779
  store i64 %782, i64* %99, align 8
  %802 = load i32, i32* %46, align 4
  %803 = load i32, i32* %45, align 8
  %804 = icmp eq i32 %802, %803
  br i1 %804, label %816, label %805, !prof !9

805:                                              ; preds = %801
  %806 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %44, align 8
  %807 = zext i32 %802 to i64
  %808 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %806, i64 %807
  %809 = load i64, i64* %100, align 8
  %810 = bitcast %"struct.std::__1::pair.270"* %808 to i64*
  store i64 %809, i64* %810, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8
  %811 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %806, i64 %807, i32 1
  %812 = load i64, i64* %99, align 8
  %813 = bitcast %"class.WTF::String"* %811 to i64*
  store i64 %812, i64* %813, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %814 = load i32, i32* %46, align 4
  %815 = add i32 %814, 1
  store i32 %815, i32* %46, align 4
  br label %832

816:                                              ; preds = %801
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.267"* nonnull %24, %"struct.std::__1::pair.270"* nonnull dereferenceable(16) %17) #15
  %817 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %818 = icmp eq %"class.WTF::StringImpl"* %817, null
  br i1 %818, label %832, label %819

819:                                              ; preds = %816
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %821 = load atomic i32, i32* %820 monotonic, align 4
  %822 = and i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  br i1 %823, label %826, label %828

826:                                              ; preds = %819
  %827 = add i32 %825, -1
  store i32 %827, i32* %824, align 4
  br label %828

828:                                              ; preds = %826, %819
  %829 = phi i32 [ %827, %826 ], [ %825, %819 ]
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %831, label %832

831:                                              ; preds = %828
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %817) #15
  br label %832

832:                                              ; preds = %831, %828, %816, %805
  %833 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %834 = icmp eq %"class.WTF::StringImpl"* %833, null
  br i1 %834, label %848, label %835

835:                                              ; preds = %832
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %833, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %837 = load atomic i32, i32* %836 monotonic, align 4
  %838 = and i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %833, i64 0, i32 0
  %841 = load i32, i32* %840, align 4
  br i1 %839, label %842, label %844

842:                                              ; preds = %835
  %843 = add i32 %841, -1
  store i32 %843, i32* %840, align 4
  br label %844

844:                                              ; preds = %842, %835
  %845 = phi i32 [ %843, %842 ], [ %841, %835 ]
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %847, label %848

847:                                              ; preds = %844
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %833) #15
  br label %848

848:                                              ; preds = %847, %844, %832
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #15
  br label %852

849:                                              ; preds = %771, %733, %742, %746, %759, %775, %591
  %850 = phi i32 [ %593, %591 ], [ -1, %733 ], [ -1, %742 ], [ %758, %746 ], [ -1, %759 ], [ %776, %775 ], [ -1, %771 ]
  %851 = add i32 %850, 1
  br label %852

852:                                              ; preds = %478, %849, %848, %591, %590, %468, %457, %455, %403
  %853 = phi i32 [ %851, %849 ], [ %451, %591 ], [ %240, %848 ], [ %240, %590 ], [ %451, %468 ], [ %451, %455 ], [ %315, %403 ], [ %451, %457 ], [ %451, %478 ]
  %854 = phi i32 [ 0, %849 ], [ 1, %591 ], [ 1, %848 ], [ 1, %590 ], [ 1, %468 ], [ 1, %455 ], [ 1, %403 ], [ 1, %457 ], [ 1, %478 ]
  %855 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %856 = icmp eq %"class.WTF::StringImpl"* %855, null
  br i1 %856, label %870, label %857

857:                                              ; preds = %852
  %858 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %859 = load atomic i32, i32* %858 monotonic, align 4
  %860 = and i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 0
  %863 = load i32, i32* %862, align 4
  br i1 %861, label %864, label %866

864:                                              ; preds = %857
  %865 = add i32 %863, -1
  store i32 %865, i32* %862, align 4
  br label %866

866:                                              ; preds = %864, %857
  %867 = phi i32 [ %865, %864 ], [ %863, %857 ]
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %870

869:                                              ; preds = %866
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %855) #15
  br label %870

870:                                              ; preds = %869, %866, %852
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #15
  %871 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %871, label %885, label %872

872:                                              ; preds = %870
  %873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %874 = load atomic i32, i32* %873 monotonic, align 4
  %875 = and i32 %874, 2
  %876 = icmp eq i32 %875, 0
  %877 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %878 = load i32, i32* %877, align 4
  br i1 %876, label %879, label %881

879:                                              ; preds = %872
  %880 = add i32 %878, -1
  store i32 %880, i32* %877, align 4
  br label %881

881:                                              ; preds = %879, %872
  %882 = phi i32 [ %880, %879 ], [ %878, %872 ]
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %884, label %885

884:                                              ; preds = %881
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #15
  br label %885

885:                                              ; preds = %884, %881, %870
  %886 = icmp eq i32 %854, 0
  br i1 %886, label %1085, label %1091

887:                                              ; preds = %186, %190, %176, %165, %163
  %888 = icmp eq i32 %159, -1
  br i1 %888, label %982, label %891

889:                                              ; preds = %194
  %890 = icmp ult i32 %159, %192
  br i1 %890, label %891, label %982

891:                                              ; preds = %889, %887
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #15
  %892 = sub i32 %159, %115
  %893 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 %115, i32 %892) #15
  store %"class.WTF::StringImpl"* %893, %"class.WTF::StringImpl"** %106, align 8
  %894 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %20) #15
  store %"class.WTF::StringImpl"* %894, %"class.WTF::StringImpl"** %107, align 8
  %895 = icmp eq %"class.WTF::StringImpl"* %894, null
  br i1 %895, label %898, label %896

896:                                              ; preds = %891
  %897 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %894, i1 (i16)* nonnull @_ZN5blinkL22IsCacheHeaderSeparatorEDs, i32 0) #15
  br label %898

898:                                              ; preds = %896, %891
  %899 = phi i32 [ %897, %896 ], [ -1, %891 ]
  %900 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %19, i32 0, i32 %899) #15
  %901 = ptrtoint %"class.WTF::StringImpl"* %900 to i64
  store i64 %901, i64* %108, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %109, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #15
  %902 = load i32, i32* %46, align 4
  %903 = load i32, i32* %45, align 8
  %904 = icmp eq i32 %902, %903
  br i1 %904, label %916, label %905, !prof !9

905:                                              ; preds = %898
  %906 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %44, align 8
  %907 = zext i32 %902 to i64
  %908 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %906, i64 %907
  %909 = load i64, i64* %108, align 8
  %910 = bitcast %"struct.std::__1::pair.270"* %908 to i64*
  store i64 %909, i64* %910, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %110, align 8
  %911 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %906, i64 %907, i32 1
  %912 = load i64, i64* %112, align 8
  %913 = bitcast %"class.WTF::String"* %911 to i64*
  store i64 %912, i64* %913, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %914 = load i32, i32* %46, align 4
  %915 = add i32 %914, 1
  store i32 %915, i32* %46, align 4
  br label %932

916:                                              ; preds = %898
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.267"* nonnull %24, %"struct.std::__1::pair.270"* nonnull dereferenceable(16) %18) #15
  %917 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %918 = icmp eq %"class.WTF::StringImpl"* %917, null
  br i1 %918, label %932, label %919

919:                                              ; preds = %916
  %920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %921 = load atomic i32, i32* %920 monotonic, align 4
  %922 = and i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 0
  %925 = load i32, i32* %924, align 4
  br i1 %923, label %926, label %928

926:                                              ; preds = %919
  %927 = add i32 %925, -1
  store i32 %927, i32* %924, align 4
  br label %928

928:                                              ; preds = %926, %919
  %929 = phi i32 [ %927, %926 ], [ %925, %919 ]
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %932

931:                                              ; preds = %928
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %917) #15
  br label %932

932:                                              ; preds = %931, %928, %916, %905
  %933 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %934 = icmp eq %"class.WTF::StringImpl"* %933, null
  br i1 %934, label %948, label %935

935:                                              ; preds = %932
  %936 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %937 = load atomic i32, i32* %936 monotonic, align 4
  %938 = and i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 0
  %941 = load i32, i32* %940, align 4
  br i1 %939, label %942, label %944

942:                                              ; preds = %935
  %943 = add i32 %941, -1
  store i32 %943, i32* %940, align 4
  br label %944

944:                                              ; preds = %942, %935
  %945 = phi i32 [ %943, %942 ], [ %941, %935 ]
  %946 = icmp eq i32 %945, 0
  br i1 %946, label %947, label %948

947:                                              ; preds = %944
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %933) #15
  br label %948

948:                                              ; preds = %947, %944, %932
  %949 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %950 = icmp eq %"class.WTF::StringImpl"* %949, null
  br i1 %950, label %964, label %951

951:                                              ; preds = %948
  %952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %953 = load atomic i32, i32* %952 monotonic, align 4
  %954 = and i32 %953, 2
  %955 = icmp eq i32 %954, 0
  %956 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 0, i32 0
  %957 = load i32, i32* %956, align 4
  br i1 %955, label %958, label %960

958:                                              ; preds = %951
  %959 = add i32 %957, -1
  store i32 %959, i32* %956, align 4
  br label %960

960:                                              ; preds = %958, %951
  %961 = phi i32 [ %959, %958 ], [ %957, %951 ]
  %962 = icmp eq i32 %961, 0
  br i1 %962, label %963, label %964

963:                                              ; preds = %960
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %949) #15
  br label %964

964:                                              ; preds = %963, %960, %948
  %965 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %966 = icmp eq %"class.WTF::StringImpl"* %965, null
  br i1 %966, label %980, label %967

967:                                              ; preds = %964
  %968 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %969 = load atomic i32, i32* %968 monotonic, align 4
  %970 = and i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 0
  %973 = load i32, i32* %972, align 4
  br i1 %971, label %974, label %976

974:                                              ; preds = %967
  %975 = add i32 %973, -1
  store i32 %975, i32* %972, align 4
  br label %976

976:                                              ; preds = %974, %967
  %977 = phi i32 [ %975, %974 ], [ %973, %967 ]
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %979, label %980

979:                                              ; preds = %976
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %965) #15
  br label %980

980:                                              ; preds = %979, %976, %964
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #15
  %981 = add nuw i32 %159, 1
  br label %1085

982:                                              ; preds = %1088, %887, %889
  %983 = phi i32 [ %1086, %1088 ], [ %115, %887 ], [ %115, %889 ]
  %984 = bitcast %"struct.std::__1::pair.270"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %984) #15
  %985 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %985) #15
  %986 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %986) #15
  %987 = sub i32 %54, %983
  %988 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 %983, i32 %987) #15
  %989 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %988, %"class.WTF::StringImpl"** %989, align 8
  %990 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %23) #15
  %991 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %990, %"class.WTF::StringImpl"** %991, align 8
  %992 = icmp eq %"class.WTF::StringImpl"* %990, null
  br i1 %992, label %995, label %993

993:                                              ; preds = %982
  %994 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %990, i1 (i16)* nonnull @_ZN5blinkL22IsCacheHeaderSeparatorEDs, i32 0) #15
  br label %995

995:                                              ; preds = %993, %982
  %996 = phi i32 [ %994, %993 ], [ -1, %982 ]
  %997 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %22, i32 0, i32 %996) #15
  %998 = ptrtoint %"class.WTF::StringImpl"* %997 to i64
  %999 = bitcast %"struct.std::__1::pair.270"* %21 to i64*
  store i64 %998, i64* %999, align 8
  %1000 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %21, i64 0, i32 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %1000, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #15
  %1001 = load i32, i32* %46, align 4
  %1002 = load i32, i32* %45, align 8
  %1003 = icmp eq i32 %1001, %1002
  br i1 %1003, label %1018, label %1004, !prof !9

1004:                                             ; preds = %995
  %1005 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %44, align 8
  %1006 = zext i32 %1001 to i64
  %1007 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1005, i64 %1006
  %1008 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %21, i64 0, i32 0, i32 0, i32 0
  %1009 = load i64, i64* %999, align 8
  %1010 = bitcast %"struct.std::__1::pair.270"* %1007 to i64*
  store i64 %1009, i64* %1010, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1008, align 8
  %1011 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1005, i64 %1006, i32 1
  %1012 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1000, i64 0, i32 0, i32 0
  %1013 = bitcast %"class.WTF::String"* %1000 to i64*
  %1014 = load i64, i64* %1013, align 8
  %1015 = bitcast %"class.WTF::String"* %1011 to i64*
  store i64 %1014, i64* %1015, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1012, align 8
  %1016 = load i32, i32* %46, align 4
  %1017 = add i32 %1016, 1
  store i32 %1017, i32* %46, align 4
  br label %1035

1018:                                             ; preds = %995
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.267"* nonnull %24, %"struct.std::__1::pair.270"* nonnull dereferenceable(16) %21) #15
  %1019 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %21, i64 0, i32 1, i32 0, i32 0
  %1020 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1019, align 8
  %1021 = icmp eq %"class.WTF::StringImpl"* %1020, null
  br i1 %1021, label %1035, label %1022

1022:                                             ; preds = %1018
  %1023 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1020, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1024 = load atomic i32, i32* %1023 monotonic, align 4
  %1025 = and i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1020, i64 0, i32 0
  %1028 = load i32, i32* %1027, align 4
  br i1 %1026, label %1029, label %1031

1029:                                             ; preds = %1022
  %1030 = add i32 %1028, -1
  store i32 %1030, i32* %1027, align 4
  br label %1031

1031:                                             ; preds = %1029, %1022
  %1032 = phi i32 [ %1030, %1029 ], [ %1028, %1022 ]
  %1033 = icmp eq i32 %1032, 0
  br i1 %1033, label %1034, label %1035

1034:                                             ; preds = %1031
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1020) #15
  br label %1035

1035:                                             ; preds = %1034, %1031, %1018, %1004
  %1036 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %21, i64 0, i32 0, i32 0, i32 0
  %1037 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1036, align 8
  %1038 = icmp eq %"class.WTF::StringImpl"* %1037, null
  br i1 %1038, label %1052, label %1039

1039:                                             ; preds = %1035
  %1040 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1037, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1041 = load atomic i32, i32* %1040 monotonic, align 4
  %1042 = and i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  %1044 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1037, i64 0, i32 0
  %1045 = load i32, i32* %1044, align 4
  br i1 %1043, label %1046, label %1048

1046:                                             ; preds = %1039
  %1047 = add i32 %1045, -1
  store i32 %1047, i32* %1044, align 4
  br label %1048

1048:                                             ; preds = %1046, %1039
  %1049 = phi i32 [ %1047, %1046 ], [ %1045, %1039 ]
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1051, label %1052

1051:                                             ; preds = %1048
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1037) #15
  br label %1052

1052:                                             ; preds = %1051, %1048, %1035
  %1053 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %991, align 8
  %1054 = icmp eq %"class.WTF::StringImpl"* %1053, null
  br i1 %1054, label %1068, label %1055

1055:                                             ; preds = %1052
  %1056 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1053, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1057 = load atomic i32, i32* %1056 monotonic, align 4
  %1058 = and i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1053, i64 0, i32 0
  %1061 = load i32, i32* %1060, align 4
  br i1 %1059, label %1062, label %1064

1062:                                             ; preds = %1055
  %1063 = add i32 %1061, -1
  store i32 %1063, i32* %1060, align 4
  br label %1064

1064:                                             ; preds = %1062, %1055
  %1065 = phi i32 [ %1063, %1062 ], [ %1061, %1055 ]
  %1066 = icmp eq i32 %1065, 0
  br i1 %1066, label %1067, label %1068

1067:                                             ; preds = %1064
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1053) #15
  br label %1068

1068:                                             ; preds = %1067, %1064, %1052
  %1069 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %989, align 8
  %1070 = icmp eq %"class.WTF::StringImpl"* %1069, null
  br i1 %1070, label %1084, label %1071

1071:                                             ; preds = %1068
  %1072 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1069, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1073 = load atomic i32, i32* %1072 monotonic, align 4
  %1074 = and i32 %1073, 2
  %1075 = icmp eq i32 %1074, 0
  %1076 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1069, i64 0, i32 0
  %1077 = load i32, i32* %1076, align 4
  br i1 %1075, label %1078, label %1080

1078:                                             ; preds = %1071
  %1079 = add i32 %1077, -1
  store i32 %1079, i32* %1076, align 4
  br label %1080

1080:                                             ; preds = %1078, %1071
  %1081 = phi i32 [ %1079, %1078 ], [ %1077, %1071 ]
  %1082 = icmp eq i32 %1081, 0
  br i1 %1082, label %1083, label %1084

1083:                                             ; preds = %1080
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1069) #15
  br label %1084

1084:                                             ; preds = %1083, %1080, %1068
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %986) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %985) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %984) #15
  br label %1091

1085:                                             ; preds = %980, %885
  %1086 = phi i32 [ %853, %885 ], [ %981, %980 ]
  %1087 = icmp ugt i32 %54, %1086
  br i1 %1087, label %1088, label %1091

1088:                                             ; preds = %1085
  %1089 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %1090 = icmp eq %"class.WTF::StringImpl"* %1089, null
  br i1 %1090, label %982, label %114

1091:                                             ; preds = %1085, %885, %1084, %52
  %1092 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %1093 = icmp eq %"class.WTF::StringImpl"* %1092, null
  br i1 %1093, label %1107, label %1094

1094:                                             ; preds = %1091
  %1095 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1092, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1096 = load atomic i32, i32* %1095 monotonic, align 4
  %1097 = and i32 %1096, 2
  %1098 = icmp eq i32 %1097, 0
  %1099 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1092, i64 0, i32 0
  %1100 = load i32, i32* %1099, align 4
  br i1 %1098, label %1101, label %1103

1101:                                             ; preds = %1094
  %1102 = add i32 %1100, -1
  store i32 %1102, i32* %1099, align 4
  br label %1103

1103:                                             ; preds = %1101, %1094
  %1104 = phi i32 [ %1102, %1101 ], [ %1100, %1094 ]
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1106, label %1107

1106:                                             ; preds = %1103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1092) #15
  br label %1107

1107:                                             ; preds = %42, %1091, %1103, %1106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  %1108 = load i32, i32* %46, align 4
  %1109 = icmp eq i32 %1108, 0
  br i1 %1109, label %1137, label %1110

1110:                                             ; preds = %1107
  %1111 = bitcast %"class.WTF::StringView"* %25 to i8*
  %1112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 0
  %1113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  %1114 = bitcast i8** %1113 to %"class.WTF::StringImpl"**
  %1115 = bitcast %"class.WTF::StringView"* %25 to i64*
  %1116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  %1117 = bitcast %"class.WTF::StringView"* %26 to i8*
  %1118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 0
  %1119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  %1120 = bitcast i8** %1119 to %"class.WTF::StringImpl"**
  %1121 = bitcast %"class.WTF::StringView"* %26 to i64*
  %1122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  %1123 = bitcast %"class.WTF::StringView"* %27 to i8*
  %1124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 0
  %1125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  %1126 = bitcast i8** %1125 to %"class.WTF::StringImpl"**
  %1127 = bitcast %"class.WTF::StringView"* %27 to i64*
  %1128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  %1129 = bitcast %"class.WTF::StringView"* %28 to i8*
  %1130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 0
  %1131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  %1132 = bitcast i8** %1131 to %"class.WTF::StringImpl"**
  %1133 = bitcast %"class.WTF::StringView"* %28 to i64*
  %1134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  %1135 = getelementptr inbounds %"struct.blink::CacheControlHeader", %"struct.blink::CacheControlHeader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1136 = getelementptr inbounds %"struct.blink::CacheControlHeader", %"struct.blink::CacheControlHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %1191

1137:                                             ; preds = %1390, %1107
  %1138 = phi i8 [ -95, %1107 ], [ %1391, %1390 ]
  %1139 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %44, align 8
  %1140 = icmp eq %"struct.std::__1::pair.270"* %1139, null
  br i1 %1140, label %1396, label %1141, !prof !13

1141:                                             ; preds = %1137
  %1142 = bitcast %"struct.std::__1::pair.270"* %1139 to i8*
  %1143 = load i32, i32* %46, align 4
  %1144 = icmp eq i32 %1143, 0
  br i1 %1144, label %1189, label %1145, !prof !9

1145:                                             ; preds = %1141
  %1146 = zext i32 %1143 to i64
  %1147 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1139, i64 %1146
  br label %1148

1148:                                             ; preds = %1145, %1183
  %1149 = phi %"struct.std::__1::pair.270"* [ %1184, %1183 ], [ %1139, %1145 ]
  %1150 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1149, i64 0, i32 1, i32 0, i32 0
  %1151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1150, align 8
  %1152 = icmp eq %"class.WTF::StringImpl"* %1151, null
  br i1 %1152, label %1166, label %1153

1153:                                             ; preds = %1148
  %1154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1155 = load atomic i32, i32* %1154 monotonic, align 4
  %1156 = and i32 %1155, 2
  %1157 = icmp eq i32 %1156, 0
  %1158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1151, i64 0, i32 0
  %1159 = load i32, i32* %1158, align 4
  br i1 %1157, label %1160, label %1162

1160:                                             ; preds = %1153
  %1161 = add i32 %1159, -1
  store i32 %1161, i32* %1158, align 4
  br label %1162

1162:                                             ; preds = %1160, %1153
  %1163 = phi i32 [ %1161, %1160 ], [ %1159, %1153 ]
  %1164 = icmp eq i32 %1163, 0
  br i1 %1164, label %1165, label %1166

1165:                                             ; preds = %1162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1151) #15
  br label %1166

1166:                                             ; preds = %1165, %1162, %1148
  %1167 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1149, i64 0, i32 0, i32 0, i32 0
  %1168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1167, align 8
  %1169 = icmp eq %"class.WTF::StringImpl"* %1168, null
  br i1 %1169, label %1183, label %1170

1170:                                             ; preds = %1166
  %1171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1172 = load atomic i32, i32* %1171 monotonic, align 4
  %1173 = and i32 %1172, 2
  %1174 = icmp eq i32 %1173, 0
  %1175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1168, i64 0, i32 0
  %1176 = load i32, i32* %1175, align 4
  br i1 %1174, label %1177, label %1179

1177:                                             ; preds = %1170
  %1178 = add i32 %1176, -1
  store i32 %1178, i32* %1175, align 4
  br label %1179

1179:                                             ; preds = %1177, %1170
  %1180 = phi i32 [ %1178, %1177 ], [ %1176, %1170 ]
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1182, label %1183

1182:                                             ; preds = %1179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1168) #15
  br label %1183

1183:                                             ; preds = %1182, %1179, %1166
  %1184 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1149, i64 1
  %1185 = icmp eq %"struct.std::__1::pair.270"* %1184, %1147
  br i1 %1185, label %1186, label %1148

1186:                                             ; preds = %1183
  store i32 0, i32* %46, align 4
  %1187 = bitcast %"class.WTF::Vector.267"* %24 to i8**
  %1188 = load i8*, i8** %1187, align 8
  br label %1189

1189:                                             ; preds = %1186, %1141
  %1190 = phi i8* [ %1188, %1186 ], [ %1142, %1141 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1190) #15
  store %"struct.std::__1::pair.270"* null, %"struct.std::__1::pair.270"** %44, align 8
  br label %1396

1191:                                             ; preds = %1390, %1110
  %1192 = phi i8 [ -95, %1110 ], [ %1391, %1390 ]
  %1193 = phi i8 [ 0, %1110 ], [ %1392, %1390 ]
  %1194 = phi i8 [ 0, %1110 ], [ %1393, %1390 ]
  %1195 = phi i32 [ 0, %1110 ], [ %1394, %1390 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1111) #15
  %1196 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1197 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1196, i64 0, i32 0, i32 0, i32 0
  %1198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1197, align 8
  %1199 = icmp eq %"class.WTF::StringImpl"* %1198, null
  br i1 %1199, label %1200, label %1202

1200:                                             ; preds = %1191
  store i8* null, i8** %1113, align 8
  %1201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1201, i64* %1115, align 8
  br label %1206

1202:                                             ; preds = %1191
  store %"class.WTF::StringImpl"* %1198, %"class.WTF::StringImpl"** %1112, align 8
  %1203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1198, i64 0, i32 1
  %1204 = load i32, i32* %1203, align 4
  %1205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1198, i64 1
  store %"class.WTF::StringImpl"* %1205, %"class.WTF::StringImpl"** %1114, align 8
  br label %1206

1206:                                             ; preds = %1200, %1202
  %1207 = phi i32 [ %1204, %1202 ], [ 0, %1200 ]
  store i32 %1207, i32* %1116, align 8
  %1208 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %25, [9 x i8]* nonnull dereferenceable(9) @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E17kNoCacheDirective)
  br i1 %1208, label %1209, label %1221

1209:                                             ; preds = %1206
  %1210 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1211 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1210, i64 0, i32 1, i32 0, i32 0
  %1212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1211, align 8
  %1213 = icmp eq %"class.WTF::StringImpl"* %1212, null
  br i1 %1213, label %1214, label %1215

1214:                                             ; preds = %1209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1111) #15
  br label %1219

1215:                                             ; preds = %1209
  %1216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1212, i64 0, i32 1
  %1217 = load i32, i32* %1216, align 4
  %1218 = icmp eq i32 %1217, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1111) #15
  br i1 %1218, label %1219, label %1222

1219:                                             ; preds = %1214, %1215
  %1220 = or i8 %1192, 2
  store i8 %1220, i8* %32, align 8
  br label %1390

1221:                                             ; preds = %1206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1111) #15
  br label %1222

1222:                                             ; preds = %1221, %1215
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1117) #15
  %1223 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1224 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1223, i64 0, i32 0, i32 0, i32 0
  %1225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1224, align 8
  %1226 = icmp eq %"class.WTF::StringImpl"* %1225, null
  br i1 %1226, label %1227, label %1229

1227:                                             ; preds = %1222
  store i8* null, i8** %1119, align 8
  %1228 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1228, i64* %1121, align 8
  br label %1233

1229:                                             ; preds = %1222
  store %"class.WTF::StringImpl"* %1225, %"class.WTF::StringImpl"** %1118, align 8
  %1230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1225, i64 0, i32 1
  %1231 = load i32, i32* %1230, align 4
  %1232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1225, i64 1
  store %"class.WTF::StringImpl"* %1232, %"class.WTF::StringImpl"** %1120, align 8
  br label %1233

1233:                                             ; preds = %1227, %1229
  %1234 = phi i32 [ %1231, %1229 ], [ 0, %1227 ]
  store i32 %1234, i32* %1122, align 8
  %1235 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %26, [9 x i8]* nonnull dereferenceable(9) @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E17kNoStoreDirective)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1117) #15
  br i1 %1235, label %1236, label %1238

1236:                                             ; preds = %1233
  %1237 = or i8 %1192, 4
  store i8 %1237, i8* %32, align 8
  br label %1390

1238:                                             ; preds = %1233
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1123) #15
  %1239 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1240 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1239, i64 0, i32 0, i32 0, i32 0
  %1241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1240, align 8
  %1242 = icmp eq %"class.WTF::StringImpl"* %1241, null
  br i1 %1242, label %1243, label %1245

1243:                                             ; preds = %1238
  store i8* null, i8** %1125, align 8
  %1244 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1244, i64* %1127, align 8
  br label %1249

1245:                                             ; preds = %1238
  store %"class.WTF::StringImpl"* %1241, %"class.WTF::StringImpl"** %1124, align 8
  %1246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1241, i64 0, i32 1
  %1247 = load i32, i32* %1246, align 4
  %1248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1241, i64 1
  store %"class.WTF::StringImpl"* %1248, %"class.WTF::StringImpl"** %1126, align 8
  br label %1249

1249:                                             ; preds = %1243, %1245
  %1250 = phi i32 [ %1247, %1245 ], [ 0, %1243 ]
  store i32 %1250, i32* %1128, align 8
  %1251 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %27, [16 x i8]* nonnull dereferenceable(16) @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E24kMustRevalidateDirective)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1123) #15
  br i1 %1251, label %1252, label %1254

1252:                                             ; preds = %1249
  %1253 = or i8 %1192, 8
  store i8 %1253, i8* %32, align 8
  br label %1390

1254:                                             ; preds = %1249
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1129) #15
  %1255 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1256 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1255, i64 0, i32 0, i32 0, i32 0
  %1257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1256, align 8
  %1258 = icmp eq %"class.WTF::StringImpl"* %1257, null
  br i1 %1258, label %1259, label %1261

1259:                                             ; preds = %1254
  store i8* null, i8** %1131, align 8
  %1260 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1260, i64* %1133, align 8
  br label %1265

1261:                                             ; preds = %1254
  store %"class.WTF::StringImpl"* %1257, %"class.WTF::StringImpl"** %1130, align 8
  %1262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1257, i64 0, i32 1
  %1263 = load i32, i32* %1262, align 4
  %1264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1257, i64 1
  store %"class.WTF::StringImpl"* %1264, %"class.WTF::StringImpl"** %1132, align 8
  br label %1265

1265:                                             ; preds = %1259, %1261
  %1266 = phi i32 [ %1263, %1261 ], [ 0, %1259 ]
  store i32 %1266, i32* %1134, align 8
  %1267 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %28, [8 x i8]* nonnull dereferenceable(8) @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E16kMaxAgeDirective)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1129) #15
  br i1 %1267, label %1268, label %1287

1268:                                             ; preds = %1265
  %1269 = icmp eq i8 %1193, 0
  br i1 %1269, label %1270, label %1390

1270:                                             ; preds = %1268
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #15
  store i8 -86, i8* %29, align 1
  %1271 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1272 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1271, i64 0, i32 1
  %1273 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* %1272, i8* nonnull %29) #15
  %1274 = load i8, i8* %29, align 1, !range !2
  %1275 = icmp eq i8 %1274, 0
  br i1 %1275, label %1285, label %1276

1276:                                             ; preds = %1270
  %1277 = fmul double %1273, 1.000000e+06
  %1278 = fcmp ult double %1277, 0xC3E0000000000000
  %1279 = fcmp ugt double %1277, 0x43DFFFFFFFFFFFFF
  %1280 = fcmp ogt double %1277, 0xC3E0000000000000
  %1281 = select i1 %1280, double %1277, double 0xC3E0000000000000
  %1282 = fptosi double %1281 to i64
  %1283 = select i1 %1278, i64 0, i64 9223372036854775807
  %1284 = select i1 %1279, i64 %1283, i64 %1282
  store i64 %1284, i64* %1136, align 8
  store i8 1, i8* %33, align 8
  br label %1285

1285:                                             ; preds = %1270, %1276
  %1286 = phi i8 [ 0, %1270 ], [ 1, %1276 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #15
  br label %1390

1287:                                             ; preds = %1265
  %1288 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1289 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1288, i64 0, i32 0, i32 0, i32 0
  %1290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1289, align 8
  %1291 = icmp eq %"class.WTF::StringImpl"* %1290, null
  br i1 %1291, label %1390, label %1292

1292:                                             ; preds = %1287
  %1293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1290, i64 0, i32 1
  %1294 = load i32, i32* %1293, align 4
  %1295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1290, i64 1
  %1296 = bitcast %"class.WTF::StringImpl"* %1295 to i8*
  %1297 = icmp eq i32 %1294, 22
  br i1 %1297, label %1298, label %1390

1298:                                             ; preds = %1292
  %1299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1300 = load atomic i32, i32* %1299 monotonic, align 4
  %1301 = and i32 %1300, 1
  %1302 = icmp eq i32 %1301, 0
  br i1 %1302, label %1334, label %1318

1303:                                             ; preds = %1318
  %1304 = getelementptr inbounds i8, i8* %1296, i64 %1333
  %1305 = load i8, i8* %1304, align 1
  %1306 = zext i8 %1305 to i64
  %1307 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1306
  %1308 = load i8, i8* %1307, align 1
  %1309 = zext i8 %1308 to i32
  %1310 = getelementptr inbounds [23 x i8], [23 x i8]* @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E30kStaleWhileRevalidateDirective, i64 0, i64 %1333
  %1311 = load i8, i8* %1310, align 1
  %1312 = zext i8 %1311 to i64
  %1313 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1312
  %1314 = load i8, i8* %1313, align 1
  %1315 = sext i8 %1314 to i32
  %1316 = icmp eq i32 %1309, %1315
  %1317 = add nuw nsw i64 %1319, 2
  br i1 %1316, label %1430, label %1390

1318:                                             ; preds = %1298, %1430
  %1319 = phi i64 [ %1317, %1430 ], [ 0, %1298 ]
  %1320 = getelementptr inbounds i8, i8* %1296, i64 %1319
  %1321 = load i8, i8* %1320, align 1
  %1322 = zext i8 %1321 to i64
  %1323 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1322
  %1324 = load i8, i8* %1323, align 1
  %1325 = zext i8 %1324 to i32
  %1326 = getelementptr inbounds [23 x i8], [23 x i8]* @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E30kStaleWhileRevalidateDirective, i64 0, i64 %1319
  %1327 = load i8, i8* %1326, align 2
  %1328 = zext i8 %1327 to i64
  %1329 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1328
  %1330 = load i8, i8* %1329, align 1
  %1331 = sext i8 %1330 to i32
  %1332 = icmp eq i32 %1325, %1331
  %1333 = or i64 %1319, 1
  br i1 %1332, label %1303, label %1390

1334:                                             ; preds = %1298
  %1335 = bitcast %"class.WTF::StringImpl"* %1295 to i16*
  br label %1353

1336:                                             ; preds = %1353
  %1337 = getelementptr inbounds i16, i16* %1335, i64 %1370
  %1338 = load i16, i16* %1337, align 2
  %1339 = add i16 %1338, -65
  %1340 = icmp ult i16 %1339, 26
  %1341 = zext i1 %1340 to i16
  %1342 = shl nuw nsw i16 %1341, 5
  %1343 = or i16 %1342, %1338
  %1344 = zext i16 %1343 to i32
  %1345 = getelementptr inbounds [23 x i8], [23 x i8]* @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E30kStaleWhileRevalidateDirective, i64 0, i64 %1370
  %1346 = load i8, i8* %1345, align 1
  %1347 = zext i8 %1346 to i64
  %1348 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1347
  %1349 = load i8, i8* %1348, align 1
  %1350 = sext i8 %1349 to i32
  %1351 = icmp eq i32 %1344, %1350
  %1352 = add nuw nsw i64 %1354, 2
  br i1 %1351, label %1432, label %1390

1353:                                             ; preds = %1432, %1334
  %1354 = phi i64 [ 0, %1334 ], [ %1352, %1432 ]
  %1355 = getelementptr inbounds i16, i16* %1335, i64 %1354
  %1356 = load i16, i16* %1355, align 2
  %1357 = add i16 %1356, -65
  %1358 = icmp ult i16 %1357, 26
  %1359 = zext i1 %1358 to i16
  %1360 = shl nuw nsw i16 %1359, 5
  %1361 = or i16 %1360, %1356
  %1362 = zext i16 %1361 to i32
  %1363 = getelementptr inbounds [23 x i8], [23 x i8]* @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E30kStaleWhileRevalidateDirective, i64 0, i64 %1354
  %1364 = load i8, i8* %1363, align 2
  %1365 = zext i8 %1364 to i64
  %1366 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1365
  %1367 = load i8, i8* %1366, align 1
  %1368 = sext i8 %1367 to i32
  %1369 = icmp eq i32 %1362, %1368
  %1370 = or i64 %1354, 1
  br i1 %1369, label %1336, label %1390

1371:                                             ; preds = %1430, %1432
  %1372 = icmp eq i8 %1194, 0
  br i1 %1372, label %1373, label %1390

1373:                                             ; preds = %1371
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #15
  store i8 -86, i8* %30, align 1
  %1374 = call dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"* nonnull %24, i32 %1195) #15
  %1375 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %1374, i64 0, i32 1
  %1376 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* %1375, i8* nonnull %30) #15
  %1377 = load i8, i8* %30, align 1, !range !2
  %1378 = icmp eq i8 %1377, 0
  br i1 %1378, label %1388, label %1379

1379:                                             ; preds = %1373
  %1380 = fmul double %1376, 1.000000e+06
  %1381 = fcmp ult double %1380, 0xC3E0000000000000
  %1382 = fcmp ugt double %1380, 0x43DFFFFFFFFFFFFF
  %1383 = fcmp ogt double %1380, 0xC3E0000000000000
  %1384 = select i1 %1383, double %1380, double 0xC3E0000000000000
  %1385 = fptosi double %1384 to i64
  %1386 = select i1 %1381, i64 0, i64 9223372036854775807
  %1387 = select i1 %1382, i64 %1386, i64 %1385
  store i64 %1387, i64* %1135, align 8
  store i8 1, i8* %34, align 8
  br label %1388

1388:                                             ; preds = %1373, %1379
  %1389 = phi i8 [ 0, %1373 ], [ 1, %1379 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #15
  br label %1390

1390:                                             ; preds = %1318, %1303, %1353, %1336, %1268, %1371, %1287, %1292, %1219, %1252, %1388, %1285, %1236
  %1391 = phi i8 [ %1192, %1268 ], [ %1192, %1371 ], [ %1192, %1287 ], [ %1192, %1292 ], [ %1220, %1219 ], [ %1253, %1252 ], [ %1192, %1388 ], [ %1192, %1285 ], [ %1237, %1236 ], [ %1192, %1336 ], [ %1192, %1353 ], [ %1192, %1303 ], [ %1192, %1318 ]
  %1392 = phi i8 [ %1193, %1268 ], [ %1193, %1371 ], [ %1193, %1287 ], [ %1193, %1292 ], [ %1193, %1219 ], [ %1193, %1252 ], [ %1193, %1388 ], [ %1286, %1285 ], [ %1193, %1236 ], [ %1193, %1336 ], [ %1193, %1353 ], [ %1193, %1303 ], [ %1193, %1318 ]
  %1393 = phi i8 [ %1194, %1268 ], [ %1194, %1371 ], [ %1194, %1287 ], [ %1194, %1292 ], [ %1194, %1219 ], [ %1194, %1252 ], [ %1389, %1388 ], [ %1194, %1285 ], [ %1194, %1236 ], [ %1194, %1336 ], [ %1194, %1353 ], [ %1194, %1303 ], [ %1194, %1318 ]
  %1394 = add nuw i32 %1195, 1
  %1395 = icmp eq i32 %1394, %1108
  br i1 %1395, label %1137, label %1191

1396:                                             ; preds = %1189, %1137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #15
  %1397 = and i8 %1138, 2
  %1398 = icmp eq i8 %1397, 0
  br i1 %1398, label %1399, label %1429

1399:                                             ; preds = %38, %3, %1396
  %1400 = phi i8 [ %1138, %1396 ], [ -95, %3 ], [ -95, %38 ]
  %1401 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %2) #15
  %1402 = bitcast %"class.WTF::StringView"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1402) #15
  %1403 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1404 = bitcast %"class.WTF::StringView"* %31 to i64*
  store i64 %1403, i64* %1404, align 8
  %1405 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN5blink27ParseCacheControlDirectivesERKN3WTF12AtomicStringES3_E17kNoCacheDirective, i64 0, i64 0), i8** %1405, align 8
  %1406 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  store i32 8, i32* %1406, align 8
  %1407 = icmp eq %"class.WTF::StringImpl"* %1401, null
  br i1 %1407, label %1427, label %1408

1408:                                             ; preds = %1399
  %1409 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %1401, %"class.WTF::StringView"* nonnull dereferenceable(24) %31, i32 0) #15
  %1410 = icmp ne i32 %1409, -1
  %1411 = zext i1 %1410 to i8
  %1412 = shl nuw nsw i8 %1411, 1
  %1413 = and i8 %1400, -3
  %1414 = or i8 %1412, %1413
  store i8 %1414, i8* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1402) #15
  %1415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1401, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1416 = load atomic i32, i32* %1415 monotonic, align 4
  %1417 = and i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  %1419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1401, i64 0, i32 0
  %1420 = load i32, i32* %1419, align 4
  br i1 %1418, label %1421, label %1423

1421:                                             ; preds = %1408
  %1422 = add i32 %1420, -1
  store i32 %1422, i32* %1419, align 4
  br label %1423

1423:                                             ; preds = %1421, %1408
  %1424 = phi i32 [ %1422, %1421 ], [ %1420, %1408 ]
  %1425 = icmp eq i32 %1424, 0
  br i1 %1425, label %1426, label %1429

1426:                                             ; preds = %1423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1401) #15
  br label %1429

1427:                                             ; preds = %1399
  %1428 = and i8 %1400, -3
  store i8 %1428, i8* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1402) #15
  br label %1429

1429:                                             ; preds = %1427, %1426, %1423, %1396
  ret void

1430:                                             ; preds = %1303
  %1431 = icmp eq i64 %1317, 22
  br i1 %1431, label %1371, label %1318

1432:                                             ; preds = %1336
  %1433 = icmp eq i64 %1352, 22
  br i1 %1433, label %1371, label %1353
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [16 x i8]* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 15
  br i1 %5, label %6, label %65

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %65

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %67, label %65

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %47

45:                                               ; preds = %47
  %46 = icmp eq i64 %64, 15
  br i1 %46, label %65, label %249

47:                                               ; preds = %265, %42
  %48 = phi i64 [ 0, %42 ], [ %266, %265 ]
  %49 = getelementptr inbounds i16, i16* %44, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = add i16 %50, -65
  %52 = icmp ult i16 %51, 26
  %53 = zext i1 %52 to i16
  %54 = shl nuw nsw i16 %53, 5
  %55 = or i16 %54, %50
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %48
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %56, %62
  %64 = or i64 %48, 1
  br i1 %63, label %45, label %65

65:                                               ; preds = %47, %45, %249, %14, %28, %67, %81, %95, %109, %123, %137, %151, %165, %179, %193, %207, %221, %2
  %66 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %67 ], [ false, %81 ], [ false, %95 ], [ false, %109 ], [ false, %123 ], [ false, %137 ], [ false, %151 ], [ false, %165 ], [ false, %179 ], [ false, %193 ], [ false, %207 ], [ false, %221 ], [ false, %47 ], [ true, %45 ], [ false, %249 ]
  ret i1 %66

67:                                               ; preds = %28
  %68 = getelementptr inbounds i8, i8* %15, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %81, label %65

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %15, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 3
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %87, %93
  br i1 %94, label %95, label %65

95:                                               ; preds = %81
  %96 = getelementptr inbounds i8, i8* %15, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 4
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %65

109:                                              ; preds = %95
  %110 = getelementptr inbounds i8, i8* %15, i64 5
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 5
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %65

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 6
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 6
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br i1 %136, label %137, label %65

137:                                              ; preds = %123
  %138 = getelementptr inbounds i8, i8* %15, i64 7
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 7
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %143, %149
  br i1 %150, label %151, label %65

151:                                              ; preds = %137
  %152 = getelementptr inbounds i8, i8* %15, i64 8
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp eq i32 %157, %163
  br i1 %164, label %165, label %65

165:                                              ; preds = %151
  %166 = getelementptr inbounds i8, i8* %15, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 9
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %171, %177
  br i1 %178, label %179, label %65

179:                                              ; preds = %165
  %180 = getelementptr inbounds i8, i8* %15, i64 10
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 10
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %185, %191
  br i1 %192, label %193, label %65

193:                                              ; preds = %179
  %194 = getelementptr inbounds i8, i8* %15, i64 11
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 11
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %199, %205
  br i1 %206, label %207, label %65

207:                                              ; preds = %193
  %208 = getelementptr inbounds i8, i8* %15, i64 12
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 12
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %213, %219
  br i1 %220, label %221, label %65

221:                                              ; preds = %207
  %222 = getelementptr inbounds i8, i8* %15, i64 13
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 13
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %227, %233
  br i1 %234, label %235, label %65

235:                                              ; preds = %221
  %236 = getelementptr inbounds i8, i8* %15, i64 14
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 14
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %241, %247
  ret i1 %248

249:                                              ; preds = %45
  %250 = getelementptr inbounds i16, i16* %44, i64 %64
  %251 = load i16, i16* %250, align 2
  %252 = add i16 %251, -65
  %253 = icmp ult i16 %252, 26
  %254 = zext i1 %253 to i16
  %255 = shl nuw nsw i16 %254, 5
  %256 = or i16 %255, %251
  %257 = zext i16 %256 to i32
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %64
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %257, %263
  br i1 %264, label %265, label %65

265:                                              ; preds = %249
  %266 = add nuw nsw i64 %48, 2
  br label %47
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

declare double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25ParseCommaDelimitedHeaderERKN3WTF6StringERNS0_7HashSetIS1_NS0_15CaseFoldingHashENS0_10HashTraitsIS1_EENS0_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::HashSet"* dereferenceable(24)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::Vector.88", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::Vector.88"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #15
  %9 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 1, i32* %13, align 8
  call void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i1 zeroext false, %"class.WTF::Vector.88"* nonnull dereferenceable(16) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  %14 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %15 = load i32, i32* %8, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.WTF::String"* %5 to i8*
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0
  br label %62

23:                                               ; preds = %81
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  br label %25

25:                                               ; preds = %23, %2
  %26 = phi %"class.WTF::String"* [ %24, %23 ], [ %14, %2 ]
  %27 = icmp eq %"class.WTF::String"* %26, null
  br i1 %27, label %61, label %28, !prof !13

28:                                               ; preds = %25
  %29 = bitcast %"class.WTF::String"* %26 to i8*
  %30 = load i32, i32* %8, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %59, label %32, !prof !9

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 %33
  br label %35

35:                                               ; preds = %53, %32
  %36 = phi %"class.WTF::String"* [ %54, %53 ], [ %26, %32 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %52, %49, %35
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 1
  %55 = icmp eq %"class.WTF::String"* %54, %34
  br i1 %55, label %56, label %35

56:                                               ; preds = %53
  store i32 0, i32* %8, align 4
  %57 = bitcast %"class.WTF::Vector.88"* %3 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %28
  %60 = phi i8* [ %58, %56 ], [ %29, %28 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %7, align 8
  br label %61

61:                                               ; preds = %25, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void

62:                                               ; preds = %19, %81
  %63 = phi %"class.WTF::String"* [ %14, %19 ], [ %82, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  %64 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEPFbDsE(%"class.WTF::String"* %63, i1 (i16)* nonnull @_ZN5blink12_GLOBAL__N_112IsWhitespaceEDs) #15
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %21, align 8
  %65 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.273"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #15
  br label %81

81:                                               ; preds = %62, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 1
  %83 = icmp eq %"class.WTF::String"* %82, %17
  br i1 %83, label %23, label %62
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEPFbDsE(%"class.WTF::String"*, i1 (i16)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink29ParseMultipartHeadersFromBodyEPKcjPNS_16ResourceResponseEPj(i8*, i32, %"class.blink::ResourceResponse"*, i32* nocapture) local_unnamed_addr #1 {
  %5 = alloca [6 x %"class.WTF::AtomicString"], align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.blink::WebString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.blink::WebString", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.WTF::Vector.286", align 8
  %18 = alloca %"class.WTF::AtomicString", align 8
  %19 = alloca %"class.blink::WebString", align 8
  %20 = zext i32 %1 to i64
  %21 = tail call i64 @_ZN3net8HttpUtil28LocateEndOfAdditionalHeadersEPKcmm(i8* %0, i64 %20, i64 0) #15
  %22 = icmp eq i64 %21, -1
  br i1 %22, label %514, label %23

23:                                               ; preds = %4
  %24 = trunc i64 %21 to i32
  store i32 %24, i32* %3, align 4
  %25 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  store i8 17, i8* %29, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i64 17, i1 false) #15
  %31 = getelementptr inbounds i8, i8* %25, i64 17
  store i8 0, i8* %31, align 1
  %32 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %0, i64 %21) #15
  %33 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #15
  %34 = load i8, i8* %29, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i8*, i8** %26, align 8
  %37 = select i1 %35, i8* %36, i8* %25
  %38 = load i64, i64* %27, align 8
  %39 = zext i8 %34 to i64
  %40 = select i1 %35, i64 %38, i64 %39
  call void @_ZN3net8HttpUtil18AssembleRawHeadersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %37, i64 %40) #15
  %41 = call i8* @_Znwm(i64 64) #16
  %42 = bitcast i8* %41 to %"class.net::HttpResponseHeaders"*
  call void @_ZN3net19HttpResponseHeadersC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %42, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15
  %43 = bitcast i8* %41 to i32*
  %44 = atomicrmw add i32* %43, i32 1 monotonic
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %23
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #16
  br label %52

52:                                               ; preds = %23, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #15
  %53 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #15
  %56 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #15
  call void @_ZNK3net19HttpResponseHeaders21GetMimeTypeAndCharsetEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_(%"class.net::HttpResponseHeaders"* nonnull %42, %"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull %9) #15
  %59 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15
  %60 = bitcast %"class.blink::WebString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #15
  %61 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1, !noalias !57
  %64 = icmp slt i8 %63, 0
  %65 = load i8*, i8** %54, align 8, !noalias !57
  %66 = load i64, i64* %55, align 8, !noalias !57
  %67 = zext i8 %63 to i64
  %68 = select i1 %64, i8* %65, i8* %53
  %69 = select i1 %64, i64 %66, i64 %67
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %11, i8* %68, i64 %69) #15
  %70 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* nonnull %11) #15
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  call void @_ZN5blink16ResourceResponse11SetMimeTypeERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #15
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %52
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %87

87:                                               ; preds = %52, %83, %86
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  %88 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #15
  %89 = bitcast %"class.blink::WebString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #15
  %90 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1, !noalias !60
  %93 = icmp slt i8 %92, 0
  %94 = load i8*, i8** %57, align 8, !noalias !60
  %95 = load i64, i64* %58, align 8, !noalias !60
  %96 = zext i8 %92 to i64
  %97 = select i1 %93, i8* %94, i8* %56
  %98 = select i1 %93, i64 %95, i64 %96
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %13, i8* %97, i64 %98) #15
  %99 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* nonnull %13) #15
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %100, align 8
  call void @_ZN5blink16ResourceResponse19SetTextEncodingNameERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12) #15
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #15
  br label %116

116:                                              ; preds = %87, %112, %115
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #15
  %117 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers to i8*) acquire, align 8
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %363, !prof !63

119:                                              ; preds = %116
  %120 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers) #15
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %363, label %122

122:                                              ; preds = %119
  %123 = bitcast [6 x %"class.WTF::AtomicString"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %123) #15
  %124 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %124, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12) #15
  %125 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %125, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14) #15
  %126 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %126, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i64 19) #15
  %127 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 3
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %127, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i64 13) #15
  %128 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 5) #15
  %129 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 5
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %129, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i64 10) #15
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers to %"class.WTF::AtomicString"**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %130 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 48) #15
  %131 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %130, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #15
  %132 = ptrtoint i8* %131 to i64
  store atomic i64 %132, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers to i64*) monotonic, align 8
  %133 = lshr i64 %130, 3
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  store i32 6, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %135 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = bitcast i8* %131 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %137, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %138, label %156, label %139

139:                                              ; preds = %122
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i33
  %148 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %147, i33 1) #15
  %149 = extractvalue { i33, i1 } %148, 1
  %150 = extractvalue { i33, i1 } %148, 0
  %151 = icmp slt i33 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %153, label %154, !prof !9

153:                                              ; preds = %348, %326, %304, %282, %260, %144
  call void @llvm.trap() #15
  unreachable

154:                                              ; preds = %144
  %155 = trunc i33 %150 to i32
  store i32 %155, i32* %145, align 4
  br label %156

156:                                              ; preds = %154, %139, %122
  %157 = getelementptr inbounds i8, i8* %131, i64 8
  %158 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = bitcast i8* %157 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %160, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %161, label %271, label %255

162:                                              ; preds = %359
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #15
  br label %175

175:                                              ; preds = %359, %174, %171
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #15
  br label %191

191:                                              ; preds = %190, %187, %175
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #15
  br label %207

207:                                              ; preds = %206, %203, %191
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #15
  br label %223

223:                                              ; preds = %222, %219, %207
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #15
  br label %239

239:                                              ; preds = %238, %235, %223
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %362, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %362

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #15
  br label %362

255:                                              ; preds = %156
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %271

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #15
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %153, label %269, !prof !9

269:                                              ; preds = %260
  %270 = trunc i33 %266 to i32
  store i32 %270, i32* %261, align 4
  br label %271

271:                                              ; preds = %269, %255, %156
  %272 = getelementptr inbounds i8, i8* %131, i64 16
  %273 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 2, i32 0, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %275 = bitcast i8* %272 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %275, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %276, label %293, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %293

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  %285 = zext i32 %284 to i33
  %286 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %285, i33 1) #15
  %287 = extractvalue { i33, i1 } %286, 1
  %288 = extractvalue { i33, i1 } %286, 0
  %289 = icmp slt i33 %288, 0
  %290 = or i1 %287, %289
  br i1 %290, label %153, label %291, !prof !9

291:                                              ; preds = %282
  %292 = trunc i33 %288 to i32
  store i32 %292, i32* %283, align 4
  br label %293

293:                                              ; preds = %291, %277, %271
  %294 = getelementptr inbounds i8, i8* %131, i64 24
  %295 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 3, i32 0, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %297 = bitcast i8* %294 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %296, %"class.WTF::StringImpl"** %297, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %298, label %315, label %299

299:                                              ; preds = %293
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %315

304:                                              ; preds = %299
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = zext i32 %306 to i33
  %308 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %307, i33 1) #15
  %309 = extractvalue { i33, i1 } %308, 1
  %310 = extractvalue { i33, i1 } %308, 0
  %311 = icmp slt i33 %310, 0
  %312 = or i1 %309, %311
  br i1 %312, label %153, label %313, !prof !9

313:                                              ; preds = %304
  %314 = trunc i33 %310 to i32
  store i32 %314, i32* %305, align 4
  br label %315

315:                                              ; preds = %313, %299, %293
  %316 = getelementptr inbounds i8, i8* %131, i64 32
  %317 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 4, i32 0, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %319 = bitcast i8* %316 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %318, %"class.WTF::StringImpl"** %319, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %320, label %337, label %321

321:                                              ; preds = %315
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %337

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  %329 = zext i32 %328 to i33
  %330 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %329, i33 1) #15
  %331 = extractvalue { i33, i1 } %330, 1
  %332 = extractvalue { i33, i1 } %330, 0
  %333 = icmp slt i33 %332, 0
  %334 = or i1 %331, %333
  br i1 %334, label %153, label %335, !prof !9

335:                                              ; preds = %326
  %336 = trunc i33 %332 to i32
  store i32 %336, i32* %327, align 4
  br label %337

337:                                              ; preds = %335, %321, %315
  %338 = getelementptr inbounds i8, i8* %131, i64 40
  %339 = getelementptr inbounds [6 x %"class.WTF::AtomicString"], [6 x %"class.WTF::AtomicString"]* %5, i64 0, i64 5, i32 0, i32 0, i32 0
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %341 = bitcast i8* %338 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %340, %"class.WTF::StringImpl"** %341, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %342, label %359, label %343

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %359

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  %351 = zext i32 %350 to i33
  %352 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %351, i33 1) #15
  %353 = extractvalue { i33, i1 } %352, 1
  %354 = extractvalue { i33, i1 } %352, 0
  %355 = icmp slt i33 %354, 0
  %356 = or i1 %353, %355
  br i1 %356, label %153, label %357, !prof !9

357:                                              ; preds = %348
  %358 = trunc i33 %354 to i32
  store i32 %358, i32* %349, align 4
  br label %359

359:                                              ; preds = %357, %343, %337
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %175, label %162

362:                                              ; preds = %254, %251, %239
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %123) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers) #15
  br label %363

363:                                              ; preds = %116, %119, %362
  %364 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers to %"class.WTF::AtomicString"**), align 8
  %365 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114ReplaceHeadersEvE9s_headers, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %364, i64 %366
  %368 = icmp eq i32 %365, 0
  br i1 %368, label %387, label %369

369:                                              ; preds = %363
  %370 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %373 = bitcast %"class.WTF::StringUTF8Adaptor"* %15 to i8*
  %374 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %15, i64 0, i32 1
  %375 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %15, i64 0, i32 2
  %376 = bitcast i64* %16 to i8*
  %377 = bitcast %"class.WTF::Vector.286"* %17 to i8*
  %378 = getelementptr inbounds %"class.WTF::Vector.286", %"class.WTF::Vector.286"* %17, i64 0, i32 0, i32 0, i32 0
  %379 = getelementptr inbounds %"class.WTF::Vector.286", %"class.WTF::Vector.286"* %17, i64 0, i32 0, i32 0, i32 1
  %380 = getelementptr inbounds %"class.WTF::Vector.286", %"class.WTF::Vector.286"* %17, i64 0, i32 0, i32 0, i32 2
  %381 = bitcast %"class.WTF::AtomicString"* %18 to i8*
  %382 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %383 = bitcast %"class.blink::WebString"* %19 to i8*
  %384 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  %386 = bitcast %"class.WTF::Vector.286"* %17 to i8**
  br label %407

387:                                              ; preds = %511, %363
  %388 = load i8, i8* %91, align 1
  %389 = icmp slt i8 %388, 0
  br i1 %389, label %390, label %392

390:                                              ; preds = %387
  %391 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %391) #16
  br label %392

392:                                              ; preds = %387, %390
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #15
  %393 = load i8, i8* %62, align 1
  %394 = icmp slt i8 %393, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %392
  %396 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %396) #16
  br label %397

397:                                              ; preds = %395, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #15
  %398 = atomicrmw sub i32* %43, i32 1 acq_rel
  %399 = icmp eq i32 %398, 1
  br i1 %399, label %400, label %401

400:                                              ; preds = %397
  call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %42) #15
  call void @_ZdlPv(i8* nonnull %41) #16
  br label %401

401:                                              ; preds = %397, %400
  %402 = load i8, i8* %29, align 1
  %403 = icmp slt i8 %402, 0
  br i1 %403, label %404, label %406

404:                                              ; preds = %401
  %405 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %405) #16
  br label %406

406:                                              ; preds = %401, %404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #15
  br label %514

407:                                              ; preds = %369, %511
  %408 = phi %"class.WTF::AtomicString"* [ %364, %369 ], [ %512, %511 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %370, i8 0, i64 24, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %373) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %373, i8 -86, i64 40, i1 false)
  %409 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %408, i64 0, i32 0
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %15, %"class.WTF::String"* dereferenceable(8) %409, i32 0) #15
  %410 = load i8*, i8** %374, align 8
  %411 = load i32, i32* %375, align 8
  %412 = zext i32 %411 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376) #15
  store i64 0, i64* %16, align 8
  call void @_ZN5blink16ResourceResponse20ClearHttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %408) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %377) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %377, i8 0, i64 16, i1 false) #15
  %413 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %42, i64* nonnull %16, i8* %410, i64 %412, %"class.std::__1::basic_string"* nonnull %14) #15
  br i1 %413, label %414, label %471

414:                                              ; preds = %407, %469
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %381) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %382, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #15
  %415 = load i8, i8* %385, align 1, !noalias !64
  %416 = icmp slt i8 %415, 0
  %417 = load i8*, i8** %371, align 8, !noalias !64
  %418 = load i64, i64* %372, align 8, !noalias !64
  %419 = zext i8 %415 to i64
  %420 = select i1 %416, i8* %417, i8* %370
  %421 = select i1 %416, i64 %418, i64 %419
  call void @_ZN5blink9WebString10FromLatin1EPKhm(%"class.blink::WebString"* nonnull sret %19, i8* %420, i64 %421) #15
  %422 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* nonnull %19) #15
  store %"class.WTF::StringImpl"* %422, %"class.WTF::StringImpl"** %382, align 8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #15
  %423 = load i32, i32* %380, align 4
  %424 = load i32, i32* %379, align 8
  %425 = icmp eq i32 %423, %424
  br i1 %425, label %452, label %426, !prof !9

426:                                              ; preds = %414
  %427 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %378, align 8
  %428 = zext i32 %423 to i64
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  %430 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %427, i64 %428, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %429, %"class.WTF::StringImpl"** %430, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %431, label %449, label %432

432:                                              ; preds = %426
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %449

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  %440 = zext i32 %439 to i33
  %441 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %440, i33 1) #15
  %442 = extractvalue { i33, i1 } %441, 1
  %443 = extractvalue { i33, i1 } %441, 0
  %444 = icmp slt i33 %443, 0
  %445 = or i1 %442, %444
  br i1 %445, label %446, label %447, !prof !9

446:                                              ; preds = %437
  call void @llvm.trap() #15
  unreachable

447:                                              ; preds = %437
  %448 = trunc i33 %443 to i32
  store i32 %448, i32* %438, align 4
  br label %449

449:                                              ; preds = %447, %432, %426
  %450 = load i32, i32* %380, align 4
  %451 = add i32 %450, 1
  store i32 %451, i32* %380, align 4
  br label %453

452:                                              ; preds = %414
  call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.286"* nonnull %17, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %18) #15
  br label %453

453:                                              ; preds = %449, %452
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  %455 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %455, label %469, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load atomic i32, i32* %457 monotonic, align 4
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  br i1 %460, label %463, label %465

463:                                              ; preds = %456
  %464 = add i32 %462, -1
  store i32 %464, i32* %461, align 4
  br label %465

465:                                              ; preds = %463, %456
  %466 = phi i32 [ %464, %463 ], [ %462, %456 ]
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %469

468:                                              ; preds = %465
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %454) #15
  br label %469

469:                                              ; preds = %453, %465, %468
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %381) #15
  %470 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %42, i64* nonnull %16, i8* %410, i64 %412, %"class.std::__1::basic_string"* nonnull %14) #15
  br i1 %470, label %414, label %471

471:                                              ; preds = %469, %407
  call void @_ZN5blink16ResourceResponse36AddHttpHeaderFieldWithMultipleValuesERKN3WTF12AtomicStringERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEE(%"class.blink::ResourceResponse"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %408, %"class.WTF::Vector.286"* nonnull dereferenceable(16) %17) #15
  %472 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %378, align 8
  %473 = icmp eq %"class.WTF::AtomicString"* %472, null
  br i1 %473, label %506, label %474, !prof !13

474:                                              ; preds = %471
  %475 = bitcast %"class.WTF::AtomicString"* %472 to i8*
  %476 = load i32, i32* %380, align 4
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %504, label %478, !prof !9

478:                                              ; preds = %474
  %479 = zext i32 %476 to i64
  %480 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %472, i64 %479
  br label %481

481:                                              ; preds = %499, %478
  %482 = phi %"class.WTF::AtomicString"* [ %500, %499 ], [ %472, %478 ]
  %483 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %482, i64 0, i32 0, i32 0, i32 0
  %484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %483, align 8
  %485 = icmp eq %"class.WTF::StringImpl"* %484, null
  br i1 %485, label %499, label %486

486:                                              ; preds = %481
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = load atomic i32, i32* %487 monotonic, align 4
  %489 = and i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  br i1 %490, label %493, label %495

493:                                              ; preds = %486
  %494 = add i32 %492, -1
  store i32 %494, i32* %491, align 4
  br label %495

495:                                              ; preds = %493, %486
  %496 = phi i32 [ %494, %493 ], [ %492, %486 ]
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %499

498:                                              ; preds = %495
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %484) #15
  br label %499

499:                                              ; preds = %498, %495, %481
  %500 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %482, i64 1
  %501 = icmp eq %"class.WTF::AtomicString"* %500, %480
  br i1 %501, label %502, label %481

502:                                              ; preds = %499
  store i32 0, i32* %380, align 4
  %503 = load i8*, i8** %386, align 8
  br label %504

504:                                              ; preds = %502, %474
  %505 = phi i8* [ %503, %502 ], [ %475, %474 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %505) #15
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %378, align 8
  br label %506

506:                                              ; preds = %471, %504
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %377) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %373) #15
  %507 = load i8, i8* %385, align 1
  %508 = icmp slt i8 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %506
  %510 = load i8*, i8** %371, align 8
  call void @_ZdlPv(i8* %510) #16
  br label %511

511:                                              ; preds = %506, %509
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #15
  %512 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %408, i64 1
  %513 = icmp eq %"class.WTF::AtomicString"* %512, %367
  br i1 %513, label %387, label %407

514:                                              ; preds = %4, %406
  %515 = phi i1 [ true, %406 ], [ false, %4 ]
  ret i1 %515
}

declare i64 @_ZN3net8HttpUtil28LocateEndOfAdditionalHeadersEPKcmm(i8*, i64, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net8HttpUtil18AssembleRawHeadersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZNK3net19HttpResponseHeaders21GetMimeTypeAndCharsetEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_(%"class.net::HttpResponseHeaders"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN5blink16ResourceResponse11SetMimeTypeERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare void @_ZN5blink16ResourceResponse19SetTextEncodingNameERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZN5blink16ResourceResponse20ClearHttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i64*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN5blink16ResourceResponse36AddHttpHeaderFieldWithMultipleValuesERKN3WTF12AtomicStringERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::Vector.286"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink33ParseMultipartFormHeadersFromBodyEPKcjPNS_13HTTPHeaderMapEPj(i8*, i32, %"class.blink::HTTPHeaderMap"*, i32* nocapture) local_unnamed_addr #1 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.blink::WebString", align 8
  %12 = zext i32 %1 to i64
  %13 = tail call i64 @_ZN3net8HttpUtil28LocateEndOfAdditionalHeadersEPKcmm(i8* %0, i64 %12, i64 0) #15
  %14 = icmp eq i64 %13, -1
  br i1 %14, label %110, label %15

15:                                               ; preds = %4
  %16 = trunc i64 %13 to i32
  store i32 %16, i32* %3, align 4
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  store i8 17, i8* %21, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i64 17, i1 false) #15
  %23 = getelementptr inbounds i8, i8* %17, i64 17
  store i8 0, i8* %23, align 1
  %24 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %0, i64 %13) #15
  %25 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  %26 = load i8, i8* %21, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i8*, i8** %18, align 8
  %29 = select i1 %27, i8* %28, i8* %17
  %30 = load i64, i64* %19, align 8
  %31 = zext i8 %26 to i64
  %32 = select i1 %27, i64 %30, i64 %31
  call void @_ZN3net8HttpUtil18AssembleRawHeadersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %29, i64 %32) #15
  %33 = call i8* @_Znwm(i64 64) #16
  %34 = bitcast i8* %33 to %"class.net::HttpResponseHeaders"*
  call void @_ZN3net19HttpResponseHeadersC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %34, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #15
  %35 = bitcast i8* %33 to i32*
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %15
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %15, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #15
  %45 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names19kContentDispositionE, align 8
  %46 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %47 = bitcast %"class.WTF::StringUTF8Adaptor"* %7 to i8*
  %48 = bitcast i64* %8 to i8*
  %49 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %7, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  %55 = bitcast %"class.blink::WebString"* %11 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 40, i1 false)
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %60, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  store i64 0, i64* %8, align 8
  %61 = load i8*, i8** %49, align 8
  %62 = load i32, i32* %50, align 8
  %63 = zext i32 %62 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #15
  %64 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %34, i64* nonnull %8, i8* %61, i64 %63, %"class.std::__1::basic_string"* nonnull %9) #15
  br i1 %64, label %72, label %99

65:                                               ; preds = %144
  call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %34) #15
  call void @_ZdlPv(i8* nonnull %33) #16
  br label %66

66:                                               ; preds = %144, %65
  %67 = load i8, i8* %21, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %70) #16
  br label %71

71:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  br label %110

72:                                               ; preds = %44, %97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  %73 = load i8, i8* %57, align 1, !noalias !67
  %74 = icmp slt i8 %73, 0
  %75 = load i8*, i8** %52, align 8, !noalias !67
  %76 = load i64, i64* %53, align 8, !noalias !67
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i8* %75, i8* %51
  %79 = select i1 %74, i64 %76, i64 %77
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %11, i8* %78, i64 %79) #15
  %80 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* nonnull %11) #15
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %58, align 8
  %81 = call { %"struct.WTF::KeyValuePair.280"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.277"* %59, %"class.WTF::AtomicString"* dereferenceable(8) %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #15
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #15
  br label %97

97:                                               ; preds = %72, %93, %96
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  %98 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %34, i64* nonnull %8, i8* %61, i64 %63, %"class.std::__1::basic_string"* nonnull %9) #15
  br i1 %98, label %72, label %99

99:                                               ; preds = %97, %44
  %100 = load i8, i8* %57, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %103) #16
  br label %104

104:                                              ; preds = %99, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #15
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 40, i1 false)
  %105 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 0, i32 0
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %105, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  store i64 0, i64* %8, align 8
  %106 = load i8*, i8** %49, align 8
  %107 = load i32, i32* %50, align 8
  %108 = zext i32 %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #15
  %109 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %34, i64* nonnull %8, i8* %106, i64 %108, %"class.std::__1::basic_string"* nonnull %9) #15
  br i1 %109, label %112, label %139

110:                                              ; preds = %4, %71
  %111 = phi i1 [ true, %71 ], [ false, %4 ]
  ret i1 %111

112:                                              ; preds = %104, %137
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  %113 = load i8, i8* %57, align 1, !noalias !67
  %114 = icmp slt i8 %113, 0
  %115 = load i8*, i8** %52, align 8, !noalias !67
  %116 = load i64, i64* %53, align 8, !noalias !67
  %117 = zext i8 %113 to i64
  %118 = select i1 %114, i8* %115, i8* %51
  %119 = select i1 %114, i64 %116, i64 %117
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %11, i8* %118, i64 %119) #15
  %120 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* nonnull %11) #15
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %58, align 8
  %121 = call { %"struct.WTF::KeyValuePair.280"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.277"* %59, %"class.WTF::AtomicString"* dereferenceable(8) %46, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #15
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %112
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %137

137:                                              ; preds = %136, %133, %112
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  %138 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %34, i64* nonnull %8, i8* %106, i64 %108, %"class.std::__1::basic_string"* nonnull %9) #15
  br i1 %138, label %112, label %139

139:                                              ; preds = %137, %104
  %140 = load i8, i8* %57, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %143) #16
  br label %144

144:                                              ; preds = %142, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #15
  %145 = atomicrmw sub i32* %35, i32 1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %65, label %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink29ParseContentRangeHeaderFor206ERKN3WTF6StringEPlS4_S4_(%"class.WTF::String"* dereferenceable(8), i64*, i64*, i64*) local_unnamed_addr #1 {
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #15
  %7 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = call zeroext i1 @_ZN3net8HttpUtil29ParseContentRangeHeaderFor206EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPlS7_S7_(i8* %8, i64 %11, i64* %1, i64* %2, i64* %3) #15
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret i1 %12
}

declare zeroext i1 @_ZN3net8HttpUtil29ParseContentRangeHeaderFor206EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPlS7_S7_(i8*, i64, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.330"* @_ZN5blink23ParseServerTimingHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %2 = alloca %"class.blink::HeaderFieldTokenizer", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::ServerTimingHeader", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.std::__1::unique_ptr.333", align 8
  %10 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([190 x i8], [190 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS2_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  %11 = bitcast i8* %10 to %"class.WTF::Vector.330"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #15
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %315, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::HeaderFieldTokenizer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @_ZN5blink20HeaderFieldTokenizerC1ERKN3WTF6StringE(%"class.blink::HeaderFieldTokenizer"* nonnull %2, %"class.WTF::String"* dereferenceable(8) %0) #15
  %17 = getelementptr inbounds %"class.blink::HeaderFieldTokenizer", %"class.blink::HeaderFieldTokenizer"* %2, i64 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HeaderFieldTokenizer", %"class.blink::HeaderFieldTokenizer"* %2, i64 0, i32 0
  %19 = bitcast %"class.WTF::StringView"* %3 to i8*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %22 = bitcast %"class.WTF::StringView"* %3 to i64*
  %23 = bitcast %"class.blink::ServerTimingHeader"* %4 to i8*
  %24 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %4, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %4, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %4, i64 0, i32 2, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %4, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %4, i64 0, i32 4
  %29 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %4, i64 0, i32 2
  %30 = bitcast %"class.WTF::StringView"* %5 to i8*
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %5 to i64*
  %34 = bitcast %"class.WTF::String"* %6 to i8*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.WTF::Vector"* %7 to i64*
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %40 = bitcast %"class.WTF::StringView"* %8 to i8*
  %41 = bitcast %"class.std::__1::unique_ptr.333"* %9 to i8*
  %42 = bitcast double* %25 to i64*
  %43 = bitcast i8* %27 to i16*
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %9, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.333"* %9 to i8**
  %46 = getelementptr inbounds i8, i8* %10, i64 12
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %10, i64 8
  %49 = bitcast i8* %48 to i32*
  %50 = bitcast i8* %10 to %"class.std::__1::unique_ptr.333"**
  %51 = bitcast %"class.WTF::StringView"* %3 to i8*
  %52 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  %53 = bitcast %"class.WTF::StringView"* %5 to i8*
  br label %54

54:                                               ; preds = %297, %15
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %314, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %18, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %58, %60
  br i1 %61, label %62, label %298

62:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false)
  store i32 0, i32* %21, align 8
  store i8* null, i8** %20, align 8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %63, i64* %22, align 8
  %64 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer12ConsumeTokenENS_34ParsedContentHeaderFieldParameters4ModeERN3WTF10StringViewE(%"class.blink::HeaderFieldTokenizer"* nonnull %2, i32 0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #15
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  br label %298

66:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %24, align 8
  store double 0xFFFFFFFFFFFFFFFF, double* %25, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 -86, i64 16, i1 false)
  %67 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %3) #15
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %24, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %98, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #15
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !9

83:                                               ; preds = %74
  call void @llvm.trap() #15
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %84, %69
  store double 0.000000e+00, double* %25, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #15
  store i8 0, i8* %27, align 8
  store i8 0, i8* %28, align 1
  %87 = load atomic i32, i32* %70 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %86
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %86
  %95 = phi i32 [ %93, %92 ], [ %91, %86 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #15
  br label %99

98:                                               ; preds = %66
  store double 0.000000e+00, double* %25, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #15
  store i8 0, i8* %27, align 8
  store i8 0, i8* %28, align 1
  br label %99

99:                                               ; preds = %98, %94, %97
  %100 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer7ConsumeEc(%"class.blink::HeaderFieldTokenizer"* nonnull %2, i8 signext 59) #15
  br i1 %100, label %101, label %162

101:                                              ; preds = %99, %159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  store i32 0, i32* %32, align 8
  store i8* null, i8** %31, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %102, i64* %33, align 8
  %103 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer12ConsumeTokenENS_34ParsedContentHeaderFieldParameters4ModeERN3WTF10StringViewE(%"class.blink::HeaderFieldTokenizer"* nonnull %2, i32 0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #15
  br i1 %103, label %104, label %161

104:                                              ; preds = %101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %35, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #15
  %105 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer7ConsumeEc(%"class.blink::HeaderFieldTokenizer"* nonnull %2, i8 signext 61) #15
  br i1 %105, label %106, label %123

106:                                              ; preds = %104
  %107 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer26ConsumeTokenOrQuotedStringENS_34ParsedContentHeaderFieldParameters4ModeERN3WTF6StringE(%"class.blink::HeaderFieldTokenizer"* nonnull %2, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  store i8* null, i8** %36, align 8
  store i32 0, i32* %37, align 8
  %108 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 2) #15
  %109 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %108, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %110 = ptrtoint i8* %109 to i64
  store atomic i64 %110, i64* %38 monotonic, align 8
  %111 = trunc i64 %108 to i32
  store i32 %111, i32* %37, align 8
  store i32 2, i32* %39, align 4
  %112 = icmp eq i8* %109, null
  br i1 %112, label %115, label %113, !prof !9

113:                                              ; preds = %106
  %114 = bitcast i8* %109 to i16*
  store i16 15148, i16* %114, align 1
  br label %115

115:                                              ; preds = %106, %113
  call void @_ZN5blink20HeaderFieldTokenizer25ConsumeBeforeAnyCharMatchEN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEE(%"class.blink::HeaderFieldTokenizer"* nonnull %2, %"class.WTF::Vector"* nonnull %7) #15
  %116 = load i8*, i8** %36, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %123, label %118, !prof !13

118:                                              ; preds = %115
  %119 = load i32, i32* %39, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121, !prof !9

121:                                              ; preds = %118
  store i32 0, i32* %39, align 4
  br label %122

122:                                              ; preds = %121, %118
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #15
  store i8* null, i8** %36, align 8
  br label %123

123:                                              ; preds = %122, %115, %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %30, i64 24, i1 false)
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #15
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !9

140:                                              ; preds = %131
  call void @llvm.trap() #15
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %143

143:                                              ; preds = %123, %126, %141
  call void @_ZN5blink18ServerTimingHeader12SetParameterEN3WTF10StringViewENS1_6StringE(%"class.blink::ServerTimingHeader"* nonnull %4, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %8, %"class.WTF::StringImpl"* %124) #15
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #15
  br label %159

159:                                              ; preds = %143, %155, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  %160 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer7ConsumeEc(%"class.blink::HeaderFieldTokenizer"* nonnull %2, i8 signext 59) #15
  br i1 %160, label %101, label %162

161:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  br label %162

162:                                              ; preds = %159, %99, %161
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #15
  %163 = call noalias i8* @malloc(i64 32) #15
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %165 = bitcast i8* %163 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %164, %"class.WTF::StringImpl"** %165, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %166, label %184, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i33
  %176 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #15
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !9

181:                                              ; preds = %172
  call void @llvm.trap() #15
  unreachable

182:                                              ; preds = %172
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %173, align 4
  br label %184

184:                                              ; preds = %182, %167, %162
  %185 = getelementptr inbounds i8, i8* %163, i64 8
  %186 = load i64, i64* %42, align 8
  %187 = bitcast i8* %185 to i64*
  store i64 %186, i64* %187, align 8
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %189 = getelementptr inbounds i8, i8* %163, i64 16
  %190 = bitcast i8* %189 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %190, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %191, label %209, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %209

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i33
  %201 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %200, i33 1) #15
  %202 = extractvalue { i33, i1 } %201, 1
  %203 = extractvalue { i33, i1 } %201, 0
  %204 = icmp slt i33 %203, 0
  %205 = or i1 %202, %204
  br i1 %205, label %206, label %207, !prof !9

206:                                              ; preds = %197
  call void @llvm.trap() #15
  unreachable

207:                                              ; preds = %197
  %208 = trunc i33 %203 to i32
  store i32 %208, i32* %198, align 4
  br label %209

209:                                              ; preds = %184, %192, %207
  %210 = getelementptr inbounds i8, i8* %163, i64 24
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %43, align 8
  store i16 %212, i16* %211, align 8
  store i8* %163, i8** %45, align 8
  %213 = load i32, i32* %47, align 4
  %214 = load i32, i32* %49, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %224, label %216, !prof !9

216:                                              ; preds = %209
  %217 = ptrtoint i8* %163 to i64
  %218 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %50, align 8
  %219 = zext i32 %213 to i64
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %218, i64 %219
  store %"class.blink::ServerTimingHeader"* null, %"class.blink::ServerTimingHeader"** %44, align 8
  %221 = bitcast %"class.std::__1::unique_ptr.333"* %220 to i64*
  store i64 %217, i64* %221, align 8
  %222 = load i32, i32* %47, align 4
  %223 = add i32 %222, 1
  store i32 %223, i32* %47, align 4
  br label %225

224:                                              ; preds = %209
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.330"* %11, %"class.std::__1::unique_ptr.333"* nonnull dereferenceable(8) %9) #15
  br label %225

225:                                              ; preds = %216, %224
  %226 = load %"class.blink::ServerTimingHeader"*, %"class.blink::ServerTimingHeader"** %44, align 8
  store %"class.blink::ServerTimingHeader"* null, %"class.blink::ServerTimingHeader"** %44, align 8
  %227 = icmp eq %"class.blink::ServerTimingHeader"* %226, null
  br i1 %227, label %264, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %226, i64 0, i32 2, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #15
  br label %245

245:                                              ; preds = %244, %241, %228
  %246 = getelementptr inbounds %"class.blink::ServerTimingHeader", %"class.blink::ServerTimingHeader"* %226, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #15
  br label %262

262:                                              ; preds = %261, %258, %245
  %263 = bitcast %"class.blink::ServerTimingHeader"* %226 to i8*
  call void @free(i8* %263) #15
  br label %264

264:                                              ; preds = %225, %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #15
  %265 = call zeroext i1 @_ZN5blink20HeaderFieldTokenizer7ConsumeEc(%"class.blink::HeaderFieldTokenizer"* nonnull %2, i8 signext 44) #15
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  br i1 %272, label %275, label %277

275:                                              ; preds = %268
  %276 = add i32 %274, -1
  store i32 %276, i32* %273, align 4
  br label %277

277:                                              ; preds = %275, %268
  %278 = phi i32 [ %276, %275 ], [ %274, %268 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %277
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #15
  br label %281

281:                                              ; preds = %280, %277, %264
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #15
  br label %297

297:                                              ; preds = %296, %293, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  br i1 %265, label %54, label %298

298:                                              ; preds = %57, %297, %65
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #15
  br label %314

314:                                              ; preds = %54, %298, %310, %313
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #15
  br label %315

315:                                              ; preds = %1, %314
  ret %"class.WTF::Vector.330"* %11
}

declare void @_ZN5blink20HeaderFieldTokenizerC1ERKN3WTF6StringE(%"class.blink::HeaderFieldTokenizer"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN5blink20HeaderFieldTokenizer12ConsumeTokenENS_34ParsedContentHeaderFieldParameters4ModeERN3WTF10StringViewE(%"class.blink::HeaderFieldTokenizer"*, i32, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20HeaderFieldTokenizer7ConsumeEc(%"class.blink::HeaderFieldTokenizer"*, i8 signext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20HeaderFieldTokenizer26ConsumeTokenOrQuotedStringENS_34ParsedContentHeaderFieldParameters4ModeERN3WTF6StringE(%"class.blink::HeaderFieldTokenizer"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink20HeaderFieldTokenizer25ConsumeBeforeAnyCharMatchEN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEE(%"class.blink::HeaderFieldTokenizer"*, %"class.WTF::Vector"*) local_unnamed_addr #2

declare void @_ZN5blink18ServerTimingHeader12SetParameterEN3WTF10StringViewENS1_6StringE(%"class.blink::ServerTimingHeader"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ParseHeadersERKN3WTF6StringERKNS_4KURLE(%"class.mojo::StructPtr.230"* noalias sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.mojo::StructPtr.197", align 8
  %7 = alloca %class.GURL, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %1) #15
  %10 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN3net8HttpUtil18AssembleRawHeadersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %16, i64 %20) #15
  %21 = call i8* @_Znwm(i64 64) #16
  %22 = bitcast i8* %21 to %"class.net::HttpResponseHeaders"*
  call void @_ZN3net19HttpResponseHeadersC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %22, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #15
  %23 = bitcast i8* %21 to i32*
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %3, %29
  %33 = load i8, i8* %11, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  %38 = bitcast %"class.mojo::StructPtr.197"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #15
  %39 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %39) #15
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %7, %"class.blink::KURL"* %2) #15
  call void @_ZN7network21PopulateParsedHeadersEPKN3net19HttpResponseHeadersERK4GURL(%"class.mojo::StructPtr.197"* nonnull sret %6, %"class.net::HttpResponseHeaders"* nonnull %22, %class.GURL* nonnull dereferenceable(120) %7) #15
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_13ParsedHeadersEEE(%"class.mojo::StructPtr.230"* sret %0, %"class.mojo::StructPtr.197"* nonnull dereferenceable(8) %6)
  %40 = getelementptr inbounds %"class.mojo::StructPtr.197", %"class.mojo::StructPtr.197"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %40, align 8
  store %"class.network::mojom::ParsedHeaders"* null, %"class.network::mojom::ParsedHeaders"** %40, align 8
  %42 = icmp eq %"class.network::mojom::ParsedHeaders"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  call void @_ZN7network5mojom13ParsedHeadersD1Ev(%"class.network::mojom::ParsedHeaders"* nonnull %41) #15
  %44 = bitcast %"class.network::mojom::ParsedHeaders"* %41 to i8*
  call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %43, %37
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #15
  %46 = atomicrmw sub i32* %23, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %22) #15
  call void @_ZdlPv(i8* nonnull %21) #16
  br label %49

49:                                               ; preds = %45, %48
  ret void
}

declare void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN7network21PopulateParsedHeadersEPKN3net19HttpResponseHeadersERK4GURL(%"class.mojo::StructPtr.197"* sret, %"class.net::HttpResponseHeaders"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* sret, %"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_4KURLE(%"class.WTF::Vector.234"* noalias sret, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1 {
  %6 = alloca %"class.std::__1::vector.201", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %class.GURL, align 8
  %9 = bitcast %"class.std::__1::vector.201"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.WTF::String"* %1, i32 0) #15
  %11 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %14, i8* %16, i8* %10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %13 to i64
  %21 = select i1 %14, i64 %19, i64 %20
  %22 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %22) #15
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %8, %"class.blink::KURL"* %4) #15
  call void @_ZN7network28ParseContentSecurityPoliciesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_5mojom25ContentSecurityPolicyTypeENS6_27ContentSecurityPolicySourceERK4GURL(%"class.std::__1::vector.201"* nonnull sret %6, i8* %17, i64 %21, i32 %2, i32 %3, %class.GURL* nonnull dereferenceable(120) %8) #15
  call void @_ZN7network5mojom14ConvertToBlinkIN4mojo9StructPtrINS0_21ContentSecurityPolicyEEENS3_INS0_5blink21ContentSecurityPolicyEEEEEN3WTF6VectorIT0_Lj0ENS9_18PartitionAllocatorEEERKNSt3__16vectorIT_NSE_9allocatorISG_EEEE(%"class.WTF::Vector.234"* sret %0, %"class.std::__1::vector.201"* nonnull dereferenceable(24) %6)
  %23 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %6, i64 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.117"*, %"class.mojo::StructPtr.117"** %23, align 8
  %25 = icmp eq %"class.mojo::StructPtr.117"* %24, null
  br i1 %25, label %46, label %26

26:                                               ; preds = %5
  %27 = bitcast %"class.mojo::StructPtr.117"* %24 to i8*
  %28 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %6, i64 0, i32 0, i32 1
  %29 = load %"class.mojo::StructPtr.117"*, %"class.mojo::StructPtr.117"** %28, align 8
  %30 = icmp eq %"class.mojo::StructPtr.117"* %29, %24
  br i1 %30, label %44, label %31

31:                                               ; preds = %26, %39
  %32 = phi %"class.mojo::StructPtr.117"* [ %33, %39 ], [ %29, %26 ]
  %33 = getelementptr inbounds %"class.mojo::StructPtr.117", %"class.mojo::StructPtr.117"* %32, i64 -1
  %34 = getelementptr inbounds %"class.mojo::StructPtr.117", %"class.mojo::StructPtr.117"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.network::mojom::ContentSecurityPolicy"*, %"class.network::mojom::ContentSecurityPolicy"** %34, align 8
  store %"class.network::mojom::ContentSecurityPolicy"* null, %"class.network::mojom::ContentSecurityPolicy"** %34, align 8
  %36 = icmp eq %"class.network::mojom::ContentSecurityPolicy"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  call void @_ZN7network5mojom21ContentSecurityPolicyD1Ev(%"class.network::mojom::ContentSecurityPolicy"* nonnull %35) #15
  %38 = bitcast %"class.network::mojom::ContentSecurityPolicy"* %35 to i8*
  call void @_ZdlPv(i8* %38) #16
  br label %39

39:                                               ; preds = %37, %31
  %40 = icmp eq %"class.mojo::StructPtr.117"* %33, %24
  br i1 %40, label %41, label %31

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.201"* %6 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %26
  %45 = phi i8* [ %43, %41 ], [ %27, %26 ]
  store %"class.mojo::StructPtr.117"* %24, %"class.mojo::StructPtr.117"** %28, align 8
  call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %5, %44
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %22) #15
  %47 = load i8, i8* %12, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %50) #16
  br label %51

51:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret void
}

declare void @_ZN7network28ParseContentSecurityPoliciesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_5mojom25ContentSecurityPolicyTypeENS6_27ContentSecurityPolicySourceERK4GURL(%"class.std::__1::vector.201"* sret, i8*, i64, i32, i32, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_14SecurityOriginE(%"class.WTF::Vector.234"* noalias sret, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.blink::SecurityOrigin"* dereferenceable(96)) local_unnamed_addr #1 {
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin34GetOriginOrPrecursorOriginIfOpaqueEv(%"class.blink::SecurityOrigin"* %4) #15
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %6) #15
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %9, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #15
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !9

29:                                               ; preds = %20
  call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %5, %15, %30
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %33, align 8
  %34 = call zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #15
  br label %50

50:                                               ; preds = %32, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %51 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %9, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #15
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !9

69:                                               ; preds = %60
  call void @llvm.trap() #15
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %72

72:                                               ; preds = %50, %55, %70
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink4KURL7SetHostERKN3WTF6StringE(%"class.blink::KURL"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %8) #15
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #15
  br label %89

89:                                               ; preds = %72, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  %90 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %9, i64 0, i32 4
  %91 = load i16, i16* %90, align 8
  call void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"* nonnull %6, i16 zeroext %91) #15
  call void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_4KURLE(%"class.WTF::Vector.234"* sret %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %2, i32 %3, %"class.blink::KURL"* nonnull dereferenceable(112) %6)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #15
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin34GetOriginOrPrecursorOriginIfOpaqueEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4KURL7SetHostERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ParseContentSecurityPolicyHeadersERKNS_36ContentSecurityPolicyResponseHeadersE(%"class.WTF::Vector.234"* noalias sret, %"class.blink::ContentSecurityPolicyResponseHeaders"* dereferenceable(136)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::Vector.234", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %1, i64 0, i32 2
  %9 = bitcast %"class.WTF::Vector.234"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false)
  tail call void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_4KURLE(%"class.WTF::Vector.234"* sret %0, %"class.WTF::String"* dereferenceable(8) %7, i32 1, i32 0, %"class.blink::KURL"* dereferenceable(112) %8)
  %10 = bitcast %"class.WTF::Vector.234"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %3, i64 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %1, i64 0, i32 1
  %14 = bitcast %"class.WTF::Vector.234"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_4KURLE(%"class.WTF::Vector.234"* nonnull sret %3, %"class.WTF::String"* dereferenceable(8) %13, i32 0, i32 0, %"class.blink::KURL"* dereferenceable(112) %8)
  %15 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %11, align 8
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %15, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %41, label %20

20:                                               ; preds = %2, %36
  %21 = phi %"class.mojo::StructPtr.141"* [ %37, %36 ], [ %15, %2 ]
  %22 = load i32, i32* %6, align 4
  %23 = load i32, i32* %5, align 8
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %35, label %25, !prof !9

25:                                               ; preds = %20
  %26 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %4, align 8
  %27 = zext i32 %22 to i64
  %28 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %26, i64 %27
  %29 = bitcast %"class.mojo::StructPtr.141"* %28 to i64*
  %30 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = bitcast %"class.mojo::StructPtr.141"* %21 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  store i64 0, i64* %31, align 8
  %33 = load i32, i32* %6, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %6, align 4
  br label %36

35:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.234"* %0, %"class.mojo::StructPtr.141"* dereferenceable(8) %21) #15
  br label %36

36:                                               ; preds = %35, %25
  %37 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %21, i64 1
  %38 = icmp eq %"class.mojo::StructPtr.141"* %37, %18
  br i1 %38, label %39, label %20

39:                                               ; preds = %36
  %40 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %11, align 8
  br label %41

41:                                               ; preds = %39, %2
  %42 = phi %"class.mojo::StructPtr.141"* [ %40, %39 ], [ %15, %2 ]
  %43 = icmp eq %"class.mojo::StructPtr.141"* %42, null
  br i1 %43, label %66, label %44, !prof !13

44:                                               ; preds = %41
  %45 = bitcast %"class.mojo::StructPtr.141"* %42 to i8*
  %46 = load i32, i32* %12, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %64, label %48, !prof !9

48:                                               ; preds = %44
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %42, i64 %49
  br label %51

51:                                               ; preds = %58, %48
  %52 = phi %"class.mojo::StructPtr.141"* [ %59, %58 ], [ %42, %48 ]
  %53 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %55 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %54) #15
  %57 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %54 to i8*
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %56, %51
  %59 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %52, i64 1
  %60 = icmp eq %"class.mojo::StructPtr.141"* %59, %50
  br i1 %60, label %61, label %51

61:                                               ; preds = %58
  store i32 0, i32* %12, align 4
  %62 = bitcast %"class.WTF::Vector.234"* %3 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %44
  %65 = phi i8* [ %63, %61 ], [ %45, %44 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #15
  store %"class.mojo::StructPtr.141"* null, %"class.mojo::StructPtr.141"** %11, align 8
  br label %66

66:                                               ; preds = %41, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ParseTimingAllowOriginERKN3WTF6StringE(%"class.mojo::StructPtr.190"* noalias sret, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.mojo::StructPtr.183", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.mojo::StructPtr.183"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %1) #15
  call void @_ZN7network22ParseTimingAllowOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.mojo::StructPtr.183"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #15
  call void @_ZN7network5mojom14ConvertToBlinkERKN4mojo9StructPtrINS0_17TimingAllowOriginEEE(%"class.mojo::StructPtr.190"* sret %0, %"class.mojo::StructPtr.183"* nonnull dereferenceable(8) %3)
  %7 = getelementptr inbounds %"class.mojo::StructPtr.183", %"class.mojo::StructPtr.183"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.network::mojom::TimingAllowOrigin"*, %"class.network::mojom::TimingAllowOrigin"** %7, align 8
  store %"class.network::mojom::TimingAllowOrigin"* null, %"class.network::mojom::TimingAllowOrigin"** %7, align 8
  %9 = icmp eq %"class.network::mojom::TimingAllowOrigin"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  call void @_ZN7network5mojom17TimingAllowOriginD1Ev(%"class.network::mojom::TimingAllowOrigin"* nonnull %8) #15
  %11 = bitcast %"class.network::mojom::TimingAllowOrigin"* %8 to i8*
  call void @_ZdlPv(i8* %11) #16
  br label %12

12:                                               ; preds = %2, %10
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %12, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

declare void @_ZN7network22ParseTimingAllowOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.mojo::StructPtr.183"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"*) unnamed_addr #4

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue14set_allow_starEb(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueC1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*) unnamed_addr #2

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue10set_originERK13scoped_refptrIKN5blink14SecurityOriginEE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %class.scoped_refptr.12* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue17set_error_messageERKN3WTF6StringE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink17TimingAllowOrigin22set_serialized_originsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.network::mojom::blink::TimingAllowOrigin"*, %"class.WTF::Vector.88"*) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink17TimingAllowOriginC1Ev(%"class.network::mojom::blink::TimingAllowOrigin"*) unnamed_addr #2

declare void @_ZN7network5mojom5blink17TimingAllowOrigin7set_allEh(%"class.network::mojom::blink::TimingAllowOrigin"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink17TimingAllowOriginD1Ev(%"class.network::mojom::blink::TimingAllowOrigin"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

declare i32 @_ZN3WTF10StringImpl21FindIgnoringASCIICaseERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, %"class.WTF::StringView"* dereferenceable(24), i1 zeroext, %"class.WTF::Vector.88"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"*, i1 (i16)*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blinkL18IsControlCharacterEDs(i16 zeroext) #0 {
  %2 = icmp ult i16 %0, 32
  %3 = icmp eq i16 %0, 127
  %4 = or i1 %2, %3
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blinkL22IsCacheHeaderSeparatorEDs(i16 zeroext) #0 {
  switch i16 %0, label %2 [
    i16 40, label %3
    i16 41, label %3
    i16 60, label %3
    i16 62, label %3
    i16 64, label %3
    i16 44, label %3
    i16 59, label %3
    i16 58, label %3
    i16 92, label %3
    i16 34, label %3
    i16 47, label %3
    i16 91, label %3
    i16 93, label %3
    i16 63, label %3
    i16 61, label %3
    i16 123, label %3
    i16 125, label %3
    i16 32, label %3
    i16 9, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

declare i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"*, i1 (i16)*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.267"*, %"struct.std::__1::pair.270"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.270"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.270"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.270"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.267"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.270"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.270"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.270"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !13

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.267"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.267"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.270"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.270"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.270"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !13

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.270"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.267"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.270"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.270"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !13

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.267"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.267"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.270"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.270"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.270"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.270"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %100, i64 %103
  %105 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"struct.std::__1::pair.270"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"struct.std::__1::pair.270"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %100, i64 %103, i32 1
  %110 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %101, i64 0, i32 1
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = load i32, i32* %3, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #13

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN5blink9WebString10FromLatin1EPKhm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.280"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.277"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.280"*, %"struct.WTF::KeyValuePair.280"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.280"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.277"* %0, %"struct.WTF::KeyValuePair.280"* null)
  %11 = load %"struct.WTF::KeyValuePair.280"*, %"struct.WTF::KeyValuePair.280"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.280"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #15
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair.280"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair.280"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.280"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  br i1 %70, label %104, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair.280"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair.280"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair.280"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #15
  %85 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair.280"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.280"* dereferenceable(16) %92, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %93 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %14, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = call %"struct.WTF::KeyValuePair.280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.277"* %0, %"struct.WTF::KeyValuePair.280"* %92)
  br label %104

104:                                              ; preds = %58, %62, %91, %102
  %105 = phi i8 [ 1, %91 ], [ 1, %102 ], [ 0, %62 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.280"* [ %92, %91 ], [ %103, %102 ], [ %51, %62 ], [ %51, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.280"*, i8 } undef, %"struct.WTF::KeyValuePair.280"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.280"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.280"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.277"*, %"struct.WTF::KeyValuePair.280"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.280"*
  %37 = call %"struct.WTF::KeyValuePair.280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.277"* %0, %"struct.WTF::KeyValuePair.280"* %36, i32 %32, %"struct.WTF::KeyValuePair.280"* %1) #15
  ret %"struct.WTF::KeyValuePair.280"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.280"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !9

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.280"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #15
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #15
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !9

62:                                               ; preds = %53
  tail call void @llvm.trap() #15
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #15
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.277"*, %"struct.WTF::KeyValuePair.280"*, i32, %"struct.WTF::KeyValuePair.280"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.277", align 8
  %6 = bitcast %"class.WTF::HashTable.277"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.277"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.280"* %1, %"struct.WTF::KeyValuePair.280"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.280"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.277"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.277"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.280"*, %"struct.WTF::KeyValuePair.280"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.280"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.277"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.277"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.280"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.280"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.280"* nonnull %37, i32 %34) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.280"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.280"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.280"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.280"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.277"* nonnull %5, %"struct.WTF::KeyValuePair.280"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.280"*, %"struct.WTF::KeyValuePair.280"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.280"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.280"* %53, %"struct.WTF::KeyValuePair.280"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.280"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.280"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.280"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.277"*, %"struct.WTF::KeyValuePair.280"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.280"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.277"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.280"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.280"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.280"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.280"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.280"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.277"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.280"*, %"struct.WTF::KeyValuePair.280"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.277", %"class.WTF::HashTable.277"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #15
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.280"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %74
  %45 = ptrtoint %"struct.WTF::KeyValuePair.280"* %80 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair.280"* [ null, %2 ], [ %75, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.280"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair.280"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %85

52:                                               ; preds = %74, %21
  %53 = phi %"struct.WTF::KeyValuePair.280"* [ null, %21 ], [ %75, %74 ]
  %54 = phi i64 [ %17, %21 ], [ %81, %74 ]
  %55 = phi %"struct.WTF::KeyValuePair.280"* [ %16, %21 ], [ %80, %74 ]
  %56 = phi i64 [ %15, %21 ], [ %79, %74 ]
  %57 = phi i64 [ 0, %21 ], [ %77, %74 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.280"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  %62 = bitcast i8* %59 to %"class.WTF::StringImpl"*
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %62
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  store i8* %59, i8** %43, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %66, i8** %23, align 8
  %67 = getelementptr inbounds i8, i8* %59, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %26, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %28, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %29, align 8
  %73 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  br i1 %73, label %85, label %74

74:                                               ; preds = %65, %52
  %75 = phi %"struct.WTF::KeyValuePair.280"* [ %53, %65 ], [ %55, %52 ]
  %76 = icmp eq i64 %57, 0
  %77 = select i1 %76, i64 %42, i64 %57
  %78 = add i64 %77, %56
  %79 = and i64 %78, %10
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %6, i64 %79
  %81 = ptrtoint %"struct.WTF::KeyValuePair.280"* %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %44, label %52

85:                                               ; preds = %61, %65, %46
  %86 = phi i64 [ %51, %46 ], [ %54, %65 ], [ %54, %61 ]
  %87 = phi i8 [ 0, %46 ], [ 1, %65 ], [ 1, %61 ]
  %88 = inttoptr i64 %86 to %"struct.WTF::KeyValuePair.280"*
  %89 = insertvalue { %"struct.WTF::KeyValuePair.280"*, i8 } undef, %"struct.WTF::KeyValuePair.280"* %88, 0
  %90 = insertvalue { %"struct.WTF::KeyValuePair.280"*, i8 } %89, i8 %87, 1
  ret { %"struct.WTF::KeyValuePair.280"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #15
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #15
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #15
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #15
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #15
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #15
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.280"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.280"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.280"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.280", %"struct.WTF::KeyValuePair.280"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #15
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom13ParsedHeadersD1Ev(%"class.network::mojom::ParsedHeaders"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom17TimingAllowOriginD1Ev(%"class.network::mojom::TimingAllowOrigin"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #15
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #15
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #15
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #15
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !13

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #15
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #15
  %44 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !13

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %62) #15
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !13

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #15
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #15
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"*, i32, %"class.WTF::Vector"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.83"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.25"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.83"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.25"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.25"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.25"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.25"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !70

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.25"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.25"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.25"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.25"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.25"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.25"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.25"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.25"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.25"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.25"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.25"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.25"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.25"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #15
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.25"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.25"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.25"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.25"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.25"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.25"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !72

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.25"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.25"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.25"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.25"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.25"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.25"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.25"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.25"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.25"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.25"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.25"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.25"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.25"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.83"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #15
  %149 = bitcast %"class.WTF::Vector.83"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.83"*, %"class.mojo::StructPtr.25"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.25"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.25"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.25"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.83"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.25"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.83"* %0, i32 %22) #15
  %36 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.25"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.25"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !13

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.25"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.83"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.25"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.83"* %0, i32 %50) #15
  %64 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.25"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.25"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.25"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.25"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.25"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.88"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.88"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !13

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.88"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.88"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !13

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.88"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !13

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.88"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.88"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.93"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.44"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.44"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.44"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.44"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.44"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !73

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.44"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.44"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.44"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.44"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.44"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.44"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.44"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.44"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.44"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.44"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.44"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.44"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.44"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #15
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.44"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.44"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.44"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.44"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.44"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.44"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !74

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.44"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.44"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.44"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.44"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.44"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.44"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.44"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.44"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.44"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.44"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.44"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.44"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.44"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.93"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #15
  %149 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.93"*, %"class.mojo::StructPtr.44"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.44"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.44"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.44"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.44"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.93"* %0, i32 %22) #15
  %36 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.44"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.44"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !13

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.44"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.44"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.93"* %0, i32 %50) #15
  %64 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.44"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.44"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.44"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.44"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.44"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EERbSI_SI_SI_SI_SI_SI_SI_SI_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.79"*, %"class.WTF::Vector.83"* dereferenceable(16), %"class.WTF::Vector.88"* dereferenceable(16), %"class.WTF::Vector.93"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.83", align 8
  %15 = alloca %"class.WTF::Vector.88", align 8
  %16 = alloca %"class.WTF::Vector.93", align 8
  %17 = tail call i8* @_Znwm(i64 64) #16
  %18 = bitcast i8* %17 to %"class.network::mojom::blink::CSPSourceList"*
  %19 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %14, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %14, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.83"* %1 to i64*
  %22 = bitcast %"class.WTF::Vector.83"* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector.83"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %15, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %15, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.88"* %2 to i64*
  %32 = bitcast %"class.WTF::Vector.88"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.88"* %15 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %16, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %16, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector.93"* %3 to i64*
  %42 = bitcast %"class.WTF::Vector.93"* %16 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.WTF::Vector.93"* %16 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %3, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %39, align 8
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %3, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %40, align 4
  store i32 0, i32* %47, align 4
  %49 = load i8, i8* %4, align 1, !range !2
  %50 = icmp ne i8 %49, 0
  %51 = load i8, i8* %5, align 1, !range !2
  %52 = icmp ne i8 %51, 0
  %53 = load i8, i8* %6, align 1, !range !2
  %54 = icmp ne i8 %53, 0
  %55 = load i8, i8* %7, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  %57 = load i8, i8* %8, align 1, !range !2
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* %9, align 1, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = load i8, i8* %10, align 1, !range !2
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %11, align 1, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = load i8, i8* %12, align 1, !range !2
  %66 = icmp ne i8 %65, 0
  call void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"* nonnull %18, %"class.WTF::Vector.83"* nonnull %14, %"class.WTF::Vector.88"* nonnull %15, %"class.WTF::Vector.93"* nonnull %16, i1 zeroext %50, i1 zeroext %52, i1 zeroext %54, i1 zeroext %56, i1 zeroext %58, i1 zeroext %60, i1 zeroext %62, i1 zeroext %64, i1 zeroext %66) #15
  %67 = ptrtoint i8* %17 to i64
  %68 = bitcast %"class.mojo::StructPtr.79"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %16, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %69, align 8
  %71 = icmp eq %"class.mojo::StructPtr.44"* %70, null
  br i1 %71, label %94, label %72, !prof !13

72:                                               ; preds = %13
  %73 = bitcast %"class.mojo::StructPtr.44"* %70 to i8*
  %74 = load i32, i32* %40, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !9

76:                                               ; preds = %72
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %70, i64 %77
  br label %79

79:                                               ; preds = %86, %76
  %80 = phi %"class.mojo::StructPtr.44"* [ %87, %86 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  %83 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %82) #15
  %85 = bitcast %"class.network::mojom::blink::CSPHashSource"* %82 to i8*
  call void @_ZdlPv(i8* %85) #16
  br label %86

86:                                               ; preds = %84, %79
  %87 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %80, i64 1
  %88 = icmp eq %"class.mojo::StructPtr.44"* %87, %78
  br i1 %88, label %89, label %79

89:                                               ; preds = %86
  store i32 0, i32* %40, align 4
  %90 = bitcast %"class.WTF::Vector.93"* %16 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %72
  %93 = phi i8* [ %91, %89 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #15
  store %"class.mojo::StructPtr.44"* null, %"class.mojo::StructPtr.44"** %69, align 8
  br label %94

94:                                               ; preds = %13, %92
  %95 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %15, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !13

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %30, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !9

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #15
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %30, align 4
  %127 = bitcast %"class.WTF::Vector.88"* %15 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %95, align 8
  br label %131

131:                                              ; preds = %94, %129
  %132 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %14, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %132, align 8
  %134 = icmp eq %"class.mojo::StructPtr.25"* %133, null
  br i1 %134, label %157, label %135, !prof !13

135:                                              ; preds = %131
  %136 = bitcast %"class.mojo::StructPtr.25"* %133 to i8*
  %137 = load i32, i32* %20, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %155, label %139, !prof !9

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %133, i64 %140
  br label %142

142:                                              ; preds = %149, %139
  %143 = phi %"class.mojo::StructPtr.25"* [ %150, %149 ], [ %133, %139 ]
  %144 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %144, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %144, align 8
  %146 = icmp eq %"class.network::mojom::blink::CSPSource"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %145) #15
  %148 = bitcast %"class.network::mojom::blink::CSPSource"* %145 to i8*
  call void @_ZdlPv(i8* %148) #16
  br label %149

149:                                              ; preds = %147, %142
  %150 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %143, i64 1
  %151 = icmp eq %"class.mojo::StructPtr.25"* %150, %141
  br i1 %151, label %152, label %142

152:                                              ; preds = %149
  store i32 0, i32* %20, align 4
  %153 = bitcast %"class.WTF::Vector.83"* %14 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #15
  store %"class.mojo::StructPtr.25"* null, %"class.mojo::StructPtr.25"** %132, align 8
  br label %157

157:                                              ; preds = %131, %155
  ret void
}

declare void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"*, %"class.WTF::Vector.83"*, %"class.WTF::Vector.88"*, %"class.WTF::Vector.93"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #2

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEERbSC_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.110"*, %"class.WTF::Vector.88"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::Vector.88", align 8
  %6 = tail call i8* @_Znwm(i64 24) #16
  %7 = bitcast i8* %6 to %"class.network::mojom::blink::CSPTrustedTypes"*
  %8 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.88"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.88"* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.88"* %5 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  %18 = load i8, i8* %2, align 1, !range !2
  %19 = icmp ne i8 %18, 0
  %20 = load i8, i8* %3, align 1, !range !2
  %21 = icmp ne i8 %20, 0
  call void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %7, %"class.WTF::Vector.88"* nonnull %5, i1 zeroext %19, i1 zeroext %21) #15
  %22 = ptrtoint i8* %6 to i64
  %23 = bitcast %"class.mojo::StructPtr.110"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !13

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !9

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %56 = bitcast %"class.WTF::Vector.88"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %4, %58
  ret void
}

declare void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"*, %"class.WTF::Vector.88"*, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %118, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::String"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %89 = bitcast %"class.WTF::String"* %85 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #15
  br label %106

106:                                              ; preds = %81, %102, %105
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 1
  %114 = load i32, i32* %12, align 8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %118

118:                                              ; preds = %50, %106, %116
  %119 = phi i8 [ 1, %106 ], [ 1, %116 ], [ 0, %50 ]
  %120 = phi %"struct.WTF::KeyValuePair"* [ %83, %106 ], [ %117, %116 ], [ %52, %50 ]
  %121 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %120, 0
  %122 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %121, i8 %119, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %122
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !75

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #15
  ret %"struct.WTF::KeyValuePair"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #15
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #15
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair"* %136, %"struct.WTF::KeyValuePair"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.151"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.148"*, i32* dereferenceable(4), %"class.mojo::StructPtr.79"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.151"*, %"struct.WTF::KeyValuePair.151"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.151"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.151"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.148"* %0, %"struct.WTF::KeyValuePair.151"* null)
  %9 = load %"struct.WTF::KeyValuePair.151"*, %"struct.WTF::KeyValuePair.151"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.151"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.151"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.151"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.151"* %52, %"struct.WTF::KeyValuePair.151"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.151"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %59, i64 0, i32 1
  %73 = bitcast %"class.mojo::StructPtr.79"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.151"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.mojo::StructPtr.79", %"class.mojo::StructPtr.79"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.mojo::StructPtr.79"* %85 to i64*
  br label %95

91:                                               ; preds = %81
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %87) #15
  %92 = bitcast %"class.network::mojom::blink::CSPSourceList"* %87 to i8*
  tail call void @_ZdlPv(i8* %92) #16
  %93 = bitcast %"class.mojo::StructPtr.79"* %85 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i64* [ %90, %89 ], [ %93, %91 ]
  %97 = phi i64 [ 0, %89 ], [ %94, %91 ]
  %98 = bitcast %"class.mojo::StructPtr.79"* %2 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %95
  %110 = tail call %"struct.WTF::KeyValuePair.151"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.148"* %0, %"struct.WTF::KeyValuePair.151"* %83)
  br label %111

111:                                              ; preds = %50, %95, %109
  %112 = phi i8 [ 1, %95 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair.151"* [ %83, %95 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.151"*, i8 } undef, %"struct.WTF::KeyValuePair.151"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.151"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.151"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.151"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.148"*, %"struct.WTF::KeyValuePair.151"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.151"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %45, i32 1
  %49 = bitcast %"class.mojo::StructPtr.79"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %50, i32 1
  %53 = bitcast %"class.mojo::StructPtr.79"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %54, i32 1
  %57 = bitcast %"class.mojo::StructPtr.79"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %58, i32 1
  %61 = bitcast %"class.mojo::StructPtr.79"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %36, i64 %69, i32 1
  %73 = bitcast %"class.mojo::StructPtr.79"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !76

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.151"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.148"* %0, %"struct.WTF::KeyValuePair.151"* %36, i32 %32, %"struct.WTF::KeyValuePair.151"* %1) #15
  ret %"struct.WTF::KeyValuePair.151"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.151"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.148"*, %"struct.WTF::KeyValuePair.151"*, i32, %"struct.WTF::KeyValuePair.151"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.151"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.148"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.151"*, %"struct.WTF::KeyValuePair.151"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.151"* %16 to i64
  br label %51

18:                                               ; preds = %146
  %19 = bitcast %"class.WTF::HashTable.148"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %147, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.151"* [ null, %10 ], [ %150, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %148, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.151"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #15
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #15
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.148", %"class.WTF::HashTable.148"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.151"* %23

51:                                               ; preds = %13, %146
  %52 = phi i64 [ %17, %13 ], [ %147, %146 ]
  %53 = phi i32 [ %7, %13 ], [ %148, %146 ]
  %54 = phi %"struct.WTF::KeyValuePair.151"* [ %16, %13 ], [ %149, %146 ]
  %55 = phi %"struct.WTF::KeyValuePair.151"* [ null, %13 ], [ %150, %146 ]
  %56 = phi i32 [ 0, %13 ], [ %151, %146 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %60 [
    i32 -1000001, label %146
    i32 0, label %146
  ]

60:                                               ; preds = %51
  %61 = shl i32 %59, 15
  %62 = xor i32 %61, -1
  %63 = add i32 %59, %62
  %64 = lshr i32 %63, 10
  %65 = xor i32 %64, %63
  %66 = mul i32 %65, 9
  %67 = lshr i32 %66, 6
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 11
  %70 = xor i32 %69, -1
  %71 = add i32 %68, %70
  %72 = lshr i32 %71, 16
  %73 = xor i32 %72, %71
  %74 = and i32 %73, %14
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %1, i64 %75
  %77 = ptrtoint %"struct.WTF::KeyValuePair.151"* %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %60
  %82 = xor i32 %73, -1
  %83 = lshr i32 %71, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %104

95:                                               ; preds = %111
  %96 = ptrtoint %"struct.WTF::KeyValuePair.151"* %118 to i64
  %97 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair.151"*
  br label %98

98:                                               ; preds = %95, %60
  %99 = phi i64 [ %96, %95 ], [ %77, %60 ]
  %100 = phi %"struct.WTF::KeyValuePair.151"* [ %97, %95 ], [ null, %60 ]
  %101 = icmp eq %"struct.WTF::KeyValuePair.151"* %100, null
  %102 = ptrtoint %"struct.WTF::KeyValuePair.151"* %100 to i64
  %103 = select i1 %101, i64 %99, i64 %102
  br label %123

104:                                              ; preds = %111, %81
  %105 = phi i64 [ 0, %81 ], [ %113, %111 ]
  %106 = phi i32 [ %79, %81 ], [ %121, %111 ]
  %107 = phi i64 [ %77, %81 ], [ %119, %111 ]
  %108 = phi i64 [ %75, %81 ], [ %117, %111 ]
  %109 = phi i64 [ 0, %81 ], [ %115, %111 ]
  %110 = icmp eq i32 %106, %59
  br i1 %110, label %123, label %111

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, -1000001
  %113 = select i1 %112, i64 %107, i64 %105
  %114 = icmp eq i64 %109, 0
  %115 = select i1 %114, i64 %94, i64 %109
  %116 = add i64 %115, %108
  %117 = and i64 %116, %15
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %1, i64 %117
  %119 = ptrtoint %"struct.WTF::KeyValuePair.151"* %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %95, label %104

123:                                              ; preds = %104, %98
  %124 = phi i64 [ %103, %98 ], [ %107, %104 ]
  %125 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.151"*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  %128 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %127) #15
  %130 = bitcast %"class.network::mojom::blink::CSPSourceList"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #16
  br label %131

131:                                              ; preds = %123, %129
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %125, i64 0, i32 0
  %133 = load i32, i32* %58, align 8
  store i32 %133, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %125, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %54, i64 %57, i32 1
  %136 = bitcast %"class.mojo::StructPtr.79"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.79", %"class.mojo::StructPtr.79"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.79"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 0, i64* %138, align 8
  %140 = load %"struct.WTF::KeyValuePair.151"*, %"struct.WTF::KeyValuePair.151"** %9, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %140, i64 %57
  %142 = icmp eq %"struct.WTF::KeyValuePair.151"* %141, %3
  %143 = select i1 %142, %"struct.WTF::KeyValuePair.151"* %125, %"struct.WTF::KeyValuePair.151"* %55
  %144 = load i32, i32* %6, align 8
  %145 = ptrtoint %"struct.WTF::KeyValuePair.151"* %140 to i64
  br label %146

146:                                              ; preds = %51, %51, %131
  %147 = phi i64 [ %52, %51 ], [ %145, %131 ], [ %52, %51 ]
  %148 = phi i32 [ %53, %51 ], [ %144, %131 ], [ %53, %51 ]
  %149 = phi %"struct.WTF::KeyValuePair.151"* [ %54, %51 ], [ %140, %131 ], [ %54, %51 ]
  %150 = phi %"struct.WTF::KeyValuePair.151"* [ %55, %51 ], [ %143, %131 ], [ %55, %51 ]
  %151 = add i32 %56, 1
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %18, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EERbSO_SO_RNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEESO_NS9_6VectorISC_Lj0ESI_EERNS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEESV_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.25"* dereferenceable(8), %"class.WTF::HashMap"* dereferenceable(24), %"class.WTF::HashMap.147"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i32* dereferenceable(4), %"class.mojo::InlinedStructPtr.101"* dereferenceable(24), i8* dereferenceable(1), %"class.WTF::Vector.88"* dereferenceable(16), i32* dereferenceable(4), %"class.mojo::StructPtr.110"* dereferenceable(8), %"class.WTF::Vector.88"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %15 = alloca %"class.mojo::StructPtr.25", align 8
  %16 = alloca %"class.WTF::HashMap.147", align 8
  %17 = alloca %"class.mojo::InlinedStructPtr.101", align 8
  %18 = alloca %"class.WTF::Vector.88", align 8
  %19 = alloca %"class.mojo::StructPtr.110", align 8
  %20 = alloca %"class.WTF::Vector.88", align 8
  %21 = tail call i8* @_Znwm(i64 144) #16
  %22 = bitcast i8* %21 to %"class.network::mojom::blink::ContentSecurityPolicy"*
  %23 = bitcast %"class.mojo::StructPtr.25"* %15 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.25"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %16, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %16, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %16, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashMap.147"* %3 to i64*
  %31 = bitcast %"class.WTF::HashMap.147"* %16 to i64*
  store i64 0, i64* %31, align 8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::HashMap.147"* %16 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %3, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %27, align 8
  store i32 0, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %3, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %28, align 4
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %3, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  store i32 %40, i32* %29, align 8
  %41 = and i32 %39, -2147483648
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %4, align 1, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = load i8, i8* %5, align 1, !range !2
  %45 = icmp ne i8 %44, 0
  %46 = load i8, i8* %6, align 1, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %17, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #15
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %17, i64 0, i32 1
  store i32 0, i32* %50, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #15
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #15
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %8, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %49, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %51) #15
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr.101", %"class.mojo::InlinedStructPtr.101"* %8, i64 0, i32 1
  %53 = load i32, i32* %50, align 8
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %50, align 8
  store i32 %53, i32* %52, align 4
  %55 = load i8, i8* %9, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %18, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %18, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.WTF::Vector.88"* %10 to i64*
  %60 = bitcast %"class.WTF::Vector.88"* %18 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.WTF::Vector.88"* %18 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %10, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %57, align 8
  store i32 0, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %10, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %58, align 4
  store i32 0, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = bitcast %"class.mojo::StructPtr.110"* %19 to i64*
  %69 = getelementptr inbounds %"class.mojo::StructPtr.110", %"class.mojo::StructPtr.110"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.mojo::StructPtr.110"* %12 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %68, align 8
  store i64 0, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %20, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.88"* %13 to i64*
  %75 = bitcast %"class.WTF::Vector.88"* %20 to i64*
  store i64 0, i64* %75, align 8
  %76 = load i64, i64* %74, align 8
  %77 = bitcast %"class.WTF::Vector.88"* %20 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %13, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %72, align 8
  store i32 0, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %13, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %73, align 4
  store i32 0, i32* %80, align 4
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %22, %"class.mojo::StructPtr.25"* nonnull %15, %"class.WTF::HashMap"* dereferenceable(24) %2, %"class.WTF::HashMap.147"* nonnull %16, i1 zeroext %43, i1 zeroext %45, i1 zeroext %47, i32 %48, %"class.mojo::InlinedStructPtr.101"* nonnull %17, i1 zeroext %56, %"class.WTF::Vector.88"* nonnull %18, i32 %67, %"class.mojo::StructPtr.110"* nonnull %19, %"class.WTF::Vector.88"* nonnull %20) #15
  %82 = ptrtoint i8* %21 to i64
  %83 = bitcast %"class.mojo::StructPtr.141"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %20, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %120, label %87, !prof !13

87:                                               ; preds = %14
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = load i32, i32* %73, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %118, label %91, !prof !9

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.WTF::String"* [ %113, %112 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #15
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %114 = icmp eq %"class.WTF::String"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %73, align 4
  %116 = bitcast %"class.WTF::Vector.88"* %20 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %87
  %119 = phi i8* [ %117, %115 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %120

120:                                              ; preds = %14, %118
  %121 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  %122 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %121) #15
  %124 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %121 to i8*
  call void @_ZdlPv(i8* %124) #16
  br label %125

125:                                              ; preds = %120, %123
  %126 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %18, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %126, align 8
  %128 = icmp eq %"class.WTF::String"* %127, null
  br i1 %128, label %162, label %129, !prof !13

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::String"* %127 to i8*
  %131 = load i32, i32* %58, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133, !prof !9

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %134
  br label %136

136:                                              ; preds = %154, %133
  %137 = phi %"class.WTF::String"* [ %155, %154 ], [ %127, %133 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #15
  br label %154

154:                                              ; preds = %153, %150, %136
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 1
  %156 = icmp eq %"class.WTF::String"* %155, %135
  br i1 %156, label %157, label %136

157:                                              ; preds = %154
  store i32 0, i32* %58, align 4
  %158 = bitcast %"class.WTF::Vector.88"* %18 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %129
  %161 = phi i8* [ %159, %157 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %126, align 8
  br label %162

162:                                              ; preds = %125, %160
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #15
  %163 = getelementptr inbounds %"class.WTF::HashMap.147", %"class.WTF::HashMap.147"* %16, i64 0, i32 0, i32 0
  %164 = load %"struct.WTF::KeyValuePair.151"*, %"struct.WTF::KeyValuePair.151"** %163, align 8
  %165 = icmp eq %"struct.WTF::KeyValuePair.151"* %164, null
  br i1 %165, label %187, label %166, !prof !13

166:                                              ; preds = %162
  %167 = load i32, i32* %27, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = zext i32 %167 to i64
  br label %171

171:                                              ; preds = %182, %169
  %172 = phi i64 [ 0, %169 ], [ %183, %182 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %164, i64 %172, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1000001
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.151", %"struct.WTF::KeyValuePair.151"* %164, i64 %172, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  %179 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %178) #15
  %181 = bitcast %"class.network::mojom::blink::CSPSourceList"* %178 to i8*
  call void @_ZdlPv(i8* %181) #16
  br label %182

182:                                              ; preds = %180, %176, %171
  %183 = add nuw nsw i64 %172, 1
  %184 = icmp eq i64 %183, %170
  br i1 %184, label %185, label %171

185:                                              ; preds = %182, %166
  %186 = bitcast %"struct.WTF::KeyValuePair.151"* %164 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %186) #15
  store %"struct.WTF::KeyValuePair.151"* null, %"struct.WTF::KeyValuePair.151"** %163, align 8
  br label %187

187:                                              ; preds = %162, %185
  %188 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %24, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %24, align 8
  %189 = icmp eq %"class.network::mojom::blink::CSPSource"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %188) #15
  %191 = bitcast %"class.network::mojom::blink::CSPSource"* %188 to i8*
  call void @_ZdlPv(i8* %191) #16
  br label %192

192:                                              ; preds = %187, %190
  ret void
}

declare void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.mojo::StructPtr.25"*, %"class.WTF::HashMap"* dereferenceable(24), %"class.WTF::HashMap.147"*, i1 zeroext, i1 zeroext, i1 zeroext, i32, %"class.mojo::InlinedStructPtr.101"*, i1 zeroext, %"class.WTF::Vector.88"*, i32, %"class.mojo::StructPtr.110"*, %"class.WTF::Vector.88"*) unnamed_addr #2

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16), %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.network::mojom::blink::ContentSecurityPolicyHeader", align 8
  %4 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #15
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !9

26:                                               ; preds = %17
  tail call void @llvm.trap() #15
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #15
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !9

51:                                               ; preds = %42
  tail call void @llvm.trap() #15
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #15
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #15
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !9

92:                                               ; preds = %83
  tail call void @llvm.trap() #15
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #15
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #15
  ret void
}

declare void @_ZN7network5mojom5blink10LinkHeaderC1ERKN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeERKN3WTF6StringE(%"class.network::mojom::blink::LinkHeader"*, %"class.blink::KURL"* dereferenceable(112), i32, i32, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.234"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.141"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.234"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.141"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.141"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.141"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.141"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !77

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.141"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.141"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.141"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.141"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.141"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.141"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.141"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.141"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.141"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.141"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.141"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.141"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.141"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #15
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.141"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.141"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.141"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.141"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.141"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.141"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !78

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.141"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.141"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.141"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.141"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.141"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.141"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.141"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.141"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.141"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.141"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.141"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.141"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.141"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.234"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #15
  %149 = bitcast %"class.WTF::Vector.234"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.234"*, %"class.mojo::StructPtr.141"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.141"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.141"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.141"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.234"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.141"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.234"* %0, i32 %22) #15
  %36 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.141"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.141"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !13

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.141"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.234"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.141"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.234"* %0, i32 %50) #15
  %64 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.141"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.141"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.141"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.141"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.141"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.244"*, i32* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.244"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !13

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.244"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.244"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.244", %"class.WTF::Vector.244"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !13

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.244"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !13

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.244"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.244"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.249"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.176"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.249"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.176"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.176"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.176"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.176"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !79

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.176"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.176"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.176"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.176"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.176"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.176"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.176"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.176"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.176"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.176"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.176"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.176"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.176"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #15
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.176"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.176"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.176"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.176"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.176"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.176"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !80

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.176"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.176"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.176"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.176"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.176"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.176"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.176"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.176"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.176"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.176"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.176"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.176"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.176"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.249"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #15
  %149 = bitcast %"class.WTF::Vector.249"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.249"*, %"class.mojo::StructPtr.176"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.176"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.176"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.176"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.249"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.176"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.249"* %0, i32 %22) #15
  %36 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.176"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.176"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !13

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.176"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.249"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.176"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.249"* %0, i32 %50) #15
  %64 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.176"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.176"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.176"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.176"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.176"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEEC2IJN3WTF6VectorINS0_INS3_21ContentSecurityPolicyEEELj0ENS7_18PartitionAllocatorEEENS0_INS3_23AllowCSPFromHeaderValueEEERNS1_25CrossOriginEmbedderPolicyERNS1_23CrossOriginOpenerPolicyERbN4absl8optionalINS8_INS2_18WebClientHintsTypeELj0ESB_EEEERN4base9TimeDeltaESO_RNS2_18XFrameOptionsValueENS8_INS0_INS3_10LinkHeaderEEELj0ESB_EENS0_INS3_17TimingAllowOriginEEESJ_EEENSP_10in_place_tEDpOT_(%"class.mojo::StructPtr.230"*, %"class.WTF::Vector.234"* dereferenceable(16), %"class.mojo::StructPtr.162"* dereferenceable(8), %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80), %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80), i8* dereferenceable(1), %"class.absl::optional.239"* dereferenceable(24), %"class.base::TimeDelta"* dereferenceable(8), %"class.absl::optional.239"* dereferenceable(24), i32* dereferenceable(4), %"class.WTF::Vector.249"* dereferenceable(16), %"class.mojo::StructPtr.190"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.234", align 8
  %15 = alloca %"class.mojo::StructPtr.162", align 8
  %16 = alloca %"class.absl::optional.239", align 8
  %17 = alloca %"class.absl::optional.239", align 8
  %18 = alloca %"class.WTF::Vector.249", align 8
  %19 = alloca %"class.mojo::StructPtr.190", align 8
  %20 = tail call i8* @_Znwm(i64 288) #16
  %21 = bitcast i8* %20 to %"class.network::mojom::blink::ParsedHeaders"*
  %22 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %14, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %14, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.WTF::Vector.234"* %1 to i64*
  %25 = bitcast %"class.WTF::Vector.234"* %14 to i64*
  store i64 0, i64* %25, align 8
  %26 = load i64, i64* %24, align 8
  %27 = bitcast %"class.WTF::Vector.234"* %14 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %1, i64 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %22, align 8
  store i32 0, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %1, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %23, align 4
  store i32 0, i32* %30, align 4
  %32 = bitcast %"class.mojo::StructPtr.162"* %15 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr.162", %"class.mojo::StructPtr.162"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::StructPtr.162"* %2 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  %36 = load i8, i8* %5, align 1, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #15
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %55, label %42

42:                                               ; preds = %13
  %43 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.WTF::Vector.244"* %43 to i64*
  %48 = bitcast %"class.WTF::Vector.244"* %44 to i64*
  store i64 0, i64* %48, align 8
  %49 = load i64, i64* %47, align 8
  %50 = bitcast %"class.WTF::Vector.244"* %44 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %45, align 8
  store i32 0, i32* %51, align 4
  %53 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %46, align 4
  store i32 0, i32* %53, align 4
  store i8 1, i8* %38, align 8
  br label %55

55:                                               ; preds = %13, %42
  %56 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #15
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %75, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"class.WTF::Vector.244"* %63 to i64*
  %68 = bitcast %"class.WTF::Vector.244"* %64 to i64*
  store i64 0, i64* %68, align 8
  %69 = load i64, i64* %67, align 8
  %70 = bitcast %"class.WTF::Vector.244"* %64 to i64*
  store atomic i64 0, i64* %67 monotonic, align 8
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %65, align 8
  store i32 0, i32* %71, align 4
  %73 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %66, align 4
  store i32 0, i32* %73, align 4
  store i8 1, i8* %58, align 8
  br label %75

75:                                               ; preds = %55, %62
  %76 = load i32, i32* %9, align 4
  %77 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %18, i64 0, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %18, i64 0, i32 0, i32 0, i32 2
  %79 = bitcast %"class.WTF::Vector.249"* %10 to i64*
  %80 = bitcast %"class.WTF::Vector.249"* %18 to i64*
  store i64 0, i64* %80, align 8
  %81 = load i64, i64* %79, align 8
  %82 = bitcast %"class.WTF::Vector.249"* %18 to i64*
  store atomic i64 0, i64* %79 monotonic, align 8
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %10, i64 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %77, align 8
  store i32 0, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %10, i64 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %78, align 4
  store i32 0, i32* %85, align 4
  %87 = bitcast %"class.mojo::StructPtr.190"* %19 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.190", %"class.mojo::StructPtr.190"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.mojo::StructPtr.190"* %11 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = load i8, i8* %12, align 1, !range !2
  %92 = icmp ne i8 %91, 0
  call void @_ZN7network5mojom5blink13ParsedHeadersC1EN3WTF6VectorIN4mojo9StructPtrINS1_21ContentSecurityPolicyEEELj0ENS3_18PartitionAllocatorEEENS6_INS1_23AllowCSPFromHeaderValueEEERKNS_25CrossOriginEmbedderPolicyERKNS_23CrossOriginOpenerPolicyEbN4absl8optionalINS4_INS0_18WebClientHintsTypeELj0ES9_EEEEN4base9TimeDeltaESN_NS0_18XFrameOptionsValueENS4_INS6_INS1_10LinkHeaderEEELj0ES9_EENS6_INS1_17TimingAllowOriginEEEb(%"class.network::mojom::blink::ParsedHeaders"* nonnull %21, %"class.WTF::Vector.234"* nonnull %14, %"class.mojo::StructPtr.162"* nonnull %15, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %3, %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80) %4, i1 zeroext %37, %"class.absl::optional.239"* nonnull %16, i64 %57, %"class.absl::optional.239"* nonnull %17, i32 %76, %"class.WTF::Vector.249"* nonnull %18, %"class.mojo::StructPtr.190"* nonnull %19, i1 zeroext %92) #15
  %93 = ptrtoint i8* %20 to i64
  %94 = bitcast %"class.mojo::StructPtr.230"* %0 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"class.network::mojom::blink::TimingAllowOrigin"*, %"class.network::mojom::blink::TimingAllowOrigin"** %88, align 8
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %88, align 8
  %96 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %75
  call void @_ZN7network5mojom5blink17TimingAllowOriginD1Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %95) #15
  %98 = bitcast %"class.network::mojom::blink::TimingAllowOrigin"* %95 to i8*
  call void @_ZdlPv(i8* %98) #16
  br label %99

99:                                               ; preds = %75, %97
  %100 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %18, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.mojo::StructPtr.176"*, %"class.mojo::StructPtr.176"** %100, align 8
  %102 = icmp eq %"class.mojo::StructPtr.176"* %101, null
  br i1 %102, label %125, label %103, !prof !13

103:                                              ; preds = %99
  %104 = bitcast %"class.mojo::StructPtr.176"* %101 to i8*
  %105 = load i32, i32* %78, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %123, label %107, !prof !9

107:                                              ; preds = %103
  %108 = zext i32 %105 to i64
  %109 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %101, i64 %108
  br label %110

110:                                              ; preds = %117, %107
  %111 = phi %"class.mojo::StructPtr.176"* [ %118, %117 ], [ %101, %107 ]
  %112 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.network::mojom::blink::LinkHeader"*, %"class.network::mojom::blink::LinkHeader"** %112, align 8
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %112, align 8
  %114 = icmp eq %"class.network::mojom::blink::LinkHeader"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %110
  call void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"* nonnull %113) #15
  %116 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %113, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %116) #16
  br label %117

117:                                              ; preds = %115, %110
  %118 = getelementptr inbounds %"class.mojo::StructPtr.176", %"class.mojo::StructPtr.176"* %111, i64 1
  %119 = icmp eq %"class.mojo::StructPtr.176"* %118, %109
  br i1 %119, label %120, label %110

120:                                              ; preds = %117
  store i32 0, i32* %78, align 4
  %121 = bitcast %"class.WTF::Vector.249"* %18 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %103
  %124 = phi i8* [ %122, %120 ], [ %104, %103 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #15
  store %"class.mojo::StructPtr.176"* null, %"class.mojo::StructPtr.176"** %100, align 8
  br label %125

125:                                              ; preds = %99, %123
  %126 = load i8, i8* %58, align 8, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %140, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  %132 = bitcast i32* %130 to i8*
  br i1 %131, label %139, label %133, !prof !13

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %138, label %137, !prof !9

137:                                              ; preds = %133
  store i32 0, i32* %134, align 4
  br label %138

138:                                              ; preds = %137, %133
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #15
  store i32* null, i32** %129, align 8
  br label %139

139:                                              ; preds = %138, %128
  store i8 0, i8* %58, align 8
  br label %140

140:                                              ; preds = %125, %139
  %141 = load i8, i8* %38, align 8, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %155, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = icmp eq i32* %145, null
  %147 = bitcast i32* %145 to i8*
  br i1 %146, label %154, label %148, !prof !13

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.absl::optional.239", %"class.absl::optional.239"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %153, label %152, !prof !9

152:                                              ; preds = %148
  store i32 0, i32* %149, align 4
  br label %153

153:                                              ; preds = %152, %148
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %147) #15
  store i32* null, i32** %144, align 8
  br label %154

154:                                              ; preds = %153, %143
  store i8 0, i8* %38, align 8
  br label %155

155:                                              ; preds = %140, %154
  %156 = load %"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %33, align 8
  store %"class.network::mojom::blink::AllowCSPFromHeaderValue"* null, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %33, align 8
  %157 = icmp eq %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %156) #15
  %159 = bitcast %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %156 to i8*
  call void @_ZdlPv(i8* %159) #16
  br label %160

160:                                              ; preds = %155, %158
  %161 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %14, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.mojo::StructPtr.141"*, %"class.mojo::StructPtr.141"** %161, align 8
  %163 = icmp eq %"class.mojo::StructPtr.141"* %162, null
  br i1 %163, label %186, label %164, !prof !13

164:                                              ; preds = %160
  %165 = bitcast %"class.mojo::StructPtr.141"* %162 to i8*
  %166 = load i32, i32* %23, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %184, label %168, !prof !9

168:                                              ; preds = %164
  %169 = zext i32 %166 to i64
  %170 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %162, i64 %169
  br label %171

171:                                              ; preds = %178, %168
  %172 = phi %"class.mojo::StructPtr.141"* [ %179, %178 ], [ %162, %168 ]
  %173 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %172, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %173, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %173, align 8
  %175 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %174) #15
  %177 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %174 to i8*
  call void @_ZdlPv(i8* %177) #16
  br label %178

178:                                              ; preds = %176, %171
  %179 = getelementptr inbounds %"class.mojo::StructPtr.141", %"class.mojo::StructPtr.141"* %172, i64 1
  %180 = icmp eq %"class.mojo::StructPtr.141"* %179, %170
  br i1 %180, label %181, label %171

181:                                              ; preds = %178
  store i32 0, i32* %23, align 4
  %182 = bitcast %"class.WTF::Vector.234"* %14 to i8**
  %183 = load i8*, i8** %182, align 8
  br label %184

184:                                              ; preds = %181, %164
  %185 = phi i8* [ %183, %181 ], [ %165, %164 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %185) #15
  store %"class.mojo::StructPtr.141"* null, %"class.mojo::StructPtr.141"** %161, align 8
  br label %186

186:                                              ; preds = %160, %184
  ret void
}

declare void @_ZN7network5mojom5blink13ParsedHeadersC1EN3WTF6VectorIN4mojo9StructPtrINS1_21ContentSecurityPolicyEEELj0ENS3_18PartitionAllocatorEEENS6_INS1_23AllowCSPFromHeaderValueEEERKNS_25CrossOriginEmbedderPolicyERKNS_23CrossOriginOpenerPolicyEbN4absl8optionalINS4_INS0_18WebClientHintsTypeELj0ES9_EEEEN4base9TimeDeltaESN_NS0_18XFrameOptionsValueENS4_INS6_INS1_10LinkHeaderEEELj0ES9_EENS6_INS1_17TimingAllowOriginEEEb(%"class.network::mojom::blink::ParsedHeaders"*, %"class.WTF::Vector.234"*, %"class.mojo::StructPtr.162"*, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80), %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80), i1 zeroext, %"class.absl::optional.239"*, i64, %"class.absl::optional.239"*, i32, %"class.WTF::Vector.249"*, %"class.mojo::StructPtr.190"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.88"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair.270"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.267"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.267", %"class.WTF::Vector.267"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %24, i64 %25
  ret %"struct.std::__1::pair.270"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.273"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp eq %"class.WTF::String"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.273"* %0, %"class.WTF::String"* null)
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.WTF::String"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #15
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %22
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %81, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %5 to i8*
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %38 = xor i32 %20, -1
  %39 = lshr i32 %20, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %27, %69
  %52 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %77, %69 ]
  %53 = phi %"class.WTF::String"* [ %23, %27 ], [ %75, %69 ]
  %54 = phi %"class.WTF::String"* [ null, %27 ], [ %70, %69 ]
  %55 = phi i64 [ %22, %27 ], [ %74, %69 ]
  %56 = phi i64 [ 0, %27 ], [ %72, %69 ]
  %57 = bitcast %"class.WTF::String"* %53 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, inttoptr (i64 -1 to i8*)
  br i1 %59, label %69, label %60

60:                                               ; preds = %51
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %31, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #15
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %34, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %36, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %37, align 8
  %68 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  br i1 %68, label %126, label %69

69:                                               ; preds = %51, %60
  %70 = phi %"class.WTF::String"* [ %54, %60 ], [ %53, %51 ]
  %71 = icmp eq i64 %56, 0
  %72 = select i1 %71, i64 %50, i64 %56
  %73 = add i64 %72, %55
  %74 = and i64 %73, %17
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %74
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %79, label %51

79:                                               ; preds = %69
  %80 = icmp eq %"class.WTF::String"* %70, null
  br i1 %80, label %81, label %84

81:                                               ; preds = %12, %79
  %82 = phi %"class.WTF::String"* [ %75, %79 ], [ %23, %12 ]
  %83 = bitcast %"class.WTF::String"* %82 to i64*
  br label %92

84:                                               ; preds = %79
  %85 = bitcast %"class.WTF::String"* %70 to i64*
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, 2147483647
  %89 = and i32 %88, 2147483647
  %90 = and i32 %87, -2147483648
  %91 = or i32 %89, %90
  store i32 %91, i32* %86, align 8
  br label %92

92:                                               ; preds = %81, %84
  %93 = phi i64* [ %83, %81 ], [ %85, %84 ]
  %94 = phi %"class.WTF::String"* [ %82, %81 ], [ %70, %84 ]
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %2 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  store i64 %97, i64* %93, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #15
  br label %114

114:                                              ; preds = %92, %110, %113
  %115 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = add i32 %119, %117
  %121 = shl i32 %120, 1
  %122 = load i32, i32* %14, align 8
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.273"* %0, %"class.WTF::String"* %94)
  br label %126

126:                                              ; preds = %60, %114, %124
  %127 = phi i8 [ 1, %114 ], [ 1, %124 ], [ 0, %60 ]
  %128 = phi %"class.WTF::String"* [ %94, %114 ], [ %125, %124 ], [ %53, %60 ]
  %129 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %128, 0
  %130 = insertvalue { %"class.WTF::String"*, i8 } %129, i8 %127, 1
  ret { %"class.WTF::String"*, i8 } %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.273"*, %"class.WTF::String"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.273"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #15
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.273"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.273", align 8
  %6 = bitcast %"class.WTF::HashTable.273"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.273"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.273"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.273"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.273"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.273"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.273"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #15
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #15
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.273"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 0
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.273", %"class.WTF::HashTable.273"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #15
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 %15
  %17 = ptrtoint %"class.WTF::String"* %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %27 = bitcast %"class.WTF::StringView"* %4 to i8*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %32 = xor i32 %13, -1
  %33 = lshr i32 %13, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %53

45:                                               ; preds = %72
  %46 = ptrtoint %"class.WTF::String"* %78 to i64
  br label %47

47:                                               ; preds = %45, %2
  %48 = phi i64 [ %17, %2 ], [ %46, %45 ]
  %49 = phi %"class.WTF::String"* [ null, %2 ], [ %73, %45 ]
  %50 = icmp eq %"class.WTF::String"* %49, null
  %51 = ptrtoint %"class.WTF::String"* %49 to i64
  %52 = select i1 %50, i64 %48, i64 %51
  br label %83

53:                                               ; preds = %72, %21
  %54 = phi %"class.WTF::String"* [ null, %21 ], [ %73, %72 ]
  %55 = phi %"class.WTF::StringImpl"* [ %19, %21 ], [ %81, %72 ]
  %56 = phi i64 [ %17, %21 ], [ %79, %72 ]
  %57 = phi %"class.WTF::String"* [ %16, %21 ], [ %78, %72 ]
  %58 = phi i64 [ %15, %21 ], [ %77, %72 ]
  %59 = phi i64 [ 0, %21 ], [ %75, %72 ]
  %60 = bitcast %"class.WTF::String"* %57 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %72, label %63

63:                                               ; preds = %53
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %23, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %25, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %28, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %30, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %31, align 8
  %71 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  br i1 %71, label %83, label %72

72:                                               ; preds = %63, %53
  %73 = phi %"class.WTF::String"* [ %54, %63 ], [ %57, %53 ]
  %74 = icmp eq i64 %59, 0
  %75 = select i1 %74, i64 %44, i64 %59
  %76 = add i64 %75, %58
  %77 = and i64 %76, %10
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 %77
  %79 = ptrtoint %"class.WTF::String"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %45, label %53

83:                                               ; preds = %63, %47
  %84 = phi i64 [ %52, %47 ], [ %56, %63 ]
  %85 = phi i8 [ 0, %47 ], [ 1, %63 ]
  %86 = inttoptr i64 %84 to %"class.WTF::String"*
  %87 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %86, 0
  %88 = insertvalue { %"class.WTF::String"*, i8 } %87, i8 %85, 1
  ret { %"class.WTF::String"*, i8 } %88
}

declare void @_ZN3net19HttpResponseHeadersC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.286"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.286", %"class.WTF::Vector.286"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.286", %"class.WTF::Vector.286"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %8 = icmp ugt %"class.WTF::AtomicString"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::AtomicString"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.286", %"class.WTF::Vector.286"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::AtomicString"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.286"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::AtomicString"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::AtomicString"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !13

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.286"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.286"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %56 = ptrtoint %"class.WTF::AtomicString"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.286", %"class.WTF::Vector.286"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !13

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::AtomicString"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.286"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::AtomicString"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::AtomicString"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !13

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.286"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.286"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::AtomicString"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::AtomicString"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::AtomicString"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::AtomicString"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %101, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %100, i64 %103, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #15
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !9

122:                                              ; preds = %113
  tail call void @llvm.trap() #15
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #14

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.330"*, %"class.std::__1::unique_ptr.333"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.333"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.333"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.333"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.333"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.333"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.333"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !13

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.330"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.333"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.333"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.333"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !13

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.333"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.333"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.333"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !13

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.330"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.333"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.333"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.333"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.333"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.333"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::ServerTimingHeader"* null, %"class.blink::ServerTimingHeader"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.333"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18ServerTimingHeaderENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom21ContentSecurityPolicyD1Ev(%"class.network::mojom::ContentSecurityPolicy"*) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_RiS5_RbS7_EEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_RiS5_RbS7_EEEN4mojo9StructPtrIS2_EEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN7network5mojom14ConvertToBlinkIhhEEN3WTF6VectorIT0_Lj0ENS2_18PartitionAllocatorEEERKNSt3__16vectorIT_NS7_9allocatorIS9_EEEE: argument 0"}
!8 = distinct !{!8, !"_ZN7network5mojom14ConvertToBlinkIhhEEN3WTF6VectorIT0_Lj0ENS2_18PartitionAllocatorEEERKNSt3__16vectorIT_NS7_9allocatorIS9_EEEE"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN7network5mojom5blink13CSPHashSource3NewIJRNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZN7network5mojom5blink13CSPHashSource3NewIJRNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_"}
!13 = !{!"branch_weights", i32 2000, i32 1}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringERNS0_25ContentSecurityPolicyTypeERNS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringERNS0_25ContentSecurityPolicyTypeERNS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN7network5mojom14ConvertToBlinkINS0_16CSPDirectiveNameEN4mojo9StructPtrINS0_13CSPSourceListEEES2_NS4_INS0_5blink13CSPSourceListEEEEEN3WTF7HashMapIT1_T2_NSA_11DefaultHashISC_E4HashENSA_10HashTraitsISC_EENSH_ISD_EENSA_18PartitionAllocatorEEERKN4base8flat_mapIT_T0_NSt3__14lessIvEENSQ_6vectorINSQ_4pairISO_SP_EENSQ_9allocatorISV_EEEEEE: argument 0"}
!19 = distinct !{!19, !"_ZN7network5mojom14ConvertToBlinkINS0_16CSPDirectiveNameEN4mojo9StructPtrINS0_13CSPSourceListEEES2_NS4_INS0_5blink13CSPSourceListEEEEEN3WTF7HashMapIT1_T2_NSA_11DefaultHashISC_E4HashENSA_10HashTraitsISC_EENSH_ISD_EENSA_18PartitionAllocatorEEERKN4base8flat_mapIT_T0_NSt3__14lessIvEENSQ_6vectorINSQ_4pairISO_SP_EENSQ_9allocatorISV_EEEEEE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN7network5mojom14ConvertToBlinkERKN4mojo16InlinedStructPtrINS0_27ContentSecurityPolicyHeaderEEE: argument 0"}
!22 = distinct !{!22, !"_ZN7network5mojom14ConvertToBlinkERKN4mojo16InlinedStructPtrINS0_27ContentSecurityPolicyHeaderEEE"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringERNS0_25ContentSecurityPolicyTypeERNS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringERNS0_25ContentSecurityPolicyTypeERNS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue12NewAllowStarEb: argument 0"}
!28 = distinct !{!28, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue12NewAllowStarEb"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue9NewOriginERK13scoped_refptrIKN5blink14SecurityOriginEE: argument 0"}
!31 = distinct !{!31, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue9NewOriginERK13scoped_refptrIKN5blink14SecurityOriginEE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue15NewErrorMessageERKN3WTF6StringE: argument 0"}
!34 = distinct !{!34, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue15NewErrorMessageERKN3WTF6StringE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN7network5mojom5blink10LinkHeader3NewIJN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeEN3WTF6StringEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZN7network5mojom5blink10LinkHeader3NewIJN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeEN3WTF6StringEEEEN4mojo9StructPtrIS2_EEDpOT_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN7network5mojom5blink17TimingAllowOrigin6NewAllEh: argument 0"}
!40 = distinct !{!40, !"_ZN7network5mojom5blink17TimingAllowOrigin6NewAllEh"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN7network5mojom14ConvertToBlinkINS0_18WebClientHintsTypeES2_EEN3WTF6VectorIT0_Lj0ENS3_18PartitionAllocatorEEERKNSt3__16vectorIT_NS8_9allocatorISA_EEEE: argument 0"}
!43 = distinct !{!43, !"_ZN7network5mojom14ConvertToBlinkINS0_18WebClientHintsTypeES2_EEN3WTF6VectorIT0_Lj0ENS3_18PartitionAllocatorEEERKNSt3__16vectorIT_NS8_9allocatorISA_EEEE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN4absl13make_optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEEEENS_8optionalINSt3__15decayIT_E4typeEEEOSB_: argument 0"}
!46 = distinct !{!46, !"_ZN4absl13make_optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEEEENS_8optionalINSt3__15decayIT_E4typeEEEOSB_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN7network5mojom14ConvertToBlinkINS0_18WebClientHintsTypeES2_EEN3WTF6VectorIT0_Lj0ENS3_18PartitionAllocatorEEERKNSt3__16vectorIT_NS8_9allocatorISA_EEEE: argument 0"}
!49 = distinct !{!49, !"_ZN7network5mojom14ConvertToBlinkINS0_18WebClientHintsTypeES2_EEN3WTF6VectorIT0_Lj0ENS3_18PartitionAllocatorEEERKNSt3__16vectorIT_NS8_9allocatorISA_EEEE"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN4absl13make_optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEEEENS_8optionalINSt3__15decayIT_E4typeEEEOSB_: argument 0"}
!52 = distinct !{!52, !"_ZN4absl13make_optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEEEENS_8optionalINSt3__15decayIT_E4typeEEEOSB_"}
!53 = distinct !{!53, !54}
!54 = !{!"llvm.loop.isvectorized", i32 1}
!55 = distinct !{!55, !56, !54}
!56 = !{!"llvm.loop.unroll.runtime.disable"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!59 = distinct !{!59, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!62 = distinct !{!62, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!63 = !{!"branch_weights", i32 1, i32 1048575}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN5blink9WebString10FromLatin1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!66 = distinct !{!66, !"_ZN5blink9WebString10FromLatin1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!69 = distinct !{!69, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!70 = distinct !{!70, !71}
!71 = !{!"llvm.loop.unroll.disable"}
!72 = distinct !{!72, !71}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !71}
!75 = distinct !{!75, !71}
!76 = distinct !{!76, !71}
!77 = distinct !{!77, !71}
!78 = distinct !{!78, !71}
!79 = distinct !{!79, !71}
!80 = distinct !{!80, !71}
