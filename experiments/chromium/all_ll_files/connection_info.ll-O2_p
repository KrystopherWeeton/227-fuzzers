; ModuleID = '../../third_party/webrtc/p2p/base/connection_info.cc'
source_filename = "../../third_party/webrtc/p2p/base/connection_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.cricket::ConnectionInfo" = type { i8, i8, i8, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.cricket::Candidate", %"class.cricket::Candidate", i8*, i32, i64, i8, i64, %"class.absl::optional" }
%"class.cricket::Candidate" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::SocketAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.rtc::SocketAddress", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, i16, %"class.std::__1::basic_string" }
%"class.rtc::SocketAddress" = type <{ %"class.std::__1::basic_string", %"class.rtc::IPAddress", i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.1, [4 x i8] }>
%union.anon.1 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.2 }
%union.anon.2 = type { [4 x i32] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.3 }
%union.anon.3 = type { i32 }

@_ZN7cricket14ConnectionInfoC1Ev = hidden unnamed_addr alias void (%"struct.cricket::ConnectionInfo"*), void (%"struct.cricket::ConnectionInfo"*)* @_ZN7cricket14ConnectionInfoC2Ev
@_ZN7cricket14ConnectionInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"*), void (%"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"*)* @_ZN7cricket14ConnectionInfoC2ERKS0_
@_ZN7cricket14ConnectionInfoD1Ev = hidden unnamed_addr alias void (%"struct.cricket::ConnectionInfo"*), void (%"struct.cricket::ConnectionInfo"*)* @_ZN7cricket14ConnectionInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket14ConnectionInfoC2Ev(%"struct.cricket::ConnectionInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 18
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 5, i1 false)
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 104, i1 false)
  tail call void @_ZN7cricket9CandidateC1Ev(%"class.cricket::Candidate"* %4) #4
  %6 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 19
  tail call void @_ZN7cricket9CandidateC1Ev(%"class.cricket::Candidate"* %6) #4
  %7 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 20
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 21
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 22
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 23
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 24
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 4
  ret void
}

declare void @_ZN7cricket9CandidateC1Ev(%"class.cricket::Candidate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket14ConnectionInfoC2ERKS0_(%"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"* dereferenceable(1040)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 112, i1 false)
  %5 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 18
  %6 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %1, i64 0, i32 18
  tail call void @_ZN7cricket9CandidateC1ERKS0_(%"class.cricket::Candidate"* %5, %"class.cricket::Candidate"* dereferenceable(440) %6) #4
  %7 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 19
  %8 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %1, i64 0, i32 19
  tail call void @_ZN7cricket9CandidateC1ERKS0_(%"class.cricket::Candidate"* %7, %"class.cricket::Candidate"* dereferenceable(440) %8) #4
  %9 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 20
  %10 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %1, i64 0, i32 20
  %11 = bitcast i8** %9 to i8*
  %12 = bitcast i8** %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 48, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7cricket9CandidateC1ERKS0_(%"class.cricket::Candidate"*, %"class.cricket::Candidate"* dereferenceable(440)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket14ConnectionInfoD2Ev(%"struct.cricket::ConnectionInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 19
  tail call void @_ZN7cricket9CandidateD1Ev(%"class.cricket::Candidate"* %2) #4
  %3 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %0, i64 0, i32 18
  tail call void @_ZN7cricket9CandidateD1Ev(%"class.cricket::Candidate"* %3) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7cricket9CandidateD1Ev(%"class.cricket::Candidate"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
