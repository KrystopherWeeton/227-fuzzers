; ModuleID = '../../components/crash/core/browser/crash_upload_list_crashpad.cc'
source_filename = "../../components/crash/core/browser/crash_upload_list_crashpad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CrashUploadListCrashpad = type { %class.UploadList }
%class.UploadList = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.base::SequenceCheckerDoNothing", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.std::__1::vector" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"*, %"class.std::__1::__compressed_pair.12" }
%"struct.UploadList::UploadInfo" = type { %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"class.base::Time", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string.3" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.UploadList::UploadInfo"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.crash_reporter::Report"*, %"struct.crash_reporter::Report"*, %"class.std::__1::__compressed_pair.19" }
%"struct.crash_reporter::Report" = type { [64 x i8], i64, [64 x i8], i64, i32 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.crash_reporter::Report"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN10UploadList10UploadInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTV23CrashUploadListCrashpad = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CrashUploadListCrashpad*)* @_ZN23CrashUploadListCrashpadD2Ev to i8*), i8* bitcast (void (%class.CrashUploadListCrashpad*)* @_ZN23CrashUploadListCrashpadD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %class.CrashUploadListCrashpad*)* @_ZN23CrashUploadListCrashpad14LoadUploadListEv to i8*), i8* bitcast (void (%class.CrashUploadListCrashpad*, %"class.base::Time"*, %"class.base::Time"*)* @_ZN23CrashUploadListCrashpad15ClearUploadListERKN4base4TimeES3_ to i8*), i8* bitcast (void (%class.CrashUploadListCrashpad*, %"class.std::__1::basic_string"*)* @_ZN23CrashUploadListCrashpad19RequestSingleUploadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i8*)] }, align 8

@_ZN23CrashUploadListCrashpadC1Ev = hidden unnamed_addr alias void (%class.CrashUploadListCrashpad*), void (%class.CrashUploadListCrashpad*)* @_ZN23CrashUploadListCrashpadC2Ev
@_ZN23CrashUploadListCrashpadD1Ev = hidden unnamed_addr alias void (%class.CrashUploadListCrashpad*), void (%class.CrashUploadListCrashpad*)* @_ZN23CrashUploadListCrashpadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CrashUploadListCrashpadC2Ev(%class.CrashUploadListCrashpad*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CrashUploadListCrashpad, %class.CrashUploadListCrashpad* %0, i64 0, i32 0
  tail call void @_ZN10UploadListC2Ev(%class.UploadList* %2) #9
  %3 = getelementptr inbounds %class.CrashUploadListCrashpad, %class.CrashUploadListCrashpad* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV23CrashUploadListCrashpad, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN10UploadListC2Ev(%class.UploadList*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10UploadListD2Ev(%class.UploadList*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CrashUploadListCrashpadD2Ev(%class.CrashUploadListCrashpad*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CrashUploadListCrashpad, %class.CrashUploadListCrashpad* %0, i64 0, i32 0
  tail call void @_ZN10UploadListD2Ev(%class.UploadList* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CrashUploadListCrashpadD0Ev(%class.CrashUploadListCrashpad*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CrashUploadListCrashpad, %class.CrashUploadListCrashpad* %0, i64 0, i32 0
  tail call void @_ZN10UploadListD2Ev(%class.UploadList* %2) #9
  %3 = bitcast %class.CrashUploadListCrashpad* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CrashUploadListCrashpad14LoadUploadListEv(%"class.std::__1::vector"* noalias sret, %class.CrashUploadListCrashpad* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.17", align 8
  %4 = alloca %"struct.UploadList::UploadInfo", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::Time", align 8
  %9 = bitcast %"class.std::__1::vector.17"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #9
  call void @_ZN14crash_reporter10GetReportsEPNSt3__16vectorINS_6ReportENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.17"* nonnull %3) #9
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  %15 = load %"struct.crash_reporter::Report"*, %"struct.crash_reporter::Report"** %10, align 8
  %16 = load %"struct.crash_reporter::Report"*, %"struct.crash_reporter::Report"** %11, align 8
  %17 = icmp eq %"struct.crash_reporter::Report"* %15, %16
  br i1 %17, label %39, label %18

18:                                               ; preds = %2
  %19 = bitcast %"struct.UploadList::UploadInfo"* %4 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.base::Time"* %6 to i8*
  %27 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = bitcast %"class.base::Time"* %8 to i8*
  %35 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  %36 = bitcast %"struct.UploadList::UploadInfo"** %12 to i64*
  br label %47

37:                                               ; preds = %116
  %38 = load %"struct.crash_reporter::Report"*, %"struct.crash_reporter::Report"** %10, align 8
  br label %39

39:                                               ; preds = %37, %2
  %40 = phi %"struct.crash_reporter::Report"* [ %38, %37 ], [ %15, %2 ]
  %41 = icmp eq %"struct.crash_reporter::Report"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = ptrtoint %"struct.crash_reporter::Report"* %40 to i64
  %44 = bitcast %"struct.crash_reporter::Report"** %11 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.crash_reporter::Report", %"struct.crash_reporter::Report"* %40, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %39, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  ret void

47:                                               ; preds = %18, %116
  %48 = phi %"struct.crash_reporter::Report"* [ %15, %18 ], [ %117, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %19) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %49 = getelementptr inbounds %"struct.crash_reporter::Report", %"struct.crash_reporter::Report"* %48, i64 0, i32 2, i64 0
  %50 = call i64 @strlen(i8* %49) #9
  %51 = icmp ugt i64 %50, -17
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %53) #11
  unreachable

54:                                               ; preds = %47
  %55 = icmp ult i64 %50, 23
  br i1 %55, label %61, label %56

56:                                               ; preds = %54
  %57 = add nuw i64 %50, 16
  %58 = and i64 %57, -16
  %59 = call i8* @_Znwm(i64 %58) #10
  store i8* %59, i8** %21, align 8
  %60 = or i64 %58, -9223372036854775808
  store i64 %60, i64* %22, align 8
  store i64 %50, i64* %23, align 8
  br label %64

61:                                               ; preds = %54
  %62 = trunc i64 %50 to i8
  store i8 %62, i8* %25, align 1
  %63 = icmp eq i64 %50, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %61, %56
  %65 = phi i8* [ %59, %56 ], [ %20, %61 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 %49, i64 %50, i1 false) #9
  br label %66

66:                                               ; preds = %61, %64
  %67 = phi i8* [ %20, %61 ], [ %65, %64 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 %50
  store i8 0, i8* %68, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %69 = getelementptr inbounds %"struct.crash_reporter::Report", %"struct.crash_reporter::Report"* %48, i64 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %70) #9
  store i64 %71, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %72 = getelementptr inbounds %"struct.crash_reporter::Report", %"struct.crash_reporter::Report"* %48, i64 0, i32 0, i64 0
  %73 = call i64 @strlen(i8* %72) #9
  %74 = icmp ugt i64 %73, -17
  br i1 %74, label %75, label %77

75:                                               ; preds = %66
  %76 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %76) #11
  unreachable

77:                                               ; preds = %66
  %78 = icmp ult i64 %73, 23
  br i1 %78, label %84, label %79

79:                                               ; preds = %77
  %80 = add nuw i64 %73, 16
  %81 = and i64 %80, -16
  %82 = call i8* @_Znwm(i64 %81) #10
  store i8* %82, i8** %29, align 8
  %83 = or i64 %81, -9223372036854775808
  store i64 %83, i64* %30, align 8
  store i64 %73, i64* %31, align 8
  br label %87

84:                                               ; preds = %77
  %85 = trunc i64 %73 to i8
  store i8 %85, i8* %33, align 1
  %86 = icmp eq i64 %73, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %84, %79
  %88 = phi i8* [ %82, %79 ], [ %28, %84 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %88, i8* align 1 %72, i64 %73, i1 false) #9
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi i8* [ %28, %84 ], [ %88, %87 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 %73
  store i8 0, i8* %91, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %92 = getelementptr inbounds %"struct.crash_reporter::Report", %"struct.crash_reporter::Report"* %48, i64 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %93) #9
  store i64 %94, i64* %35, align 8
  %95 = getelementptr inbounds %"struct.crash_reporter::Report", %"struct.crash_reporter::Report"* %48, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = icmp ult i32 %96, 3
  %98 = select i1 %97, i32 %96, i32 3
  call void @_ZN10UploadList10UploadInfoC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4base4TimeES9_SD_NS0_5StateE(%"struct.UploadList::UploadInfo"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.base::Time"* nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.base::Time"* nonnull dereferenceable(8) %8, i32 %98) #9
  %99 = load %"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"** %12, align 8
  %100 = load %"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"** %13, align 8
  %101 = icmp ult %"struct.UploadList::UploadInfo"* %99, %100
  br i1 %101, label %102, label %105

102:                                              ; preds = %89
  call void @_ZN10UploadList10UploadInfoC1ERKS0_(%"struct.UploadList::UploadInfo"* %99, %"struct.UploadList::UploadInfo"* nonnull dereferenceable(120) %4) #9
  %103 = getelementptr inbounds %"struct.UploadList::UploadInfo", %"struct.UploadList::UploadInfo"* %99, i64 1
  %104 = ptrtoint %"struct.UploadList::UploadInfo"* %103 to i64
  store i64 %104, i64* %36, align 8
  br label %106

105:                                              ; preds = %89
  call void @_ZNSt3__16vectorIN10UploadList10UploadInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.UploadList::UploadInfo"* nonnull dereferenceable(120) %4) #9
  br label %106

106:                                              ; preds = %102, %105
  call void @_ZN10UploadList10UploadInfoD1Ev(%"struct.UploadList::UploadInfo"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  %107 = load i8, i8* %33, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %112 = load i8, i8* %25, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %115) #10
  br label %116

116:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %19) #9
  %117 = getelementptr inbounds %"struct.crash_reporter::Report", %"struct.crash_reporter::Report"* %48, i64 1
  %118 = icmp eq %"struct.crash_reporter::Report"* %117, %16
  br i1 %118, label %37, label %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN14crash_reporter10GetReportsEPNSt3__16vectorINS_6ReportENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.17"*) local_unnamed_addr #1

declare i64 @_ZN4base4Time9FromTimeTEl(i64) local_unnamed_addr #1

declare void @_ZN10UploadList10UploadInfoC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4base4TimeES9_SD_NS0_5StateE(%"struct.UploadList::UploadInfo"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Time"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Time"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10UploadList10UploadInfoD1Ev(%"struct.UploadList::UploadInfo"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CrashUploadListCrashpad15ClearUploadListERKN4base4TimeES3_(%class.CrashUploadListCrashpad* nocapture readnone, %"class.base::Time"* dereferenceable(8), %"class.base::Time"* dereferenceable(8)) unnamed_addr #0 align 2 {
  tail call void @_ZN14crash_reporter19ClearReportsBetweenERKN4base4TimeES3_(%"class.base::Time"* dereferenceable(8) %1, %"class.base::Time"* dereferenceable(8) %2) #9
  ret void
}

declare void @_ZN14crash_reporter19ClearReportsBetweenERKN4base4TimeES3_(%"class.base::Time"* dereferenceable(8), %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CrashUploadListCrashpad19RequestSingleUploadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.CrashUploadListCrashpad* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN14crash_reporter24RequestSingleCrashUploadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  ret void
}

declare void @_ZN14crash_reporter24RequestSingleCrashUploadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10UploadList10UploadInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.UploadList::UploadInfo"* dereferenceable(120)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.UploadList::UploadInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 153722867280912930
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.UploadList::UploadInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 120
  %20 = icmp ult i64 %19, 76861433640456465
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 153722867280912930, %14 ]
  %28 = mul i64 %27, 120
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.UploadList::UploadInfo"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.UploadList::UploadInfo"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.UploadList::UploadInfo", %"struct.UploadList::UploadInfo"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.UploadList::UploadInfo", %"struct.UploadList::UploadInfo"* %33, i64 %32
  %36 = ptrtoint %"struct.UploadList::UploadInfo"* %35 to i64
  tail call void @_ZN10UploadList10UploadInfoC1ERKS0_(%"struct.UploadList::UploadInfo"* %34, %"struct.UploadList::UploadInfo"* dereferenceable(120) %1) #9
  %37 = getelementptr inbounds %"struct.UploadList::UploadInfo", %"struct.UploadList::UploadInfo"* %34, i64 1
  %38 = ptrtoint %"struct.UploadList::UploadInfo"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"** %39, align 8
  %41 = load %"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"** %3, align 8
  %42 = icmp eq %"struct.UploadList::UploadInfo"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.UploadList::UploadInfo"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.UploadList::UploadInfo"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.UploadList::UploadInfo"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.UploadList::UploadInfo", %"struct.UploadList::UploadInfo"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.UploadList::UploadInfo", %"struct.UploadList::UploadInfo"* %47, i64 -1
  tail call void @_ZN10UploadList10UploadInfoC1ERKS0_(%"struct.UploadList::UploadInfo"* %48, %"struct.UploadList::UploadInfo"* dereferenceable(120) %49) #9
  %50 = icmp eq %"struct.UploadList::UploadInfo"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.UploadList::UploadInfo"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.UploadList::UploadInfo"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.UploadList::UploadInfo"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.UploadList::UploadInfo"*
  %60 = icmp eq %"struct.UploadList::UploadInfo"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.UploadList::UploadInfo"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.UploadList::UploadInfo", %"struct.UploadList::UploadInfo"* %62, i64 -1
  tail call void @_ZN10UploadList10UploadInfoD1Ev(%"struct.UploadList::UploadInfo"* %63) #9
  %64 = icmp eq %"struct.UploadList::UploadInfo"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN10UploadList10UploadInfoC1ERKS0_(%"struct.UploadList::UploadInfo"*, %"struct.UploadList::UploadInfo"* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
