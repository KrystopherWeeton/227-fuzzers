; ModuleID = '../../third_party/dawn/src/dawn_native/QuerySet.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/QuerySet.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::QuerySetBase" = type { %"class.dawn_native::ObjectBase", i32, i32, %"class.std::__1::vector.67", i32, %"class.std::__1::vector.74" }
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %class.Ref.22, %"class.std::__1::unique_ptr.24", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.22 = type { %class.RefBase.23 }
%class.RefBase.23 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.30" }
%"struct.std::__1::array.30" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.31" }
%"class.std::__1::bitset.31" = type { %"class.std::__1::__bitset.32" }
%"class.std::__1::__bitset.32" = type { i64 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { i32*, i32*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i32* }
%"class.std::__1::vector.74" = type { i64*, i64, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i64 }
%class.Result = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.51" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.dawn_native::QuerySetDescriptor" = type <{ %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32, i32*, i32, [4 x i8] }>
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.dawn_native::(anonymous namespace)::ErrorQuerySet" = type { %"class.dawn_native::QuerySetBase" }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"nextInChain must be nullptr\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"../../third_party/dawn/src/dawn_native/QuerySet.cpp\00", align 1
@__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE = private unnamed_addr constant [27 x i8] c"ValidateQuerySetDescriptor\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Max query count exceeded\00", align 1
@.str.3 = private unnamed_addr constant [69 x i8] c"The pipeline statistics should not be set if query type is Occlusion\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"The pipeline statistics query feature is not supported\00", align 1
@.str.5 = private unnamed_addr constant [76 x i8] c"At least one pipeline statistics is set if query type is PipelineStatistics\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"Duplicate pipeline statistics found\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"The timestamp query feature is not supported\00", align 1
@.str.8 = private unnamed_addr constant [69 x i8] c"The pipeline statistics should not be set if query type is Timestamp\00", align 1
@_ZTVN11dawn_native12QuerySetBaseE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::QuerySetBase"*)* @_ZN11dawn_native12QuerySetBaseD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::QuerySetBase"*)* @_ZN11dawn_native12QuerySetBaseD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.9 = private unnamed_addr constant [37 x i8] c"Destroyed query set used in a submit\00", align 1
@__func__._ZNK11dawn_native12QuerySetBase25ValidateCanUseInSubmitNowEv = private unnamed_addr constant [26 x i8] c"ValidateCanUseInSubmitNow\00", align 1
@__func__._ZNK11dawn_native12QuerySetBase15ValidateDestroyEv = private unnamed_addr constant [16 x i8] c"ValidateDestroy\00", align 1
@_ZTVN11dawn_native12_GLOBAL__N_113ErrorQuerySetE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::QuerySetBase"*)* @_ZN11dawn_native12QuerySetBaseD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::(anonymous namespace)::ErrorQuerySet"*)* @_ZN11dawn_native12_GLOBAL__N_113ErrorQuerySetD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (void (%"class.dawn_native::(anonymous namespace)::ErrorQuerySet"*)* @_ZN11dawn_native12_GLOBAL__N_113ErrorQuerySet11DestroyImplEv to i8*)] }, align 8

@_ZN11dawn_native12QuerySetBaseD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::QuerySetBase"*), void (%"class.dawn_native::QuerySetBase"*)* @_ZN11dawn_native12QuerySetBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE(%class.Result* noalias nocapture sret, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::QuerySetDescriptor"* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.Result, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::set", align 8
  %11 = alloca %class.Result, align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 0
  %16 = load %"struct.dawn_native::ChainedStruct"*, %"struct.dawn_native::ChainedStruct"** %15, align 8
  %17 = icmp eq %"struct.dawn_native::ChainedStruct"* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %3
  %19 = tail call i8* @_Znwm(i64 32) #13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %22, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i64 27, i1 false) #14
  %23 = getelementptr inbounds i8, i8* %19, i64 27
  store i8 0, i8* %23, align 1
  %24 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 43) #14
  %25 = ptrtoint %"class.dawn_native::ErrorData"* %24 to i64
  %26 = bitcast %class.Result* %0 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %311

31:                                               ; preds = %18
  %32 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %32) #13
  br label %311

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = icmp ugt i32 %35, 8192
  br i1 %36, label %37, label %52

37:                                               ; preds = %33
  %38 = tail call i8* @_Znwm(i64 32) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast i64* %40 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %41, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i64 24, i1 false) #14
  %42 = getelementptr inbounds i8, i8* %38, i64 24
  store i8 0, i8* %42, align 1
  %43 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 47) #14
  %44 = ptrtoint %"class.dawn_native::ErrorData"* %43 to i64
  %45 = bitcast %class.Result* %0 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %311

50:                                               ; preds = %37
  %51 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %51) #13
  br label %311

52:                                               ; preds = %33
  %53 = bitcast %class.Result* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  %54 = getelementptr inbounds %class.Result, %class.Result* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %54, align 8
  %55 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  call void @_ZN11dawn_native17ValidateQueryTypeEN4wgpu9QueryTypeE(%class.Result* nonnull sret %6, i32 %56) #14
  %57 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %54, align 8
  %58 = icmp eq %"class.dawn_native::ErrorData"* %57, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %54, align 8
  br i1 %58, label %85, label %59, !prof !2

59:                                               ; preds = %52
  %60 = ptrtoint %"class.dawn_native::ErrorData"* %57 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %57, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 50) #14
  %61 = bitcast %class.Result* %0 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %54, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %54, align 8
  %63 = icmp eq %"class.dawn_native::ErrorData"* %62, null
  br i1 %63, label %84, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %62, i64 0, i32 2, i32 0, i32 0
  %66 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %65, align 8
  %67 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %66 to i64
  %70 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %62, i64 0, i32 2, i32 0, i32 1
  %71 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %66 to i8*
  call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %68, %64
  %74 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %62, i64 0, i32 1
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %79, %73
  %83 = bitcast %"class.dawn_native::ErrorData"* %62 to i8*
  call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %59, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  br label %311

85:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  %86 = load i32, i32* %55, align 8
  switch i32 %86, label %309 [
    i32 0, label %87
    i32 1, label %106
    i32 2, label %270
  ]

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 5
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %309, label %91

91:                                               ; preds = %87
  %92 = call i8* @_Znwm(i64 80) #13
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %92, i8** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> <i64 68, i64 -9223372036854775728>, <2 x i64>* %95, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %92, i8* align 1 getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i64 68, i1 false) #14
  %96 = getelementptr inbounds i8, i8* %92, i64 68
  store i8 0, i8* %96, align 1
  %97 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 56) #14
  %98 = ptrtoint %"class.dawn_native::ErrorData"* %97 to i64
  %99 = bitcast %class.Result* %0 to i64*
  store i64 %98, i64* %99, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %311

104:                                              ; preds = %91
  %105 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %105) #13
  br label %311

106:                                              ; preds = %85
  %107 = call zeroext i1 @_ZNK11dawn_native10DeviceBase18IsExtensionEnabledENS_9ExtensionE(%"class.dawn_native::DeviceBase"* %1, i32 2) #14
  br i1 %107, label %123, label %108

108:                                              ; preds = %106
  %109 = call i8* @_Znwm(i64 64) #13
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %109, i8** %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = bitcast i64* %111 to <2 x i64>*
  store <2 x i64> <i64 54, i64 -9223372036854775744>, <2 x i64>* %112, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* align 1 getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i64 54, i1 false) #14
  %113 = getelementptr inbounds i8, i8* %109, i64 54
  store i8 0, i8* %113, align 1
  %114 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 63) #14
  %115 = ptrtoint %"class.dawn_native::ErrorData"* %114 to i64
  %116 = bitcast %class.Result* %0 to i64*
  store i64 %115, i64* %116, align 8
  %117 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %311

121:                                              ; preds = %108
  %122 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %122) #13
  br label %311

123:                                              ; preds = %106
  %124 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 5
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %142

127:                                              ; preds = %123
  %128 = call i8* @_Znwm(i64 80) #13
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %128, i8** %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = bitcast i64* %130 to <2 x i64>*
  store <2 x i64> <i64 75, i64 -9223372036854775728>, <2 x i64>* %131, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %128, i8* align 1 getelementptr inbounds ([76 x i8], [76 x i8]* @.str.5, i64 0, i64 0), i64 75, i1 false) #14
  %132 = getelementptr inbounds i8, i8* %128, i64 75
  store i8 0, i8* %132, align 1
  %133 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 69) #14
  %134 = ptrtoint %"class.dawn_native::ErrorData"* %133 to i64
  %135 = bitcast %class.Result* %0 to i64*
  store i64 %134, i64* %135, align 8
  %136 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %311

140:                                              ; preds = %127
  %141 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %141) #13
  br label %311

142:                                              ; preds = %123
  %143 = bitcast %"class.std::__1::set"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #14
  %144 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %147 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %148 = bitcast %"class.std::__1::__tree_node_base"** %145 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %147, %"class.std::__1::__tree_end_node"** %144, align 8
  %149 = bitcast %class.Result* %11 to i8*
  %150 = getelementptr inbounds %class.Result, %class.Result* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 4
  %152 = bitcast %"class.std::__1::__tree_end_node"* %147 to %"class.std::__1::__tree_node"**
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 0, i32 0
  %154 = bitcast %"class.std::__1::set"* %10 to i64*
  br label %155

155:                                              ; preds = %142, %258
  %156 = phi i64 [ 0, %142 ], [ %263, %258 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #14
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %150, align 8
  %157 = load i32*, i32** %151, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 %156
  %159 = load i32, i32* %158, align 4
  call void @_ZN11dawn_native29ValidatePipelineStatisticNameEN4wgpu21PipelineStatisticNameE(%class.Result* nonnull sret %11, i32 %159) #14
  %160 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %150, align 8
  %161 = icmp eq %"class.dawn_native::ErrorData"* %160, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %150, align 8
  br i1 %161, label %188, label %162, !prof !2

162:                                              ; preds = %155
  %163 = ptrtoint %"class.dawn_native::ErrorData"* %160 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %160, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 74) #14
  %164 = bitcast %class.Result* %0 to i64*
  store i64 %163, i64* %164, align 8
  %165 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %150, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %150, align 8
  %166 = icmp eq %"class.dawn_native::ErrorData"* %165, null
  br i1 %166, label %187, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %165, i64 0, i32 2, i32 0, i32 0
  %169 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %168, align 8
  %170 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %167
  %172 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %169 to i64
  %173 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %165, i64 0, i32 2, i32 0, i32 1
  %174 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %169 to i8*
  call void @_ZdlPv(i8* %175) #13
  br label %176

176:                                              ; preds = %171, %167
  %177 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %165, i64 0, i32 1
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %182, %176
  %186 = bitcast %"class.dawn_native::ErrorData"* %165 to i8*
  call void @_ZdlPv(i8* %186) #13
  br label %187

187:                                              ; preds = %162, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #14
  br label %267

188:                                              ; preds = %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #14
  %189 = load i32*, i32** %151, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 %156
  %191 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %152, align 8
  %192 = icmp eq %"class.std::__1::__tree_node"* %191, null
  br i1 %192, label %221, label %193

193:                                              ; preds = %188
  %194 = load i32, i32* %190, align 4
  br label %195

195:                                              ; preds = %217, %193
  %196 = phi %"class.std::__1::__tree_node"* [ %220, %217 ], [ %191, %193 ]
  %197 = phi %"class.std::__1::__tree_node_base"** [ %219, %217 ], [ %145, %193 ]
  %198 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp ult i32 %194, %199
  br i1 %200, label %201, label %207

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %205, label %217

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0
  br label %221

207:                                              ; preds = %195
  %208 = icmp ult i32 %199, %194
  br i1 %208, label %209, label %215

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 1
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, null
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0
  br label %221

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0
  br label %221

217:                                              ; preds = %209, %201
  %218 = phi %"class.std::__1::__tree_node_base"* [ %203, %201 ], [ %211, %209 ]
  %219 = phi %"class.std::__1::__tree_node_base"** [ %202, %201 ], [ %210, %209 ]
  %220 = bitcast %"class.std::__1::__tree_node_base"* %218 to %"class.std::__1::__tree_node"*
  br label %195

221:                                              ; preds = %188, %215, %213, %205
  %222 = phi %"class.std::__1::__tree_end_node"* [ %206, %205 ], [ %214, %213 ], [ %216, %215 ], [ %147, %188 ]
  %223 = phi %"class.std::__1::__tree_node_base"** [ %202, %205 ], [ %210, %213 ], [ %197, %215 ], [ %153, %188 ]
  %224 = bitcast %"class.std::__1::__tree_node_base"** %223 to %"class.std::__1::__tree_node"**
  %225 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node"* %225, null
  br i1 %226, label %227, label %243

227:                                              ; preds = %221
  %228 = call i8* @_Znwm(i64 32) #13, !noalias !3
  %229 = getelementptr inbounds i8, i8* %228, i64 28
  %230 = bitcast i8* %229 to i32*
  %231 = load i32, i32* %190, align 4, !noalias !3
  store i32 %231, i32* %230, align 4, !noalias !3
  %232 = bitcast i8* %228 to %"class.std::__1::__tree_node_base"*
  %233 = getelementptr inbounds i8, i8* %228, i64 16
  %234 = bitcast i8* %233 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %222, %"class.std::__1::__tree_end_node"** %234, align 8
  %235 = bitcast %"class.std::__1::__tree_node_base"** %223 to i8**
  store i8* %228, i8** %235, align 8
  %236 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %144, align 8
  %237 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %236, i64 0, i32 0
  %238 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %237, align 8
  %239 = icmp eq %"class.std::__1::__tree_node_base"* %238, null
  br i1 %239, label %258, label %240

240:                                              ; preds = %227
  %241 = ptrtoint %"class.std::__1::__tree_node_base"* %238 to i64
  store i64 %241, i64* %154, align 8
  %242 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  br label %258

243:                                              ; preds = %221
  %244 = call i8* @_Znwm(i64 48) #13
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %244, i8** %245, align 8
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = bitcast i64* %246 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %247, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %244, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0), i64 35, i1 false) #14
  %248 = getelementptr inbounds i8, i8* %244, i64 35
  store i8 0, i8* %248, align 1
  %249 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 79) #14
  %250 = ptrtoint %"class.dawn_native::ErrorData"* %249 to i64
  %251 = bitcast %class.Result* %0 to i64*
  store i64 %250, i64* %251, align 8
  %252 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %267

256:                                              ; preds = %243
  %257 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %257) #13
  br label %267

258:                                              ; preds = %227, %240
  %259 = phi %"class.std::__1::__tree_node_base"* [ %232, %227 ], [ %242, %240 ]
  %260 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %260, %"class.std::__1::__tree_node_base"* %259) #14
  %261 = load i64, i64* %146, align 8
  %262 = add i64 %261, 1
  store i64 %262, i64* %146, align 8
  %263 = add nuw nsw i64 %156, 1
  %264 = load i32, i32* %124, align 8
  %265 = zext i32 %264 to i64
  %266 = icmp ult i64 %263, %265
  br i1 %266, label %155, label %306

267:                                              ; preds = %256, %243, %187
  %268 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0
  %269 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %152, align 8
  call void @_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* nonnull %268, %"class.std::__1::__tree_node"* %269) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #14
  br label %311

270:                                              ; preds = %85
  %271 = call zeroext i1 @_ZNK11dawn_native10DeviceBase18IsExtensionEnabledENS_9ExtensionE(%"class.dawn_native::DeviceBase"* %1, i32 3) #14
  br i1 %271, label %287, label %272

272:                                              ; preds = %270
  %273 = call i8* @_Znwm(i64 48) #13
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %273, i8** %274, align 8
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %276 = bitcast i64* %275 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %276, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %273, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), i64 44, i1 false) #14
  %277 = getelementptr inbounds i8, i8* %273, i64 44
  store i8 0, i8* %277, align 1
  %278 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 86) #14
  %279 = ptrtoint %"class.dawn_native::ErrorData"* %278 to i64
  %280 = bitcast %class.Result* %0 to i64*
  store i64 %279, i64* %280, align 8
  %281 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %311

285:                                              ; preds = %272
  %286 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %286) #13
  br label %311

287:                                              ; preds = %270
  %288 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 5
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %309, label %291

291:                                              ; preds = %287
  %292 = call i8* @_Znwm(i64 80) #13
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %292, i8** %293, align 8
  %294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %295 = bitcast i64* %294 to <2 x i64>*
  store <2 x i64> <i64 68, i64 -9223372036854775728>, <2 x i64>* %295, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %292, i8* align 1 getelementptr inbounds ([69 x i8], [69 x i8]* @.str.8, i64 0, i64 0), i64 68, i1 false) #14
  %296 = getelementptr inbounds i8, i8* %292, i64 68
  store i8 0, i8* %296, align 1
  %297 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %14, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._ZN11dawn_native26ValidateQuerySetDescriptorEPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE, i64 0, i64 0), i32 91) #14
  %298 = ptrtoint %"class.dawn_native::ErrorData"* %297 to i64
  %299 = bitcast %class.Result* %0 to i64*
  store i64 %298, i64* %299, align 8
  %300 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %311

304:                                              ; preds = %291
  %305 = load i8*, i8** %293, align 8
  call void @_ZdlPv(i8* %305) #13
  br label %311

306:                                              ; preds = %258
  %307 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %152, align 8
  %308 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0
  call void @_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* nonnull %308, %"class.std::__1::__tree_node"* %307) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #14
  br label %309

309:                                              ; preds = %306, %87, %287, %85
  %310 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %310, align 8
  br label %311

311:                                              ; preds = %267, %304, %291, %285, %272, %140, %127, %121, %108, %104, %91, %50, %37, %31, %18, %84, %309
  ret void
}

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN11dawn_native17ValidateQueryTypeEN4wgpu9QueryTypeE(%class.Result* sret, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK11dawn_native10DeviceBase18IsExtensionEnabledENS_9ExtensionE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native29ValidatePipelineStatisticNameEN4wgpu21PipelineStatisticNameE(%class.Result* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native12QuerySetBaseC2EPNS_10DeviceBaseEPKNS_18QuerySetDescriptorE(%"class.dawn_native::QuerySetBase"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::QuerySetDescriptor"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::ObjectBase"* %4, %"class.dawn_native::DeviceBase"* %1) #14
  %5 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native12QuerySetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::vector.67"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #14
  %14 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 4
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 5
  %16 = bitcast %"class.std::__1::vector.74"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #14
  %17 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.dawn_native::QuerySetDescriptor", %"struct.dawn_native::QuerySetDescriptor"* %2, i64 0, i32 4
  %22 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast i32** %22 to i64*
  %25 = bitcast %"class.std::__1::vector.67"* %12 to i64*
  %26 = bitcast i32** %23 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %12, i64 0, i32 0, i32 0
  br label %31

28:                                               ; preds = %93, %3
  %29 = load i32, i32* %10, align 4
  %30 = zext i32 %29 to i64
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.74"* %15, i64 %30, i1 zeroext false)
  ret void

31:                                               ; preds = %98, %20
  %32 = phi i32* [ null, %20 ], [ %100, %98 ]
  %33 = phi i32* [ null, %20 ], [ %99, %98 ]
  %34 = phi i64 [ 0, %20 ], [ %94, %98 ]
  %35 = load i32*, i32** %21, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %34
  %37 = icmp eq i32* %33, %32
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = load i32, i32* %36, align 4
  store i32 %39, i32* %33, align 4
  %40 = getelementptr inbounds i32, i32* %33, i64 1
  %41 = ptrtoint i32* %40 to i64
  store i64 %41, i64* %24, align 8
  br label %93

42:                                               ; preds = %31
  %43 = ptrtoint i32* %32 to i64
  %44 = load i64, i64* %25, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 2
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 4611686018427387903
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::vector.67"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #15
  unreachable

51:                                               ; preds = %42
  %52 = icmp ult i64 %46, 2305843009213693951
  br i1 %52, label %53, label %61

53:                                               ; preds = %51
  %54 = ashr exact i64 %45, 1
  %55 = icmp ult i64 %54, %47
  %56 = select i1 %55, i64 %47, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 4611686018427387903
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @abort() #15
  unreachable

61:                                               ; preds = %58, %51
  %62 = phi i64 [ %56, %58 ], [ 4611686018427387903, %51 ]
  %63 = shl i64 %62, 2
  %64 = tail call i8* @_Znwm(i64 %63) #13
  %65 = bitcast i8* %64 to i32*
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi i32* [ %65, %61 ], [ null, %53 ]
  %69 = getelementptr inbounds i32, i32* %68, i64 %46
  %70 = getelementptr inbounds i32, i32* %68, i64 %67
  %71 = ptrtoint i32* %70 to i64
  %72 = load i32, i32* %36, align 4
  store i32 %72, i32* %69, align 4
  %73 = getelementptr inbounds i32, i32* %69, i64 1
  %74 = ptrtoint i32* %73 to i64
  %75 = load i32*, i32** %27, align 8
  %76 = load i64, i64* %24, align 8
  %77 = ptrtoint i32* %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 2
  %80 = sub nsw i64 0, %79
  %81 = getelementptr inbounds i32, i32* %69, i64 %80
  %82 = ptrtoint i32* %81 to i64
  %83 = icmp sgt i64 %78, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %66
  %85 = bitcast i32* %81 to i8*
  %86 = bitcast i32* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %86, i64 %78, i1 false) #14
  %87 = load i32*, i32** %27, align 8
  br label %88

88:                                               ; preds = %84, %66
  %89 = phi i32* [ %75, %66 ], [ %87, %84 ]
  store i64 %82, i64* %25, align 8
  store i64 %74, i64* %24, align 8
  store i64 %71, i64* %26, align 8
  %90 = icmp eq i32* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = bitcast i32* %89 to i8*
  tail call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %38, %88, %91
  %94 = add nuw nsw i64 %34, 1
  %95 = load i32, i32* %17, align 8
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %94, %96
  br i1 %97, label %98, label %28

98:                                               ; preds = %93
  %99 = load i32*, i32** %22, align 8
  %100 = load i32*, i32** %23, align 8
  br label %31
}

declare void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.74"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.74", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !6
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.74"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %4, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #14
  %29 = icmp slt i64 %1, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector.74"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #15
  unreachable

32:                                               ; preds = %25
  %33 = icmp ult i64 %11, 4611686018427387903
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = shl i64 %10, 7
  %36 = add nuw i64 %1, 63
  %37 = and i64 %36, -64
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %32 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.74"* nonnull %4, i64 %41)
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %12
  store i64 %43, i64* %27, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::__1::vector.74"* %4 to i64*
  %47 = load i64, i64* %46, align 16, !noalias !11
  %48 = icmp sgt i64 %42, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %40
  %50 = inttoptr i64 %47 to i8*
  %51 = lshr i64 %42, 6
  %52 = bitcast i64* %45 to i8*
  %53 = shl nuw nsw i64 %51, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 %53, i1 false) #14, !noalias !16
  %54 = and i64 %42, 63
  %55 = inttoptr i64 %47 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = ptrtoint i64* %56 to i64
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %45, i64 %51
  %61 = sub nuw nsw i64 64, %54
  %62 = lshr i64 -1, %61
  %63 = load i64, i64* %60, align 8, !noalias !19
  %64 = and i64 %63, %62
  %65 = xor i64 %62, -1
  %66 = load i64, i64* %56, align 8, !noalias !16
  %67 = and i64 %66, %65
  %68 = or i64 %67, %64
  store i64 %68, i64* %56, align 8, !noalias !16
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %49, %40, %59
  %71 = phi i32 [ %69, %59 ], [ 0, %49 ], [ 0, %40 ]
  %72 = phi i64 [ %57, %59 ], [ %57, %49 ], [ %47, %40 ]
  %73 = bitcast %"class.std::__1::vector.74"* %4 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = bitcast %"class.std::__1::vector.74"* %0 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast %"class.std::__1::vector.74"* %0 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = bitcast %"class.std::__1::vector.74"* %4 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %28, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %28, align 16
  %81 = extractelement <2 x i64> %76, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %70, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %72, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %71, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #14
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #14
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native12QuerySetBaseC2EPNS_10DeviceBaseENS_10ObjectBase8ErrorTagE(%"class.dawn_native::QuerySetBase"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseENS0_8ErrorTagE(%"class.dawn_native::ObjectBase"* %3, %"class.dawn_native::DeviceBase"* %1) #14
  %4 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native12QuerySetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 5
  %7 = bitcast %"class.std::__1::vector.74"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = bitcast %"class.std::__1::vector.67"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 28, i1 false)
  ret void
}

declare void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseENS0_8ErrorTagE(%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN11dawn_native12QuerySetBaseD0Ev(%"class.dawn_native::QuerySetBase"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.dawn_native::QuerySetBase"* @_ZN11dawn_native12QuerySetBase9MakeErrorEPNS_10DeviceBaseE(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 88) #13
  %3 = bitcast i8* %2 to %"class.dawn_native::ObjectBase"*
  tail call void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseENS0_8ErrorTagE(%"class.dawn_native::ObjectBase"* nonnull %3, %"class.dawn_native::DeviceBase"* %0) #14
  %4 = bitcast i8* %2 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %2, i64 32
  %6 = getelementptr inbounds i8, i8* %2, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 28, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native12_GLOBAL__N_113ErrorQuerySetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = bitcast i8* %2 to %"class.dawn_native::QuerySetBase"*
  ret %"class.dawn_native::QuerySetBase"* %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native12QuerySetBase12GetQueryTypeEv(%"class.dawn_native::QuerySetBase"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native12QuerySetBase13GetQueryCountEv(%"class.dawn_native::QuerySetBase"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.67"* @_ZNK11dawn_native12QuerySetBase21GetPipelineStatisticsEv(%"class.dawn_native::QuerySetBase"* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 3
  ret %"class.std::__1::vector.67"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.74"* @_ZNK11dawn_native12QuerySetBase20GetQueryAvailabilityEv(%"class.dawn_native::QuerySetBase"* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 5
  ret %"class.std::__1::vector.74"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native12QuerySetBase20SetQueryAvailabilityEjb(%"class.dawn_native::QuerySetBase"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 5, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = lshr i64 %4, 6
  %8 = getelementptr inbounds i64, i64* %6, i64 %7
  %9 = and i64 %4, 63
  %10 = shl i64 1, %9
  br i1 %2, label %11, label %14

11:                                               ; preds = %3
  %12 = load i64, i64* %8, align 8
  %13 = or i64 %12, %10
  br label %18

14:                                               ; preds = %3
  %15 = xor i64 %10, -1
  %16 = load i64, i64* %8, align 8
  %17 = and i64 %16, %15
  br label %18

18:                                               ; preds = %11, %14
  %19 = phi i64 [ %17, %14 ], [ %13, %11 ]
  store i64 %19, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native12QuerySetBase25ValidateCanUseInSubmitNowEv(%class.Result* noalias nocapture sret, %"class.dawn_native::QuerySetBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %1, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %22

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 48) #13
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i64 36, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %8, i64 36
  store i8 0, i8* %12, align 1
  %13 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__._ZNK11dawn_native12QuerySetBase25ValidateCanUseInSubmitNowEv, i64 0, i64 0), i32 151) #14
  %14 = ptrtoint %"class.dawn_native::ErrorData"* %13 to i64
  %15 = bitcast %class.Result* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %7
  %21 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %21) #13
  br label %24

22:                                               ; preds = %2
  %23 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %23, align 8
  br label %24

24:                                               ; preds = %20, %7, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native12QuerySetBase10APIDestroyEv(%"class.dawn_native::QuerySetBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.Result, align 8
  %3 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 0
  %4 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %3) #14
  call void @_ZNK11dawn_native12QuerySetBase15ValidateDestroyEv(%class.Result* nonnull sret %2, %"class.dawn_native::QuerySetBase"* %0)
  %5 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %5, align 8
  %7 = icmp eq %"class.dawn_native::ErrorData"* %6, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %5, align 8
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %1
  tail call void @_ZN11dawn_native10DeviceBase12ConsumeErrorENSt3__110unique_ptrINS_9ErrorDataENS1_14default_deleteIS3_EEEE(%"class.dawn_native::DeviceBase"* %4, %"class.dawn_native::ErrorData"* nonnull %6) #14
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %5, align 8
  br label %19

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.dawn_native::QuerySetBase"* %0 to void (%"class.dawn_native::QuerySetBase"*)***
  %15 = load void (%"class.dawn_native::QuerySetBase"*)**, void (%"class.dawn_native::QuerySetBase"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.dawn_native::QuerySetBase"*)*, void (%"class.dawn_native::QuerySetBase"*)** %15, i64 3
  %17 = load void (%"class.dawn_native::QuerySetBase"*)*, void (%"class.dawn_native::QuerySetBase"*)** %16, align 8
  tail call void %17(%"class.dawn_native::QuerySetBase"* %0) #14
  br label %18

18:                                               ; preds = %9, %13
  store i32 2, i32* %10, align 8
  br label %19

19:                                               ; preds = %8, %18
  ret void
}

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native12QuerySetBase15ValidateDestroyEv(%class.Result* noalias nocapture sret, %"class.dawn_native::QuerySetBase"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.Result, align 8
  %4 = bitcast %class.Result* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = getelementptr inbounds %class.Result, %class.Result* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %5, align 8
  %6 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %1, i64 0, i32 0
  %7 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %6) #14
  call void @_ZNK11dawn_native10DeviceBase14ValidateObjectEPKNS_10ObjectBaseE(%class.Result* nonnull sret %3, %"class.dawn_native::DeviceBase"* %7, %"class.dawn_native::ObjectBase"* %6) #14
  %8 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %5, align 8
  %9 = icmp eq %"class.dawn_native::ErrorData"* %8, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %5, align 8
  br i1 %9, label %36, label %10, !prof !2

10:                                               ; preds = %2
  %11 = ptrtoint %"class.dawn_native::ErrorData"* %8 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__._ZNK11dawn_native12QuerySetBase15ValidateDestroyEv, i64 0, i64 0), i32 164) #14
  %12 = bitcast %class.Result* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %5, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %5, align 8
  %14 = icmp eq %"class.dawn_native::ErrorData"* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %13, i64 0, i32 2, i32 0, i32 0
  %17 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %16, align 8
  %18 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %17 to i64
  %21 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %13, i64 0, i32 2, i32 0, i32 1
  %22 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %17 to i8*
  call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %19, %15
  %25 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %13, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %30, %24
  %34 = bitcast %"class.dawn_native::ErrorData"* %13 to i8*
  call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %10, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  br label %38

36:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  %37 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %37, align 8
  br label %38

38:                                               ; preds = %35, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native12QuerySetBase15DestroyInternalEv(%"class.dawn_native::QuerySetBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.dawn_native::QuerySetBase"* %0 to void (%"class.dawn_native::QuerySetBase"*)***
  %7 = load void (%"class.dawn_native::QuerySetBase"*)**, void (%"class.dawn_native::QuerySetBase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.dawn_native::QuerySetBase"*)*, void (%"class.dawn_native::QuerySetBase"*)** %7, i64 3
  %9 = load void (%"class.dawn_native::QuerySetBase"*)*, void (%"class.dawn_native::QuerySetBase"*)** %8, align 8
  tail call void %9(%"class.dawn_native::QuerySetBase"* %0) #14
  br label %10

10:                                               ; preds = %1, %5
  store i32 2, i32* %2, align 8
  ret void
}

declare void @_ZNK11dawn_native10DeviceBase14ValidateObjectEPKNS_10ObjectBaseE(%class.Result* sret, %"class.dawn_native::DeviceBase"*, %"class.dawn_native::ObjectBase"*) local_unnamed_addr #1

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native12QuerySetBaseD2Ev(%"class.dawn_native::QuerySetBase"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native12QuerySetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 5, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint i32* %10 to i64
  %14 = getelementptr inbounds %"class.dawn_native::QuerySetBase", %"class.dawn_native::QuerySetBase"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN11dawn_native12_GLOBAL__N_113ErrorQuerySetD0Ev(%"class.dawn_native::(anonymous namespace)::ErrorQuerySet"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::(anonymous namespace)::ErrorQuerySet", %"class.dawn_native::(anonymous namespace)::ErrorQuerySet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native12QuerySetBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::(anonymous namespace)::ErrorQuerySet", %"class.dawn_native::(anonymous namespace)::ErrorQuerySet"* %0, i64 0, i32 0, i32 5, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #13
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.dawn_native::(anonymous namespace)::ErrorQuerySet", %"class.dawn_native::(anonymous namespace)::ErrorQuerySet"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint i32* %10 to i64
  %14 = getelementptr inbounds %"class.dawn_native::(anonymous namespace)::ErrorQuerySet", %"class.dawn_native::(anonymous namespace)::ErrorQuerySet"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"class.dawn_native::(anonymous namespace)::ErrorQuerySet"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

; Function Attrs: norecurse noreturn nounwind readnone ssp uwtable
define internal void @_ZN11dawn_native12_GLOBAL__N_113ErrorQuerySet11DestroyImplEv(%"class.dawn_native::(anonymous namespace)::ErrorQuerySet"* nocapture) unnamed_addr #9 align 2 {
  unreachable
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN11dawn_native10DeviceBase12ConsumeErrorENSt3__110unique_ptrINS_9ErrorDataENS1_14default_deleteIS3_EEEE(%"class.dawn_native::DeviceBase"*, %"class.dawn_native::ErrorData"*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !22
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !22
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !22
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.74"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.74", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.74"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #14
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.74"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #15
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast %"class.std::__1::vector.74"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.74"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !23
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !23
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !23
  %28 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !28
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !31
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !31
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.74"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.74"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.74"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.74"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.74"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !34
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #14
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !37
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !37
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !37
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #14, !noalias !37
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !37
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !37
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !37
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !40
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !40
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !43
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !43
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !43
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !43
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !43
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !43
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #14
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse noreturn nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIN4wgpu21PipelineStatisticNameENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!9 = distinct !{!9, !10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!14 = distinct !{!14, !15, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!19 = !{!17, !20}
!20 = distinct !{!20, !21, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!22 = !{i8 0, i8 2}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!26 = distinct !{!26, !27, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!40 = !{!38, !41}
!41 = distinct !{!41, !42, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!43 = !{!41}
