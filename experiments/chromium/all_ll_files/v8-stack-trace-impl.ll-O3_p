; ModuleID = '../../v8/src/inspector/v8-stack-trace-impl.cc'
source_filename = "../../v8/src/inspector/v8-stack-trace-impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair", i8, [7 x i8] }>
%"struct.std::__1::pair" = type { i64, i64 }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon }
%union.anon = type { i8* }
%"class.v8_inspector::StackFrame" = type <{ %"class.v8_inspector::String16", i32, [4 x i8], %"class.v8_inspector::String16", i32, i32, i8, [7 x i8] }>
%"class.v8_inspector::String16" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" = type { i16*, i64, i64 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::StackFrame" = type { i8 }
%"class.v8_inspector::V8StackTraceImpl" = type { %"class.v8_inspector::V8StackTrace", %"class.std::__1::vector.64", i32, %"class.std::__1::weak_ptr", %"struct.v8_inspector::V8StackTraceId" }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::shared_ptr" = type { %"class.v8_inspector::StackFrame"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::shared_ptr"* }
%"class.std::__1::weak_ptr" = type { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8_inspector::AsyncStackTrace" = type { i32, i64, i8*, %"class.v8_inspector::String16", %"class.std::__1::vector.64", %"class.std::__1::weak_ptr", %"struct.v8_inspector::V8StackTraceId" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.v8_inspector::AsyncStackTrace"* }
%"class.std::__1::__wrap_iter" = type { %"class.std::__1::shared_ptr"* }
%"class.v8_inspector::V8DebuggerId" = type { i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8_inspector::protocol::Value" = type <{ %"class.v8_crdtp::Serializable", i32, [4 x i8] }>
%"class.v8_crdtp::Serializable" = type { i32 (...)** }
%"class.v8_inspector::protocol::DictionaryValue" = type { %"class.v8_inspector::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.23" }
%"class.v8_inspector::protocol::Value.base" = type <{ %"class.v8_crdtp::Serializable", i32 }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.20", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8_inspector::String16"* }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.v8::String" = type { i8 }
%"class.v8_inspector::protocol::Runtime::CallFrame" = type { %"class.v8_crdtp::ProtocolObject", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::String16", i32, i32 }
%"class.v8_crdtp::ProtocolObject" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8_inspector::V8Debugger" = type { %"class.v8::debug::DebugDelegate", %"class.v8::debug::AsyncEventDelegate", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorImpl"*, i32, i32, i32, i64, i8, i8, i32, i32, i32, %"class.v8_inspector::String16", %"class.std::__1::unique_ptr.61", %"class.std::__1::unordered_map.222", %"class.std::__1::unordered_set", i32, i32, %"class.std::__1::vector.271", %"class.std::__1::vector.278", %"class.std::__1::vector.286", i32, %"class.std::__1::list", %"class.std::__1::unordered_map.297", i8*, i8, i8, i8, i32, i8, [7 x i8], %"class.std::__1::unordered_map.325", i64, %"class.std::__1::unordered_map.353", %"class.std::__1::unique_ptr.377" }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.v8_inspector::V8InspectorImpl" = type { %"class.v8_inspector::V8Inspector", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorClient"*, %"class.std::__1::unique_ptr.74", %"class.v8::Global", i32, i32, i32, i32, i64, %"class.std::__1::unordered_map.80", %"class.std::__1::unordered_map.107", %"class.std::__1::unordered_map.131", %"class.std::__1::unordered_map.155", %"class.std::__1::unordered_map.80", %"class.std::__1::map", %"class.std::__1::unique_ptr.187", %"class.v8_inspector::V8Inspector::Counters"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.v8_inspector::V8Debugger"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.std::__1::unordered_map.107" = type { %"class.std::__1::__hash_table.108" }
%"class.std::__1::__hash_table.108" = type <{ %"class.std::__1::unique_ptr.109", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base.112"** }
%"struct.std::__1::__hash_node_base.112" = type { %"struct.std::__1::__hash_node_base.112"* }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::__bucket_list_deallocator.114" }
%"class.std::__1::__bucket_list_deallocator.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base.112" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unordered_map.131" = type { %"class.std::__1::__hash_table.132" }
%"class.std::__1::__hash_table.132" = type <{ %"class.std::__1::unique_ptr.133", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.151", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base.136"** }
%"struct.std::__1::__hash_node_base.136" = type { %"struct.std::__1::__hash_node_base.136"* }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::__bucket_list_deallocator.138" }
%"class.std::__1::__bucket_list_deallocator.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base.136" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unordered_map.155" = type { %"class.std::__1::__hash_table.156" }
%"class.std::__1::__hash_table.156" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.175", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base.160"** }
%"struct.std::__1::__hash_node_base.160" = type { %"struct.std::__1::__hash_node_base.160"* }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::__bucket_list_deallocator.162" }
%"class.std::__1::__bucket_list_deallocator.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.160" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unordered_map.80" = type { %"class.std::__1::__hash_table.81" }
%"class.std::__1::__hash_table.81" = type <{ %"class.std::__1::unique_ptr.82", %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84", %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::__hash_node_base.85"** }
%"struct.std::__1::__hash_node_base.85" = type { %"struct.std::__1::__hash_node_base.85"* }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__bucket_list_deallocator.87" }
%"class.std::__1::__bucket_list_deallocator.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base.85" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8_inspector::V8Console"* }
%"class.v8_inspector::V8Console" = type { %"class.v8::debug::ConsoleDelegate", %"class.v8_inspector::V8InspectorImpl"* }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8_inspector::V8Inspector::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::Isolate"*, %"class.std::__1::unordered_map.194" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr.193" }
%"class.std::__1::weak_ptr.193" = type { %"class.v8_inspector::V8Inspector::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unordered_map.194" = type { %"class.std::__1::__hash_table.195" }
%"class.std::__1::__hash_table.195" = type <{ %"class.std::__1::unique_ptr.196", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.216", [4 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198", %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::__hash_node_base.199"** }
%"struct.std::__1::__hash_node_base.199" = type { %"struct.std::__1::__hash_node_base.199"* }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.std::__1::__bucket_list_deallocator.201" }
%"class.std::__1::__bucket_list_deallocator.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::__hash_node_base.199" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.v8_inspector::V8StackTraceImpl"* }
%"class.std::__1::unordered_map.222" = type { %"class.std::__1::__hash_table.223" }
%"class.std::__1::__hash_table.223" = type <{ %"class.std::__1::unique_ptr.224", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.244", [4 x i8] }>
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.227"** }
%"struct.std::__1::__hash_node_base.227" = type { %"struct.std::__1::__hash_node_base.227"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::__bucket_list_deallocator.229" }
%"class.std::__1::__bucket_list_deallocator.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.227" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.268", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { i8**, i8**, %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { i8** }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"class.std::__1::shared_ptr.280"*, %"class.std::__1::shared_ptr.280"*, %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::shared_ptr.280" = type { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::shared_ptr.280"* }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"struct.v8_inspector::V8StackTraceId"*, %"struct.v8_inspector::V8StackTraceId"*, %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.v8_inspector::V8StackTraceId"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.293" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_map.297" = type { %"class.std::__1::__hash_table.298" }
%"class.std::__1::__hash_table.298" = type <{ %"class.std::__1::unique_ptr.299", %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.319", [4 x i8] }>
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301", %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base.302"** }
%"struct.std::__1::__hash_node_base.302" = type { %"struct.std::__1::__hash_node_base.302"* }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.std::__1::__bucket_list_deallocator.304" }
%"class.std::__1::__bucket_list_deallocator.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::__hash_node_base.302" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unordered_map.325" = type { %"class.std::__1::__hash_table.326" }
%"class.std::__1::__hash_table.326" = type <{ %"class.std::__1::unique_ptr.327", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", [4 x i8] }>
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329", %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base.330"** }
%"struct.std::__1::__hash_node_base.330" = type { %"struct.std::__1::__hash_node_base.330"* }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.std::__1::__bucket_list_deallocator.332" }
%"class.std::__1::__bucket_list_deallocator.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.std::__1::__hash_node_base.330" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unordered_map.353" = type { %"class.std::__1::__hash_table.354" }
%"class.std::__1::__hash_table.354" = type <{ %"class.std::__1::unique_ptr.355", %"class.std::__1::__compressed_pair.365", %"class.std::__1::__compressed_pair.370", %"class.std::__1::__compressed_pair.373", [4 x i8] }>
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357", %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::__hash_node_base.358"** }
%"struct.std::__1::__hash_node_base.358" = type { %"struct.std::__1::__hash_node_base.358"* }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.std::__1::__bucket_list_deallocator.360" }
%"class.std::__1::__bucket_list_deallocator.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.std::__1::__hash_node_base.358" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback"* }
%"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback" = type { i32 (...)** }
%"class.v8::StackTrace" = type { i8 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8_inspector::protocol::Runtime::StackTrace" = type { %"class.v8_crdtp::ProtocolObject.396", %"class.v8_inspector::protocol::Runtime::API::StackTrace", %"class.v8_crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.399", %"class.v8_crdtp::detail::PtrMaybe", %"class.v8_crdtp::detail::PtrMaybe.412" }
%"class.v8_crdtp::ProtocolObject.396" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::protocol::Runtime::API::StackTrace" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.v8_crdtp::detail::ValueMaybe" = type { i8, %"class.v8_inspector::String16" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::vector.402"* }
%"class.std::__1::vector.402" = type { %"class.std::__1::__vector_base.403" }
%"class.std::__1::__vector_base.403" = type { %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"*, %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8_inspector::protocol::Runtime::CallFrame"* }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.std::__1::unique_ptr.50"* }
%"class.v8_crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.390" }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.v8_inspector::protocol::Runtime::StackTrace"* }
%"class.v8_crdtp::detail::PtrMaybe.412" = type { %"class.std::__1::unique_ptr.413" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.v8_inspector::protocol::Runtime::StackTraceId"* }
%"class.v8_inspector::protocol::Runtime::StackTraceId" = type { %"class.v8_crdtp::ProtocolObject.416", %"class.v8_inspector::protocol::Runtime::API::StackTraceId", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe" }
%"class.v8_crdtp::ProtocolObject.416" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::protocol::Runtime::API::StackTraceId" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::String16Builder" = type { %"class.std::__1::vector.428" }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { i16*, i16*, %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { i16* }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8_inspector::AsyncStackTrace"* }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZNK12v8_inspector8String169substringEmm = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt = comdat any

$_ZN12v8_inspector8protocol7Runtime10StackTrace14setDescriptionERKNS_8String16E = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime9CallFrameENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN12v8_inspector8protocol7Runtime12StackTraceId13setDebuggerIdERKNS_8String16E = comdat any

$_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE = comdat any

@_ZN12v8_inspector16V8StackTraceImpl25maxCallStackSizeToCaptureE = hidden local_unnamed_addr global i32 200, align 4
@_ZN12v8_inspector12_GLOBAL__N_13kIdE = internal constant [3 x i8] c"id\00", align 1
@_ZN12v8_inspector12_GLOBAL__N_111kDebuggerIdE = internal constant [11 x i8] c"debuggerId\00", align 1
@_ZN12v8_inspector12_GLOBAL__N_112kShouldPauseE = internal constant [12 x i8] c"shouldPause\00", align 1
@.str = private unnamed_addr constant [6 x i8] c"data:\00", align 1
@_ZZN12v8_inspector16V8StackTraceImpl7captureEPNS_10V8DebuggerEiiE28trace_event_unique_atomic270 = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"disabled-by-default-v8.stack_trace\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"V8StackTraceImpl::capture\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"maxFrameCount\00", align 1
@_ZTVN12v8_inspector16V8StackTraceImplE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl22firstNonEmptySourceURLEv to i8*), i8* bitcast (i1 (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl7isEmptyEv to i8*), i8* bitcast (void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl12topSourceURLEv to i8*), i8* bitcast (i32 (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl13topLineNumberEv to i8*), i8* bitcast (i32 (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl15topColumnNumberEv to i8*), i8* bitcast (i32 (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl11topScriptIdEv to i8*), i8* bitcast (void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl15topFunctionNameEv to i8*), i8* bitcast (void (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZN12v8_inspector16V8StackTraceImplD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZN12v8_inspector16V8StackTraceImplD0Ev to i8*), i8* bitcast (%"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl20buildInspectorObjectEv to i8*), i8* bitcast (%"class.v8_inspector::protocol::Runtime::API::StackTrace"* (%"class.v8_inspector::V8StackTraceImpl"*, i32)* @_ZNK12v8_inspector16V8StackTraceImpl20buildInspectorObjectEi to i8*), i8* bitcast (%"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZNK12v8_inspector16V8StackTraceImpl8toStringEv to i8*), i8* bitcast (%"class.v8_inspector::V8StackTrace"* (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZN12v8_inspector16V8StackTraceImpl5cloneEv to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"\0A    at \00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"(anonymous function)\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"async function\00", align 1
@_ZZN12v8_inspector15AsyncStackTrace7captureEPNS_10V8DebuggerEiRKNS_8String16EiE28trace_event_unique_atomic422 = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [25 x i8] c"AsyncStackTrace::capture\00", align 1
@_ZTVN12v8_inspector8protocol7Runtime9CallFrameE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZZN12v8_inspector12_GLOBAL__N_114toFramesVectorEPNS_10V8DebuggerEN2v85LocalINS3_10StackTraceEEEiE27trace_event_unique_atomic41 = internal global i64 0, align 8
@.str.10 = private unnamed_addr constant [20 x i8] c"SymbolizeStackTrace\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"frameCount\00", align 1
@_ZTVN12v8_inspector8protocol7Runtime10StackTraceE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol7Runtime12StackTraceIdE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8

@_ZN12v8_inspector14V8StackTraceIdC1Ev = hidden unnamed_addr alias void (%"struct.v8_inspector::V8StackTraceId"*), void (%"struct.v8_inspector::V8StackTraceId"*)* @_ZN12v8_inspector14V8StackTraceIdC2Ev
@_ZN12v8_inspector14V8StackTraceIdC1EmNSt3__14pairIllEE = hidden unnamed_addr alias void (%"struct.v8_inspector::V8StackTraceId"*, i64, i64, i64), void (%"struct.v8_inspector::V8StackTraceId"*, i64, i64, i64)* @_ZN12v8_inspector14V8StackTraceIdC2EmNSt3__14pairIllEE
@_ZN12v8_inspector14V8StackTraceIdC1EmNSt3__14pairIllEEb = hidden unnamed_addr alias void (%"struct.v8_inspector::V8StackTraceId"*, i64, i64, i64, i1), void (%"struct.v8_inspector::V8StackTraceId"*, i64, i64, i64, i1)* @_ZN12v8_inspector14V8StackTraceIdC2EmNSt3__14pairIllEEb
@_ZN12v8_inspector14V8StackTraceIdC1ENS_10StringViewE = hidden unnamed_addr alias void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::StringView"*), void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::StringView"*)* @_ZN12v8_inspector14V8StackTraceIdC2ENS_10StringViewE
@_ZN12v8_inspector10StackFrameC1EPN2v87IsolateENS1_5LocalINS1_10StackFrameEEE = hidden unnamed_addr alias void (%"class.v8_inspector::StackFrame"*, %"class.v8::Isolate"*, %"class.v8::StackFrame"*), void (%"class.v8_inspector::StackFrame"*, %"class.v8::Isolate"*, %"class.v8::StackFrame"*)* @_ZN12v8_inspector10StackFrameC2EPN2v87IsolateENS1_5LocalINS1_10StackFrameEEE
@_ZN12v8_inspector16V8StackTraceImplC1ENSt3__16vectorINS1_10shared_ptrINS_10StackFrameEEENS1_9allocatorIS5_EEEEiNS3_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdE = hidden unnamed_addr alias void (%"class.v8_inspector::V8StackTraceImpl"*, %"class.std::__1::vector.64"*, i32, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*, %"struct.v8_inspector::V8StackTraceId"*), void (%"class.v8_inspector::V8StackTraceImpl"*, %"class.std::__1::vector.64"*, i32, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*, %"struct.v8_inspector::V8StackTraceId"*)* @_ZN12v8_inspector16V8StackTraceImplC2ENSt3__16vectorINS1_10shared_ptrINS_10StackFrameEEENS1_9allocatorIS5_EEEEiNS3_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdE
@_ZN12v8_inspector16V8StackTraceImplD1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::V8StackTraceImpl"*), void (%"class.v8_inspector::V8StackTraceImpl"*)* @_ZN12v8_inspector16V8StackTraceImplD2Ev
@_ZN12v8_inspector16V8StackTraceImpl18StackFrameIteratorC1EPKS0_ = hidden unnamed_addr alias void (%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"*, %"class.v8_inspector::V8StackTraceImpl"*), void (%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"*, %"class.v8_inspector::V8StackTraceImpl"*)* @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIteratorC2EPKS0_
@_ZN12v8_inspector15AsyncStackTraceC1EiRKNS_8String16ENSt3__16vectorINS4_10shared_ptrINS_10StackFrameEEENS4_9allocatorIS8_EEEENS6_IS0_EERKNS_14V8StackTraceIdE = hidden unnamed_addr alias void (%"class.v8_inspector::AsyncStackTrace"*, i32, %"class.v8_inspector::String16"*, %"class.std::__1::vector.64"*, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*, %"struct.v8_inspector::V8StackTraceId"*), void (%"class.v8_inspector::AsyncStackTrace"*, i32, %"class.v8_inspector::String16"*, %"class.std::__1::vector.64"*, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*, %"struct.v8_inspector::V8StackTraceId"*)* @_ZN12v8_inspector15AsyncStackTraceC2EiRKNS_8String16ENSt3__16vectorINS4_10shared_ptrINS_10StackFrameEEENS4_9allocatorIS8_EEEENS6_IS0_EERKNS_14V8StackTraceIdE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector14V8StackTraceIdC2Ev(%"struct.v8_inspector::V8StackTraceId"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %3 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = bitcast %"class.v8_inspector::V8DebuggerId"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = bitcast %"class.v8_inspector::V8DebuggerId"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false)
  %6 = call { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"* nonnull %2) #13
  %7 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 0
  %8 = extractvalue { i64, i64 } %6, 0
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 1
  %10 = extractvalue { i64, i64 } %6, 1
  store i64 %10, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  %11 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 2
  store i8 0, i8* %11, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12v8_inspector14V8StackTraceIdC2EmNSt3__14pairIllEE(%"struct.v8_inspector::V8StackTraceId"* nocapture, i64, i64, i64) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 2
  store i8 0, i8* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12v8_inspector14V8StackTraceIdC2EmNSt3__14pairIllEEb(%"struct.v8_inspector::V8StackTraceId"* nocapture, i64, i64, i64, i1 zeroext) unnamed_addr #3 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 1
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 2
  store i8 %6, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector14V8StackTraceIdC2ENS_10StringViewE(%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::StringView"* nocapture readonly byval(%"class.v8_inspector::StringView") align 8) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = bitcast %"class.v8_inspector::V8DebuggerId"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = bitcast %"class.v8_inspector::V8DebuggerId"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false)
  %14 = call { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"* nonnull %3) #13
  %15 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 0
  %16 = extractvalue { i64, i64 } %14, 0
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 1
  %18 = extractvalue { i64, i64 } %14, 1
  store i64 %18, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  %19 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 2
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %120, label %23

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #13
  %25 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 2, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = call { i32, i64 } @_ZN8v8_crdtp4json17ConvertJSONToCBORENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %30, i64 %21, %"class.std::__1::vector"* nonnull %4) #13
  br label %37

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 2
  %34 = bitcast %union.anon* %33 to i16**
  %35 = load i16*, i16** %34, align 8
  %36 = call { i32, i64 } @_ZN8v8_crdtp4json17ConvertJSONToCBORENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16* %35, i64 %21, %"class.std::__1::vector"* nonnull %4) #13
  br label %37

37:                                               ; preds = %32, %28
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = ptrtoint i8* %39 to i64
  %44 = sub i64 %42, %43
  %45 = call %"class.v8_inspector::protocol::Value"* @_ZN12v8_inspector8protocol5Value11parseBinaryEPKhm(i8* %39, i64 %44) #13
  %46 = icmp eq %"class.v8_inspector::protocol::Value"* %45, null
  br i1 %46, label %114, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 6
  %51 = bitcast %"class.v8_inspector::protocol::Value"* %45 to %"class.v8_inspector::protocol::DictionaryValue"*
  br i1 %50, label %52, label %114

52:                                               ; preds = %47
  %53 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 32, i1 false) #13
  %54 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12v8_inspector12_GLOBAL__N_13kIdE, i64 0, i64 0)) #13
  %55 = call zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue9getStringERKNS_8String16EPS2_(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %51, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6, %"class.v8_inspector::String16"* nonnull %5) #13
  %56 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %52
  %61 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %52, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #13
  br i1 %55, label %64, label %101

64:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  store i8 0, i8* %7, align 1
  %65 = call i64 @_ZNK12v8_inspector8String1611toInteger64EPb(%"class.v8_inspector::String16"* nonnull %5, i8* nonnull %7) #13
  %66 = load i8, i8* %7, align 1, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp ne i64 %65, 0
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %100

70:                                               ; preds = %64
  %71 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN12v8_inspector12_GLOBAL__N_111kDebuggerIdE, i64 0, i64 0)) #13
  %72 = call zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue9getStringERKNS_8String16EPS2_(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %51, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8, %"class.v8_inspector::String16"* nonnull %5) #13
  %73 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %70
  %78 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %70, %77
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #13
  br i1 %72, label %81, label %100

81:                                               ; preds = %80
  %82 = bitcast %"class.v8_inspector::V8DebuggerId"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #13
  call void @_ZN12v8_inspector12V8DebuggerIdC1ERKNS_8String16E(%"class.v8_inspector::V8DebuggerId"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #13
  %83 = call zeroext i1 @_ZNK12v8_inspector12V8DebuggerId7isValidEv(%"class.v8_inspector::V8DebuggerId"* nonnull %9) #13
  br i1 %83, label %84, label %99

84:                                               ; preds = %81
  %85 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12v8_inspector12_GLOBAL__N_112kShouldPauseE, i64 0, i64 0)) #13
  %86 = call zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue10getBooleanERKNS_8String16EPb(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %51, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %10, i8* %19) #13
  %87 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %84, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #13
  br i1 %86, label %95, label %99

95:                                               ; preds = %94
  store i64 %65, i64* %11, align 8
  %96 = call { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"* nonnull %9) #13
  %97 = extractvalue { i64, i64 } %96, 0
  %98 = extractvalue { i64, i64 } %96, 1
  store i64 %97, i64* %15, align 8
  store i64 %98, i64* %17, align 8
  br label %99

99:                                               ; preds = %94, %81, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #13
  br label %100

100:                                              ; preds = %80, %64, %99
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  br label %101

101:                                              ; preds = %63, %100
  %102 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #14
  br label %109

109:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #13
  %110 = bitcast %"class.v8_inspector::protocol::Value"* %45 to void (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %111 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %111, i64 2
  %113 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %112, align 8
  call void %113(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %51) #13
  br label %114

114:                                              ; preds = %37, %47, %109
  %115 = load i8*, i8** %38, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = ptrtoint i8* %115 to i64
  store i64 %118, i64* %41, align 8
  call void @_ZdlPv(i8* nonnull %115) #14
  br label %119

119:                                              ; preds = %114, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %120

120:                                              ; preds = %2, %119
  ret void
}

declare { i32, i64 } @_ZN8v8_crdtp4json17ConvertJSONToCBORENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

declare { i32, i64 } @_ZN8v8_crdtp4json17ConvertJSONToCBORENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

declare %"class.v8_inspector::protocol::Value"* @_ZN12v8_inspector8protocol5Value11parseBinaryEPKhm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue9getStringERKNS_8String16EPS2_(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::String16"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"*, i8*) unnamed_addr #2

declare i64 @_ZNK12v8_inspector8String1611toInteger64EPb(%"class.v8_inspector::String16"*, i8*) local_unnamed_addr #2

declare void @_ZN12v8_inspector12V8DebuggerIdC1ERKNS_8String16E(%"class.v8_inspector::V8DebuggerId"*, %"class.v8_inspector::String16"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZNK12v8_inspector12V8DebuggerId7isValidEv(%"class.v8_inspector::V8DebuggerId"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue10getBooleanERKNS_8String16EPb(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector14V8StackTraceId9IsInvalidEv(%"struct.v8_inspector::V8StackTraceId"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector14V8StackTraceId8ToStringEv(%"struct.v8_inspector::V8StackTraceId"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8_inspector::String16", align 8
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector", align 16
  %11 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %116, label %14

14:                                               ; preds = %1
  %15 = tail call i8* @_Znwm(i64 80) #14
  %16 = bitcast i8* %15 to %"class.v8_inspector::protocol::DictionaryValue"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValueC1Ev(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %16) #13
  %17 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12v8_inspector12_GLOBAL__N_13kIdE, i64 0, i64 0)) #13
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #13
  %19 = load i64, i64* %11, align 8
  call void @_ZN12v8_inspector8String1613fromInteger64El(%"class.v8_inspector::String16"* nonnull sret %3, i64 %19) #13
  call void @_ZN12v8_inspector8protocol15DictionaryValue9setStringERKNS_8String16ES4_(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %16, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %2, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %3) #13
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %14
  %25 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %14, %24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #13
  %28 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = bitcast %"class.v8_inspector::String16"* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %27, %32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #13
  %36 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN12v8_inspector12_GLOBAL__N_111kDebuggerIdE, i64 0, i64 0)) #13
  %37 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #13
  %38 = bitcast %"class.v8_inspector::V8DebuggerId"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 1, i32 1
  %42 = load i64, i64* %41, align 8
  call void @_ZN12v8_inspector12V8DebuggerIdC1ENSt3__14pairIllEE(%"class.v8_inspector::V8DebuggerId"* nonnull %6, i64 %40, i64 %42) #13
  call void @_ZNK12v8_inspector12V8DebuggerId8toStringEv(%"class.v8_inspector::String16"* nonnull sret %5, %"class.v8_inspector::V8DebuggerId"* nonnull %6) #13
  call void @_ZN12v8_inspector8protocol15DictionaryValue9setStringERKNS_8String16ES4_(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %16, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #13
  %43 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %35
  %48 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %35, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #13
  %51 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %50, %55
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #13
  %59 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12v8_inspector12_GLOBAL__N_112kShouldPauseE, i64 0, i64 0)) #13
  %60 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %0, i64 0, i32 2
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp ne i8 %61, 0
  call void @_ZN12v8_inspector8protocol15DictionaryValue10setBooleanERKNS_8String16Eb(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %16, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7, i1 zeroext %62) #13
  %63 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %58
  %68 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %58, %67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #13
  %71 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 24, i1 false) #13
  %72 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13
  %73 = bitcast i8* %15 to %"class.v8_crdtp::Serializable"*
  call void @_ZNK8v8_crdtp12Serializable9SerializeEv(%"class.std::__1::vector"* nonnull sret %9, %"class.v8_crdtp::Serializable"* nonnull %73) #13
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = ptrtoint i8* %75 to i64
  %80 = sub i64 %78, %79
  %81 = call { i32, i64 } @_ZN8v8_crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %75, i64 %80, %"class.std::__1::vector"* nonnull %8) #13
  %82 = load i8*, i8** %74, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %70
  %85 = ptrtoint i8* %82 to i64
  store i64 %85, i64* %77, align 8
  call void @_ZdlPv(i8* nonnull %82) #14
  br label %86

86:                                               ; preds = %70, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %88 = bitcast i8** %87 to i64*
  %89 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 16
  %91 = bitcast %"class.std::__1::vector"* %10 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %91, align 16
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 16
  %95 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast i8** %95 to i64*
  store i64 %94, i64* %96, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 24, i1 false) #13
  %97 = call %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector16StringBufferFromENSt3__16vectorIhNS0_9allocatorIhEEEE(%"class.std::__1::vector"* nonnull %10) #13
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 16
  %100 = icmp eq i8* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %86
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %103 = bitcast i8** %102 to i64*
  %104 = ptrtoint i8* %99 to i64
  store i64 %104, i64* %103, align 8
  call void @_ZdlPv(i8* nonnull %99) #14
  br label %105

105:                                              ; preds = %86, %101
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 16
  %108 = icmp eq i8* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = ptrtoint i8* %107 to i64
  store i64 %110, i64* %88, align 8
  call void @_ZdlPv(i8* nonnull %107) #14
  br label %111

111:                                              ; preds = %105, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  %112 = bitcast i8* %15 to void (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %113 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %113, i64 2
  %115 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %114, align 8
  call void %115(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %16) #13
  br label %116

116:                                              ; preds = %1, %111
  %117 = phi %"class.v8_inspector::StringBuffer"* [ %97, %111 ], [ null, %1 ]
  ret %"class.v8_inspector::StringBuffer"* %117
}

declare void @_ZN12v8_inspector8protocol15DictionaryValue9setStringERKNS_8String16ES4_(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN12v8_inspector8String1613fromInteger64El(%"class.v8_inspector::String16"* sret, i64) local_unnamed_addr #2

declare void @_ZN12v8_inspector12V8DebuggerIdC1ENSt3__14pairIllEE(%"class.v8_inspector::V8DebuggerId"*, i64, i64) unnamed_addr #2

declare void @_ZNK12v8_inspector12V8DebuggerId8toStringEv(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::V8DebuggerId"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector8protocol15DictionaryValue10setBooleanERKNS_8String16Eb(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i1 zeroext) local_unnamed_addr #2

declare { i32, i64 } @_ZN8v8_crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

declare void @_ZNK8v8_crdtp12Serializable9SerializeEv(%"class.std::__1::vector"* sret, %"class.v8_crdtp::Serializable"*) local_unnamed_addr #2

declare %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector16StringBufferFromENSt3__16vectorIhNS0_9allocatorIhEEEE(%"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector10StackFrameC2EPN2v87IsolateENS1_5LocalINS1_10StackFrameEEE(%"class.v8_inspector::StackFrame"*, %"class.v8::Isolate"*, %"class.v8::StackFrame"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 0
  %5 = tail call %"class.v8::String"* @_ZN2v85debug20GetFunctionDebugNameENS_5LocalINS_10StackFrameEEE(%"class.v8::StackFrame"* %2) #13
  tail call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* sret %4, %"class.v8::Isolate"* %1, %"class.v8::String"* %5) #13
  %6 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 1
  %7 = tail call i32 @_ZNK2v810StackFrame11GetScriptIdEv(%"class.v8::StackFrame"* %2) #13
  store i32 %7, i32* %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 3
  %9 = tail call %"class.v8::String"* @_ZNK2v810StackFrame24GetScriptNameOrSourceURLEv(%"class.v8::StackFrame"* %2) #13
  tail call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* sret %8, %"class.v8::Isolate"* %1, %"class.v8::String"* %9) #13
  %10 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 4
  %11 = tail call i32 @_ZNK2v810StackFrame13GetLineNumberEv(%"class.v8::StackFrame"* %2) #13
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 5
  %14 = tail call i32 @_ZNK2v810StackFrame9GetColumnEv(%"class.v8::StackFrame"* %2) #13
  %15 = add nsw i32 %14, -1
  store i32 %15, i32* %13, align 4
  %16 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 6
  %17 = tail call %"class.v8::String"* @_ZNK2v810StackFrame13GetScriptNameEv(%"class.v8::StackFrame"* %2) #13
  %18 = tail call %"class.v8::String"* @_ZNK2v810StackFrame24GetScriptNameOrSourceURLEv(%"class.v8::StackFrame"* %2) #13
  %19 = icmp eq %"class.v8::String"* %17, null
  %20 = icmp eq %"class.v8::String"* %18, null
  %21 = or i1 %19, %20
  %22 = and i1 %19, %20
  br i1 %21, label %29, label %23

23:                                               ; preds = %3
  %24 = bitcast %"class.v8::String"* %18 to i64*
  %25 = bitcast %"class.v8::String"* %17 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %24, align 8
  %28 = icmp eq i64 %26, %27
  br label %29

29:                                               ; preds = %3, %23
  %30 = phi i1 [ %28, %23 ], [ %22, %3 ]
  %31 = xor i1 %30, true
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %16, align 8
  ret void
}

declare void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* sret, %"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v85debug20GetFunctionDebugNameENS_5LocalINS_10StackFrameEEE(%"class.v8::StackFrame"*) local_unnamed_addr #2

declare i32 @_ZNK2v810StackFrame11GetScriptIdEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v810StackFrame24GetScriptNameOrSourceURLEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

declare i32 @_ZNK2v810StackFrame13GetLineNumberEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

declare i32 @_ZNK2v810StackFrame9GetColumnEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v810StackFrame13GetScriptNameEv(%"class.v8::StackFrame"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"class.v8_inspector::String16"* @_ZNK12v8_inspector10StackFrame12functionNameEv(%"class.v8_inspector::StackFrame"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 0
  ret %"class.v8_inspector::String16"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector10StackFrame8scriptIdEv(%"class.v8_inspector::StackFrame"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"class.v8_inspector::String16"* @_ZNK12v8_inspector10StackFrame9sourceURLEv(%"class.v8_inspector::StackFrame"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 3
  ret %"class.v8_inspector::String16"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector10StackFrame10lineNumberEv(%"class.v8_inspector::StackFrame"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector10StackFrame12columnNumberEv(%"class.v8_inspector::StackFrame"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::CallFrame"* @_ZNK12v8_inspector10StackFrame20buildInspectorObjectEPNS_17V8InspectorClientE(%"class.v8_inspector::StackFrame"*, %"class.v8_inspector::V8InspectorClient"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::StringView", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::StringView", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #13
  %11 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 3
  call void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* nonnull sret %4, %"class.v8_inspector::String16"* %12, i64 0, i64 5)
  %13 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #13
  %14 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = icmp eq i64 %21, %29
  br i1 %30, label %31, label %54

31:                                               ; preds = %2
  %32 = icmp eq i64 %21, 0
  br i1 %32, label %54, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = bitcast %"class.v8_inspector::String16"* %5 to i16*
  %37 = select i1 %25, i16* %35, i16* %36
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  %40 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %41 = select i1 %17, i16* %39, i16* %40
  br label %42

42:                                               ; preds = %49, %33
  %43 = phi i64 [ %50, %49 ], [ %21, %33 ]
  %44 = phi i16* [ %52, %49 ], [ %37, %33 ]
  %45 = phi i16* [ %51, %49 ], [ %41, %33 ]
  %46 = load i16, i16* %45, align 2
  %47 = load i16, i16* %44, align 2
  %48 = icmp eq i16 %47, %46
  br i1 %48, label %49, label %54

49:                                               ; preds = %42
  %50 = add i64 %43, -1
  %51 = getelementptr inbounds i16, i16* %45, i64 1
  %52 = getelementptr inbounds i16, i16* %44, i64 1
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %54, label %42

54:                                               ; preds = %42, %49, %2, %31
  %55 = phi i1 [ true, %2 ], [ false, %31 ], [ false, %49 ], [ true, %42 ]
  br i1 %25, label %56, label %60

56:                                               ; preds = %54
  %57 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #14
  %59 = load i8, i8* %15, align 1
  br label %60

60:                                               ; preds = %54, %56
  %61 = phi i8 [ %16, %54 ], [ %59, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #13
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  br i1 %55, label %67, label %74

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %69 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 0
  %70 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* nonnull %68, %"class.std::__1::basic_string"* dereferenceable(24) %69) #13
  %71 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 3, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  store i64 %72, i64* %73, align 8
  br label %74

74:                                               ; preds = %67, %66
  %75 = icmp eq %"class.v8_inspector::V8InspectorClient"* %1, null
  br i1 %75, label %121, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 6
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %121

80:                                               ; preds = %76
  %81 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = zext i8 %83 to i64
  %88 = select i1 %84, i64 %86, i64 %87
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %121, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #13
  call void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* nonnull sret %6, %"class.v8_inspector::String16"* dereferenceable(32) %12) #13
  %92 = bitcast %"class.v8_inspector::V8InspectorClient"* %1 to %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)***
  %93 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)**, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)** %93, i64 28
  %95 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)** %94, align 8
  %96 = call %"class.v8_inspector::StringBuffer"* %95(%"class.v8_inspector::V8InspectorClient"* nonnull %1, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #13
  %97 = icmp eq %"class.v8_inspector::StringBuffer"* %96, null
  br i1 %97, label %121, label %98

98:                                               ; preds = %90
  %99 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %99) #13
  %100 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #13
  %101 = bitcast %"class.v8_inspector::StringBuffer"* %96 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)***
  %102 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %102, i64 2
  %104 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %103, align 8
  call void %104(%"class.v8_inspector::StringView"* nonnull sret %8, %"class.v8_inspector::StringBuffer"* nonnull %96) #13
  call void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* nonnull sret %7, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %8) #13
  %105 = load i8, i8* %82, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %98
  %108 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %107, %98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %99, i64 24, i1 false) #13
  %111 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %111, i64 0, i32 1, i32 1
  store i8 0, i8* %112, align 1
  %113 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  store i16 0, i16* %113, align 8
  %114 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  store i64 %115, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #13
  %117 = bitcast %"class.v8_inspector::StringBuffer"* %96 to void (%"class.v8_inspector::StringBuffer"*)***
  %118 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %118, i64 1
  %120 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %119, align 8
  call void %120(%"class.v8_inspector::StringBuffer"* nonnull %96) #13
  br label %121

121:                                              ; preds = %90, %110, %80, %76, %74
  %122 = call i8* @_Znwm(i64 112) #14
  %123 = bitcast i8* %122 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime9CallFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 104, i1 false) #13
  %125 = bitcast i8* %122 to %"class.v8_inspector::protocol::Runtime::CallFrame"*
  %126 = bitcast i8* %124 to %"class.std::__1::basic_string"*
  %127 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 0, i32 0
  %128 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %126, %"class.std::__1::basic_string"* dereferenceable(24) %127) #13
  %129 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds i8, i8* %122, i64 32
  %132 = bitcast i8* %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #13
  %134 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  call void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* nonnull sret %9, i32 %135) #13
  %136 = getelementptr inbounds i8, i8* %122, i64 40
  %137 = bitcast i8* %136 to %"class.std::__1::basic_string"*
  %138 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 0
  %139 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %137, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %138) #13
  %140 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds i8, i8* %122, i64 64
  %143 = bitcast i8* %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = getelementptr inbounds i8, i8* %122, i64 72
  %145 = bitcast i8* %144 to %"class.std::__1::basic_string"*
  %146 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %147 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %145, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %146) #13
  %148 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds i8, i8* %122, i64 96
  %151 = bitcast i8* %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds i8, i8* %122, i64 104
  %155 = bitcast i8* %154 to i32*
  store i32 %153, i32* %155, align 8
  %156 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 5
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds i8, i8* %122, i64 108
  %159 = bitcast i8* %158 to i32*
  store i32 %157, i32* %159, align 4
  %160 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %160, i64 0, i32 1, i32 1
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %121
  %165 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %164, %121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #13
  %168 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %168, i64 0, i32 1, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %167
  %173 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %167, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #13
  ret %"class.v8_inspector::protocol::Runtime::CallFrame"* %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::String16"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1, !noalias !3
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !3
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %17) #15
  unreachable

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8, !noalias !3
  %21 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %22 = select i1 %10, i16* %20, i16* %21
  %23 = getelementptr inbounds i16, i16* %22, i64 %2
  %24 = sub i64 %14, %2
  %25 = icmp ult i64 %24, %3
  %26 = select i1 %25, i64 %24, i64 %3
  %27 = icmp ugt i64 %26, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #15
  unreachable

30:                                               ; preds = %18
  %31 = icmp ult i64 %26, 11
  br i1 %31, label %45, label %32

32:                                               ; preds = %30
  %33 = add nuw nsw i64 %26, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #15
  unreachable

37:                                               ; preds = %32
  %38 = shl i64 %34, 1
  %39 = tail call i8* @_Znwm(i64 %38) #14
  %40 = bitcast i8* %39 to i16*
  %41 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %39, i8** %41, align 8, !alias.scope !3
  %42 = or i64 %34, -9223372036854775808
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8, !alias.scope !3
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %44, align 8, !alias.scope !3
  br label %51

45:                                               ; preds = %30
  %46 = trunc i64 %26 to i8
  %47 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %47, i64 0, i32 1, i32 1
  store i8 %46, i8* %48, align 1, !alias.scope !3
  %49 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %50 = icmp eq i64 %26, 0
  br i1 %50, label %198, label %51

51:                                               ; preds = %45, %37
  %52 = phi i16* [ %40, %37 ], [ %49, %45 ]
  %53 = icmp ult i64 %26, 16
  br i1 %53, label %143, label %54

54:                                               ; preds = %51
  %55 = getelementptr i16, i16* %52, i64 %26
  %56 = add i64 %26, %2
  %57 = getelementptr i16, i16* %22, i64 %56
  %58 = icmp ult i16* %52, %57
  %59 = icmp ult i16* %23, %55
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %54
  %62 = and i64 %26, -16
  %63 = getelementptr i16, i16* %52, i64 %62
  %64 = sub i64 %26, %62
  %65 = getelementptr i16, i16* %23, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %52, i64 %74
  %77 = getelementptr i16, i16* %23, i64 %74
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !6
  %80 = getelementptr i16, i16* %77, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !6
  %83 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !9, !noalias !6
  %84 = getelementptr i16, i16* %76, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !9, !noalias !6
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %52, i64 %86
  %88 = getelementptr i16, i16* %23, i64 %86
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !6
  %91 = getelementptr i16, i16* %88, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !6
  %94 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !9, !noalias !6
  %95 = getelementptr i16, i16* %87, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !9, !noalias !6
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %52, i64 %97
  %99 = getelementptr i16, i16* %23, i64 %97
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !6
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !6
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !9, !noalias !6
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !9, !noalias !6
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %52, i64 %108
  %110 = getelementptr i16, i16* %23, i64 %108
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !6
  %113 = getelementptr i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !6
  %116 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !9, !noalias !6
  %117 = getelementptr i16, i16* %109, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !9, !noalias !6
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !11

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %52, i64 %126
  %129 = getelementptr i16, i16* %23, i64 %126
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !6
  %132 = getelementptr i16, i16* %129, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !6
  %135 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !9, !noalias !6
  %136 = getelementptr i16, i16* %128, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !9, !noalias !6
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !13

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %26, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %54, %51
  %144 = phi i16* [ %52, %54 ], [ %52, %51 ], [ %63, %141 ]
  %145 = phi i64 [ %26, %54 ], [ %26, %51 ], [ %64, %141 ]
  %146 = phi i16* [ %23, %54 ], [ %23, %51 ], [ %65, %141 ]
  %147 = add i64 %145, -1
  %148 = and i64 %145, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i16* [ %157, %150 ], [ %144, %143 ]
  %152 = phi i64 [ %156, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %158, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %153, align 2
  store i16 %155, i16* %151, align 2
  %156 = add i64 %152, -1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = getelementptr inbounds i16, i16* %153, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !15

161:                                              ; preds = %150, %143
  %162 = phi i16* [ %144, %143 ], [ %157, %150 ]
  %163 = phi i64 [ %145, %143 ], [ %156, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %158, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i16* [ %193, %166 ], [ %162, %161 ]
  %168 = phi i64 [ %192, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %194, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %167, align 2
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = getelementptr inbounds i16, i16* %169, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = getelementptr inbounds i16, i16* %169, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = getelementptr inbounds i16, i16* %169, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = getelementptr inbounds i16, i16* %169, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = getelementptr inbounds i16, i16* %169, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = getelementptr inbounds i16, i16* %169, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = getelementptr inbounds i16, i16* %169, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %168, -8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = getelementptr inbounds i16, i16* %169, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !16

196:                                              ; preds = %161, %166, %141
  %197 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  br label %198

198:                                              ; preds = %196, %45
  %199 = phi %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* [ %197, %196 ], [ %47, %45 ]
  %200 = phi i16* [ %52, %196 ], [ %49, %45 ]
  %201 = getelementptr inbounds i16, i16* %200, i64 %26
  store i16 0, i16* %201, align 2
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #13
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %199, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %198
  %206 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %207 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %207) #14
  br label %208

208:                                              ; preds = %198, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

declare void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* sret, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* sret, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector10StackFrame7isEqualEPS0_(%"class.v8_inspector::StackFrame"* nocapture readonly, %"class.v8_inspector::StackFrame"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %1, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8StackTraceImpl41setCaptureStackTraceForUncaughtExceptionsEPN2v87IsolateEb(%"class.v8::Isolate"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* @_ZN12v8_inspector16V8StackTraceImpl25maxCallStackSizeToCaptureE, align 4
  tail call void @_ZN2v87Isolate41SetCaptureStackTraceForUncaughtExceptionsEbiNS_10StackTrace17StackTraceOptionsE(%"class.v8::Isolate"* %0, i1 zeroext %1, i32 %3, i32 15) #13
  ret void
}

declare void @_ZN2v87Isolate41SetCaptureStackTraceForUncaughtExceptionsEbiNS_10StackTrace17StackTraceOptionsE(%"class.v8::Isolate"*, i1 zeroext, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::V8StackTraceImpl"* @_ZN12v8_inspector16V8StackTraceImpl6createEPNS_10V8DebuggerEiN2v85LocalINS3_10StackTraceEEEi(%"class.v8_inspector::V8Debugger"*, i32, %"class.v8::StackTrace"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %6 = alloca %"class.v8::HandleScope", align 8
  %7 = alloca %"class.std::__1::vector.64", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::shared_ptr.280", align 8
  %10 = alloca %"struct.v8_inspector::V8StackTraceId", align 8
  %11 = getelementptr inbounds %"class.v8_inspector::V8Debugger", %"class.v8_inspector::V8Debugger"* %0, i64 0, i32 2
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %6, %"class.v8::Isolate"* %12) #13
  %14 = icmp eq %"class.v8::StackTrace"* %2, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %4
  %16 = call i32 @_ZNK2v810StackTrace13GetFrameCountEv(%"class.v8::StackTrace"* nonnull %2) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::vector.64"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_114toFramesVectorEPNS_10V8DebuggerEN2v85LocalINS3_10StackTraceEEEi(%"class.std::__1::vector.64"* noalias nonnull %7, %"class.v8_inspector::V8Debugger"* %0, %"class.v8::StackTrace"* nonnull %2, i32 %3)
  %20 = bitcast %"class.std::__1::vector.64"* %7 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %7, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::shared_ptr"** %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %25

25:                                               ; preds = %15, %18, %4
  %26 = phi i64 [ 0, %4 ], [ 0, %15 ], [ %21, %18 ]
  %27 = phi <2 x i64> [ zeroinitializer, %4 ], [ zeroinitializer, %15 ], [ %24, %18 ]
  %28 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  store i32 0, i32* %8, align 4
  %29 = bitcast %"class.std::__1::shared_ptr.280"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #13
  %30 = bitcast %"struct.v8_inspector::V8StackTraceId"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %10, i64 0, i32 0
  store i64 0, i64* %31, align 8
  %32 = bitcast %"class.v8_inspector::V8DebuggerId"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #13
  %33 = call { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"* nonnull %5) #13
  %34 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %10, i64 0, i32 1, i32 0
  %35 = extractvalue { i64, i64 } %33, 0
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %10, i64 0, i32 1, i32 1
  %37 = extractvalue { i64, i64 } %33, 1
  store i64 %37, i64* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  %38 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %10, i64 0, i32 2
  store i8 0, i8* %38, align 8
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_119calculateAsyncChainEPNS_10V8DebuggerEiPNSt3__110shared_ptrINS_15AsyncStackTraceEEEPNS_14V8StackTraceIdEPi(%"class.v8_inspector::V8Debugger"* %0, i32 %1, %"class.std::__1::shared_ptr.280"* nonnull %9, %"struct.v8_inspector::V8StackTraceId"* nonnull %10, i32* nonnull %8)
  %39 = inttoptr i64 %26 to %"class.std::__1::shared_ptr"*
  %40 = extractelement <2 x i64> %27, i32 0
  %41 = inttoptr i64 %40 to %"class.std::__1::shared_ptr"*
  %42 = icmp eq %"class.std::__1::shared_ptr"* %39, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %25
  %44 = bitcast %"class.std::__1::shared_ptr.280"* %9 to i64*
  %45 = load i64, i64* %44, align 8
  br label %55

46:                                               ; preds = %25
  %47 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %9, i64 0, i32 0
  %48 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %47, align 8
  %49 = icmp eq %"class.v8_inspector::AsyncStackTrace"* %48, null
  %50 = load i64, i64* %31, align 8
  %51 = icmp eq i64 %50, 0
  %52 = and i1 %49, %51
  br i1 %52, label %94, label %53

53:                                               ; preds = %46
  %54 = ptrtoint %"class.v8_inspector::AsyncStackTrace"* %48 to i64
  br label %55

55:                                               ; preds = %53, %43
  %56 = phi i64 [ %45, %43 ], [ %54, %53 ]
  %57 = call i8* @_Znwm(i64 88) #14
  %58 = load i32, i32* %8, align 4
  %59 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %9, i64 0, i32 1
  %60 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %59, align 8
  %61 = icmp eq %"class.std::__1::__shared_weak_count"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0, i32 1
  %64 = atomicrmw add i64* %63, i64 1 monotonic
  br label %65

65:                                               ; preds = %55, %62
  %66 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN12v8_inspector16V8StackTraceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %57, i64 8
  %68 = bitcast i8* %67 to i64*
  store i64 %26, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %57, i64 16
  %70 = bitcast i8* %69 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds i8, i8* %57, i64 32
  %72 = bitcast i8* %71 to i32*
  store i32 %58, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %57, i64 40
  %74 = bitcast i8* %73 to i64*
  store i64 %56, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %57, i64 48
  %76 = bitcast i8* %75 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %60, %"class.std::__1::__shared_weak_count"** %76, align 8
  br i1 %61, label %77, label %79

77:                                               ; preds = %65
  %78 = getelementptr inbounds i8, i8* %57, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %30, i64 32, i1 false) #13
  br label %92

79:                                               ; preds = %65
  %80 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 1
  %81 = atomicrmw add i64* %80, i64 1 monotonic
  %82 = getelementptr inbounds i8, i8* %57, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %30, i64 32, i1 false) #13
  %83 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0, i32 1
  %84 = atomicrmw add i64* %83, i64 -1 acq_rel
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0
  %88 = bitcast %"class.std::__1::__shared_weak_count"* %60 to void (%"class.std::__1::__shared_count"*)***
  %89 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %89, i64 2
  %91 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %90, align 8
  call void %91(%"class.std::__1::__shared_count"* %87) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %60) #13
  br label %92

92:                                               ; preds = %77, %79, %86
  %93 = bitcast i8* %57 to %"class.v8_inspector::V8StackTraceImpl"*
  br label %94

94:                                               ; preds = %46, %92
  %95 = phi i64 [ 0, %92 ], [ %40, %46 ]
  %96 = phi i64 [ 0, %92 ], [ %26, %46 ]
  %97 = phi %"class.v8_inspector::V8StackTraceImpl"* [ %93, %92 ], [ null, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #13
  %98 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %9, i64 0, i32 1
  %99 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %98, align 8
  %100 = icmp eq %"class.std::__1::__shared_weak_count"* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %99, i64 0, i32 0, i32 1
  %103 = atomicrmw add i64* %102, i64 -1 acq_rel
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %99, i64 0, i32 0
  %107 = bitcast %"class.std::__1::__shared_weak_count"* %99 to void (%"class.std::__1::__shared_count"*)***
  %108 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %108, i64 2
  %110 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %109, align 8
  call void %110(%"class.std::__1::__shared_count"* %106) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %99) #13
  br label %111

111:                                              ; preds = %94, %101, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  %112 = inttoptr i64 %96 to %"class.std::__1::shared_ptr"*
  %113 = icmp eq i64 %96, 0
  br i1 %113, label %137, label %114

114:                                              ; preds = %111
  %115 = inttoptr i64 %95 to %"class.std::__1::shared_ptr"*
  %116 = icmp eq %"class.std::__1::shared_ptr"* %115, %112
  br i1 %116, label %135, label %117

117:                                              ; preds = %114, %133
  %118 = phi %"class.std::__1::shared_ptr"* [ %119, %133 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %118, i64 -1, i32 1
  %121 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %120, align 8
  %122 = icmp eq %"class.std::__1::__shared_weak_count"* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %121, i64 0, i32 0, i32 1
  %125 = atomicrmw add i64* %124, i64 -1 acq_rel
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %121, i64 0, i32 0
  %129 = bitcast %"class.std::__1::__shared_weak_count"* %121 to void (%"class.std::__1::__shared_count"*)***
  %130 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %130, i64 2
  %132 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %131, align 8
  call void %132(%"class.std::__1::__shared_count"* %128) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %121) #13
  br label %133

133:                                              ; preds = %127, %123, %117
  %134 = icmp eq %"class.std::__1::shared_ptr"* %119, %112
  br i1 %134, label %135, label %117

135:                                              ; preds = %133, %114
  %136 = inttoptr i64 %96 to i8*
  call void @_ZdlPv(i8* %136) #14
  br label %137

137:                                              ; preds = %111, %135
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  ret %"class.v8_inspector::V8StackTraceImpl"* %97
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare i32 @_ZNK2v810StackTrace13GetFrameCountEv(%"class.v8::StackTrace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_114toFramesVectorEPNS_10V8DebuggerEN2v85LocalINS3_10StackTraceEEEi(%"class.std::__1::vector.64"* noalias, %"class.v8_inspector::V8Debugger"*, %"class.v8::StackTrace"*, i32) unnamed_addr #0 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.444"], align 16
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %10 = tail call i32 @_ZNK2v810StackTrace13GetFrameCountEv(%"class.v8::StackTrace"* %2) #13
  %11 = icmp sgt i32 %10, %3
  %12 = select i1 %11, i32 %3, i32 %10
  %13 = load atomic i64, i64* @_ZZN12v8_inspector12_GLOBAL__N_114toFramesVectorEPNS_10V8DebuggerEN2v85LocalINS3_10StackTraceEEEiE27trace_event_unique_atomic41 monotonic, align 8
  %14 = inttoptr i64 %13 to i8*
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %4
  %17 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %18 = bitcast %"class.v8::TracingController"* %17 to i8* (%"class.v8::TracingController"*, i8*)***
  %19 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %19, i64 2
  %21 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %20, align 8
  %22 = tail call i8* %21(%"class.v8::TracingController"* %17, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #13
  %23 = ptrtoint i8* %22 to i64
  store atomic volatile i64 %23, i64* @_ZZN12v8_inspector12_GLOBAL__N_114toFramesVectorEPNS_10V8DebuggerEN2v85LocalINS3_10StackTraceEEEiE27trace_event_unique_atomic41 monotonic, align 8
  br label %24

24:                                               ; preds = %4, %16
  %25 = phi i8* [ %14, %4 ], [ %22, %16 ]
  %26 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %27, align 8
  %28 = load atomic i8, i8* %25 monotonic, align 1
  %29 = and i8 %28, 5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = sext i32 %12 to i64
  br label %67

33:                                               ; preds = %24
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  %35 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  store i8 3, i8* %7, align 1
  %36 = sext i32 %12 to i64
  store i64 %36, i64* %8, align 8
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.444"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #13
  %39 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i64 0, i32 1, i8** nonnull %6, i8* nonnull %7, i64* nonnull %8, %"class.std::__1::unique_ptr.444"* nonnull %38, i32 0) #13
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %33
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #13
  br label %53

53:                                               ; preds = %48, %33
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #13
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %25, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %27, align 8
  br label %67

67:                                               ; preds = %31, %62
  %68 = phi i64 [ %32, %31 ], [ %36, %62 ]
  %69 = phi %"struct.v8::internal::tracing::ScopedTracer::Data"* [ null, %31 ], [ %63, %62 ]
  %70 = bitcast %"class.std::__1::vector.64"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #13
  %71 = icmp eq i32 %12, 0
  br i1 %71, label %127, label %72

72:                                               ; preds = %67
  %73 = icmp slt i32 %12, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector.64"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #15
  unreachable

76:                                               ; preds = %72
  %77 = shl nsw i64 %68, 4
  %78 = call i8* @_Znwm(i64 %77) #14
  %79 = bitcast i8* %78 to %"class.std::__1::shared_ptr"*
  %80 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %0, i64 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::vector.64"* %0 to i8**
  store i8* %78, i8** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %79, i64 %68
  %83 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::shared_ptr"* %82, %"class.std::__1::shared_ptr"** %83, align 8
  %84 = bitcast %"class.std::__1::shared_ptr"** %80 to i64*
  %85 = ptrtoint i8* %78 to i64
  %86 = add nsw i64 %68, -1
  %87 = getelementptr %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %79, i64 %86, i32 0
  %88 = ptrtoint %"class.v8_inspector::StackFrame"** %87 to i64
  %89 = sub i64 16, %85
  %90 = add i64 %89, %88
  %91 = and i64 %90, -16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 %91, i1 false) #13
  %92 = ptrtoint %"class.std::__1::shared_ptr"* %82 to i64
  store i64 %92, i64* %84, align 8
  %93 = getelementptr inbounds %"class.v8_inspector::V8Debugger", %"class.v8_inspector::V8Debugger"* %1, i64 0, i32 2
  %94 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %0, i64 0, i32 0, i32 0
  br label %95

95:                                               ; preds = %76, %122
  %96 = phi i64 [ 0, %76 ], [ %123, %122 ]
  %97 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8
  %98 = trunc i64 %96 to i32
  %99 = call %"class.v8::StackFrame"* @_ZNK2v810StackTrace8GetFrameEPNS_7IsolateEj(%"class.v8::StackTrace"* %2, %"class.v8::Isolate"* %97, i32 %98) #13
  %100 = call { %"class.v8_inspector::StackFrame"*, %"class.std::__1::__shared_weak_count"* } @_ZN12v8_inspector10V8Debugger9symbolizeEN2v85LocalINS1_10StackFrameEEE(%"class.v8_inspector::V8Debugger"* %1, %"class.v8::StackFrame"* %99) #13
  %101 = extractvalue { %"class.v8_inspector::StackFrame"*, %"class.std::__1::__shared_weak_count"* } %100, 0
  %102 = ptrtoint %"class.v8_inspector::StackFrame"* %101 to i64
  %103 = extractvalue { %"class.v8_inspector::StackFrame"*, %"class.std::__1::__shared_weak_count"* } %100, 1
  %104 = ptrtoint %"class.std::__1::__shared_weak_count"* %103 to i64
  %105 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %94, align 8
  %106 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %105, i64 %96
  %107 = bitcast %"class.std::__1::shared_ptr"* %106 to i64*
  store i64 %102, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %105, i64 %96, i32 1
  %109 = bitcast %"class.std::__1::__shared_weak_count"** %108 to i64*
  %110 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %108, align 8
  store i64 %104, i64* %109, align 8
  %111 = icmp eq %"class.std::__1::__shared_weak_count"* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %95
  %113 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %110, i64 0, i32 0, i32 1
  %114 = atomicrmw add i64* %113, i64 -1 acq_rel
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %110, i64 0, i32 0
  %118 = bitcast %"class.std::__1::__shared_weak_count"* %110 to void (%"class.std::__1::__shared_count"*)***
  %119 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %119, i64 2
  %121 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %120, align 8
  call void %121(%"class.std::__1::__shared_count"* %117) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %110) #13
  br label %122

122:                                              ; preds = %116, %112, %95
  %123 = add nuw nsw i64 %96, 1
  %124 = icmp slt i64 %123, %68
  br i1 %124, label %95, label %125

125:                                              ; preds = %122
  %126 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %27, align 8
  br label %127

127:                                              ; preds = %67, %125
  %128 = phi %"struct.v8::internal::tracing::ScopedTracer::Data"* [ %126, %125 ], [ %69, %67 ]
  %129 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %128, null
  br i1 %129, label %146, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = load atomic i8, i8* %132 monotonic, align 1
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %146, label %135

135:                                              ; preds = %130
  %136 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %137 = load i8*, i8** %131, align 8
  %138 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.v8::TracingController"* %136 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %143 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %143, i64 5
  %145 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %144, align 8
  call void %145(%"class.v8::TracingController"* %136, i8* %137, i8* %139, i64 %141) #13
  br label %146

146:                                              ; preds = %127, %130, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_119calculateAsyncChainEPNS_10V8DebuggerEiPNSt3__110shared_ptrINS_15AsyncStackTraceEEEPNS_14V8StackTraceIdEPi(%"class.v8_inspector::V8Debugger"*, i32, %"class.std::__1::shared_ptr.280"* nocapture, %"struct.v8_inspector::V8StackTraceId"* nocapture, i32*) unnamed_addr #0 {
  %6 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %7 = alloca %"struct.v8_inspector::V8StackTraceId", align 16
  %8 = tail call { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } @_ZN12v8_inspector10V8Debugger18currentAsyncParentEv(%"class.v8_inspector::V8Debugger"* %0) #13
  %9 = extractvalue { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } %8, 0
  %10 = ptrtoint %"class.v8_inspector::AsyncStackTrace"* %9 to i64
  %11 = extractvalue { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } %8, 1
  %12 = ptrtoint %"class.std::__1::__shared_weak_count"* %11 to i64
  %13 = bitcast %"class.std::__1::shared_ptr.280"* %2 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %2, i64 0, i32 1
  %15 = bitcast %"class.std::__1::__shared_weak_count"** %14 to i64*
  %16 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  store i64 %12, i64* %15, align 8
  %17 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0, i32 1
  %20 = atomicrmw add i64* %19, i64 -1 acq_rel
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0
  %24 = bitcast %"class.std::__1::__shared_weak_count"* %16 to void (%"class.std::__1::__shared_count"*)***
  %25 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %25, i64 2
  %27 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, align 8
  tail call void %27(%"class.std::__1::__shared_count"* %23) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %16) #13
  br label %28

28:                                               ; preds = %22, %18, %5
  %29 = bitcast %"struct.v8_inspector::V8StackTraceId"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #13
  call void @_ZN12v8_inspector10V8Debugger21currentExternalParentEv(%"struct.v8_inspector::V8StackTraceId"* nonnull sret %7, %"class.v8_inspector::V8Debugger"* %0) #13
  %30 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %3, i64 0, i32 0
  %31 = bitcast %"struct.v8_inspector::V8StackTraceId"* %7 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 16
  %33 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %3, i64 0, i32 1, i32 0
  %34 = bitcast %"struct.v8_inspector::V8StackTraceId"* %3 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %7, i64 0, i32 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %3, i64 0, i32 1, i32 1
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %7, i64 0, i32 2
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %3, i64 0, i32 2
  store i8 %39, i8* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #13
  %41 = icmp ne i32* %4, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %28
  %43 = getelementptr inbounds %"class.v8_inspector::V8Debugger", %"class.v8_inspector::V8Debugger"* %0, i64 0, i32 18
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %4, align 4
  br label %45

45:                                               ; preds = %42, %28
  %46 = icmp eq i32 %1, 0
  %47 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %2, i64 0, i32 0
  %48 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %47, align 8
  %49 = icmp eq %"class.v8_inspector::AsyncStackTrace"* %48, null
  br i1 %46, label %79, label %50

50:                                               ; preds = %45
  br i1 %49, label %117, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %48, i64 0, i32 6, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %80

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %80, label %59

59:                                               ; preds = %55
  %60 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %61 = bitcast %"class.std::__1::shared_ptr.280"* %2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %61, align 8
  %62 = icmp eq %"class.std::__1::__shared_weak_count"* %60, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0, i32 1
  %65 = atomicrmw add i64* %64, i64 -1 acq_rel
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0
  %69 = bitcast %"class.std::__1::__shared_weak_count"* %60 to void (%"class.std::__1::__shared_count"*)***
  %70 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %70, i64 2
  %72 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %71, align 8
  call void %72(%"class.std::__1::__shared_count"* %68) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %60) #13
  br label %73

73:                                               ; preds = %59, %63, %67
  %74 = bitcast %"class.v8_inspector::V8DebuggerId"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 16, i1 false) #13
  %75 = call { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"* nonnull %6) #13
  %76 = extractvalue { i64, i64 } %75, 0
  %77 = extractvalue { i64, i64 } %75, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #13
  store i64 0, i64* %30, align 8
  store i64 %76, i64* %33, align 8
  store i64 %77, i64* %37, align 8
  store i8 0, i8* %40, align 8
  br i1 %41, label %78, label %117

78:                                               ; preds = %73
  store i32 0, i32* %4, align 4
  br label %117

79:                                               ; preds = %45
  br i1 %49, label %117, label %80

80:                                               ; preds = %51, %55, %79
  %81 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %48, i64 0, i32 4, i32 0, i32 0
  %82 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %81, align 8
  %83 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %48, i64 0, i32 4, i32 0, i32 1
  %84 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %83, align 8
  %85 = icmp eq %"class.std::__1::shared_ptr"* %82, %84
  br i1 %85, label %86, label %117

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %48, i64 0, i32 5, i32 1
  %88 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %87, align 8
  %89 = icmp eq %"class.std::__1::__shared_weak_count"* %88, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %48, i64 0, i32 5, i32 0
  %92 = bitcast %"class.v8_inspector::AsyncStackTrace"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %88, i64 0, i32 1
  %95 = atomicrmw add i64* %94, i64 1 monotonic
  %96 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %88) #13
  %97 = icmp eq %"class.std::__1::__shared_weak_count"* %96, null
  %98 = select i1 %97, i64 0, i64 %93
  %99 = ptrtoint %"class.std::__1::__shared_weak_count"* %96 to i64
  br label %100

100:                                              ; preds = %90, %86
  %101 = phi i64 [ 0, %86 ], [ %99, %90 ]
  %102 = phi i64 [ 0, %86 ], [ %98, %90 ]
  store i64 %102, i64* %13, align 8
  %103 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  store i64 %101, i64* %15, align 8
  %104 = icmp eq %"class.std::__1::__shared_weak_count"* %103, null
  br i1 %104, label %115, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %103, i64 0, i32 0, i32 1
  %107 = atomicrmw add i64* %106, i64 -1 acq_rel
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %103, i64 0, i32 0
  %111 = bitcast %"class.std::__1::__shared_weak_count"* %103 to void (%"class.std::__1::__shared_count"*)***
  %112 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %112, i64 2
  %114 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %113, align 8
  call void %114(%"class.std::__1::__shared_count"* %110) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %103) #13
  br label %115

115:                                              ; preds = %109, %105, %100
  br i1 %89, label %117, label %116

116:                                              ; preds = %115
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %88) #13
  br label %117

117:                                              ; preds = %50, %79, %116, %115, %73, %78, %80
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::V8StackTraceImpl"* @_ZN12v8_inspector16V8StackTraceImpl7captureEPNS_10V8DebuggerEii(%"class.v8_inspector::V8Debugger"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.444"], align 16
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = alloca %"class.v8::HandleScope", align 8
  %10 = load atomic i64, i64* @_ZZN12v8_inspector16V8StackTraceImpl7captureEPNS_10V8DebuggerEiiE28trace_event_unique_atomic270 monotonic, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %3
  %14 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %15 = bitcast %"class.v8::TracingController"* %14 to i8* (%"class.v8::TracingController"*, i8*)***
  %16 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %16, i64 2
  %18 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %17, align 8
  %19 = tail call i8* %18(%"class.v8::TracingController"* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #13
  %20 = ptrtoint i8* %19 to i64
  store atomic volatile i64 %20, i64* @_ZZN12v8_inspector16V8StackTraceImpl7captureEPNS_10V8DebuggerEiiE28trace_event_unique_atomic270 monotonic, align 8
  br label %21

21:                                               ; preds = %3, %13
  %22 = phi i8* [ %11, %3 ], [ %19, %13 ]
  %23 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %24, align 8
  %25 = load atomic i8, i8* %22 monotonic, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %62, label %28

28:                                               ; preds = %21
  %29 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  %30 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  store i8 3, i8* %6, align 1
  %31 = sext i32 %2 to i64
  store i64 %31, i64* %7, align 8
  %32 = bitcast [2 x %"class.std::__1::unique_ptr.444"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %33 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 0, i64 16, i1 false) #13
  %34 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %35 = bitcast %"class.v8::TracingController"* %34 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)***
  %36 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)** %36, i64 3
  %38 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)** %37, align 8
  %39 = call i64 %38(%"class.v8::TracingController"* %34, i8 signext 88, i8* %22, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 1, i8** nonnull %5, i8* nonnull %6, i64* nonnull %7, %"class.std::__1::unique_ptr.444"* nonnull %33, i32 0) #13
  %40 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %41 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %40, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %40, align 8
  %42 = icmp eq %"class.v8::ConvertableToTraceFormat"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %28
  %44 = bitcast %"class.v8::ConvertableToTraceFormat"* %41 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %45 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %45, i64 1
  %47 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %46, align 8
  call void %47(%"class.v8::ConvertableToTraceFormat"* nonnull %41) #13
  br label %48

48:                                               ; preds = %43, %28
  %49 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %49, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %49, align 16
  %51 = icmp eq %"class.v8::ConvertableToTraceFormat"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.v8::ConvertableToTraceFormat"* %50 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %54 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %54, i64 1
  %56 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %55, align 8
  call void %56(%"class.v8::ConvertableToTraceFormat"* nonnull %50) #13
  br label %57

57:                                               ; preds = %48, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %58 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %58, i64 0, i32 0
  store i8* %22, i8** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %39, i64* %61, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %58, %"struct.v8::internal::tracing::ScopedTracer::Data"** %24, align 8
  br label %62

62:                                               ; preds = %21, %57
  %63 = getelementptr inbounds %"class.v8_inspector::V8Debugger", %"class.v8_inspector::V8Debugger"* %0, i64 0, i32 2
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::HandleScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #13
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %9, %"class.v8::Isolate"* %64) #13
  %66 = call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %64) #13
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  %68 = call %"class.v8::StackTrace"* @_ZN2v810StackTrace17CurrentStackTraceEPNS_7IsolateEiNS0_17StackTraceOptionsE(%"class.v8::Isolate"* %64, i32 %2, i32 383) #13
  br label %69

69:                                               ; preds = %67, %62
  %70 = phi %"class.v8::StackTrace"* [ %68, %67 ], [ null, %62 ]
  %71 = call %"class.v8_inspector::V8StackTraceImpl"* @_ZN12v8_inspector16V8StackTraceImpl6createEPNS_10V8DebuggerEiN2v85LocalINS3_10StackTraceEEEi(%"class.v8_inspector::V8Debugger"* %0, i32 %1, %"class.v8::StackTrace"* %70, i32 %2)
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #13
  %72 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %24, align 8
  %73 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %72, null
  br i1 %73, label %90, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = load atomic i8, i8* %76 monotonic, align 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %74
  %80 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %81 = load i8*, i8** %75, align 8
  %82 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.v8::TracingController"* %80 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %87 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %87, i64 5
  %89 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %88, align 8
  call void %89(%"class.v8::TracingController"* %80, i8* %81, i8* %83, i64 %85) #13
  br label %90

90:                                               ; preds = %69, %74, %79
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #13
  ret %"class.v8_inspector::V8StackTraceImpl"* %71
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::StackTrace"* @_ZN2v810StackTrace17CurrentStackTraceEPNS_7IsolateEiNS0_17StackTraceOptionsE(%"class.v8::Isolate"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8StackTraceImplC2ENSt3__16vectorINS1_10shared_ptrINS_10StackFrameEEENS1_9allocatorIS5_EEEEiNS3_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdE(%"class.v8_inspector::V8StackTraceImpl"* nocapture, %"class.std::__1::vector.64"* nocapture, i32, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*, %"struct.v8_inspector::V8StackTraceId"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.v8_inspector::AsyncStackTrace"* %3 to i64
  %8 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN12v8_inspector16V8StackTraceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::vector.64"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #13
  %11 = bitcast %"class.std::__1::vector.64"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.64"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::shared_ptr"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.std::__1::shared_ptr"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::shared_ptr"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.std::__1::shared_ptr"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector.64"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #13
  %25 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 2
  store i32 %2, i32* %25, align 8
  %26 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3
  %27 = bitcast %"class.std::__1::weak_ptr"* %26 to i64*
  store i64 %7, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 1
  store %"class.std::__1::__shared_weak_count"* %4, %"class.std::__1::__shared_weak_count"** %28, align 8
  %29 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 4
  %32 = bitcast %"struct.v8_inspector::V8StackTraceId"* %31 to i8*
  %33 = bitcast %"struct.v8_inspector::V8StackTraceId"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
  br label %49

34:                                               ; preds = %6
  %35 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 1
  %36 = atomicrmw add i64* %35, i64 1 monotonic
  %37 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 4
  %38 = bitcast %"struct.v8_inspector::V8StackTraceId"* %37 to i8*
  %39 = bitcast %"struct.v8_inspector::V8StackTraceId"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false)
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %41 = atomicrmw add i64* %40, i64 -1 acq_rel
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %45 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %46 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %46, i64 2
  %48 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %47, align 8
  tail call void %48(%"class.std::__1::__shared_count"* %44) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #13
  br label %49

49:                                               ; preds = %30, %34, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8StackTraceImplD2Ev(%"class.v8_inspector::V8StackTraceImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN12v8_inspector16V8StackTraceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #13
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::shared_ptr"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::shared_ptr"* %10 to i8*
  %14 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %14, align 8
  %16 = icmp eq %"class.std::__1::shared_ptr"* %15, %10
  br i1 %16, label %38, label %17

17:                                               ; preds = %12, %33
  %18 = phi %"class.std::__1::shared_ptr"* [ %19, %33 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %18, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %18, i64 -1, i32 1
  %21 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %20, align 8
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %21 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  tail call void %32(%"class.std::__1::__shared_count"* %28) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %21) #13
  br label %33

33:                                               ; preds = %27, %23, %17
  %34 = icmp eq %"class.std::__1::shared_ptr"* %19, %10
  br i1 %34, label %35, label %17

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector.64"* %8 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %12
  %39 = phi i8* [ %37, %35 ], [ %13, %12 ]
  store %"class.std::__1::shared_ptr"* %10, %"class.std::__1::shared_ptr"** %14, align 8
  tail call void @_ZdlPv(i8* %39) #14
  br label %40

40:                                               ; preds = %7, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8StackTraceImplD0Ev(%"class.v8_inspector::V8StackTraceImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN12v8_inspector16V8StackTraceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #13
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::shared_ptr"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::shared_ptr"* %10 to i8*
  %14 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %14, align 8
  %16 = icmp eq %"class.std::__1::shared_ptr"* %15, %10
  br i1 %16, label %38, label %17

17:                                               ; preds = %12, %33
  %18 = phi %"class.std::__1::shared_ptr"* [ %19, %33 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %18, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %18, i64 -1, i32 1
  %21 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %20, align 8
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %21 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  tail call void %32(%"class.std::__1::__shared_count"* %28) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %21) #13
  br label %33

33:                                               ; preds = %27, %23, %17
  %34 = icmp eq %"class.std::__1::shared_ptr"* %19, %10
  br i1 %34, label %35, label %17

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector.64"* %8 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %12
  %39 = phi i8* [ %37, %35 ], [ %13, %12 ]
  store %"class.std::__1::shared_ptr"* %10, %"class.std::__1::shared_ptr"** %14, align 8
  tail call void @_ZdlPv(i8* %39) #14
  br label %40

40:                                               ; preds = %7, %38
  %41 = bitcast %"class.v8_inspector::V8StackTraceImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %41) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::V8StackTrace"* @_ZN12v8_inspector16V8StackTraceImpl5cloneEv(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %3 = alloca %"class.std::__1::vector.64", align 16
  %4 = tail call i8* @_Znwm(i64 88) #14
  %5 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.64"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false) #13
  %7 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::shared_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.64"* %5 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 4
  %14 = icmp eq i64 %12, 0
  %15 = inttoptr i64 %11 to %"class.std::__1::shared_ptr"*
  %16 = inttoptr i64 %9 to %"class.std::__1::shared_ptr"*
  br i1 %14, label %89, label %17

17:                                               ; preds = %1
  %18 = icmp ugt i64 %13, 1152921504606846975
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector.64"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %20) #15
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %12) #14
  %23 = bitcast i8* %22 to %"class.std::__1::shared_ptr"*
  %24 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %3, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::shared_ptr"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector.64"* %3 to i8**
  store i8* %22, i8** %26, align 16
  %27 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %23, i64 %13
  %28 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::shared_ptr"* %27, %"class.std::__1::shared_ptr"** %28, align 16
  %29 = bitcast %"class.std::__1::shared_ptr"** %24 to i64*
  %30 = ptrtoint i8* %22 to i64
  %31 = icmp eq %"class.std::__1::shared_ptr"* %15, %16
  br i1 %31, label %87, label %32

32:                                               ; preds = %21
  %33 = getelementptr %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %16, i64 -1, i32 0
  %34 = bitcast %"class.v8_inspector::StackFrame"** %33 to i8*
  %35 = sub i64 0, %11
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = and i64 %37, 16
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %56

40:                                               ; preds = %32
  %41 = inttoptr i64 %11 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i8* %22 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %22, i64 8
  %45 = bitcast i8* %44 to %"class.std::__1::__shared_weak_count"**
  %46 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %15, i64 0, i32 1
  %47 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  store %"class.std::__1::__shared_weak_count"* %47, %"class.std::__1::__shared_weak_count"** %45, align 8
  %48 = icmp eq %"class.std::__1::__shared_weak_count"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0, i32 1
  %51 = atomicrmw add i64* %50, i64 1 monotonic
  br label %52

52:                                               ; preds = %49, %40
  %53 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %15, i64 1
  %54 = getelementptr inbounds i8, i8* %22, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::shared_ptr"*
  br label %56

56:                                               ; preds = %52, %32
  %57 = phi %"class.std::__1::shared_ptr"* [ undef, %32 ], [ %55, %52 ]
  %58 = phi %"class.std::__1::shared_ptr"* [ %23, %32 ], [ %55, %52 ]
  %59 = phi %"class.std::__1::shared_ptr"* [ %15, %32 ], [ %53, %52 ]
  %60 = icmp ult i8* %36, inttoptr (i64 16 to i8*)
  br i1 %60, label %84, label %61

61:                                               ; preds = %56, %116
  %62 = phi %"class.std::__1::shared_ptr"* [ %118, %116 ], [ %58, %56 ]
  %63 = phi %"class.std::__1::shared_ptr"* [ %117, %116 ], [ %59, %56 ]
  %64 = bitcast %"class.std::__1::shared_ptr"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::shared_ptr"* %62 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %62, i64 0, i32 1
  %68 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 0, i32 1
  %69 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %68, align 8
  store %"class.std::__1::__shared_weak_count"* %69, %"class.std::__1::__shared_weak_count"** %67, align 8
  %70 = icmp eq %"class.std::__1::__shared_weak_count"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %69, i64 0, i32 0, i32 1
  %73 = atomicrmw add i64* %72, i64 1 monotonic
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 1
  %76 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %62, i64 1
  %77 = bitcast %"class.std::__1::shared_ptr"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::shared_ptr"* %76 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %62, i64 1, i32 1
  %81 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 1, i32 1
  %82 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %81, align 8
  store %"class.std::__1::__shared_weak_count"* %82, %"class.std::__1::__shared_weak_count"** %80, align 8
  %83 = icmp eq %"class.std::__1::__shared_weak_count"* %82, null
  br i1 %83, label %116, label %113

84:                                               ; preds = %116, %56
  %85 = phi %"class.std::__1::shared_ptr"* [ %57, %56 ], [ %118, %116 ]
  %86 = ptrtoint %"class.std::__1::shared_ptr"* %85 to i64
  br label %87

87:                                               ; preds = %84, %21
  %88 = phi i64 [ %30, %21 ], [ %86, %84 ]
  store i64 %88, i64* %29, align 8
  br label %89

89:                                               ; preds = %87, %1
  %90 = bitcast %"class.v8_inspector::V8DebuggerId"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #13
  %91 = call { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"* nonnull %2) #13
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #13
  %94 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN12v8_inspector16V8StackTraceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %4, i64 8
  %96 = bitcast %"class.std::__1::vector.64"* %3 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 16
  %98 = bitcast i8* %95 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"class.std::__1::shared_ptr"** %99 to i64*
  %101 = load i64, i64* %100, align 16
  %102 = getelementptr inbounds i8, i8* %4, i64 24
  %103 = bitcast i8* %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %4, i64 32
  %105 = bitcast i8* %104 to i32*
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds i8, i8* %4, i64 40
  %107 = getelementptr inbounds i8, i8* %4, i64 64
  %108 = bitcast i8* %107 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false)
  store i64 %92, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %4, i64 72
  %110 = bitcast i8* %109 to i64*
  store i64 %93, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %4, i64 80
  store i8 0, i8* %111, align 8
  %112 = bitcast i8* %4 to %"class.v8_inspector::V8StackTrace"*
  ret %"class.v8_inspector::V8StackTrace"* %112

113:                                              ; preds = %74
  %114 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %82, i64 0, i32 0, i32 1
  %115 = atomicrmw add i64* %114, i64 1 monotonic
  br label %116

116:                                              ; preds = %113, %74
  %117 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 2
  %118 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %62, i64 2
  %119 = icmp eq %"class.std::__1::shared_ptr"* %117, %16
  br i1 %119, label %84, label %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector16V8StackTraceImpl22firstNonEmptySourceURLEv(%"class.v8_inspector::StringView"* noalias sret, %"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", align 16
  %4 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.64"* %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3, i64 0, i32 1, i32 0
  %9 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 16
  %10 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 3, i32 1
  %12 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %11, align 8
  %13 = icmp eq %"class.std::__1::__shared_weak_count"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %2
  %15 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %12) #13
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 3, i32 0
  %19 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %15, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 -1 acq_rel
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %15, i64 0, i32 0
  %25 = bitcast %"class.std::__1::__shared_weak_count"* %15 to void (%"class.std::__1::__shared_count"*)***
  %26 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, i64 2
  %28 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, align 8
  tail call void %28(%"class.std::__1::__shared_count"* %24) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %15) #13
  br label %29

29:                                               ; preds = %2, %14, %17, %23
  %30 = phi %"class.v8_inspector::AsyncStackTrace"* [ %19, %17 ], [ %19, %23 ], [ null, %14 ], [ null, %2 ]
  store %"class.v8_inspector::AsyncStackTrace"* %30, %"class.v8_inspector::AsyncStackTrace"** %10, align 16
  %31 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %31, align 16
  %33 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %8, align 8
  %34 = icmp eq %"class.std::__1::shared_ptr"* %32, %33
  br i1 %34, label %57, label %35

35:                                               ; preds = %29, %53
  %36 = phi %"class.std::__1::shared_ptr"* [ %54, %53 ], [ %32, %29 ]
  %37 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 0, i32 0
  %38 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %37, align 8
  %39 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %38, i64 0, i32 3
  %40 = bitcast %"class.v8_inspector::String16"* %39 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %38, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %49

47:                                               ; preds = %35
  %48 = zext i8 %42 to i64
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i64 [ %46, %44 ], [ %48, %47 ]
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  tail call void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* sret %0, %"class.v8_inspector::String16"* dereferenceable(32) %39) #13
  br label %61

53:                                               ; preds = %49
  call void @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator4nextEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nonnull %3)
  %54 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %31, align 16
  %55 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %8, align 8
  %56 = icmp eq %"class.std::__1::shared_ptr"* %54, %55
  br i1 %56, label %57, label %35

57:                                               ; preds = %53, %29
  %58 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  store i8 1, i8* %58, align 8
  %59 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  %60 = bitcast i64* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  br label %61

61:                                               ; preds = %57, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator4doneEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::shared_ptr"* %3, %5
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8_inspector::StackFrame"* @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator5frameEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 0
  %5 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %4, align 8
  ret %"class.v8_inspector::StackFrame"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator4nextEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8_inspector::String16", align 8
  %3 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::shared_ptr"* %4, %6
  br i1 %7, label %109, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %4, i64 1
  store %"class.std::__1::shared_ptr"* %9, %"class.std::__1::shared_ptr"** %3, align 8
  %10 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 2
  %11 = icmp eq %"class.std::__1::shared_ptr"* %9, %6
  br i1 %11, label %12, label %109

12:                                               ; preds = %8
  %13 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0 to i64*
  %14 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  %15 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %20 = bitcast %"class.v8_inspector::String16"* %2 to i8**
  %21 = bitcast %"class.std::__1::shared_ptr"** %5 to i64*
  %22 = bitcast %"class.v8_inspector::AsyncStackTrace"** %10 to i64*
  br label %23

23:                                               ; preds = %12, %105
  %24 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %10, align 8
  %25 = icmp eq %"class.v8_inspector::AsyncStackTrace"* %24, null
  br i1 %25, label %109, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %24, i64 0, i32 4
  %28 = bitcast %"class.std::__1::vector.64"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %13, align 8
  %30 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %24, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #13
  %31 = bitcast %"class.v8_inspector::String16"* %30 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %24, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = load i8, i8* %16, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i64, i64* %17, align 8
  %42 = zext i8 %39 to i64
  %43 = select i1 %40, i64 %41, i64 %42
  %44 = icmp eq i64 %38, %43
  br i1 %44, label %45, label %66

45:                                               ; preds = %26
  %46 = icmp eq i64 %38, 0
  br i1 %46, label %66, label %47

47:                                               ; preds = %45
  %48 = load i16*, i16** %18, align 8
  %49 = select i1 %40, i16* %48, i16* %19
  %50 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = bitcast %"class.v8_inspector::String16"* %30 to i16*
  %53 = select i1 %34, i16* %51, i16* %52
  br label %54

54:                                               ; preds = %61, %47
  %55 = phi i64 [ %62, %61 ], [ %38, %47 ]
  %56 = phi i16* [ %64, %61 ], [ %49, %47 ]
  %57 = phi i16* [ %63, %61 ], [ %53, %47 ]
  %58 = load i16, i16* %57, align 2
  %59 = load i16, i16* %56, align 2
  %60 = icmp eq i16 %59, %58
  br i1 %60, label %61, label %66

61:                                               ; preds = %54
  %62 = add i64 %55, -1
  %63 = getelementptr inbounds i16, i16* %57, i64 1
  %64 = getelementptr inbounds i16, i16* %56, i64 1
  %65 = icmp eq i64 %62, 0
  br i1 %65, label %66, label %54

66:                                               ; preds = %54, %61, %26, %45
  %67 = phi i1 [ false, %26 ], [ true, %45 ], [ false, %54 ], [ true, %61 ]
  br i1 %40, label %68, label %70

68:                                               ; preds = %66
  %69 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %66, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #13
  br i1 %67, label %71, label %74

71:                                               ; preds = %70
  %72 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %73 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %72, i64 1
  store %"class.std::__1::shared_ptr"* %73, %"class.std::__1::shared_ptr"** %3, align 8
  br label %74

74:                                               ; preds = %71, %70
  %75 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %24, i64 0, i32 4, i32 0, i32 1
  %76 = bitcast %"class.std::__1::shared_ptr"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %21, align 8
  %78 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %10, align 8
  %79 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %78, i64 0, i32 5, i32 0
  %80 = bitcast %"class.v8_inspector::AsyncStackTrace"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %78, i64 0, i32 5, i32 1
  %83 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %82, align 8
  %84 = icmp eq %"class.std::__1::__shared_weak_count"* %83, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %74
  %86 = inttoptr i64 %77 to %"class.std::__1::shared_ptr"*
  store %"class.v8_inspector::AsyncStackTrace"* null, %"class.v8_inspector::AsyncStackTrace"** %10, align 8
  br label %105

87:                                               ; preds = %74
  %88 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %83, i64 0, i32 1
  %89 = atomicrmw add i64* %88, i64 1 monotonic
  %90 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %83) #13
  %91 = icmp eq %"class.std::__1::__shared_weak_count"* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %87
  store i64 %81, i64* %22, align 8
  %93 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %90, i64 0, i32 0, i32 1
  %94 = atomicrmw add i64* %93, i64 -1 acq_rel
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %103

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %90, i64 0, i32 0
  %98 = bitcast %"class.std::__1::__shared_weak_count"* %90 to void (%"class.std::__1::__shared_count"*)***
  %99 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %99, i64 2
  %101 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %100, align 8
  call void %101(%"class.std::__1::__shared_count"* %97) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %90) #13
  br label %103

102:                                              ; preds = %87
  store %"class.v8_inspector::AsyncStackTrace"* null, %"class.v8_inspector::AsyncStackTrace"** %10, align 8
  br label %103

103:                                              ; preds = %96, %92, %102
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %83) #13
  %104 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %5, align 8
  br label %105

105:                                              ; preds = %85, %103
  %106 = phi %"class.std::__1::shared_ptr"* [ %86, %85 ], [ %104, %103 ]
  %107 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %108 = icmp eq %"class.std::__1::shared_ptr"* %107, %106
  br i1 %108, label %23, label %109

109:                                              ; preds = %105, %23, %8, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector16V8StackTraceImpl7isEmptyEv(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::shared_ptr"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector16V8StackTraceImpl12topSourceURLEv(%"class.v8_inspector::StringView"* noalias sret, %"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %4, i64 0, i32 0
  %6 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %5, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %6, i64 0, i32 3
  tail call void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* sret %0, %"class.v8_inspector::String16"* dereferenceable(32) %7) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector16V8StackTraceImpl13topLineNumberEv(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 0
  %5 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %4, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector16V8StackTraceImpl15topColumnNumberEv(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 0
  %5 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %4, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %5, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector16V8StackTraceImpl11topScriptIdEv(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 0
  %5 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %4, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector16V8StackTraceImpl15topFunctionNameEv(%"class.v8_inspector::StringView"* noalias sret, %"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %4, i64 0, i32 0
  %6 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %5, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %6, i64 0, i32 0
  tail call void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* sret %0, %"class.v8_inspector::String16"* dereferenceable(32) %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerE(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly, %"class.v8_inspector::V8Debugger"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.std::__1::shared_ptr.280", align 8
  %5 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %8 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  %9 = bitcast %"class.std::__1::shared_ptr.280"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 1
  %11 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %10, align 8
  %12 = icmp eq %"class.std::__1::__shared_weak_count"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %11) #13
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %17, align 8
  br label %19

19:                                               ; preds = %16, %13, %2
  %20 = phi %"class.std::__1::__shared_weak_count"* [ null, %13 ], [ %14, %16 ], [ null, %2 ]
  %21 = phi %"class.v8_inspector::AsyncStackTrace"* [ null, %13 ], [ %18, %16 ], [ null, %2 ]
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %4, i64 0, i32 0
  store %"class.v8_inspector::AsyncStackTrace"* %21, %"class.v8_inspector::AsyncStackTrace"** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %4, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %20, %"class.std::__1::__shared_weak_count"** %23, align 8
  %24 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 4
  %25 = call fastcc %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZN12v8_inspector12_GLOBAL__N_126buildInspectorObjectCommonEPNS_10V8DebuggerERKNSt3__16vectorINS3_10shared_ptrINS_10StackFrameEEENS3_9allocatorIS7_EEEERKNS_8String16ERKNS5_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdEi(%"class.v8_inspector::V8Debugger"* %1, %"class.std::__1::vector.64"* dereferenceable(24) %7, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %3, %"class.std::__1::shared_ptr.280"* nonnull dereferenceable(16) %4, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %24, i32 %6) #13
  %26 = icmp eq %"class.std::__1::__shared_weak_count"* %20, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0, i32 1
  %29 = atomicrmw add i64* %28, i64 -1 acq_rel
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0
  %33 = bitcast %"class.std::__1::__shared_weak_count"* %20 to void (%"class.std::__1::__shared_count"*)***
  %34 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %34, i64 2
  %36 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %35, align 8
  call void %36(%"class.std::__1::__shared_count"* %32) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %20) #13
  br label %37

37:                                               ; preds = %31, %27, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  %38 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %37, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  ret %"class.v8_inspector::protocol::Runtime::StackTrace"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerEi(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly, %"class.v8_inspector::V8Debugger"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = alloca %"class.std::__1::shared_ptr.280", align 8
  %6 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  %8 = bitcast %"class.std::__1::shared_ptr.280"* %5 to i8*
  %9 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %10 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 1
  %11 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %10, align 8
  %12 = icmp eq %"class.std::__1::__shared_weak_count"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %11) #13
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %17, align 8
  br label %19

19:                                               ; preds = %3, %13, %16
  %20 = phi %"class.std::__1::__shared_weak_count"* [ null, %13 ], [ %14, %16 ], [ null, %3 ]
  %21 = phi %"class.v8_inspector::AsyncStackTrace"* [ null, %13 ], [ %18, %16 ], [ null, %3 ]
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %5, i64 0, i32 0
  store %"class.v8_inspector::AsyncStackTrace"* %21, %"class.v8_inspector::AsyncStackTrace"** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %5, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %20, %"class.std::__1::__shared_weak_count"** %23, align 8
  %24 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 4
  %25 = call fastcc %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZN12v8_inspector12_GLOBAL__N_126buildInspectorObjectCommonEPNS_10V8DebuggerERKNSt3__16vectorINS3_10shared_ptrINS_10StackFrameEEENS3_9allocatorIS7_EEEERKNS_8String16ERKNS5_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdEi(%"class.v8_inspector::V8Debugger"* %1, %"class.std::__1::vector.64"* dereferenceable(24) %6, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %4, %"class.std::__1::shared_ptr.280"* nonnull dereferenceable(16) %5, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %24, i32 %2)
  %26 = icmp eq %"class.std::__1::__shared_weak_count"* %20, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0, i32 1
  %29 = atomicrmw add i64* %28, i64 -1 acq_rel
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0
  %33 = bitcast %"class.std::__1::__shared_weak_count"* %20 to void (%"class.std::__1::__shared_count"*)***
  %34 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %34, i64 2
  %36 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %35, align 8
  call void %36(%"class.std::__1::__shared_count"* %32) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %20) #13
  br label %37

37:                                               ; preds = %19, %27, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  %38 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %37, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret %"class.v8_inspector::protocol::Runtime::StackTrace"* %25
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZN12v8_inspector12_GLOBAL__N_126buildInspectorObjectCommonEPNS_10V8DebuggerERKNSt3__16vectorINS3_10shared_ptrINS_10StackFrameEEENS3_9allocatorIS7_EEEERKNS_8String16ERKNS5_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdEi(%"class.v8_inspector::V8Debugger"*, %"class.std::__1::vector.64"* nocapture readonly dereferenceable(24), %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::shared_ptr.280"* nocapture readonly dereferenceable(16), %"struct.v8_inspector::V8StackTraceId"* nocapture readonly dereferenceable(32), i32) unnamed_addr #0 {
  %7 = alloca %"class.std::__1::shared_ptr.280", align 8
  %8 = alloca %"class.std::__1::shared_ptr.280", align 8
  %9 = alloca %"class.std::__1::unique_ptr.50", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %14 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %3, i64 0, i32 0
  %15 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %14, align 8
  %16 = icmp ne %"class.v8_inspector::AsyncStackTrace"* %15, null
  %17 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %1, i64 0, i32 0, i32 1
  %20 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %19, align 8
  %21 = icmp eq %"class.std::__1::shared_ptr"* %18, %20
  %22 = and i1 %16, %21
  br i1 %22, label %23, label %97

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %15, i64 0, i32 3
  %25 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = bitcast %"class.v8_inspector::String16"* %24 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %15, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = icmp eq i64 %32, %40
  br i1 %41, label %42, label %97

42:                                               ; preds = %23
  %43 = icmp eq i64 %32, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = bitcast %"class.v8_inspector::String16"* %24 to i16*
  %48 = select i1 %36, i16* %46, i16* %47
  %49 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %52 = select i1 %28, i16* %50, i16* %51
  br label %53

53:                                               ; preds = %60, %44
  %54 = phi i64 [ %61, %60 ], [ %32, %44 ]
  %55 = phi i16* [ %63, %60 ], [ %48, %44 ]
  %56 = phi i16* [ %62, %60 ], [ %52, %44 ]
  %57 = load i16, i16* %56, align 2
  %58 = load i16, i16* %55, align 2
  %59 = icmp eq i16 %58, %57
  br i1 %59, label %60, label %97

60:                                               ; preds = %53
  %61 = add i64 %54, -1
  %62 = getelementptr inbounds i16, i16* %56, i64 1
  %63 = getelementptr inbounds i16, i16* %55, i64 1
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %65, label %53

65:                                               ; preds = %60, %42
  %66 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %15, i64 0, i32 4
  %67 = bitcast %"class.std::__1::shared_ptr.280"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %15, i64 0, i32 5, i32 1
  %69 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %68, align 8
  %70 = icmp eq %"class.std::__1::__shared_weak_count"* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %69) #13
  %73 = icmp eq %"class.std::__1::__shared_weak_count"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %15, i64 0, i32 5, i32 0
  %76 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %75, align 8
  br label %77

77:                                               ; preds = %74, %71, %65
  %78 = phi %"class.std::__1::__shared_weak_count"* [ null, %71 ], [ %72, %74 ], [ null, %65 ]
  %79 = phi %"class.v8_inspector::AsyncStackTrace"* [ null, %71 ], [ %76, %74 ], [ null, %65 ]
  %80 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %7, i64 0, i32 0
  store %"class.v8_inspector::AsyncStackTrace"* %79, %"class.v8_inspector::AsyncStackTrace"** %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %7, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %78, %"class.std::__1::__shared_weak_count"** %81, align 8
  %82 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %15, i64 0, i32 6
  %83 = call fastcc %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZN12v8_inspector12_GLOBAL__N_126buildInspectorObjectCommonEPNS_10V8DebuggerERKNSt3__16vectorINS3_10shared_ptrINS_10StackFrameEEENS3_9allocatorIS7_EEEERKNS_8String16ERKNS5_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdEi(%"class.v8_inspector::V8Debugger"* %0, %"class.std::__1::vector.64"* dereferenceable(24) %66, %"class.v8_inspector::String16"* dereferenceable(32) %24, %"class.std::__1::shared_ptr.280"* nonnull dereferenceable(16) %7, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %82, i32 %5) #13
  %84 = icmp eq %"class.std::__1::__shared_weak_count"* %78, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %78, i64 0, i32 0, i32 1
  %87 = atomicrmw add i64* %86, i64 -1 acq_rel
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %78, i64 0, i32 0
  %91 = bitcast %"class.std::__1::__shared_weak_count"* %78 to void (%"class.std::__1::__shared_count"*)***
  %92 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %92, i64 2
  %94 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, align 8
  tail call void %94(%"class.std::__1::__shared_count"* %90) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %78) #13
  br label %95

95:                                               ; preds = %77, %85, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #13
  %96 = ptrtoint %"class.v8_inspector::protocol::Runtime::StackTrace"* %83 to i64
  br label %354

97:                                               ; preds = %53, %6, %23
  %98 = phi %"class.std::__1::shared_ptr"* [ %18, %23 ], [ %20, %6 ], [ %18, %53 ]
  %99 = tail call i8* @_Znwm(i64 24) #14
  %100 = bitcast i8* %99 to %"class.std::__1::vector.402"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 24, i1 false) #13
  %101 = ptrtoint i8* %99 to i64
  %102 = icmp eq %"class.std::__1::shared_ptr"* %18, %98
  br i1 %102, label %138, label %103

103:                                              ; preds = %97
  %104 = icmp eq %"class.v8_inspector::V8Debugger"* %0, null
  %105 = getelementptr inbounds %"class.v8_inspector::V8Debugger", %"class.v8_inspector::V8Debugger"* %0, i64 0, i32 3
  %106 = bitcast %"class.std::__1::unique_ptr.50"* %9 to i8*
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %9, i64 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds i8, i8* %99, i64 8
  %109 = bitcast i8* %108 to %"class.std::__1::unique_ptr.50"**
  %110 = getelementptr inbounds i8, i8* %99, i64 16
  %111 = bitcast i8* %110 to %"class.std::__1::unique_ptr.50"**
  %112 = bitcast i8* %108 to i64*
  br i1 %104, label %113, label %155

113:                                              ; preds = %103, %135
  %114 = phi %"class.std::__1::shared_ptr"* [ %136, %135 ], [ %18, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13
  %115 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %114, i64 0, i32 0
  %116 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %115, align 8
  %117 = call %"class.v8_inspector::protocol::Runtime::CallFrame"* @_ZNK12v8_inspector10StackFrame20buildInspectorObjectEPNS_17V8InspectorClientE(%"class.v8_inspector::StackFrame"* %116, %"class.v8_inspector::V8InspectorClient"* null)
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* %117, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  %118 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %109, align 8
  %119 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %111, align 8
  %120 = icmp ult %"class.std::__1::unique_ptr.50"* %118, %119
  br i1 %120, label %122, label %121

121:                                              ; preds = %113
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime9CallFrameENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.402"* nonnull %100, %"class.std::__1::unique_ptr.50"* nonnull dereferenceable(8) %9) #13
  br label %127

122:                                              ; preds = %113
  %123 = ptrtoint %"class.v8_inspector::protocol::Runtime::CallFrame"* %117 to i64
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.50"* %118 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %118, i64 1
  %126 = ptrtoint %"class.std::__1::unique_ptr.50"* %125 to i64
  store i64 %126, i64* %112, align 8
  br label %127

127:                                              ; preds = %122, %121
  %128 = load %"class.v8_inspector::protocol::Runtime::CallFrame"*, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  %129 = icmp eq %"class.v8_inspector::protocol::Runtime::CallFrame"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.v8_inspector::protocol::Runtime::CallFrame"* %128 to void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)***
  %132 = load void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)**, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)** %132, i64 2
  %134 = load void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)** %133, align 8
  call void %134(%"class.v8_inspector::protocol::Runtime::CallFrame"* nonnull %128) #13
  br label %135

135:                                              ; preds = %130, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #13
  %136 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %114, i64 1
  %137 = icmp eq %"class.std::__1::shared_ptr"* %136, %98
  br i1 %137, label %138, label %113

138:                                              ; preds = %184, %135, %97
  %139 = call i8* @_Znwm(i64 80) #14
  %140 = bitcast i8* %139 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime10StackTraceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime10StackTraceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %140, align 8
  %141 = getelementptr inbounds i8, i8* %139, i64 16
  store i8 0, i8* %141, align 8
  %142 = getelementptr inbounds i8, i8* %139, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 56, i1 false) #13
  %143 = getelementptr inbounds i8, i8* %139, i64 56
  %144 = bitcast i8* %143 to i64*
  store i64 %101, i64* %144, align 8
  %145 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %145, i64 0, i32 1, i32 1
  %147 = load i8, i8* %146, align 1
  %148 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = ptrtoint i8* %139 to i64
  %151 = icmp slt i8 %147, 0
  %152 = zext i8 %147 to i64
  %153 = select i1 %151, i64 %149, i64 %152
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %189, label %187

155:                                              ; preds = %103, %184
  %156 = phi %"class.std::__1::shared_ptr"* [ %185, %184 ], [ %18, %103 ]
  %157 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %105, align 8
  %158 = icmp eq %"class.v8_inspector::V8InspectorImpl"* %157, null
  br i1 %158, label %162, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %157, i64 0, i32 2
  %161 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %160, align 8
  br label %162

162:                                              ; preds = %155, %159
  %163 = phi %"class.v8_inspector::V8InspectorClient"* [ %161, %159 ], [ null, %155 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13
  %164 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %156, i64 0, i32 0
  %165 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %164, align 8
  %166 = call %"class.v8_inspector::protocol::Runtime::CallFrame"* @_ZNK12v8_inspector10StackFrame20buildInspectorObjectEPNS_17V8InspectorClientE(%"class.v8_inspector::StackFrame"* %165, %"class.v8_inspector::V8InspectorClient"* %163)
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* %166, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  %167 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %109, align 8
  %168 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %111, align 8
  %169 = icmp ult %"class.std::__1::unique_ptr.50"* %167, %168
  br i1 %169, label %170, label %175

170:                                              ; preds = %162
  %171 = ptrtoint %"class.v8_inspector::protocol::Runtime::CallFrame"* %166 to i64
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  %172 = bitcast %"class.std::__1::unique_ptr.50"* %167 to i64*
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %167, i64 1
  %174 = ptrtoint %"class.std::__1::unique_ptr.50"* %173 to i64
  store i64 %174, i64* %112, align 8
  br label %176

175:                                              ; preds = %162
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime9CallFrameENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.402"* nonnull %100, %"class.std::__1::unique_ptr.50"* nonnull dereferenceable(8) %9) #13
  br label %176

176:                                              ; preds = %170, %175
  %177 = load %"class.v8_inspector::protocol::Runtime::CallFrame"*, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %107, align 8
  %178 = icmp eq %"class.v8_inspector::protocol::Runtime::CallFrame"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %176
  %180 = bitcast %"class.v8_inspector::protocol::Runtime::CallFrame"* %177 to void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)***
  %181 = load void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)**, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)** %181, i64 2
  %183 = load void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)** %182, align 8
  call void %183(%"class.v8_inspector::protocol::Runtime::CallFrame"* nonnull %177) #13
  br label %184

184:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #13
  %185 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %156, i64 1
  %186 = icmp eq %"class.std::__1::shared_ptr"* %185, %98
  br i1 %186, label %138, label %155

187:                                              ; preds = %138
  %188 = bitcast i8* %139 to %"class.v8_inspector::protocol::Runtime::StackTrace"*
  call void @_ZN12v8_inspector8protocol7Runtime10StackTrace14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::StackTrace"* nonnull %188, %"class.v8_inspector::String16"* dereferenceable(32) %2)
  br label %189

189:                                              ; preds = %187, %138
  %190 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %14, align 8
  %191 = icmp eq %"class.v8_inspector::AsyncStackTrace"* %190, null
  br i1 %191, label %302, label %192

192:                                              ; preds = %189
  %193 = icmp sgt i32 %5, 0
  br i1 %193, label %194, label %238

194:                                              ; preds = %192
  %195 = add nsw i32 %5, -1
  %196 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %190, i64 0, i32 4
  %197 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %190, i64 0, i32 3
  %198 = bitcast %"class.std::__1::shared_ptr.280"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198) #13
  %199 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %190, i64 0, i32 5, i32 1
  %200 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %199, align 8
  %201 = icmp eq %"class.std::__1::__shared_weak_count"* %200, null
  br i1 %201, label %208, label %202

202:                                              ; preds = %194
  %203 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %200) #13
  %204 = icmp eq %"class.std::__1::__shared_weak_count"* %203, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %190, i64 0, i32 5, i32 0
  %207 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %206, align 8
  br label %208

208:                                              ; preds = %205, %202, %194
  %209 = phi %"class.std::__1::__shared_weak_count"* [ null, %202 ], [ %203, %205 ], [ null, %194 ]
  %210 = phi %"class.v8_inspector::AsyncStackTrace"* [ null, %202 ], [ %207, %205 ], [ null, %194 ]
  %211 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %8, i64 0, i32 0
  store %"class.v8_inspector::AsyncStackTrace"* %210, %"class.v8_inspector::AsyncStackTrace"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %8, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %209, %"class.std::__1::__shared_weak_count"** %212, align 8
  %213 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %190, i64 0, i32 6
  %214 = call fastcc %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZN12v8_inspector12_GLOBAL__N_126buildInspectorObjectCommonEPNS_10V8DebuggerERKNSt3__16vectorINS3_10shared_ptrINS_10StackFrameEEENS3_9allocatorIS7_EEEERKNS_8String16ERKNS5_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdEi(%"class.v8_inspector::V8Debugger"* %0, %"class.std::__1::vector.64"* dereferenceable(24) %196, %"class.v8_inspector::String16"* dereferenceable(32) %197, %"class.std::__1::shared_ptr.280"* nonnull dereferenceable(16) %8, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %213, i32 %195) #13
  %215 = icmp eq %"class.std::__1::__shared_weak_count"* %209, null
  br i1 %215, label %226, label %216

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %209, i64 0, i32 0, i32 1
  %218 = atomicrmw add i64* %217, i64 -1 acq_rel
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %209, i64 0, i32 0
  %222 = bitcast %"class.std::__1::__shared_weak_count"* %209 to void (%"class.std::__1::__shared_count"*)***
  %223 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %223, i64 2
  %225 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %224, align 8
  call void %225(%"class.std::__1::__shared_count"* %221) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %209) #13
  br label %226

226:                                              ; preds = %208, %216, %220
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #13
  %227 = ptrtoint %"class.v8_inspector::protocol::Runtime::StackTrace"* %214 to i64
  %228 = getelementptr inbounds i8, i8* %139, i64 64
  %229 = bitcast i8* %228 to %"class.v8_inspector::protocol::Runtime::StackTrace"**
  %230 = load %"class.v8_inspector::protocol::Runtime::StackTrace"*, %"class.v8_inspector::protocol::Runtime::StackTrace"** %229, align 8
  %231 = bitcast i8* %228 to i64*
  store i64 %227, i64* %231, align 8
  %232 = icmp eq %"class.v8_inspector::protocol::Runtime::StackTrace"* %230, null
  br i1 %232, label %302, label %233

233:                                              ; preds = %226
  %234 = bitcast %"class.v8_inspector::protocol::Runtime::StackTrace"* %230 to void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)***
  %235 = load void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)** %235, i64 2
  %237 = load void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)** %236, align 8
  call void %237(%"class.v8_inspector::protocol::Runtime::StackTrace"* nonnull %230) #13
  br label %302

238:                                              ; preds = %192
  %239 = icmp eq %"class.v8_inspector::V8Debugger"* %0, null
  br i1 %239, label %302, label %240

240:                                              ; preds = %238
  %241 = call i8* @_Znwm(i64 88) #14
  %242 = bitcast i8* %241 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12StackTraceIdE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12StackTraceIdE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %242, align 8
  %243 = getelementptr inbounds i8, i8* %241, i64 16
  %244 = getelementptr inbounds i8, i8* %241, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %244, i8 0, i64 32, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 33, i1 false) #13
  %245 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %245) #13
  %246 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %3, i64 0, i32 1
  %247 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %246, align 8
  %248 = icmp eq %"class.std::__1::__shared_weak_count"* %247, null
  br i1 %248, label %252, label %249

249:                                              ; preds = %240
  %250 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %247, i64 0, i32 0, i32 1
  %251 = atomicrmw add i64* %250, i64 1 monotonic
  br label %252

252:                                              ; preds = %240, %249
  %253 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %190, i64 0, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %262

256:                                              ; preds = %252
  br i1 %248, label %260, label %257

257:                                              ; preds = %256
  %258 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %247, i64 0, i32 0, i32 1
  %259 = atomicrmw add i64* %258, i64 1 monotonic
  br label %260

260:                                              ; preds = %257, %256
  %261 = call i64 @_ZN12v8_inspector10V8Debugger15storeStackTraceENSt3__110shared_ptrINS_15AsyncStackTraceEEE(%"class.v8_inspector::V8Debugger"* nonnull %0, %"class.v8_inspector::AsyncStackTrace"* nonnull %190, %"class.std::__1::__shared_weak_count"* %247) #13
  store i64 %261, i64* %253, align 8
  br label %262

262:                                              ; preds = %260, %252
  %263 = phi i64 [ %254, %252 ], [ %261, %260 ]
  br i1 %248, label %274, label %264

264:                                              ; preds = %262
  %265 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %247, i64 0, i32 0, i32 1
  %266 = atomicrmw add i64* %265, i64 -1 acq_rel
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %274

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %247, i64 0, i32 0
  %270 = bitcast %"class.std::__1::__shared_weak_count"* %247 to void (%"class.std::__1::__shared_count"*)***
  %271 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %271, i64 2
  %273 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %272, align 8
  call void %273(%"class.std::__1::__shared_count"* %269) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %247) #13
  br label %274

274:                                              ; preds = %262, %264, %268
  call void @_ZN12v8_inspector20stackTraceIdToStringEm(%"class.v8_inspector::String16"* nonnull sret %10, i64 %263) #13
  %275 = bitcast i8* %243 to %"class.std::__1::basic_string"*
  %276 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 0
  %277 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %275, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %276) #13
  %278 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 1
  %279 = load i64, i64* %278, align 8
  %280 = getelementptr inbounds i8, i8* %241, i64 40
  %281 = bitcast i8* %280 to i64*
  store i64 %279, i64* %281, align 8
  %282 = ptrtoint i8* %241 to i64
  %283 = getelementptr inbounds i8, i8* %139, i64 72
  %284 = bitcast i8* %283 to %"class.v8_inspector::protocol::Runtime::StackTraceId"**
  %285 = load %"class.v8_inspector::protocol::Runtime::StackTraceId"*, %"class.v8_inspector::protocol::Runtime::StackTraceId"** %284, align 8
  %286 = bitcast i8* %283 to i64*
  store i64 %282, i64* %286, align 8
  %287 = icmp eq %"class.v8_inspector::protocol::Runtime::StackTraceId"* %285, null
  br i1 %287, label %293, label %288

288:                                              ; preds = %274
  %289 = bitcast %"class.v8_inspector::protocol::Runtime::StackTraceId"* %285 to void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)***
  %290 = load void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)**, void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)*** %289, align 8
  %291 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)** %290, i64 2
  %292 = load void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)** %291, align 8
  call void %292(%"class.v8_inspector::protocol::Runtime::StackTraceId"* nonnull %285) #13
  br label %293

293:                                              ; preds = %274, %288
  %294 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %295 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %294, i64 0, i32 1, i32 1
  %296 = load i8, i8* %295, align 1
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %301

298:                                              ; preds = %293
  %299 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %300 = load i8*, i8** %299, align 8
  call void @_ZdlPv(i8* %300) #14
  br label %301

301:                                              ; preds = %298, %293
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %245) #13
  br label %302

302:                                              ; preds = %189, %233, %226, %238, %301
  %303 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %4, i64 0, i32 0
  %304 = load i64, i64* %303, align 8
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %354, label %306

306:                                              ; preds = %302
  %307 = call i8* @_Znwm(i64 88) #14
  %308 = bitcast i8* %307 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12StackTraceIdE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12StackTraceIdE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %308, align 8
  %309 = getelementptr inbounds i8, i8* %307, i64 16
  %310 = getelementptr inbounds i8, i8* %307, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 32, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %309, i8 0, i64 33, i1 false) #13
  %311 = bitcast i8* %307 to %"class.v8_inspector::protocol::Runtime::StackTraceId"*
  %312 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %312) #13
  call void @_ZN12v8_inspector20stackTraceIdToStringEm(%"class.v8_inspector::String16"* nonnull sret %11, i64 %304) #13
  %313 = bitcast i8* %309 to %"class.std::__1::basic_string"*
  %314 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %11, i64 0, i32 0
  %315 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %313, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %314) #13
  %316 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %11, i64 0, i32 1
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds i8, i8* %307, i64 40
  %319 = bitcast i8* %318 to i64*
  store i64 %317, i64* %319, align 8
  %320 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %320) #13
  %321 = bitcast %"class.v8_inspector::V8DebuggerId"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %321) #13
  %322 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %4, i64 0, i32 1, i32 0
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %4, i64 0, i32 1, i32 1
  %325 = load i64, i64* %324, align 8
  call void @_ZN12v8_inspector12V8DebuggerIdC1ENSt3__14pairIllEE(%"class.v8_inspector::V8DebuggerId"* nonnull %13, i64 %323, i64 %325) #13
  call void @_ZNK12v8_inspector12V8DebuggerId8toStringEv(%"class.v8_inspector::String16"* nonnull sret %12, %"class.v8_inspector::V8DebuggerId"* nonnull %13) #13
  call void @_ZN12v8_inspector8protocol7Runtime12StackTraceId13setDebuggerIdERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::StackTraceId"* nonnull %311, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %12) #13
  %326 = ptrtoint i8* %307 to i64
  %327 = getelementptr inbounds i8, i8* %139, i64 72
  %328 = bitcast i8* %327 to %"class.v8_inspector::protocol::Runtime::StackTraceId"**
  %329 = load %"class.v8_inspector::protocol::Runtime::StackTraceId"*, %"class.v8_inspector::protocol::Runtime::StackTraceId"** %328, align 8
  %330 = bitcast i8* %327 to i64*
  store i64 %326, i64* %330, align 8
  %331 = icmp eq %"class.v8_inspector::protocol::Runtime::StackTraceId"* %329, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %306
  %333 = bitcast %"class.v8_inspector::protocol::Runtime::StackTraceId"* %329 to void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)***
  %334 = load void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)**, void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)*** %333, align 8
  %335 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)** %334, i64 2
  %336 = load void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTraceId"*)** %335, align 8
  call void %336(%"class.v8_inspector::protocol::Runtime::StackTraceId"* nonnull %329) #13
  br label %337

337:                                              ; preds = %306, %332
  %338 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %338, i64 0, i32 1, i32 1
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %337
  %343 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %344 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %344) #14
  br label %345

345:                                              ; preds = %337, %342
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %321) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %320) #13
  %346 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %347 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %346, i64 0, i32 1, i32 1
  %348 = load i8, i8* %347, align 1
  %349 = icmp slt i8 %348, 0
  br i1 %349, label %350, label %353

350:                                              ; preds = %345
  %351 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %352 = load i8*, i8** %351, align 8
  call void @_ZdlPv(i8* %352) #14
  br label %353

353:                                              ; preds = %350, %345
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %312) #13
  br label %354

354:                                              ; preds = %302, %353, %95
  %355 = phi i64 [ %96, %95 ], [ %150, %353 ], [ %150, %302 ]
  %356 = inttoptr i64 %355 to %"class.v8_inspector::protocol::Runtime::StackTrace"*
  ret %"class.v8_inspector::protocol::Runtime::StackTrace"* %356
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl20buildInspectorObjectEv(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerE(%"class.v8_inspector::V8StackTraceImpl"* %0, %"class.v8_inspector::V8Debugger"* null)
  %3 = icmp eq %"class.v8_inspector::protocol::Runtime::StackTrace"* %2, null
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTrace", %"class.v8_inspector::protocol::Runtime::StackTrace"* %2, i64 0, i32 1
  %5 = select i1 %3, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* null, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %4
  ret %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl20buildInspectorObjectEi(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.std::__1::shared_ptr.280", align 8
  %5 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, %1
  %8 = select i1 %7, i32 %6, i32 %1
  %9 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %10 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #13
  %11 = bitcast %"class.std::__1::shared_ptr.280"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 1
  %13 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %12, align 8
  %14 = icmp eq %"class.std::__1::__shared_weak_count"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %13) #13
  %17 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %19, align 8
  br label %21

21:                                               ; preds = %18, %15, %2
  %22 = phi %"class.std::__1::__shared_weak_count"* [ null, %15 ], [ %16, %18 ], [ null, %2 ]
  %23 = phi %"class.v8_inspector::AsyncStackTrace"* [ null, %15 ], [ %20, %18 ], [ null, %2 ]
  %24 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %4, i64 0, i32 0
  store %"class.v8_inspector::AsyncStackTrace"* %23, %"class.v8_inspector::AsyncStackTrace"** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %4, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %22, %"class.std::__1::__shared_weak_count"** %25, align 8
  %26 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 4
  %27 = call fastcc %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZN12v8_inspector12_GLOBAL__N_126buildInspectorObjectCommonEPNS_10V8DebuggerERKNSt3__16vectorINS3_10shared_ptrINS_10StackFrameEEENS3_9allocatorIS7_EEEERKNS_8String16ERKNS5_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdEi(%"class.v8_inspector::V8Debugger"* null, %"class.std::__1::vector.64"* dereferenceable(24) %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %3, %"class.std::__1::shared_ptr.280"* nonnull dereferenceable(16) %4, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %26, i32 %8) #13
  %28 = icmp eq %"class.std::__1::__shared_weak_count"* %22, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0, i32 1
  %31 = atomicrmw add i64* %30, i64 -1 acq_rel
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0
  %35 = bitcast %"class.std::__1::__shared_weak_count"* %22 to void (%"class.std::__1::__shared_count"*)***
  %36 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %36, i64 2
  %38 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %37, align 8
  call void %38(%"class.std::__1::__shared_count"* %34) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %22) #13
  br label %39

39:                                               ; preds = %33, %29, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  %40 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %44, %39
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #13
  %48 = icmp eq %"class.v8_inspector::protocol::Runtime::StackTrace"* %27, null
  %49 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTrace", %"class.v8_inspector::protocol::Runtime::StackTrace"* %27, i64 0, i32 1
  %50 = select i1 %48, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* null, %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %49
  ret %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %50
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZNK12v8_inspector16V8StackTraceImpl8toStringEv(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.v8_inspector::String16Builder", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = bitcast %"class.v8_inspector::String16Builder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %4) #13
  %12 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.std::__1::shared_ptr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.64"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %54, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %21 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %22 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %23 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %26 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %29 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %31 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %32 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %36 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %39 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %42 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  %43 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %46 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  %47 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %50 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  %51 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  br label %73

54:                                               ; preds = %310, %1
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* nonnull sret %10, %"class.v8_inspector::String16Builder"* nonnull %4) #13
  %55 = call %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector16StringBufferFromENS_8String16E(%"class.v8_inspector::String16"* nonnull %10) #13
  %56 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %54, %60
  %64 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = load i16*, i16** %64, align 8
  %66 = icmp eq i16* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = ptrtoint i16* %65 to i64
  %69 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %4, i64 0, i32 0, i32 0, i32 1
  %70 = bitcast i16** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast i16* %65 to i8*
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  ret %"class.v8_inspector::StringBuffer"* %55

73:                                               ; preds = %19, %310
  %74 = phi i64 [ %17, %19 ], [ %313, %310 ]
  %75 = phi i64 [ 0, %19 ], [ %311, %310 ]
  %76 = inttoptr i64 %74 to %"class.std::__1::shared_ptr"*
  %77 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %76, i64 %75, i32 0
  %78 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %77, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #13
  %79 = bitcast %"class.v8_inspector::StackFrame"* %78 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  br label %88

86:                                               ; preds = %73
  %87 = zext i8 %81 to i64
  br label %88

88:                                               ; preds = %83, %86
  %89 = phi i64 [ %85, %83 ], [ %87, %86 ]
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %267, label %91

91:                                               ; preds = %88
  br i1 %82, label %94, label %92

92:                                               ; preds = %91
  %93 = bitcast %"class.v8_inspector::StackFrame"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %93, i64 24, i1 false) #13
  br label %264

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp ult i64 %98, 11
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = trunc i64 %98 to i8
  store i8 %101, i8* %27, align 1
  br label %116

102:                                              ; preds = %94
  %103 = icmp ugt i64 %98, 9223372036854775791
  br i1 %103, label %104, label %106

104:                                              ; preds = %102
  %105 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %105) #15
  unreachable

106:                                              ; preds = %102
  %107 = add nuw nsw i64 %98, 8
  %108 = and i64 %107, -8
  %109 = icmp slt i64 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %106
  call void @abort() #15
  unreachable

111:                                              ; preds = %106
  %112 = shl i64 %108, 1
  %113 = call i8* @_Znwm(i64 %112) #14
  %114 = bitcast i8* %113 to i16*
  store i8* %113, i8** %22, align 8
  %115 = or i64 %108, -9223372036854775808
  store i64 %115, i64* %23, align 8
  store i64 %98, i64* %24, align 8
  br label %116

116:                                              ; preds = %111, %100
  %117 = phi i16* [ %25, %100 ], [ %114, %111 ]
  %118 = add nuw nsw i64 %98, 1
  %119 = add i64 %98, 1
  %120 = icmp ult i64 %119, 16
  br i1 %120, label %211, label %121

121:                                              ; preds = %116
  %122 = getelementptr i16, i16* %117, i64 1
  %123 = getelementptr i16, i16* %122, i64 %98
  %124 = getelementptr i16, i16* %96, i64 1
  %125 = getelementptr i16, i16* %124, i64 %98
  %126 = icmp ult i16* %117, %125
  %127 = icmp ult i16* %96, %123
  %128 = and i1 %126, %127
  br i1 %128, label %211, label %129

129:                                              ; preds = %121
  %130 = and i64 %119, -16
  %131 = getelementptr i16, i16* %117, i64 %130
  %132 = sub i64 %118, %130
  %133 = getelementptr i16, i16* %96, i64 %130
  %134 = add i64 %130, -16
  %135 = lshr exact i64 %134, 4
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 3
  %138 = icmp ult i64 %134, 48
  br i1 %138, label %190, label %139

139:                                              ; preds = %129
  %140 = sub nsw i64 %136, %137
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi i64 [ 0, %139 ], [ %187, %141 ]
  %143 = phi i64 [ %140, %139 ], [ %188, %141 ]
  %144 = getelementptr i16, i16* %117, i64 %142
  %145 = getelementptr i16, i16* %96, i64 %142
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !17
  %148 = getelementptr i16, i16* %145, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !17
  %151 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !20, !noalias !17
  %152 = getelementptr i16, i16* %144, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !20, !noalias !17
  %154 = or i64 %142, 16
  %155 = getelementptr i16, i16* %117, i64 %154
  %156 = getelementptr i16, i16* %96, i64 %154
  %157 = bitcast i16* %156 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !17
  %159 = getelementptr i16, i16* %156, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !17
  %162 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %162, align 2, !alias.scope !20, !noalias !17
  %163 = getelementptr i16, i16* %155, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %164, align 2, !alias.scope !20, !noalias !17
  %165 = or i64 %142, 32
  %166 = getelementptr i16, i16* %117, i64 %165
  %167 = getelementptr i16, i16* %96, i64 %165
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !17
  %170 = getelementptr i16, i16* %167, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !17
  %173 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %173, align 2, !alias.scope !20, !noalias !17
  %174 = getelementptr i16, i16* %166, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %175, align 2, !alias.scope !20, !noalias !17
  %176 = or i64 %142, 48
  %177 = getelementptr i16, i16* %117, i64 %176
  %178 = getelementptr i16, i16* %96, i64 %176
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !17
  %181 = getelementptr i16, i16* %178, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !17
  %184 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %184, align 2, !alias.scope !20, !noalias !17
  %185 = getelementptr i16, i16* %177, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %186, align 2, !alias.scope !20, !noalias !17
  %187 = add i64 %142, 64
  %188 = add i64 %143, -4
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %141, !llvm.loop !22

190:                                              ; preds = %141, %129
  %191 = phi i64 [ 0, %129 ], [ %187, %141 ]
  %192 = icmp eq i64 %137, 0
  br i1 %192, label %209, label %193

193:                                              ; preds = %190, %193
  %194 = phi i64 [ %206, %193 ], [ %191, %190 ]
  %195 = phi i64 [ %207, %193 ], [ %137, %190 ]
  %196 = getelementptr i16, i16* %117, i64 %194
  %197 = getelementptr i16, i16* %96, i64 %194
  %198 = bitcast i16* %197 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !17
  %200 = getelementptr i16, i16* %197, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !17
  %203 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %203, align 2, !alias.scope !20, !noalias !17
  %204 = getelementptr i16, i16* %196, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %205, align 2, !alias.scope !20, !noalias !17
  %206 = add i64 %194, 16
  %207 = add i64 %195, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %193, !llvm.loop !23

209:                                              ; preds = %193, %190
  %210 = icmp eq i64 %119, %130
  br i1 %210, label %264, label %211

211:                                              ; preds = %209, %121, %116
  %212 = phi i16* [ %117, %121 ], [ %117, %116 ], [ %131, %209 ]
  %213 = phi i64 [ %118, %121 ], [ %118, %116 ], [ %132, %209 ]
  %214 = phi i16* [ %96, %121 ], [ %96, %116 ], [ %133, %209 ]
  %215 = add i64 %213, -1
  %216 = and i64 %213, 7
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %229, label %218

218:                                              ; preds = %211, %218
  %219 = phi i16* [ %225, %218 ], [ %212, %211 ]
  %220 = phi i64 [ %224, %218 ], [ %213, %211 ]
  %221 = phi i16* [ %226, %218 ], [ %214, %211 ]
  %222 = phi i64 [ %227, %218 ], [ %216, %211 ]
  %223 = load i16, i16* %221, align 2
  store i16 %223, i16* %219, align 2
  %224 = add i64 %220, -1
  %225 = getelementptr inbounds i16, i16* %219, i64 1
  %226 = getelementptr inbounds i16, i16* %221, i64 1
  %227 = add i64 %222, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %218, !llvm.loop !24

229:                                              ; preds = %218, %211
  %230 = phi i16* [ %212, %211 ], [ %225, %218 ]
  %231 = phi i64 [ %213, %211 ], [ %224, %218 ]
  %232 = phi i16* [ %214, %211 ], [ %226, %218 ]
  %233 = icmp ult i64 %215, 7
  br i1 %233, label %264, label %234

234:                                              ; preds = %229, %234
  %235 = phi i16* [ %261, %234 ], [ %230, %229 ]
  %236 = phi i64 [ %260, %234 ], [ %231, %229 ]
  %237 = phi i16* [ %262, %234 ], [ %232, %229 ]
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %235, align 2
  %239 = getelementptr inbounds i16, i16* %235, i64 1
  %240 = getelementptr inbounds i16, i16* %237, i64 1
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = getelementptr inbounds i16, i16* %235, i64 2
  %243 = getelementptr inbounds i16, i16* %237, i64 2
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = getelementptr inbounds i16, i16* %235, i64 3
  %246 = getelementptr inbounds i16, i16* %237, i64 3
  %247 = load i16, i16* %246, align 2
  store i16 %247, i16* %245, align 2
  %248 = getelementptr inbounds i16, i16* %235, i64 4
  %249 = getelementptr inbounds i16, i16* %237, i64 4
  %250 = load i16, i16* %249, align 2
  store i16 %250, i16* %248, align 2
  %251 = getelementptr inbounds i16, i16* %235, i64 5
  %252 = getelementptr inbounds i16, i16* %237, i64 5
  %253 = load i16, i16* %252, align 2
  store i16 %253, i16* %251, align 2
  %254 = getelementptr inbounds i16, i16* %235, i64 6
  %255 = getelementptr inbounds i16, i16* %237, i64 6
  %256 = load i16, i16* %255, align 2
  store i16 %256, i16* %254, align 2
  %257 = getelementptr inbounds i16, i16* %235, i64 7
  %258 = getelementptr inbounds i16, i16* %237, i64 7
  %259 = load i16, i16* %258, align 2
  store i16 %259, i16* %257, align 2
  %260 = add i64 %236, -8
  %261 = getelementptr inbounds i16, i16* %235, i64 8
  %262 = getelementptr inbounds i16, i16* %237, i64 8
  %263 = icmp eq i64 %260, 0
  br i1 %263, label %264, label %234, !llvm.loop !25

264:                                              ; preds = %229, %234, %209, %92
  %265 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %78, i64 0, i32 0, i32 1
  %266 = load i64, i64* %265, align 8
  store i64 %266, i64* %28, align 8
  br label %268

267:                                              ; preds = %88
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #13
  br label %268

268:                                              ; preds = %267, %264
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #13, !noalias !26
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #13, !noalias !26
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13, !noalias !29
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %32) #13, !noalias !29
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #13
  %269 = load i8, i8* %34, align 1, !noalias !29
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %268
  %272 = load i8*, i8** %35, align 8, !noalias !29
  call void @_ZdlPv(i8* %272) #14
  br label %273

273:                                              ; preds = %271, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13, !noalias !29
  %274 = load i8, i8* %37, align 1, !noalias !26
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %278

276:                                              ; preds = %273
  %277 = load i8*, i8** %38, align 8, !noalias !26
  call void @_ZdlPv(i8* %277) #14
  br label %278

278:                                              ; preds = %273, %276
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #13, !noalias !26
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* nonnull %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #13
  %279 = load i8, i8* %40, align 1
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %278
  %282 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %282) #14
  br label %283

283:                                              ; preds = %278, %281
  %284 = load i8, i8* %27, align 1
  %285 = icmp slt i8 %284, 0
  br i1 %285, label %286, label %288

286:                                              ; preds = %283
  %287 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %287) #14
  br label %288

288:                                              ; preds = %283, %286
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #13
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* nonnull %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #13
  %289 = load i8, i8* %44, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  %292 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %292) #14
  br label %293

293:                                              ; preds = %288, %291
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  %294 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %78, i64 0, i32 3
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* nonnull %4, %"class.v8_inspector::String16"* dereferenceable(32) %294) #13
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* nonnull %4, i8 signext 58) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #13
  %295 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %78, i64 0, i32 4
  %296 = load i32, i32* %295, align 8
  %297 = add nsw i32 %296, 1
  call void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* nonnull sret %8, i32 %297) #13
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* nonnull %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8) #13
  %298 = load i8, i8* %48, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %302

300:                                              ; preds = %293
  %301 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %301) #14
  br label %302

302:                                              ; preds = %293, %300
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #13
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* nonnull %4, i8 signext 58) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #13
  %303 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %78, i64 0, i32 5
  %304 = load i32, i32* %303, align 4
  %305 = add nsw i32 %304, 1
  call void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* nonnull sret %9, i32 %305) #13
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* nonnull %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #13
  %306 = load i8, i8* %52, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %302
  %309 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %302, %308
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #13
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* nonnull %4, i8 signext 41) #13
  %311 = add nuw i64 %75, 1
  %312 = load i64, i64* %14, align 8
  %313 = load i64, i64* %16, align 8
  %314 = sub i64 %312, %313
  %315 = ashr exact i64 %314, 4
  %316 = icmp ult i64 %311, %315
  br i1 %316, label %73, label %54
}

declare void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"*) unnamed_addr #2

declare void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"*, i8 signext) local_unnamed_addr #2

declare %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector16StringBufferFromENS_8String16E(%"class.v8_inspector::String16"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::String16Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector16V8StackTraceImpl23isEqualIgnoringTopFrameEPS0_(%"class.v8_inspector::V8StackTraceImpl"* nocapture readonly, %"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", align 16
  %4 = alloca %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", align 16
  %5 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.64"* %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3, i64 0, i32 1, i32 0
  %10 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %10, align 16
  %11 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3, i64 0, i32 2
  %12 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 1
  %13 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %12, align 8
  %14 = icmp eq %"class.std::__1::__shared_weak_count"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %13) #13
  %17 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %16 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %16) #13
  br label %30

30:                                               ; preds = %2, %15, %18, %24
  %31 = phi %"class.v8_inspector::AsyncStackTrace"* [ %20, %18 ], [ %20, %24 ], [ null, %15 ], [ null, %2 ]
  store %"class.v8_inspector::AsyncStackTrace"* %31, %"class.v8_inspector::AsyncStackTrace"** %11, align 16
  %32 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 1
  %34 = bitcast %"class.std::__1::vector.64"* %33 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %4, i64 0, i32 1, i32 0
  %37 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %4 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %37, align 16
  %38 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %4, i64 0, i32 2
  %39 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 3, i32 1
  %40 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %39, align 8
  %41 = icmp eq %"class.std::__1::__shared_weak_count"* %40, null
  br i1 %41, label %57, label %42

42:                                               ; preds = %30
  %43 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %40) #13
  %44 = icmp eq %"class.std::__1::__shared_weak_count"* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 3, i32 0
  %47 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %43, i64 0, i32 0, i32 1
  %49 = atomicrmw add i64* %48, i64 -1 acq_rel
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %43, i64 0, i32 0
  %53 = bitcast %"class.std::__1::__shared_weak_count"* %43 to void (%"class.std::__1::__shared_count"*)***
  %54 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, i64 2
  %56 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %55, align 8
  tail call void %56(%"class.std::__1::__shared_count"* %52) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %43) #13
  br label %57

57:                                               ; preds = %30, %42, %45, %51
  %58 = phi %"class.v8_inspector::AsyncStackTrace"* [ %47, %45 ], [ %47, %51 ], [ null, %42 ], [ null, %30 ]
  store %"class.v8_inspector::AsyncStackTrace"* %58, %"class.v8_inspector::AsyncStackTrace"** %38, align 16
  call void @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator4nextEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nonnull %3)
  call void @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator4nextEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nonnull %4)
  %59 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %3, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %59, align 16
  %61 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %9, align 8
  %62 = icmp eq %"class.std::__1::shared_ptr"* %60, %61
  br i1 %62, label %96, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %4, i64 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %63, %92
  %66 = phi %"class.std::__1::shared_ptr"* [ %60, %63 ], [ %93, %92 ]
  %67 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %64, align 16
  %68 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %36, align 8
  %69 = icmp eq %"class.std::__1::shared_ptr"* %67, %68
  br i1 %69, label %96, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %66, i64 0, i32 0
  %72 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %67, i64 0, i32 0
  %74 = load %"class.v8_inspector::StackFrame"*, %"class.v8_inspector::StackFrame"** %73, align 8
  %75 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %74, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %103

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %72, i64 0, i32 4
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %74, i64 0, i32 4
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %86, label %103

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %72, i64 0, i32 5
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"class.v8_inspector::StackFrame", %"class.v8_inspector::StackFrame"* %74, i64 0, i32 5
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %103

92:                                               ; preds = %86
  call void @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator4nextEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nonnull %3)
  call void @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIterator4nextEv(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nonnull %4)
  %93 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %59, align 16
  %94 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %9, align 8
  %95 = icmp eq %"class.std::__1::shared_ptr"* %93, %94
  br i1 %95, label %96, label %65

96:                                               ; preds = %92, %65, %57
  %97 = phi i1 [ true, %57 ], [ false, %65 ], [ true, %92 ]
  %98 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %4, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %98, align 16
  %100 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %36, align 8
  %101 = icmp ne %"class.std::__1::shared_ptr"* %99, %100
  %102 = xor i1 %97, %101
  br label %103

103:                                              ; preds = %70, %80, %86, %96
  %104 = phi i1 [ %102, %96 ], [ false, %86 ], [ false, %80 ], [ false, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8StackTraceImpl18StackFrameIteratorC2EPKS0_(%"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* nocapture, %"class.v8_inspector::V8StackTraceImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector.64"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::shared_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 1, i32 0
  %11 = bitcast %"class.std::__1::shared_ptr"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator", %"class.v8_inspector::V8StackTraceImpl::StackFrameIterator"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 3, i32 1
  %14 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %2
  %17 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %14) #13
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %1, i64 0, i32 3, i32 0
  %21 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %23 = atomicrmw add i64* %22, i64 -1 acq_rel
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %27 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %28 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, i64 2
  %30 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %29, align 8
  tail call void %30(%"class.std::__1::__shared_count"* %26) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #13
  br label %31

31:                                               ; preds = %2, %16, %19, %25
  %32 = phi %"class.v8_inspector::AsyncStackTrace"* [ %21, %19 ], [ %21, %25 ], [ null, %16 ], [ null, %2 ]
  store %"class.v8_inspector::AsyncStackTrace"* %32, %"class.v8_inspector::AsyncStackTrace"** %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"class.v8_inspector::String16"* @_ZNK12v8_inspector15AsyncStackTrace11descriptionEv(%"class.v8_inspector::AsyncStackTrace"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 3
  ret %"class.v8_inspector::String16"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } @_ZNK12v8_inspector15AsyncStackTrace6parentEv(%"class.v8_inspector::AsyncStackTrace"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %2, align 8
  %4 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 5, i32 1
  %5 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %4, align 8
  %6 = icmp eq %"class.std::__1::__shared_weak_count"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %5, i64 0, i32 1
  %9 = atomicrmw add i64* %8, i64 1 monotonic
  br label %10

10:                                               ; preds = %1, %7
  %11 = insertvalue { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.v8_inspector::AsyncStackTrace"* %3, 0
  %12 = insertvalue { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } %11, %"class.std::__1::__shared_weak_count"* %5, 1
  ret { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } %12
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } @_ZN12v8_inspector15AsyncStackTrace7captureEPNS_10V8DebuggerEiRKNS_8String16Ei(%"class.v8_inspector::V8Debugger"*, i32, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8_inspector::V8DebuggerId", align 8
  %6 = alloca [2 x %"class.std::__1::unique_ptr.444"], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  %10 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %11 = alloca %"class.v8::HandleScope", align 8
  %12 = alloca %"class.std::__1::vector.64", align 8
  %13 = alloca %"class.std::__1::shared_ptr.280", align 8
  %14 = alloca %"struct.v8_inspector::V8StackTraceId", align 8
  %15 = alloca %"class.std::__1::vector.64", align 8
  %16 = load atomic i64, i64* @_ZZN12v8_inspector15AsyncStackTrace7captureEPNS_10V8DebuggerEiRKNS_8String16EiE28trace_event_unique_atomic422 monotonic, align 8
  %17 = inttoptr i64 %16 to i8*
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %4
  %20 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %21 = bitcast %"class.v8::TracingController"* %20 to i8* (%"class.v8::TracingController"*, i8*)***
  %22 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %21, align 8
  %23 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %22, i64 2
  %24 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, align 8
  %25 = tail call i8* %24(%"class.v8::TracingController"* %20, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #13
  %26 = ptrtoint i8* %25 to i64
  store atomic volatile i64 %26, i64* @_ZZN12v8_inspector15AsyncStackTrace7captureEPNS_10V8DebuggerEiRKNS_8String16EiE28trace_event_unique_atomic422 monotonic, align 8
  br label %27

27:                                               ; preds = %4, %19
  %28 = phi i8* [ %17, %4 ], [ %25, %19 ]
  %29 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %30, align 8
  %31 = load atomic i8, i8* %28 monotonic, align 1
  %32 = and i8 %31, 5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %68, label %34

34:                                               ; preds = %27
  %35 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  %36 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  store i8 3, i8* %8, align 1
  %37 = sext i32 %3 to i64
  store i64 %37, i64* %9, align 8
  %38 = bitcast [2 x %"class.std::__1::unique_ptr.444"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #13
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 16, i1 false) #13
  %40 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %41 = bitcast %"class.v8::TracingController"* %40 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)***
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)** %42, i64 3
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.444"*, i32)** %43, align 8
  %45 = call i64 %44(%"class.v8::TracingController"* %40, i8 signext 88, i8* %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 1, i8** nonnull %7, i8* nonnull %8, i64* nonnull %9, %"class.std::__1::unique_ptr.444"* nonnull %39, i32 0) #13
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %47 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.v8::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %34
  %50 = bitcast %"class.v8::ConvertableToTraceFormat"* %47 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.v8::ConvertableToTraceFormat"* nonnull %47) #13
  br label %54

54:                                               ; preds = %49, %34
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.444"], [2 x %"class.std::__1::unique_ptr.444"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #13
  br label %63

63:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %28, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  store i64 %45, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %30, align 8
  br label %68

68:                                               ; preds = %27, %63
  %69 = getelementptr inbounds %"class.v8_inspector::V8Debugger", %"class.v8_inspector::V8Debugger"* %0, i64 0, i32 2
  %70 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %69, align 8
  %71 = bitcast %"class.v8::HandleScope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %11, %"class.v8::Isolate"* %70) #13
  %72 = call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %70) #13
  br i1 %72, label %73, label %81

73:                                               ; preds = %68
  %74 = call %"class.v8::StackTrace"* @_ZN2v810StackTrace17CurrentStackTraceEPNS_7IsolateEiNS0_17StackTraceOptionsE(%"class.v8::Isolate"* %70, i32 %3, i32 383) #13
  %75 = bitcast %"class.std::__1::vector.64"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #13
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_114toFramesVectorEPNS_10V8DebuggerEN2v85LocalINS3_10StackTraceEEEi(%"class.std::__1::vector.64"* noalias nonnull %12, %"class.v8_inspector::V8Debugger"* %0, %"class.v8::StackTrace"* %74, i32 %3)
  %76 = bitcast %"class.std::__1::vector.64"* %12 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %12, i64 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::shared_ptr"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #13
  br label %81

81:                                               ; preds = %73, %68
  %82 = phi i64 [ %77, %73 ], [ 0, %68 ]
  %83 = phi <2 x i64> [ %80, %73 ], [ zeroinitializer, %68 ]
  %84 = bitcast %"class.std::__1::shared_ptr.280"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #13
  %85 = bitcast %"struct.v8_inspector::V8StackTraceId"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #13
  %86 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %14, i64 0, i32 0
  store i64 0, i64* %86, align 8
  %87 = bitcast %"class.v8_inspector::V8DebuggerId"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 16, i1 false) #13
  %88 = call { i64, i64 } @_ZNK12v8_inspector12V8DebuggerId4pairEv(%"class.v8_inspector::V8DebuggerId"* nonnull %5) #13
  %89 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %14, i64 0, i32 1, i32 0
  %90 = extractvalue { i64, i64 } %88, 0
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %14, i64 0, i32 1, i32 1
  %92 = extractvalue { i64, i64 } %88, 1
  store i64 %92, i64* %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  %93 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %14, i64 0, i32 2
  store i8 0, i8* %93, align 8
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_119calculateAsyncChainEPNS_10V8DebuggerEiPNSt3__110shared_ptrINS_15AsyncStackTraceEEEPNS_14V8StackTraceIdEPi(%"class.v8_inspector::V8Debugger"* %0, i32 %1, %"class.std::__1::shared_ptr.280"* nonnull %13, %"struct.v8_inspector::V8StackTraceId"* nonnull %14, i32* null)
  %94 = inttoptr i64 %82 to %"class.std::__1::shared_ptr"*
  %95 = extractelement <2 x i64> %83, i32 0
  %96 = inttoptr i64 %95 to %"class.std::__1::shared_ptr"*
  %97 = icmp eq %"class.std::__1::shared_ptr"* %94, %96
  %98 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %13, i64 0, i32 0
  %99 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %98, align 8
  br i1 %97, label %102, label %100

100:                                              ; preds = %81
  %101 = icmp ne %"class.v8_inspector::AsyncStackTrace"* %99, null
  br label %159

102:                                              ; preds = %81
  %103 = icmp eq %"class.v8_inspector::AsyncStackTrace"* %99, null
  %104 = load i64, i64* %86, align 8
  %105 = icmp eq i64 %104, 0
  %106 = and i1 %103, %105
  br i1 %106, label %218, label %107

107:                                              ; preds = %102
  %108 = ptrtoint %"class.v8_inspector::AsyncStackTrace"* %99 to i64
  %109 = icmp ne %"class.v8_inspector::AsyncStackTrace"* %99, null
  %110 = and i1 %97, %109
  br i1 %110, label %111, label %159

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %99, i64 0, i32 3
  %113 = bitcast %"class.v8_inspector::String16"* %112 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %99, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i64 %118, i64 %119
  %121 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %121, i64 0, i32 1, i32 1
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %123 to i64
  %128 = select i1 %124, i64 %126, i64 %127
  %129 = icmp eq i64 %120, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %111
  %131 = icmp eq i64 %120, 0
  br i1 %131, label %155, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i16*, i16** %133, align 8
  %135 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %136 = select i1 %124, i16* %134, i16* %135
  %137 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i16*, i16** %137, align 8
  %139 = bitcast %"class.v8_inspector::String16"* %112 to i16*
  %140 = select i1 %116, i16* %138, i16* %139
  br label %141

141:                                              ; preds = %148, %132
  %142 = phi i64 [ %149, %148 ], [ %120, %132 ]
  %143 = phi i16* [ %151, %148 ], [ %136, %132 ]
  %144 = phi i16* [ %150, %148 ], [ %140, %132 ]
  %145 = load i16, i16* %144, align 2
  %146 = load i16, i16* %143, align 2
  %147 = icmp eq i16 %146, %145
  br i1 %147, label %148, label %153

148:                                              ; preds = %141
  %149 = add i64 %142, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %143, i64 1
  %152 = icmp eq i64 %149, 0
  br i1 %152, label %155, label %141

153:                                              ; preds = %141, %111
  %154 = icmp eq i64 %128, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %148, %130, %153
  %156 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %13, i64 0, i32 1
  %157 = bitcast %"class.std::__1::__shared_weak_count"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #13
  br label %218

159:                                              ; preds = %100, %107, %153
  %160 = phi i1 [ %101, %100 ], [ %109, %107 ], [ %109, %153 ]
  %161 = icmp ne i32 %1, 0
  %162 = xor i1 %160, true
  %163 = or i1 %161, %162
  br i1 %163, label %167, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %99, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  br label %167

167:                                              ; preds = %159, %164
  %168 = phi i32 [ %1, %159 ], [ %166, %164 ]
  %169 = call i8* @_Znwm(i64 128) #14
  %170 = bitcast i8* %169 to %"class.v8_inspector::AsyncStackTrace"*
  %171 = bitcast %"class.std::__1::vector.64"* %15 to i64*
  store i64 %82, i64* %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %15, i64 0, i32 0, i32 1
  %173 = bitcast %"class.std::__1::shared_ptr"** %172 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %13, i64 0, i32 1
  %175 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %174, align 8
  %176 = icmp eq %"class.std::__1::__shared_weak_count"* %175, null
  br i1 %176, label %180, label %177

177:                                              ; preds = %167
  %178 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %175, i64 0, i32 0, i32 1
  %179 = atomicrmw add i64* %178, i64 1 monotonic
  br label %180

180:                                              ; preds = %167, %177
  call void @_ZN12v8_inspector15AsyncStackTraceC2EiRKNS_8String16ENSt3__16vectorINS4_10shared_ptrINS_10StackFrameEEENS4_9allocatorIS8_EEEENS6_IS0_EERKNS_14V8StackTraceIdE(%"class.v8_inspector::AsyncStackTrace"* nonnull %170, i32 %168, %"class.v8_inspector::String16"* dereferenceable(32) %2, %"class.std::__1::vector.64"* nonnull %15, %"class.v8_inspector::AsyncStackTrace"* %99, %"class.std::__1::__shared_weak_count"* %175, %"struct.v8_inspector::V8StackTraceId"* nonnull dereferenceable(32) %14)
  %181 = ptrtoint i8* %169 to i64
  %182 = call i8* @_Znwm(i64 32) #14
  %183 = bitcast i8* %182 to i32 (...)***
  %184 = getelementptr inbounds i8, i8* %182, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 16, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %185 = getelementptr inbounds i8, i8* %182, i64 24
  %186 = bitcast i8* %185 to i64*
  store i64 %181, i64* %186, align 8
  %187 = ptrtoint i8* %182 to i64
  %188 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %15, i64 0, i32 0, i32 0
  %189 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %188, align 8
  %190 = icmp eq %"class.std::__1::shared_ptr"* %189, null
  br i1 %190, label %218, label %191

191:                                              ; preds = %180
  %192 = bitcast %"class.std::__1::shared_ptr"* %189 to i8*
  %193 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %172, align 8
  %194 = icmp eq %"class.std::__1::shared_ptr"* %193, %189
  br i1 %194, label %216, label %195

195:                                              ; preds = %191, %211
  %196 = phi %"class.std::__1::shared_ptr"* [ %197, %211 ], [ %193, %191 ]
  %197 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %196, i64 -1
  %198 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %196, i64 -1, i32 1
  %199 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %198, align 8
  %200 = icmp eq %"class.std::__1::__shared_weak_count"* %199, null
  br i1 %200, label %211, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %199, i64 0, i32 0, i32 1
  %203 = atomicrmw add i64* %202, i64 -1 acq_rel
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %211

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %199, i64 0, i32 0
  %207 = bitcast %"class.std::__1::__shared_weak_count"* %199 to void (%"class.std::__1::__shared_count"*)***
  %208 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %208, i64 2
  %210 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %209, align 8
  call void %210(%"class.std::__1::__shared_count"* %206) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %199) #13
  br label %211

211:                                              ; preds = %205, %201, %195
  %212 = icmp eq %"class.std::__1::shared_ptr"* %197, %189
  br i1 %212, label %213, label %195

213:                                              ; preds = %211
  %214 = bitcast %"class.std::__1::vector.64"* %15 to i8**
  %215 = load i8*, i8** %214, align 8
  br label %216

216:                                              ; preds = %213, %191
  %217 = phi i8* [ %215, %213 ], [ %192, %191 ]
  store %"class.std::__1::shared_ptr"* %189, %"class.std::__1::shared_ptr"** %172, align 8
  call void @_ZdlPv(i8* %217) #14
  br label %218

218:                                              ; preds = %102, %216, %180, %155
  %219 = phi i64 [ %82, %155 ], [ 0, %180 ], [ 0, %216 ], [ %82, %102 ]
  %220 = phi i64 [ %95, %155 ], [ 0, %180 ], [ 0, %216 ], [ %95, %102 ]
  %221 = phi i64 [ %158, %155 ], [ %187, %180 ], [ %187, %216 ], [ 0, %102 ]
  %222 = phi i64 [ %108, %155 ], [ %181, %180 ], [ %181, %216 ], [ 0, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #13
  %223 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %13, i64 0, i32 1
  %224 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %223, align 8
  %225 = icmp eq %"class.std::__1::__shared_weak_count"* %224, null
  br i1 %225, label %236, label %226

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %224, i64 0, i32 0, i32 1
  %228 = atomicrmw add i64* %227, i64 -1 acq_rel
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %236

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %224, i64 0, i32 0
  %232 = bitcast %"class.std::__1::__shared_weak_count"* %224 to void (%"class.std::__1::__shared_count"*)***
  %233 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %233, i64 2
  %235 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %234, align 8
  call void %235(%"class.std::__1::__shared_count"* %231) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %224) #13
  br label %236

236:                                              ; preds = %218, %226, %230
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #13
  %237 = inttoptr i64 %219 to %"class.std::__1::shared_ptr"*
  %238 = icmp eq i64 %219, 0
  br i1 %238, label %262, label %239

239:                                              ; preds = %236
  %240 = inttoptr i64 %220 to %"class.std::__1::shared_ptr"*
  %241 = icmp eq %"class.std::__1::shared_ptr"* %240, %237
  br i1 %241, label %260, label %242

242:                                              ; preds = %239, %258
  %243 = phi %"class.std::__1::shared_ptr"* [ %244, %258 ], [ %240, %239 ]
  %244 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %243, i64 -1
  %245 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %243, i64 -1, i32 1
  %246 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %245, align 8
  %247 = icmp eq %"class.std::__1::__shared_weak_count"* %246, null
  br i1 %247, label %258, label %248

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %246, i64 0, i32 0, i32 1
  %250 = atomicrmw add i64* %249, i64 -1 acq_rel
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %258

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %246, i64 0, i32 0
  %254 = bitcast %"class.std::__1::__shared_weak_count"* %246 to void (%"class.std::__1::__shared_count"*)***
  %255 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %254, align 8
  %256 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %255, i64 2
  %257 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %256, align 8
  call void %257(%"class.std::__1::__shared_count"* %253) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %246) #13
  br label %258

258:                                              ; preds = %252, %248, %242
  %259 = icmp eq %"class.std::__1::shared_ptr"* %244, %237
  br i1 %259, label %260, label %242

260:                                              ; preds = %258, %239
  %261 = inttoptr i64 %219 to i8*
  call void @_ZdlPv(i8* %261) #14
  br label %262

262:                                              ; preds = %236, %260
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  %263 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %30, align 8
  %264 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %263, null
  br i1 %264, label %281, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = load atomic i8, i8* %267 monotonic, align 1
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %281, label %270

270:                                              ; preds = %265
  %271 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %272 = load i8*, i8** %266, align 8
  %273 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.v8::TracingController"* %271 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %278 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %278, i64 5
  %280 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %279, align 8
  call void %280(%"class.v8::TracingController"* %271, i8* %272, i8* %274, i64 %276) #13
  br label %281

281:                                              ; preds = %262, %265, %270
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #13
  %282 = inttoptr i64 %222 to %"class.v8_inspector::AsyncStackTrace"*
  %283 = insertvalue { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.v8_inspector::AsyncStackTrace"* %282, 0
  %284 = inttoptr i64 %221 to %"class.std::__1::__shared_weak_count"*
  %285 = insertvalue { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } %283, %"class.std::__1::__shared_weak_count"* %284, 1
  ret { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } %285
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector15AsyncStackTraceC2EiRKNS_8String16ENSt3__16vectorINS4_10shared_ptrINS_10StackFrameEEENS4_9allocatorIS8_EEEENS6_IS0_EERKNS_14V8StackTraceIdE(%"class.v8_inspector::AsyncStackTrace"*, i32, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32), %"class.std::__1::vector.64"* nocapture, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*, %"struct.v8_inspector::V8StackTraceId"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %8 = ptrtoint %"class.v8_inspector::AsyncStackTrace"* %4 to i64
  %9 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 3
  %12 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  %19 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #13
  br label %195

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %"class.v8_inspector::String16"* %11 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.v8_inspector::String16"* %11 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #15
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #15
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #14
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %24, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %22, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %22, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = getelementptr i16, i16* %49, i64 %61
  %63 = sub i64 %50, %61
  %64 = getelementptr i16, i16* %22, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %49, i64 %73
  %76 = getelementptr i16, i16* %22, i64 %73
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !32
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !32
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !35, !noalias !32
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !35, !noalias !32
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %49, i64 %85
  %87 = getelementptr i16, i16* %22, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !32
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !32
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !35, !noalias !32
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !35, !noalias !32
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %49, i64 %96
  %98 = getelementptr i16, i16* %22, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !32
  %101 = getelementptr i16, i16* %98, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !32
  %104 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !35, !noalias !32
  %105 = getelementptr i16, i16* %97, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !35, !noalias !32
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %49, i64 %107
  %109 = getelementptr i16, i16* %22, i64 %107
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !32
  %112 = getelementptr i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !32
  %115 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !35, !noalias !32
  %116 = getelementptr i16, i16* %108, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !35, !noalias !32
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !37

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %49, i64 %125
  %128 = getelementptr i16, i16* %22, i64 %125
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !32
  %131 = getelementptr i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !32
  %134 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !35, !noalias !32
  %135 = getelementptr i16, i16* %127, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !35, !noalias !32
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !38

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %62, %140 ]
  %144 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %22, %53 ], [ %22, %48 ], [ %64, %140 ]
  %146 = add i64 %144, -1
  %147 = and i64 %144, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i16* [ %156, %149 ], [ %143, %142 ]
  %151 = phi i64 [ %155, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %157, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %152, align 2
  store i16 %154, i16* %150, align 2
  %155 = add i64 %151, -1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = getelementptr inbounds i16, i16* %152, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !39

160:                                              ; preds = %149, %142
  %161 = phi i16* [ %143, %142 ], [ %156, %149 ]
  %162 = phi i64 [ %144, %142 ], [ %155, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %157, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i16* [ %192, %165 ], [ %161, %160 ]
  %167 = phi i64 [ %191, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %193, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %168, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = getelementptr inbounds i16, i16* %168, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = getelementptr inbounds i16, i16* %168, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = getelementptr inbounds i16, i16* %168, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = getelementptr inbounds i16, i16* %168, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = getelementptr inbounds i16, i16* %168, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = getelementptr inbounds i16, i16* %168, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %167, -8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = getelementptr inbounds i16, i16* %168, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !40

195:                                              ; preds = %160, %165, %140, %17
  %196 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 3, i32 1
  %197 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 4
  %200 = bitcast %"class.std::__1::vector.64"* %199 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 24, i1 false) #13
  %201 = bitcast %"class.std::__1::vector.64"* %3 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.std::__1::vector.64"* %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %3, i64 0, i32 0, i32 1
  %205 = bitcast %"class.std::__1::shared_ptr"** %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 4, i32 0, i32 1
  %208 = bitcast %"class.std::__1::shared_ptr"** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %210 = bitcast %"class.std::__1::shared_ptr"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %213 = bitcast %"class.std::__1::shared_ptr"** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast %"class.std::__1::vector.64"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %214, i8 0, i64 24, i1 false) #13
  %215 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 5
  %216 = bitcast %"class.std::__1::weak_ptr"* %215 to i64*
  store i64 %8, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 5, i32 1
  store %"class.std::__1::__shared_weak_count"* %5, %"class.std::__1::__shared_weak_count"** %217, align 8
  %218 = icmp eq %"class.std::__1::__shared_weak_count"* %5, null
  br i1 %218, label %219, label %223

219:                                              ; preds = %195
  %220 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 6
  %221 = bitcast %"struct.v8_inspector::V8StackTraceId"* %220 to i8*
  %222 = bitcast %"struct.v8_inspector::V8StackTraceId"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 32, i1 false)
  br label %238

223:                                              ; preds = %195
  %224 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %5, i64 0, i32 1
  %225 = atomicrmw add i64* %224, i64 1 monotonic
  %226 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 6
  %227 = bitcast %"struct.v8_inspector::V8StackTraceId"* %226 to i8*
  %228 = bitcast %"struct.v8_inspector::V8StackTraceId"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 32, i1 false)
  %229 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %5, i64 0, i32 0, i32 1
  %230 = atomicrmw add i64* %229, i64 -1 acq_rel
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %238

232:                                              ; preds = %223
  %233 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %5, i64 0, i32 0
  %234 = bitcast %"class.std::__1::__shared_weak_count"* %5 to void (%"class.std::__1::__shared_count"*)***
  %235 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %235, i64 2
  %237 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %236, align 8
  tail call void %237(%"class.std::__1::__shared_count"* %233) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %5) #13
  br label %238

238:                                              ; preds = %219, %223, %232
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector15AsyncStackTrace20buildInspectorObjectEPNS_10V8DebuggerEi(%"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::V8Debugger"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::shared_ptr.280", align 8
  %5 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::shared_ptr.280"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 5, i32 1
  %9 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %8, align 8
  %10 = icmp eq %"class.std::__1::__shared_weak_count"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %9) #13
  %13 = icmp eq %"class.std::__1::__shared_weak_count"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %15, align 8
  br label %17

17:                                               ; preds = %3, %11, %14
  %18 = phi %"class.std::__1::__shared_weak_count"* [ null, %11 ], [ %12, %14 ], [ null, %3 ]
  %19 = phi %"class.v8_inspector::AsyncStackTrace"* [ null, %11 ], [ %16, %14 ], [ null, %3 ]
  %20 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %4, i64 0, i32 0
  store %"class.v8_inspector::AsyncStackTrace"* %19, %"class.v8_inspector::AsyncStackTrace"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::shared_ptr.280", %"class.std::__1::shared_ptr.280"* %4, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %18, %"class.std::__1::__shared_weak_count"** %21, align 8
  %22 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 6
  %23 = call fastcc %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZN12v8_inspector12_GLOBAL__N_126buildInspectorObjectCommonEPNS_10V8DebuggerERKNSt3__16vectorINS3_10shared_ptrINS_10StackFrameEEENS3_9allocatorIS7_EEEERKNS_8String16ERKNS5_INS_15AsyncStackTraceEEERKNS_14V8StackTraceIdEi(%"class.v8_inspector::V8Debugger"* %1, %"class.std::__1::vector.64"* dereferenceable(24) %5, %"class.v8_inspector::String16"* dereferenceable(32) %6, %"class.std::__1::shared_ptr.280"* nonnull dereferenceable(16) %4, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %22, i32 %2)
  %24 = icmp eq %"class.std::__1::__shared_weak_count"* %18, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %18, i64 0, i32 0, i32 1
  %27 = atomicrmw add i64* %26, i64 -1 acq_rel
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %18, i64 0, i32 0
  %31 = bitcast %"class.std::__1::__shared_weak_count"* %18 to void (%"class.std::__1::__shared_count"*)***
  %32 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %32, i64 2
  %34 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %33, align 8
  tail call void %34(%"class.std::__1::__shared_count"* %30) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %18) #13
  br label %35

35:                                               ; preds = %17, %25, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret %"class.v8_inspector::protocol::Runtime::StackTrace"* %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector15AsyncStackTrace14contextGroupIdEv(%"class.v8_inspector::AsyncStackTrace"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12v8_inspector15AsyncStackTrace18setSuspendedTaskIdEPv(%"class.v8_inspector::AsyncStackTrace"* nocapture, i8*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 2
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK12v8_inspector15AsyncStackTrace15suspendedTaskIdEv(%"class.v8_inspector::AsyncStackTrace"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN12v8_inspector15AsyncStackTrace5storeEPNS_10V8DebuggerENSt3__110shared_ptrIS0_EE(%"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %2, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 1 monotonic
  br label %12

12:                                               ; preds = %7, %9
  %13 = tail call i64 @_ZN12v8_inspector10V8Debugger15storeStackTraceENSt3__110shared_ptrINS_15AsyncStackTraceEEE(%"class.v8_inspector::V8Debugger"* %0, %"class.v8_inspector::AsyncStackTrace"* %1, %"class.std::__1::__shared_weak_count"* %2) #13
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %5, %3 ], [ %13, %12 ]
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %2, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0, i32 1
  %19 = atomicrmw add i64* %18, i64 -1 acq_rel
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0
  %23 = bitcast %"class.std::__1::__shared_weak_count"* %2 to void (%"class.std::__1::__shared_count"*)***
  %24 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %24, i64 2
  %26 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %25, align 8
  tail call void %26(%"class.std::__1::__shared_count"* %22) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %2) #13
  br label %27

27:                                               ; preds = %14, %17, %21
  ret i64 %15
}

declare i64 @_ZN12v8_inspector10V8Debugger15storeStackTraceENSt3__110shared_ptrINS_15AsyncStackTraceEEE(%"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector15AsyncStackTrace7isEmptyEv(%"class.v8_inspector::AsyncStackTrace"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::shared_ptr"* %3, %5
  ret i1 %6
}

declare void @_ZN12v8_inspector8protocol15DictionaryValueC1Ev(%"class.v8_inspector::protocol::DictionaryValue"*) unnamed_addr #2

declare void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = getelementptr i16, i16* %25, i64 %39
  %41 = sub i64 %22, %39
  %42 = getelementptr i16, i16* %19, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %25, i64 %51
  %54 = getelementptr i16, i16* %19, i64 %51
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !41
  %57 = getelementptr i16, i16* %54, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !41
  %60 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !44, !noalias !41
  %61 = getelementptr i16, i16* %53, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !44, !noalias !41
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %25, i64 %63
  %65 = getelementptr i16, i16* %19, i64 %63
  %66 = bitcast i16* %65 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !41
  %68 = getelementptr i16, i16* %65, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !41
  %71 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !44, !noalias !41
  %72 = getelementptr i16, i16* %64, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !44, !noalias !41
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %25, i64 %74
  %76 = getelementptr i16, i16* %19, i64 %74
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !41
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !41
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !44, !noalias !41
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !44, !noalias !41
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %25, i64 %85
  %87 = getelementptr i16, i16* %19, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !41
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !41
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !44, !noalias !41
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !44, !noalias !41
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !46

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %25, i64 %103
  %106 = getelementptr i16, i16* %19, i64 %103
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !41
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !41
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !44, !noalias !41
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !44, !noalias !41
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !47

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %40, %118 ]
  %122 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %42, %118 ]
  %124 = add i64 %122, -1
  %125 = and i64 %122, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i16* [ %134, %127 ], [ %121, %120 ]
  %129 = phi i64 [ %133, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %135, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %130, align 2
  store i16 %132, i16* %128, align 2
  %133 = add i64 %129, -1
  %134 = getelementptr inbounds i16, i16* %128, i64 1
  %135 = getelementptr inbounds i16, i16* %130, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !48

138:                                              ; preds = %127, %120
  %139 = phi i16* [ %121, %120 ], [ %134, %127 ]
  %140 = phi i64 [ %122, %120 ], [ %133, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %135, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i16* [ %170, %143 ], [ %139, %138 ]
  %145 = phi i64 [ %169, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %171, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %146, align 2
  store i16 %147, i16* %144, align 2
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %146, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %144, i64 2
  %152 = getelementptr inbounds i16, i16* %146, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %144, i64 3
  %155 = getelementptr inbounds i16, i16* %146, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %144, i64 4
  %158 = getelementptr inbounds i16, i16* %146, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %144, i64 5
  %161 = getelementptr inbounds i16, i16* %146, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %144, i64 6
  %164 = getelementptr inbounds i16, i16* %146, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %144, i64 7
  %167 = getelementptr inbounds i16, i16* %146, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %145, -8
  %170 = getelementptr inbounds i16, i16* %144, i64 8
  %171 = getelementptr inbounds i16, i16* %146, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !49

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #15
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #15
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = getelementptr i16, i16* %190, i64 %201
  %203 = sub i64 %22, %201
  %204 = getelementptr i16, i16* %19, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %190, i64 %213
  %216 = getelementptr i16, i16* %19, i64 %213
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !50
  %219 = getelementptr i16, i16* %216, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !50
  %222 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !53, !noalias !50
  %223 = getelementptr i16, i16* %215, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !53, !noalias !50
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %190, i64 %225
  %227 = getelementptr i16, i16* %19, i64 %225
  %228 = bitcast i16* %227 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !50
  %230 = getelementptr i16, i16* %227, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !50
  %233 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !53, !noalias !50
  %234 = getelementptr i16, i16* %226, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !53, !noalias !50
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %190, i64 %236
  %238 = getelementptr i16, i16* %19, i64 %236
  %239 = bitcast i16* %238 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !50
  %241 = getelementptr i16, i16* %238, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !50
  %244 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !53, !noalias !50
  %245 = getelementptr i16, i16* %237, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !53, !noalias !50
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %190, i64 %247
  %249 = getelementptr i16, i16* %19, i64 %247
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !50
  %252 = getelementptr i16, i16* %249, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !50
  %255 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !53, !noalias !50
  %256 = getelementptr i16, i16* %248, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !53, !noalias !50
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !55

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %190, i64 %265
  %268 = getelementptr i16, i16* %19, i64 %265
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !50
  %271 = getelementptr i16, i16* %268, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !50
  %274 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !53, !noalias !50
  %275 = getelementptr i16, i16* %267, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !53, !noalias !50
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !56

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %202, %280 ]
  %284 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %204, %280 ]
  %286 = add i64 %284, -1
  %287 = and i64 %284, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i16* [ %296, %289 ], [ %283, %282 ]
  %291 = phi i64 [ %295, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %297, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %292, align 2
  store i16 %294, i16* %290, align 2
  %295 = add i64 %291, -1
  %296 = getelementptr inbounds i16, i16* %290, i64 1
  %297 = getelementptr inbounds i16, i16* %292, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !57

300:                                              ; preds = %289, %282
  %301 = phi i16* [ %283, %282 ], [ %296, %289 ]
  %302 = phi i64 [ %284, %282 ], [ %295, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %297, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i16* [ %332, %305 ], [ %301, %300 ]
  %307 = phi i64 [ %331, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %333, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %306, align 2
  %310 = getelementptr inbounds i16, i16* %306, i64 1
  %311 = getelementptr inbounds i16, i16* %308, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %306, i64 2
  %314 = getelementptr inbounds i16, i16* %308, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %306, i64 3
  %317 = getelementptr inbounds i16, i16* %308, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %306, i64 4
  %320 = getelementptr inbounds i16, i16* %308, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %306, i64 5
  %323 = getelementptr inbounds i16, i16* %308, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %306, i64 6
  %326 = getelementptr inbounds i16, i16* %308, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %306, i64 7
  %329 = getelementptr inbounds i16, i16* %308, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %307, -8
  %332 = getelementptr inbounds i16, i16* %306, i64 8
  %333 = getelementptr inbounds i16, i16* %308, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !58

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = getelementptr i16, i16* %356, i64 %368
  %370 = sub i64 %349, %368
  %371 = getelementptr i16, i16* %348, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %356, i64 %380
  %383 = getelementptr i16, i16* %348, i64 %380
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !59
  %386 = getelementptr i16, i16* %383, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !59
  %389 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !62, !noalias !59
  %390 = getelementptr i16, i16* %382, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !62, !noalias !59
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %356, i64 %392
  %394 = getelementptr i16, i16* %348, i64 %392
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !59
  %397 = getelementptr i16, i16* %394, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !59
  %400 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !62, !noalias !59
  %401 = getelementptr i16, i16* %393, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !62, !noalias !59
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %356, i64 %403
  %405 = getelementptr i16, i16* %348, i64 %403
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !59
  %408 = getelementptr i16, i16* %405, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !59
  %411 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !62, !noalias !59
  %412 = getelementptr i16, i16* %404, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !62, !noalias !59
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %356, i64 %414
  %416 = getelementptr i16, i16* %348, i64 %414
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !59
  %419 = getelementptr i16, i16* %416, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !59
  %422 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !62, !noalias !59
  %423 = getelementptr i16, i16* %415, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !62, !noalias !59
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !64

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %356, i64 %432
  %435 = getelementptr i16, i16* %348, i64 %432
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !59
  %438 = getelementptr i16, i16* %435, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !59
  %441 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !62, !noalias !59
  %442 = getelementptr i16, i16* %434, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !62, !noalias !59
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !65

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %369, %447 ]
  %451 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %371, %447 ]
  %453 = add i64 %451, -1
  %454 = and i64 %451, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i16* [ %463, %456 ], [ %450, %449 ]
  %458 = phi i64 [ %462, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %464, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %459, align 2
  store i16 %461, i16* %457, align 2
  %462 = add i64 %458, -1
  %463 = getelementptr inbounds i16, i16* %457, i64 1
  %464 = getelementptr inbounds i16, i16* %459, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !66

467:                                              ; preds = %456, %449
  %468 = phi i16* [ %450, %449 ], [ %463, %456 ]
  %469 = phi i64 [ %451, %449 ], [ %462, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %464, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i16* [ %499, %472 ], [ %468, %467 ]
  %474 = phi i64 [ %498, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %500, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %473, align 2
  %477 = getelementptr inbounds i16, i16* %473, i64 1
  %478 = getelementptr inbounds i16, i16* %475, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %473, i64 2
  %481 = getelementptr inbounds i16, i16* %475, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %473, i64 3
  %484 = getelementptr inbounds i16, i16* %475, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %473, i64 4
  %487 = getelementptr inbounds i16, i16* %475, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %473, i64 5
  %490 = getelementptr inbounds i16, i16* %475, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %473, i64 6
  %493 = getelementptr inbounds i16, i16* %475, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %473, i64 7
  %496 = getelementptr inbounds i16, i16* %475, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %474, -8
  %499 = getelementptr inbounds i16, i16* %473, i64 8
  %500 = getelementptr inbounds i16, i16* %475, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !67

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #15
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = getelementptr i16, i16* %42, i64 %55
  %57 = sub i64 %4, %55
  %58 = getelementptr i16, i16* %24, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %42, i64 %67
  %70 = getelementptr i16, i16* %24, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !68
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !68
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !71, !noalias !68
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !71, !noalias !68
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %42, i64 %79
  %81 = getelementptr i16, i16* %24, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !68
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !68
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !71, !noalias !68
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !71, !noalias !68
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %42, i64 %90
  %92 = getelementptr i16, i16* %24, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !68
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !68
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !71, !noalias !68
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !71, !noalias !68
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %42, i64 %101
  %103 = getelementptr i16, i16* %24, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !68
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !68
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !71, !noalias !68
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !71, !noalias !68
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !73

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %42, i64 %119
  %122 = getelementptr i16, i16* %24, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !68
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !68
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !71, !noalias !68
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !71, !noalias !68
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !74

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %56, %134 ]
  %138 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !75

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !76

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = getelementptr i16, i16* %192, i64 %195
  %197 = sub i64 %6, %195
  %198 = getelementptr i16, i16* %7, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %192, i64 %207
  %210 = getelementptr i16, i16* %7, i64 %207
  %211 = bitcast i16* %210 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %210, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %209, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %192, i64 %219
  %221 = getelementptr i16, i16* %7, i64 %219
  %222 = bitcast i16* %221 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %221, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %220, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %192, i64 %230
  %232 = getelementptr i16, i16* %7, i64 %230
  %233 = bitcast i16* %232 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %232, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %231, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %192, i64 %241
  %243 = getelementptr i16, i16* %7, i64 %241
  %244 = bitcast i16* %243 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %243, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %242, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !77

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %192, i64 %259
  %262 = getelementptr i16, i16* %7, i64 %259
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %262, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %261, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !78

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i16* [ %192, %191 ], [ %196, %274 ]
  %278 = phi i64 [ %6, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %7, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i16* [ %286, %280 ], [ %277, %276 ]
  %282 = phi i64 [ %285, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %287, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %281, align 2
  %285 = add i64 %282, -1
  %286 = getelementptr inbounds i16, i16* %281, i64 1
  %287 = getelementptr inbounds i16, i16* %283, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !79

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = getelementptr i16, i16* %295, i64 %314
  %316 = sub i64 %291, %314
  %317 = getelementptr i16, i16* %297, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %295, i64 %326
  %329 = getelementptr i16, i16* %297, i64 %326
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !81
  %332 = getelementptr i16, i16* %329, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !81
  %335 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !84, !noalias !81
  %336 = getelementptr i16, i16* %328, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !84, !noalias !81
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %295, i64 %338
  %340 = getelementptr i16, i16* %297, i64 %338
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !81
  %343 = getelementptr i16, i16* %340, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !81
  %346 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !84, !noalias !81
  %347 = getelementptr i16, i16* %339, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !84, !noalias !81
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %295, i64 %349
  %351 = getelementptr i16, i16* %297, i64 %349
  %352 = bitcast i16* %351 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !81
  %354 = getelementptr i16, i16* %351, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !81
  %357 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !84, !noalias !81
  %358 = getelementptr i16, i16* %350, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !84, !noalias !81
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %295, i64 %360
  %362 = getelementptr i16, i16* %297, i64 %360
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !81
  %365 = getelementptr i16, i16* %362, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !81
  %368 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !84, !noalias !81
  %369 = getelementptr i16, i16* %361, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !84, !noalias !81
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !86

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %295, i64 %378
  %381 = getelementptr i16, i16* %297, i64 %378
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !81
  %384 = getelementptr i16, i16* %381, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !81
  %387 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !84, !noalias !81
  %388 = getelementptr i16, i16* %380, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !84, !noalias !81
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !87

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %315, %393 ]
  %397 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %317, %393 ]
  %399 = add i64 %397, -1
  %400 = and i64 %397, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i16* [ %409, %402 ], [ %396, %395 ]
  %404 = phi i64 [ %408, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %410, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %405, align 2
  store i16 %407, i16* %403, align 2
  %408 = add i64 %404, -1
  %409 = getelementptr inbounds i16, i16* %403, i64 1
  %410 = getelementptr inbounds i16, i16* %405, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !88

413:                                              ; preds = %402, %395
  %414 = phi i16* [ %396, %395 ], [ %409, %402 ]
  %415 = phi i64 [ %397, %395 ], [ %408, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %410, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i16* [ %445, %418 ], [ %414, %413 ]
  %420 = phi i64 [ %444, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %446, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %421, align 2
  store i16 %422, i16* %419, align 2
  %423 = getelementptr inbounds i16, i16* %419, i64 1
  %424 = getelementptr inbounds i16, i16* %421, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %419, i64 2
  %427 = getelementptr inbounds i16, i16* %421, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %419, i64 3
  %430 = getelementptr inbounds i16, i16* %421, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %419, i64 4
  %433 = getelementptr inbounds i16, i16* %421, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %419, i64 5
  %436 = getelementptr inbounds i16, i16* %421, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %419, i64 6
  %439 = getelementptr inbounds i16, i16* %421, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %419, i64 7
  %442 = getelementptr inbounds i16, i16* %421, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %420, -8
  %445 = getelementptr inbounds i16, i16* %419, i64 8
  %446 = getelementptr inbounds i16, i16* %421, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !89

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare { %"class.v8_inspector::StackFrame"*, %"class.std::__1::__shared_weak_count"* } @_ZN12v8_inspector10V8Debugger9symbolizeEN2v85LocalINS1_10StackFrameEEE(%"class.v8_inspector::V8Debugger"*, %"class.v8::StackFrame"*) local_unnamed_addr #2

declare %"class.v8::StackFrame"* @_ZNK2v810StackTrace8GetFrameEPNS_7IsolateEj(%"class.v8::StackTrace"*, %"class.v8::Isolate"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #7

declare { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* } @_ZN12v8_inspector10V8Debugger18currentAsyncParentEv(%"class.v8_inspector::V8Debugger"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector10V8Debugger21currentExternalParentEv(%"struct.v8_inspector::V8StackTraceId"* sret, %"class.v8_inspector::V8Debugger"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime10StackTrace14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::StackTrace"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #13
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #15
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !90
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !90
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !93, !noalias !90
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !93, !noalias !90
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !90
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !90
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !93, !noalias !90
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !93, !noalias !90
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !90
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !90
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !93, !noalias !90
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !93, !noalias !90
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !90
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !90
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !93, !noalias !90
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !93, !noalias !90
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !95

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !90
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !90
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !93, !noalias !90
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !93, !noalias !90
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !96

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !97

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !98

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTrace", %"class.v8_inspector::protocol::Runtime::StackTrace"* %0, i64 0, i32 2, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #13
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTrace", %"class.v8_inspector::protocol::Runtime::StackTrace"* %0, i64 0, i32 2, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTrace", %"class.v8_inspector::protocol::Runtime::StackTrace"* %0, i64 0, i32 2, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #14
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

declare void @_ZN12v8_inspector20stackTraceIdToStringEm(%"class.v8_inspector::String16"* sret, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime9CallFrameENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.402"*, %"class.std::__1::unique_ptr.50"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.402", %"class.std::__1::vector.402"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.50"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.402"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.402"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.402", %"class.std::__1::vector.402"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.50"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.50"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.50"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.50"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.50"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.50"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.50"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.402", %"class.std::__1::vector.402"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.50"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.50"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8_inspector::protocol::Runtime::CallFrame"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.50"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.50"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.50"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.50"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !99

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.50"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.50"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.50"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.50"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.50"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.50"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.50"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.50"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.50"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.50"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.50"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.50"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.50"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.50"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.50"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.50"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.50"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.50"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.50"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.50"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.50"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.50"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.50"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.50"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.50"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.50"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.50"*
  %138 = icmp eq %"class.std::__1::unique_ptr.50"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.50"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8_inspector::protocol::Runtime::CallFrame"*, %"class.v8_inspector::protocol::Runtime::CallFrame"** %142, align 8
  store %"class.v8_inspector::protocol::Runtime::CallFrame"* null, %"class.v8_inspector::protocol::Runtime::CallFrame"** %142, align 8
  %144 = icmp eq %"class.v8_inspector::protocol::Runtime::CallFrame"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8_inspector::protocol::Runtime::CallFrame"* %143 to void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)***
  %147 = load void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)**, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)** %147, i64 2
  %149 = load void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)*, void (%"class.v8_inspector::protocol::Runtime::CallFrame"*)** %148, align 8
  tail call void %149(%"class.v8_inspector::protocol::Runtime::CallFrame"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.50"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime12StackTraceId13setDebuggerIdERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::StackTraceId"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #13
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #15
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !100
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !100
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !103, !noalias !100
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !103, !noalias !100
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !100
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !100
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !103, !noalias !100
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !103, !noalias !100
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !100
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !100
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !103, !noalias !100
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !103, !noalias !100
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !100
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !100
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !103, !noalias !100
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !103, !noalias !100
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !105

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !100
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !100
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !103, !noalias !100
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !103, !noalias !100
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !106

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !107

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !108

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTraceId", %"class.v8_inspector::protocol::Runtime::StackTraceId"* %0, i64 0, i32 3, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #13
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTraceId", %"class.v8_inspector::protocol::Runtime::StackTraceId"* %0, i64 0, i32 3, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::StackTraceId", %"class.v8_inspector::protocol::Runtime::StackTraceId"* %0, i64 0, i32 3, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #14
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %24 = select i1 %8, i16* %22, i16* %23
  %25 = add i64 %20, %12
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %3
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #15
  unreachable

29:                                               ; preds = %3
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = trunc i64 %12 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  store i8 %32, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %49

36:                                               ; preds = %29
  %37 = add nuw nsw i64 %25, 8
  %38 = and i64 %37, -8
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @abort() #15
  unreachable

41:                                               ; preds = %36
  %42 = shl i64 %38, 1
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to i16*
  %45 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %43, i8** %45, align 8
  %46 = or i64 %38, -9223372036854775808
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %48, align 8
  br label %49

49:                                               ; preds = %41, %31
  %50 = phi i16* [ %35, %31 ], [ %44, %41 ]
  %51 = icmp eq i64 %12, 0
  br i1 %51, label %197, label %52

52:                                               ; preds = %49
  %53 = icmp ult i64 %12, 16
  br i1 %53, label %142, label %54

54:                                               ; preds = %52
  %55 = getelementptr i16, i16* %50, i64 %12
  %56 = getelementptr i16, i16* %24, i64 %12
  %57 = icmp ult i16* %50, %56
  %58 = icmp ult i16* %24, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %54
  %61 = and i64 %12, -16
  %62 = getelementptr i16, i16* %50, i64 %61
  %63 = sub i64 %12, %61
  %64 = getelementptr i16, i16* %24, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %50, i64 %73
  %76 = getelementptr i16, i16* %24, i64 %73
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !109
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !109
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !112, !noalias !109
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !112, !noalias !109
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %50, i64 %85
  %87 = getelementptr i16, i16* %24, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !109
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !109
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !112, !noalias !109
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !112, !noalias !109
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %50, i64 %96
  %98 = getelementptr i16, i16* %24, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !109
  %101 = getelementptr i16, i16* %98, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !109
  %104 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !112, !noalias !109
  %105 = getelementptr i16, i16* %97, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !112, !noalias !109
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %50, i64 %107
  %109 = getelementptr i16, i16* %24, i64 %107
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !109
  %112 = getelementptr i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !109
  %115 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !112, !noalias !109
  %116 = getelementptr i16, i16* %108, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !112, !noalias !109
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !114

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %50, i64 %125
  %128 = getelementptr i16, i16* %24, i64 %125
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !109
  %131 = getelementptr i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !109
  %134 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !112, !noalias !109
  %135 = getelementptr i16, i16* %127, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !112, !noalias !109
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !115

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %12, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %54, %52
  %143 = phi i16* [ %50, %54 ], [ %50, %52 ], [ %62, %140 ]
  %144 = phi i64 [ %12, %54 ], [ %12, %52 ], [ %63, %140 ]
  %145 = phi i16* [ %24, %54 ], [ %24, %52 ], [ %64, %140 ]
  %146 = add i64 %144, -1
  %147 = and i64 %144, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i16* [ %156, %149 ], [ %143, %142 ]
  %151 = phi i64 [ %155, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %157, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %152, align 2
  store i16 %154, i16* %150, align 2
  %155 = add i64 %151, -1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = getelementptr inbounds i16, i16* %152, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !116

160:                                              ; preds = %149, %142
  %161 = phi i16* [ %143, %142 ], [ %156, %149 ]
  %162 = phi i64 [ %144, %142 ], [ %155, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %157, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i16* [ %192, %165 ], [ %161, %160 ]
  %167 = phi i64 [ %191, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %193, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %168, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = getelementptr inbounds i16, i16* %168, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = getelementptr inbounds i16, i16* %168, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = getelementptr inbounds i16, i16* %168, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = getelementptr inbounds i16, i16* %168, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = getelementptr inbounds i16, i16* %168, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = getelementptr inbounds i16, i16* %168, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %167, -8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = getelementptr inbounds i16, i16* %168, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !117

195:                                              ; preds = %160, %165, %140
  %196 = load i8, i8* %14, align 1
  br label %197

197:                                              ; preds = %195, %49
  %198 = phi i8 [ %196, %195 ], [ %15, %49 ]
  %199 = getelementptr inbounds i16, i16* %50, i64 %12
  store i16 0, i16* %199, align 2
  %200 = icmp slt i8 %198, 0
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i16*, i16** %201, align 8
  %203 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %204 = select i1 %200, i16* %202, i16* %203
  %205 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %205, i64 0, i32 1, i32 1
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %216

209:                                              ; preds = %197
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  br label %218

216:                                              ; preds = %197
  %217 = zext i8 %207 to i64
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i64 [ %213, %209 ], [ 10, %216 ]
  %220 = phi i64 [ %215, %209 ], [ %217, %216 ]
  %221 = sub i64 %219, %220
  %222 = icmp ult i64 %221, %20
  br i1 %222, label %384, label %223

223:                                              ; preds = %218
  %224 = icmp eq i64 %20, 0
  br i1 %224, label %387, label %225

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i16*, i16** %226, align 8
  %228 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %229 = select i1 %208, i16* %227, i16* %228
  %230 = getelementptr inbounds i16, i16* %229, i64 %220
  %231 = icmp ult i64 %20, 16
  br i1 %231, label %321, label %232

232:                                              ; preds = %225
  %233 = add i64 %20, %220
  %234 = getelementptr i16, i16* %229, i64 %233
  %235 = getelementptr i16, i16* %204, i64 %20
  %236 = icmp ult i16* %230, %235
  %237 = icmp ult i16* %204, %234
  %238 = and i1 %236, %237
  br i1 %238, label %321, label %239

239:                                              ; preds = %232
  %240 = and i64 %20, -16
  %241 = getelementptr i16, i16* %230, i64 %240
  %242 = sub i64 %20, %240
  %243 = getelementptr i16, i16* %204, i64 %240
  %244 = add i64 %240, -16
  %245 = lshr exact i64 %244, 4
  %246 = add nuw nsw i64 %245, 1
  %247 = and i64 %246, 3
  %248 = icmp ult i64 %244, 48
  br i1 %248, label %300, label %249

249:                                              ; preds = %239
  %250 = sub nsw i64 %246, %247
  br label %251

251:                                              ; preds = %251, %249
  %252 = phi i64 [ 0, %249 ], [ %297, %251 ]
  %253 = phi i64 [ %250, %249 ], [ %298, %251 ]
  %254 = getelementptr i16, i16* %230, i64 %252
  %255 = getelementptr i16, i16* %204, i64 %252
  %256 = bitcast i16* %255 to <8 x i16>*
  %257 = load <8 x i16>, <8 x i16>* %256, align 2, !alias.scope !118
  %258 = getelementptr i16, i16* %255, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !118
  %261 = bitcast i16* %254 to <8 x i16>*
  store <8 x i16> %257, <8 x i16>* %261, align 2, !alias.scope !121, !noalias !118
  %262 = getelementptr i16, i16* %254, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %263, align 2, !alias.scope !121, !noalias !118
  %264 = or i64 %252, 16
  %265 = getelementptr i16, i16* %230, i64 %264
  %266 = getelementptr i16, i16* %204, i64 %264
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !118
  %269 = getelementptr i16, i16* %266, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !118
  %272 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %272, align 2, !alias.scope !121, !noalias !118
  %273 = getelementptr i16, i16* %265, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %274, align 2, !alias.scope !121, !noalias !118
  %275 = or i64 %252, 32
  %276 = getelementptr i16, i16* %230, i64 %275
  %277 = getelementptr i16, i16* %204, i64 %275
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !118
  %280 = getelementptr i16, i16* %277, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !118
  %283 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %283, align 2, !alias.scope !121, !noalias !118
  %284 = getelementptr i16, i16* %276, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %285, align 2, !alias.scope !121, !noalias !118
  %286 = or i64 %252, 48
  %287 = getelementptr i16, i16* %230, i64 %286
  %288 = getelementptr i16, i16* %204, i64 %286
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !118
  %291 = getelementptr i16, i16* %288, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !118
  %294 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %294, align 2, !alias.scope !121, !noalias !118
  %295 = getelementptr i16, i16* %287, i64 8
  %296 = bitcast i16* %295 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %296, align 2, !alias.scope !121, !noalias !118
  %297 = add i64 %252, 64
  %298 = add i64 %253, -4
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %251, !llvm.loop !123

300:                                              ; preds = %251, %239
  %301 = phi i64 [ 0, %239 ], [ %297, %251 ]
  %302 = icmp eq i64 %247, 0
  br i1 %302, label %319, label %303

303:                                              ; preds = %300, %303
  %304 = phi i64 [ %316, %303 ], [ %301, %300 ]
  %305 = phi i64 [ %317, %303 ], [ %247, %300 ]
  %306 = getelementptr i16, i16* %230, i64 %304
  %307 = getelementptr i16, i16* %204, i64 %304
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !118
  %310 = getelementptr i16, i16* %307, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !118
  %313 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %313, align 2, !alias.scope !121, !noalias !118
  %314 = getelementptr i16, i16* %306, i64 8
  %315 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %315, align 2, !alias.scope !121, !noalias !118
  %316 = add i64 %304, 16
  %317 = add i64 %305, -1
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %303, !llvm.loop !124

319:                                              ; preds = %303, %300
  %320 = icmp eq i64 %20, %240
  br i1 %320, label %374, label %321

321:                                              ; preds = %319, %232, %225
  %322 = phi i16* [ %230, %232 ], [ %230, %225 ], [ %241, %319 ]
  %323 = phi i64 [ %20, %232 ], [ %20, %225 ], [ %242, %319 ]
  %324 = phi i16* [ %204, %232 ], [ %204, %225 ], [ %243, %319 ]
  %325 = add i64 %323, -1
  %326 = and i64 %323, 7
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %339, label %328

328:                                              ; preds = %321, %328
  %329 = phi i16* [ %335, %328 ], [ %322, %321 ]
  %330 = phi i64 [ %334, %328 ], [ %323, %321 ]
  %331 = phi i16* [ %336, %328 ], [ %324, %321 ]
  %332 = phi i64 [ %337, %328 ], [ %326, %321 ]
  %333 = load i16, i16* %331, align 2
  store i16 %333, i16* %329, align 2
  %334 = add i64 %330, -1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = getelementptr inbounds i16, i16* %331, i64 1
  %337 = add i64 %332, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %328, !llvm.loop !125

339:                                              ; preds = %328, %321
  %340 = phi i16* [ %322, %321 ], [ %335, %328 ]
  %341 = phi i64 [ %323, %321 ], [ %334, %328 ]
  %342 = phi i16* [ %324, %321 ], [ %336, %328 ]
  %343 = icmp ult i64 %325, 7
  br i1 %343, label %374, label %344

344:                                              ; preds = %339, %344
  %345 = phi i16* [ %371, %344 ], [ %340, %339 ]
  %346 = phi i64 [ %370, %344 ], [ %341, %339 ]
  %347 = phi i16* [ %372, %344 ], [ %342, %339 ]
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %345, align 2
  %349 = getelementptr inbounds i16, i16* %345, i64 1
  %350 = getelementptr inbounds i16, i16* %347, i64 1
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %345, i64 2
  %353 = getelementptr inbounds i16, i16* %347, i64 2
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %345, i64 3
  %356 = getelementptr inbounds i16, i16* %347, i64 3
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %345, i64 4
  %359 = getelementptr inbounds i16, i16* %347, i64 4
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %345, i64 5
  %362 = getelementptr inbounds i16, i16* %347, i64 5
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %345, i64 6
  %365 = getelementptr inbounds i16, i16* %347, i64 6
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %345, i64 7
  %368 = getelementptr inbounds i16, i16* %347, i64 7
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = add i64 %346, -8
  %371 = getelementptr inbounds i16, i16* %345, i64 8
  %372 = getelementptr inbounds i16, i16* %347, i64 8
  %373 = icmp eq i64 %370, 0
  br i1 %373, label %374, label %344, !llvm.loop !126

374:                                              ; preds = %339, %344, %319
  %375 = add i64 %220, %20
  %376 = load i8, i8* %206, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %375, i64* %379, align 8
  br label %382

380:                                              ; preds = %374
  %381 = trunc i64 %375 to i8
  store i8 %381, i8* %206, align 1
  br label %382

382:                                              ; preds = %380, %378
  %383 = getelementptr inbounds i16, i16* %229, i64 %375
  store i16 0, i16* %383, align 2
  br label %387

384:                                              ; preds = %218
  %385 = add i64 %220, %20
  %386 = sub i64 %385, %219
  tail call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %0, i64 %219, i64 %386, i64 %220, i64 %220, i64 0, i64 %20, i16* %204) #13
  br label %387

387:                                              ; preds = %223, %382, %384
  ret void
}

; Function Attrs: nounwind
declare %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #13
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8_inspector::AsyncStackTrace"*, %"class.v8_inspector::AsyncStackTrace"** %2, align 8
  %4 = icmp eq %"class.v8_inspector::AsyncStackTrace"* %3, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %3, i64 0, i32 5, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %7) #13
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %3, i64 0, i32 4
  %12 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %12, align 8
  %14 = icmp eq %"class.std::__1::shared_ptr"* %13, null
  br i1 %14, label %43, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::shared_ptr"* %13 to i8*
  %17 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %3, i64 0, i32 4, i32 0, i32 1
  %18 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %17, align 8
  %19 = icmp eq %"class.std::__1::shared_ptr"* %18, %13
  br i1 %19, label %41, label %20

20:                                               ; preds = %15, %36
  %21 = phi %"class.std::__1::shared_ptr"* [ %22, %36 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %21, i64 -1
  %23 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %21, i64 -1, i32 1
  %24 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %23, align 8
  %25 = icmp eq %"class.std::__1::__shared_weak_count"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0, i32 1
  %28 = atomicrmw add i64* %27, i64 -1 acq_rel
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0
  %32 = bitcast %"class.std::__1::__shared_weak_count"* %24 to void (%"class.std::__1::__shared_count"*)***
  %33 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %33, i64 2
  %35 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %34, align 8
  tail call void %35(%"class.std::__1::__shared_count"* %31) #13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %24) #13
  br label %36

36:                                               ; preds = %30, %26, %20
  %37 = icmp eq %"class.std::__1::shared_ptr"* %22, %13
  br i1 %37, label %38, label %20

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector.64"* %11 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %15
  %42 = phi i8* [ %40, %38 ], [ %16, %15 ]
  store %"class.std::__1::shared_ptr"* %13, %"class.std::__1::shared_ptr"** %17, align 8
  tail call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %41, %10
  %44 = getelementptr inbounds %"class.v8_inspector::AsyncStackTrace", %"class.v8_inspector::AsyncStackTrace"* %3, i64 0, i32 3
  %45 = bitcast %"class.v8_inspector::String16"* %44 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = bitcast %"class.v8_inspector::String16"* %44 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %43, %49
  %53 = bitcast %"class.v8_inspector::AsyncStackTrace"* %3 to i8*
  tail call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %1, %52
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN12v8_inspector15AsyncStackTraceENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNKSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE6substrEmm: argument 0"}
!5 = distinct !{!5, !"_ZNKSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE6substrEmm"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !12}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN12v8_inspectorplEPKcRKNS_8String16E: argument 0"}
!28 = distinct !{!28, !"_ZN12v8_inspectorplEPKcRKNS_8String16E"}
!29 = !{!30, !27}
!30 = distinct !{!30, !31, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!31 = distinct !{!31, !"_ZNK12v8_inspector8String16plERKS0_"}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !12}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !12}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !12}
!47 = distinct !{!47, !14}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !12}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !12}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14}
!58 = distinct !{!58, !12}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !12}
!65 = distinct !{!65, !14}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !12}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !12}
!74 = distinct !{!74, !14}
!75 = distinct !{!75, !14}
!76 = distinct !{!76, !12}
!77 = distinct !{!77, !12}
!78 = distinct !{!78, !14}
!79 = distinct !{!79, !80, !12}
!80 = !{!"llvm.loop.unroll.runtime.disable"}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !12}
!87 = distinct !{!87, !14}
!88 = distinct !{!88, !14}
!89 = distinct !{!89, !12}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !12}
!96 = distinct !{!96, !14}
!97 = distinct !{!97, !14}
!98 = distinct !{!98, !12}
!99 = distinct !{!99, !14}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !12}
!106 = distinct !{!106, !14}
!107 = distinct !{!107, !14}
!108 = distinct !{!108, !12}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !12}
!115 = distinct !{!115, !14}
!116 = distinct !{!116, !14}
!117 = distinct !{!117, !12}
!118 = !{!119}
!119 = distinct !{!119, !120}
!120 = distinct !{!120, !"LVerDomain"}
!121 = !{!122}
!122 = distinct !{!122, !120}
!123 = distinct !{!123, !12}
!124 = distinct !{!124, !14}
!125 = distinct !{!125, !14}
!126 = distinct !{!126, !12}
