; ModuleID = '../../third_party/blink/renderer/platform/exported/web_text_input_info.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_text_input_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WebTextInputInfo" = type { i32, i32, i32, %"class.blink::WebString", i32, i32, i32, i32, i32, i32, i32, %"class.blink::WebVector" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*, %"class.std::__1::__compressed_pair.8" }
%"struct.ui::ImeTextSpan" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.ui::ImeTextSpan"* }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16WebTextInputInfo6EqualsERKS0_(%"struct.blink::WebTextInputInfo"*, %"struct.blink::WebTextInputInfo"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %60

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 3
  %17 = tail call zeroext i1 @_ZNK5blink9WebString6EqualsERKS0_(%"class.blink::WebString"* %15, %"class.blink::WebString"* dereferenceable(8) %16) #2
  br i1 %17, label %18, label %60

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %60

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %60

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %60

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 6
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %60

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %60

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 8
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %0, i64 0, i32 9
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.blink::WebTextInputInfo", %"struct.blink::WebTextInputInfo"* %1, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  br label %60

60:                                               ; preds = %54, %48, %42, %36, %30, %24, %18, %14, %8, %2
  %61 = phi i1 [ false, %48 ], [ false, %42 ], [ false, %36 ], [ false, %30 ], [ false, %24 ], [ false, %18 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %59, %54 ]
  ret i1 %61
}

declare zeroext i1 @_ZNK5blink9WebString6EqualsERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
