; ModuleID = '../../cc/tiles/image_decode_cache_utils.cc'
source_filename = "../../cc/tiles/image_decode_cache_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp.6, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp.6 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc21ImageDecodeCacheUtils42ScaleToHalfFloatPixmapUsingN32IntermediateERK8SkPixmapPS1_15SkFilterQuality(%class.SkPixmap* dereferenceable(40), %class.SkPixmap*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPixmap, align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = alloca %struct.SkSamplingOptions, align 4
  %10 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #5
  %11 = bitcast %class.SkPixmap* %0 to i8*
  %12 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2
  %13 = bitcast %struct.SkImageInfo* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false) #5
  %14 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %17 = icmp eq %class.SkColorSpace* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %3, %18
  store %class.SkColorSpace* %16, %class.SkColorSpace** %14, align 8
  %22 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 1
  %23 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast i32* %22 to i64*
  %25 = bitcast i32* %23 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = bitcast i32* %22 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  %28 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %28) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #5
  %29 = load i32, i32* %23, align 8
  %30 = icmp eq i32 %29, 13
  br i1 %30, label %31, label %112

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 1
  %33 = bitcast %struct.SkISize* %32 to i64*
  %34 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #5
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %37 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  %38 = load i64, i64* %33, align 8, !noalias !2
  %39 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 2
  %40 = load i32, i32* %39, align 4, !noalias !5
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8, !noalias !8
  %42 = icmp eq %class.SkColorSpace* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic, !noalias !8
  br label %46

46:                                               ; preds = %31, %43
  %47 = ptrtoint %class.SkColorSpace* %41 to i64
  %48 = zext i32 %40 to i64
  %49 = shl nuw i64 %48, 32
  %50 = or i64 %49, 6
  %51 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %47, i64* %51, align 8, !alias.scope !11
  %52 = bitcast i32* %36 to i64*
  store i64 %50, i64* %52, align 8, !alias.scope !11
  %53 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %54 = bitcast %struct.SkISize* %53 to i64*
  store i64 %38, i64* %54, align 8, !alias.scope !11
  %55 = shl i64 %38, 32
  %56 = ashr exact i64 %55, 32
  %57 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0
  %58 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %57) #5
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %56, %59
  %61 = icmp ult i64 %60, 2147483648
  %62 = select i1 %61, i64 %60, i64 0
  %63 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %5, %struct.SkImageInfo* nonnull dereferenceable(24) %6, i64 %62) #5
  br i1 %63, label %64, label %102

64:                                               ; preds = %46
  %65 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1
  %66 = bitcast %class.SkPixmap* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %66, i64 16, i1 false) #5
  %67 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %68 = load %class.SkColorSpace*, %class.SkColorSpace** %67, align 8
  %69 = icmp eq %class.SkColorSpace* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 1 monotonic
  br label %73

73:                                               ; preds = %70, %64
  %74 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  store %class.SkColorSpace* %68, %class.SkColorSpace** %14, align 8
  %75 = icmp eq %class.SkColorSpace* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast %class.SkColorSpace* %74 to i8*
  call void @_ZdlPv(i8* %81) #6
  br label %82

82:                                               ; preds = %73, %76, %80
  %83 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 2, i32 0, i32 1
  %84 = bitcast i32* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8
  %86 = bitcast i32* %22 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %86, align 8
  %87 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2
  %88 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = call zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap* %0, %struct.SkImageInfo* dereferenceable(24) %87, i8* %89, i64 %91, i32 0, i32 0) #5
  %93 = load %class.SkColorSpace*, %class.SkColorSpace** %35, align 8
  %94 = icmp eq %class.SkColorSpace* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %82
  %96 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  %100 = bitcast %class.SkColorSpace* %93 to i8*
  call void @_ZdlPv(i8* %100) #6
  br label %101

101:                                              ; preds = %82, %95, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #5
  br label %112

102:                                              ; preds = %46
  %103 = load %class.SkColorSpace*, %class.SkColorSpace** %35, align 8
  %104 = icmp eq %class.SkColorSpace* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 -1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = bitcast %class.SkColorSpace* %103 to i8*
  call void @_ZdlPv(i8* %110) #6
  br label %111

111:                                              ; preds = %102, %105, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #5
  br label %161

112:                                              ; preds = %101, %21
  %113 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %113) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #5
  %114 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #5
  %115 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %117 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 0
  %118 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false)
  %119 = load i32, i32* %117, align 4
  %120 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = shl nuw i64 %122, 32
  %124 = zext i32 %119 to i64
  %125 = or i64 %123, %124
  %126 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8, !noalias !14
  %127 = icmp eq %class.SkColorSpace* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %112
  %129 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 1 monotonic, !noalias !14
  br label %131

131:                                              ; preds = %112, %128
  store %class.SkColorSpace* %126, %class.SkColorSpace** %115, align 8, !alias.scope !14
  %132 = bitcast i32* %116 to i64*
  %133 = load i64, i64* %24, align 8, !noalias !14
  store i64 %133, i64* %132, align 8, !alias.scope !14
  %134 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %135 = bitcast %struct.SkISize* %134 to i64*
  store i64 %125, i64* %135, align 8, !alias.scope !14
  %136 = sext i32 %119 to i64
  %137 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0
  %138 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %137) #5
  %139 = sext i32 %138 to i64
  %140 = mul nsw i64 %139, %136
  %141 = icmp ult i64 %140, 2147483648
  %142 = select i1 %141, i64 %140, i64 0
  %143 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %7, %struct.SkImageInfo* nonnull dereferenceable(24) %8, i64 %142) #5
  br i1 %143, label %144, label %150

144:                                              ; preds = %131
  %145 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1
  %146 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %146) #5
  call void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* nonnull sret %9, i32 %2) #5
  %147 = call zeroext i1 @_ZNK8SkPixmap11scalePixelsERKS_RK17SkSamplingOptions(%class.SkPixmap* nonnull %4, %class.SkPixmap* dereferenceable(40) %145, %struct.SkSamplingOptions* nonnull dereferenceable(20) %9) #5
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %146) #5
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  %149 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap* nonnull %7, %class.SkPixmap* dereferenceable(40) %1, i32 0, i32 0) #5
  br label %150

150:                                              ; preds = %144, %131, %148
  %151 = phi i1 [ %149, %148 ], [ false, %131 ], [ false, %144 ]
  %152 = load %class.SkColorSpace*, %class.SkColorSpace** %115, align 8
  %153 = icmp eq %class.SkColorSpace* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 -1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %160

158:                                              ; preds = %154
  %159 = bitcast %class.SkColorSpace* %152 to i8*
  call void @_ZdlPv(i8* %159) #6
  br label %160

160:                                              ; preds = %150, %154, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #5
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %113) #5
  br label %161

161:                                              ; preds = %111, %160
  %162 = phi i1 [ %151, %160 ], [ false, %111 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %28) #5
  %163 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %164 = icmp eq %class.SkColorSpace* %163, null
  br i1 %164, label %171, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = bitcast %class.SkColorSpace* %163 to i8*
  call void @_ZdlPv(i8* %170) #6
  br label %171

171:                                              ; preds = %161, %165, %169
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #5
  ret i1 %162
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK8SkPixmap11scalePixelsERKS_RK17SkSamplingOptions(%class.SkPixmap*, %class.SkPixmap* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20)) local_unnamed_addr #2

declare void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* sret, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!8 = !{!9, !6, !3}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!11 = !{!12, !3}
!12 = distinct !{!12, !13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!13 = distinct !{!13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!17 = distinct !{!17, !18, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!18 = distinct !{!18, !"_ZNK11SkImageInfo6makeWHEii"}
