; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_fragment_items_builder.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_fragment_items_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGFragmentItemsBuilder" = type <{ %"class.WTF::Vector.1631", %"class.WTF::String", %"class.WTF::String", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"*, %"class.WTF::HashMap.1909", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineNode", %"class.blink::WritingDirectionMode", i8, i8, i8, [3 x i8] }>
%"class.WTF::Vector.1631" = type { %"class.WTF::VectorBuffer.1632" }
%"class.WTF::VectorBuffer.1632" = type { %"class.WTF::VectorBufferBase.1633", [9216 x i8] }
%"class.WTF::VectorBufferBase.1633" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.1634, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2160 }
%class.scoped_refptr.2160 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2161", %"class.WTF::Vector.630", %"class.WTF::Vector.2163", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2161" = type { %"class.base::RefCounted.2162" }
%"class.base::RefCounted.2162" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2163" = type { %"class.WTF::VectorBuffer.2164" }
%"class.WTF::VectorBuffer.2164" = type { %"class.WTF::VectorBufferBase.2165" }
%"class.WTF::VectorBufferBase.2165" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2166 }
%union.anon.2166 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2151" }
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2153" }
%"class.blink::Member.2153" = type { %"class.blink::MemberBase.2154" }
%"class.blink::MemberBase.2154" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2174 }
%class.scoped_refptr.2174 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2184" }
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2180" }
%"class.blink::MemberBase.2180" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2175", %"class.WTF::Vector.2175" }
%"class.WTF::Vector.2175" = type { %"class.WTF::VectorBuffer.2176" }
%"class.WTF::VectorBuffer.2176" = type { %"class.WTF::VectorBufferBase.2177" }
%"class.WTF::VectorBufferBase.2177" = type { %class.scoped_refptr.2174*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2155" }
%"class.WTF::Vector.2155" = type { %"class.WTF::VectorBuffer.2156" }
%"class.WTF::VectorBuffer.2156" = type { %"class.WTF::VectorBufferBase.2157" }
%"class.WTF::VectorBufferBase.2157" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1662", %"class.absl::optional.1662", %"class.absl::optional.1662" }
%"class.absl::optional.1662" = type { %"class.absl::optional_internal::optional_data.1663" }
%"class.absl::optional_internal::optional_data.1663" = type { %"class.absl::optional_internal::optional_data_base.1664" }
%"class.absl::optional_internal::optional_data_base.1664" = type { %"class.absl::optional_internal::optional_data_dtor_base.1665" }
%"class.absl::optional_internal::optional_data_dtor_base.1665" = type { i8, %union.anon.1666 }
%union.anon.1666 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2170" }
%"class.WTF::VectorBuffer.2170" = type { %"class.WTF::VectorBufferBase.2171", [32 x i8] }
%"class.WTF::VectorBufferBase.2171" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%union.anon.1634 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.1635, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.1635 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.1636", %class.scoped_refptr.1638, i32, i32, i32, i32, float, i32, [0 x %struct.anon.1639] }
%"class.WTF::RefCounted.1636" = type { %"class.base::RefCounted.1637" }
%"class.base::RefCounted.1637" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1638 = type { %"class.blink::SimpleFontData"* }
%struct.anon.1639 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGInkOverflow" = type { %union.anon.1881 }
%union.anon.1881 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1647", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1649, %"class.std::__1::unique_ptr.1868" }
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1649 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1650", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1650" = type { %"class.base::RefCounted.1651" }
%"class.base::RefCounted.1651" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1652, %"class.WTF::Vector.1825", %"class.std::__1::unique_ptr.1830", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1851, %"class.blink::Persistent.1852" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1652 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1653", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1800, %union.anon.1801, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1653" = type { %"class.base::RefCounted.1654" }
%"class.base::RefCounted.1654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1655, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1655 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1656 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1656 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1691", [4 x i8], %"class.std::__1::unique_ptr.1693", i64, %"class.WTF::Vector.1697", %"class.WTF::Vector.1702", %"class.WTF::Vector.1708", %"class.WTF::Vector.1726", %class.scoped_refptr.1546, %"class.WTF::HashMap.1732", %"class.WTF::Vector.1737", %"class.WTF::Vector.1697", %"class.WTF::Vector.1742", %"class.WTF::HashMap.1747", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1691" = type { %"class.base::RefCountedThreadSafe.1692" }
%"class.base::RefCountedThreadSafe.1692" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1693" = type { %"class.std::__1::__compressed_pair.1694" }
%"class.std::__1::__compressed_pair.1694" = type { %"struct.std::__1::__compressed_pair_elem.1695" }
%"struct.std::__1::__compressed_pair_elem.1695" = type { i8* }
%"class.WTF::Vector.1702" = type { %"class.WTF::VectorBuffer.1703" }
%"class.WTF::VectorBuffer.1703" = type { %"class.WTF::VectorBufferBase.1704", [8 x i8] }
%"class.WTF::VectorBufferBase.1704" = type { %class.scoped_refptr.1705*, i32, i32 }
%class.scoped_refptr.1705 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1708" = type { %"class.WTF::VectorBuffer.1709" }
%"class.WTF::VectorBuffer.1709" = type { %"class.WTF::VectorBufferBase.1710" }
%"class.WTF::VectorBufferBase.1710" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1712", %"class.std::__1::unique_ptr.1718" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1711 }
%class.scoped_refptr.1711 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1726" = type { %"class.WTF::VectorBuffer.1727" }
%"class.WTF::VectorBuffer.1727" = type { %"class.WTF::VectorBufferBase.1728" }
%"class.WTF::VectorBufferBase.1728" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1729", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1729" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1732" = type { %"class.WTF::HashTable.1733" }
%"class.WTF::HashTable.1733" = type <{ %"struct.WTF::KeyValuePair.1736"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1736" = type opaque
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1697" = type { %"class.WTF::VectorBuffer.1698" }
%"class.WTF::VectorBuffer.1698" = type { %"class.WTF::VectorBufferBase.1699", [16 x i8] }
%"class.WTF::VectorBufferBase.1699" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1742" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744" }
%"class.WTF::VectorBufferBase.1744" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"struct.WTF::KeyValuePair.1751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1751" = type { i8**, %"class.std::__1::unique_ptr.2186" }
%"class.std::__1::unique_ptr.2186" = type { %"class.std::__1::__compressed_pair.2187" }
%"class.std::__1::__compressed_pair.2187" = type { %"struct.std::__1::__compressed_pair_elem.2188" }
%"struct.std::__1::__compressed_pair_elem.2188" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1752" }
%"class.std::__1::unique_ptr.1752" = type { %"class.std::__1::__compressed_pair.1753" }
%"class.std::__1::__compressed_pair.1753" = type { %"struct.std::__1::__compressed_pair_elem.1754" }
%"struct.std::__1::__compressed_pair_elem.1754" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1755, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1772" }
%class.scoped_refptr.1755 = type { %"class.base::RefCountedData.1756"* }
%"class.base::RefCountedData.1756" = type { %"class.base::RefCountedThreadSafe.1757", %"class.WTF::Vector.1758" }
%"class.base::RefCountedThreadSafe.1757" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1758" = type { %"class.WTF::VectorBuffer.1759" }
%"class.WTF::VectorBuffer.1759" = type { %"class.WTF::VectorBufferBase.1760" }
%"class.WTF::VectorBufferBase.1760" = type { %class.scoped_refptr.1761*, i32, i32 }
%class.scoped_refptr.1761 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1762", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1764" }
%"class.WTF::RefCounted.1762" = type { %"class.base::RefCounted.1763" }
%"class.base::RefCounted.1763" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1764" = type { %"class.std::__1::__compressed_pair.1765" }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1775", %"class.WTF::Vector.1788", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777", [320 x i8] }
%"class.WTF::VectorBufferBase.1777" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1778", %"class.WTF::Vector.1778", %class.scoped_refptr.1783, i8, [7 x i8] }>
%"class.WTF::Vector.1778" = type { %"class.WTF::VectorBuffer.1779" }
%"class.WTF::VectorBuffer.1779" = type { %"class.WTF::VectorBufferBase.1780", [8 x i8] }
%"class.WTF::VectorBufferBase.1780" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1783 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1784", %"class.WTF::Vector.1758", %"class.WTF::Vector.1758" }
%"class.WTF::RefCounted.1784" = type { %"class.base::RefCounted.1785" }
%"class.base::RefCounted.1785" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790", [288 x i8] }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1778", %"class.WTF::Vector.1778" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1791 }
%class.scoped_refptr.1791 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1800 = type { %"class.blink::NGPhysicalFragment"* }
%union.anon.1801 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1657", %class.scoped_refptr.1802, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1803, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1690, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1804", %"class.absl::optional.1820" }
%"class.absl::optional.1657" = type { %"class.absl::optional_internal::optional_data.1658" }
%"class.absl::optional_internal::optional_data.1658" = type { %"class.absl::optional_internal::optional_data_base.1659" }
%"class.absl::optional_internal::optional_data_base.1659" = type { %"class.absl::optional_internal::optional_data_dtor_base.1660" }
%"class.absl::optional_internal::optional_data_dtor_base.1660" = type { i8, %union.anon.1661 }
%union.anon.1661 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1802 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1914", [4 x i8], %union.anon.1916, %class.scoped_refptr.1802, i32, [4 x i8] }>
%"class.WTF::RefCounted.1914" = type { %"class.base::RefCounted.1915" }
%"class.base::RefCounted.1915" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1916 = type { %"class.blink::LayoutBox"* }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1803 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1804" = type { %"class.std::__1::__compressed_pair.1805" }
%"class.std::__1::__compressed_pair.1805" = type { %"struct.std::__1::__compressed_pair_elem.1806" }
%"struct.std::__1::__compressed_pair_elem.1806" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1807", %"class.WTF::Vector.1812", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1807" = type { %"class.WTF::VectorBuffer.1808" }
%"class.WTF::VectorBuffer.1808" = type { %"class.WTF::VectorBufferBase.1809" }
%"class.WTF::VectorBufferBase.1809" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1812" = type { %"class.WTF::VectorBuffer.1813" }
%"class.WTF::VectorBuffer.1813" = type { %"class.WTF::VectorBufferBase.1814" }
%"class.WTF::VectorBufferBase.1814" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1820" = type { %"class.absl::optional_internal::optional_data.1821" }
%"class.absl::optional_internal::optional_data.1821" = type { %"class.absl::optional_internal::optional_data_base.1822" }
%"class.absl::optional_internal::optional_data_base.1822" = type { %"class.absl::optional_internal::optional_data_dtor_base.1823" }
%"class.absl::optional_internal::optional_data_dtor_base.1823" = type { i8, %union.anon.1824 }
%union.anon.1824 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1825" = type { %"class.WTF::VectorBuffer.1826" }
%"class.WTF::VectorBuffer.1826" = type { %"class.WTF::VectorBufferBase.1827", [8 x i8] }
%"class.WTF::VectorBufferBase.1827" = type { %class.scoped_refptr.1652*, i32, i32 }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1833", %"class.absl::optional.1838", %"class.absl::optional.1843" }
%"class.absl::optional.1833" = type { %"class.absl::optional_internal::optional_data.1834" }
%"class.absl::optional_internal::optional_data.1834" = type { %"class.absl::optional_internal::optional_data_base.1835" }
%"class.absl::optional_internal::optional_data_base.1835" = type { %"class.absl::optional_internal::optional_data_dtor_base.1836" }
%"class.absl::optional_internal::optional_data_dtor_base.1836" = type { i8, %union.anon.1837 }
%union.anon.1837 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1838" = type { %"class.absl::optional_internal::optional_data.1839" }
%"class.absl::optional_internal::optional_data.1839" = type { %"class.absl::optional_internal::optional_data_base.1840" }
%"class.absl::optional_internal::optional_data_base.1840" = type { %"class.absl::optional_internal::optional_data_dtor_base.1841" }
%"class.absl::optional_internal::optional_data_dtor_base.1841" = type { i8, [3 x i8], %union.anon.1842 }
%union.anon.1842 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1843" = type { %"class.absl::optional_internal::optional_data.1844" }
%"class.absl::optional_internal::optional_data.1844" = type { %"class.absl::optional_internal::optional_data_base.1845" }
%"class.absl::optional_internal::optional_data_base.1845" = type { %"class.absl::optional_internal::optional_data_dtor_base.1846" }
%"class.absl::optional_internal::optional_data_dtor_base.1846" = type { i8, %union.anon.1847 }
%union.anon.1847 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1851 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1852" = type { %"class.blink::PersistentBase.1853" }
%"class.blink::PersistentBase.1853" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1856", %"struct.blink::PhysicalRect", %"class.blink::Member.1866" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1856" = type { %"class.std::__1::__compressed_pair.1857" }
%"class.std::__1::__compressed_pair.1857" = type { %"struct.std::__1::__compressed_pair_elem.1858" }
%"struct.std::__1::__compressed_pair_elem.1858" = type { %"class.WTF::HashSet.1859"* }
%"class.WTF::HashSet.1859" = type { %"class.WTF::HashTable.1860" }
%"class.WTF::HashTable.1860" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.std::__1::unique_ptr.1868" = type { %"class.std::__1::__compressed_pair.1869" }
%"class.std::__1::__compressed_pair.1869" = type { %"struct.std::__1::__compressed_pair_elem.1870" }
%"struct.std::__1::__compressed_pair_elem.1870" = type { %"class.WTF::Vector.1871"* }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873" }
%"class.WTF::VectorBufferBase.1873" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1874 }
%union.anon.1874 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.WTF::HashMap.1909" = type { %"class.WTF::HashTable.1910" }
%"class.WTF::HashTable.1910" = type <{ %"struct.WTF::KeyValuePair.1913"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1913" = type { %"class.blink::NGPhysicalFragment"*, %"class.blink::NGLogicalLineItems"* }
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.1884" }
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886", [1920 x i8] }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1652, %"class.blink::NGInlineItem"*, %class.scoped_refptr.1635, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1887, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1887 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1888", float, %"class.blink::FloatRect", %"class.WTF::Vector.1890", %class.scoped_refptr.1638, %"class.std::__1::unique_ptr.1896", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1888" = type { %"class.base::RefCounted.1889" }
%"class.base::RefCounted.1889" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1890" = type { %"class.WTF::VectorBuffer.1891" }
%"class.WTF::VectorBuffer.1891" = type { %"class.WTF::VectorBufferBase.1892" }
%"class.WTF::VectorBufferBase.1892" = type { %class.scoped_refptr.1893*, i32, i32 }
%class.scoped_refptr.1893 = type opaque
%"class.std::__1::unique_ptr.1896" = type { %"class.std::__1::__compressed_pair.1897" }
%"class.std::__1::__compressed_pair.1897" = type { %"struct.std::__1::__compressed_pair_elem.1898" }
%"struct.std::__1::__compressed_pair_elem.1898" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1899", i32, float }
%"class.WTF::Vector.1899" = type { %"class.WTF::VectorBuffer.1900" }
%"class.WTF::VectorBuffer.1900" = type { %"class.WTF::VectorBufferBase.1901" }
%"class.WTF::VectorBufferBase.1901" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1969", %"class.std::__1::unique_ptr.1973" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1969" = type { %"class.blink::PersistentBase.1970" }
%"class.blink::PersistentBase.1970" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1937", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1937" = type { %"class.std::__1::__compressed_pair.1938" }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.1939" }
%"struct.std::__1::__compressed_pair_elem.1939" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1940", %"class.WTF::HashMap.1945", %"class.WTF::String" }
%"class.WTF::Vector.1940" = type { %"class.WTF::VectorBuffer.1941" }
%"class.WTF::VectorBuffer.1941" = type { %"class.WTF::VectorBufferBase.1942" }
%"class.WTF::VectorBufferBase.1942" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1945" = type { %"class.WTF::HashTable.1946" }
%"class.WTF::HashTable.1946" = type <{ %"struct.WTF::KeyValuePair.1949"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1949" = type opaque
%"class.std::__1::unique_ptr.1973" = type { %"class.std::__1::__compressed_pair.1974" }
%"class.std::__1::__compressed_pair.1974" = type { %"struct.std::__1::__compressed_pair_elem.1975" }
%"struct.std::__1::__compressed_pair_elem.1975" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1976", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1976" = type { %"class.WTF::HashTable.1979", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1979" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1982", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1982" = type { %"class.std::__1::__compressed_pair.1983" }
%"class.std::__1::__compressed_pair.1983" = type { %"struct.std::__1::__compressed_pair_elem.1984" }
%"struct.std::__1::__compressed_pair_elem.1984" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1985, %"class.std::__1::unique_ptr.1986", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1985 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2116", i16, %class.scoped_refptr.1985 }
%"class.WTF::ThreadSafeRefCounted.2116" = type { %"class.base::RefCountedThreadSafe.2117" }
%"class.base::RefCountedThreadSafe.2117" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1986" = type { %"class.std::__1::__compressed_pair.1987" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.1988" }
%"struct.std::__1::__compressed_pair_elem.1988" = type { %"class.WTF::Vector.1989"* }
%"class.WTF::Vector.1989" = type { %"class.WTF::VectorBuffer.1990" }
%"class.WTF::VectorBuffer.1990" = type { %"class.WTF::VectorBufferBase.1991" }
%"class.WTF::VectorBufferBase.1991" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2000, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.2000 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.2007", %"class.std::__1::unique_ptr.2013", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1917", %"class.std::__1::unique_ptr.1922", %"class.std::__1::unique_ptr.1937" }
%"class.WTF::Vector.1917" = type { %"class.WTF::VectorBuffer.1918" }
%"class.WTF::VectorBuffer.1918" = type { %"class.WTF::VectorBufferBase.1919" }
%"class.WTF::VectorBufferBase.1919" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.std::__1::unique_ptr.1922" = type { %"class.std::__1::__compressed_pair.1923" }
%"class.std::__1::__compressed_pair.1923" = type { %"struct.std::__1::__compressed_pair_elem.1924" }
%"struct.std::__1::__compressed_pair_elem.1924" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1925", %"class.WTF::Vector.1930" }
%"class.WTF::Vector.1925" = type { %"class.WTF::VectorBuffer.1926" }
%"class.WTF::VectorBuffer.1926" = type { %"class.WTF::VectorBufferBase.1927" }
%"class.WTF::VectorBufferBase.1927" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1930" = type { %"class.WTF::VectorBuffer.1931" }
%"class.WTF::VectorBuffer.1931" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.2013" = type { %"class.std::__1::__compressed_pair.2014" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.2015" }
%"struct.std::__1::__compressed_pair_elem.2015" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.2016", %"class.WTF::Vector.2022", %"class.WTF::Vector.2022", %"class.WTF::HashMap.2027" }
%"class.WTF::Vector.2016" = type { %"class.WTF::VectorBuffer.2017" }
%"class.WTF::VectorBuffer.2017" = type { %"class.WTF::VectorBufferBase.2018" }
%"class.WTF::VectorBufferBase.2018" = type { %"struct.std::__1::pair.2019"*, i32, i32 }
%"struct.std::__1::pair.2019" = type opaque
%"class.WTF::Vector.2022" = type { %"class.WTF::VectorBuffer.2023" }
%"class.WTF::VectorBuffer.2023" = type { %"class.WTF::VectorBufferBase.2024" }
%"class.WTF::VectorBufferBase.2024" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.2027" = type { %"class.WTF::HashTable.2028" }
%"class.WTF::HashTable.2028" = type <{ %"struct.WTF::KeyValuePair.2031"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2031" = type opaque
%"class.blink::NGPhysicalLineBoxFragment" = type { %"class.blink::NGPhysicalFragment", %"struct.blink::FontHeight" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult" = type <{ %"class.blink::NGInlineBreakToken"*, %"class.blink::LayoutUnit", i32, i8, [7 x i8] }>
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1650", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGBoxFragmentBuilder" = type { %"class.blink::NGContainerFragmentBuilder.base", %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.absl::optional.1957", %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGBlockNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.2049", i32, %"class.absl::optional.1657", %"class.absl::optional.1657", %"class.absl::optional.2054", %"class.absl::optional.2059", %class.scoped_refptr.2069, %"class.std::__1::unique_ptr.2087", %"class.absl::optional.2098", %"class.absl::optional.2098", %"class.std::__1::unique_ptr.2103", %"struct.blink::LogicalBoxSides", %class.scoped_refptr.1690, %"class.absl::optional.1662", %"class.std::__1::unique_ptr.2109", %"class.absl::optional.1820", %class.scoped_refptr.2115 }
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1657", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1954", %"class.WTF::Vector.1954", %"class.WTF::Vector.1954", %"class.WTF::HashMap.1964", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2038", %"class.WTF::Vector.2043", %class.scoped_refptr.2048, %class.scoped_refptr.1802, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1953, i8, i8 }>
%class.scoped_refptr.1953 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.1957", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1800 }
%"class.WTF::HashMap.1964" = type { %"class.WTF::HashTable.1965" }
%"class.WTF::HashTable.1965" = type <{ %"struct.WTF::KeyValuePair.1968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1968" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.2004" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.std::__1::unique_ptr.2004" = type { %"class.std::__1::__compressed_pair.2005" }
%"class.std::__1::__compressed_pair.2005" = type { %"struct.std::__1::__compressed_pair_elem.2006" }
%"struct.std::__1::__compressed_pair_elem.2006" = type { %"struct.blink::NGInlineNodeData"* }
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.2038" = type { %"class.WTF::VectorBuffer.2039" }
%"class.WTF::VectorBuffer.2039" = type { %"class.WTF::VectorBufferBase.2040", [64 x i8] }
%"class.WTF::VectorBufferBase.2040" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1800 }
%"class.WTF::Vector.2043" = type { %"class.WTF::VectorBuffer.2044" }
%"class.WTF::VectorBuffer.2044" = type { %"class.WTF::VectorBufferBase.2045" }
%"class.WTF::VectorBufferBase.2045" = type { %class.scoped_refptr.1649*, i32, i32 }
%class.scoped_refptr.2048 = type { %"class.blink::NGInlineBreakToken"* }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.absl::optional.1957" = type { %"class.absl::optional_internal::optional_data.1958" }
%"class.absl::optional_internal::optional_data.1958" = type { %"class.absl::optional_internal::optional_data_base.1959" }
%"class.absl::optional_internal::optional_data_base.1959" = type { %"class.absl::optional_internal::optional_data_dtor_base.1960" }
%"class.absl::optional_internal::optional_data_dtor_base.1960" = type { i8, %union.anon.1961 }
%union.anon.1961 = type { %"struct.blink::LogicalRect" }
%"class.absl::optional.2049" = type { %"class.absl::optional_internal::optional_data.2050" }
%"class.absl::optional_internal::optional_data.2050" = type { %"class.absl::optional_internal::optional_data_base.2051" }
%"class.absl::optional_internal::optional_data_base.2051" = type { %"class.absl::optional_internal::optional_data_dtor_base.2052" }
%"class.absl::optional_internal::optional_data_dtor_base.2052" = type { i8, %union.anon.2053 }
%union.anon.2053 = type { i32 }
%"class.absl::optional.2054" = type { %"class.absl::optional_internal::optional_data.2055" }
%"class.absl::optional_internal::optional_data.2055" = type { %"class.absl::optional_internal::optional_data_base.2056" }
%"class.absl::optional_internal::optional_data_base.2056" = type { %"class.absl::optional_internal::optional_data_dtor_base.2057" }
%"class.absl::optional_internal::optional_data_dtor_base.2057" = type { i8, %union.anon.2058 }
%union.anon.2058 = type { %"struct.blink::PhysicalRect" }
%"class.absl::optional.2059" = type { %"class.absl::optional_internal::optional_data.2060" }
%"class.absl::optional_internal::optional_data.2060" = type { %"class.absl::optional_internal::optional_data_base.2061" }
%"class.absl::optional_internal::optional_data_base.2061" = type { %"class.absl::optional_internal::optional_data_dtor_base.2062" }
%"class.absl::optional_internal::optional_data_dtor_base.2062" = type { i8, %union.anon.2063 }
%union.anon.2063 = type { %"class.WTF::Vector.2064" }
%"class.WTF::Vector.2064" = type { %"class.WTF::VectorBuffer.2065" }
%"class.WTF::VectorBuffer.2065" = type { %"class.WTF::VectorBufferBase.2066" }
%"class.WTF::VectorBufferBase.2066" = type { %"struct.blink::NGTableFragmentData::ColumnGeometry"*, i32, i32 }
%"struct.blink::NGTableFragmentData::ColumnGeometry" = type { i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGLayoutInputNode" }
%class.scoped_refptr.2069 = type { %"class.blink::NGTableBorders"* }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.2070", [4 x i8], %"class.WTF::Vector.2072", %"class.WTF::Vector.2077", i32, %"class.absl::optional.2082", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.2070" = type { %"class.base::RefCounted.2071" }
%"class.base::RefCounted.2071" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2072" = type { %"class.WTF::VectorBuffer.2073" }
%"class.WTF::VectorBuffer.2073" = type { %"class.WTF::VectorBufferBase.2074" }
%"class.WTF::VectorBufferBase.2074" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.2077" = type { %"class.WTF::VectorBuffer.2078" }
%"class.WTF::VectorBuffer.2078" = type { %"class.WTF::VectorBufferBase.2079" }
%"class.WTF::VectorBufferBase.2079" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.2082" = type { %"class.absl::optional_internal::optional_data.2083" }
%"class.absl::optional_internal::optional_data.2083" = type { %"class.absl::optional_internal::optional_data_base.2084" }
%"class.absl::optional_internal::optional_data_base.2084" = type { %"class.absl::optional_internal::optional_data_dtor_base.2085" }
%"class.absl::optional_internal::optional_data_dtor_base.2085" = type { i8, %union.anon.2086 }
%union.anon.2086 = type { %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.2087" = type { %"class.std::__1::__compressed_pair.2088" }
%"class.std::__1::__compressed_pair.2088" = type { %"struct.std::__1::__compressed_pair_elem.2089" }
%"struct.std::__1::__compressed_pair_elem.2089" = type { %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* }
%"struct.blink::NGTableFragmentData::CollapsedBordersGeometry" = type { %"class.WTF::Vector.2090", %"class.WTF::Vector.2090" }
%"class.WTF::Vector.2090" = type { %"class.WTF::VectorBuffer.2091" }
%"class.WTF::VectorBuffer.2091" = type { %"class.WTF::VectorBufferBase.2092" }
%"class.WTF::VectorBufferBase.2092" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.absl::optional.2098" = type { %"class.absl::optional_internal::optional_data.2099" }
%"class.absl::optional_internal::optional_data.2099" = type { %"class.absl::optional_internal::optional_data_base.2100" }
%"class.absl::optional_internal::optional_data_base.2100" = type { %"class.absl::optional_internal::optional_data_dtor_base.2101" }
%"class.absl::optional_internal::optional_data_dtor_base.2101" = type { i8, %union.anon.2102 }
%union.anon.2102 = type { i32 }
%"class.std::__1::unique_ptr.2103" = type { %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { %"struct.blink::NGGridData"* }
%"struct.blink::LogicalBoxSides" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2109" = type { %"class.std::__1::__compressed_pair.2110" }
%"class.std::__1::__compressed_pair.2110" = type { %"struct.std::__1::__compressed_pair_elem.2111" }
%"struct.std::__1::__compressed_pair_elem.2111" = type { %"struct.blink::NGMathMLPaintInfo"* }
%"struct.blink::NGMathMLPaintInfo" = type <{ i16, [6 x i8], %class.scoped_refptr.1635, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", %"class.absl::optional.1657", [4 x i8] }>
%class.scoped_refptr.2115 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.absl::optional.2118" = type { %"class.absl::optional_internal::optional_data.2119" }
%"class.absl::optional_internal::optional_data.2119" = type { %"class.absl::optional_internal::optional_data_base.2120" }
%"class.absl::optional_internal::optional_data_base.2120" = type { %"class.absl::optional_internal::optional_data_dtor_base.2121" }
%"class.absl::optional_internal::optional_data_dtor_base.2121" = type { i8, %union.anon.2122 }
%union.anon.2122 = type { %"struct.blink::LogicalOffset" }
%"class.blink::NGSvgTextLayoutAlgorithm" = type { %"class.blink::NGInlineNode", i32, i8, %"class.WTF::Vector.2123", %"class.WTF::Vector.2128" }
%"class.WTF::Vector.2123" = type { %"class.WTF::VectorBuffer.2124" }
%"class.WTF::VectorBuffer.2124" = type { %"class.WTF::VectorBufferBase.2125" }
%"class.WTF::VectorBufferBase.2125" = type { %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo"*, i32, i32 }
%"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", i8, i8, i8, i8, i8, float, float, float, i32 }
%"class.WTF::Vector.2128" = type { %"class.WTF::VectorBuffer.2129" }
%"class.WTF::VectorBuffer.2129" = type { %"class.WTF::VectorBufferBase.2130" }
%"class.WTF::VectorBufferBase.2130" = type { %"class.blink::FloatPoint"*, i32, i32 }

$_ZN5blink17NGLogicalLineItemD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEmm = comdat any

$_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE2atEj = comdat any

@.str.1 = private unnamed_addr constant [84 x i8] c"../../third_party/blink/renderer/core/layout/ng/inline/ng_fragment_items_builder.cc\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"end_child_iter - child_begin <= child_end - child_begin\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGFragmentItemsBuilder::ItemWithOffset]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink18NGPhysicalFragmentEPNS2_18NGLogicalLineItemsEEEEEPKcv = private unnamed_addr constant [129 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::NGPhysicalFragment *, blink::NGLogicalLineItems *>]\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1

@_ZN5blink22NGFragmentItemsBuilderC1ENS_20WritingDirectionModeE = hidden unnamed_addr alias void (%"class.blink::NGFragmentItemsBuilder"*, i16), void (%"class.blink::NGFragmentItemsBuilder"*, i16)* @_ZN5blink22NGFragmentItemsBuilderC2ENS_20WritingDirectionModeE
@_ZN5blink22NGFragmentItemsBuilderC1ERKNS_12NGInlineNodeENS_20WritingDirectionModeE = hidden unnamed_addr alias void (%"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGInlineNode"*, i16), void (%"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGInlineNode"*, i16)* @_ZN5blink22NGFragmentItemsBuilderC2ERKNS_12NGInlineNodeENS_20WritingDirectionModeE
@_ZN5blink22NGFragmentItemsBuilderD1Ev = hidden unnamed_addr alias void (%"class.blink::NGFragmentItemsBuilder"*), void (%"class.blink::NGFragmentItemsBuilder"*)* @_ZN5blink22NGFragmentItemsBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilderC2ENS_20WritingDirectionModeE(%"class.blink::NGFragmentItemsBuilder"*, i16) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %4 = bitcast %"class.blink::NGFragmentItemsBuilder"* %0 to i8**
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 128, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = bitcast %"class.WTF::StringImpl"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 52, i1 false)
  %11 = bitcast %"class.blink::NGLogicalLineItems"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  %12 = load i8, i8* %9, align 8
  %13 = and i8 %12, -2
  store i8 %13, i8* %9, align 8
  %14 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 8
  %15 = bitcast %"class.blink::WritingDirectionMode"* %14 to i16*
  store i16 %1, i16* %15, align 8
  %16 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 9
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 10
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 11
  store i8 0, i8* %18, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilderC2ERKNS_12NGInlineNodeENS_20WritingDirectionModeE(%"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGInlineNode"* nocapture readonly dereferenceable(16), i16) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %5 = bitcast %"class.blink::NGFragmentItemsBuilder"* %0 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 128, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  store %"class.blink::NGLogicalLineItems"* null, %"class.blink::NGLogicalLineItems"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 7
  %14 = bitcast %"class.blink::NGInlineNode"* %13 to i8*
  %15 = bitcast %"class.blink::NGInlineNode"* %1 to i8*
  %16 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 52, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 8
  %18 = bitcast %"class.blink::WritingDirectionMode"* %17 to i16*
  store i16 %2, i16* %18, align 8
  %19 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 9
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 10
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 11
  store i8 0, i8* %21, align 4
  %22 = bitcast %"class.blink::NGInlineNode"* %1 to %"class.blink::LayoutBlockFlow"**
  %23 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %22, align 8
  %24 = bitcast %"class.blink::LayoutBlockFlow"* %23 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %25 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %24, align 8
  %26 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %25, i64 213
  %27 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %26, align 8
  %28 = tail call %"struct.blink::NGInlineNodeData"* %27(%"class.blink::LayoutBlockFlow"* %23) #12
  %29 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %3
  %51 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %52 = bitcast %"class.WTF::String"* %8 to i64*
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %51, i64* %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #12
  br label %68

68:                                               ; preds = %50, %64, %67
  %69 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %22, align 8
  %70 = bitcast %"class.blink::LayoutBlockFlow"* %69 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %71 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %70, align 8
  %72 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %71, i64 213
  %73 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %72, align 8
  %74 = tail call %"struct.blink::NGInlineNodeData"* %73(%"class.blink::LayoutBlockFlow"* %69) #12
  %75 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %75, align 8
  %77 = icmp eq %"struct.blink::NGInlineItemsData"* %76, null
  %78 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %74, i64 0, i32 0
  %79 = select i1 %77, %"struct.blink::NGInlineItemsData"* %78, %"struct.blink::NGInlineItemsData"* %76
  %80 = icmp eq %"struct.blink::NGInlineItemsData"* %29, %79
  br i1 %80, label %120, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %79, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %102, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %102

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #12
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  tail call void @llvm.trap() #12
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %102

102:                                              ; preds = %100, %85, %81
  %103 = ptrtoint %"class.WTF::StringImpl"* %83 to i64
  %104 = bitcast %"class.WTF::String"* %10 to i64*
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %103, i64* %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #12
  br label %120

120:                                              ; preds = %119, %116, %102, %68
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %141, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = udiv i32 %125, 40
  %127 = mul nuw nsw i32 %126, 3
  %128 = load i32, i32* %6, align 8
  %129 = shl i32 %128, 1
  %130 = icmp ugt i32 %127, %129
  %131 = icmp ugt i32 %127, 128
  %132 = and i1 %131, %130
  br i1 %132, label %133, label %141, !prof !3

133:                                              ; preds = %123
  %134 = zext i32 %127 to i64
  %135 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEmm(i64 %134) #12
  %136 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %135, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEPKcv, i64 0, i64 0)) #12
  %137 = ptrtoint i8* %136 to i64
  %138 = bitcast %"class.blink::NGFragmentItemsBuilder"* %0 to i64*
  store atomic i64 %137, i64* %138 monotonic, align 8
  %139 = udiv i64 %135, 72
  %140 = trunc i64 %139 to i32
  store i32 %140, i32* %6, align 8
  br label %141

141:                                              ; preds = %120, %133, %123
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilderD2Ev(%"class.blink::NGFragmentItemsBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  %3 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %2, align 8
  %4 = icmp eq %"class.blink::NGLogicalLineItems"* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  %7 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %6, align 8
  %8 = icmp eq %"class.blink::NGLogicalLineItems"* %3, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 11
  store i8 0, i8* %10, align 4
  br label %34

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %14, label %25, label %16, !prof !2

16:                                               ; preds = %11
  %17 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %15, align 8
  %18 = zext i32 %13 to i64
  %19 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %17, i64 %18
  br label %20

20:                                               ; preds = %20, %16
  %21 = phi %"struct.blink::NGLogicalLineItem"* [ %22, %20 ], [ %17, %16 ]
  tail call void @_ZN5blink17NGLogicalLineItemD2Ev(%"struct.blink::NGLogicalLineItem"* %21) #12
  %22 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %21, i64 1
  %23 = icmp eq %"struct.blink::NGLogicalLineItem"* %22, %19
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  store i32 0, i32* %12, align 4
  br label %25

25:                                               ; preds = %24, %11
  %26 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %15, align 8
  %27 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %28 = bitcast i8* %27 to %"struct.blink::NGLogicalLineItem"*
  %29 = icmp eq %"struct.blink::NGLogicalLineItem"* %26, %28
  br i1 %29, label %32, label %30, !prof !4

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1885"* %31, %"struct.blink::NGLogicalLineItem"* %26) #12
  br label %32

32:                                               ; preds = %30, %25
  %33 = bitcast %"class.blink::NGLogicalLineItems"* %3 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %32, %9
  store %"class.blink::NGLogicalLineItems"* null, %"class.blink::NGLogicalLineItems"** %2, align 8
  br label %35

35:                                               ; preds = %1, %34
  %36 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0, i32 0
  %40 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %40, i64 %43
  br i1 %38, label %61, label %45

45:                                               ; preds = %35
  %46 = icmp eq i32 %42, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %45, %51
  %48 = phi %"struct.WTF::KeyValuePair.1913"* [ %52, %51 ], [ %40, %45 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.1913"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  switch i64 %50, label %54 [
    i64 -1, label %51
    i64 0, label %51
  ]

51:                                               ; preds = %47, %47
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %48, i64 1
  %53 = icmp eq %"struct.WTF::KeyValuePair.1913"* %52, %44
  br i1 %53, label %61, label %47

54:                                               ; preds = %47, %45
  %55 = phi %"struct.WTF::KeyValuePair.1913"* [ %40, %45 ], [ %48, %47 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.1913"* %55, %44
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  br label %123

59:                                               ; preds = %154, %164, %161
  %60 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %39, align 8
  br label %61

61:                                               ; preds = %51, %35, %59, %54
  %62 = phi %"struct.WTF::KeyValuePair.1913"* [ %60, %59 ], [ %40, %54 ], [ %40, %35 ], [ %40, %51 ]
  %63 = icmp eq %"struct.WTF::KeyValuePair.1913"* %62, null
  br i1 %63, label %66, label %64, !prof !4

64:                                               ; preds = %61
  %65 = bitcast %"struct.WTF::KeyValuePair.1913"* %62 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #12
  store %"struct.WTF::KeyValuePair.1913"* null, %"struct.WTF::KeyValuePair.1913"** %39, align 8
  br label %66

66:                                               ; preds = %61, %64
  %67 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %83

83:                                               ; preds = %66, %79, %82
  %84 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 1, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #12
  br label %100

100:                                              ; preds = %83, %96, %99
  %101 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %103, label %115, label %105, !prof !2

105:                                              ; preds = %100
  %106 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %104, align 8
  %107 = zext i32 %102 to i64
  %108 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %106, i64 %107
  br label %109

109:                                              ; preds = %109, %105
  %110 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %112, %109 ], [ %106, %105 ]
  %111 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %110, i64 0, i32 0
  tail call void @_ZN5blink14NGFragmentItemD1Ev(%"class.blink::NGFragmentItem"* %111) #12
  %112 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %110, i64 1
  %113 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %112, %108
  br i1 %113, label %114, label %109

114:                                              ; preds = %109
  store i32 0, i32* %101, align 4
  br label %115

115:                                              ; preds = %114, %100
  %116 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %104, align 8
  %117 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %118 = bitcast i8* %117 to %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*
  %119 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %116, %118
  br i1 %119, label %122, label %120, !prof !4

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1632"* %121, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %116) #12
  br label %122

122:                                              ; preds = %115, %120
  store %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* null, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %104, align 8
  ret void

123:                                              ; preds = %57, %164
  %124 = phi %"struct.WTF::KeyValuePair.1913"* [ %55, %57 ], [ %158, %164 ]
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %124, i64 0, i32 1
  %126 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %125, align 8
  %127 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %58, align 8
  %128 = icmp eq %"class.blink::NGLogicalLineItems"* %126, %127
  %129 = icmp eq %"class.blink::NGLogicalLineItems"* %126, null
  %130 = or i1 %129, %128
  br i1 %130, label %154, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %126, i64 0, i32 0, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %134, label %145, label %136, !prof !2

136:                                              ; preds = %131
  %137 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %135, align 8
  %138 = zext i32 %133 to i64
  %139 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %137, i64 %138
  br label %140

140:                                              ; preds = %140, %136
  %141 = phi %"struct.blink::NGLogicalLineItem"* [ %142, %140 ], [ %137, %136 ]
  tail call void @_ZN5blink17NGLogicalLineItemD2Ev(%"struct.blink::NGLogicalLineItem"* %141) #12
  %142 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %141, i64 1
  %143 = icmp eq %"struct.blink::NGLogicalLineItem"* %142, %139
  br i1 %143, label %144, label %140

144:                                              ; preds = %140
  store i32 0, i32* %132, align 4
  br label %145

145:                                              ; preds = %144, %131
  %146 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %135, align 8
  %147 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %126, i64 0, i32 0, i32 0, i32 1, i64 0
  %148 = bitcast i8* %147 to %"struct.blink::NGLogicalLineItem"*
  %149 = icmp eq %"struct.blink::NGLogicalLineItem"* %146, %148
  br i1 %149, label %152, label %150, !prof !4

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %126, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1885"* %151, %"struct.blink::NGLogicalLineItem"* %146) #12
  br label %152

152:                                              ; preds = %145, %150
  %153 = bitcast %"class.blink::NGLogicalLineItems"* %126 to i8*
  tail call void @_ZdlPv(i8* %153) #13
  br label %154

154:                                              ; preds = %123, %152
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %124, i64 1
  %156 = icmp eq %"struct.WTF::KeyValuePair.1913"* %155, %44
  br i1 %156, label %59, label %157

157:                                              ; preds = %154, %161
  %158 = phi %"struct.WTF::KeyValuePair.1913"* [ %162, %161 ], [ %155, %154 ]
  %159 = bitcast %"struct.WTF::KeyValuePair.1913"* %158 to i64*
  %160 = load i64, i64* %159, align 8
  switch i64 %160, label %164 [
    i64 -1, label %161
    i64 0, label %161
  ]

161:                                              ; preds = %157, %157
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %158, i64 1
  %163 = icmp eq %"struct.WTF::KeyValuePair.1913"* %162, %44
  br i1 %163, label %59, label %157

164:                                              ; preds = %157
  %165 = icmp eq %"struct.WTF::KeyValuePair.1913"* %158, %44
  br i1 %165, label %59, label %123
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder30ReleaseCurrentLogicalLineItemsEv(%"class.blink::NGFragmentItemsBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  %3 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %2, align 8
  %4 = icmp eq %"class.blink::NGLogicalLineItems"* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  %7 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %6, align 8
  %8 = icmp eq %"class.blink::NGLogicalLineItems"* %3, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 11
  store i8 0, i8* %10, align 4
  br label %34

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %14, label %25, label %16, !prof !2

16:                                               ; preds = %11
  %17 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %15, align 8
  %18 = zext i32 %13 to i64
  %19 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %17, i64 %18
  br label %20

20:                                               ; preds = %20, %16
  %21 = phi %"struct.blink::NGLogicalLineItem"* [ %22, %20 ], [ %17, %16 ]
  tail call void @_ZN5blink17NGLogicalLineItemD2Ev(%"struct.blink::NGLogicalLineItem"* %21) #12
  %22 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %21, i64 1
  %23 = icmp eq %"struct.blink::NGLogicalLineItem"* %22, %19
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  store i32 0, i32* %12, align 4
  br label %25

25:                                               ; preds = %24, %11
  %26 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %15, align 8
  %27 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %28 = bitcast i8* %27 to %"struct.blink::NGLogicalLineItem"*
  %29 = icmp eq %"struct.blink::NGLogicalLineItem"* %26, %28
  br i1 %29, label %32, label %30, !prof !4

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1885"* %31, %"struct.blink::NGLogicalLineItem"* %26) #12
  br label %32

32:                                               ; preds = %25, %30
  %33 = bitcast %"class.blink::NGLogicalLineItems"* %3 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %32, %9
  store %"class.blink::NGLogicalLineItems"* null, %"class.blink::NGLogicalLineItems"** %2, align 8
  br label %35

35:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22NGFragmentItemsBuilder23AddLogicalLineItemsPoolEPNS_18NGLogicalLineItemsE(%"class.blink::NGFragmentItemsBuilder"* nocapture, %"class.blink::NGLogicalLineItems"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  store %"class.blink::NGLogicalLineItems"* %1, %"class.blink::NGLogicalLineItems"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder32MoveCurrentLogicalLineItemsToMapEv(%"class.blink::NGFragmentItemsBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  %3 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %2, align 8
  %4 = icmp eq %"class.blink::NGLogicalLineItems"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair.1913"*, i8 } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1910"* %7, %"class.blink::NGPhysicalFragment"** dereferenceable(8) %6, %"class.blink::NGLogicalLineItems"** dereferenceable(8) %2) #12
  %9 = bitcast %"class.blink::NGLogicalLineItems"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLogicalLineItems"* @_ZN5blink22NGFragmentItemsBuilder23AcquireLogicalLineItemsEv(%"class.blink::NGFragmentItemsBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  %3 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %2, align 8
  %4 = icmp eq %"class.blink::NGLogicalLineItems"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 4, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i8 1, i8* %6, align 4
  br label %30

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  %12 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %11, align 8
  %13 = icmp eq %"class.blink::NGLogicalLineItems"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0
  %17 = tail call { %"struct.WTF::KeyValuePair.1913"*, i8 } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1910"* %16, %"class.blink::NGPhysicalFragment"** dereferenceable(8) %15, %"class.blink::NGLogicalLineItems"** dereferenceable(8) %11) #12
  %18 = bitcast %"class.blink::NGLogicalLineItems"** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  br label %19

19:                                               ; preds = %10, %14
  %20 = tail call i8* @_Znwm(i64 1936) #13
  %21 = bitcast i8* %20 to %"class.blink::NGLogicalLineItems"*
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 1920, i1 false)
  %23 = getelementptr inbounds i8, i8* %20, i64 16
  %24 = bitcast i8* %20 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %20, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 16, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = bitcast %"class.blink::NGLogicalLineItems"** %11 to i8**
  store i8* %20, i8** %29, align 8
  br label %30

30:                                               ; preds = %19, %9
  %31 = phi %"class.blink::NGLogicalLineItems"* [ %21, %19 ], [ %3, %9 ]
  ret %"class.blink::NGLogicalLineItems"* %31
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22NGFragmentItemsBuilder25AssociateLogicalLineItemsEPNS_18NGLogicalLineItemsERKNS_18NGPhysicalFragmentE(%"class.blink::NGFragmentItemsBuilder"* nocapture, %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  store %"class.blink::NGLogicalLineItems"* %1, %"class.blink::NGLogicalLineItems"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 4
  store %"class.blink::NGPhysicalFragment"* %2, %"class.blink::NGPhysicalFragment"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder7AddLineERKNS_25NGPhysicalLineBoxFragmentERKNS_13LogicalOffsetE(%"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGPhysicalLineBoxFragment"* dereferenceable(56), %"struct.blink::LogicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NGPhysicalFragment"*, align 8
  %5 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 4
  %7 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %6, align 8
  %8 = icmp eq %"class.blink::NGPhysicalFragment"* %5, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %6, align 8
  %10 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  %11 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %10, align 8
  br label %60

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  %14 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %13, align 8
  %15 = icmp eq %"class.blink::NGLogicalLineItems"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0
  %18 = tail call { %"struct.WTF::KeyValuePair.1913"*, i8 } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1910"* %17, %"class.blink::NGPhysicalFragment"** dereferenceable(8) %6, %"class.blink::NGLogicalLineItems"** dereferenceable(8) %13) #12
  %19 = bitcast %"class.blink::NGLogicalLineItems"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #12
  br label %20

20:                                               ; preds = %12, %16
  %21 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5
  %22 = bitcast %"class.blink::NGPhysicalFragment"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store %"class.blink::NGPhysicalFragment"* %5, %"class.blink::NGPhysicalFragment"** %4, align 8
  %23 = getelementptr inbounds %"class.WTF::HashMap.1909", %"class.WTF::HashMap.1909"* %21, i64 0, i32 0
  %24 = call { %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"* } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.1910"* %23, %"class.blink::NGPhysicalFragment"** nonnull dereferenceable(8) %4) #12
  %25 = extractvalue { %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"* } %24, 0
  %26 = getelementptr inbounds %"class.WTF::HashMap.1909", %"class.WTF::HashMap.1909"* %21, i64 0, i32 0, i32 0
  %27 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %27, i64 %30
  %32 = icmp eq %"struct.WTF::KeyValuePair.1913"* %25, %31
  br i1 %32, label %58, label %33

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %25, i64 0, i32 1
  %35 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %34, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %25, i64 0, i32 0
  store %"class.blink::NGPhysicalFragment"* inttoptr (i64 -1 to %"class.blink::NGPhysicalFragment"*), %"class.blink::NGPhysicalFragment"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, 1
  %40 = and i32 %39, 2147483647
  %41 = and i32 %38, -2147483648
  %42 = or i32 %40, %41
  store i32 %42, i32* %37, align 8
  %43 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 5, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, -1
  store i32 %45, i32* %43, align 4
  %46 = mul i32 %45, 6
  %47 = load i32, i32* %28, align 8
  %48 = icmp ult i32 %46, %47
  %49 = icmp ugt i32 %47, 8
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %33
  %52 = lshr i32 %47, 1
  %53 = zext i32 %52 to i64
  %54 = shl nuw nsw i64 %53, 4
  %55 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink18NGPhysicalFragmentEPNS2_18NGLogicalLineItemsEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %55, i8 0, i64 %54, i1 false) #12
  %56 = bitcast i8* %55 to %"struct.WTF::KeyValuePair.1913"*
  %57 = call %"struct.WTF::KeyValuePair.1913"* @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.1910"* %23, %"struct.WTF::KeyValuePair.1913"* %56, i32 %52, %"struct.WTF::KeyValuePair.1913"* null) #12
  br label %58

58:                                               ; preds = %20, %33, %51
  %59 = phi %"class.blink::NGLogicalLineItems"* [ null, %20 ], [ %35, %33 ], [ %35, %51 ]
  store %"class.blink::NGLogicalLineItems"* %59, %"class.blink::NGLogicalLineItems"** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %60

60:                                               ; preds = %58, %9
  %61 = phi %"class.blink::NGLogicalLineItems"* [ %59, %58 ], [ %11, %9 ]
  %62 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 3
  %63 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0
  %64 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %61, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %65, 1
  %69 = add i32 %68, %67
  %70 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp ugt i32 %69, %71
  br i1 %72, label %73, label %100

73:                                               ; preds = %60
  %74 = shl i32 %71, 1
  %75 = icmp ult i32 %69, %74
  %76 = select i1 %75, i32 %74, i32 %69
  %77 = icmp ult i32 %71, %76
  br i1 %77, label %78, label %100, !prof !4

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %79, align 8
  %81 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %80, null
  br i1 %81, label %82, label %98

82:                                               ; preds = %78
  %83 = icmp ugt i32 %76, 128
  br i1 %83, label %84, label %92

84:                                               ; preds = %82
  %85 = zext i32 %76 to i64
  %86 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEmm(i64 %85) #12
  %87 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %86, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEPKcv, i64 0, i64 0)) #12
  %88 = ptrtoint i8* %87 to i64
  %89 = bitcast %"class.blink::NGFragmentItemsBuilder"* %0 to i64*
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = udiv i64 %86, 72
  %91 = trunc i64 %90 to i32
  br label %96

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %94 = ptrtoint i8* %93 to i64
  %95 = bitcast %"class.blink::NGFragmentItemsBuilder"* %0 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  br label %96

96:                                               ; preds = %92, %84
  %97 = phi i32 [ 128, %92 ], [ %91, %84 ]
  store i32 %97, i32* %70, align 8
  br label %100

98:                                               ; preds = %78
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1631"* %63, i32 %76) #12
  %99 = load i32, i32* %70, align 8
  br label %100

100:                                              ; preds = %98, %96, %73, %60
  %101 = phi i32 [ %99, %98 ], [ %97, %96 ], [ %71, %73 ], [ %71, %60 ]
  %102 = load i32, i32* %64, align 4
  %103 = icmp eq i32 %102, %101
  br i1 %103, label %104, label %107, !prof !2

104:                                              ; preds = %100
  %105 = add i32 %101, 1
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"* %63, i32 %105) #12
  %106 = load i32, i32* %64, align 4
  br label %107

107:                                              ; preds = %100, %104
  %108 = phi i32 [ %106, %104 ], [ %102, %100 ]
  %109 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %109, align 8
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %110, i64 %111, i32 0
  call void @_ZN5blink14NGFragmentItemC1ERKNS_25NGPhysicalLineBoxFragmentE(%"class.blink::NGFragmentItem"* %112, %"class.blink::NGPhysicalLineBoxFragment"* dereferenceable(56) %1) #12
  %113 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %110, i64 %111, i32 1
  %114 = bitcast %"struct.blink::LogicalOffset"* %2 to i64*
  %115 = bitcast %"struct.blink::LogicalOffset"* %113 to i64*
  %116 = load i64, i64* %114, align 4
  store i64 %116, i64* %115, align 8
  %117 = load i32, i32* %64, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %64, align 4
  %119 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %119, align 8
  %121 = load i32, i32* %66, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %120, i64 %122
  call void @_ZN5blink22NGFragmentItemsBuilder8AddItemsEPNS_17NGLogicalLineItemES2_(%"class.blink::NGFragmentItemsBuilder"* %0, %"struct.blink::NGLogicalLineItem"* %120, %"struct.blink::NGLogicalLineItem"* %123)
  %124 = call dereferenceable(72) %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %63, i32 %102) #12
  %125 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %124, i64 0, i32 0, i32 6
  %126 = load i16, i16* %125, align 8
  %127 = and i16 %126, 7
  %128 = zext i16 %127 to i32
  %129 = add nsw i32 %128, -3
  %130 = icmp ult i32 %129, 2
  br i1 %130, label %131, label %135

131:                                              ; preds = %107
  %132 = load i32, i32* %64, align 4
  %133 = sub i32 %132, %102
  %134 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %124, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %133, i32* %134, align 8
  br label %135

135:                                              ; preds = %107, %131
  %136 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %62, align 8
  %137 = icmp eq %"class.blink::NGLogicalLineItems"* %136, null
  br i1 %137, label %168, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 6
  %140 = load %"class.blink::NGLogicalLineItems"*, %"class.blink::NGLogicalLineItems"** %139, align 8
  %141 = icmp eq %"class.blink::NGLogicalLineItems"* %136, %140
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 11
  store i8 0, i8* %143, align 4
  br label %167

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %136, i64 0, i32 0, i32 0, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %136, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %147, label %158, label %149, !prof !2

149:                                              ; preds = %144
  %150 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %148, align 8
  %151 = zext i32 %146 to i64
  %152 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %150, i64 %151
  br label %153

153:                                              ; preds = %153, %149
  %154 = phi %"struct.blink::NGLogicalLineItem"* [ %155, %153 ], [ %150, %149 ]
  call void @_ZN5blink17NGLogicalLineItemD2Ev(%"struct.blink::NGLogicalLineItem"* %154) #12
  %155 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %154, i64 1
  %156 = icmp eq %"struct.blink::NGLogicalLineItem"* %155, %152
  br i1 %156, label %157, label %153

157:                                              ; preds = %153
  store i32 0, i32* %145, align 4
  br label %158

158:                                              ; preds = %157, %144
  %159 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %148, align 8
  %160 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %136, i64 0, i32 0, i32 0, i32 1, i64 0
  %161 = bitcast i8* %160 to %"struct.blink::NGLogicalLineItem"*
  %162 = icmp eq %"struct.blink::NGLogicalLineItem"* %159, %161
  br i1 %162, label %165, label %163, !prof !4

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %136, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1885"* %164, %"struct.blink::NGLogicalLineItem"* %159) #12
  br label %165

165:                                              ; preds = %163, %158
  %166 = bitcast %"class.blink::NGLogicalLineItems"* %136 to i8*
  call void @_ZdlPv(i8* %166) #13
  br label %167

167:                                              ; preds = %165, %142
  store %"class.blink::NGLogicalLineItems"* null, %"class.blink::NGLogicalLineItems"** %62, align 8
  br label %168

168:                                              ; preds = %135, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder8AddItemsEPNS_17NGLogicalLineItemES2_(%"class.blink::NGFragmentItemsBuilder"*, %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 8, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq %"struct.blink::NGLogicalLineItem"* %1, %2
  br i1 %9, label %24, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %17 = ptrtoint %"struct.blink::NGLogicalLineItem"* %1 to i64
  %18 = ptrtoint %"struct.blink::NGLogicalLineItem"* %2 to i64
  %19 = sub i64 %18, %17
  %20 = sdiv exact i64 %19, 120
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %23 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %25

24:                                               ; preds = %110, %3
  ret void

25:                                               ; preds = %10, %110
  %26 = phi %"struct.blink::NGLogicalLineItem"* [ %1, %10 ], [ %111, %110 ]
  %27 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 0, i32 1
  %28 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %27, align 8
  %29 = icmp eq %"class.blink::NGInlineItem"* %28, null
  br i1 %29, label %30, label %40

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 0, i32 0, i32 0
  %32 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %31, align 8
  %33 = icmp eq %"class.blink::NGLayoutResult"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 0, i32 5
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 1
  br label %110

40:                                               ; preds = %34, %25, %30
  %41 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 0, i32 15
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %64

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 0, i32 10, i32 0
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %13, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %52, !prof !2

49:                                               ; preds = %44
  %50 = add i32 %46, 1
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"* %11, i32 %50) #12
  %51 = load i32, i32* %12, align 4
  br label %52

52:                                               ; preds = %44, %49
  %53 = phi i32 [ %51, %49 ], [ %46, %44 ]
  %54 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %14, align 8
  %55 = zext i32 %53 to i64
  %56 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %54, i64 %55, i32 0
  call void @_ZN5blink14NGFragmentItemC1EONS_17NGLogicalLineItemENS_11WritingModeE(%"class.blink::NGFragmentItem"* %56, %"struct.blink::NGLogicalLineItem"* dereferenceable(120) %26, i8 zeroext %8) #12
  %57 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %54, i64 %55, i32 1
  %58 = bitcast %"struct.blink::LogicalOffset"* %45 to i64*
  %59 = bitcast %"struct.blink::LogicalOffset"* %57 to i64*
  %60 = load i64, i64* %58, align 4
  store i64 %60, i64* %59, align 8
  %61 = load i32, i32* %12, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %12, align 4
  %63 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 1
  br label %110

64:                                               ; preds = %40
  %65 = load i32, i32* %12, align 4
  %66 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 0, i32 10, i32 0
  %67 = load i32, i32* %13, align 8
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %72, !prof !2

69:                                               ; preds = %64
  %70 = add i32 %65, 1
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"* %11, i32 %70) #12
  %71 = load i32, i32* %12, align 4
  br label %72

72:                                               ; preds = %69, %64
  %73 = phi i32 [ %71, %69 ], [ %65, %64 ]
  %74 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %14, align 8
  %75 = zext i32 %73 to i64
  %76 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %74, i64 %75, i32 0
  call void @_ZN5blink14NGFragmentItemC1EONS_17NGLogicalLineItemENS_11WritingModeE(%"class.blink::NGFragmentItem"* %76, %"struct.blink::NGLogicalLineItem"* dereferenceable(120) %26, i8 zeroext %8) #12
  %77 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %74, i64 %75, i32 1
  %78 = bitcast %"struct.blink::LogicalOffset"* %66 to i64*
  %79 = bitcast %"struct.blink::LogicalOffset"* %77 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 8
  %81 = load i32, i32* %12, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %12, align 4
  %83 = zext i32 %42 to i64
  %84 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 %83
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %85 = ptrtoint %"struct.blink::NGLogicalLineItem"* %84 to i64
  %86 = sub i64 %85, %17
  %87 = sdiv exact i64 %86, 120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %88 = icmp sgt i64 %87, %20
  br i1 %88, label %90, label %89

89:                                               ; preds = %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %16, align 8
  br label %97

90:                                               ; preds = %72
  %91 = call i8* @_ZN7logging15CheckOpValueStrEl(i64 %87) #12
  %92 = call i8* @_ZN7logging15CheckOpValueStrEl(i64 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0), i8* %91, i8* %92) #12
  %93 = load i8*, i8** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %93, i8** %16, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1, i64 0, i64 0), i32 174, %"class.logging::CheckOpResult"* nonnull %5) #12
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %97

97:                                               ; preds = %89, %90, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %98 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %26, i64 1
  call void @_ZN5blink22NGFragmentItemsBuilder8AddItemsEPNS_17NGLogicalLineItemES2_(%"class.blink::NGFragmentItemsBuilder"* %0, %"struct.blink::NGLogicalLineItem"* %98, %"struct.blink::NGLogicalLineItem"* %84)
  %99 = load i32, i32* %12, align 4
  %100 = sub i32 %99, %65
  %101 = call dereferenceable(72) %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %11, i32 %65) #12
  %102 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %101, i64 0, i32 0, i32 6
  %103 = load i16, i16* %102, align 8
  %104 = and i16 %103, 7
  %105 = zext i16 %104 to i32
  switch i32 %105, label %110 [
    i32 4, label %106
    i32 3, label %108
  ]

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %101, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %100, i32* %107, align 8
  br label %110

108:                                              ; preds = %97
  %109 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %101, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %100, i32* %109, align 8
  br label %110

110:                                              ; preds = %108, %106, %97, %52, %38
  %111 = phi %"struct.blink::NGLogicalLineItem"* [ %63, %52 ], [ %39, %38 ], [ %84, %97 ], [ %84, %106 ], [ %84, %108 ]
  %112 = icmp eq %"struct.blink::NGLogicalLineItem"* %111, %2
  br i1 %112, label %24, label %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder13AddListMarkerERKNS_21NGPhysicalBoxFragmentERKNS_13LogicalOffsetE(%"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), %"struct.blink::LogicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0
  %11 = add i32 %5, 1
  tail call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"* %10, i32 %11) #12
  %12 = load i32, i32* %4, align 4
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i32 [ %12, %9 ], [ %5, %3 ]
  %15 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %15, align 8
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %16, i64 %17, i32 0
  tail call void @_ZN5blink14NGFragmentItemC1ERKNS_21NGPhysicalBoxFragmentENS_13TextDirectionE(%"class.blink::NGFragmentItem"* %18, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %1, i8 zeroext 0) #12
  %19 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %16, i64 %17, i32 1
  %20 = bitcast %"struct.blink::LogicalOffset"* %2 to i64*
  %21 = bitcast %"struct.blink::LogicalOffset"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  %23 = load i32, i32* %4, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder16AddPreviousItemsERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsEPNS_20NGBoxFragmentBuilderEPKNS_14NGFragmentItemEj(%"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult"* noalias nocapture sret, %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), %"class.blink::NGFragmentItems"* dereferenceable(24), %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGFragmentItem"* readnone, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::WritingModeConverter", align 4
  %9 = alloca %"class.blink::WritingModeConverter", align 4
  %10 = alloca %"class.blink::NGInlineCursor", align 8
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"struct.blink::LogicalOffset"*
  %13 = alloca %"class.absl::optional.2118", align 8
  %14 = alloca %"class.blink::NGInlineCursor", align 8
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"struct.blink::PhysicalOffset"*
  %17 = icmp ne %"class.blink::NGFragmentItem"* %5, null
  br i1 %17, label %18, label %28

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %3, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %110, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %26, label %110, !prof !2

26:                                               ; preds = %22
  %27 = bitcast %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false)
  br label %414

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %28
  %51 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %52 = bitcast %"class.WTF::String"* %29 to i64*
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %69

69:                                               ; preds = %50, %65, %68
  %70 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 2
  %71 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %3, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #12
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  tail call void @llvm.trap() #12
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %69
  %92 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %93 = bitcast %"class.WTF::String"* %70 to i64*
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %110

110:                                              ; preds = %18, %109, %106, %91, %22
  %111 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %3, i64 0, i32 2
  %112 = load i32, i32* %111, align 8
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 0
  %115 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = icmp ult i32 %116, %112
  br i1 %117, label %118, label %138, !prof !4

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %119, align 8
  %121 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %120, null
  br i1 %121, label %122, label %137

122:                                              ; preds = %118
  %123 = icmp ugt i32 %112, 128
  br i1 %123, label %124, label %131

124:                                              ; preds = %122
  %125 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEmm(i64 %113) #12
  %126 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %125, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEPKcv, i64 0, i64 0)) #12
  %127 = ptrtoint i8* %126 to i64
  %128 = bitcast %"class.blink::NGFragmentItemsBuilder"* %1 to i64*
  store atomic i64 %127, i64* %128 monotonic, align 8
  %129 = udiv i64 %125, 72
  %130 = trunc i64 %129 to i32
  br label %135

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %133 = ptrtoint i8* %132 to i64
  %134 = bitcast %"class.blink::NGFragmentItemsBuilder"* %1 to i64*
  store atomic i64 %133, i64* %134 monotonic, align 8
  br label %135

135:                                              ; preds = %131, %124
  %136 = phi i32 [ 128, %131 ], [ %130, %124 ]
  store i32 %136, i32* %115, align 8
  br label %138

137:                                              ; preds = %118
  tail call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1631"* %114, i32 %112) #12
  br label %138

138:                                              ; preds = %110, %135, %137
  %139 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %139) #12
  %140 = bitcast %"class.blink::WritingModeConverter"* %8 to i32*
  store i32 -1431655766, i32* %140, align 4
  %141 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 8
  %142 = bitcast %"class.blink::WritingDirectionMode"* %141 to i16*
  %143 = load i16, i16* %142, align 8
  %144 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %2, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.blink::PhysicalSize"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.blink::WritingModeConverter"* %8 to i16*
  store i16 %143, i16* %147, align 4
  %148 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %8, i64 0, i32 1
  %149 = bitcast %"struct.blink::PhysicalSize"* %148 to i64*
  store i64 %146, i64* %149, align 4
  %150 = trunc i16 %143 to i8
  %151 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %151) #12
  %152 = bitcast %"class.blink::WritingModeConverter"* %9 to i32*
  store i32 -1431655766, i32* %152, align 4
  %153 = icmp eq i8 %150, 2
  %154 = and i16 %143, 255
  %155 = select i1 %153, i16 1, i16 %154
  %156 = bitcast %"class.blink::WritingModeConverter"* %9 to i16*
  store i16 %155, i16* %156, align 4
  %157 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %158, align 4
  %159 = bitcast %"class.blink::NGInlineCursor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %159) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsE(%"class.blink::NGInlineCursor"* nonnull %10, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %2, %"class.blink::NGFragmentItems"* dereferenceable(24) %3) #12
  %160 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %10, i64 0, i32 0, i32 0
  %161 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %160, align 8
  %162 = icmp eq %"class.blink::NGFragmentItem"* %161, null
  br i1 %162, label %163, label %164

163:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %159) #12
  br label %411

164:                                              ; preds = %138
  %165 = bitcast i64* %11 to i8*
  %166 = bitcast i64* %11 to i32*
  %167 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %12, i64 0, i32 1, i32 0
  %168 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %8, i64 0, i32 0, i32 1
  %169 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %170 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %1, i64 0, i32 7
  %172 = bitcast %"class.blink::NGInlineNode"* %171 to %"class.blink::LayoutBlockFlow"**
  %173 = getelementptr inbounds %"class.absl::optional.2118", %"class.absl::optional.2118"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = icmp eq i8 %150, 0
  %175 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 1
  %176 = bitcast %"struct.blink::PhysicalSize"* %175 to i64*
  %177 = bitcast %"class.blink::NGInlineCursor"* %14 to i8*
  %178 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %14, i64 0, i32 0, i32 0
  %179 = bitcast i64* %15 to i8*
  %180 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 0, i32 1
  br label %181

181:                                              ; preds = %164, %393
  %182 = phi %"class.blink::NGFragmentItem"* [ %161, %164 ], [ %398, %393 ]
  %183 = phi i32 [ 0, %164 ], [ %397, %393 ]
  %184 = phi %"struct.blink::NGInlineItemsData"* [ null, %164 ], [ %396, %393 ]
  %185 = phi %"class.blink::NGInlineBreakToken"* [ null, %164 ], [ %395, %393 ]
  %186 = phi i32 [ 0, %164 ], [ %394, %393 ]
  %187 = icmp eq %"class.blink::NGFragmentItem"* %182, %5
  br i1 %187, label %400, label %188

188:                                              ; preds = %181
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #12
  store i32 -1431655766, i32* %166, align 8
  store i32 -1431655766, i32* %167, align 4
  %189 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 2, i32 0
  %190 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 2, i32 1
  %191 = load i8, i8* %139, align 4
  %192 = load i8, i8* %168, align 1
  %193 = or i8 %191, %192
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %200

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %189, i64 0, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 2, i32 0, i32 1, i32 0
  %199 = load i32, i32* %198, align 4
  br label %205

200:                                              ; preds = %188
  %201 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %8, %"struct.blink::PhysicalOffset"* dereferenceable(8) %189, %"struct.blink::PhysicalSize"* dereferenceable(8) %190) #12
  %202 = trunc i64 %201 to i32
  %203 = lshr i64 %201, 32
  %204 = trunc i64 %203 to i32
  br label %205

205:                                              ; preds = %195, %200
  %206 = phi i32 [ %199, %195 ], [ %204, %200 ]
  %207 = phi i32 [ %197, %195 ], [ %202, %200 ]
  %208 = zext i32 %206 to i64
  %209 = shl nuw i64 %208, 32
  %210 = zext i32 %207 to i64
  %211 = or i64 %209, %210
  store i64 %211, i64* %11, align 8
  %212 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 6
  %213 = load i16, i16* %212, align 8
  %214 = and i16 %213, 7
  %215 = icmp eq i16 %214, 3
  br i1 %215, label %216, label %372

216:                                              ; preds = %205
  br i1 %17, label %217, label %286

217:                                              ; preds = %216
  %218 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 1
  %219 = bitcast %union.anon.1634* %218 to %"class.blink::NGPhysicalLineBoxFragment"**
  %220 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %220, i64 0, i32 0
  %222 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %220, i64 0, i32 0, i32 4, i32 0
  %223 = bitcast %"class.blink::NGBreakToken"** %222 to %"class.blink::NGInlineBreakToken"**
  %224 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %224, i64 0, i32 0, i32 4
  %226 = load i16, i16* %225, align 8
  %227 = and i16 %226, 8
  %228 = icmp eq i16 %227, 0
  br i1 %228, label %241, label %229, !prof !4

229:                                              ; preds = %217
  %230 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %172, align 8
  %231 = bitcast %"class.blink::LayoutBlockFlow"* %230 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %232 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %231, align 8
  %233 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %232, i64 213
  %234 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %233, align 8
  %235 = call %"struct.blink::NGInlineNodeData"* %234(%"class.blink::LayoutBlockFlow"* %230) #12
  %236 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %235, i64 0, i32 1, i32 0, i32 0, i32 0
  %237 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %236, align 8
  %238 = icmp eq %"struct.blink::NGInlineItemsData"* %237, null
  %239 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %235, i64 0, i32 0
  %240 = select i1 %238, %"struct.blink::NGInlineItemsData"* %239, %"struct.blink::NGInlineItemsData"* %237
  br label %251

241:                                              ; preds = %217
  %242 = icmp eq %"struct.blink::NGInlineItemsData"* %184, null
  br i1 %242, label %243, label %251

243:                                              ; preds = %241
  %244 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %172, align 8
  %245 = bitcast %"class.blink::LayoutBlockFlow"* %244 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %246 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %245, align 8
  %247 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %246, i64 213
  %248 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %247, align 8
  %249 = call %"struct.blink::NGInlineNodeData"* %248(%"class.blink::LayoutBlockFlow"* %244) #12
  %250 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %249, i64 0, i32 0
  br label %251

251:                                              ; preds = %229, %241, %243
  %252 = phi %"struct.blink::NGInlineItemsData"* [ %250, %243 ], [ %184, %241 ], [ %184, %229 ]
  %253 = phi %"struct.blink::NGInlineItemsData"* [ %250, %243 ], [ %184, %241 ], [ %240, %229 ]
  %254 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %224, i64 0, i32 2
  %255 = load i32, i32* %254, align 8
  %256 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %224, i64 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %253, i64 0, i32 1, i32 0, i32 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = icmp ugt i32 %259, %255
  br i1 %260, label %261, label %389, !prof !6

261:                                              ; preds = %251
  %262 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %253, i64 0, i32 1
  %263 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1917"* %262, i32 %255) #12
  %264 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %263, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp ule i32 %265, %257
  %267 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %263, i64 0, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = icmp ugt i32 %268, %257
  %270 = and i1 %266, %269
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = icmp eq i32 %265, %268
  %273 = icmp eq i32 %265, %257
  %274 = and i1 %273, %272
  br i1 %274, label %275, label %389, !prof !4

275:                                              ; preds = %261, %271
  store i8 0, i8* %173, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"* %4, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %221, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %12, %"class.blink::LayoutInline"* null, %"struct.blink::NGMarginStrut"* null, i1 zeroext false, %"class.absl::optional.2118"* nonnull byval(%"class.absl::optional.2118") align 8 %13, i64 1) #12
  %276 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %190, i64 0, i32 0, i32 0
  %277 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 2, i32 1, i32 1, i32 0
  %278 = select i1 %174, i32* %277, i32* %276
  %279 = load i32, i32* %278, align 4
  %280 = icmp slt i32 %279, 0
  %281 = select i1 %280, i32 -2147483648, i32 2147483647
  %282 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %186, i32 %279) #12
  %283 = extractvalue { i32, i1 } %282, 1
  %284 = extractvalue { i32, i1 } %282, 0
  %285 = select i1 %283, i32 %281, i32 %284, !prof !2
  br label %286

286:                                              ; preds = %275, %216
  %287 = phi i32 [ %285, %275 ], [ %186, %216 ]
  %288 = phi %"class.blink::NGInlineBreakToken"* [ %224, %275 ], [ %185, %216 ]
  %289 = phi %"struct.blink::NGInlineItemsData"* [ %252, %275 ], [ %184, %216 ]
  %290 = load i32, i32* %169, align 4
  %291 = load i32, i32* %115, align 8
  %292 = icmp eq i32 %290, %291
  br i1 %292, label %293, label %296, !prof !2

293:                                              ; preds = %286
  %294 = add i32 %290, 1
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"* %114, i32 %294) #12
  %295 = load i32, i32* %169, align 4
  br label %296

296:                                              ; preds = %286, %293
  %297 = phi i32 [ %295, %293 ], [ %290, %286 ]
  %298 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %170, align 8
  %299 = zext i32 %297 to i64
  %300 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %298, i64 %299, i32 0
  call void @_ZN5blink14NGFragmentItemC1ERKS0_(%"class.blink::NGFragmentItem"* %300, %"class.blink::NGFragmentItem"* nonnull dereferenceable(64) %182) #12
  %301 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %298, i64 %299, i32 1
  %302 = bitcast %"struct.blink::LogicalOffset"* %301 to i64*
  %303 = load i64, i64* %11, align 8
  store i64 %303, i64* %302, align 8
  %304 = load i32, i32* %169, align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %169, align 4
  %306 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 2, i32 0, i32 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %182, i64 0, i32 2, i32 0, i32 1, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = bitcast %"struct.blink::PhysicalSize"* %190 to i64*
  %311 = load i64, i64* %310, align 4
  store i64 %311, i64* %176, align 4
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %177) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 112, i1 false)
  call void @_ZNK5blink14NGInlineCursor20CursorForDescendantsEv(%"class.blink::NGInlineCursor"* nonnull sret %14, %"class.blink::NGInlineCursor"* nonnull %10) #12
  %312 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %178, align 8
  %313 = icmp eq %"class.blink::NGFragmentItem"* %312, null
  br i1 %313, label %319, label %314

314:                                              ; preds = %296
  %315 = icmp sgt i32 %307, -1
  %316 = select i1 %315, i32 -2147483648, i32 2147483647
  %317 = icmp sgt i32 %309, -1
  %318 = select i1 %317, i32 -2147483648, i32 2147483647
  br label %322

319:                                              ; preds = %360, %296
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %177) #12
  %320 = add i32 %183, 1
  %321 = icmp eq i32 %320, %6
  br i1 %321, label %389, label %371

322:                                              ; preds = %314, %360
  %323 = phi %"class.blink::NGFragmentItem"* [ %312, %314 ], [ %369, %360 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #12
  %324 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %323, i64 0, i32 2, i32 0, i32 0, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %325, i32 %307) #12
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %316, i32 %328, !prof !2
  %330 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %323, i64 0, i32 2, i32 0, i32 1, i32 0
  %331 = load i32, i32* %330, align 4
  %332 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %331, i32 %309) #12
  %333 = extractvalue { i32, i1 } %332, 1
  %334 = extractvalue { i32, i1 } %332, 0
  %335 = select i1 %333, i32 %318, i32 %334, !prof !2
  %336 = zext i32 %335 to i64
  %337 = shl nuw i64 %336, 32
  %338 = zext i32 %329 to i64
  %339 = or i64 %337, %338
  store i64 %339, i64* %15, align 8
  %340 = load i8, i8* %151, align 4
  %341 = load i8, i8* %180, align 1
  %342 = or i8 %340, %341
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %349, label %344

344:                                              ; preds = %322
  %345 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %323, i64 0, i32 2, i32 1
  %346 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %9, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %16, %"struct.blink::PhysicalSize"* dereferenceable(8) %345) #12
  %347 = trunc i64 %346 to i32
  %348 = and i64 %346, -4294967296
  br label %349

349:                                              ; preds = %322, %344
  %350 = phi i64 [ %348, %344 ], [ %337, %322 ]
  %351 = phi i32 [ %347, %344 ], [ %329, %322 ]
  %352 = zext i32 %351 to i64
  %353 = or i64 %350, %352
  %354 = load i32, i32* %169, align 4
  %355 = load i32, i32* %115, align 8
  %356 = icmp eq i32 %354, %355
  br i1 %356, label %357, label %360, !prof !2

357:                                              ; preds = %349
  %358 = add i32 %354, 1
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"* %114, i32 %358) #12
  %359 = load i32, i32* %169, align 4
  br label %360

360:                                              ; preds = %349, %357
  %361 = phi i32 [ %359, %357 ], [ %354, %349 ]
  %362 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %170, align 8
  %363 = zext i32 %361 to i64
  %364 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %362, i64 %363, i32 0
  call void @_ZN5blink14NGFragmentItemC1ERKS0_(%"class.blink::NGFragmentItem"* %364, %"class.blink::NGFragmentItem"* nonnull dereferenceable(64) %323) #12
  %365 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %362, i64 %363, i32 1
  %366 = bitcast %"struct.blink::LogicalOffset"* %365 to i64*
  store i64 %353, i64* %366, align 8
  %367 = load i32, i32* %169, align 4
  %368 = add i32 %367, 1
  store i32 %368, i32* %169, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #12
  call void @_ZN5blink14NGInlineCursor10MoveToNextEv(%"class.blink::NGInlineCursor"* nonnull %14) #12
  %369 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %178, align 8
  %370 = icmp eq %"class.blink::NGFragmentItem"* %369, null
  br i1 %370, label %319, label %322

371:                                              ; preds = %319
  call void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"* nonnull %10) #12
  br label %393

372:                                              ; preds = %205
  %373 = load i32, i32* %169, align 4
  %374 = load i32, i32* %115, align 8
  %375 = icmp eq i32 %373, %374
  br i1 %375, label %376, label %379, !prof !2

376:                                              ; preds = %372
  %377 = add i32 %373, 1
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"* %114, i32 %377) #12
  %378 = load i32, i32* %169, align 4
  br label %379

379:                                              ; preds = %372, %376
  %380 = phi i32 [ %378, %376 ], [ %373, %372 ]
  %381 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %170, align 8
  %382 = zext i32 %380 to i64
  %383 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %381, i64 %382, i32 0
  call void @_ZN5blink14NGFragmentItemC1ERKS0_(%"class.blink::NGFragmentItem"* %383, %"class.blink::NGFragmentItem"* nonnull dereferenceable(64) %182) #12
  %384 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %381, i64 %382, i32 1
  %385 = bitcast %"struct.blink::LogicalOffset"* %384 to i64*
  %386 = load i64, i64* %11, align 8
  store i64 %386, i64* %385, align 8
  %387 = load i32, i32* %169, align 4
  %388 = add i32 %387, 1
  store i32 %388, i32* %169, align 4
  call void @_ZN5blink14NGInlineCursor10MoveToNextEv(%"class.blink::NGInlineCursor"* nonnull %10) #12
  br label %393

389:                                              ; preds = %319, %271, %251
  %390 = phi i32 [ %287, %319 ], [ %186, %271 ], [ %186, %251 ]
  %391 = phi %"class.blink::NGInlineBreakToken"* [ %288, %319 ], [ %185, %271 ], [ %185, %251 ]
  %392 = phi i32 [ %6, %319 ], [ %183, %271 ], [ %183, %251 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #12
  br label %400

393:                                              ; preds = %379, %371
  %394 = phi i32 [ %186, %379 ], [ %287, %371 ]
  %395 = phi %"class.blink::NGInlineBreakToken"* [ %185, %379 ], [ %288, %371 ]
  %396 = phi %"struct.blink::NGInlineItemsData"* [ %184, %379 ], [ %289, %371 ]
  %397 = phi i32 [ %183, %379 ], [ %320, %371 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #12
  %398 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %160, align 8
  %399 = icmp eq %"class.blink::NGFragmentItem"* %398, null
  br i1 %399, label %400, label %181

400:                                              ; preds = %181, %393, %389
  %401 = phi i32 [ %390, %389 ], [ %186, %181 ], [ %394, %393 ]
  %402 = phi %"class.blink::NGInlineBreakToken"* [ %391, %389 ], [ %185, %181 ], [ %395, %393 ]
  %403 = phi i32 [ %392, %389 ], [ %183, %181 ], [ %397, %393 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %159) #12
  %404 = icmp ne %"class.blink::NGInlineBreakToken"* %402, null
  %405 = and i1 %17, %404
  br i1 %405, label %406, label %411

406:                                              ; preds = %400
  %407 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult", %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult"* %0, i64 0, i32 0
  store %"class.blink::NGInlineBreakToken"* %402, %"class.blink::NGInlineBreakToken"** %407, align 8
  %408 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult", %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult"* %0, i64 0, i32 1, i32 0
  store i32 %401, i32* %408, align 8
  %409 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult", %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult"* %0, i64 0, i32 2
  store i32 %403, i32* %409, align 4
  %410 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult", %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult"* %0, i64 0, i32 3
  store i8 1, i8* %410, align 8
  br label %413

411:                                              ; preds = %163, %400
  %412 = bitcast %"struct.blink::NGFragmentItemsBuilder::AddPreviousItemsResult"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %412, i8 0, i64 24, i1 false)
  br label %413

413:                                              ; preds = %411, %406
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %151) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139) #12
  br label %414

414:                                              ; preds = %413, %26
  ret void
}

declare void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsE(%"class.blink::NGInlineCursor"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), %"class.blink::NGFragmentItems"* dereferenceable(24)) unnamed_addr #5

declare void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), %"struct.blink::LogicalOffset"* dereferenceable(8), %"class.blink::LayoutInline"*, %"struct.blink::NGMarginStrut"*, i1 zeroext, %"class.absl::optional.2118"* byval(%"class.absl::optional.2118") align 8, i64) local_unnamed_addr #5

declare void @_ZNK5blink14NGInlineCursor20CursorForDescendantsEv(%"class.blink::NGInlineCursor"* sret, %"class.blink::NGInlineCursor"*) local_unnamed_addr #5

declare void @_ZN5blink14NGInlineCursor10MoveToNextEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #5

declare void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(9232) %"class.WTF::Vector.1631"* @_ZN5blink22NGFragmentItemsBuilder5ItemsERKNS_12PhysicalSizeE(%"class.blink::NGFragmentItemsBuilder"*, %"struct.blink::PhysicalSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink22NGFragmentItemsBuilder17ConvertToPhysicalERKNS_12PhysicalSizeE(%"class.blink::NGFragmentItemsBuilder"* %0, %"struct.blink::PhysicalSize"* dereferenceable(8) %1)
  %3 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0
  ret %"class.WTF::Vector.1631"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder17ConvertToPhysicalERKNS_12PhysicalSizeE(%"class.blink::NGFragmentItemsBuilder"* nocapture, %"struct.blink::PhysicalSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WritingModeConverter", align 4
  %4 = alloca %"class.blink::WritingModeConverter", align 4
  %5 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 1, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %137

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #12
  %10 = bitcast %"class.blink::WritingModeConverter"* %3 to i32*
  store i32 -1431655766, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 8
  %12 = bitcast %"class.blink::WritingDirectionMode"* %11 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = bitcast %"class.blink::WritingModeConverter"* %3 to i16*
  store i16 %13, i16* %14, align 4
  %15 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %3, i64 0, i32 1
  %16 = bitcast %"struct.blink::PhysicalSize"* %1 to i64*
  %17 = bitcast %"struct.blink::PhysicalSize"* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  %19 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #12
  %20 = bitcast %"class.blink::WritingModeConverter"* %4 to i32*
  store i32 -1431655766, i32* %20, align 4
  %21 = trunc i16 %13 to i8
  %22 = icmp eq i8 %21, 2
  %23 = and i16 %13, 255
  %24 = select i1 %22, i16 1, i16 %23
  %25 = bitcast %"class.blink::WritingModeConverter"* %4 to i16*
  store i16 %24, i16* %25, align 4
  %26 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %4, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %4, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %8
  %33 = lshr i16 %13, 8
  %34 = trunc i16 %33 to i8
  %35 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %28, align 8
  %36 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %3, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %4, i64 0, i32 1
  %38 = bitcast %"struct.blink::PhysicalSize"* %37 to i64*
  %39 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %4, i64 0, i32 0, i32 1
  br label %41

40:                                               ; preds = %126, %8
  store i8 1, i8* %5, align 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #12
  br label %137

41:                                               ; preds = %134, %32
  %42 = phi i8 [ %34, %32 ], [ %136, %134 ]
  %43 = phi i8 [ %21, %32 ], [ %135, %134 ]
  %44 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %35, %32 ], [ %128, %134 ]
  %45 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %44, i64 0, i32 1
  %46 = or i8 %43, %42
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %45, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %44, i64 0, i32 1, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  br label %59

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %44, i64 0, i32 0, i32 2, i32 1
  %55 = call i64 @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_13LogicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %3, %"struct.blink::LogicalOffset"* dereferenceable(8) %45, %"struct.blink::PhysicalSize"* dereferenceable(8) %54) #12
  %56 = trunc i64 %55 to i32
  %57 = lshr i64 %55, 32
  %58 = trunc i64 %57 to i32
  br label %59

59:                                               ; preds = %48, %53
  %60 = phi i32 [ %52, %48 ], [ %58, %53 ]
  %61 = phi i32 [ %50, %48 ], [ %56, %53 ]
  %62 = zext i32 %60 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %61 to i64
  %65 = or i64 %63, %64
  %66 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %44, i64 0, i32 0, i32 2, i32 0
  %67 = bitcast %"struct.blink::PhysicalOffset"* %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %44, i64 0, i32 0, i32 6
  %69 = load i16, i16* %68, align 8
  %70 = and i16 %69, 7
  %71 = icmp eq i16 %70, 3
  br i1 %71, label %72, label %126

72:                                               ; preds = %59
  %73 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %44, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %126, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %44, i64 0, i32 0, i32 2, i32 1
  %78 = bitcast %"struct.blink::PhysicalSize"* %77 to i64*
  %79 = load i64, i64* %78, align 4
  store i64 %79, i64* %38, align 4
  %80 = add i32 %74, -1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %126, label %82

82:                                               ; preds = %76
  %83 = icmp slt i32 %61, 0
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = icmp slt i32 %60, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  br label %87

87:                                               ; preds = %82, %107
  %88 = phi i32 [ %80, %82 ], [ %124, %107 ]
  %89 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %44, %82 ], [ %90, %107 ]
  %90 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %89, i64 1
  %91 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %89, i64 1, i32 1
  %92 = load i8, i8* %19, align 4
  %93 = load i8, i8* %39, align 1
  %94 = or i8 %92, %93
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %101

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %91, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %89, i64 1, i32 1, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  br label %107

101:                                              ; preds = %87
  %102 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %89, i64 1, i32 0, i32 2, i32 1
  %103 = call i64 @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_13LogicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %4, %"struct.blink::LogicalOffset"* dereferenceable(8) %91, %"struct.blink::PhysicalSize"* dereferenceable(8) %102) #12
  %104 = trunc i64 %103 to i32
  %105 = lshr i64 %103, 32
  %106 = trunc i64 %105 to i32
  br label %107

107:                                              ; preds = %96, %101
  %108 = phi i32 [ %100, %96 ], [ %106, %101 ]
  %109 = phi i32 [ %98, %96 ], [ %104, %101 ]
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %109, i32 %61) #12
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %84, i32 %112, !prof !2
  %114 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %60) #12
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %86, i32 %116, !prof !2
  %118 = zext i32 %117 to i64
  %119 = shl nuw i64 %118, 32
  %120 = zext i32 %113 to i64
  %121 = or i64 %119, %120
  %122 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %89, i64 1, i32 0, i32 2, i32 0
  %123 = bitcast %"struct.blink::PhysicalOffset"* %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = add i32 %88, -1
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %87

126:                                              ; preds = %107, %76, %72, %59
  %127 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %44, %72 ], [ %44, %59 ], [ %44, %76 ], [ %90, %107 ]
  %128 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %127, i64 1
  %129 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %28, align 8
  %130 = load i32, i32* %29, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %129, i64 %131
  %133 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %128, %132
  br i1 %133, label %40, label %134

134:                                              ; preds = %126
  %135 = load i8, i8* %9, align 4
  %136 = load i8, i8* %36, align 1
  br label %41

137:                                              ; preds = %2, %40
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK5blink22NGFragmentItemsBuilder16LogicalOffsetForERKNS_12LayoutObjectE(%"class.blink::NGFragmentItemsBuilder"* nocapture readonly, %"class.blink::LayoutObject"* readnone dereferenceable(88)) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.absl::optional_internal::optional_data_dtor_base.2121", align 8
  %4 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %28, label %11

11:                                               ; preds = %2, %16
  %12 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %17, %16 ], [ %5, %2 ]
  %13 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %12, i64 1
  %18 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %17, %9
  br i1 %18, label %28, label %11

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %12, i64 0, i32 1
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2121", %"class.absl::optional_internal::optional_data_dtor_base.2121"* %3, i64 0, i32 0
  store i8 1, i8* %21, align 8
  %22 = bitcast %"struct.blink::LogicalOffset"* %20 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2121", %"class.absl::optional_internal::optional_data_dtor_base.2121"* %3, i64 0, i32 1
  %25 = bitcast %union.anon.2122* %24 to i64*
  store i64 %23, i64* %25, align 4
  %26 = lshr i64 %23, 32
  %27 = trunc i64 %26 to i32
  br label %30

28:                                               ; preds = %16, %2
  %29 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2121", %"class.absl::optional_internal::optional_data_dtor_base.2121"* %3, i64 0, i32 0
  store i8 0, i8* %29, align 8
  br label %30

30:                                               ; preds = %19, %28
  %31 = phi i32 [ %27, %19 ], [ undef, %28 ]
  %32 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.2121"* %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = insertvalue { i64, i32 } undef, i64 %33, 0
  %35 = insertvalue { i64, i32 } %34, i32 %31, 1
  ret { i64, i32 } %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder28MoveChildrenInBlockDirectionENS_10LayoutUnitE(%"class.blink::NGFragmentItemsBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %3, align 8
  %9 = icmp slt i32 %1, 0
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  br label %12

11:                                               ; preds = %30, %2
  ret void

12:                                               ; preds = %7, %30
  %13 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %8, %7 ], [ %32, %30 ]
  %14 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %13, i64 0, i32 0, i32 6
  %15 = load i16, i16* %14, align 8
  %16 = and i16 %15, 7
  %17 = icmp eq i16 %16, 3
  %18 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %13, i64 0, i32 1, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %1) #12
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %10, i32 %22, !prof !2
  store i32 %23, i32* %18, align 4
  br i1 %17, label %24, label %30

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %13, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -1
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %13, i64 %28
  br label %30

30:                                               ; preds = %12, %24
  %31 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %29, %24 ], [ %13, %12 ]
  %32 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %31, i64 1
  %33 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %3, align 8
  %34 = load i32, i32* %4, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %33, i64 %35
  %37 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %32, %36
  br i1 %37, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGFragmentItemsBuilder15ToFragmentItemsERKNS_12PhysicalSizeEPv(%"class.blink::NGFragmentItemsBuilder"*, %"struct.blink::PhysicalSize"* nocapture readonly dereferenceable(8), i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NGSvgTextLayoutAlgorithm", align 8
  tail call void @_ZN5blink22NGFragmentItemsBuilder17ConvertToPhysicalERKNS_12PhysicalSizeE(%"class.blink::NGFragmentItemsBuilder"* %0, %"struct.blink::PhysicalSize"* dereferenceable(8) %1)
  %5 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 7
  %6 = bitcast %"class.blink::NGInlineNode"* %5 to %"class.blink::NGLayoutInputNode"*
  %7 = tail call zeroext i1 @_ZNK5blink17NGLayoutInputNode9IsSvgTextEv(%"class.blink::NGLayoutInputNode"* %6) #12
  br i1 %7, label %8, label %41

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::NGSvgTextLayoutAlgorithm"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 7, i32 0, i32 1
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 8, i32 0
  %16 = load i8, i8* %15, align 1
  call void @_ZN5blink24NGSvgTextLayoutAlgorithmC1ENS_12NGInlineNodeENS_11WritingModeE(%"class.blink::NGSvgTextLayoutAlgorithm"* nonnull %4, %"class.blink::LayoutBox"* %11, i64 %14, i8 zeroext %16) #12
  %17 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::NGFragmentItemsBuilder", %"class.blink::NGFragmentItemsBuilder"* %0, i64 0, i32 0
  call void @_ZN5blink24NGSvgTextLayoutAlgorithm6LayoutERKN3WTF6StringERNS1_6VectorINS_22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS1_18PartitionAllocatorEEE(%"class.blink::NGSvgTextLayoutAlgorithm"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %17, %"class.WTF::Vector.1631"* dereferenceable(9232) %18) #12
  %19 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAlgorithm", %"class.blink::NGSvgTextLayoutAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"** %19, align 8
  %21 = icmp eq %"class.blink::FloatPoint"* %20, null
  %22 = bitcast %"class.blink::FloatPoint"* %20 to i8*
  br i1 %21, label %29, label %23, !prof !4

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAlgorithm", %"class.blink::NGSvgTextLayoutAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %23
  store i32 0, i32* %24, align 4
  br label %28

28:                                               ; preds = %27, %23
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #12
  store %"class.blink::FloatPoint"* null, %"class.blink::FloatPoint"** %19, align 8
  br label %29

29:                                               ; preds = %28, %8
  %30 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAlgorithm", %"class.blink::NGSvgTextLayoutAlgorithm"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo"*, %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo"** %30, align 8
  %32 = icmp eq %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo"* %31, null
  br i1 %32, label %40, label %33, !prof !4

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAlgorithm", %"class.blink::NGSvgTextLayoutAlgorithm"* %4, i64 0, i32 3, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !2

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  %39 = getelementptr inbounds %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo", %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  store %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo"* null, %"struct.blink::NGSvgTextLayoutAlgorithm::SvgPerCharacterInfo"** %30, align 8
  br label %40

40:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #12
  br label %41

41:                                               ; preds = %40, %3
  %42 = bitcast i8* %2 to %"class.blink::NGFragmentItems"*
  call void @_ZN5blink15NGFragmentItemsC1EPNS_22NGFragmentItemsBuilderE(%"class.blink::NGFragmentItems"* %42, %"class.blink::NGFragmentItemsBuilder"* %0) #12
  ret void
}

declare zeroext i1 @_ZNK5blink17NGLayoutInputNode9IsSvgTextEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #5

declare void @_ZN5blink24NGSvgTextLayoutAlgorithmC1ENS_12NGInlineNodeENS_11WritingModeE(%"class.blink::NGSvgTextLayoutAlgorithm"*, %"class.blink::LayoutBox"*, i64, i8 zeroext) unnamed_addr #5

declare void @_ZN5blink24NGSvgTextLayoutAlgorithm6LayoutERKN3WTF6StringERNS1_6VectorINS_22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS1_18PartitionAllocatorEEE(%"class.blink::NGSvgTextLayoutAlgorithm"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.1631"* dereferenceable(9232)) local_unnamed_addr #5

declare void @_ZN5blink15NGFragmentItemsC1EPNS_22NGFragmentItemsBuilderE(%"class.blink::NGFragmentItems"*, %"class.blink::NGFragmentItemsBuilder"*) unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGLogicalLineItemD2Ev(%"struct.blink::NGLogicalLineItem"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 2, i32 0
  %20 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %19, align 8
  %21 = icmp eq %"class.blink::ShapeResultView"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #12
  %24 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %20) #12
  %28 = bitcast %"class.blink::ShapeResultView"* %20 to i8*
  tail call void @free(i8* %28) #12
  br label %29

29:                                               ; preds = %18, %22, %27
  %30 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 0, i32 0
  %31 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %30, align 8
  %32 = icmp eq %"class.blink::NGLayoutResult"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %31, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %34) #12
  %35 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %31) #12
  %39 = bitcast %"class.blink::NGLayoutResult"* %31 to i8*
  tail call void @free(i8* %39) #12
  br label %40

40:                                               ; preds = %29, %33, %38
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1885"*, %"struct.blink::NGLogicalLineItem"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGLogicalLineItem"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink14NGFragmentItemD1Ev(%"class.blink::NGFragmentItem"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1632"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #5

declare i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1917"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %24, i64 %25
  ret %"class.blink::NGInlineItem"* %26
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

declare i64 @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_13LogicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"*, %"struct.blink::LogicalOffset"* dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 29797034
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 29797034) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 72
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1913"*, i8 } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1910"*, %"class.blink::NGPhysicalFragment"** dereferenceable(8), %"class.blink::NGLogicalLineItems"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1913"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1913"* @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1910"* %0, %"struct.WTF::KeyValuePair.1913"* null)
  %9 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1913"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::NGPhysicalFragment"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %39, i64 0, i32 0
  %41 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %40, align 8
  %42 = icmp eq %"class.blink::NGPhysicalFragment"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::NGPhysicalFragment"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::NGPhysicalFragment"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1913"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1913"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::NGPhysicalFragment"* %59, %43
  br i1 %64, label %106, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::NGPhysicalFragment"* %59, inttoptr (i64 -1 to %"class.blink::NGPhysicalFragment"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1913"* %60, %"struct.WTF::KeyValuePair.1913"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %72, i64 0, i32 0
  %74 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %73, align 8
  %75 = icmp eq %"class.blink::NGPhysicalFragment"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1913"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1913"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1913"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.1913"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %89, i64 0, i32 1
  %92 = bitcast %"class.blink::NGLogicalLineItems"** %2 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::NGLogicalLineItems"** %91 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %12, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %87
  %105 = tail call %"struct.WTF::KeyValuePair.1913"* @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1910"* %0, %"struct.WTF::KeyValuePair.1913"* %89)
  br label %106

106:                                              ; preds = %58, %87, %104
  %107 = phi i8 [ 1, %87 ], [ 1, %104 ], [ 0, %58 ]
  %108 = phi %"struct.WTF::KeyValuePair.1913"* [ %89, %87 ], [ %105, %104 ], [ %60, %58 ]
  %109 = insertvalue { %"struct.WTF::KeyValuePair.1913"*, i8 } undef, %"struct.WTF::KeyValuePair.1913"* %108, 0
  %110 = insertvalue { %"struct.WTF::KeyValuePair.1913"*, i8 } %109, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair.1913"*, i8 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1913"* @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1910"*, %"struct.WTF::KeyValuePair.1913"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink18NGPhysicalFragmentEPNS2_18NGLogicalLineItemsEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1913"*
  %37 = call %"struct.WTF::KeyValuePair.1913"* @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.1910"* %0, %"struct.WTF::KeyValuePair.1913"* %36, i32 %32, %"struct.WTF::KeyValuePair.1913"* %1) #12
  ret %"struct.WTF::KeyValuePair.1913"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1913"* @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.1910"*, %"struct.WTF::KeyValuePair.1913"*, i32, %"struct.WTF::KeyValuePair.1913"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1910", align 8
  %6 = bitcast %"class.WTF::HashTable.1910"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1910"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1913"* %1, %"struct.WTF::KeyValuePair.1913"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1913"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1910"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1910"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1913"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.1910"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1910"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1913"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.1913"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1913"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1913"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.1913"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.1913"*, i8 } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1910"* nonnull %5, %"class.blink::NGPhysicalFragment"** dereferenceable(8) %53) #12
  %55 = extractvalue { %"struct.WTF::KeyValuePair.1913"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.1913"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.1913"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #12
  %58 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.1913"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.1913"* %55, %"struct.WTF::KeyValuePair.1913"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.1913"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.1913"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.1913"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1913"*, i8 } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1910"*, %"class.blink::NGPhysicalFragment"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::NGPhysicalFragment"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1913"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %32, i64 0, i32 0
  %35 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %34, align 8
  %36 = icmp eq %"class.blink::NGPhysicalFragment"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::NGPhysicalFragment"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1913"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.1913"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1913"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1913"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1913"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::NGPhysicalFragment"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::NGPhysicalFragment"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::NGPhysicalFragment"* %63, inttoptr (i64 -1 to %"class.blink::NGPhysicalFragment"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.1913"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %75, i64 0, i32 0
  %78 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %77, align 8
  %79 = icmp eq %"class.blink::NGPhysicalFragment"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.1913"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1913"*, i8 } undef, %"struct.WTF::KeyValuePair.1913"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.1913"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.1913"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"* } @_ZN3WTF9HashTableIPKN5blink18NGPhysicalFragmentENS_12KeyValuePairIS4_PNS1_18NGLogicalLineItemsEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.1910"*, %"class.blink::NGPhysicalFragment"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1913"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.1910", %"class.WTF::HashTable.1910"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::NGPhysicalFragment"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %34, i64 0, i32 0
  %36 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::NGPhysicalFragment"*
  %38 = icmp eq %"class.blink::NGPhysicalFragment"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::NGPhysicalFragment"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::NGPhysicalFragment"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %63, i64 0, i32 0
  %65 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %64, align 8
  %66 = icmp eq %"class.blink::NGPhysicalFragment"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.1913"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1913"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1913", %"struct.WTF::KeyValuePair.1913"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.1913"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.1913"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"* } undef, %"struct.WTF::KeyValuePair.1913"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"* } %79, %"struct.WTF::KeyValuePair.1913"* %78, 1
  ret { %"struct.WTF::KeyValuePair.1913"*, %"struct.WTF::KeyValuePair.1913"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1631"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 129
  br i1 %3, label %4, label %40

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %5, align 8
  %7 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*
  %10 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1631"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 128, i32* %15, align 8
  br label %81

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.1631"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 128, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %16, %26
  %27 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %37, %26 ], [ %6, %16 ]
  %28 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %36, %26 ], [ %9, %16 ]
  %29 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %27, i64 0, i32 0
  tail call void @_ZN5blink14NGFragmentItemC1EOS0_(%"class.blink::NGFragmentItem"* %29, %"class.blink::NGFragmentItem"* dereferenceable(64) %30) #12
  %31 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %28, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %27, i64 0, i32 1
  %33 = bitcast %"struct.blink::LogicalOffset"* %32 to i64*
  %34 = bitcast %"struct.blink::LogicalOffset"* %31 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  tail call void @_ZN5blink14NGFragmentItemD1Ev(%"class.blink::NGFragmentItem"* %30) #12
  %36 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %28, i64 1
  %37 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %27, i64 1
  %38 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %37, %20
  br i1 %38, label %39, label %26

39:                                               ; preds = %26, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1632"* %21, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %6) #12
  br label %81

40:                                               ; preds = %2
  %41 = zext i32 %1 to i64
  %42 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEmm(i64 %41) #12
  %43 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEPKcv, i64 0, i64 0)) #12
  %44 = udiv i64 %42, 72
  %45 = ptrtoint i8* %43 to i64
  %46 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %46, align 8
  %48 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %47, i64 %50
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %70, label %53

53:                                               ; preds = %40
  %54 = bitcast i8* %43 to %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*
  br label %55

55:                                               ; preds = %53, %55
  %56 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %66, %55 ], [ %47, %53 ]
  %57 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %65, %55 ], [ %54, %53 ]
  %58 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %57, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %56, i64 0, i32 0
  tail call void @_ZN5blink14NGFragmentItemC1EOS0_(%"class.blink::NGFragmentItem"* %58, %"class.blink::NGFragmentItem"* dereferenceable(64) %59) #12
  %60 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %57, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %56, i64 0, i32 1
  %62 = bitcast %"struct.blink::LogicalOffset"* %61 to i64*
  %63 = bitcast %"struct.blink::LogicalOffset"* %60 to i64*
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  tail call void @_ZN5blink14NGFragmentItemD1Ev(%"class.blink::NGFragmentItem"* %59) #12
  %65 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %57, i64 1
  %66 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %56, i64 1
  %67 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %66, %51
  br i1 %67, label %68, label %55

68:                                               ; preds = %55
  %69 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %46, align 8
  br label %70

70:                                               ; preds = %68, %40
  %71 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %69, %68 ], [ %47, %40 ]
  %72 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 1, i64 0
  %73 = bitcast i8* %72 to %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*
  %74 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %71, %73
  br i1 %74, label %77, label %75, !prof !4

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1632"* %76, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %71) #12
  br label %77

77:                                               ; preds = %70, %75
  %78 = bitcast %"class.WTF::Vector.1631"* %0 to i64*
  store atomic i64 %45, i64* %78 monotonic, align 8
  %79 = trunc i64 %44 to i32
  %80 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %79, i32* %80, align 8
  br label %81

81:                                               ; preds = %39, %77, %12
  ret void
}

declare void @_ZN5blink14NGFragmentItemC1EOS0_(%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* dereferenceable(64)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1631"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %31, align 8
  %33 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 128
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22NGFragmentItemsBuilder14ItemWithOffsetEEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1631"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 72
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1631"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 128, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1631"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN5blink14NGFragmentItemC1ERKNS_25NGPhysicalLineBoxFragmentE(%"class.blink::NGFragmentItem"*, %"class.blink::NGPhysicalLineBoxFragment"* dereferenceable(56)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* @_ZN3WTF6VectorIN5blink22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %24, i64 %25
  ret %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %26
}

declare void @_ZN5blink14NGFragmentItemC1EONS_17NGLogicalLineItemENS_11WritingModeE(%"class.blink::NGFragmentItem"*, %"struct.blink::NGLogicalLineItem"* dereferenceable(120), i8 zeroext) unnamed_addr #5

declare void @_ZN5blink14NGFragmentItemC1ERKNS_21NGPhysicalBoxFragmentENS_13TextDirectionE(%"class.blink::NGFragmentItem"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i8 zeroext) unnamed_addr #5

declare void @_ZN5blink14NGFragmentItemC1ERKS0_(%"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* dereferenceable(64)) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 4001}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 2146410443, i32 1073205}
