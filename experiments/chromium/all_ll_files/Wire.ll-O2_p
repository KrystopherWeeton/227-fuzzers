; ModuleID = '../../third_party/dawn/src/dawn_wire/Wire.cpp'
source_filename = "../../third_party/dawn/src/dawn_wire/Wire.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_wire::CommandSerializer" = type { i32 (...)** }
%"class.dawn_wire::CommandHandler" = type { i32 (...)** }

@_ZTVN9dawn_wire17CommandSerializerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_wire::CommandSerializer"*)* @_ZN9dawn_wire17CommandSerializerD2Ev to i8*), i8* bitcast (void (%"class.dawn_wire::CommandSerializer"*)* @_ZN9dawn_wire17CommandSerializerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.dawn_wire::CommandSerializer"*)* @_ZN9dawn_wire17CommandSerializer16OnSerializeErrorEv to i8*)] }, align 8
@_ZTVN9dawn_wire14CommandHandlerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_wire::CommandHandler"*)* @_ZN9dawn_wire14CommandHandlerD2Ev to i8*), i8* bitcast (void (%"class.dawn_wire::CommandHandler"*)* @_ZN9dawn_wire14CommandHandlerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN9dawn_wire17CommandSerializerD1Ev = hidden unnamed_addr alias void (%"class.dawn_wire::CommandSerializer"*), void (%"class.dawn_wire::CommandSerializer"*)* @_ZN9dawn_wire17CommandSerializerD2Ev
@_ZN9dawn_wire14CommandHandlerD1Ev = hidden unnamed_addr alias void (%"class.dawn_wire::CommandHandler"*), void (%"class.dawn_wire::CommandHandler"*)* @_ZN9dawn_wire14CommandHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9dawn_wire17CommandSerializerC2Ev(%"class.dawn_wire::CommandSerializer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_wire::CommandSerializer", %"class.dawn_wire::CommandSerializer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN9dawn_wire17CommandSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9dawn_wire17CommandSerializerD2Ev(%"class.dawn_wire::CommandSerializer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9dawn_wire17CommandSerializerD0Ev(%"class.dawn_wire::CommandSerializer"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #4
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9dawn_wire17CommandSerializer16OnSerializeErrorEv(%"class.dawn_wire::CommandSerializer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9dawn_wire14CommandHandlerC2Ev(%"class.dawn_wire::CommandHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_wire::CommandHandler", %"class.dawn_wire::CommandHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9dawn_wire14CommandHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9dawn_wire14CommandHandlerD2Ev(%"class.dawn_wire::CommandHandler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9dawn_wire14CommandHandlerD0Ev(%"class.dawn_wire::CommandHandler"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #4
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
