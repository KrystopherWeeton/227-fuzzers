; ModuleID = '../../third_party/skia/modules/skottie/src/effects/MotionTileEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/MotionTileEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.sk_sp.79 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.86 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%class.SkPaint = type <{ %class.sk_sp.94, %class.sk_sp.62, %class.sk_sp.95, %class.sk_sp.78, %class.sk_sp.96, %struct.SkRGBA4f, float, float, %union.anon.97, [4 x i8] }>
%class.sk_sp.94 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.62 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.95 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.78 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.96 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.97 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %class.sk_sp.32*, %class.sk_sp.32*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.sk_sp.32* }
%"class.sksg::CustomRenderNode" = type { %"class.sksg::RenderNode.base", %"class.std::__1::vector.50" }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkV2 = type { float, float }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::internal::(anonymous namespace)::TileRenderNode" = type { %"class.sksg::CustomRenderNode", %struct.SkSize, %struct.SkPoint, float, float, float, float, float, i8, i8, %class.sk_sp.57, %class.sk_sp.62, %class.sk_sp.62 }
%struct.SkPoint = type { float, float }
%class.sk_sp.57 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.58", [7 x i8] }>
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i8 }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.49 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.49 = type { %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* }
%"class.skottie::internal::(anonymous namespace)::MotionTileAdapter" = type <{ %"class.skottie::internal::DiscardableAdapterBase", %struct.SkV2, float, float, float, float, float, float, float, [4 x i8] }>
%"class.sksg::InvalidationController" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.79, %"class.std::__1::unique_ptr.80", %class.sk_sp.86, %"class.std::__1::unique_ptr.87" }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.64, [384 x i64], %class.sk_sp.65, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.66", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.72" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.64 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.65 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBBHFactory = type { i32 (...)** }
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.78, %class.sk_sp.62, %class.sk_sp.62, %class.SkMatrix, %class.SkMatrix, float, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_117MotionTileAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117MotionTileAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117MotionTileAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal12_GLOBAL__N_114TileRenderNodeE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*)* @_ZN7skottie8internal12_GLOBAL__N_114TileRenderNodeD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*)* @_ZN7skottie8internal12_GLOBAL__N_114TileRenderNodeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK7skottie8internal12_GLOBAL__N_114TileRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %struct.SkPoint*)* @_ZNK7skottie8internal12_GLOBAL__N_114TileRenderNode8onNodeAtERK7SkPoint to i8*)] }, align 8
@__const._ZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix.recorder = private unnamed_addr constant { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.79, %"class.std::__1::unique_ptr.80", %class.sk_sp.86, %"class.std::__1::unique_ptr.87" } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.79 { %class.SkBBoxHierarchy* inttoptr (i64 -6148914691236517206 to %class.SkBBoxHierarchy*) }, %"class.std::__1::unique_ptr.80" { %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.82" { %class.SkRecorder* inttoptr (i64 -6148914691236517206 to %class.SkRecorder*) } } }, %class.sk_sp.86 { %class.SkRecord* inttoptr (i64 -6148914691236517206 to %class.SkRecord*) }, %"class.std::__1::unique_ptr.87" { %"class.std::__1::__compressed_pair.88" { %"struct.std::__1::__compressed_pair_elem.89" { %class.SkMiniRecorder* inttoptr (i64 -6148914691236517206 to %class.SkMiniRecorder*) } } } }, align 8
@_ZZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrixE6colors = internal constant [2 x i32] [i32 -1, i32 0], align 4
@_ZZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrixE3pos = internal constant [2 x float] [float 5.000000e-01, float 5.000000e-01], align 4
@__const._ZNK7skottie8internal12_GLOBAL__N_114TileRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.94 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.62 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.95 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.78 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.96 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.97 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder22attachMotionTileEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.50", align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %8 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %7, align 8
  %9 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 2
  %10 = tail call i8* @_Znwm(i64 96) #14, !noalias !2
  %11 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.32* %3 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %11, align 8, !noalias !2
  %14 = tail call i8* @_Znwm(i64 136) #14, !noalias !7
  %15 = bitcast %"class.std::__1::vector.50"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15, !noalias !7
  %16 = tail call i8* @_Znwm(i64 8) #14, !noalias !7
  %17 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %5, i64 0, i32 0, i32 1
  %18 = bitcast %class.sk_sp.32** %17 to i8**
  store i8* %16, i8** %18, align 8, !noalias !7
  %19 = bitcast %"class.std::__1::vector.50"* %5 to i8**
  store i8* %16, i8** %19, align 8, !noalias !7
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %class.sk_sp.32** %21 to i8**
  store i8* %20, i8** %22, align 8, !noalias !7
  %23 = bitcast i8* %16 to %"class.sksg::RenderNode"**
  %24 = inttoptr i64 %13 to %"class.sksg::RenderNode"*
  %25 = icmp eq i64 %13, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic, !noalias !10
  br label %29

29:                                               ; preds = %26, %4
  store %"class.sksg::RenderNode"* %24, %"class.sksg::RenderNode"** %23, align 8, !noalias !7
  %30 = bitcast i8* %14 to %"class.sksg::CustomRenderNode"*
  %31 = bitcast %class.sk_sp.32** %17 to i64*
  %32 = ptrtoint i8* %20 to i64
  store i64 %32, i64* %31, align 8, !noalias !7
  call void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"* nonnull %30, %"class.std::__1::vector.50"* nonnull dereferenceable(24) %5) #15, !noalias !7
  %33 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %5, i64 0, i32 0, i32 0
  %34 = load %class.sk_sp.32*, %class.sk_sp.32** %33, align 8, !noalias !7
  %35 = icmp eq %class.sk_sp.32* %34, null
  br i1 %35, label %62, label %36

36:                                               ; preds = %29
  %37 = bitcast %class.sk_sp.32* %34 to i8*
  %38 = load %class.sk_sp.32*, %class.sk_sp.32** %17, align 8, !noalias !7
  %39 = icmp eq %class.sk_sp.32* %38, %34
  br i1 %39, label %60, label %40

40:                                               ; preds = %36, %56
  %41 = phi %class.sk_sp.32* [ %42, %56 ], [ %38, %36 ]
  %42 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %41, i64 -1
  %43 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %42, i64 0, i32 0
  %44 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %43, align 8, !noalias !10
  %45 = icmp eq %"class.sksg::RenderNode"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel, !noalias !10
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.sksg::RenderNode"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.sksg::RenderNode"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8, !noalias !10
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8, !noalias !10
  call void %55(%class.SkRefCntBase* nonnull %51) #15, !noalias !10
  br label %56

56:                                               ; preds = %50, %46, %40
  %57 = icmp eq %class.sk_sp.32* %42, %34
  br i1 %57, label %58, label %40

58:                                               ; preds = %56
  %59 = load i8*, i8** %19, align 8, !noalias !7
  br label %60

60:                                               ; preds = %58, %36
  %61 = phi i8* [ %59, %58 ], [ %37, %36 ]
  store %class.sk_sp.32* %34, %class.sk_sp.32** %17, align 8, !noalias !7
  call void @_ZdlPv(i8* %61) #14, !noalias !10
  br label %62

62:                                               ; preds = %60, %29
  br i1 %25, label %73, label %63

63:                                               ; preds = %62
  %64 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel, !noalias !10
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = inttoptr i64 %13 to %class.SkRefCntBase*
  %69 = inttoptr i64 %13 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8, !noalias !10
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8, !noalias !10
  call void %72(%class.SkRefCntBase* nonnull %68) #15, !noalias !10
  br label %73

73:                                               ; preds = %67, %63, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15, !noalias !7
  %74 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_114TileRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8, !noalias !7
  %75 = getelementptr inbounds i8, i8* %14, i64 72
  %76 = bitcast %struct.SkSize* %9 to i64*
  %77 = bitcast i8* %75 to i64*
  %78 = load i64, i64* %76, align 4, !noalias !7
  store i64 %78, i64* %77, align 8, !noalias !7
  %79 = getelementptr inbounds i8, i8* %14, i64 80
  %80 = bitcast i8* %79 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %80, align 8, !noalias !7
  %81 = getelementptr inbounds i8, i8* %14, i64 96
  %82 = bitcast i8* %81 to float*
  store float 1.000000e+00, float* %82, align 8, !noalias !7
  %83 = getelementptr inbounds i8, i8* %14, i64 100
  %84 = bitcast i8* %83 to float*
  store float 1.000000e+00, float* %84, align 4, !noalias !7
  %85 = getelementptr inbounds i8, i8* %14, i64 104
  %86 = bitcast i8* %85 to float*
  store float 0.000000e+00, float* %86, align 8, !noalias !7
  %87 = getelementptr inbounds i8, i8* %14, i64 108
  store i8 0, i8* %87, align 4, !noalias !7
  %88 = getelementptr inbounds i8, i8* %14, i64 109
  store i8 0, i8* %88, align 1, !noalias !7
  %89 = getelementptr inbounds i8, i8* %14, i64 112
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #15, !noalias !7
  %90 = ptrtoint i8* %14 to i64
  %91 = getelementptr inbounds i8, i8* %10, i64 8
  %92 = bitcast i8* %91 to i32*
  store i32 1, i32* %92, align 4, !noalias !2
  %93 = bitcast i8* %10 to i32 (...)***
  %94 = getelementptr inbounds i8, i8* %10, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 25, i1 false) #15, !noalias !2
  %95 = getelementptr inbounds i8, i8* %10, i64 48
  %96 = bitcast i8* %95 to i64*
  store i64 %90, i64* %96, align 8, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117MotionTileAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8, !noalias !2
  %97 = getelementptr inbounds i8, i8* %10, i64 56
  %98 = bitcast i8* %97 to %struct.SkV2*
  %99 = getelementptr inbounds i8, i8* %10, i64 64
  %100 = bitcast i8* %99 to float*
  %101 = getelementptr inbounds i8, i8* %10, i64 68
  %102 = bitcast i8* %101 to float*
  %103 = bitcast i8* %97 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %103, align 8, !noalias !2
  %104 = getelementptr inbounds i8, i8* %10, i64 72
  %105 = bitcast i8* %104 to float*
  %106 = getelementptr inbounds i8, i8* %10, i64 76
  %107 = bitcast i8* %106 to float*
  %108 = getelementptr inbounds i8, i8* %10, i64 80
  %109 = bitcast i8* %108 to float*
  %110 = getelementptr inbounds i8, i8* %10, i64 84
  %111 = bitcast i8* %110 to float*
  %112 = bitcast i8* %104 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %112, align 8, !noalias !2
  %113 = getelementptr inbounds i8, i8* %10, i64 88
  %114 = bitcast i8* %113 to float*
  store float 0.000000e+00, float* %114, align 8, !noalias !2
  %115 = bitcast i8* %10 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %116 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #15, !noalias !2
  %117 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %116, i64 0, i32 0, i64 0
  %118 = load i8, i8* %117, align 8, !noalias !2
  %119 = and i8 %118, 7
  %120 = icmp eq i8 %119, 7
  %121 = bitcast %"class.skjson::Value"* %116 to %"class.skjson::ObjectValue"*
  %122 = select i1 %120, %"class.skjson::ObjectValue"* %121, %"class.skjson::ObjectValue"* null
  %123 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %122, %struct.SkV2* %98) #15, !noalias !2
  %124 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #15, !noalias !2
  %125 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %124, i64 0, i32 0, i64 0
  %126 = load i8, i8* %125, align 8, !noalias !2
  %127 = and i8 %126, 7
  %128 = icmp eq i8 %127, 7
  %129 = bitcast %"class.skjson::Value"* %124 to %"class.skjson::ObjectValue"*
  %130 = select i1 %128, %"class.skjson::ObjectValue"* %129, %"class.skjson::ObjectValue"* null
  %131 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %130, float* %100) #15, !noalias !2
  %132 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #15, !noalias !2
  %133 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %132, i64 0, i32 0, i64 0
  %134 = load i8, i8* %133, align 8, !noalias !2
  %135 = and i8 %134, 7
  %136 = icmp eq i8 %135, 7
  %137 = bitcast %"class.skjson::Value"* %132 to %"class.skjson::ObjectValue"*
  %138 = select i1 %136, %"class.skjson::ObjectValue"* %137, %"class.skjson::ObjectValue"* null
  %139 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %138, float* %102) #15, !noalias !2
  %140 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 3) #15, !noalias !2
  %141 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %140, i64 0, i32 0, i64 0
  %142 = load i8, i8* %141, align 8, !noalias !2
  %143 = and i8 %142, 7
  %144 = icmp eq i8 %143, 7
  %145 = bitcast %"class.skjson::Value"* %140 to %"class.skjson::ObjectValue"*
  %146 = select i1 %144, %"class.skjson::ObjectValue"* %145, %"class.skjson::ObjectValue"* null
  %147 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %146, float* %105) #15, !noalias !2
  %148 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 4) #15, !noalias !2
  %149 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %148, i64 0, i32 0, i64 0
  %150 = load i8, i8* %149, align 8, !noalias !2
  %151 = and i8 %150, 7
  %152 = icmp eq i8 %151, 7
  %153 = bitcast %"class.skjson::Value"* %148 to %"class.skjson::ObjectValue"*
  %154 = select i1 %152, %"class.skjson::ObjectValue"* %153, %"class.skjson::ObjectValue"* null
  %155 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %154, float* %107) #15, !noalias !2
  %156 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 5) #15, !noalias !2
  %157 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %156, i64 0, i32 0, i64 0
  %158 = load i8, i8* %157, align 8, !noalias !2
  %159 = and i8 %158, 7
  %160 = icmp eq i8 %159, 7
  %161 = bitcast %"class.skjson::Value"* %156 to %"class.skjson::ObjectValue"*
  %162 = select i1 %160, %"class.skjson::ObjectValue"* %161, %"class.skjson::ObjectValue"* null
  %163 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %162, float* %109) #15, !noalias !2
  %164 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 6) #15, !noalias !2
  %165 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %164, i64 0, i32 0, i64 0
  %166 = load i8, i8* %165, align 8, !noalias !2
  %167 = and i8 %166, 7
  %168 = icmp eq i8 %167, 7
  %169 = bitcast %"class.skjson::Value"* %164 to %"class.skjson::ObjectValue"*
  %170 = select i1 %168, %"class.skjson::ObjectValue"* %169, %"class.skjson::ObjectValue"* null
  %171 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %170, float* %111) #15, !noalias !2
  %172 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 7) #15, !noalias !2
  %173 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %172, i64 0, i32 0, i64 0
  %174 = load i8, i8* %173, align 8, !noalias !2
  %175 = and i8 %174, 7
  %176 = icmp eq i8 %175, 7
  %177 = bitcast %"class.skjson::Value"* %172 to %"class.skjson::ObjectValue"*
  %178 = select i1 %176, %"class.skjson::ObjectValue"* %177, %"class.skjson::ObjectValue"* null
  %179 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %8, %"class.skjson::ObjectValue"* %178, float* %114) #15, !noalias !2
  %180 = ptrtoint i8* %10 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %115) #15, !noalias !2
  %181 = bitcast i8* %95 to %"class.skottie::internal::(anonymous namespace)::TileRenderNode"**
  %182 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %181, align 8, !noalias !11
  %183 = icmp eq %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %73
  %185 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = atomicrmw add i32* %185, i32 1 monotonic
  br label %187

187:                                              ; preds = %73, %184
  %188 = ptrtoint %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %182 to i64
  %189 = bitcast i8* %94 to %class.sk_sp.6**
  %190 = load %class.sk_sp.6*, %class.sk_sp.6** %189, align 8, !noalias !11
  %191 = getelementptr inbounds i8, i8* %10, i64 24
  %192 = bitcast i8* %191 to %class.sk_sp.6**
  %193 = load %class.sk_sp.6*, %class.sk_sp.6** %192, align 8, !noalias !11
  %194 = icmp eq %class.sk_sp.6* %190, %193
  br i1 %194, label %227, label %195

195:                                              ; preds = %187
  %196 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %8, i64 0, i32 11
  %197 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %196, align 8, !noalias !11
  %198 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #15, !noalias !11
  %199 = bitcast %class.sk_sp.6* %6 to i64*
  store i64 %180, i64* %199, align 8, !noalias !11
  %200 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 1
  %201 = load %class.sk_sp.6*, %class.sk_sp.6** %200, align 8
  %202 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 2, i32 0, i32 0
  %203 = load %class.sk_sp.6*, %class.sk_sp.6** %202, align 8
  %204 = icmp ult %class.sk_sp.6* %201, %203
  br i1 %204, label %205, label %211

205:                                              ; preds = %195
  %206 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %206, align 8, !noalias !11
  %207 = bitcast %class.sk_sp.6* %201 to i64*
  store i64 %180, i64* %207, align 8
  %208 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %201, i64 1
  %209 = ptrtoint %class.sk_sp.6* %208 to i64
  %210 = bitcast %class.sk_sp.6** %200 to i64*
  store i64 %209, i64* %210, align 8
  br label %212

211:                                              ; preds = %195
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %197, %class.sk_sp.6* nonnull dereferenceable(8) %6) #15
  br label %212

212:                                              ; preds = %211, %205
  %213 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %214 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %213, align 8, !noalias !11
  %215 = icmp eq %"class.skottie::internal::Animator"* %214, null
  br i1 %215, label %226, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %214, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 -1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = bitcast %"class.skottie::internal::Animator"* %214 to %class.SkRefCntBase*
  %222 = bitcast %"class.skottie::internal::Animator"* %214 to void (%class.SkRefCntBase*)***
  %223 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %222, align 8
  %224 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %223, i64 2
  %225 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, align 8
  call void %225(%class.SkRefCntBase* nonnull %221) #15
  br label %226

226:                                              ; preds = %220, %216, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #15, !noalias !11
  br label %242

227:                                              ; preds = %187
  %228 = bitcast i8* %10 to %"class.skottie::internal::Animator"*
  %229 = bitcast i8* %10 to i1 (%"class.skottie::internal::Animator"*, float)***
  %230 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %229, align 8, !noalias !11
  %231 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %230, i64 3
  %232 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %231, align 8
  %233 = call zeroext i1 %232(%"class.skottie::internal::Animator"* nonnull %228, float 0.000000e+00) #15
  %234 = atomicrmw add i32* %92, i32 -1 acq_rel, !noalias !11
  %235 = icmp eq i32 %234, 1
  br i1 %235, label %236, label %242

236:                                              ; preds = %227
  %237 = bitcast i8* %10 to %class.SkRefCntBase*
  %238 = bitcast i8* %10 to void (%class.SkRefCntBase*)***
  %239 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %238, align 8, !noalias !11
  %240 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %239, i64 2
  %241 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %240, align 8
  call void %241(%class.SkRefCntBase* nonnull %237) #15
  br label %242

242:                                              ; preds = %236, %227, %226
  %243 = bitcast %class.sk_sp.32* %0 to i64*
  store i64 %188, i64* %243, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #15
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117MotionTileAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #15
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117MotionTileAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 1
  %5 = bitcast %struct.SkV2* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 1, i32 1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = bitcast i32 %6 to float
  %14 = fcmp oeq float %12, %13
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %3, i64 0, i32 2, i32 1
  %17 = load float, float* %16, align 4
  %18 = bitcast i32 %9 to float
  %19 = fcmp oeq float %17, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %15, %1
  %21 = bitcast %struct.SkPoint* %10 to i32*
  store i32 %6, i32* %21, align 8
  %22 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %3, i64 0, i32 2, i32 1
  %23 = bitcast float* %22 to i32*
  store i32 %9, i32* %23, align 4
  %24 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %3 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %24, i1 zeroext true) #15
  %25 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* [ %3, %15 ], [ %25, %20 ]
  %28 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %27, i64 0, i32 3
  %30 = load float, float* %29, align 8
  %31 = load float, float* %28, align 4
  %32 = fcmp oeq float %30, %31
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  store float %31, float* %29, align 8
  %34 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %27 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %34, i1 zeroext true) #15
  %35 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  br label %36

36:                                               ; preds = %26, %33
  %37 = phi %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* [ %27, %26 ], [ %35, %33 ]
  %38 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %37, i64 0, i32 4
  %40 = load float, float* %39, align 4
  %41 = load float, float* %38, align 4
  %42 = fcmp oeq float %40, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  store float %41, float* %39, align 4
  %44 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %37 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %44, i1 zeroext true) #15
  %45 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  br label %46

46:                                               ; preds = %36, %43
  %47 = phi %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* [ %37, %36 ], [ %45, %43 ]
  %48 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 4
  %49 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %47, i64 0, i32 5
  %50 = load float, float* %49, align 8
  %51 = load float, float* %48, align 4
  %52 = fcmp oeq float %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  store float %51, float* %49, align 8
  %54 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %47 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %54, i1 zeroext true) #15
  %55 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* [ %47, %46 ], [ %55, %53 ]
  %58 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 5
  %59 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %57, i64 0, i32 6
  %60 = load float, float* %59, align 4
  %61 = load float, float* %58, align 4
  %62 = fcmp oeq float %60, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %56
  store float %61, float* %59, align 4
  %64 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %57 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %64, i1 zeroext true) #15
  %65 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  br label %66

66:                                               ; preds = %56, %63
  %67 = phi %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* [ %57, %56 ], [ %65, %63 ]
  %68 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 7
  %69 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %67, i64 0, i32 7
  %70 = load float, float* %69, align 8
  %71 = load float, float* %68, align 4
  %72 = fcmp oeq float %70, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %66
  store float %71, float* %69, align 8
  %74 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %67 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %74, i1 zeroext true) #15
  %75 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  br label %76

76:                                               ; preds = %66, %73
  %77 = phi %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* [ %67, %66 ], [ %75, %73 ]
  %78 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 6
  %79 = load float, float* %78, align 4
  %80 = fcmp une float %79, 0.000000e+00
  %81 = zext i1 %80 to i8
  %82 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %77, i64 0, i32 8
  %83 = load i8, i8* %82, align 4, !range !12
  %84 = icmp eq i8 %83, %81
  br i1 %84, label %88, label %85

85:                                               ; preds = %76
  store i8 %81, i8* %82, align 4
  %86 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %77 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %86, i1 zeroext true) #15
  %87 = load %"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.skottie::internal::(anonymous namespace)::TileRenderNode"** %2, align 8
  br label %88

88:                                               ; preds = %76, %85
  %89 = phi %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* [ %77, %76 ], [ %87, %85 ]
  %90 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter", %"class.skottie::internal::(anonymous namespace)::MotionTileAdapter"* %0, i64 0, i32 8
  %91 = load float, float* %90, align 4
  %92 = fcmp une float %91, 0.000000e+00
  %93 = zext i1 %92 to i8
  %94 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %89, i64 0, i32 9
  %95 = load i8, i8* %94, align 1, !range !12
  %96 = icmp eq i8 %95, %93
  br i1 %96, label %99, label %97

97:                                               ; preds = %88
  store i8 %93, i8* %94, align 1
  %98 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %89 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %98, i1 zeroext true) #15
  br label %99

99:                                               ; preds = %88, %97
  ret void
}

declare void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"*, %"class.std::__1::vector.50"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_114TileRenderNodeD2Ev(%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_114TileRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 12, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 11, i32 0
  %18 = load %class.SkShader*, %class.SkShader** %17, align 8
  %19 = icmp eq %class.SkShader* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkShader, %class.SkShader* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkShader* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkShader* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #15
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 10, i32 0
  %32 = load %class.SkPicture*, %class.SkPicture** %31, align 8
  %33 = icmp eq %class.SkPicture* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkPicture* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkPicture* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #15
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0
  tail call void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"* %45) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_114TileRenderNodeD0Ev(%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_114TileRenderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 12, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 11, i32 0
  %18 = load %class.SkShader*, %class.SkShader** %17, align 8
  %19 = icmp eq %class.SkShader* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkShader, %class.SkShader* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkShader* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkShader* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #15
  br label %30

30:                                               ; preds = %24, %20, %16
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 10, i32 0
  %32 = load %class.SkPicture*, %class.SkPicture** %31, align 8
  %33 = icmp eq %class.SkPicture* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkPicture* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkPicture* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #15
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0
  tail call void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"* %45) #15
  %46 = bitcast %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %46) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix(%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #5 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %class.SkPictureRecorder, align 8
  %6 = alloca %class.sk_sp.57, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %12 = alloca %class.sk_sp.62, align 8
  %13 = alloca %class.SkMatrix, align 16
  %14 = alloca [2 x %struct.SkPoint], align 16
  %15 = alloca %class.sk_sp.62, align 8
  %16 = alloca %class.sk_sp.62, align 8
  %17 = alloca %class.sk_sp.62, align 8
  %18 = alloca %class.sk_sp.62, align 8
  %19 = alloca %class.sk_sp.62, align 8
  %20 = alloca %class.sk_sp.62, align 8
  %21 = alloca %class.sk_sp.62, align 8
  %22 = alloca %class.sk_sp.62, align 8
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 10
  %24 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %23, i64 0, i32 0
  %25 = load %class.SkPicture*, %class.SkPicture** %24, align 8
  %26 = icmp eq %class.SkPicture* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0
  %29 = tail call zeroext i1 @_ZNK4sksg16CustomRenderNode16hasChildrenInvalEv(%"class.sksg::CustomRenderNode"* %28) #15
  br i1 %29, label %30, label %79

30:                                               ; preds = %3, %27
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %class.sk_sp.32*, %class.sk_sp.32** %31, align 8
  %33 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %32, i64 0, i32 0
  %34 = bitcast %class.sk_sp.32* %32 to %"class.sksg::Node"**
  %35 = load %"class.sksg::Node"*, %"class.sksg::Node"** %34, align 8
  %36 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %35, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #15
  %37 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %37) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.79, %"class.std::__1::unique_ptr.80", %class.sk_sp.86, %"class.std::__1::unique_ptr.87" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.79, %"class.std::__1::unique_ptr.80", %class.sk_sp.86, %"class.std::__1::unique_ptr.87" }* @__const._ZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix.recorder, i64 0, i32 0), i64 56, i1 false)
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %5) #15
  %38 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %33, align 8
  %39 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 1, i32 0
  %40 = bitcast float* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %43 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #15
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %44, align 8
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %46 = bitcast <2 x float>* %45 to i64*
  store i64 %41, i64* %46, align 8
  %47 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %42, %class.SkBBHFactory* null) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #15
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %38, %class.SkCanvas* %47, %"struct.sksg::RenderNode::RenderContext"* null) #15
  %48 = bitcast %class.sk_sp.57* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.57* nonnull sret %6, %class.SkPictureRecorder* nonnull %5) #15
  %49 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %6, i64 0, i32 0
  %50 = bitcast %class.sk_sp.57* %6 to i64*
  %51 = load i64, i64* %50, align 8
  store %class.SkPicture* null, %class.SkPicture** %49, align 8
  %52 = load %class.SkPicture*, %class.SkPicture** %24, align 8
  %53 = bitcast %class.sk_sp.57* %23 to i64*
  store i64 %51, i64* %53, align 8
  %54 = icmp eq %class.SkPicture* %52, null
  br i1 %54, label %78, label %55

55:                                               ; preds = %30
  %56 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %class.SkPicture* %52 to %class.SkRefCntBase*
  %61 = bitcast %class.SkPicture* %52 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  call void %64(%class.SkRefCntBase* nonnull %60) #15
  br label %65

65:                                               ; preds = %55, %59
  %66 = load %class.SkPicture*, %class.SkPicture** %49, align 8
  %67 = icmp eq %class.SkPicture* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkPicture* %66 to %class.SkRefCntBase*
  %74 = bitcast %class.SkPicture* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #15
  br label %78

78:                                               ; preds = %30, %65, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %37) #15
  br label %79

79:                                               ; preds = %78, %27
  %80 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 3
  %81 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 1, i32 0
  %82 = bitcast float* %80 to <2 x float>*
  %83 = load <2 x float>, <2 x float>* %82, align 4
  %84 = fcmp ogt <2 x float> %83, <float 1.000000e+02, float 1.000000e+02>
  %85 = select <2 x i1> %84, <2 x float> <float 1.000000e+02, float 1.000000e+02>, <2 x float> %83
  %86 = fcmp ogt <2 x float> %85, zeroinitializer
  %87 = select <2 x i1> %86, <2 x float> %85, <2 x float> zeroinitializer
  %88 = fmul <2 x float> %87, <float 0x3F847AE140000000, float 0x3F847AE140000000>
  %89 = bitcast float* %81 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 4
  %91 = fmul <2 x float> %90, %88
  %92 = fcmp olt <2 x float> %91, <float 1.000000e+00, float 1.000000e+00>
  %93 = select <2 x i1> %92, <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float> %91
  %94 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #15
  %95 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0, i64 0
  %96 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %97 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1, i64 0
  %98 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %99 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 2, i32 0
  %100 = bitcast float* %99 to <2 x float>*
  %101 = load <2 x float>, <2 x float>* %100, align 8
  %102 = fmul <2 x float> %93, <float 5.000000e-01, float 5.000000e-01>
  %103 = fsub <2 x float> %101, %102
  %104 = fadd <2 x float> %93, %103
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %103, <2 x float>* %105, align 8
  %106 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %104, <2 x float>* %106, align 8
  %107 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %107) #15
  %108 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %109 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #15
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %110, align 8
  %111 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> %90, <2 x float>* %111, align 8
  %112 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 0
  %113 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %113, align 16, !alias.scope !13
  %114 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %115, align 16, !alias.scope !13
  %116 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %116, align 16, !alias.scope !13
  store i32 16, i32* %108, align 4, !alias.scope !13
  %117 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %11, %struct.SkRect* nonnull dereferenceable(16) %8, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #15
  %118 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 8
  %119 = load i8, i8* %118, align 4, !range !12
  %120 = icmp eq i8 %119, 0
  %121 = select i1 %120, i32 1, i32 2
  %122 = bitcast %class.sk_sp.62* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #15
  %123 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %12, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %123, align 8
  %124 = load %class.SkPicture*, %class.SkPicture** %24, align 8
  call void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp.62* nonnull sret %12, %class.SkPicture* %124, i32 %121, i32 %121, i32 1, %class.SkMatrix* nonnull %9, %struct.SkRect* null) #15
  %125 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 7
  %126 = load float, float* %125, align 8
  %127 = fcmp une float %126, 0.000000e+00
  br i1 %127, label %128, label %358

128:                                              ; preds = %79
  %129 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 9
  %130 = load i8, i8* %129, align 1, !range !12
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = load float, float* %97, align 8
  %134 = load float, float* %95, align 8
  %135 = fsub float %133, %134
  %136 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %135, i32 0
  br label %142

137:                                              ; preds = %128
  %138 = load float, float* %98, align 4
  %139 = load float, float* %96, align 4
  %140 = fsub float %138, %139
  %141 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %140, i32 1
  br label %142

142:                                              ; preds = %137, %132
  %143 = phi <2 x float> [ %136, %132 ], [ %141, %137 ]
  %144 = extractelement <2 x float> %143, i32 0
  %145 = load float, float* %112, align 16
  %146 = fdiv float %144, %145
  %147 = extractelement <2 x float> %143, i32 1
  %148 = load float, float* %114, align 16
  %149 = fdiv float %147, %148
  %150 = fmul float %126, 0x3F66C16C20000000
  %151 = fpext float %150 to double
  %152 = call double @fmod(double %151, double 1.000000e+00) #15
  %153 = fptrunc double %152 to float
  %154 = fmul float %146, %153
  %155 = fmul float %149, %153
  %156 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %156) #15
  %157 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %158 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %158, align 16, !alias.scope !18
  %159 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %160 = bitcast float* %159 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %160, align 16, !alias.scope !18
  %161 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %161, align 16, !alias.scope !18
  store i32 16, i32* %157, align 4, !alias.scope !18
  %162 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %13, float %154, float %155) #15
  %163 = bitcast [2 x %struct.SkPoint]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #15
  %164 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 0
  %165 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 0, i32 0
  %166 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 0, i32 1
  %167 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 1, i32 0
  %168 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 1, i32 1
  %169 = load float, float* %95, align 8
  store float %169, float* %165, align 16
  %170 = load float, float* %96, align 4
  store float %170, float* %166, align 4
  %171 = load float, float* %97, align 8
  %172 = fsub float %171, %169
  %173 = fsub float %172, %144
  %174 = fmul float %173, 2.000000e+00
  %175 = fadd float %169, %174
  store float %175, float* %167, align 8
  %176 = load float, float* %98, align 4
  %177 = fsub float %176, %170
  %178 = fsub float %177, %147
  %179 = fmul float %178, 2.000000e+00
  %180 = fadd float %170, %179
  store float %180, float* %168, align 4
  %181 = bitcast %class.sk_sp.62* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #15
  %182 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %15, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %182, align 8
  call void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.62* nonnull sret %15, %struct.SkPoint* nonnull %164, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @_ZZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrixE6colors, i64 0, i64 0), float* getelementptr inbounds ([2 x float], [2 x float]* @_ZZN7skottie8internal12_GLOBAL__N_114TileRenderNode12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrixE3pos, i64 0, i64 0), i32 2, i32 1, i32 0, %class.SkMatrix* null) #15
  %183 = bitcast %class.sk_sp.62* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #15
  %184 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %17, i64 0, i32 0
  %185 = load %class.SkShader*, %class.SkShader** %182, align 8
  %186 = icmp eq %class.SkShader* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %142
  %188 = getelementptr inbounds %class.SkShader, %class.SkShader* %185, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 1 monotonic
  br label %190

190:                                              ; preds = %142, %187
  store %class.SkShader* %185, %class.SkShader** %184, align 8
  %191 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %18, i64 0, i32 0
  %192 = load %class.SkShader*, %class.SkShader** %123, align 8
  %193 = icmp eq %class.SkShader* %192, null
  br i1 %193, label %197, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %class.SkShader, %class.SkShader* %192, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw add i32* %195, i32 1 monotonic
  br label %197

197:                                              ; preds = %190, %194
  store %class.SkShader* %192, %class.SkShader** %191, align 8
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.62* nonnull sret %16, i32 5, %class.sk_sp.62* nonnull %17, %class.sk_sp.62* nonnull %18) #15
  %198 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 11
  %199 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %16, i64 0, i32 0
  %200 = bitcast %class.sk_sp.62* %16 to i64*
  %201 = load i64, i64* %200, align 8
  store %class.SkShader* null, %class.SkShader** %199, align 8
  %202 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %198, i64 0, i32 0
  %203 = load %class.SkShader*, %class.SkShader** %202, align 8
  %204 = bitcast %class.sk_sp.62* %198 to i64*
  store i64 %201, i64* %204, align 8
  %205 = icmp eq %class.SkShader* %203, null
  br i1 %205, label %216, label %206

206:                                              ; preds = %197
  %207 = getelementptr inbounds %class.SkShader, %class.SkShader* %203, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %216

210:                                              ; preds = %206
  %211 = bitcast %class.SkShader* %203 to %class.SkRefCntBase*
  %212 = bitcast %class.SkShader* %203 to void (%class.SkRefCntBase*)***
  %213 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %212, align 8
  %214 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %213, i64 2
  %215 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %214, align 8
  call void %215(%class.SkRefCntBase* nonnull %211) #15
  br label %216

216:                                              ; preds = %197, %206, %210
  %217 = load %class.SkShader*, %class.SkShader** %199, align 8
  %218 = icmp eq %class.SkShader* %217, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %class.SkShader, %class.SkShader* %217, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = atomicrmw add i32* %220, i32 -1 acq_rel
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %223, label %229

223:                                              ; preds = %219
  %224 = bitcast %class.SkShader* %217 to %class.SkRefCntBase*
  %225 = bitcast %class.SkShader* %217 to void (%class.SkRefCntBase*)***
  %226 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %225, align 8
  %227 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %226, i64 2
  %228 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %227, align 8
  call void %228(%class.SkRefCntBase* nonnull %224) #15
  br label %229

229:                                              ; preds = %216, %219, %223
  %230 = load %class.SkShader*, %class.SkShader** %191, align 8
  %231 = icmp eq %class.SkShader* %230, null
  br i1 %231, label %242, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %class.SkShader, %class.SkShader* %230, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = atomicrmw add i32* %233, i32 -1 acq_rel
  %235 = icmp eq i32 %234, 1
  br i1 %235, label %236, label %242

236:                                              ; preds = %232
  %237 = bitcast %class.SkShader* %230 to %class.SkRefCntBase*
  %238 = bitcast %class.SkShader* %230 to void (%class.SkRefCntBase*)***
  %239 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %238, align 8
  %240 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %239, i64 2
  %241 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %240, align 8
  call void %241(%class.SkRefCntBase* nonnull %237) #15
  br label %242

242:                                              ; preds = %229, %232, %236
  %243 = load %class.SkShader*, %class.SkShader** %184, align 8
  %244 = icmp eq %class.SkShader* %243, null
  br i1 %244, label %255, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %class.SkShader, %class.SkShader* %243, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = atomicrmw add i32* %246, i32 -1 acq_rel
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %255

249:                                              ; preds = %245
  %250 = bitcast %class.SkShader* %243 to %class.SkRefCntBase*
  %251 = bitcast %class.SkShader* %243 to void (%class.SkRefCntBase*)***
  %252 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %251, align 8
  %253 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %252, i64 2
  %254 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, align 8
  call void %254(%class.SkRefCntBase* nonnull %250) #15
  br label %255

255:                                              ; preds = %242, %245, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #15
  %256 = bitcast %class.sk_sp.62* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #15
  %257 = bitcast %class.sk_sp.62* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #15
  %258 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %21, i64 0, i32 0
  %259 = load %class.SkShader*, %class.SkShader** %182, align 8
  %260 = icmp eq %class.SkShader* %259, null
  br i1 %260, label %264, label %261

261:                                              ; preds = %255
  %262 = getelementptr inbounds %class.SkShader, %class.SkShader* %259, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = atomicrmw add i32* %262, i32 1 monotonic
  br label %264

264:                                              ; preds = %255, %261
  store %class.SkShader* %259, %class.SkShader** %258, align 8
  %265 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %22, i64 0, i32 0
  %266 = load %class.SkShader*, %class.SkShader** %123, align 8
  %267 = icmp eq %class.SkShader* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %class.SkShader, %class.SkShader* %266, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = atomicrmw add i32* %269, i32 1 monotonic
  br label %271

271:                                              ; preds = %264, %268
  store %class.SkShader* %266, %class.SkShader** %265, align 8
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.62* nonnull sret %20, i32 7, %class.sk_sp.62* nonnull %21, %class.sk_sp.62* nonnull %22) #15
  %272 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %20, i64 0, i32 0
  %273 = load %class.SkShader*, %class.SkShader** %272, align 8
  call void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.62* nonnull sret %19, %class.SkShader* %273, %class.SkMatrix* nonnull dereferenceable(40) %13) #15
  %274 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 12
  %275 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %19, i64 0, i32 0
  %276 = bitcast %class.sk_sp.62* %19 to i64*
  %277 = load i64, i64* %276, align 8
  store %class.SkShader* null, %class.SkShader** %275, align 8
  %278 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %274, i64 0, i32 0
  %279 = load %class.SkShader*, %class.SkShader** %278, align 8
  %280 = bitcast %class.sk_sp.62* %274 to i64*
  store i64 %277, i64* %280, align 8
  %281 = icmp eq %class.SkShader* %279, null
  br i1 %281, label %292, label %282

282:                                              ; preds = %271
  %283 = getelementptr inbounds %class.SkShader, %class.SkShader* %279, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = atomicrmw add i32* %283, i32 -1 acq_rel
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %286, label %292

286:                                              ; preds = %282
  %287 = bitcast %class.SkShader* %279 to %class.SkRefCntBase*
  %288 = bitcast %class.SkShader* %279 to void (%class.SkRefCntBase*)***
  %289 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %288, align 8
  %290 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %289, i64 2
  %291 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %290, align 8
  call void %291(%class.SkRefCntBase* nonnull %287) #15
  br label %292

292:                                              ; preds = %271, %282, %286
  %293 = load %class.SkShader*, %class.SkShader** %275, align 8
  %294 = icmp eq %class.SkShader* %293, null
  br i1 %294, label %305, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %class.SkShader, %class.SkShader* %293, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = atomicrmw add i32* %296, i32 -1 acq_rel
  %298 = icmp eq i32 %297, 1
  br i1 %298, label %299, label %305

299:                                              ; preds = %295
  %300 = bitcast %class.SkShader* %293 to %class.SkRefCntBase*
  %301 = bitcast %class.SkShader* %293 to void (%class.SkRefCntBase*)***
  %302 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %301, align 8
  %303 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %302, i64 2
  %304 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %303, align 8
  call void %304(%class.SkRefCntBase* nonnull %300) #15
  br label %305

305:                                              ; preds = %292, %295, %299
  %306 = load %class.SkShader*, %class.SkShader** %272, align 8
  %307 = icmp eq %class.SkShader* %306, null
  br i1 %307, label %318, label %308

308:                                              ; preds = %305
  %309 = getelementptr inbounds %class.SkShader, %class.SkShader* %306, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = atomicrmw add i32* %309, i32 -1 acq_rel
  %311 = icmp eq i32 %310, 1
  br i1 %311, label %312, label %318

312:                                              ; preds = %308
  %313 = bitcast %class.SkShader* %306 to %class.SkRefCntBase*
  %314 = bitcast %class.SkShader* %306 to void (%class.SkRefCntBase*)***
  %315 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %314, align 8
  %316 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %315, i64 2
  %317 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %316, align 8
  call void %317(%class.SkRefCntBase* nonnull %313) #15
  br label %318

318:                                              ; preds = %305, %308, %312
  %319 = load %class.SkShader*, %class.SkShader** %265, align 8
  %320 = icmp eq %class.SkShader* %319, null
  br i1 %320, label %331, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %class.SkShader, %class.SkShader* %319, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = atomicrmw add i32* %322, i32 -1 acq_rel
  %324 = icmp eq i32 %323, 1
  br i1 %324, label %325, label %331

325:                                              ; preds = %321
  %326 = bitcast %class.SkShader* %319 to %class.SkRefCntBase*
  %327 = bitcast %class.SkShader* %319 to void (%class.SkRefCntBase*)***
  %328 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %327, align 8
  %329 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %328, i64 2
  %330 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %329, align 8
  call void %330(%class.SkRefCntBase* nonnull %326) #15
  br label %331

331:                                              ; preds = %318, %321, %325
  %332 = load %class.SkShader*, %class.SkShader** %258, align 8
  %333 = icmp eq %class.SkShader* %332, null
  br i1 %333, label %344, label %334

334:                                              ; preds = %331
  %335 = getelementptr inbounds %class.SkShader, %class.SkShader* %332, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = atomicrmw add i32* %335, i32 -1 acq_rel
  %337 = icmp eq i32 %336, 1
  br i1 %337, label %338, label %344

338:                                              ; preds = %334
  %339 = bitcast %class.SkShader* %332 to %class.SkRefCntBase*
  %340 = bitcast %class.SkShader* %332 to void (%class.SkRefCntBase*)***
  %341 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %340, align 8
  %342 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %341, i64 2
  %343 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %342, align 8
  call void %343(%class.SkRefCntBase* nonnull %339) #15
  br label %344

344:                                              ; preds = %331, %334, %338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #15
  %345 = load %class.SkShader*, %class.SkShader** %182, align 8
  %346 = icmp eq %class.SkShader* %345, null
  br i1 %346, label %357, label %347

347:                                              ; preds = %344
  %348 = getelementptr inbounds %class.SkShader, %class.SkShader* %345, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = atomicrmw add i32* %348, i32 -1 acq_rel
  %350 = icmp eq i32 %349, 1
  br i1 %350, label %351, label %357

351:                                              ; preds = %347
  %352 = bitcast %class.SkShader* %345 to %class.SkRefCntBase*
  %353 = bitcast %class.SkShader* %345 to void (%class.SkRefCntBase*)***
  %354 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %353, align 8
  %355 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %354, i64 2
  %356 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %355, align 8
  call void %356(%class.SkRefCntBase* nonnull %352) #15
  br label %357

357:                                              ; preds = %344, %347, %351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %156) #15
  br label %390

358:                                              ; preds = %79
  %359 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 11
  %360 = bitcast %class.sk_sp.62* %12 to i64*
  %361 = load i64, i64* %360, align 8
  store %class.SkShader* null, %class.SkShader** %123, align 8
  %362 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %359, i64 0, i32 0
  %363 = load %class.SkShader*, %class.SkShader** %362, align 8
  %364 = bitcast %class.sk_sp.62* %359 to i64*
  store i64 %361, i64* %364, align 8
  %365 = icmp eq %class.SkShader* %363, null
  br i1 %365, label %376, label %366

366:                                              ; preds = %358
  %367 = getelementptr inbounds %class.SkShader, %class.SkShader* %363, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = atomicrmw add i32* %367, i32 -1 acq_rel
  %369 = icmp eq i32 %368, 1
  br i1 %369, label %370, label %376

370:                                              ; preds = %366
  %371 = bitcast %class.SkShader* %363 to %class.SkRefCntBase*
  %372 = bitcast %class.SkShader* %363 to void (%class.SkRefCntBase*)***
  %373 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %372, align 8
  %374 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %373, i64 2
  %375 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %374, align 8
  call void %375(%class.SkRefCntBase* nonnull %371) #15
  br label %376

376:                                              ; preds = %358, %366, %370
  %377 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 12, i32 0
  %378 = load %class.SkShader*, %class.SkShader** %377, align 8
  store %class.SkShader* null, %class.SkShader** %377, align 8
  %379 = icmp eq %class.SkShader* %378, null
  br i1 %379, label %390, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds %class.SkShader, %class.SkShader* %378, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = atomicrmw add i32* %381, i32 -1 acq_rel
  %383 = icmp eq i32 %382, 1
  br i1 %383, label %384, label %390

384:                                              ; preds = %380
  %385 = bitcast %class.SkShader* %378 to %class.SkRefCntBase*
  %386 = bitcast %class.SkShader* %378 to void (%class.SkRefCntBase*)***
  %387 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %386, align 8
  %388 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %387, i64 2
  %389 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %388, align 8
  call void %389(%class.SkRefCntBase* nonnull %385) #15
  br label %390

390:                                              ; preds = %384, %380, %376, %357
  %391 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 5
  %392 = bitcast float* %391 to <2 x float>*
  %393 = load <2 x float>, <2 x float>* %392, align 8
  %394 = fmul <2 x float> %393, <float 0x3F847AE140000000, float 0x3F847AE140000000>
  %395 = bitcast float* %81 to <2 x float>*
  %396 = load <2 x float>, <2 x float>* %395, align 4
  %397 = fmul <2 x float> %394, %396
  %398 = fsub <2 x float> %396, %397
  %399 = fmul <2 x float> %398, <float 5.000000e-01, float 5.000000e-01>
  %400 = fadd <2 x float> %397, %399
  %401 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %399, 0
  %402 = insertvalue { <2 x float>, <2 x float> } %401, <2 x float> %400, 1
  %403 = load %class.SkShader*, %class.SkShader** %123, align 8
  %404 = icmp eq %class.SkShader* %403, null
  br i1 %404, label %415, label %405

405:                                              ; preds = %390
  %406 = getelementptr inbounds %class.SkShader, %class.SkShader* %403, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = atomicrmw add i32* %406, i32 -1 acq_rel
  %408 = icmp eq i32 %407, 1
  br i1 %408, label %409, label %415

409:                                              ; preds = %405
  %410 = bitcast %class.SkShader* %403 to %class.SkRefCntBase*
  %411 = bitcast %class.SkShader* %403 to void (%class.SkRefCntBase*)***
  %412 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %411, align 8
  %413 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %412, i64 2
  %414 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %413, align 8
  call void %414(%class.SkRefCntBase* nonnull %410) #15
  br label %415

415:                                              ; preds = %390, %405, %409
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %107) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #15
  ret { <2 x float>, <2 x float> } %402
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK7skottie8internal12_GLOBAL__N_114TileRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE(%"class.skottie::internal::(anonymous namespace)::TileRenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = alloca %class.sk_sp.62, align 8
  %6 = alloca %class.sk_sp.62, align 8
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %11 = load float, float* %10, align 4
  %12 = fcmp olt float %9, %11
  br i1 %12, label %13, label %74

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %17 = load float, float* %16, align 4
  %18 = fcmp uge float %15, %17
  br i1 %18, label %74, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 3
  %21 = load float, float* %20, align 8
  %22 = fcmp ugt float %21, 0.000000e+00
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 4
  %25 = load float, float* %24, align 4
  %26 = fcmp ugt float %25, 0.000000e+00
  br i1 %26, label %27, label %74

27:                                               ; preds = %23, %19
  %28 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK7skottie8internal12_GLOBAL__N_114TileRenderNode8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #15
  %29 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = or i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 11, i32 0
  %34 = load %class.SkShader*, %class.SkShader** %33, align 8
  %35 = icmp eq %class.SkShader* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %class.SkShader, %class.SkShader* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %27, %36
  store %class.SkShader* %34, %class.SkShader** %32, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %4, %class.sk_sp.62* nonnull %5) #15
  %40 = load %class.SkShader*, %class.SkShader** %32, align 8
  %41 = icmp eq %class.SkShader* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.SkShader, %class.SkShader* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkShader* %40 to %class.SkRefCntBase*
  %48 = bitcast %class.SkShader* %40 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  call void %51(%class.SkRefCntBase* nonnull %47) #15
  br label %52

52:                                               ; preds = %39, %42, %46
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %1, %struct.SkRect* dereferenceable(16) %7, %class.SkPaint* nonnull dereferenceable(72) %4) #15
  %53 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TileRenderNode", %"class.skottie::internal::(anonymous namespace)::TileRenderNode"* %0, i64 0, i32 12, i32 0
  %54 = load %class.SkShader*, %class.SkShader** %53, align 8
  %55 = icmp eq %class.SkShader* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %6, i64 0, i32 0
  %58 = getelementptr inbounds %class.SkShader, %class.SkShader* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  store %class.SkShader* %54, %class.SkShader** %57, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %4, %class.sk_sp.62* nonnull %6) #15
  %60 = load %class.SkShader*, %class.SkShader** %57, align 8
  %61 = icmp eq %class.SkShader* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.SkShader, %class.SkShader* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkShader* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkShader* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #15
  br label %72

72:                                               ; preds = %56, %62, %66
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %1, %struct.SkRect* dereferenceable(16) %7, %class.SkPaint* nonnull dereferenceable(72) %4) #15
  br label %73

73:                                               ; preds = %52, %72
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #15
  br label %74

74:                                               ; preds = %3, %23, %13, %73
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.sksg::RenderNode"* @_ZNK7skottie8internal12_GLOBAL__N_114TileRenderNode8onNodeAtERK7SkPoint(%"class.skottie::internal::(anonymous namespace)::TileRenderNode"* nocapture readnone, %struct.SkPoint* nocapture readnone dereferenceable(8)) unnamed_addr #6 align 2 {
  ret %"class.sksg::RenderNode"* null
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"*) unnamed_addr #10

declare zeroext i1 @_ZNK4sksg16CustomRenderNode16hasChildrenInvalEv(%"class.sksg::CustomRenderNode"*) local_unnamed_addr #3

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #3

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #3

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.57* sret, %class.SkPictureRecorder*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp.62* sret, %class.SkPicture*, i32, i32, i32, %class.SkMatrix*, %struct.SkRect*) local_unnamed_addr #3

declare void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.62* sret, i32, %class.sk_sp.62*, %class.sk_sp.62*) local_unnamed_addr #3

declare void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.62* sret, %class.SkShader*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #11

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.62* sret, %struct.SkPoint*, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.62*) local_unnamed_addr #3

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #10

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #12 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %struct.SkV2*) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !21

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #15
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #14
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEE4MakeIJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKNS0_16AnimationBuilderERK6SkSizeEEESB_IS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117MotionTileAdapterENS2_14TileRenderNodeEE4MakeIJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKNS0_16AnimationBuilderERK6SkSizeEEESB_IS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117MotionTileAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKS1_RK6SkSizeEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSL_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117MotionTileAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKS1_RK6SkSizeEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSL_"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_Z10sk_make_spIN7skottie8internal12_GLOBAL__N_114TileRenderNodeEJRK6SkSize5sk_spIN4sksg10RenderNodeEEEES7_IT_EDpOT0_: argument 0"}
!9 = distinct !{!9, !"_Z10sk_make_spIN7skottie8internal12_GLOBAL__N_114TileRenderNodeEJRK6SkSize5sk_spIN4sksg10RenderNodeEEEES7_IT_EDpOT0_"}
!10 = !{!8, !3}
!11 = !{!5}
!12 = !{i8 0, i8 2}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!15 = distinct !{!15, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!16 = distinct !{!16, !17, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!17 = distinct !{!17, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!20 = distinct !{!20, !"_ZN8SkMatrix9TranslateEff"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
