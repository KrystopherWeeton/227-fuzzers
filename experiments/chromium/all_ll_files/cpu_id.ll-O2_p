; ModuleID = '../../third_party/libyuv/source/cpu_id.cc'
source_filename = "../../third_party/libyuv/source/cpu_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@cpu_info_ = hidden local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c" neon\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c" asimd\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"cpu model\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"Loongson-3\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"Loongson-2K\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"ASEs implemented\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"loongson-mmi\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"loongson-ext\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"msa\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @CpuId(i32, i32, i32* nocapture) local_unnamed_addr #0 {
  %4 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid                                     \0A", "={bx},={ax},={cx},={dx},1,2,~{dirflag},~{fpsr},~{flags}"(i32 %0, i32 %1) #6, !srcloc !2
  %5 = extractvalue { i32, i32, i32, i32 } %4, 0
  %6 = extractvalue { i32, i32, i32, i32 } %4, 1
  %7 = extractvalue { i32, i32, i32, i32 } %4, 2
  %8 = extractvalue { i32, i32, i32, i32 } %4, 3
  store i32 %6, i32* %2, align 4
  %9 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 %5, i32* %9, align 4
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  store i32 %7, i32* %10, align 4
  %11 = getelementptr inbounds i32, i32* %2, i64 3
  store i32 %8, i32* %11, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @GetXCR0() local_unnamed_addr #2 {
  %1 = tail call i32 asm ".byte 0x0f, 0x01, 0xd0", "={ax},{cx},~{edx},~{dirflag},~{fpsr},~{flags}"(i32 0) #7, !srcloc !3
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ArmCpuCaps(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [512 x i8], align 16
  %3 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %3) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 512, i1 false)
  %4 = tail call %struct._IO_FILE* @fopen64(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = call i8* @fgets(i8* nonnull %3, i32 511, %struct._IO_FILE* nonnull %4)
  %8 = icmp eq i8* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %6
  %10 = bitcast [512 x i8]* %2 to i64*
  br label %11

11:                                               ; preds = %9, %23
  %12 = load i64, i64* %10, align 16
  %13 = icmp eq i64 %12, 8315178135798768966
  br i1 %13, label %14, label %23

14:                                               ; preds = %11
  %15 = call i8* @strstr(i8* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds i8, i8* %15, i64 5
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %20 [
    i8 32, label %26
    i8 10, label %26
  ]

20:                                               ; preds = %17, %14
  %21 = call i8* @strstr(i8* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %20, %11
  %24 = call i8* @fgets(i8* nonnull %3, i32 511, %struct._IO_FILE* nonnull %4)
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %23, %20, %17, %17, %6
  %27 = phi i32 [ 0, %6 ], [ 0, %23 ], [ 4, %20 ], [ 4, %17 ], [ 4, %17 ]
  %28 = call i32 @fclose(%struct._IO_FILE* nonnull %4)
  br label %29

29:                                               ; preds = %26, %1
  %30 = phi i32 [ 4, %1 ], [ %27, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %3) #6
  ret i32 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @MipsCpuCaps(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [512 x i8], align 16
  %3 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %3) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 512, i1 false)
  %4 = tail call %struct._IO_FILE* @fopen64(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %1, %23
  %7 = phi i32 [ %24, %23 ], [ 0, %1 ]
  %8 = call i8* @fgets(i8* nonnull %3, i32 511, %struct._IO_FILE* nonnull %4)
  %9 = icmp eq i8* %8, null
  br i1 %9, label %41, label %10

10:                                               ; preds = %6
  %11 = call i32 @bcmp(i8* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %10
  %14 = call i8* @strstr(i8* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)) #8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = or i32 %7, 8388608
  br label %23

18:                                               ; preds = %13
  %19 = call i8* @strstr(i8* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #8
  %20 = icmp eq i8* %19, null
  %21 = or i32 %7, 12582912
  %22 = select i1 %20, i32 %7, i32 %21
  br label %23

23:                                               ; preds = %18, %16, %10
  %24 = phi i32 [ %17, %16 ], [ %7, %10 ], [ %22, %18 ]
  %25 = call i32 @bcmp(i8* nonnull %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %6

27:                                               ; preds = %23
  %28 = call i8* @strstr(i8* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = call i8* @strstr(i8* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #8
  %32 = icmp eq i8* %31, null
  %33 = or i32 %24, 8388608
  %34 = select i1 %32, i32 %24, i32 %33
  br label %35

35:                                               ; preds = %30, %27
  %36 = phi i32 [ %24, %27 ], [ %34, %30 ]
  %37 = call i8* @strstr(i8* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #8
  %38 = icmp eq i8* %37, null
  %39 = or i32 %36, 4194304
  %40 = select i1 %38, i32 %36, i32 %39
  br label %41

41:                                               ; preds = %6, %35
  %42 = phi i32 [ %40, %35 ], [ %7, %6 ]
  %43 = call i32 @fclose(%struct._IO_FILE* nonnull %4)
  br label %44

44:                                               ; preds = %1, %41
  %45 = phi i32 [ %42, %41 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %3) #6
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @MaskCpuFlags(i32) local_unnamed_addr #0 {
  %2 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid                                     \0A", "={bx},={ax},={cx},={dx},1,2,~{dirflag},~{fpsr},~{flags}"(i32 0, i32 0) #6, !srcloc !2
  %3 = extractvalue { i32, i32, i32, i32 } %2, 1
  %4 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid                                     \0A", "={bx},={ax},={cx},={dx},1,2,~{dirflag},~{fpsr},~{flags}"(i32 1, i32 0) #6, !srcloc !2
  %5 = extractvalue { i32, i32, i32, i32 } %4, 2
  %6 = extractvalue { i32, i32, i32, i32 } %4, 3
  %7 = icmp sgt i32 %3, 6
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid                                     \0A", "={bx},={ax},={cx},={dx},1,2,~{dirflag},~{fpsr},~{flags}"(i32 7, i32 0) #6, !srcloc !2
  %10 = extractvalue { i32, i32, i32, i32 } %9, 0
  %11 = extractvalue { i32, i32, i32, i32 } %9, 2
  br label %12

12:                                               ; preds = %8, %1
  %13 = phi i32 [ %10, %8 ], [ 0, %1 ]
  %14 = phi i32 [ %11, %8 ], [ 0, %1 ]
  %15 = lshr i32 %6, 21
  %16 = and i32 %15, 32
  %17 = lshr i32 %5, 3
  %18 = and i32 %17, 64
  %19 = lshr i32 %5, 12
  %20 = and i32 %19, 128
  %21 = and i32 %19, 256
  %22 = shl i32 %13, 2
  %23 = and i32 %22, 2048
  %24 = or i32 %16, %18
  %25 = or i32 %24, %20
  %26 = or i32 %25, %21
  %27 = or i32 %26, %23
  %28 = or i32 %27, 16
  %29 = and i32 %5, 469762048
  %30 = icmp eq i32 %29, 469762048
  br i1 %30, label %31, label %65

31:                                               ; preds = %12
  %32 = tail call i32 asm ".byte 0x0f, 0x01, 0xd0", "={ax},{cx},~{edx},~{dirflag},~{fpsr},~{flags}"(i32 0) #7, !srcloc !3
  %33 = and i32 %32, 6
  %34 = icmp eq i32 %33, 6
  br i1 %34, label %35, label %65

35:                                               ; preds = %31
  %36 = shl i32 %13, 5
  %37 = and i32 %36, 1024
  %38 = and i32 %5, 4096
  %39 = lshr i32 %5, 16
  %40 = and i32 %39, 8192
  %41 = or i32 %38, %40
  %42 = or i32 %41, %37
  %43 = or i32 %42, %28
  %44 = or i32 %43, 512
  %45 = and i32 %32, 224
  %46 = icmp eq i32 %45, 224
  br i1 %46, label %47, label %65

47:                                               ; preds = %35
  %48 = lshr i32 %13, 15
  %49 = shl i32 %14, 16
  %50 = and i32 %49, 131072
  %51 = shl i32 %14, 12
  %52 = and i32 %51, 262144
  %53 = shl i32 %14, 7
  %54 = and i32 %53, 524288
  %55 = shl i32 %14, 6
  %56 = and i32 %55, 1048576
  %57 = and i32 %55, 16384
  %58 = and i32 %48, 98304
  %59 = or i32 %50, %58
  %60 = or i32 %59, %52
  %61 = or i32 %60, %54
  %62 = or i32 %61, %56
  %63 = or i32 %62, %57
  %64 = or i32 %63, %44
  br label %65

65:                                               ; preds = %12, %31, %35, %47
  %66 = phi i32 [ %64, %47 ], [ %44, %35 ], [ %28, %31 ], [ %28, %12 ]
  %67 = or i32 %66, 1
  %68 = and i32 %67, %0
  store atomic i32 %68, i32* @cpu_info_ monotonic, align 4
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @InitCpuFlags() local_unnamed_addr #0 {
  %1 = tail call i32 @MaskCpuFlags(i32 -1)
  ret i32 %1
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 2643}
!3 = !{i32 4081}
