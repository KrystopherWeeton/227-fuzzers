; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/val/validate_interfaces.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/val/validate_interfaces.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::val::ValidationState_t" = type { %struct.spv_context_t*, %struct.spv_validator_options_t*, i32*, i64, i32, i32, i64, i64, %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.35", i32, %"class.std::__1::vector", %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.275", %"class.std::__1::vector.276", %"class.std::__1::unordered_map.283", %"class.std::__1::vector.90", %"class.std::__1::unordered_map.307", %"class.std::__1::set", %"class.std::__1::unordered_set", i32, [4 x i8], %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.355", %"class.std::__1::map", %"class.std::__1::set.386", %"class.spvtools::AssemblyGrammar", i32, i32, i32, i8, %"struct.spvtools::val::ValidationState_t::Feature", [4 x i8], %"class.std::__1::unordered_map.396", %"class.std::__1::unordered_map.420", %"class.std::__1::unordered_map.444", %"class.std::__1::unordered_map.468", %"class.std::__1::vector.90", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unique_ptr.492", %"class.std::__1::function.524", i32, i32 }
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%struct.spv_validator_options_t = type { %struct.validator_universal_limits_t, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.validator_universal_limits_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.14" }
%"class.std::__1::__hash_table.14" = type <{ %"class.std::__1::unique_ptr.15", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base.18"** }
%"struct.std::__1::__hash_node_base.18" = type { %"struct.std::__1::__hash_node_base.18"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator.20" }
%"class.std::__1::__bucket_list_deallocator.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base.18" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unordered_map.35" = type { %"class.std::__1::__hash_table.36" }
%"class.std::__1::__hash_table.36" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.55", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base.40"** }
%"struct.std::__1::__hash_node_base.40" = type { %"struct.std::__1::__hash_node_base.40"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator.42" }
%"class.std::__1::__bucket_list_deallocator.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.40" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"*, %"class.std::__1::__compressed_pair.266" }
%"class.spvtools::val::Function" = type { i32, i32, i32, i32, i32, i8, [3 x i8], %"class.std::__1::unordered_map.59", %"class.std::__1::vector.83", %"class.std::__1::unordered_set", %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock", %"class.std::__1::unordered_map.111", %"class.std::__1::unordered_map.111", %"class.std::__1::unordered_map.111", %"class.std::__1::list", %"class.std::__1::vector.90", %"class.std::__1::vector.90", %"class.std::__1::unordered_map.143", %"class.std::__1::unordered_map.169", %"class.std::__1::unordered_map.197", %"class.std::__1::unordered_map.221", %"class.std::__1::list.245", %"class.std::__1::list.252", %"class.std::__1::set" }
%"class.std::__1::unordered_map.59" = type { %"class.std::__1::__hash_table.60" }
%"class.std::__1::__hash_table.60" = type <{ %"class.std::__1::unique_ptr.61", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.79", [4 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63", %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base.64"** }
%"struct.std::__1::__hash_node_base.64" = type { %"struct.std::__1::__hash_node_base.64"* }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::__bucket_list_deallocator.66" }
%"class.std::__1::__bucket_list_deallocator.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node_base.64" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"**, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.spvtools::val::BasicBlock"** }
%"class.spvtools::val::BasicBlock" = type { i32, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector.83", %"class.std::__1::vector.83", %"class.std::__1::bitset", i8, %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.spvtools::val::Instruction" = type { %"class.std::__1::vector.90", %"class.std::__1::vector.97", %struct.spv_parsed_instruction_t, i64, %"class.spvtools::val::Function"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector.104" }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %struct.spv_parsed_operand_t*, %struct.spv_parsed_operand_t*, %"class.std::__1::__compressed_pair.99" }
%struct.spv_parsed_operand_t = type { i16, i16, i32, i32, i32 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %struct.spv_parsed_operand_t* }
%struct.spv_parsed_instruction_t = type { i32*, i16, i16, i32, i32, i32, %struct.spv_parsed_operand_t*, i16 }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair" = type <{ %"class.spvtools::val::Instruction"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.139" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.143" = type { %"class.std::__1::__hash_table.144" }
%"class.std::__1::__hash_table.144" = type <{ %"class.std::__1::unique_ptr.145", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.163", [4 x i8] }>
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147", %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base.148"** }
%"struct.std::__1::__hash_node_base.148" = type { %"struct.std::__1::__hash_node_base.148"* }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.std::__1::__bucket_list_deallocator.150" }
%"class.std::__1::__bucket_list_deallocator.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base.148" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.169" = type { %"class.std::__1::__hash_table.170" }
%"class.std::__1::__hash_table.170" = type <{ %"class.std::__1::unique_ptr.171", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", [4 x i8] }>
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173", %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::__hash_node_base.174"** }
%"struct.std::__1::__hash_node_base.174" = type { %"struct.std::__1::__hash_node_base.174"* }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::__bucket_list_deallocator.176" }
%"class.std::__1::__bucket_list_deallocator.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base.174" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.197" = type { %"class.std::__1::__hash_table.198" }
%"class.std::__1::__hash_table.198" = type <{ %"class.std::__1::unique_ptr.199", %"class.std::__1::__compressed_pair.209", %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.217", [4 x i8] }>
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201", %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::__hash_node_base.202"** }
%"struct.std::__1::__hash_node_base.202" = type { %"struct.std::__1::__hash_node_base.202"* }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.std::__1::__bucket_list_deallocator.204" }
%"class.std::__1::__bucket_list_deallocator.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::__hash_node_base.202" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.221" = type { %"class.std::__1::__hash_table.222" }
%"class.std::__1::__hash_table.222" = type <{ %"class.std::__1::unique_ptr.223", %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.241", [4 x i8] }>
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225", %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.std::__1::__hash_node_base.226"** }
%"struct.std::__1::__hash_node_base.226" = type { %"struct.std::__1::__hash_node_base.226"* }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::__bucket_list_deallocator.228" }
%"class.std::__1::__bucket_list_deallocator.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.226" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::list.245" = type { %"class.std::__1::__list_imp.246" }
%"class.std::__1::__list_imp.246" = type { %"struct.std::__1::__list_node_base.247", %"class.std::__1::__compressed_pair.248" }
%"struct.std::__1::__list_node_base.247" = type { %"struct.std::__1::__list_node_base.247"*, %"struct.std::__1::__list_node_base.247"* }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::list.252" = type { %"class.std::__1::__list_imp.253" }
%"class.std::__1::__list_imp.253" = type { %"struct.std::__1::__list_node_base.254", %"class.std::__1::__compressed_pair.255" }
%"struct.std::__1::__list_node_base.254" = type { %"struct.std::__1::__list_node_base.254"*, %"struct.std::__1::__list_node_base.254"* }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.spvtools::val::Function"* }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.271" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::set"* }
%"class.spvtools::EnumSet.275" = type { i64, %"class.std::__1::unique_ptr.271" }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"*, %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.spvtools::val::Instruction"* }
%"class.std::__1::unordered_map.283" = type { %"class.std::__1::__hash_table.284" }
%"class.std::__1::__hash_table.284" = type <{ %"class.std::__1::unique_ptr.285", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.303", [4 x i8] }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287", %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::__hash_node_base.288"** }
%"struct.std::__1::__hash_node_base.288" = type { %"struct.std::__1::__hash_node_base.288"* }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.std::__1::__bucket_list_deallocator.290" }
%"class.std::__1::__bucket_list_deallocator.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.std::__1::__hash_node_base.288" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.307" = type { %"class.std::__1::__hash_table.308" }
%"class.std::__1::__hash_table.308" = type <{ %"class.std::__1::unique_ptr.309", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::__hash_node_base.312"** }
%"struct.std::__1::__hash_node_base.312" = type { %"struct.std::__1::__hash_node_base.312"* }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.std::__1::__bucket_list_deallocator.314" }
%"class.std::__1::__bucket_list_deallocator.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base.312" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.355" = type { %"class.std::__1::__hash_table.356" }
%"class.std::__1::__hash_table.356" = type <{ %"class.std::__1::unique_ptr.357", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.375", [4 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359", %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.360"** }
%"struct.std::__1::__hash_node_base.360" = type { %"struct.std::__1::__hash_node_base.360"* }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::__bucket_list_deallocator.362" }
%"class.std::__1::__bucket_list_deallocator.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.360" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.379" }
%"class.std::__1::__tree.379" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.386" = type { %"class.std::__1::__tree.387" }
%"class.std::__1::__tree.387" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"struct.spvtools::val::ValidationState_t::Feature" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unordered_map.396" = type { %"class.std::__1::__hash_table.397" }
%"class.std::__1::__hash_table.397" = type <{ %"class.std::__1::unique_ptr.398", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.416", [4 x i8] }>
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400", %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base.401"** }
%"struct.std::__1::__hash_node_base.401" = type { %"struct.std::__1::__hash_node_base.401"* }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.std::__1::__bucket_list_deallocator.403" }
%"class.std::__1::__bucket_list_deallocator.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"struct.std::__1::__hash_node_base.401" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.420" = type { %"class.std::__1::__hash_table.421" }
%"class.std::__1::__hash_table.421" = type <{ %"class.std::__1::unique_ptr.422", %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.440", [4 x i8] }>
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424", %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::__hash_node_base.425"** }
%"struct.std::__1::__hash_node_base.425" = type { %"struct.std::__1::__hash_node_base.425"* }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.std::__1::__bucket_list_deallocator.427" }
%"class.std::__1::__bucket_list_deallocator.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"struct.std::__1::__hash_node_base.425" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.444" = type { %"class.std::__1::__hash_table.445" }
%"class.std::__1::__hash_table.445" = type <{ %"class.std::__1::unique_ptr.446", %"class.std::__1::__compressed_pair.456", %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.464", [4 x i8] }>
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448", %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.std::__1::__hash_node_base.449"** }
%"struct.std::__1::__hash_node_base.449" = type { %"struct.std::__1::__hash_node_base.449"* }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.std::__1::__bucket_list_deallocator.451" }
%"class.std::__1::__bucket_list_deallocator.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::__hash_node_base.449" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.468" = type { %"class.std::__1::__hash_table.469" }
%"class.std::__1::__hash_table.469" = type <{ %"class.std::__1::unique_ptr.470", %"class.std::__1::__compressed_pair.480", %"class.std::__1::__compressed_pair.485", %"class.std::__1::__compressed_pair.488", [4 x i8] }>
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472", %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.std::__1::__hash_node_base.473"** }
%"struct.std::__1::__hash_node_base.473" = type { %"struct.std::__1::__hash_node_base.473"* }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.std::__1::__bucket_list_deallocator.475" }
%"class.std::__1::__bucket_list_deallocator.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"struct.std::__1::__hash_node_base.473" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i32*, i32*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i32* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.spvtools::FriendlyNameMapper"* }
%"class.spvtools::FriendlyNameMapper" = type { %"class.std::__1::unordered_map.35", %"class.std::__1::unordered_set.495", %"class.spvtools::AssemblyGrammar" }
%"class.std::__1::unordered_set.495" = type { %"class.std::__1::__hash_table.496" }
%"class.std::__1::__hash_table.496" = type <{ %"class.std::__1::unique_ptr.497", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.512", %"class.std::__1::__compressed_pair.516", [4 x i8] }>
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499", %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base.500"** }
%"struct.std::__1::__hash_node_base.500" = type { %"struct.std::__1::__hash_node_base.500"* }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.std::__1::__bucket_list_deallocator.502" }
%"class.std::__1::__bucket_list_deallocator.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.500" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::function.524" = type { %"class.std::__1::__function::__policy_func.528" }
%"class.std::__1::__function::__policy_func.528" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.529", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.529" = type { void (%"class.std::__1::basic_string"*, %"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__less.570" = type { i8 }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"class.spvtools::val::Function"**, %"class.spvtools::val::Function"**, %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.spvtools::val::Function"** }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.spvtools::val::Instruction"**, %"class.spvtools::val::Instruction"**, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.spvtools::val::Instruction"** }
%"class.spvtools::DiagnosticStream" = type <{ %"class.std::__1::basic_ostringstream", %struct.spv_position_t, %"class.std::__1::function", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::tuple.621" = type { %"struct.std::__1::__tuple_impl.622" }
%"struct.std::__1::__tuple_impl.622" = type { %"class.std::__1::__tuple_leaf.623" }
%"class.std::__1::__tuple_leaf.623" = type { i32* }
%"class.std::__1::tuple.598" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.spvtools::val::ValidationState_t::EntryPointDescription" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.90" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.599" }
%"struct.std::__1::pair.599" = type { i32, %"class.std::__1::vector.573" }
%"class.std::__1::vector.573" = type { %"class.std::__1::__vector_base.574" }
%"class.std::__1::__vector_base.574" = type { %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"*, %"class.std::__1::__compressed_pair.575" }
%"class.spvtools::val::Decoration" = type <{ i32, [4 x i8], %"class.std::__1::vector.90", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.spvtools::val::Decoration"* }
%"struct.std::__1::pair.592" = type { i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

@.str = private unnamed_addr constant [24 x i8] c"Interface variable id <\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"> is used by entry point '\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"' id <\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c">, but is not listed as an interface\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.6 = private unnamed_addr constant [46 x i8] c"Variable has conflicting location decorations\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"Variable has conflicting component decorations\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"Index can only be applied to Fragment output variables\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"Variable has conflicting index decorations\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"Variable must be decorated with a location\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"Entry-point has conflicting \00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c" location assignment at location \00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c", component \00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"Member index \00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c" has conflicting location assignments\00", align 1
@.str.18 = private unnamed_addr constant [39 x i8] c" has conflicting component assignments\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c" is missing a location assignment\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"Members cannot be assigned a location\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3val18ValidateInterfacesERNS0_17ValidationState_tE(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224)) local_unnamed_addr #0 {
  %2 = alloca %"struct.std::__1::__less.570", align 1
  %3 = alloca %"class.std::__1::vector.535", align 8
  %4 = alloca %"class.std::__1::vector.542", align 8
  %5 = alloca %"class.std::__1::vector.90", align 8
  %6 = alloca %"class.spvtools::DiagnosticStream", align 8
  %7 = alloca %"class.std::__1::tuple.621", align 8
  %8 = alloca %"class.std::__1::tuple.598", align 1
  %9 = alloca %"class.std::__1::tuple.621", align 8
  %10 = alloca %"class.std::__1::tuple.598", align 1
  %11 = alloca %"class.std::__1::tuple.621", align 8
  %12 = alloca %"class.std::__1::tuple.598", align 1
  %13 = alloca %"class.spvtools::DiagnosticStream", align 8
  %14 = alloca %"class.spvtools::DiagnosticStream", align 8
  %15 = alloca %"class.spvtools::DiagnosticStream", align 8
  %16 = alloca %"class.spvtools::DiagnosticStream", align 8
  %17 = alloca %"class.spvtools::DiagnosticStream", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.spvtools::DiagnosticStream", align 8
  %22 = alloca %"class.std::__1::unordered_map.331", align 8
  %23 = alloca %"class.std::__1::unordered_map.331", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.spvtools::DiagnosticStream", align 8
  %26 = alloca i32, align 4
  %27 = alloca %"class.spvtools::DiagnosticStream", align 8
  %28 = alloca %"class.spvtools::DiagnosticStream", align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %"class.spvtools::DiagnosticStream", align 8
  %33 = alloca %"class.std::__1::unordered_set", align 8
  %34 = alloca %"class.std::__1::unordered_set", align 8
  %35 = alloca %"class.std::__1::unordered_set", align 8
  %36 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %37, 66559
  %39 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 16, i32 0, i32 0
  %40 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 16, i32 0, i32 1
  %42 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %41, align 8
  %43 = icmp eq %"class.spvtools::val::Instruction"* %40, %42
  br i1 %43, label %669, label %44

44:                                               ; preds = %1
  %45 = bitcast %"class.std::__1::vector.535"* %3 to i8*
  %46 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %3, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %3, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector.535", %"class.std::__1::vector.535"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.std::__1::vector.542"* %4 to i8*
  %50 = getelementptr inbounds %"class.std::__1::vector.542", %"class.std::__1::vector.542"* %4, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.542", %"class.std::__1::vector.542"* %4, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.std::__1::vector.542", %"class.std::__1::vector.542"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.spvtools::val::Instruction"*** %51 to i64*
  %54 = bitcast %"class.std::__1::vector.542"* %4 to i64*
  %55 = bitcast %"class.spvtools::val::Instruction"*** %52 to i64*
  %56 = bitcast %"class.spvtools::val::Function"*** %47 to i64*
  %57 = bitcast %"class.std::__1::vector.535"* %3 to i64*
  %58 = bitcast %"class.spvtools::val::Function"*** %48 to i64*
  %59 = bitcast %"class.std::__1::vector.90"* %5 to i8*
  %60 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %5, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %5, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast i32** %61 to i64*
  %64 = bitcast %"class.std::__1::vector.90"* %5 to i64*
  %65 = bitcast i32** %62 to i64*
  %66 = getelementptr inbounds %"struct.std::__1::__less.570", %"struct.std::__1::__less.570"* %2, i64 0, i32 0
  %67 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.spvtools::DiagnosticStream"* %6 to i8*
  %70 = bitcast %"class.spvtools::DiagnosticStream"* %6 to %"class.std::__1::basic_ostream"*
  %71 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %6, i64 0, i32 4
  br label %72

72:                                               ; preds = %44, %666
  %73 = phi %"class.spvtools::val::Instruction"* [ %40, %44 ], [ %667, %666 ]
  %74 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %73, i64 0, i32 2, i32 2
  %75 = load i16, i16* %74, align 2
  %76 = icmp eq i16 %75, 59
  br i1 %38, label %77, label %78

77:                                               ; preds = %72
  br i1 %76, label %86, label %666

78:                                               ; preds = %72
  br i1 %76, label %79, label %666

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %73, i64 0, i32 0, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 3
  %83 = load i32, i32* %82, align 4
  %84 = or i32 %83, 2
  %85 = icmp eq i32 %84, 3
  br i1 %85, label %92, label %666

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %73, i64 0, i32 0, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 3
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 7
  br i1 %91, label %666, label %92

92:                                               ; preds = %86, %79
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #10
  %93 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %73, i64 0, i32 6, i32 0, i32 0
  %94 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %93, align 8
  %95 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %73, i64 0, i32 6, i32 0, i32 1
  %96 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %95, align 8
  %97 = icmp eq %"struct.std::__1::pair"* %94, %96
  br i1 %97, label %169, label %100

98:                                               ; preds = %160
  %99 = icmp eq i64 %164, %163
  br i1 %99, label %169, label %221

100:                                              ; preds = %92, %167
  %101 = phi %"class.spvtools::val::Instruction"** [ %162, %167 ], [ null, %92 ]
  %102 = phi i64 [ %163, %167 ], [ 0, %92 ]
  %103 = phi i64 [ %164, %167 ], [ 0, %92 ]
  %104 = phi %"class.spvtools::val::Instruction"** [ %168, %167 ], [ null, %92 ]
  %105 = phi %"class.spvtools::val::Instruction"** [ %161, %167 ], [ null, %92 ]
  %106 = phi %"struct.std::__1::pair"* [ %165, %167 ], [ %94, %92 ]
  %107 = bitcast %"struct.std::__1::pair"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq %"class.spvtools::val::Instruction"** %105, %104
  br i1 %109, label %114, label %110

110:                                              ; preds = %100
  %111 = bitcast %"class.spvtools::val::Instruction"** %105 to i64*
  store i64 %108, i64* %111, align 8
  %112 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %105, i64 1
  %113 = ptrtoint %"class.spvtools::val::Instruction"** %112 to i64
  store i64 %113, i64* %53, align 8
  br label %160

114:                                              ; preds = %100
  %115 = ptrtoint %"class.spvtools::val::Instruction"** %104 to i64
  %116 = load i64, i64* %54, align 8
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 3
  %119 = add nsw i64 %118, 1
  %120 = icmp ugt i64 %119, 2305843009213693951
  br i1 %120, label %121, label %123

121:                                              ; preds = %114
  %122 = bitcast %"class.std::__1::vector.542"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %122) #11
  unreachable

123:                                              ; preds = %114
  %124 = icmp ult i64 %118, 1152921504606846975
  br i1 %124, label %125, label %133

125:                                              ; preds = %123
  %126 = ashr exact i64 %117, 2
  %127 = icmp ult i64 %126, %119
  %128 = select i1 %127, i64 %119, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 2305843009213693951
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  call void @abort() #11
  unreachable

133:                                              ; preds = %130, %123
  %134 = phi i64 [ %128, %130 ], [ 2305843009213693951, %123 ]
  %135 = shl i64 %134, 3
  %136 = call i8* @_Znwm(i64 %135) #12
  %137 = bitcast i8* %136 to %"class.spvtools::val::Instruction"**
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi %"class.spvtools::val::Instruction"** [ %137, %133 ], [ null, %125 ]
  %141 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %140, i64 %118
  %142 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %140, i64 %139
  %143 = ptrtoint %"class.spvtools::val::Instruction"** %142 to i64
  %144 = bitcast %"class.spvtools::val::Instruction"** %141 to i64*
  store i64 %108, i64* %144, align 8
  %145 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %141, i64 1
  %146 = ptrtoint %"class.spvtools::val::Instruction"** %145 to i64
  %147 = sub i64 %103, %116
  %148 = ashr exact i64 %147, 3
  %149 = sub nsw i64 0, %148
  %150 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %141, i64 %149
  %151 = ptrtoint %"class.spvtools::val::Instruction"** %150 to i64
  %152 = icmp sgt i64 %147, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %138
  %154 = bitcast %"class.spvtools::val::Instruction"** %150 to i8*
  %155 = inttoptr i64 %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 %147, i1 false) #10
  br label %156

156:                                              ; preds = %153, %138
  store i64 %151, i64* %54, align 8
  store i64 %146, i64* %53, align 8
  store i64 %143, i64* %55, align 8
  %157 = icmp eq i64 %116, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = inttoptr i64 %116 to i8*
  call void @_ZdlPv(i8* %159) #12
  br label %160

160:                                              ; preds = %158, %156, %110
  %161 = phi %"class.spvtools::val::Instruction"** [ %112, %110 ], [ %145, %156 ], [ %145, %158 ]
  %162 = phi %"class.spvtools::val::Instruction"** [ %101, %110 ], [ %150, %156 ], [ %150, %158 ]
  %163 = phi i64 [ %102, %110 ], [ %151, %156 ], [ %151, %158 ]
  %164 = phi i64 [ %113, %110 ], [ %146, %156 ], [ %146, %158 ]
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 1
  %166 = icmp eq %"struct.std::__1::pair"* %165, %96
  br i1 %166, label %98, label %167

167:                                              ; preds = %160
  %168 = load %"class.spvtools::val::Instruction"**, %"class.spvtools::val::Instruction"*** %52, align 8
  br label %100

169:                                              ; preds = %98, %92
  call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEvT0_SF_T_"(%"class.spvtools::val::Function"** null, %"class.spvtools::val::Function"** null) #10
  br label %217

170:                                              ; preds = %356
  %171 = load %"class.spvtools::val::Function"**, %"class.spvtools::val::Function"*** %46, align 8
  %172 = load %"class.spvtools::val::Function"**, %"class.spvtools::val::Function"*** %47, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEvT0_SF_T_"(%"class.spvtools::val::Function"** %171, %"class.spvtools::val::Function"** %172) #10
  %173 = icmp eq %"class.spvtools::val::Function"** %171, %172
  br i1 %173, label %217, label %174

174:                                              ; preds = %170, %178
  %175 = phi %"class.spvtools::val::Function"** [ %176, %178 ], [ %171, %170 ]
  %176 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %175, i64 1
  %177 = icmp eq %"class.spvtools::val::Function"** %176, %172
  br i1 %177, label %218, label %178

178:                                              ; preds = %174
  %179 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %175, align 8
  %180 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %176, align 8
  %181 = icmp eq %"class.spvtools::val::Function"* %179, %180
  br i1 %181, label %182, label %174

182:                                              ; preds = %178
  %183 = icmp eq %"class.spvtools::val::Function"** %175, %172
  br i1 %183, label %218, label %184

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %175, i64 2
  %186 = icmp eq %"class.spvtools::val::Function"** %185, %172
  br i1 %186, label %211, label %187

187:                                              ; preds = %184
  %188 = ptrtoint %"class.spvtools::val::Function"** %175 to i64
  br label %189

189:                                              ; preds = %206, %187
  %190 = phi %"class.spvtools::val::Function"* [ %207, %206 ], [ %179, %187 ]
  %191 = phi %"class.spvtools::val::Function"** [ %205, %206 ], [ %175, %187 ]
  %192 = phi %"class.spvtools::val::Function"** [ %203, %206 ], [ %185, %187 ]
  %193 = phi i64 [ %202, %206 ], [ %188, %187 ]
  %194 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %192, align 8
  %195 = icmp eq %"class.spvtools::val::Function"* %190, %194
  br i1 %195, label %201, label %196

196:                                              ; preds = %189
  %197 = ptrtoint %"class.spvtools::val::Function"* %194 to i64
  %198 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %191, i64 1
  %199 = ptrtoint %"class.spvtools::val::Function"** %198 to i64
  %200 = bitcast %"class.spvtools::val::Function"** %198 to i64*
  store i64 %197, i64* %200, align 8
  br label %201

201:                                              ; preds = %196, %189
  %202 = phi i64 [ %193, %189 ], [ %199, %196 ]
  %203 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %192, i64 1
  %204 = icmp eq %"class.spvtools::val::Function"** %203, %172
  %205 = inttoptr i64 %202 to %"class.spvtools::val::Function"**
  br i1 %204, label %208, label %206

206:                                              ; preds = %201
  %207 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %205, align 8
  br label %189

208:                                              ; preds = %201
  %209 = inttoptr i64 %202 to %"class.spvtools::val::Function"**
  %210 = load %"class.spvtools::val::Function"**, %"class.spvtools::val::Function"*** %47, align 8
  br label %211

211:                                              ; preds = %208, %184
  %212 = phi %"class.spvtools::val::Function"** [ %172, %184 ], [ %210, %208 ]
  %213 = phi %"class.spvtools::val::Function"** [ %175, %184 ], [ %209, %208 ]
  %214 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %213, i64 1
  %215 = icmp eq %"class.spvtools::val::Function"** %214, %212
  br i1 %215, label %218, label %216

216:                                              ; preds = %211
  store %"class.spvtools::val::Function"** %214, %"class.spvtools::val::Function"*** %47, align 8
  br label %218

217:                                              ; preds = %169, %170
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #10
  br label %368

218:                                              ; preds = %174, %216, %211, %182
  %219 = phi %"class.spvtools::val::Function"** [ %212, %211 ], [ %214, %216 ], [ %172, %182 ], [ %172, %174 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #10
  %220 = icmp eq %"class.spvtools::val::Function"** %171, %219
  br i1 %220, label %368, label %462

221:                                              ; preds = %98, %356
  %222 = phi i64 [ %357, %356 ], [ %164, %98 ]
  %223 = phi %"class.spvtools::val::Instruction"** [ %365, %356 ], [ %161, %98 ]
  %224 = phi %"class.spvtools::val::Instruction"** [ %364, %356 ], [ %162, %98 ]
  %225 = phi i64 [ %359, %356 ], [ 0, %98 ]
  %226 = phi i32 [ %358, %356 ], [ 0, %98 ]
  %227 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %224, i64 %225
  %228 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %227, align 8
  %229 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %228, i64 0, i32 4
  %230 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %229, align 8
  %231 = ptrtoint %"class.spvtools::val::Function"* %230 to i64
  %232 = icmp eq %"class.spvtools::val::Function"* %230, null
  br i1 %232, label %287, label %233

233:                                              ; preds = %221
  %234 = load %"class.spvtools::val::Function"**, %"class.spvtools::val::Function"*** %47, align 8
  %235 = load %"class.spvtools::val::Function"**, %"class.spvtools::val::Function"*** %48, align 8
  %236 = icmp eq %"class.spvtools::val::Function"** %234, %235
  %237 = ptrtoint %"class.spvtools::val::Function"** %235 to i64
  br i1 %236, label %243, label %238

238:                                              ; preds = %233
  %239 = bitcast %"class.spvtools::val::Function"** %234 to i64*
  store i64 %231, i64* %239, align 8
  %240 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %234, i64 1
  %241 = ptrtoint %"class.spvtools::val::Function"** %240 to i64
  store i64 %241, i64* %56, align 8
  %242 = load i64, i64* %53, align 8
  br label %356

243:                                              ; preds = %233
  %244 = ptrtoint %"class.spvtools::val::Function"** %234 to i64
  %245 = load i64, i64* %57, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 3
  %248 = add nsw i64 %247, 1
  %249 = icmp ugt i64 %248, 2305843009213693951
  br i1 %249, label %250, label %252

250:                                              ; preds = %243
  %251 = bitcast %"class.std::__1::vector.535"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %251) #11
  unreachable

252:                                              ; preds = %243
  %253 = sub i64 %237, %245
  %254 = ashr exact i64 %253, 3
  %255 = icmp ult i64 %254, 1152921504606846975
  br i1 %255, label %256, label %264

256:                                              ; preds = %252
  %257 = ashr exact i64 %253, 2
  %258 = icmp ult i64 %257, %248
  %259 = select i1 %258, i64 %248, i64 %257
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %256
  %262 = icmp ugt i64 %259, 2305843009213693951
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @abort() #11
  unreachable

264:                                              ; preds = %261, %252
  %265 = phi i64 [ %259, %261 ], [ 2305843009213693951, %252 ]
  %266 = shl i64 %265, 3
  %267 = call i8* @_Znwm(i64 %266) #12
  %268 = bitcast i8* %267 to %"class.spvtools::val::Function"**
  br label %269

269:                                              ; preds = %264, %256
  %270 = phi i64 [ %265, %264 ], [ 0, %256 ]
  %271 = phi i8* [ %267, %264 ], [ null, %256 ]
  %272 = phi %"class.spvtools::val::Function"** [ %268, %264 ], [ null, %256 ]
  %273 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %272, i64 %247
  %274 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %272, i64 %270
  %275 = ptrtoint %"class.spvtools::val::Function"** %274 to i64
  %276 = bitcast %"class.spvtools::val::Function"** %273 to i64*
  store i64 %231, i64* %276, align 8
  %277 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %273, i64 1
  %278 = ptrtoint %"class.spvtools::val::Function"** %277 to i64
  %279 = ptrtoint %"class.spvtools::val::Function"** %272 to i64
  %280 = icmp sgt i64 %246, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %269
  %282 = inttoptr i64 %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %282, i64 %246, i1 false) #10
  br label %283

283:                                              ; preds = %281, %269
  store i64 %279, i64* %57, align 8
  store i64 %278, i64* %56, align 8
  store i64 %275, i64* %58, align 8
  %284 = icmp eq i64 %245, 0
  br i1 %284, label %356, label %285

285:                                              ; preds = %283
  %286 = inttoptr i64 %245 to i8*
  call void @_ZdlPv(i8* %286) #12
  br label %356

287:                                              ; preds = %221
  %288 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %228, i64 0, i32 6, i32 0, i32 0
  %289 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %288, align 8
  %290 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %228, i64 0, i32 6, i32 0, i32 1
  %291 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %290, align 8
  %292 = icmp eq %"struct.std::__1::pair"* %289, %291
  br i1 %292, label %356, label %293

293:                                              ; preds = %287, %351
  %294 = phi i64 [ %352, %351 ], [ %222, %287 ]
  %295 = phi %"class.spvtools::val::Instruction"** [ %353, %351 ], [ %223, %287 ]
  %296 = phi %"struct.std::__1::pair"* [ %354, %351 ], [ %289, %287 ]
  %297 = bitcast %"struct.std::__1::pair"* %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = load %"class.spvtools::val::Instruction"**, %"class.spvtools::val::Instruction"*** %52, align 8
  %300 = icmp eq %"class.spvtools::val::Instruction"** %295, %299
  br i1 %300, label %305, label %301

301:                                              ; preds = %293
  %302 = bitcast %"class.spvtools::val::Instruction"** %295 to i64*
  store i64 %298, i64* %302, align 8
  %303 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %295, i64 1
  %304 = ptrtoint %"class.spvtools::val::Instruction"** %303 to i64
  store i64 %304, i64* %53, align 8
  br label %351

305:                                              ; preds = %293
  %306 = ptrtoint %"class.spvtools::val::Instruction"** %295 to i64
  %307 = load i64, i64* %54, align 8
  %308 = sub i64 %306, %307
  %309 = ashr exact i64 %308, 3
  %310 = add nsw i64 %309, 1
  %311 = icmp ugt i64 %310, 2305843009213693951
  br i1 %311, label %312, label %314

312:                                              ; preds = %305
  %313 = bitcast %"class.std::__1::vector.542"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %313) #11
  unreachable

314:                                              ; preds = %305
  %315 = icmp ult i64 %309, 1152921504606846975
  br i1 %315, label %316, label %324

316:                                              ; preds = %314
  %317 = ashr exact i64 %308, 2
  %318 = icmp ult i64 %317, %310
  %319 = select i1 %318, i64 %310, i64 %317
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %329, label %321

321:                                              ; preds = %316
  %322 = icmp ugt i64 %319, 2305843009213693951
  br i1 %322, label %323, label %324

323:                                              ; preds = %321
  call void @abort() #11
  unreachable

324:                                              ; preds = %321, %314
  %325 = phi i64 [ %319, %321 ], [ 2305843009213693951, %314 ]
  %326 = shl i64 %325, 3
  %327 = call i8* @_Znwm(i64 %326) #12
  %328 = bitcast i8* %327 to %"class.spvtools::val::Instruction"**
  br label %329

329:                                              ; preds = %324, %316
  %330 = phi i64 [ %325, %324 ], [ 0, %316 ]
  %331 = phi %"class.spvtools::val::Instruction"** [ %328, %324 ], [ null, %316 ]
  %332 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %331, i64 %309
  %333 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %331, i64 %330
  %334 = ptrtoint %"class.spvtools::val::Instruction"** %333 to i64
  %335 = bitcast %"class.spvtools::val::Instruction"** %332 to i64*
  store i64 %298, i64* %335, align 8
  %336 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %332, i64 1
  %337 = ptrtoint %"class.spvtools::val::Instruction"** %336 to i64
  %338 = sub i64 %294, %307
  %339 = ashr exact i64 %338, 3
  %340 = sub nsw i64 0, %339
  %341 = getelementptr inbounds %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %332, i64 %340
  %342 = ptrtoint %"class.spvtools::val::Instruction"** %341 to i64
  %343 = icmp sgt i64 %338, 0
  br i1 %343, label %344, label %347

344:                                              ; preds = %329
  %345 = bitcast %"class.spvtools::val::Instruction"** %341 to i8*
  %346 = inttoptr i64 %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* align 8 %346, i64 %338, i1 false) #10
  br label %347

347:                                              ; preds = %344, %329
  store i64 %342, i64* %54, align 8
  store i64 %337, i64* %53, align 8
  store i64 %334, i64* %55, align 8
  %348 = icmp eq i64 %307, 0
  br i1 %348, label %351, label %349

349:                                              ; preds = %347
  %350 = inttoptr i64 %307 to i8*
  call void @_ZdlPv(i8* %350) #12
  br label %351

351:                                              ; preds = %349, %347, %301
  %352 = phi i64 [ %304, %301 ], [ %337, %347 ], [ %337, %349 ]
  %353 = phi %"class.spvtools::val::Instruction"** [ %303, %301 ], [ %336, %347 ], [ %336, %349 ]
  %354 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %296, i64 1
  %355 = icmp eq %"struct.std::__1::pair"* %354, %291
  br i1 %355, label %356, label %293

356:                                              ; preds = %351, %287, %285, %283, %238
  %357 = phi i64 [ %222, %287 ], [ %222, %285 ], [ %222, %283 ], [ %242, %238 ], [ %352, %351 ]
  %358 = add i32 %226, 1
  %359 = zext i32 %358 to i64
  %360 = load i64, i64* %54, align 8
  %361 = sub i64 %357, %360
  %362 = ashr exact i64 %361, 3
  %363 = icmp ugt i64 %362, %359
  %364 = inttoptr i64 %360 to %"class.spvtools::val::Instruction"**
  %365 = inttoptr i64 %357 to %"class.spvtools::val::Instruction"**
  br i1 %363, label %221, label %170

366:                                              ; preds = %476
  %367 = load i32*, i32** %60, align 8
  br label %368

368:                                              ; preds = %217, %366, %218
  %369 = phi i32* [ %477, %366 ], [ null, %218 ], [ null, %217 ]
  %370 = phi i32* [ %367, %366 ], [ null, %218 ], [ null, %217 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %66) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %370, i32* %369, %"struct.std::__1::__less.570"* nonnull dereferenceable(1) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %66) #10
  %371 = load i32*, i32** %60, align 8
  %372 = load i32*, i32** %61, align 8
  %373 = icmp eq i32* %371, %372
  br i1 %373, label %382, label %374

374:                                              ; preds = %368, %378
  %375 = phi i32* [ %376, %378 ], [ %371, %368 ]
  %376 = getelementptr inbounds i32, i32* %375, i64 1
  %377 = icmp eq i32* %376, %372
  br i1 %377, label %449, label %378

378:                                              ; preds = %374
  %379 = load i32, i32* %375, align 4
  %380 = load i32, i32* %376, align 4
  %381 = icmp eq i32 %379, %380
  br i1 %381, label %382, label %374

382:                                              ; preds = %378, %368
  %383 = phi i32* [ %371, %368 ], [ %375, %378 ]
  %384 = ptrtoint i32* %383 to i64
  %385 = icmp eq i32* %383, %372
  br i1 %385, label %449, label %386

386:                                              ; preds = %382
  %387 = getelementptr inbounds i32, i32* %383, i64 2
  %388 = icmp eq i32* %387, %372
  br i1 %388, label %443, label %389

389:                                              ; preds = %386
  %390 = getelementptr i32, i32* %372, i64 -3
  %391 = ptrtoint i32* %390 to i64
  %392 = sub i64 %391, %384
  %393 = lshr i64 %392, 2
  %394 = add nuw nsw i64 %393, 1
  %395 = and i64 %394, 3
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %416, label %397

397:                                              ; preds = %389, %408
  %398 = phi i32* [ %411, %408 ], [ %383, %389 ]
  %399 = phi i32* [ %410, %408 ], [ %387, %389 ]
  %400 = phi i64 [ %409, %408 ], [ %384, %389 ]
  %401 = phi i64 [ %412, %408 ], [ %395, %389 ]
  %402 = load i32, i32* %398, align 4
  %403 = load i32, i32* %399, align 4
  %404 = icmp eq i32 %402, %403
  br i1 %404, label %408, label %405

405:                                              ; preds = %397
  %406 = getelementptr inbounds i32, i32* %398, i64 1
  %407 = ptrtoint i32* %406 to i64
  store i32 %403, i32* %406, align 4
  br label %408

408:                                              ; preds = %405, %397
  %409 = phi i64 [ %400, %397 ], [ %407, %405 ]
  %410 = getelementptr inbounds i32, i32* %399, i64 1
  %411 = inttoptr i64 %409 to i32*
  %412 = add i64 %401, -1
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %414, label %397, !llvm.loop !2

414:                                              ; preds = %408
  %415 = inttoptr i64 %409 to i32*
  br label %416

416:                                              ; preds = %389, %414
  %417 = phi i64 [ undef, %389 ], [ %409, %414 ]
  %418 = phi i32* [ %383, %389 ], [ %415, %414 ]
  %419 = phi i32* [ %387, %389 ], [ %410, %414 ]
  %420 = phi i64 [ %384, %389 ], [ %409, %414 ]
  %421 = icmp ult i64 %392, 12
  br i1 %421, label %439, label %422

422:                                              ; preds = %416, %1855
  %423 = phi i32* [ %1859, %1855 ], [ %418, %416 ]
  %424 = phi i32* [ %1857, %1855 ], [ %419, %416 ]
  %425 = phi i64 [ %1856, %1855 ], [ %420, %416 ]
  %426 = load i32, i32* %423, align 4
  %427 = load i32, i32* %424, align 4
  %428 = icmp eq i32 %426, %427
  br i1 %428, label %432, label %429

429:                                              ; preds = %422
  %430 = getelementptr inbounds i32, i32* %423, i64 1
  %431 = ptrtoint i32* %430 to i64
  store i32 %427, i32* %430, align 4
  br label %432

432:                                              ; preds = %429, %422
  %433 = phi i64 [ %425, %422 ], [ %431, %429 ]
  %434 = getelementptr inbounds i32, i32* %424, i64 1
  %435 = inttoptr i64 %433 to i32*
  %436 = load i32, i32* %435, align 4
  %437 = load i32, i32* %434, align 4
  %438 = icmp eq i32 %436, %437
  br i1 %438, label %1835, label %1832

439:                                              ; preds = %1855, %416
  %440 = phi i64 [ %417, %416 ], [ %1856, %1855 ]
  %441 = inttoptr i64 %440 to i32*
  %442 = load i32*, i32** %61, align 8
  br label %443

443:                                              ; preds = %439, %386
  %444 = phi i32* [ %442, %439 ], [ %372, %386 ]
  %445 = phi i32* [ %441, %439 ], [ %383, %386 ]
  %446 = getelementptr inbounds i32, i32* %445, i64 1
  %447 = icmp eq i32* %446, %444
  br i1 %447, label %449, label %448

448:                                              ; preds = %443
  store i32* %446, i32** %61, align 8
  br label %449

449:                                              ; preds = %374, %448, %443, %382
  %450 = phi i32* [ %444, %443 ], [ %446, %448 ], [ %372, %382 ], [ %372, %374 ]
  %451 = load i32*, i32** %60, align 8
  %452 = icmp eq i32* %451, %450
  br i1 %452, label %645, label %453

453:                                              ; preds = %449
  %454 = load i64, i64* %67, align 8
  %455 = icmp eq i64 %454, 0
  %456 = call i64 @llvm.ctpop.i64(i64 %454) #10, !range !4
  %457 = icmp ugt i64 %456, 1
  %458 = add i64 %454, 4294967295
  %459 = load %"struct.std::__1::__hash_node_base.312"**, %"struct.std::__1::__hash_node_base.312"*** %68, align 8
  %460 = add i64 %454, -1
  %461 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %73, i64 0, i32 2, i32 5
  br i1 %455, label %586, label %542

462:                                              ; preds = %218, %476
  %463 = phi i32* [ %477, %476 ], [ null, %218 ]
  %464 = phi i64 [ %478, %476 ], [ 0, %218 ]
  %465 = phi i32* [ %479, %476 ], [ null, %218 ]
  %466 = phi %"class.spvtools::val::Function"** [ %480, %476 ], [ %171, %218 ]
  %467 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %466, align 8
  %468 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %467, i64 0, i32 0
  %469 = load i32, i32* %468, align 8
  %470 = call dereferenceable(24) %"class.std::__1::vector.90"* @_ZNK8spvtools3val17ValidationState_t19FunctionEntryPointsEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %469) #10
  %471 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %470, i64 0, i32 0, i32 0
  %472 = load i32*, i32** %471, align 8
  %473 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %470, i64 0, i32 0, i32 1
  %474 = load i32*, i32** %473, align 8
  %475 = icmp eq i32* %472, %474
  br i1 %475, label %476, label %482

476:                                              ; preds = %537, %462
  %477 = phi i32* [ %463, %462 ], [ %538, %537 ]
  %478 = phi i64 [ %464, %462 ], [ %539, %537 ]
  %479 = phi i32* [ %465, %462 ], [ %538, %537 ]
  %480 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %466, i64 1
  %481 = icmp eq %"class.spvtools::val::Function"** %480, %219
  br i1 %481, label %366, label %462

482:                                              ; preds = %462, %537
  %483 = phi i64 [ %539, %537 ], [ %464, %462 ]
  %484 = phi i32* [ %538, %537 ], [ %465, %462 ]
  %485 = phi i32* [ %540, %537 ], [ %472, %462 ]
  %486 = load i32, i32* %485, align 4
  %487 = load i32*, i32** %62, align 8
  %488 = icmp eq i32* %484, %487
  br i1 %488, label %492, label %489

489:                                              ; preds = %482
  store i32 %486, i32* %484, align 4
  %490 = getelementptr inbounds i32, i32* %484, i64 1
  %491 = ptrtoint i32* %490 to i64
  store i64 %491, i64* %63, align 8
  br label %537

492:                                              ; preds = %482
  %493 = ptrtoint i32* %484 to i64
  %494 = load i64, i64* %64, align 8
  %495 = sub i64 %493, %494
  %496 = ashr exact i64 %495, 2
  %497 = add nsw i64 %496, 1
  %498 = icmp ugt i64 %497, 4611686018427387903
  br i1 %498, label %499, label %501

499:                                              ; preds = %492
  %500 = bitcast %"class.std::__1::vector.90"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %500) #11
  unreachable

501:                                              ; preds = %492
  %502 = icmp ult i64 %496, 2305843009213693951
  br i1 %502, label %503, label %511

503:                                              ; preds = %501
  %504 = ashr exact i64 %495, 1
  %505 = icmp ult i64 %504, %497
  %506 = select i1 %505, i64 %497, i64 %504
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %516, label %508

508:                                              ; preds = %503
  %509 = icmp ugt i64 %506, 4611686018427387903
  br i1 %509, label %510, label %511

510:                                              ; preds = %508
  call void @abort() #11
  unreachable

511:                                              ; preds = %508, %501
  %512 = phi i64 [ %506, %508 ], [ 4611686018427387903, %501 ]
  %513 = shl i64 %512, 2
  %514 = call i8* @_Znwm(i64 %513) #12
  %515 = bitcast i8* %514 to i32*
  br label %516

516:                                              ; preds = %511, %503
  %517 = phi i64 [ %512, %511 ], [ 0, %503 ]
  %518 = phi i32* [ %515, %511 ], [ null, %503 ]
  %519 = getelementptr inbounds i32, i32* %518, i64 %496
  %520 = getelementptr inbounds i32, i32* %518, i64 %517
  %521 = ptrtoint i32* %520 to i64
  store i32 %486, i32* %519, align 4
  %522 = getelementptr inbounds i32, i32* %519, i64 1
  %523 = ptrtoint i32* %522 to i64
  %524 = sub i64 %483, %494
  %525 = ashr exact i64 %524, 2
  %526 = sub nsw i64 0, %525
  %527 = getelementptr inbounds i32, i32* %519, i64 %526
  %528 = ptrtoint i32* %527 to i64
  %529 = icmp sgt i64 %524, 0
  br i1 %529, label %530, label %533

530:                                              ; preds = %516
  %531 = bitcast i32* %527 to i8*
  %532 = inttoptr i64 %494 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %531, i8* align 4 %532, i64 %524, i1 false) #10
  br label %533

533:                                              ; preds = %530, %516
  store i64 %528, i64* %64, align 8
  store i64 %523, i64* %63, align 8
  store i64 %521, i64* %65, align 8
  %534 = icmp eq i64 %494, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %533
  %536 = inttoptr i64 %494 to i8*
  call void @_ZdlPv(i8* %536) #12
  br label %537

537:                                              ; preds = %535, %533, %489
  %538 = phi i32* [ %490, %489 ], [ %522, %533 ], [ %522, %535 ]
  %539 = phi i64 [ %491, %489 ], [ %523, %533 ], [ %523, %535 ]
  %540 = getelementptr inbounds i32, i32* %485, i64 1
  %541 = icmp eq i32* %540, %474
  br i1 %541, label %476, label %482

542:                                              ; preds = %453, %619
  %543 = phi i32* [ %620, %619 ], [ %451, %453 ]
  %544 = load i32, i32* %543, align 4
  %545 = zext i32 %544 to i64
  br i1 %457, label %548, label %546

546:                                              ; preds = %542
  %547 = and i64 %458, %545
  br label %552

548:                                              ; preds = %542
  %549 = icmp ugt i64 %454, %545
  br i1 %549, label %552, label %550

550:                                              ; preds = %548
  %551 = urem i64 %545, %454
  br label %552

552:                                              ; preds = %550, %548, %546
  %553 = phi i64 [ %547, %546 ], [ %551, %550 ], [ %545, %548 ]
  %554 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312"*, %"struct.std::__1::__hash_node_base.312"** %459, i64 %553
  %555 = load %"struct.std::__1::__hash_node_base.312"*, %"struct.std::__1::__hash_node_base.312"** %554, align 8
  %556 = icmp eq %"struct.std::__1::__hash_node_base.312"* %555, null
  br i1 %556, label %586, label %557

557:                                              ; preds = %552
  %558 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %555, i64 0, i32 0
  %559 = load %"struct.std::__1::__hash_node_base.312"*, %"struct.std::__1::__hash_node_base.312"** %558, align 8
  %560 = icmp eq %"struct.std::__1::__hash_node_base.312"* %559, null
  br i1 %560, label %586, label %561

561:                                              ; preds = %557, %582
  %562 = phi %"struct.std::__1::__hash_node_base.312"* [ %584, %582 ], [ %559, %557 ]
  %563 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %562, i64 1
  %564 = bitcast %"struct.std::__1::__hash_node_base.312"* %563 to i64*
  %565 = load i64, i64* %564, align 8
  %566 = icmp eq i64 %565, %545
  br i1 %566, label %577, label %567

567:                                              ; preds = %561
  br i1 %457, label %570, label %568

568:                                              ; preds = %567
  %569 = and i64 %565, %460
  br label %574

570:                                              ; preds = %567
  %571 = icmp ult i64 %565, %454
  br i1 %571, label %574, label %572

572:                                              ; preds = %570
  %573 = urem i64 %565, %454
  br label %574

574:                                              ; preds = %572, %570, %568
  %575 = phi i64 [ %569, %568 ], [ %573, %572 ], [ %565, %570 ]
  %576 = icmp eq i64 %575, %553
  br i1 %576, label %582, label %586

577:                                              ; preds = %561
  %578 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %562, i64 2
  %579 = bitcast %"struct.std::__1::__hash_node_base.312"* %578 to i32*
  %580 = load i32, i32* %579, align 4
  %581 = icmp eq i32 %580, %544
  br i1 %581, label %587, label %582

582:                                              ; preds = %577, %574
  %583 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %562, i64 0, i32 0
  %584 = load %"struct.std::__1::__hash_node_base.312"*, %"struct.std::__1::__hash_node_base.312"** %583, align 8
  %585 = icmp eq %"struct.std::__1::__hash_node_base.312"* %584, null
  br i1 %585, label %586, label %561

586:                                              ; preds = %453, %557, %552, %582, %574
  call void @abort() #11
  unreachable

587:                                              ; preds = %577
  %588 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %562, i64 3
  %589 = bitcast %"struct.std::__1::__hash_node_base.312"* %588 to %"struct.spvtools::val::ValidationState_t::EntryPointDescription"**
  %590 = load %"struct.spvtools::val::ValidationState_t::EntryPointDescription"*, %"struct.spvtools::val::ValidationState_t::EntryPointDescription"** %589, align 8
  %591 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %562, i64 4
  %592 = bitcast %"struct.std::__1::__hash_node_base.312"* %591 to %"struct.spvtools::val::ValidationState_t::EntryPointDescription"**
  %593 = load %"struct.spvtools::val::ValidationState_t::EntryPointDescription"*, %"struct.spvtools::val::ValidationState_t::EntryPointDescription"** %592, align 8
  %594 = icmp eq %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %590, %593
  br i1 %594, label %619, label %595

595:                                              ; preds = %587, %616
  %596 = phi %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* [ %617, %616 ], [ %590, %587 ]
  %597 = getelementptr inbounds %"struct.spvtools::val::ValidationState_t::EntryPointDescription", %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %596, i64 0, i32 1, i32 0, i32 0
  %598 = load i32*, i32** %597, align 8
  %599 = getelementptr inbounds %"struct.spvtools::val::ValidationState_t::EntryPointDescription", %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %596, i64 0, i32 1, i32 0, i32 1
  %600 = load i32*, i32** %599, align 8
  %601 = icmp eq i32* %598, %600
  br i1 %601, label %622, label %602

602:                                              ; preds = %595
  %603 = load i32, i32* %461, align 4
  br label %604

604:                                              ; preds = %604, %602
  %605 = phi i8 [ 0, %602 ], [ %609, %604 ]
  %606 = phi i32* [ %598, %602 ], [ %610, %604 ]
  %607 = load i32, i32* %606, align 4
  %608 = icmp eq i32 %603, %607
  %609 = select i1 %608, i8 1, i8 %605
  %610 = getelementptr inbounds i32, i32* %606, i64 1
  %611 = icmp eq i32* %610, %600
  %612 = or i1 %608, %611
  br i1 %612, label %613, label %604

613:                                              ; preds = %604
  %614 = and i8 %609, 1
  %615 = icmp eq i8 %614, 0
  br i1 %615, label %622, label %616

616:                                              ; preds = %613
  %617 = getelementptr inbounds %"struct.spvtools::val::ValidationState_t::EntryPointDescription", %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %596, i64 1
  %618 = icmp eq %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %617, %593
  br i1 %618, label %619, label %595

619:                                              ; preds = %616, %587
  %620 = getelementptr inbounds i32, i32* %543, i64 1
  %621 = icmp eq i32* %620, %450
  br i1 %621, label %645, label %542

622:                                              ; preds = %613, %595
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %69) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %6, %"class.spvtools::val::ValidationState_t"* %0, i32 -10, %"class.spvtools::val::Instruction"* %73) #10
  %623 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %70, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 23) #10
  %624 = load i32, i32* %461, align 4
  %625 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %70, i32 %624) #10
  %626 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %70, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i64 26) #10
  %627 = bitcast %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %596 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %628 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %627, i64 0, i32 1, i32 0
  %629 = load i8, i8* %628, align 1
  %630 = icmp slt i8 %629, 0
  %631 = getelementptr inbounds %"struct.spvtools::val::ValidationState_t::EntryPointDescription", %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %596, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %632 = load i8*, i8** %631, align 8
  %633 = getelementptr inbounds %"struct.spvtools::val::ValidationState_t::EntryPointDescription", %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %596, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %634 = load i64, i64* %633, align 8
  %635 = bitcast %"struct.spvtools::val::ValidationState_t::EntryPointDescription"* %596 to i8*
  %636 = zext i8 %629 to i64
  %637 = select i1 %630, i8* %632, i8* %635
  %638 = select i1 %630, i64 %634, i64 %636
  %639 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %70, i8* %637, i64 %638) #10
  %640 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %70, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #10
  %641 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %70, i32 %544) #10
  %642 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %70, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i64 36) #10
  %643 = load i32, i32* %71, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %69) #10
  %644 = load i32*, i32** %60, align 8
  br label %645

645:                                              ; preds = %619, %622, %449
  %646 = phi i32* [ %644, %622 ], [ %450, %449 ], [ %451, %619 ]
  %647 = phi i32 [ %643, %622 ], [ 0, %449 ], [ 0, %619 ]
  %648 = icmp eq i32* %646, null
  br i1 %648, label %652, label %649

649:                                              ; preds = %645
  %650 = ptrtoint i32* %646 to i64
  store i64 %650, i64* %63, align 8
  %651 = bitcast i32* %646 to i8*
  call void @_ZdlPv(i8* %651) #12
  br label %652

652:                                              ; preds = %649, %645
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  %653 = load %"class.spvtools::val::Instruction"**, %"class.spvtools::val::Instruction"*** %50, align 8
  %654 = icmp eq %"class.spvtools::val::Instruction"** %653, null
  br i1 %654, label %658, label %655

655:                                              ; preds = %652
  %656 = ptrtoint %"class.spvtools::val::Instruction"** %653 to i64
  store i64 %656, i64* %53, align 8
  %657 = bitcast %"class.spvtools::val::Instruction"** %653 to i8*
  call void @_ZdlPv(i8* %657) #12
  br label %658

658:                                              ; preds = %655, %652
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  %659 = load %"class.spvtools::val::Function"**, %"class.spvtools::val::Function"*** %46, align 8
  %660 = icmp eq %"class.spvtools::val::Function"** %659, null
  br i1 %660, label %664, label %661

661:                                              ; preds = %658
  %662 = ptrtoint %"class.spvtools::val::Function"** %659 to i64
  store i64 %662, i64* %56, align 8
  %663 = bitcast %"class.spvtools::val::Function"** %659 to i8*
  call void @_ZdlPv(i8* %663) #12
  br label %664

664:                                              ; preds = %658, %661
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #10
  %665 = icmp eq i32 %647, 0
  br i1 %665, label %666, label %1830

666:                                              ; preds = %86, %78, %77, %79, %664
  %667 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %73, i64 1
  %668 = icmp eq %"class.spvtools::val::Instruction"* %667, %42
  br i1 %668, label %669, label %72

669:                                              ; preds = %666, %1
  %670 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 0
  %671 = load %struct.spv_context_t*, %struct.spv_context_t** %670, align 8
  %672 = getelementptr inbounds %struct.spv_context_t, %struct.spv_context_t* %671, i64 0, i32 0
  %673 = load i32, i32* %672, align 8
  %674 = call zeroext i1 @_Z14spvIsVulkanEnv14spv_target_env(i32 %673) #10
  br i1 %674, label %675, label %1830

675:                                              ; preds = %669
  %676 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %39, align 8
  %677 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %41, align 8
  %678 = icmp eq %"class.spvtools::val::Instruction"* %676, %677
  br i1 %678, label %1830, label %679

679:                                              ; preds = %675
  %680 = bitcast %"class.std::__1::unordered_set"* %33 to i8*
  %681 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %682 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %33, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %683 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %33, i64 0, i32 0, i32 4, i64 0
  %684 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %33, i64 0, i32 0, i32 3
  %685 = bitcast %"class.std::__1::__compressed_pair.11"* %684 to i32*
  %686 = bitcast i8* %683 to i32*
  %687 = bitcast %"class.std::__1::unordered_set"* %34 to i8*
  %688 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %689 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %34, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %690 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %34, i64 0, i32 0, i32 4, i64 0
  %691 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %34, i64 0, i32 0, i32 3
  %692 = bitcast %"class.std::__1::__compressed_pair.11"* %691 to i32*
  %693 = bitcast i8* %690 to i32*
  %694 = bitcast %"class.std::__1::unordered_set"* %35 to i8*
  %695 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %697 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %35, i64 0, i32 0, i32 4, i64 0
  %698 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %35, i64 0, i32 0, i32 3
  %699 = bitcast %"class.std::__1::__compressed_pair.11"* %698 to i32*
  %700 = bitcast i8* %697 to i32*
  %701 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 29
  %702 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0
  %703 = bitcast %"class.std::__1::__tree_end_node"* %702 to %"class.std::__1::__tree_node"**
  %704 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0, i32 0
  %705 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %702, i64 0, i32 0
  %706 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %701, i64 0, i32 0, i32 0
  %707 = bitcast %"class.std::__1::map"* %701 to i64*
  %708 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %709 = bitcast %"class.spvtools::DiagnosticStream"* %16 to i8*
  %710 = bitcast %"class.spvtools::DiagnosticStream"* %16 to %"class.std::__1::basic_ostream"*
  %711 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %16, i64 0, i32 4
  %712 = bitcast %"class.spvtools::DiagnosticStream"* %15 to i8*
  %713 = bitcast %"class.spvtools::DiagnosticStream"* %15 to %"class.std::__1::basic_ostream"*
  %714 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %15, i64 0, i32 4
  %715 = bitcast %"class.spvtools::DiagnosticStream"* %14 to i8*
  %716 = bitcast %"class.spvtools::DiagnosticStream"* %14 to %"class.std::__1::basic_ostream"*
  %717 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %14, i64 0, i32 4
  %718 = bitcast %"class.spvtools::DiagnosticStream"* %13 to i8*
  %719 = bitcast %"class.spvtools::DiagnosticStream"* %13 to %"class.std::__1::basic_ostream"*
  %720 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %13, i64 0, i32 4
  %721 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %722 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %724 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %725 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %724, i64 0, i32 1, i32 0
  %726 = bitcast %"class.std::__1::unordered_map.331"* %22 to i8*
  %727 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %728 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %729 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %22, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %730 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %22, i64 0, i32 0, i32 4, i64 0
  %731 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %22, i64 0, i32 0, i32 3
  %732 = bitcast %"class.std::__1::__compressed_pair.351"* %731 to i32*
  %733 = bitcast i8* %730 to i32*
  %734 = bitcast %"class.std::__1::unordered_map.331"* %23 to i8*
  %735 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %737 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %23, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %738 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %23, i64 0, i32 0, i32 4, i64 0
  %739 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %23, i64 0, i32 0, i32 3
  %740 = bitcast %"class.std::__1::__compressed_pair.351"* %739 to i32*
  %741 = bitcast i8* %738 to i32*
  %742 = bitcast i32* %26 to i8*
  %743 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %23, i64 0, i32 0
  %744 = bitcast %"class.std::__1::tuple.621"* %9 to i8*
  %745 = getelementptr inbounds %"class.std::__1::tuple.621", %"class.std::__1::tuple.621"* %9, i64 0, i32 0, i32 0, i32 0
  %746 = getelementptr inbounds %"class.std::__1::tuple.598", %"class.std::__1::tuple.598"* %10, i64 0, i32 0
  %747 = bitcast i32* %24 to i8*
  %748 = getelementptr inbounds %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.331"* %22, i64 0, i32 0
  %749 = bitcast %"class.std::__1::tuple.621"* %7 to i8*
  %750 = getelementptr inbounds %"class.std::__1::tuple.621", %"class.std::__1::tuple.621"* %7, i64 0, i32 0, i32 0, i32 0
  %751 = getelementptr inbounds %"class.std::__1::tuple.598", %"class.std::__1::tuple.598"* %8, i64 0, i32 0
  %752 = bitcast %"class.spvtools::DiagnosticStream"* %27 to i8*
  %753 = bitcast %"class.spvtools::DiagnosticStream"* %27 to %"class.std::__1::basic_ostream"*
  %754 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %27, i64 0, i32 4
  %755 = bitcast %"class.spvtools::DiagnosticStream"* %25 to i8*
  %756 = bitcast %"class.spvtools::DiagnosticStream"* %25 to %"class.std::__1::basic_ostream"*
  %757 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %25, i64 0, i32 4
  %758 = bitcast i32* %29 to i8*
  %759 = bitcast i32* %30 to i8*
  %760 = bitcast %"class.std::__1::tuple.621"* %11 to i8*
  %761 = getelementptr inbounds %"class.std::__1::tuple.621", %"class.std::__1::tuple.621"* %11, i64 0, i32 0, i32 0, i32 0
  %762 = getelementptr inbounds %"class.std::__1::tuple.598", %"class.std::__1::tuple.598"* %12, i64 0, i32 0
  %763 = bitcast i32* %31 to i8*
  %764 = bitcast %"class.spvtools::DiagnosticStream"* %32 to i8*
  %765 = bitcast %"class.spvtools::DiagnosticStream"* %32 to %"class.std::__1::basic_ostream"*
  %766 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %32, i64 0, i32 4
  %767 = bitcast %"class.spvtools::DiagnosticStream"* %28 to i8*
  %768 = bitcast %"class.spvtools::DiagnosticStream"* %28 to %"class.std::__1::basic_ostream"*
  %769 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %28, i64 0, i32 4
  %770 = bitcast i32* %19 to i8*
  %771 = bitcast i32* %20 to i8*
  %772 = bitcast %"class.spvtools::DiagnosticStream"* %21 to i8*
  %773 = bitcast %"class.spvtools::DiagnosticStream"* %21 to %"class.std::__1::basic_ostream"*
  %774 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %21, i64 0, i32 4
  %775 = bitcast %"class.spvtools::DiagnosticStream"* %17 to i8*
  %776 = bitcast %"class.spvtools::DiagnosticStream"* %17 to %"class.std::__1::basic_ostream"*
  %777 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %17, i64 0, i32 4
  br label %781

778:                                              ; preds = %796, %1827
  %779 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %782, i64 1
  %780 = icmp eq %"class.spvtools::val::Instruction"* %779, %677
  br i1 %780, label %1830, label %781

781:                                              ; preds = %679, %778
  %782 = phi %"class.spvtools::val::Instruction"* [ %676, %679 ], [ %779, %778 ]
  %783 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %782, i64 0, i32 2, i32 2
  %784 = load i16, i16* %783, align 2
  %785 = icmp eq i16 %784, 15
  br i1 %785, label %786, label %1827

786:                                              ; preds = %781
  %787 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %782, i64 0, i32 1
  %788 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %782, i64 0, i32 1, i32 0, i32 1
  %789 = bitcast %struct.spv_parsed_operand_t** %788 to i64*
  %790 = load i64, i64* %789, align 8
  %791 = bitcast %"class.std::__1::vector.97"* %787 to i64*
  %792 = load i64, i64* %791, align 8
  %793 = icmp eq i64 %790, %792
  br i1 %793, label %794, label %796

794:                                              ; preds = %786
  %795 = bitcast %"class.std::__1::vector.97"* %787 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %795) #11
  unreachable

796:                                              ; preds = %786
  %797 = inttoptr i64 %792 to %struct.spv_parsed_operand_t*
  %798 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %797, i64 0, i32 0
  %799 = load i16, i16* %798, align 4
  %800 = zext i16 %799 to i64
  %801 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %782, i64 0, i32 0, i32 0, i32 0
  %802 = load i32*, i32** %801, align 8
  %803 = getelementptr inbounds i32, i32* %802, i64 %800
  %804 = load i32, i32* %803, align 4
  %805 = icmp ult i32 %804, 5
  br i1 %805, label %806, label %778

806:                                              ; preds = %796
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %680) #10
  store i32 -1431655766, i32* %686, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %680, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %685, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %687) #10
  store i32 -1431655766, i32* %693, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %687, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %692, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %694) #10
  store i32 -1431655766, i32* %700, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %694, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %699, align 8
  %807 = sub i64 %790, %792
  %808 = ashr exact i64 %807, 4
  %809 = icmp ugt i64 %808, 3
  br i1 %809, label %810, label %1789

810:                                              ; preds = %806, %1771
  %811 = phi i64 [ %1774, %1771 ], [ %790, %806 ]
  %812 = phi i64 [ %1775, %1771 ], [ %792, %806 ]
  %813 = phi i64 [ %1773, %1771 ], [ 3, %806 ]
  %814 = phi i32 [ %1772, %1771 ], [ 3, %806 ]
  %815 = sub i64 %811, %812
  %816 = ashr exact i64 %815, 4
  %817 = icmp ugt i64 %816, %813
  br i1 %817, label %820, label %818

818:                                              ; preds = %810
  %819 = bitcast %"class.std::__1::vector.97"* %787 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %819) #11
  unreachable

820:                                              ; preds = %810
  %821 = inttoptr i64 %812 to %struct.spv_parsed_operand_t*
  %822 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %821, i64 %813, i32 0
  %823 = load i16, i16* %822, align 4
  %824 = zext i16 %823 to i64
  %825 = load i32*, i32** %801, align 8
  %826 = getelementptr inbounds i32, i32* %825, i64 %824
  %827 = load i32, i32* %826, align 4
  %828 = call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %827) #10
  %829 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %828, i64 0, i32 1
  %830 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %828, i64 0, i32 1, i32 0, i32 1
  %831 = bitcast %struct.spv_parsed_operand_t** %830 to i64*
  %832 = load i64, i64* %831, align 8
  %833 = bitcast %"class.std::__1::vector.97"* %829 to i64*
  %834 = load i64, i64* %833, align 8
  %835 = sub i64 %832, %834
  %836 = ashr exact i64 %835, 4
  %837 = icmp ugt i64 %836, 2
  br i1 %837, label %840, label %838

838:                                              ; preds = %820
  %839 = bitcast %"class.std::__1::vector.97"* %829 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %839) #11
  unreachable

840:                                              ; preds = %820
  %841 = inttoptr i64 %834 to %struct.spv_parsed_operand_t*
  %842 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %841, i64 2, i32 0
  %843 = load i16, i16* %842, align 4
  %844 = zext i16 %843 to i64
  %845 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %828, i64 0, i32 0, i32 0, i32 0
  %846 = load i32*, i32** %845, align 8
  %847 = getelementptr inbounds i32, i32* %846, i64 %844
  %848 = load i32, i32* %847, align 4
  %849 = or i32 %848, 2
  %850 = icmp eq i32 %849, 3
  br i1 %850, label %851, label %1771

851:                                              ; preds = %840
  %852 = icmp eq i32 %848, 1
  %853 = select i1 %852, %"class.std::__1::unordered_set"* %33, %"class.std::__1::unordered_set"* %34
  %854 = load i64, i64* %789, align 8
  %855 = load i64, i64* %791, align 8
  %856 = icmp eq i64 %854, %855
  br i1 %856, label %857, label %859

857:                                              ; preds = %851
  %858 = bitcast %"class.std::__1::vector.97"* %787 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %858) #11
  unreachable

859:                                              ; preds = %851
  %860 = inttoptr i64 %855 to %struct.spv_parsed_operand_t*
  %861 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %860, i64 0, i32 0
  %862 = load i16, i16* %861, align 4
  %863 = zext i16 %862 to i64
  %864 = load i32*, i32** %801, align 8
  %865 = getelementptr inbounds i32, i32* %864, i64 %863
  %866 = load i32, i32* %865, align 4
  %867 = icmp ne i32 %866, 4
  %868 = icmp eq i32 %848, 3
  %869 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %841, i64 0, i32 0
  %870 = load i16, i16* %869, align 4
  %871 = zext i16 %870 to i64
  %872 = getelementptr inbounds i32, i32* %846, i64 %871
  %873 = load i32, i32* %872, align 4
  %874 = call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %873) #10
  %875 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %874, i64 0, i32 1
  %876 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %874, i64 0, i32 1, i32 0, i32 1
  %877 = bitcast %struct.spv_parsed_operand_t** %876 to i64*
  %878 = load i64, i64* %877, align 8
  %879 = bitcast %"class.std::__1::vector.97"* %875 to i64*
  %880 = load i64, i64* %879, align 8
  %881 = sub i64 %878, %880
  %882 = ashr exact i64 %881, 4
  %883 = icmp ugt i64 %882, 2
  br i1 %883, label %886, label %884

884:                                              ; preds = %859
  %885 = bitcast %"class.std::__1::vector.97"* %875 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %885) #11
  unreachable

886:                                              ; preds = %859
  %887 = inttoptr i64 %880 to %struct.spv_parsed_operand_t*
  %888 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %887, i64 2, i32 0
  %889 = load i16, i16* %888, align 4
  %890 = zext i16 %889 to i64
  %891 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %874, i64 0, i32 0, i32 0, i32 0
  %892 = load i32*, i32** %891, align 8
  %893 = getelementptr inbounds i32, i32* %892, i64 %890
  %894 = load i32, i32* %893, align 4
  %895 = call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %894) #10
  %896 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %828, i64 0, i32 2, i32 5
  %897 = load i32, i32* %896, align 4
  %898 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %703, align 8
  %899 = icmp eq %"class.std::__1::__tree_node"* %898, null
  br i1 %899, label %926, label %900

900:                                              ; preds = %886, %922
  %901 = phi %"class.std::__1::__tree_node"* [ %925, %922 ], [ %898, %886 ]
  %902 = phi %"class.std::__1::__tree_node_base"** [ %924, %922 ], [ %704, %886 ]
  %903 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %901, i64 0, i32 1, i32 0, i32 0
  %904 = load i32, i32* %903, align 4
  %905 = icmp ugt i32 %904, %897
  br i1 %905, label %906, label %912

906:                                              ; preds = %900
  %907 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %901, i64 0, i32 0, i32 0, i32 0
  %908 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %907, align 8
  %909 = icmp eq %"class.std::__1::__tree_node_base"* %908, null
  br i1 %909, label %910, label %922

910:                                              ; preds = %906
  %911 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %901, i64 0, i32 0, i32 0
  br label %926

912:                                              ; preds = %900
  %913 = icmp ult i32 %904, %897
  br i1 %913, label %914, label %920

914:                                              ; preds = %912
  %915 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %901, i64 0, i32 0, i32 1
  %916 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %915, align 8
  %917 = icmp eq %"class.std::__1::__tree_node_base"* %916, null
  br i1 %917, label %918, label %922

918:                                              ; preds = %914
  %919 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %901, i64 0, i32 0, i32 0
  br label %926

920:                                              ; preds = %912
  %921 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %901, i64 0, i32 0, i32 0
  br label %926

922:                                              ; preds = %914, %906
  %923 = phi %"class.std::__1::__tree_node_base"* [ %908, %906 ], [ %916, %914 ]
  %924 = phi %"class.std::__1::__tree_node_base"** [ %907, %906 ], [ %915, %914 ]
  %925 = bitcast %"class.std::__1::__tree_node_base"* %923 to %"class.std::__1::__tree_node"*
  br label %900

926:                                              ; preds = %920, %918, %910, %886
  %927 = phi %"class.std::__1::__tree_end_node"* [ %911, %910 ], [ %919, %918 ], [ %921, %920 ], [ %702, %886 ]
  %928 = phi %"class.std::__1::__tree_node_base"** [ %907, %910 ], [ %915, %918 ], [ %902, %920 ], [ %705, %886 ]
  %929 = bitcast %"class.std::__1::__tree_node_base"** %928 to %"class.std::__1::__tree_node"**
  %930 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %929, align 8
  %931 = icmp eq %"class.std::__1::__tree_node"* %930, null
  br i1 %931, label %932, label %954

932:                                              ; preds = %926
  %933 = call i8* @_Znwm(i64 64) #12, !noalias !5
  %934 = getelementptr inbounds i8, i8* %933, i64 32
  %935 = bitcast i8* %934 to i32*
  store i32 %897, i32* %935, align 8, !noalias !5
  %936 = getelementptr inbounds i8, i8* %933, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %936, i8 0, i64 24, i1 false) #10, !noalias !5
  %937 = bitcast i8* %933 to %"class.std::__1::__tree_node"*
  %938 = bitcast i8* %933 to %"class.std::__1::__tree_node_base"*
  %939 = getelementptr inbounds i8, i8* %933, i64 16
  %940 = bitcast i8* %939 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %933, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %927, %"class.std::__1::__tree_end_node"** %940, align 8
  %941 = bitcast %"class.std::__1::__tree_node_base"** %928 to i8**
  store i8* %933, i8** %941, align 8
  %942 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %706, align 8
  %943 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %942, i64 0, i32 0
  %944 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %943, align 8
  %945 = icmp eq %"class.std::__1::__tree_node_base"* %944, null
  br i1 %945, label %949, label %946

946:                                              ; preds = %932
  %947 = ptrtoint %"class.std::__1::__tree_node_base"* %944 to i64
  store i64 %947, i64* %707, align 8
  %948 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %928, align 8
  br label %949

949:                                              ; preds = %946, %932
  %950 = phi %"class.std::__1::__tree_node_base"* [ %938, %932 ], [ %948, %946 ]
  %951 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %704, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %951, %"class.std::__1::__tree_node_base"* %950) #10
  %952 = load i64, i64* %708, align 8
  %953 = add i64 %952, 1
  store i64 %953, i64* %708, align 8
  br label %954

954:                                              ; preds = %949, %926
  %955 = phi %"class.std::__1::__tree_node"* [ %930, %926 ], [ %937, %949 ]
  %956 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %955, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %957 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %956, align 8
  %958 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %955, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %959 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %958, align 8
  %960 = icmp eq %"class.spvtools::val::Decoration"* %957, %959
  br i1 %960, label %1030, label %961

961:                                              ; preds = %954
  %962 = xor i1 %868, true
  %963 = or i1 %867, %962
  br label %964

964:                                              ; preds = %1018, %961
  %965 = phi i8 [ 0, %961 ], [ %1027, %1018 ]
  %966 = phi i32 [ 0, %961 ], [ %1026, %1018 ]
  %967 = phi i8 [ 0, %961 ], [ %1025, %1018 ]
  %968 = phi i32 [ 0, %961 ], [ %1024, %1018 ]
  %969 = phi i8 [ 0, %961 ], [ %1023, %1018 ]
  %970 = phi i8 [ 0, %961 ], [ %1022, %1018 ]
  %971 = phi i8 [ 0, %961 ], [ %1021, %1018 ]
  %972 = phi i32 [ 0, %961 ], [ %1020, %1018 ]
  %973 = phi i8 [ 0, %961 ], [ %1019, %1018 ]
  %974 = phi %"class.spvtools::val::Decoration"* [ %957, %961 ], [ %1028, %1018 ]
  %975 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %974, i64 0, i32 0
  %976 = load i32, i32* %975, align 8
  switch i32 %976, label %1014 [
    i32 30, label %977
    i32 31, label %988
    i32 32, label %999
    i32 11, label %1771
    i32 15, label %1018
    i32 5273, label %1017
  ]

977:                                              ; preds = %964
  %978 = and i8 %965, 1
  %979 = icmp eq i8 %978, 0
  %980 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %974, i64 0, i32 2, i32 0, i32 0
  %981 = load i32*, i32** %980, align 8
  %982 = load i32, i32* %981, align 4
  br i1 %979, label %1018, label %983

983:                                              ; preds = %977
  %984 = icmp eq i32 %982, %966
  br i1 %984, label %1018, label %985

985:                                              ; preds = %983
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %718) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %13, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %828) #10
  %986 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %719, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i64 0, i64 0), i64 45) #10
  %987 = load i32, i32* %720, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %718) #10
  br label %1768

988:                                              ; preds = %964
  %989 = and i8 %967, 1
  %990 = icmp eq i8 %989, 0
  %991 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %974, i64 0, i32 2, i32 0, i32 0
  %992 = load i32*, i32** %991, align 8
  %993 = load i32, i32* %992, align 4
  br i1 %990, label %1018, label %994

994:                                              ; preds = %988
  %995 = icmp eq i32 %993, %968
  br i1 %995, label %1018, label %996

996:                                              ; preds = %994
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %715) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %14, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %828) #10
  %997 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %716, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0), i64 46) #10
  %998 = load i32, i32* %717, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %715) #10
  br label %1768

999:                                              ; preds = %964
  br i1 %963, label %1000, label %1003

1000:                                             ; preds = %999
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %712) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %15, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %828) #10
  %1001 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %713, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i64 54) #10
  %1002 = load i32, i32* %714, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %712) #10
  br label %1768

1003:                                             ; preds = %999
  %1004 = and i8 %973, 1
  %1005 = icmp eq i8 %1004, 0
  %1006 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %974, i64 0, i32 2, i32 0, i32 0
  %1007 = load i32*, i32** %1006, align 8
  %1008 = load i32, i32* %1007, align 4
  br i1 %1005, label %1018, label %1009

1009:                                             ; preds = %1003
  %1010 = icmp eq i32 %1008, %972
  br i1 %1010, label %1018, label %1011

1011:                                             ; preds = %1009
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %709) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %16, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %828) #10
  %1012 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %710, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i64 42) #10
  %1013 = load i32, i32* %711, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %709) #10
  br label %1768

1014:                                             ; preds = %964
  %1015 = icmp eq i32 %976, 5285
  %1016 = select i1 %1015, i8 1, i8 %969
  br label %1018

1017:                                             ; preds = %964
  br label %1018

1018:                                             ; preds = %1017, %1014, %1009, %1003, %994, %988, %983, %977, %964
  %1019 = phi i8 [ %973, %1014 ], [ %973, %964 ], [ %973, %1017 ], [ %973, %983 ], [ %973, %994 ], [ 1, %1009 ], [ %973, %977 ], [ %973, %988 ], [ 1, %1003 ]
  %1020 = phi i32 [ %972, %1014 ], [ %972, %964 ], [ %972, %1017 ], [ %972, %983 ], [ %972, %994 ], [ %972, %1009 ], [ %972, %977 ], [ %972, %988 ], [ %1008, %1003 ]
  %1021 = phi i8 [ %971, %1014 ], [ 1, %964 ], [ %971, %1017 ], [ %971, %983 ], [ %971, %994 ], [ %971, %1009 ], [ %971, %977 ], [ %971, %988 ], [ %971, %1003 ]
  %1022 = phi i8 [ %970, %1014 ], [ %970, %964 ], [ 1, %1017 ], [ %970, %983 ], [ %970, %994 ], [ %970, %1009 ], [ %970, %977 ], [ %970, %988 ], [ %970, %1003 ]
  %1023 = phi i8 [ %1016, %1014 ], [ %969, %964 ], [ %969, %1017 ], [ %969, %983 ], [ %969, %994 ], [ %969, %1009 ], [ %969, %977 ], [ %969, %988 ], [ %969, %1003 ]
  %1024 = phi i32 [ %968, %1014 ], [ %968, %964 ], [ %968, %1017 ], [ %968, %983 ], [ %968, %994 ], [ %968, %1009 ], [ %968, %977 ], [ %993, %988 ], [ %968, %1003 ]
  %1025 = phi i8 [ %967, %1014 ], [ %967, %964 ], [ %967, %1017 ], [ %967, %983 ], [ 1, %994 ], [ %967, %1009 ], [ %967, %977 ], [ 1, %988 ], [ %967, %1003 ]
  %1026 = phi i32 [ %966, %1014 ], [ %966, %964 ], [ %966, %1017 ], [ %966, %983 ], [ %966, %994 ], [ %966, %1009 ], [ %982, %977 ], [ %966, %988 ], [ %966, %1003 ]
  %1027 = phi i8 [ %965, %1014 ], [ %965, %964 ], [ %965, %1017 ], [ 1, %983 ], [ %965, %994 ], [ %965, %1009 ], [ 1, %977 ], [ %965, %988 ], [ %965, %1003 ]
  %1028 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %974, i64 1
  %1029 = icmp eq %"class.spvtools::val::Decoration"* %1028, %959
  br i1 %1029, label %1030, label %964

1030:                                             ; preds = %1018, %954
  %1031 = phi i8 [ 0, %954 ], [ %1019, %1018 ]
  %1032 = phi i32 [ 0, %954 ], [ %1020, %1018 ]
  %1033 = phi i8 [ 0, %954 ], [ %1021, %1018 ]
  %1034 = phi i8 [ 0, %954 ], [ %1022, %1018 ]
  %1035 = phi i8 [ 0, %954 ], [ %1023, %1018 ]
  %1036 = phi i32 [ 0, %954 ], [ %1024, %1018 ]
  %1037 = phi i32 [ 0, %954 ], [ %1026, %1018 ]
  %1038 = phi i8 [ 0, %954 ], [ %1027, %1018 ]
  %1039 = load i64, i64* %789, align 8
  %1040 = load i64, i64* %791, align 8
  %1041 = icmp eq i64 %1039, %1040
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1030
  %1043 = bitcast %"class.std::__1::vector.97"* %787 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1043) #11
  unreachable

1044:                                             ; preds = %1030
  %1045 = inttoptr i64 %1040 to %struct.spv_parsed_operand_t*
  %1046 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %1045, i64 0, i32 0
  %1047 = load i16, i16* %1046, align 4
  %1048 = zext i16 %1047 to i64
  %1049 = load i32*, i32** %801, align 8
  %1050 = getelementptr inbounds i32, i32* %1049, i64 %1048
  %1051 = load i32, i32* %1050, align 4
  switch i32 %1051, label %1096 [
    i32 1, label %1052
    i32 2, label %1055
    i32 3, label %1068
    i32 4, label %1060
    i32 5268, label %1064
  ]

1052:                                             ; preds = %1044
  %1053 = and i8 %1033, 1
  %1054 = icmp eq i8 %1053, 0
  br i1 %1054, label %1069, label %1096

1055:                                             ; preds = %1044
  %1056 = xor i1 %868, true
  %1057 = and i8 %1033, 1
  %1058 = icmp eq i8 %1057, 0
  %1059 = and i1 %1058, %1056
  br i1 %1059, label %1069, label %1096

1060:                                             ; preds = %1044
  %1061 = and i8 %1035, 1
  %1062 = icmp eq i8 %1061, 0
  %1063 = or i1 %868, %1062
  br i1 %1063, label %1096, label %1069

1064:                                             ; preds = %1044
  %1065 = and i8 %1034, 1
  %1066 = icmp eq i8 %1065, 0
  %1067 = and i1 %868, %1066
  br i1 %1067, label %1069, label %1096

1068:                                             ; preds = %1044
  br i1 %868, label %1096, label %1069

1069:                                             ; preds = %1068, %1064, %1060, %1055, %1052
  %1070 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %895, i64 0, i32 2, i32 2
  %1071 = load i16, i16* %1070, align 2
  %1072 = and i16 %1071, -2
  %1073 = icmp eq i16 %1072, 28
  br i1 %1073, label %1074, label %1096

1074:                                             ; preds = %1069
  %1075 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %895, i64 0, i32 1
  %1076 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %895, i64 0, i32 1, i32 0, i32 1
  %1077 = bitcast %struct.spv_parsed_operand_t** %1076 to i64*
  %1078 = load i64, i64* %1077, align 8
  %1079 = bitcast %"class.std::__1::vector.97"* %1075 to i64*
  %1080 = load i64, i64* %1079, align 8
  %1081 = sub i64 %1078, %1080
  %1082 = ashr exact i64 %1081, 4
  %1083 = icmp ugt i64 %1082, 1
  br i1 %1083, label %1086, label %1084

1084:                                             ; preds = %1074
  %1085 = bitcast %"class.std::__1::vector.97"* %1075 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1085) #11
  unreachable

1086:                                             ; preds = %1074
  %1087 = inttoptr i64 %1080 to %struct.spv_parsed_operand_t*
  %1088 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %1087, i64 1, i32 0
  %1089 = load i16, i16* %1088, align 4
  %1090 = zext i16 %1089 to i64
  %1091 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %895, i64 0, i32 0, i32 0, i32 0
  %1092 = load i32*, i32** %1091, align 8
  %1093 = getelementptr inbounds i32, i32* %1092, i64 %1090
  %1094 = load i32, i32* %1093, align 4
  %1095 = call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %1094) #10
  br label %1096

1096:                                             ; preds = %1086, %1069, %1068, %1064, %1060, %1055, %1052, %1044
  %1097 = phi %"class.spvtools::val::Instruction"* [ %1095, %1086 ], [ %895, %1068 ], [ %895, %1044 ], [ %895, %1064 ], [ %895, %1060 ], [ %895, %1055 ], [ %895, %1052 ], [ %895, %1069 ]
  %1098 = phi i32 [ %1094, %1086 ], [ %894, %1068 ], [ %894, %1044 ], [ %894, %1064 ], [ %894, %1060 ], [ %894, %1055 ], [ %894, %1052 ], [ %894, %1069 ]
  %1099 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1097, i64 0, i32 2, i32 2
  %1100 = load i16, i16* %1099, align 2
  %1101 = icmp eq i16 %1100, 30
  %1102 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %703, align 8
  br i1 %1101, label %1103, label %1142

1103:                                             ; preds = %1096
  %1104 = icmp eq %"class.std::__1::__tree_node"* %1102, null
  br i1 %1104, label %1188, label %1105

1105:                                             ; preds = %1103, %1105
  %1106 = phi %"class.std::__1::__tree_end_node"* [ %1116, %1105 ], [ %702, %1103 ]
  %1107 = phi %"class.std::__1::__tree_node"* [ %1117, %1105 ], [ %1102, %1103 ]
  %1108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1107, i64 0, i32 1, i32 0, i32 0
  %1109 = load i32, i32* %1108, align 4
  %1110 = icmp ult i32 %1109, %1098
  %1111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1107, i64 0, i32 0, i32 1
  %1112 = bitcast %"class.std::__1::__tree_node_base"** %1111 to %"class.std::__1::__tree_node"**
  %1113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1107, i64 0, i32 0, i32 0
  %1114 = bitcast %"class.std::__1::__tree_node"* %1107 to %"class.std::__1::__tree_node"**
  %1115 = select i1 %1110, %"class.std::__1::__tree_node"** %1112, %"class.std::__1::__tree_node"** %1114
  %1116 = select i1 %1110, %"class.std::__1::__tree_end_node"* %1106, %"class.std::__1::__tree_end_node"* %1113
  %1117 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1115, align 8
  %1118 = icmp eq %"class.std::__1::__tree_node"* %1117, null
  br i1 %1118, label %1119, label %1105

1119:                                             ; preds = %1105
  %1120 = icmp eq %"class.std::__1::__tree_end_node"* %1116, %702
  br i1 %1120, label %1142, label %1121

1121:                                             ; preds = %1119
  %1122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1116, i64 4
  %1123 = bitcast %"class.std::__1::__tree_end_node"* %1122 to i32*
  %1124 = load i32, i32* %1123, align 4
  %1125 = icmp ugt i32 %1124, %1098
  br i1 %1125, label %1142, label %1126

1126:                                             ; preds = %1121
  %1127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1116, i64 5
  %1128 = bitcast %"class.std::__1::__tree_end_node"* %1127 to %"class.spvtools::val::Decoration"**
  %1129 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %1128, align 8
  %1130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1116, i64 6
  %1131 = bitcast %"class.std::__1::__tree_end_node"* %1130 to %"class.spvtools::val::Decoration"**
  %1132 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %1131, align 8
  %1133 = icmp eq %"class.spvtools::val::Decoration"* %1129, %1132
  br i1 %1133, label %1142, label %1136

1134:                                             ; preds = %1136
  %1135 = icmp eq %"class.spvtools::val::Decoration"* %1141, %1132
  br i1 %1135, label %1142, label %1136

1136:                                             ; preds = %1126, %1134
  %1137 = phi %"class.spvtools::val::Decoration"* [ %1141, %1134 ], [ %1129, %1126 ]
  %1138 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1137, i64 0, i32 0
  %1139 = load i32, i32* %1138, align 8
  %1140 = icmp eq i32 %1139, 11
  %1141 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1137, i64 1
  br i1 %1140, label %1771, label %1134

1142:                                             ; preds = %1134, %1126, %1121, %1119, %1096
  %1143 = icmp eq %"class.std::__1::__tree_node"* %1102, null
  br i1 %1143, label %1188, label %1144

1144:                                             ; preds = %1142, %1144
  %1145 = phi %"class.std::__1::__tree_end_node"* [ %1155, %1144 ], [ %702, %1142 ]
  %1146 = phi %"class.std::__1::__tree_node"* [ %1156, %1144 ], [ %1102, %1142 ]
  %1147 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1146, i64 0, i32 1, i32 0, i32 0
  %1148 = load i32, i32* %1147, align 4
  %1149 = icmp ult i32 %1148, %1098
  %1150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1146, i64 0, i32 0, i32 1
  %1151 = bitcast %"class.std::__1::__tree_node_base"** %1150 to %"class.std::__1::__tree_node"**
  %1152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1146, i64 0, i32 0, i32 0
  %1153 = bitcast %"class.std::__1::__tree_node"* %1146 to %"class.std::__1::__tree_node"**
  %1154 = select i1 %1149, %"class.std::__1::__tree_node"** %1151, %"class.std::__1::__tree_node"** %1153
  %1155 = select i1 %1149, %"class.std::__1::__tree_end_node"* %1145, %"class.std::__1::__tree_end_node"* %1152
  %1156 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1154, align 8
  %1157 = icmp eq %"class.std::__1::__tree_node"* %1156, null
  br i1 %1157, label %1158, label %1144

1158:                                             ; preds = %1144
  %1159 = icmp eq %"class.std::__1::__tree_end_node"* %1155, %702
  br i1 %1159, label %1188, label %1160

1160:                                             ; preds = %1158
  %1161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1155, i64 4
  %1162 = bitcast %"class.std::__1::__tree_end_node"* %1161 to i32*
  %1163 = load i32, i32* %1162, align 4
  %1164 = icmp ugt i32 %1163, %1098
  br i1 %1164, label %1188, label %1165

1165:                                             ; preds = %1160
  %1166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1155, i64 5
  %1167 = bitcast %"class.std::__1::__tree_end_node"* %1166 to %"class.spvtools::val::Decoration"**
  %1168 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %1167, align 8
  %1169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1155, i64 6
  %1170 = bitcast %"class.std::__1::__tree_end_node"* %1169 to %"class.spvtools::val::Decoration"**
  %1171 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %1170, align 8
  %1172 = icmp eq %"class.spvtools::val::Decoration"* %1168, %1171
  br i1 %1172, label %1188, label %1175

1173:                                             ; preds = %1175
  %1174 = icmp eq %"class.spvtools::val::Decoration"* %1180, %1171
  br i1 %1174, label %1188, label %1175

1175:                                             ; preds = %1165, %1173
  %1176 = phi %"class.spvtools::val::Decoration"* [ %1180, %1173 ], [ %1168, %1165 ]
  %1177 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1176, i64 0, i32 0
  %1178 = load i32, i32* %1177, align 8
  %1179 = icmp eq i32 %1178, 2
  %1180 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1176, i64 1
  br i1 %1179, label %1181, label %1173

1181:                                             ; preds = %1175
  %1182 = and i8 %1038, 1
  %1183 = icmp eq i8 %1182, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %721) #10
  %1184 = select i1 %868, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)
  %1185 = select i1 %868, i64 6, i64 5
  %1186 = trunc i64 %1185 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %721, i8 -86, i64 24, i1 false) #10
  store i8 %1186, i8* %725, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %721, i8* align 1 %1184, i64 %1185, i1 false) #10
  %1187 = getelementptr inbounds i8, i8* %721, i64 %1185
  store i8 0, i8* %1187, align 1
  br i1 %1183, label %1308, label %1199

1188:                                             ; preds = %1173, %1165, %1160, %1158, %1142, %1103
  %1189 = and i8 %1038, 1
  %1190 = icmp eq i8 %1189, 0
  br i1 %1190, label %1191, label %1194

1191:                                             ; preds = %1188
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %775) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %17, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %828) #10
  %1192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %776, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i64 42) #10
  %1193 = load i32, i32* %777, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %775) #10
  br label %1768

1194:                                             ; preds = %1188
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %721) #10
  %1195 = select i1 %868, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)
  %1196 = select i1 %868, i64 6, i64 5
  %1197 = trunc i64 %1196 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %721, i8 -86, i64 24, i1 false) #10
  store i8 %1197, i8* %725, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %721, i8* align 1 %1195, i64 %1196, i1 false) #10
  %1198 = getelementptr inbounds i8, i8* %721, i64 %1196
  store i8 0, i8* %1198, align 1
  br label %1199

1199:                                             ; preds = %1194, %1181
  %1200 = load i16, i16* %1099, align 2
  %1201 = icmp eq i16 %1200, 28
  br i1 %1201, label %1202, label %1249

1202:                                             ; preds = %1199
  %1203 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1097, i64 0, i32 1
  %1204 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1097, i64 0, i32 1, i32 0, i32 1
  %1205 = bitcast %struct.spv_parsed_operand_t** %1204 to i64*
  %1206 = load i64, i64* %1205, align 8
  %1207 = bitcast %"class.std::__1::vector.97"* %1203 to i64*
  %1208 = load i64, i64* %1207, align 8
  %1209 = sub i64 %1206, %1208
  %1210 = ashr exact i64 %1209, 4
  %1211 = icmp ugt i64 %1210, 2
  br i1 %1211, label %1214, label %1212

1212:                                             ; preds = %1202
  %1213 = bitcast %"class.std::__1::vector.97"* %1203 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1213) #11
  unreachable

1214:                                             ; preds = %1202
  %1215 = inttoptr i64 %1208 to %struct.spv_parsed_operand_t*
  %1216 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %1215, i64 2, i32 0
  %1217 = load i16, i16* %1216, align 4
  %1218 = zext i16 %1217 to i64
  %1219 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1097, i64 0, i32 0, i32 0, i32 0
  %1220 = load i32*, i32** %1219, align 8
  %1221 = getelementptr inbounds i32, i32* %1220, i64 %1218
  %1222 = load i32, i32* %1221, align 4
  %1223 = call i64 @_ZNK8spvtools3val17ValidationState_t16EvalInt32IfConstEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %1222) #10
  %1224 = load i64, i64* %1205, align 8
  %1225 = load i64, i64* %1207, align 8
  %1226 = sub i64 %1224, %1225
  %1227 = ashr exact i64 %1226, 4
  %1228 = icmp ugt i64 %1227, 1
  br i1 %1228, label %1231, label %1229

1229:                                             ; preds = %1214
  %1230 = bitcast %"class.std::__1::vector.97"* %1203 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1230) #11
  unreachable

1231:                                             ; preds = %1214
  %1232 = trunc i64 %1223 to i8
  %1233 = icmp eq i8 %1232, 0
  %1234 = and i64 %1223, 65280
  %1235 = icmp eq i64 %1234, 0
  %1236 = or i1 %1233, %1235
  %1237 = lshr i64 %1223, 32
  %1238 = trunc i64 %1237 to i32
  %1239 = inttoptr i64 %1225 to %struct.spv_parsed_operand_t*
  %1240 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %1239, i64 1, i32 0
  %1241 = load i16, i16* %1240, align 4
  %1242 = zext i16 %1241 to i64
  %1243 = load i32*, i32** %1219, align 8
  %1244 = getelementptr inbounds i32, i32* %1243, i64 %1242
  %1245 = load i32, i32* %1244, align 4
  %1246 = call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %1245) #10
  br i1 %1236, label %1249, label %1247

1247:                                             ; preds = %1231
  %1248 = icmp eq i32 %1238, 0
  br i1 %1248, label %1760, label %1249

1249:                                             ; preds = %1247, %1231, %1199
  %1250 = phi %"class.spvtools::val::Instruction"* [ %1246, %1247 ], [ %1097, %1199 ], [ %1246, %1231 ]
  %1251 = phi i32 [ %1238, %1247 ], [ 1, %1199 ], [ 1, %1231 ]
  %1252 = and i8 %1031, 1
  %1253 = icmp ne i8 %1252, 0
  %1254 = icmp eq i32 %1032, 1
  %1255 = and i1 %1253, %1254
  %1256 = select i1 %1255, %"class.std::__1::unordered_set"* %35, %"class.std::__1::unordered_set"* %853
  %1257 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %1256, i64 0, i32 0
  br label %1258

1258:                                             ; preds = %1304, %1249
  %1259 = phi i32 [ 0, %1249 ], [ %1305, %1304 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %770) #10
  store i32 0, i32* %19, align 4
  %1260 = call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_120NumConsumedLocationsERNS0_17ValidationState_tEPKNS0_11InstructionEPj(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %1250, i32* nonnull %19) #10
  %1261 = icmp eq i32 %1260, 0
  br i1 %1261, label %1262, label %1307

1262:                                             ; preds = %1258
  %1263 = call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_121NumConsumedComponentsERNS0_17ValidationState_tEPKNS0_11InstructionE(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %1250) #10
  %1264 = load i32, i32* %19, align 4
  %1265 = mul i32 %1264, %1259
  %1266 = add i32 %1265, %1037
  %1267 = shl i32 %1266, 2
  %1268 = add i32 %1266, %1264
  %1269 = shl i32 %1268, 2
  %1270 = icmp eq i32 %1263, 0
  %1271 = add i32 %1267, %1036
  %1272 = add i32 %1271, %1263
  %1273 = select i1 %1270, i32 %1267, i32 %1271
  %1274 = select i1 %1270, i32 %1269, i32 %1272
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %771) #10
  store i32 %1273, i32* %20, align 4
  %1275 = icmp ult i32 %1273, %1274
  br i1 %1275, label %1276, label %1304

1276:                                             ; preds = %1262, %1281
  %1277 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %1257, i32* nonnull dereferenceable(4) %20, i32* nonnull dereferenceable(4) %20) #10
  %1278 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %1277, 1
  %1279 = and i8 %1278, 1
  %1280 = icmp eq i8 %1279, 0
  br i1 %1280, label %1285, label %1281

1281:                                             ; preds = %1276
  %1282 = load i32, i32* %20, align 4
  %1283 = add i32 %1282, 1
  store i32 %1283, i32* %20, align 4
  %1284 = icmp ult i32 %1283, %1274
  br i1 %1284, label %1276, label %1304

1285:                                             ; preds = %1276
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %772) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %21, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %782) #10
  %1286 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %773, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i64 28) #10
  %1287 = load i8, i8* %725, align 1
  %1288 = icmp slt i8 %1287, 0
  %1289 = load i8*, i8** %722, align 8
  %1290 = load i64, i64* %723, align 8
  %1291 = zext i8 %1287 to i64
  %1292 = select i1 %1288, i8* %1289, i8* %721
  %1293 = select i1 %1288, i64 %1290, i64 %1291
  %1294 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %773, i8* %1292, i64 %1293) #10
  %1295 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %773, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), i64 33) #10
  %1296 = load i32, i32* %20, align 4
  %1297 = lshr i32 %1296, 2
  %1298 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %773, i32 %1297) #10
  %1299 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %773, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i64 12) #10
  %1300 = load i32, i32* %20, align 4
  %1301 = and i32 %1300, 3
  %1302 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %773, i32 %1301) #10
  %1303 = load i32, i32* %774, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %772) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %771) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %770) #10
  br label %1761

1304:                                             ; preds = %1281, %1262
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %771) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %770) #10
  %1305 = add nuw i32 %1259, 1
  %1306 = icmp eq i32 %1305, %1251
  br i1 %1306, label %1760, label %1258

1307:                                             ; preds = %1258
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %770) #10
  br label %1761

1308:                                             ; preds = %1181
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %726) #10
  store i32 -1431655766, i32* %733, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %726, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %732, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %734) #10
  store i32 -1431655766, i32* %741, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %734, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %740, align 8
  br label %1309

1309:                                             ; preds = %1325, %1308
  %1310 = phi %"class.std::__1::__tree_node"* [ %1328, %1325 ], [ %1102, %1308 ]
  %1311 = phi %"class.std::__1::__tree_node_base"** [ %1327, %1325 ], [ %704, %1308 ]
  %1312 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1310, i64 0, i32 1, i32 0, i32 0
  %1313 = load i32, i32* %1312, align 4
  %1314 = icmp ugt i32 %1313, %1098
  br i1 %1314, label %1315, label %1319

1315:                                             ; preds = %1309
  %1316 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1310, i64 0, i32 0, i32 0, i32 0
  %1317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1316, align 8
  %1318 = icmp eq %"class.std::__1::__tree_node_base"* %1317, null
  br i1 %1318, label %1329, label %1325

1319:                                             ; preds = %1309
  %1320 = icmp ult i32 %1313, %1098
  br i1 %1320, label %1321, label %1329

1321:                                             ; preds = %1319
  %1322 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1310, i64 0, i32 0, i32 1
  %1323 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1322, align 8
  %1324 = icmp eq %"class.std::__1::__tree_node_base"* %1323, null
  br i1 %1324, label %1329, label %1325

1325:                                             ; preds = %1321, %1315
  %1326 = phi %"class.std::__1::__tree_node_base"* [ %1317, %1315 ], [ %1323, %1321 ]
  %1327 = phi %"class.std::__1::__tree_node_base"** [ %1316, %1315 ], [ %1322, %1321 ]
  %1328 = bitcast %"class.std::__1::__tree_node_base"* %1326 to %"class.std::__1::__tree_node"*
  br label %1309

1329:                                             ; preds = %1319, %1321, %1315
  %1330 = phi %"class.std::__1::__tree_node_base"** [ %1316, %1315 ], [ %1322, %1321 ], [ %1311, %1319 ]
  %1331 = bitcast %"class.std::__1::__tree_node_base"** %1330 to %"class.std::__1::__tree_node"**
  %1332 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1331, align 8
  %1333 = icmp eq %"class.std::__1::__tree_node"* %1332, null
  br i1 %1333, label %1334, label %1357

1334:                                             ; preds = %1329
  %1335 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1310, i64 0, i32 0, i32 0
  %1336 = call i8* @_Znwm(i64 64) #12, !noalias !8
  %1337 = getelementptr inbounds i8, i8* %1336, i64 32
  %1338 = bitcast i8* %1337 to i32*
  store i32 %1098, i32* %1338, align 8, !noalias !8
  %1339 = getelementptr inbounds i8, i8* %1336, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1339, i8 0, i64 24, i1 false) #10, !noalias !8
  %1340 = bitcast i8* %1336 to %"class.std::__1::__tree_node"*
  %1341 = bitcast i8* %1336 to %"class.std::__1::__tree_node_base"*
  %1342 = getelementptr inbounds i8, i8* %1336, i64 16
  %1343 = bitcast i8* %1342 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1336, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %1335, %"class.std::__1::__tree_end_node"** %1343, align 8
  %1344 = bitcast %"class.std::__1::__tree_node_base"** %1330 to i8**
  store i8* %1336, i8** %1344, align 8
  %1345 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %706, align 8
  %1346 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1345, i64 0, i32 0
  %1347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1346, align 8
  %1348 = icmp eq %"class.std::__1::__tree_node_base"* %1347, null
  br i1 %1348, label %1352, label %1349

1349:                                             ; preds = %1334
  %1350 = ptrtoint %"class.std::__1::__tree_node_base"* %1347 to i64
  store i64 %1350, i64* %707, align 8
  %1351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1330, align 8
  br label %1352

1352:                                             ; preds = %1349, %1334
  %1353 = phi %"class.std::__1::__tree_node_base"* [ %1341, %1334 ], [ %1351, %1349 ]
  %1354 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %704, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %1354, %"class.std::__1::__tree_node_base"* %1353) #10
  %1355 = load i64, i64* %708, align 8
  %1356 = add i64 %1355, 1
  store i64 %1356, i64* %708, align 8
  br label %1357

1357:                                             ; preds = %1352, %1329
  %1358 = phi %"class.std::__1::__tree_node"* [ %1332, %1329 ], [ %1340, %1352 ]
  %1359 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1358, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %1360 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %1359, align 8
  %1361 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1358, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %1362 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %1361, align 8
  %1363 = icmp eq %"class.spvtools::val::Decoration"* %1360, %1362
  br i1 %1363, label %1364, label %1377

1364:                                             ; preds = %1535, %1357
  %1365 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1097, i64 0, i32 1
  %1366 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1097, i64 0, i32 1, i32 0, i32 1
  %1367 = bitcast %struct.spv_parsed_operand_t** %1366 to i64*
  %1368 = load i64, i64* %1367, align 8
  %1369 = bitcast %"class.std::__1::vector.97"* %1365 to i64*
  %1370 = load i64, i64* %1369, align 8
  %1371 = sub i64 %1368, %1370
  %1372 = ashr exact i64 %1371, 4
  %1373 = icmp ugt i64 %1372, 1
  br i1 %1373, label %1374, label %1728

1374:                                             ; preds = %1364
  %1375 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1097, i64 0, i32 0, i32 0, i32 0
  %1376 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %853, i64 0, i32 0
  br label %1538

1377:                                             ; preds = %1357, %1535
  %1378 = phi %"class.spvtools::val::Decoration"* [ %1536, %1535 ], [ %1360, %1357 ]
  %1379 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 0
  %1380 = load i32, i32* %1379, align 8
  switch i32 %1380, label %1535 [
    i32 30, label %1381
    i32 31, label %1458
  ]

1381:                                             ; preds = %1377
  %1382 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 3
  %1383 = load i32, i32* %1382, align 8
  %1384 = zext i32 %1383 to i64
  %1385 = load i64, i64* %728, align 8
  %1386 = icmp eq i64 %1385, 0
  br i1 %1386, label %1434, label %1387

1387:                                             ; preds = %1381
  %1388 = call i64 @llvm.ctpop.i64(i64 %1385) #10, !range !4
  %1389 = icmp ugt i64 %1388, 1
  br i1 %1389, label %1393, label %1390

1390:                                             ; preds = %1387
  %1391 = add i64 %1385, 4294967295
  %1392 = and i64 %1391, %1384
  br label %1397

1393:                                             ; preds = %1387
  %1394 = icmp ugt i64 %1385, %1384
  br i1 %1394, label %1397, label %1395

1395:                                             ; preds = %1393
  %1396 = urem i64 %1384, %1385
  br label %1397

1397:                                             ; preds = %1395, %1393, %1390
  %1398 = phi i64 [ %1392, %1390 ], [ %1396, %1395 ], [ %1384, %1393 ]
  %1399 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %727, align 8
  %1400 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1399, i64 %1398
  %1401 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1400, align 8
  %1402 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1401, null
  br i1 %1402, label %1434, label %1403

1403:                                             ; preds = %1397
  %1404 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1401, i64 0, i32 0
  %1405 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1404, align 8
  %1406 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1405, null
  br i1 %1406, label %1434, label %1407

1407:                                             ; preds = %1403
  %1408 = add i64 %1385, -1
  br label %1409

1409:                                             ; preds = %1430, %1407
  %1410 = phi %"struct.std::__1::__hash_node_base.336"* [ %1405, %1407 ], [ %1432, %1430 ]
  %1411 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1410, i64 1
  %1412 = bitcast %"struct.std::__1::__hash_node_base.336"* %1411 to i64*
  %1413 = load i64, i64* %1412, align 8
  %1414 = icmp eq i64 %1413, %1384
  br i1 %1414, label %1425, label %1415

1415:                                             ; preds = %1409
  br i1 %1389, label %1418, label %1416

1416:                                             ; preds = %1415
  %1417 = and i64 %1413, %1408
  br label %1422

1418:                                             ; preds = %1415
  %1419 = icmp ult i64 %1413, %1385
  br i1 %1419, label %1422, label %1420

1420:                                             ; preds = %1418
  %1421 = urem i64 %1413, %1385
  br label %1422

1422:                                             ; preds = %1420, %1418, %1416
  %1423 = phi i64 [ %1417, %1416 ], [ %1421, %1420 ], [ %1413, %1418 ]
  %1424 = icmp eq i64 %1423, %1398
  br i1 %1424, label %1430, label %1434

1425:                                             ; preds = %1409
  %1426 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1410, i64 2
  %1427 = bitcast %"struct.std::__1::__hash_node_base.336"* %1426 to i32*
  %1428 = load i32, i32* %1427, align 4
  %1429 = icmp eq i32 %1428, %1383
  br i1 %1429, label %1443, label %1430

1430:                                             ; preds = %1425, %1422
  %1431 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1410, i64 0, i32 0
  %1432 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1431, align 8
  %1433 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1432, null
  br i1 %1433, label %1434, label %1409

1434:                                             ; preds = %1430, %1422, %1403, %1397, %1381
  %1435 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 2, i32 0, i32 0
  %1436 = load i32*, i32** %1435, align 8
  %1437 = load i32, i32* %1436, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %747) #10
  store i32 %1383, i32* %24, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %749) #10
  store i32* %24, i32** %750, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %751) #10
  %1438 = call { %"struct.std::__1::__hash_node_base.336"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.332"* nonnull %748, i32* nonnull dereferenceable(4) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.621"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.598"* nonnull dereferenceable(1) %8) #10
  %1439 = extractvalue { %"struct.std::__1::__hash_node_base.336"*, i8 } %1438, 0
  %1440 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1439, i64 2
  %1441 = bitcast %"struct.std::__1::__hash_node_base.336"* %1440 to %"struct.std::__1::pair.592"*
  %1442 = getelementptr inbounds %"struct.std::__1::pair.592", %"struct.std::__1::pair.592"* %1441, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %751) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %749) #10
  store i32 %1437, i32* %1442, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %747) #10
  br label %1535

1443:                                             ; preds = %1425
  %1444 = bitcast %"struct.std::__1::__hash_node_base.336"* %1426 to %"struct.std::__1::pair.592"*
  %1445 = getelementptr inbounds %"struct.std::__1::pair.592", %"struct.std::__1::pair.592"* %1444, i64 0, i32 1
  %1446 = load i32, i32* %1445, align 4
  %1447 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 2, i32 0, i32 0
  %1448 = load i32*, i32** %1447, align 8
  %1449 = load i32, i32* %1448, align 4
  %1450 = icmp eq i32 %1446, %1449
  br i1 %1450, label %1535, label %1451

1451:                                             ; preds = %1443
  %1452 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %755) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %25, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %1097) #10
  %1453 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %756, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #10
  %1454 = load i32, i32* %1452, align 8
  %1455 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %756, i32 %1454) #10
  %1456 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %756, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i64 37) #10
  %1457 = load i32, i32* %757, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %755) #10
  br label %1728

1458:                                             ; preds = %1377
  %1459 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 3
  %1460 = load i32, i32* %1459, align 8
  %1461 = zext i32 %1460 to i64
  %1462 = load i64, i64* %736, align 8
  %1463 = icmp eq i64 %1462, 0
  br i1 %1463, label %1511, label %1464

1464:                                             ; preds = %1458
  %1465 = call i64 @llvm.ctpop.i64(i64 %1462) #10, !range !4
  %1466 = icmp ugt i64 %1465, 1
  br i1 %1466, label %1470, label %1467

1467:                                             ; preds = %1464
  %1468 = add i64 %1462, 4294967295
  %1469 = and i64 %1468, %1461
  br label %1474

1470:                                             ; preds = %1464
  %1471 = icmp ugt i64 %1462, %1461
  br i1 %1471, label %1474, label %1472

1472:                                             ; preds = %1470
  %1473 = urem i64 %1461, %1462
  br label %1474

1474:                                             ; preds = %1472, %1470, %1467
  %1475 = phi i64 [ %1469, %1467 ], [ %1473, %1472 ], [ %1461, %1470 ]
  %1476 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %735, align 8
  %1477 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1476, i64 %1475
  %1478 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1477, align 8
  %1479 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1478, null
  br i1 %1479, label %1511, label %1480

1480:                                             ; preds = %1474
  %1481 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1478, i64 0, i32 0
  %1482 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1481, align 8
  %1483 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1482, null
  br i1 %1483, label %1511, label %1484

1484:                                             ; preds = %1480
  %1485 = add i64 %1462, -1
  br label %1486

1486:                                             ; preds = %1507, %1484
  %1487 = phi %"struct.std::__1::__hash_node_base.336"* [ %1482, %1484 ], [ %1509, %1507 ]
  %1488 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1487, i64 1
  %1489 = bitcast %"struct.std::__1::__hash_node_base.336"* %1488 to i64*
  %1490 = load i64, i64* %1489, align 8
  %1491 = icmp eq i64 %1490, %1461
  br i1 %1491, label %1502, label %1492

1492:                                             ; preds = %1486
  br i1 %1466, label %1495, label %1493

1493:                                             ; preds = %1492
  %1494 = and i64 %1490, %1485
  br label %1499

1495:                                             ; preds = %1492
  %1496 = icmp ult i64 %1490, %1462
  br i1 %1496, label %1499, label %1497

1497:                                             ; preds = %1495
  %1498 = urem i64 %1490, %1462
  br label %1499

1499:                                             ; preds = %1497, %1495, %1493
  %1500 = phi i64 [ %1494, %1493 ], [ %1498, %1497 ], [ %1490, %1495 ]
  %1501 = icmp eq i64 %1500, %1475
  br i1 %1501, label %1507, label %1511

1502:                                             ; preds = %1486
  %1503 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1487, i64 2
  %1504 = bitcast %"struct.std::__1::__hash_node_base.336"* %1503 to i32*
  %1505 = load i32, i32* %1504, align 4
  %1506 = icmp eq i32 %1505, %1460
  br i1 %1506, label %1520, label %1507

1507:                                             ; preds = %1502, %1499
  %1508 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1487, i64 0, i32 0
  %1509 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1508, align 8
  %1510 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1509, null
  br i1 %1510, label %1511, label %1486

1511:                                             ; preds = %1507, %1499, %1480, %1474, %1458
  %1512 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 2, i32 0, i32 0
  %1513 = load i32*, i32** %1512, align 8
  %1514 = load i32, i32* %1513, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %742) #10
  store i32 %1460, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %744) #10
  store i32* %26, i32** %745, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %746) #10
  %1515 = call { %"struct.std::__1::__hash_node_base.336"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.332"* nonnull %743, i32* nonnull dereferenceable(4) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.621"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.598"* nonnull dereferenceable(1) %10) #10
  %1516 = extractvalue { %"struct.std::__1::__hash_node_base.336"*, i8 } %1515, 0
  %1517 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1516, i64 2
  %1518 = bitcast %"struct.std::__1::__hash_node_base.336"* %1517 to %"struct.std::__1::pair.592"*
  %1519 = getelementptr inbounds %"struct.std::__1::pair.592", %"struct.std::__1::pair.592"* %1518, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %746) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %744) #10
  store i32 %1514, i32* %1519, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %742) #10
  br label %1535

1520:                                             ; preds = %1502
  %1521 = bitcast %"struct.std::__1::__hash_node_base.336"* %1503 to %"struct.std::__1::pair.592"*
  %1522 = getelementptr inbounds %"struct.std::__1::pair.592", %"struct.std::__1::pair.592"* %1521, i64 0, i32 1
  %1523 = load i32, i32* %1522, align 4
  %1524 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 2, i32 0, i32 0
  %1525 = load i32*, i32** %1524, align 8
  %1526 = load i32, i32* %1525, align 4
  %1527 = icmp eq i32 %1523, %1526
  br i1 %1527, label %1535, label %1528

1528:                                             ; preds = %1520
  %1529 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %752) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %27, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %1097) #10
  %1530 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %753, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #10
  %1531 = load i32, i32* %1529, align 8
  %1532 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %753, i32 %1531) #10
  %1533 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %753, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18, i64 0, i64 0), i64 38) #10
  %1534 = load i32, i32* %754, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %752) #10
  br label %1728

1535:                                             ; preds = %1520, %1511, %1443, %1434, %1377
  %1536 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %1378, i64 1
  %1537 = icmp eq %"class.spvtools::val::Decoration"* %1536, %1362
  br i1 %1537, label %1364, label %1377

1538:                                             ; preds = %1719, %1374
  %1539 = phi i64 [ %1368, %1374 ], [ %1722, %1719 ]
  %1540 = phi i64 [ %1370, %1374 ], [ %1723, %1719 ]
  %1541 = phi i64 [ 1, %1374 ], [ %1721, %1719 ]
  %1542 = phi i32 [ undef, %1374 ], [ %1620, %1719 ]
  %1543 = phi i32 [ 1, %1374 ], [ %1720, %1719 ]
  %1544 = add i32 %1543, -1
  %1545 = zext i32 %1544 to i64
  %1546 = load i64, i64* %728, align 8
  %1547 = icmp eq i64 %1546, 0
  br i1 %1547, label %1595, label %1548

1548:                                             ; preds = %1538
  %1549 = call i64 @llvm.ctpop.i64(i64 %1546) #10, !range !4
  %1550 = icmp ugt i64 %1549, 1
  br i1 %1550, label %1554, label %1551

1551:                                             ; preds = %1548
  %1552 = add i64 %1546, 4294967295
  %1553 = and i64 %1552, %1545
  br label %1558

1554:                                             ; preds = %1548
  %1555 = icmp ugt i64 %1546, %1545
  br i1 %1555, label %1558, label %1556

1556:                                             ; preds = %1554
  %1557 = urem i64 %1545, %1546
  br label %1558

1558:                                             ; preds = %1556, %1554, %1551
  %1559 = phi i64 [ %1553, %1551 ], [ %1557, %1556 ], [ %1545, %1554 ]
  %1560 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %727, align 8
  %1561 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1560, i64 %1559
  %1562 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1561, align 8
  %1563 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1562, null
  br i1 %1563, label %1595, label %1564

1564:                                             ; preds = %1558
  %1565 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1562, i64 0, i32 0
  %1566 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1565, align 8
  %1567 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1566, null
  br i1 %1567, label %1595, label %1568

1568:                                             ; preds = %1564
  %1569 = add i64 %1546, -1
  br label %1570

1570:                                             ; preds = %1591, %1568
  %1571 = phi %"struct.std::__1::__hash_node_base.336"* [ %1566, %1568 ], [ %1593, %1591 ]
  %1572 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1571, i64 1
  %1573 = bitcast %"struct.std::__1::__hash_node_base.336"* %1572 to i64*
  %1574 = load i64, i64* %1573, align 8
  %1575 = icmp eq i64 %1574, %1545
  br i1 %1575, label %1586, label %1576

1576:                                             ; preds = %1570
  br i1 %1550, label %1579, label %1577

1577:                                             ; preds = %1576
  %1578 = and i64 %1574, %1569
  br label %1583

1579:                                             ; preds = %1576
  %1580 = icmp ult i64 %1574, %1546
  br i1 %1580, label %1583, label %1581

1581:                                             ; preds = %1579
  %1582 = urem i64 %1574, %1546
  br label %1583

1583:                                             ; preds = %1581, %1579, %1577
  %1584 = phi i64 [ %1578, %1577 ], [ %1582, %1581 ], [ %1574, %1579 ]
  %1585 = icmp eq i64 %1584, %1559
  br i1 %1585, label %1591, label %1595

1586:                                             ; preds = %1570
  %1587 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1571, i64 2
  %1588 = bitcast %"struct.std::__1::__hash_node_base.336"* %1587 to i32*
  %1589 = load i32, i32* %1588, align 4
  %1590 = icmp eq i32 %1589, %1544
  br i1 %1590, label %1600, label %1591

1591:                                             ; preds = %1586, %1583
  %1592 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1571, i64 0, i32 0
  %1593 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1592, align 8
  %1594 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1593, null
  br i1 %1594, label %1595, label %1570

1595:                                             ; preds = %1564, %1558, %1538, %1591, %1583
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %767) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %28, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %1097) #10
  %1596 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %768, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #10
  %1597 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %768, i32 %1544) #10
  %1598 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %768, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0), i64 33) #10
  %1599 = load i32, i32* %769, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %767) #10
  br label %1728

1600:                                             ; preds = %1586
  %1601 = bitcast %"struct.std::__1::__hash_node_base.336"* %1587 to %"struct.std::__1::pair.592"*
  %1602 = getelementptr inbounds %"struct.std::__1::pair.592", %"struct.std::__1::pair.592"* %1601, i64 0, i32 1
  %1603 = load i32, i32* %1602, align 4
  %1604 = sub i64 %1539, %1540
  %1605 = ashr exact i64 %1604, 4
  %1606 = icmp ugt i64 %1605, %1541
  br i1 %1606, label %1609, label %1607

1607:                                             ; preds = %1600
  %1608 = bitcast %"class.std::__1::vector.97"* %1365 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %1608) #11
  unreachable

1609:                                             ; preds = %1600
  %1610 = inttoptr i64 %1540 to %struct.spv_parsed_operand_t*
  %1611 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %1610, i64 %1541, i32 0
  %1612 = load i16, i16* %1611, align 4
  %1613 = zext i16 %1612 to i64
  %1614 = load i32*, i32** %1375, align 8
  %1615 = getelementptr inbounds i32, i32* %1614, i64 %1613
  %1616 = load i32, i32* %1615, align 4
  %1617 = call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %1616) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %758) #10
  store i32 0, i32* %29, align 4
  %1618 = call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_120NumConsumedLocationsERNS0_17ValidationState_tEPKNS0_11InstructionEPj(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %1617, i32* nonnull %29) #10
  %1619 = icmp eq i32 %1618, 0
  %1620 = select i1 %1619, i32 %1542, i32 %1618
  br i1 %1619, label %1621, label %1727

1621:                                             ; preds = %1609
  %1622 = call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_121NumConsumedComponentsERNS0_17ValidationState_tEPKNS0_11InstructionE(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %1617) #10
  %1623 = load i64, i64* %736, align 8
  %1624 = icmp eq i64 %1623, 0
  br i1 %1624, label %1679, label %1625

1625:                                             ; preds = %1621
  %1626 = call i64 @llvm.ctpop.i64(i64 %1623) #10, !range !4
  %1627 = icmp ugt i64 %1626, 1
  br i1 %1627, label %1631, label %1628

1628:                                             ; preds = %1625
  %1629 = add i64 %1623, 4294967295
  %1630 = and i64 %1629, %1545
  br label %1635

1631:                                             ; preds = %1625
  %1632 = icmp ugt i64 %1623, %1545
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1631
  %1634 = urem i64 %1545, %1623
  br label %1635

1635:                                             ; preds = %1633, %1631, %1628
  %1636 = phi i64 [ %1630, %1628 ], [ %1634, %1633 ], [ %1545, %1631 ]
  %1637 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %735, align 8
  %1638 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1637, i64 %1636
  %1639 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1638, align 8
  %1640 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1639, null
  br i1 %1640, label %1679, label %1641

1641:                                             ; preds = %1635
  %1642 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1639, i64 0, i32 0
  %1643 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1642, align 8
  %1644 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1643, null
  br i1 %1644, label %1679, label %1645

1645:                                             ; preds = %1641
  %1646 = add i64 %1623, -1
  br label %1647

1647:                                             ; preds = %1668, %1645
  %1648 = phi %"struct.std::__1::__hash_node_base.336"* [ %1643, %1645 ], [ %1670, %1668 ]
  %1649 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1648, i64 1
  %1650 = bitcast %"struct.std::__1::__hash_node_base.336"* %1649 to i64*
  %1651 = load i64, i64* %1650, align 8
  %1652 = icmp eq i64 %1651, %1545
  br i1 %1652, label %1663, label %1653

1653:                                             ; preds = %1647
  br i1 %1627, label %1656, label %1654

1654:                                             ; preds = %1653
  %1655 = and i64 %1651, %1646
  br label %1660

1656:                                             ; preds = %1653
  %1657 = icmp ult i64 %1651, %1623
  br i1 %1657, label %1660, label %1658

1658:                                             ; preds = %1656
  %1659 = urem i64 %1651, %1623
  br label %1660

1660:                                             ; preds = %1658, %1656, %1654
  %1661 = phi i64 [ %1655, %1654 ], [ %1659, %1658 ], [ %1651, %1656 ]
  %1662 = icmp eq i64 %1661, %1636
  br i1 %1662, label %1668, label %1679

1663:                                             ; preds = %1647
  %1664 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1648, i64 2
  %1665 = bitcast %"struct.std::__1::__hash_node_base.336"* %1664 to i32*
  %1666 = load i32, i32* %1665, align 4
  %1667 = icmp eq i32 %1666, %1544
  br i1 %1667, label %1672, label %1668

1668:                                             ; preds = %1663, %1660
  %1669 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1648, i64 0, i32 0
  %1670 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1669, align 8
  %1671 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1670, null
  br i1 %1671, label %1679, label %1647

1672:                                             ; preds = %1663
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %759) #10
  store i32 %1544, i32* %30, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %760) #10
  store i32* %30, i32** %761, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %762) #10
  %1673 = call { %"struct.std::__1::__hash_node_base.336"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.332"* nonnull %743, i32* nonnull dereferenceable(4) %30, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.621"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.598"* nonnull dereferenceable(1) %12) #10
  %1674 = extractvalue { %"struct.std::__1::__hash_node_base.336"*, i8 } %1673, 0
  %1675 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1674, i64 2
  %1676 = bitcast %"struct.std::__1::__hash_node_base.336"* %1675 to %"struct.std::__1::pair.592"*
  %1677 = getelementptr inbounds %"struct.std::__1::pair.592", %"struct.std::__1::pair.592"* %1676, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %762) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %760) #10
  %1678 = load i32, i32* %1677, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %759) #10
  br label %1679

1679:                                             ; preds = %1668, %1660, %1672, %1641, %1635, %1621
  %1680 = phi i32 [ %1678, %1672 ], [ 0, %1635 ], [ 0, %1621 ], [ 0, %1641 ], [ 0, %1660 ], [ 0, %1668 ]
  %1681 = shl i32 %1603, 2
  %1682 = load i32, i32* %29, align 4
  %1683 = add i32 %1682, %1603
  %1684 = shl i32 %1683, 2
  %1685 = icmp eq i32 %1622, 0
  %1686 = add i32 %1680, %1681
  %1687 = add i32 %1686, %1622
  %1688 = select i1 %1685, i32 %1681, i32 %1686
  %1689 = select i1 %1685, i32 %1684, i32 %1687
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %763) #10
  store i32 %1688, i32* %31, align 4
  %1690 = icmp ult i32 %1688, %1689
  br i1 %1690, label %1691, label %1719

1691:                                             ; preds = %1679, %1696
  %1692 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %1376, i32* nonnull dereferenceable(4) %31, i32* nonnull dereferenceable(4) %31) #10
  %1693 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %1692, 1
  %1694 = and i8 %1693, 1
  %1695 = icmp eq i8 %1694, 0
  br i1 %1695, label %1700, label %1696

1696:                                             ; preds = %1691
  %1697 = load i32, i32* %31, align 4
  %1698 = add i32 %1697, 1
  store i32 %1698, i32* %31, align 4
  %1699 = icmp ult i32 %1698, %1689
  br i1 %1699, label %1691, label %1719

1700:                                             ; preds = %1691
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %764) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %32, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %782) #10
  %1701 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %765, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i64 28) #10
  %1702 = load i8, i8* %725, align 1
  %1703 = icmp slt i8 %1702, 0
  %1704 = load i8*, i8** %722, align 8
  %1705 = load i64, i64* %723, align 8
  %1706 = zext i8 %1702 to i64
  %1707 = select i1 %1703, i8* %1704, i8* %721
  %1708 = select i1 %1703, i64 %1705, i64 %1706
  %1709 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %765, i8* %1707, i64 %1708) #10
  %1710 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %765, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), i64 33) #10
  %1711 = load i32, i32* %31, align 4
  %1712 = lshr i32 %1711, 2
  %1713 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %765, i32 %1712) #10
  %1714 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %765, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i64 12) #10
  %1715 = load i32, i32* %31, align 4
  %1716 = and i32 %1715, 3
  %1717 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %765, i32 %1716) #10
  %1718 = load i32, i32* %766, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %764) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %763) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %758) #10
  br label %1728

1719:                                             ; preds = %1696, %1679
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %763) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %758) #10
  %1720 = add i32 %1543, 1
  %1721 = zext i32 %1720 to i64
  %1722 = load i64, i64* %1367, align 8
  %1723 = load i64, i64* %1369, align 8
  %1724 = sub i64 %1722, %1723
  %1725 = ashr exact i64 %1724, 4
  %1726 = icmp ugt i64 %1725, %1721
  br i1 %1726, label %1538, label %1728

1727:                                             ; preds = %1609
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %758) #10
  br label %1728

1728:                                             ; preds = %1719, %1727, %1700, %1595, %1528, %1451, %1364
  %1729 = phi i32 [ 1, %1451 ], [ 1, %1528 ], [ 1, %1700 ], [ 1, %1595 ], [ 1, %1727 ], [ 0, %1364 ], [ 0, %1719 ]
  %1730 = phi i32 [ %1457, %1451 ], [ %1534, %1528 ], [ %1718, %1700 ], [ %1599, %1595 ], [ %1618, %1727 ], [ undef, %1364 ], [ %1620, %1719 ]
  %1731 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %737, align 8
  %1732 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1731, null
  br i1 %1732, label %1739, label %1733

1733:                                             ; preds = %1728, %1733
  %1734 = phi %"struct.std::__1::__hash_node_base.336"* [ %1736, %1733 ], [ %1731, %1728 ]
  %1735 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1734, i64 0, i32 0
  %1736 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1735, align 8
  %1737 = bitcast %"struct.std::__1::__hash_node_base.336"* %1734 to i8*
  call void @_ZdlPv(i8* %1737) #12
  %1738 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1736, null
  br i1 %1738, label %1739, label %1733

1739:                                             ; preds = %1733, %1728
  %1740 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %735, align 8
  store %"struct.std::__1::__hash_node_base.336"** null, %"struct.std::__1::__hash_node_base.336"*** %735, align 8
  %1741 = icmp eq %"struct.std::__1::__hash_node_base.336"** %1740, null
  br i1 %1741, label %1744, label %1742

1742:                                             ; preds = %1739
  %1743 = bitcast %"struct.std::__1::__hash_node_base.336"** %1740 to i8*
  call void @_ZdlPv(i8* %1743) #12
  br label %1744

1744:                                             ; preds = %1742, %1739
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %734) #10
  %1745 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %729, align 8
  %1746 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1745, null
  br i1 %1746, label %1753, label %1747

1747:                                             ; preds = %1744, %1747
  %1748 = phi %"struct.std::__1::__hash_node_base.336"* [ %1750, %1747 ], [ %1745, %1744 ]
  %1749 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %1748, i64 0, i32 0
  %1750 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %1749, align 8
  %1751 = bitcast %"struct.std::__1::__hash_node_base.336"* %1748 to i8*
  call void @_ZdlPv(i8* %1751) #12
  %1752 = icmp eq %"struct.std::__1::__hash_node_base.336"* %1750, null
  br i1 %1752, label %1753, label %1747

1753:                                             ; preds = %1747, %1744
  %1754 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %727, align 8
  store %"struct.std::__1::__hash_node_base.336"** null, %"struct.std::__1::__hash_node_base.336"*** %727, align 8
  %1755 = icmp eq %"struct.std::__1::__hash_node_base.336"** %1754, null
  br i1 %1755, label %1758, label %1756

1756:                                             ; preds = %1753
  %1757 = bitcast %"struct.std::__1::__hash_node_base.336"** %1754 to i8*
  call void @_ZdlPv(i8* %1757) #12
  br label %1758

1758:                                             ; preds = %1756, %1753
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %726) #10
  %1759 = icmp eq i32 %1729, 0
  br i1 %1759, label %1760, label %1761

1760:                                             ; preds = %1304, %1758, %1247
  br label %1761

1761:                                             ; preds = %1760, %1758, %1307, %1285
  %1762 = phi i32 [ 0, %1760 ], [ %1730, %1758 ], [ %1303, %1285 ], [ %1260, %1307 ]
  %1763 = load i8, i8* %725, align 1
  %1764 = icmp slt i8 %1763, 0
  br i1 %1764, label %1765, label %1767

1765:                                             ; preds = %1761
  %1766 = load i8*, i8** %722, align 8
  call void @_ZdlPv(i8* %1766) #12
  br label %1767

1767:                                             ; preds = %1765, %1761
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %721) #10
  br label %1768

1768:                                             ; preds = %1767, %1191, %1011, %1000, %996, %985
  %1769 = phi i32 [ %1762, %1767 ], [ %1193, %1191 ], [ %1002, %1000 ], [ %1013, %1011 ], [ %998, %996 ], [ %987, %985 ]
  %1770 = icmp eq i32 %1769, 0
  br i1 %1770, label %1771, label %1779

1771:                                             ; preds = %964, %1136, %1768, %840
  %1772 = add i32 %814, 1
  %1773 = zext i32 %1772 to i64
  %1774 = load i64, i64* %789, align 8
  %1775 = load i64, i64* %791, align 8
  %1776 = sub i64 %1774, %1775
  %1777 = ashr exact i64 %1776, 4
  %1778 = icmp ugt i64 %1777, %1773
  br i1 %1778, label %810, label %1779

1779:                                             ; preds = %1771, %1768
  %1780 = phi i32 [ 0, %1771 ], [ %1769, %1768 ]
  %1781 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %696, align 8
  %1782 = icmp eq %"struct.std::__1::__hash_node_base"* %1781, null
  br i1 %1782, label %1789, label %1783

1783:                                             ; preds = %1779, %1783
  %1784 = phi %"struct.std::__1::__hash_node_base"* [ %1786, %1783 ], [ %1781, %1779 ]
  %1785 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1784, i64 0, i32 0
  %1786 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1785, align 8
  %1787 = bitcast %"struct.std::__1::__hash_node_base"* %1784 to i8*
  call void @_ZdlPv(i8* %1787) #12
  %1788 = icmp eq %"struct.std::__1::__hash_node_base"* %1786, null
  br i1 %1788, label %1789, label %1783

1789:                                             ; preds = %1783, %1779, %806
  %1790 = phi i32 [ %1780, %1779 ], [ 0, %806 ], [ %1780, %1783 ]
  %1791 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %695, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %695, align 8
  %1792 = icmp eq %"struct.std::__1::__hash_node_base"** %1791, null
  br i1 %1792, label %1795, label %1793

1793:                                             ; preds = %1789
  %1794 = bitcast %"struct.std::__1::__hash_node_base"** %1791 to i8*
  call void @_ZdlPv(i8* %1794) #12
  br label %1795

1795:                                             ; preds = %1793, %1789
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %694) #10
  %1796 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %689, align 8
  %1797 = icmp eq %"struct.std::__1::__hash_node_base"* %1796, null
  br i1 %1797, label %1804, label %1798

1798:                                             ; preds = %1795, %1798
  %1799 = phi %"struct.std::__1::__hash_node_base"* [ %1801, %1798 ], [ %1796, %1795 ]
  %1800 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1799, i64 0, i32 0
  %1801 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1800, align 8
  %1802 = bitcast %"struct.std::__1::__hash_node_base"* %1799 to i8*
  call void @_ZdlPv(i8* %1802) #12
  %1803 = icmp eq %"struct.std::__1::__hash_node_base"* %1801, null
  br i1 %1803, label %1804, label %1798

1804:                                             ; preds = %1798, %1795
  %1805 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %688, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %688, align 8
  %1806 = icmp eq %"struct.std::__1::__hash_node_base"** %1805, null
  br i1 %1806, label %1809, label %1807

1807:                                             ; preds = %1804
  %1808 = bitcast %"struct.std::__1::__hash_node_base"** %1805 to i8*
  call void @_ZdlPv(i8* %1808) #12
  br label %1809

1809:                                             ; preds = %1807, %1804
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %687) #10
  %1810 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %682, align 8
  %1811 = icmp eq %"struct.std::__1::__hash_node_base"* %1810, null
  br i1 %1811, label %1818, label %1812

1812:                                             ; preds = %1809, %1812
  %1813 = phi %"struct.std::__1::__hash_node_base"* [ %1815, %1812 ], [ %1810, %1809 ]
  %1814 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1813, i64 0, i32 0
  %1815 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1814, align 8
  %1816 = bitcast %"struct.std::__1::__hash_node_base"* %1813 to i8*
  call void @_ZdlPv(i8* %1816) #12
  %1817 = icmp eq %"struct.std::__1::__hash_node_base"* %1815, null
  br i1 %1817, label %1818, label %1812

1818:                                             ; preds = %1812, %1809
  %1819 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %681, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %681, align 8
  %1820 = icmp eq %"struct.std::__1::__hash_node_base"** %1819, null
  br i1 %1820, label %1823, label %1821

1821:                                             ; preds = %1818
  %1822 = bitcast %"struct.std::__1::__hash_node_base"** %1819 to i8*
  call void @_ZdlPv(i8* %1822) #12
  br label %1823

1823:                                             ; preds = %1818, %1821
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %680) #10
  %1824 = icmp eq i32 %1790, 0
  br i1 %1824, label %1825, label %1830

1825:                                             ; preds = %1823
  %1826 = load i16, i16* %783, align 2
  br label %1827

1827:                                             ; preds = %1825, %781
  %1828 = phi i16 [ %1826, %1825 ], [ %784, %781 ]
  %1829 = icmp eq i16 %1828, 19
  br i1 %1829, label %1830, label %778

1830:                                             ; preds = %664, %1827, %1823, %778, %675, %669
  %1831 = phi i32 [ 0, %669 ], [ 0, %675 ], [ 0, %1827 ], [ %1790, %1823 ], [ 0, %778 ], [ %647, %664 ]
  ret i32 %1831

1832:                                             ; preds = %432
  %1833 = getelementptr inbounds i32, i32* %435, i64 1
  %1834 = ptrtoint i32* %1833 to i64
  store i32 %437, i32* %1833, align 4
  br label %1835

1835:                                             ; preds = %1832, %432
  %1836 = phi i64 [ %433, %432 ], [ %1834, %1832 ]
  %1837 = getelementptr inbounds i32, i32* %424, i64 2
  %1838 = inttoptr i64 %1836 to i32*
  %1839 = load i32, i32* %1838, align 4
  %1840 = load i32, i32* %1837, align 4
  %1841 = icmp eq i32 %1839, %1840
  br i1 %1841, label %1845, label %1842

1842:                                             ; preds = %1835
  %1843 = getelementptr inbounds i32, i32* %1838, i64 1
  %1844 = ptrtoint i32* %1843 to i64
  store i32 %1840, i32* %1843, align 4
  br label %1845

1845:                                             ; preds = %1842, %1835
  %1846 = phi i64 [ %1836, %1835 ], [ %1844, %1842 ]
  %1847 = getelementptr inbounds i32, i32* %424, i64 3
  %1848 = inttoptr i64 %1846 to i32*
  %1849 = load i32, i32* %1848, align 4
  %1850 = load i32, i32* %1847, align 4
  %1851 = icmp eq i32 %1849, %1850
  br i1 %1851, label %1855, label %1852

1852:                                             ; preds = %1845
  %1853 = getelementptr inbounds i32, i32* %1848, i64 1
  %1854 = ptrtoint i32* %1853 to i64
  store i32 %1850, i32* %1853, align 4
  br label %1855

1855:                                             ; preds = %1852, %1845
  %1856 = phi i64 [ %1846, %1845 ], [ %1854, %1852 ]
  %1857 = getelementptr inbounds i32, i32* %424, i64 4
  %1858 = icmp eq i32* %1857, %372
  %1859 = inttoptr i64 %1856 to i32*
  br i1 %1858, label %439, label %422
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_Z14spvIsVulkanEnv14spv_target_env(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::vector.90"* @_ZNK8spvtools3val17ValidationState_t19FunctionEntryPointsEj(%"class.spvtools::val::ValidationState_t"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* sret, %"class.spvtools::val::ValidationState_t"*, i32, %"class.spvtools::val::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEvT0_SF_T_"(%"class.spvtools::val::Function"**, %"class.spvtools::val::Function"**) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %448, %2
  %4 = phi %"class.spvtools::val::Function"** [ %1, %2 ], [ %424, %448 ]
  %5 = phi %"class.spvtools::val::Function"** [ %0, %2 ], [ %17, %448 ]
  %6 = ptrtoint %"class.spvtools::val::Function"** %4 to i64
  %7 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, i64 -1
  %8 = bitcast %"class.spvtools::val::Function"** %7 to i64*
  %9 = bitcast %"class.spvtools::val::Function"** %7 to i64*
  %10 = bitcast %"class.spvtools::val::Function"** %7 to i64*
  %11 = bitcast %"class.spvtools::val::Function"** %7 to i64*
  %12 = bitcast %"class.spvtools::val::Function"** %7 to i64*
  %13 = ptrtoint %"class.spvtools::val::Function"** %4 to i64
  br label %14

14:                                               ; preds = %457, %3
  %15 = phi %"class.spvtools::val::Function"** [ %5, %3 ], [ %458, %457 ]
  br label %16

16:                                               ; preds = %365, %14
  %17 = phi %"class.spvtools::val::Function"** [ %15, %14 ], [ %350, %365 ]
  %18 = ptrtoint %"class.spvtools::val::Function"** %17 to i64
  %19 = sub i64 %6, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %131 [
    i64 0, label %461
    i64 1, label %461
    i64 2, label %21
    i64 3, label %35
    i64 4, label %81
    i64 5, label %86
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, i64 -1
  %23 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %22, align 8
  %24 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %25 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %23, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %24, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %30, label %461

30:                                               ; preds = %21
  %31 = ptrtoint %"class.spvtools::val::Function"* %23 to i64
  %32 = ptrtoint %"class.spvtools::val::Function"* %24 to i64
  %33 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  %34 = bitcast %"class.spvtools::val::Function"** %22 to i64*
  store i64 %31, i64* %33, align 8
  store i64 %32, i64* %34, align 8
  br label %461

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 1
  %37 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, i64 -1
  %38 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %36, align 8
  %39 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %40 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %38, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %39, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %41, %43
  %45 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %37, align 8
  %46 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp ult i32 %47, %41
  %49 = ptrtoint %"class.spvtools::val::Function"* %38 to i64
  %50 = ptrtoint %"class.spvtools::val::Function"* %45 to i64
  %51 = ptrtoint %"class.spvtools::val::Function"* %39 to i64
  br i1 %44, label %67, label %52

52:                                               ; preds = %35
  br i1 %48, label %53, label %461

53:                                               ; preds = %52
  %54 = bitcast %"class.spvtools::val::Function"** %36 to i64*
  %55 = bitcast %"class.spvtools::val::Function"** %37 to i64*
  store i64 %50, i64* %54, align 8
  store i64 %49, i64* %55, align 8
  %56 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %36, align 8
  %57 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %58 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %56, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %57, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp ult i32 %59, %61
  br i1 %62, label %63, label %461

63:                                               ; preds = %53
  %64 = ptrtoint %"class.spvtools::val::Function"* %56 to i64
  %65 = ptrtoint %"class.spvtools::val::Function"* %57 to i64
  %66 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  store i64 %64, i64* %66, align 8
  store i64 %65, i64* %54, align 8
  br label %461

67:                                               ; preds = %35
  %68 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  br i1 %48, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.spvtools::val::Function"** %37 to i64*
  store i64 %50, i64* %68, align 8
  store i64 %51, i64* %70, align 8
  br label %461

71:                                               ; preds = %67
  %72 = bitcast %"class.spvtools::val::Function"** %36 to i64*
  store i64 %49, i64* %68, align 8
  store i64 %51, i64* %72, align 8
  %73 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %37, align 8
  %74 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = load i32, i32* %42, align 8
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %78, label %461

78:                                               ; preds = %71
  %79 = ptrtoint %"class.spvtools::val::Function"* %73 to i64
  %80 = bitcast %"class.spvtools::val::Function"** %37 to i64*
  store i64 %79, i64* %72, align 8
  store i64 %51, i64* %80, align 8
  br label %461

81:                                               ; preds = %16
  %82 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 1
  %83 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 2
  %84 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, i64 -1
  %85 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEjT0_SF_SF_SF_T_"(%"class.spvtools::val::Function"** %17, %"class.spvtools::val::Function"** %82, %"class.spvtools::val::Function"** %83, %"class.spvtools::val::Function"** %84)
  br label %461

86:                                               ; preds = %16
  %87 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 1
  %88 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 2
  %89 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 3
  %90 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, i64 -1
  %91 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEjT0_SF_SF_SF_T_"(%"class.spvtools::val::Function"** %17, %"class.spvtools::val::Function"** %87, %"class.spvtools::val::Function"** %88, %"class.spvtools::val::Function"** %89) #10
  %92 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %90, align 8
  %93 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %89, align 8
  %94 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %92, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %93, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp ult i32 %95, %97
  br i1 %98, label %99, label %461

99:                                               ; preds = %86
  %100 = ptrtoint %"class.spvtools::val::Function"* %92 to i64
  %101 = ptrtoint %"class.spvtools::val::Function"* %93 to i64
  %102 = bitcast %"class.spvtools::val::Function"** %89 to i64*
  %103 = bitcast %"class.spvtools::val::Function"** %90 to i64*
  store i64 %100, i64* %102, align 8
  store i64 %101, i64* %103, align 8
  %104 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %89, align 8
  %105 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %88, align 8
  %106 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %104, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %105, i64 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp ult i32 %107, %109
  br i1 %110, label %111, label %461

111:                                              ; preds = %99
  %112 = ptrtoint %"class.spvtools::val::Function"* %104 to i64
  %113 = ptrtoint %"class.spvtools::val::Function"* %105 to i64
  %114 = bitcast %"class.spvtools::val::Function"** %88 to i64*
  store i64 %112, i64* %114, align 8
  store i64 %113, i64* %102, align 8
  %115 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %87, align 8
  %116 = load i32, i32* %106, align 8
  %117 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %115, i64 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp ult i32 %116, %118
  br i1 %119, label %120, label %461

120:                                              ; preds = %111
  %121 = ptrtoint %"class.spvtools::val::Function"* %115 to i64
  %122 = bitcast %"class.spvtools::val::Function"** %87 to i64*
  store i64 %112, i64* %122, align 8
  store i64 %121, i64* %114, align 8
  %123 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %124 = load i32, i32* %106, align 8
  %125 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %123, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp ult i32 %124, %126
  br i1 %127, label %128, label %461

128:                                              ; preds = %120
  %129 = ptrtoint %"class.spvtools::val::Function"* %123 to i64
  %130 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  store i64 %112, i64* %130, align 8
  store i64 %129, i64* %122, align 8
  br label %461

131:                                              ; preds = %16
  %132 = icmp slt i64 %19, 248
  br i1 %132, label %133, label %207

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 2
  %135 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 1
  %136 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %135, align 8
  %137 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %138 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %136, i64 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %137, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = icmp ult i32 %139, %141
  %143 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %134, align 8
  %144 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = icmp ult i32 %145, %139
  %147 = ptrtoint %"class.spvtools::val::Function"* %136 to i64
  %148 = ptrtoint %"class.spvtools::val::Function"* %143 to i64
  %149 = ptrtoint %"class.spvtools::val::Function"* %137 to i64
  br i1 %142, label %159, label %150

150:                                              ; preds = %133
  br i1 %146, label %151, label %170

151:                                              ; preds = %150
  %152 = bitcast %"class.spvtools::val::Function"** %135 to i64*
  %153 = bitcast %"class.spvtools::val::Function"** %134 to i64*
  store i64 %148, i64* %152, align 8
  store i64 %147, i64* %153, align 8
  %154 = load i32, i32* %144, align 8
  %155 = load i32, i32* %140, align 8
  %156 = icmp ult i32 %154, %155
  br i1 %156, label %157, label %170

157:                                              ; preds = %151
  %158 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  store i64 %148, i64* %158, align 8
  store i64 %149, i64* %152, align 8
  br label %170

159:                                              ; preds = %133
  %160 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  br i1 %146, label %161, label %163

161:                                              ; preds = %159
  %162 = bitcast %"class.spvtools::val::Function"** %134 to i64*
  store i64 %148, i64* %160, align 8
  store i64 %149, i64* %162, align 8
  br label %170

163:                                              ; preds = %159
  %164 = bitcast %"class.spvtools::val::Function"** %135 to i64*
  store i64 %147, i64* %160, align 8
  store i64 %149, i64* %164, align 8
  %165 = load i32, i32* %144, align 8
  %166 = load i32, i32* %140, align 8
  %167 = icmp ult i32 %165, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  %169 = bitcast %"class.spvtools::val::Function"** %134 to i64*
  store i64 %148, i64* %164, align 8
  store i64 %149, i64* %169, align 8
  br label %170

170:                                              ; preds = %168, %163, %161, %157, %151, %150
  %171 = phi %"class.spvtools::val::Function"* [ %143, %150 ], [ %136, %151 ], [ %136, %157 ], [ %137, %161 ], [ %143, %163 ], [ %137, %168 ]
  %172 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 3
  %173 = icmp eq %"class.spvtools::val::Function"** %172, %4
  br i1 %173, label %461, label %174

174:                                              ; preds = %170, %205
  %175 = phi %"class.spvtools::val::Function"* [ %206, %205 ], [ %171, %170 ]
  %176 = phi %"class.spvtools::val::Function"** [ %203, %205 ], [ %172, %170 ]
  %177 = phi %"class.spvtools::val::Function"** [ %176, %205 ], [ %134, %170 ]
  %178 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %176, align 8
  %179 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %175, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = icmp ult i32 %180, %182
  %184 = ptrtoint %"class.spvtools::val::Function"* %178 to i64
  br i1 %183, label %185, label %202

185:                                              ; preds = %174, %192
  %186 = phi %"class.spvtools::val::Function"** [ %187, %192 ], [ %176, %174 ]
  %187 = phi %"class.spvtools::val::Function"** [ %193, %192 ], [ %177, %174 ]
  %188 = bitcast %"class.spvtools::val::Function"** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.spvtools::val::Function"** %186 to i64*
  store i64 %189, i64* %190, align 8
  %191 = icmp eq %"class.spvtools::val::Function"** %187, %17
  br i1 %191, label %199, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %187, i64 -1
  %194 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %193, align 8
  %195 = load i32, i32* %179, align 8
  %196 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %194, i64 0, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = icmp ult i32 %195, %197
  br i1 %198, label %185, label %199

199:                                              ; preds = %185, %192
  %200 = phi %"class.spvtools::val::Function"** [ %187, %192 ], [ %17, %185 ]
  %201 = bitcast %"class.spvtools::val::Function"** %200 to i64*
  store i64 %184, i64* %201, align 8
  br label %202

202:                                              ; preds = %199, %174
  %203 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %176, i64 1
  %204 = icmp eq %"class.spvtools::val::Function"** %203, %4
  br i1 %204, label %461, label %205

205:                                              ; preds = %202
  %206 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %176, align 8
  br label %174

207:                                              ; preds = %131
  %208 = icmp sgt i64 %19, 7992
  %209 = sdiv i64 %20, 2
  %210 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 %209
  br i1 %208, label %211, label %264

211:                                              ; preds = %207
  %212 = sdiv i64 %20, 4
  %213 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 %212
  %214 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %210, i64 %212
  %215 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEjT0_SF_SF_SF_T_"(%"class.spvtools::val::Function"** %17, %"class.spvtools::val::Function"** %213, %"class.spvtools::val::Function"** %210, %"class.spvtools::val::Function"** %214) #10
  %216 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %7, align 8
  %217 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %214, align 8
  %218 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %216, i64 0, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %217, i64 0, i32 0
  %221 = load i32, i32* %220, align 8
  %222 = icmp ult i32 %219, %221
  br i1 %222, label %223, label %305

223:                                              ; preds = %211
  %224 = ptrtoint %"class.spvtools::val::Function"* %216 to i64
  %225 = ptrtoint %"class.spvtools::val::Function"* %217 to i64
  %226 = bitcast %"class.spvtools::val::Function"** %214 to i64*
  store i64 %224, i64* %226, align 8
  store i64 %225, i64* %11, align 8
  %227 = add i32 %215, 1
  %228 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %214, align 8
  %229 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %210, align 8
  %230 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %228, i64 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %229, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp ult i32 %231, %233
  br i1 %234, label %235, label %305

235:                                              ; preds = %223
  %236 = ptrtoint %"class.spvtools::val::Function"* %228 to i64
  %237 = ptrtoint %"class.spvtools::val::Function"* %229 to i64
  %238 = bitcast %"class.spvtools::val::Function"** %210 to i64*
  store i64 %236, i64* %238, align 8
  store i64 %237, i64* %226, align 8
  %239 = add i32 %215, 2
  %240 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %210, align 8
  %241 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %213, align 8
  %242 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %240, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %241, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = icmp ult i32 %243, %245
  br i1 %246, label %247, label %305

247:                                              ; preds = %235
  %248 = ptrtoint %"class.spvtools::val::Function"* %240 to i64
  %249 = ptrtoint %"class.spvtools::val::Function"* %241 to i64
  %250 = bitcast %"class.spvtools::val::Function"** %213 to i64*
  store i64 %248, i64* %250, align 8
  store i64 %249, i64* %238, align 8
  %251 = add i32 %215, 3
  %252 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %213, align 8
  %253 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %254 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %252, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %253, i64 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = icmp ult i32 %255, %257
  br i1 %258, label %259, label %305

259:                                              ; preds = %247
  %260 = ptrtoint %"class.spvtools::val::Function"* %252 to i64
  %261 = ptrtoint %"class.spvtools::val::Function"* %253 to i64
  %262 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  store i64 %260, i64* %262, align 8
  store i64 %261, i64* %250, align 8
  %263 = add i32 %215, 4
  br label %305

264:                                              ; preds = %207
  %265 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %210, align 8
  %266 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %267 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %265, i64 0, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %266, i64 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = icmp ult i32 %268, %270
  %272 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %7, align 8
  %273 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %272, i64 0, i32 0
  %274 = load i32, i32* %273, align 8
  %275 = icmp ult i32 %274, %268
  %276 = ptrtoint %"class.spvtools::val::Function"* %265 to i64
  %277 = ptrtoint %"class.spvtools::val::Function"* %272 to i64
  %278 = ptrtoint %"class.spvtools::val::Function"* %266 to i64
  br i1 %271, label %293, label %279

279:                                              ; preds = %264
  br i1 %275, label %280, label %305

280:                                              ; preds = %279
  %281 = bitcast %"class.spvtools::val::Function"** %210 to i64*
  store i64 %277, i64* %281, align 8
  store i64 %276, i64* %8, align 8
  %282 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %210, align 8
  %283 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %284 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %282, i64 0, i32 0
  %285 = load i32, i32* %284, align 8
  %286 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %283, i64 0, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = icmp ult i32 %285, %287
  br i1 %288, label %289, label %305

289:                                              ; preds = %280
  %290 = ptrtoint %"class.spvtools::val::Function"* %282 to i64
  %291 = ptrtoint %"class.spvtools::val::Function"* %283 to i64
  %292 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  store i64 %290, i64* %292, align 8
  store i64 %291, i64* %281, align 8
  br label %305

293:                                              ; preds = %264
  %294 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  br i1 %275, label %295, label %296

295:                                              ; preds = %293
  store i64 %277, i64* %294, align 8
  store i64 %278, i64* %10, align 8
  br label %305

296:                                              ; preds = %293
  %297 = bitcast %"class.spvtools::val::Function"** %210 to i64*
  store i64 %276, i64* %294, align 8
  store i64 %278, i64* %297, align 8
  %298 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %7, align 8
  %299 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %298, i64 0, i32 0
  %300 = load i32, i32* %299, align 8
  %301 = load i32, i32* %269, align 8
  %302 = icmp ult i32 %300, %301
  br i1 %302, label %303, label %305

303:                                              ; preds = %296
  %304 = ptrtoint %"class.spvtools::val::Function"* %298 to i64
  store i64 %304, i64* %297, align 8
  store i64 %278, i64* %9, align 8
  br label %305

305:                                              ; preds = %303, %296, %295, %289, %280, %279, %259, %247, %235, %223, %211
  %306 = phi i32 [ %263, %259 ], [ %251, %247 ], [ %239, %235 ], [ %227, %223 ], [ %215, %211 ], [ 1, %295 ], [ 0, %279 ], [ 2, %289 ], [ 1, %280 ], [ 2, %303 ], [ 1, %296 ]
  %307 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %308 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %210, align 8
  %309 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %307, i64 0, i32 0
  %310 = load i32, i32* %309, align 8
  %311 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %308, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = icmp ult i32 %310, %312
  br i1 %313, label %382, label %314

314:                                              ; preds = %305, %371
  %315 = phi %"class.spvtools::val::Function"** [ %316, %371 ], [ %7, %305 ]
  %316 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %315, i64 -1
  %317 = icmp eq %"class.spvtools::val::Function"** %17, %316
  br i1 %317, label %318, label %371

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 1
  %320 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %7, align 8
  %321 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %320, i64 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = icmp ult i32 %310, %322
  %324 = ptrtoint %"class.spvtools::val::Function"* %320 to i64
  br i1 %323, label %340, label %325

325:                                              ; preds = %318
  %326 = icmp eq %"class.spvtools::val::Function"** %319, %7
  br i1 %326, label %461, label %327

327:                                              ; preds = %325, %337
  %328 = phi %"class.spvtools::val::Function"** [ %338, %337 ], [ %319, %325 ]
  %329 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %328, align 8
  %330 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %329, i64 0, i32 0
  %331 = load i32, i32* %330, align 8
  %332 = icmp ult i32 %310, %331
  br i1 %332, label %333, label %337

333:                                              ; preds = %327
  %334 = ptrtoint %"class.spvtools::val::Function"* %329 to i64
  %335 = bitcast %"class.spvtools::val::Function"** %328 to i64*
  store i64 %324, i64* %335, align 8
  store i64 %334, i64* %12, align 8
  %336 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %328, i64 1
  br label %340

337:                                              ; preds = %327
  %338 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %328, i64 1
  %339 = icmp eq %"class.spvtools::val::Function"** %338, %7
  br i1 %339, label %461, label %327

340:                                              ; preds = %333, %318
  %341 = phi %"class.spvtools::val::Function"** [ %319, %318 ], [ %336, %333 ]
  %342 = icmp eq %"class.spvtools::val::Function"** %341, %7
  br i1 %342, label %461, label %343

343:                                              ; preds = %340, %367
  %344 = phi %"class.spvtools::val::Function"** [ %355, %367 ], [ %341, %340 ]
  %345 = phi %"class.spvtools::val::Function"** [ %360, %367 ], [ %7, %340 ]
  %346 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, align 8
  %347 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %346, i64 0, i32 0
  %348 = load i32, i32* %347, align 8
  br label %349

349:                                              ; preds = %349, %343
  %350 = phi %"class.spvtools::val::Function"** [ %344, %343 ], [ %355, %349 ]
  %351 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %350, align 8
  %352 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %351, i64 0, i32 0
  %353 = load i32, i32* %352, align 8
  %354 = icmp ult i32 %348, %353
  %355 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %350, i64 1
  br i1 %354, label %356, label %349

356:                                              ; preds = %349
  %357 = ptrtoint %"class.spvtools::val::Function"* %351 to i64
  br label %358

358:                                              ; preds = %356, %358
  %359 = phi %"class.spvtools::val::Function"** [ %360, %358 ], [ %345, %356 ]
  %360 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %359, i64 -1
  %361 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %360, align 8
  %362 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %361, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp ult i32 %348, %363
  br i1 %364, label %358, label %365

365:                                              ; preds = %358
  %366 = icmp ult %"class.spvtools::val::Function"** %350, %360
  br i1 %366, label %367, label %16

367:                                              ; preds = %365
  %368 = ptrtoint %"class.spvtools::val::Function"* %361 to i64
  %369 = bitcast %"class.spvtools::val::Function"** %350 to i64*
  %370 = bitcast %"class.spvtools::val::Function"** %360 to i64*
  store i64 %368, i64* %369, align 8
  store i64 %357, i64* %370, align 8
  br label %343

371:                                              ; preds = %314
  %372 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %316, align 8
  %373 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %372, i64 0, i32 0
  %374 = load i32, i32* %373, align 8
  %375 = icmp ult i32 %374, %312
  br i1 %375, label %376, label %314

376:                                              ; preds = %371
  %377 = ptrtoint %"class.spvtools::val::Function"* %307 to i64
  %378 = ptrtoint %"class.spvtools::val::Function"* %372 to i64
  %379 = bitcast %"class.spvtools::val::Function"** %17 to i64*
  %380 = bitcast %"class.spvtools::val::Function"** %316 to i64*
  store i64 %378, i64* %379, align 8
  store i64 %377, i64* %380, align 8
  %381 = add i32 %306, 1
  br label %382

382:                                              ; preds = %305, %376
  %383 = phi i32 [ %381, %376 ], [ %306, %305 ]
  %384 = phi %"class.spvtools::val::Function"** [ %316, %376 ], [ %7, %305 ]
  %385 = ptrtoint %"class.spvtools::val::Function"** %17 to i64
  %386 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %17, i64 1
  %387 = icmp ult %"class.spvtools::val::Function"** %386, %384
  br i1 %387, label %388, label %421

388:                                              ; preds = %382, %414
  %389 = phi %"class.spvtools::val::Function"** [ %420, %414 ], [ %210, %382 ]
  %390 = phi i32 [ %418, %414 ], [ %383, %382 ]
  %391 = phi %"class.spvtools::val::Function"** [ %402, %414 ], [ %386, %382 ]
  %392 = phi %"class.spvtools::val::Function"** [ %407, %414 ], [ %384, %382 ]
  %393 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %389, align 8
  %394 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %393, i64 0, i32 0
  %395 = load i32, i32* %394, align 8
  br label %396

396:                                              ; preds = %396, %388
  %397 = phi %"class.spvtools::val::Function"** [ %391, %388 ], [ %402, %396 ]
  %398 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %397, align 8
  %399 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %398, i64 0, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = icmp ult i32 %400, %395
  %402 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %397, i64 1
  br i1 %401, label %396, label %403

403:                                              ; preds = %396
  %404 = ptrtoint %"class.spvtools::val::Function"* %398 to i64
  br label %405

405:                                              ; preds = %403, %405
  %406 = phi %"class.spvtools::val::Function"** [ %407, %405 ], [ %392, %403 ]
  %407 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %406, i64 -1
  %408 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %407, align 8
  %409 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %408, i64 0, i32 0
  %410 = load i32, i32* %409, align 8
  %411 = icmp ult i32 %410, %395
  br i1 %411, label %412, label %405

412:                                              ; preds = %405
  %413 = icmp ugt %"class.spvtools::val::Function"** %397, %407
  br i1 %413, label %421, label %414

414:                                              ; preds = %412
  %415 = ptrtoint %"class.spvtools::val::Function"* %408 to i64
  %416 = bitcast %"class.spvtools::val::Function"** %397 to i64*
  %417 = bitcast %"class.spvtools::val::Function"** %407 to i64*
  store i64 %415, i64* %416, align 8
  store i64 %404, i64* %417, align 8
  %418 = add i32 %390, 1
  %419 = icmp eq %"class.spvtools::val::Function"** %389, %397
  %420 = select i1 %419, %"class.spvtools::val::Function"** %407, %"class.spvtools::val::Function"** %389
  br label %388

421:                                              ; preds = %412, %382
  %422 = phi %"class.spvtools::val::Function"** [ %210, %382 ], [ %389, %412 ]
  %423 = phi i32 [ %383, %382 ], [ %390, %412 ]
  %424 = phi %"class.spvtools::val::Function"** [ %386, %382 ], [ %397, %412 ]
  %425 = icmp eq %"class.spvtools::val::Function"** %424, %422
  br i1 %425, label %440, label %426

426:                                              ; preds = %421
  %427 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %422, align 8
  %428 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %424, align 8
  %429 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %427, i64 0, i32 0
  %430 = load i32, i32* %429, align 8
  %431 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %428, i64 0, i32 0
  %432 = load i32, i32* %431, align 8
  %433 = icmp ult i32 %430, %432
  br i1 %433, label %434, label %440

434:                                              ; preds = %426
  %435 = ptrtoint %"class.spvtools::val::Function"* %427 to i64
  %436 = ptrtoint %"class.spvtools::val::Function"* %428 to i64
  %437 = bitcast %"class.spvtools::val::Function"** %424 to i64*
  %438 = bitcast %"class.spvtools::val::Function"** %422 to i64*
  store i64 %435, i64* %437, align 8
  store i64 %436, i64* %438, align 8
  %439 = add i32 %423, 1
  br label %440

440:                                              ; preds = %421, %434, %426
  %441 = phi i32 [ %439, %434 ], [ %423, %426 ], [ %423, %421 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %450

443:                                              ; preds = %440
  %444 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEbT0_SF_T_"(%"class.spvtools::val::Function"** %17, %"class.spvtools::val::Function"** %424)
  %445 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %424, i64 1
  %446 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEbT0_SF_T_"(%"class.spvtools::val::Function"** %445, %"class.spvtools::val::Function"** %4)
  br i1 %446, label %447, label %449

447:                                              ; preds = %443
  br i1 %444, label %461, label %448

448:                                              ; preds = %447, %459
  br label %3

449:                                              ; preds = %443
  br i1 %444, label %457, label %450

450:                                              ; preds = %449, %440
  %451 = ptrtoint %"class.spvtools::val::Function"** %424 to i64
  %452 = sub i64 %451, %385
  %453 = sub i64 %13, %451
  %454 = icmp slt i64 %452, %453
  br i1 %454, label %455, label %459

455:                                              ; preds = %450
  tail call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEvT0_SF_T_"(%"class.spvtools::val::Function"** %17, %"class.spvtools::val::Function"** %424)
  %456 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %424, i64 1
  br label %457

457:                                              ; preds = %455, %449
  %458 = phi %"class.spvtools::val::Function"** [ %445, %449 ], [ %456, %455 ]
  br label %14

459:                                              ; preds = %450
  %460 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %424, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEvT0_SF_T_"(%"class.spvtools::val::Function"** %460, %"class.spvtools::val::Function"** %4)
  br label %448

461:                                              ; preds = %447, %340, %16, %16, %325, %337, %202, %170, %128, %120, %111, %99, %86, %78, %71, %69, %63, %53, %52, %21, %30, %81
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEjT0_SF_SF_SF_T_"(%"class.spvtools::val::Function"** nocapture, %"class.spvtools::val::Function"** nocapture, %"class.spvtools::val::Function"** nocapture, %"class.spvtools::val::Function"** nocapture) unnamed_addr #8 {
  %5 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, align 8
  %6 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %7 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %8, %10
  %12 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %2, align 8
  %13 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %14, %8
  %16 = ptrtoint %"class.spvtools::val::Function"* %5 to i64
  %17 = ptrtoint %"class.spvtools::val::Function"* %12 to i64
  %18 = ptrtoint %"class.spvtools::val::Function"* %6 to i64
  br i1 %11, label %36, label %19

19:                                               ; preds = %4
  br i1 %15, label %20, label %50

20:                                               ; preds = %19
  %21 = bitcast %"class.spvtools::val::Function"** %1 to i64*
  %22 = bitcast %"class.spvtools::val::Function"** %2 to i64*
  store i64 %17, i64* %21, align 8
  store i64 %16, i64* %22, align 8
  %23 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, align 8
  %24 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %25 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %23, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %24, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %30, label %50

30:                                               ; preds = %20
  %31 = ptrtoint %"class.spvtools::val::Function"* %23 to i64
  %32 = ptrtoint %"class.spvtools::val::Function"* %24 to i64
  %33 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  store i64 %31, i64* %33, align 8
  store i64 %32, i64* %21, align 8
  %34 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %2, align 8
  %35 = ptrtoint %"class.spvtools::val::Function"* %34 to i64
  br label %50

36:                                               ; preds = %4
  %37 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  br i1 %15, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.spvtools::val::Function"** %2 to i64*
  store i64 %17, i64* %37, align 8
  store i64 %18, i64* %39, align 8
  br label %50

40:                                               ; preds = %36
  %41 = bitcast %"class.spvtools::val::Function"** %1 to i64*
  store i64 %16, i64* %37, align 8
  store i64 %18, i64* %41, align 8
  %42 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %2, align 8
  %43 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = load i32, i32* %9, align 8
  %46 = icmp ult i32 %44, %45
  %47 = ptrtoint %"class.spvtools::val::Function"* %42 to i64
  br i1 %46, label %48, label %50

48:                                               ; preds = %40
  %49 = bitcast %"class.spvtools::val::Function"** %2 to i64*
  store i64 %47, i64* %41, align 8
  store i64 %18, i64* %49, align 8
  br label %50

50:                                               ; preds = %19, %20, %30, %38, %40, %48
  %51 = phi i64 [ %18, %38 ], [ %17, %19 ], [ %35, %30 ], [ %16, %20 ], [ %18, %48 ], [ %47, %40 ]
  %52 = phi %"class.spvtools::val::Function"* [ %6, %38 ], [ %12, %19 ], [ %34, %30 ], [ %5, %20 ], [ %6, %48 ], [ %42, %40 ]
  %53 = phi i32 [ 1, %38 ], [ 0, %19 ], [ 2, %30 ], [ 1, %20 ], [ 2, %48 ], [ 1, %40 ]
  %54 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %3, align 8
  %55 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %52, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp ult i32 %56, %58
  br i1 %59, label %60, label %89

60:                                               ; preds = %50
  %61 = ptrtoint %"class.spvtools::val::Function"* %54 to i64
  %62 = bitcast %"class.spvtools::val::Function"** %2 to i64*
  %63 = bitcast %"class.spvtools::val::Function"** %3 to i64*
  store i64 %61, i64* %62, align 8
  store i64 %51, i64* %63, align 8
  %64 = add nuw nsw i32 %53, 1
  %65 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %2, align 8
  %66 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, align 8
  %67 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %65, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %66, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp ult i32 %68, %70
  br i1 %71, label %72, label %89

72:                                               ; preds = %60
  %73 = ptrtoint %"class.spvtools::val::Function"* %65 to i64
  %74 = ptrtoint %"class.spvtools::val::Function"* %66 to i64
  %75 = bitcast %"class.spvtools::val::Function"** %1 to i64*
  store i64 %73, i64* %75, align 8
  store i64 %74, i64* %62, align 8
  %76 = add nuw nsw i32 %53, 2
  %77 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, align 8
  %78 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %79 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %77, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %78, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = icmp ult i32 %80, %82
  br i1 %83, label %84, label %89

84:                                               ; preds = %72
  %85 = ptrtoint %"class.spvtools::val::Function"* %77 to i64
  %86 = ptrtoint %"class.spvtools::val::Function"* %78 to i64
  %87 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  store i64 %85, i64* %87, align 8
  store i64 %86, i64* %75, align 8
  %88 = add nuw nsw i32 %53, 3
  br label %89

89:                                               ; preds = %60, %84, %72, %50
  %90 = phi i32 [ %88, %84 ], [ %76, %72 ], [ %64, %60 ], [ %53, %50 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEbT0_SF_T_"(%"class.spvtools::val::Function"**, %"class.spvtools::val::Function"**) unnamed_addr #0 {
  %3 = ptrtoint %"class.spvtools::val::Function"** %1 to i64
  %4 = ptrtoint %"class.spvtools::val::Function"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %117 [
    i64 0, label %198
    i64 1, label %198
    i64 2, label %7
    i64 3, label %21
    i64 4, label %67
    i64 5, label %72
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, i64 -1
  %9 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %8, align 8
  %10 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %11 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %9, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %10, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %198

16:                                               ; preds = %7
  %17 = ptrtoint %"class.spvtools::val::Function"* %9 to i64
  %18 = ptrtoint %"class.spvtools::val::Function"* %10 to i64
  %19 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  %20 = bitcast %"class.spvtools::val::Function"** %8 to i64*
  store i64 %17, i64* %19, align 8
  store i64 %18, i64* %20, align 8
  br label %198

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 1
  %23 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, i64 -1
  %24 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %22, align 8
  %25 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %26 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %24, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %25, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp ult i32 %27, %29
  %31 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %23, align 8
  %32 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp ult i32 %33, %27
  %35 = ptrtoint %"class.spvtools::val::Function"* %24 to i64
  %36 = ptrtoint %"class.spvtools::val::Function"* %31 to i64
  %37 = ptrtoint %"class.spvtools::val::Function"* %25 to i64
  br i1 %30, label %53, label %38

38:                                               ; preds = %21
  br i1 %34, label %39, label %198

39:                                               ; preds = %38
  %40 = bitcast %"class.spvtools::val::Function"** %22 to i64*
  %41 = bitcast %"class.spvtools::val::Function"** %23 to i64*
  store i64 %36, i64* %40, align 8
  store i64 %35, i64* %41, align 8
  %42 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %22, align 8
  %43 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %44 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %43, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp ult i32 %45, %47
  br i1 %48, label %49, label %198

49:                                               ; preds = %39
  %50 = ptrtoint %"class.spvtools::val::Function"* %42 to i64
  %51 = ptrtoint %"class.spvtools::val::Function"* %43 to i64
  %52 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  store i64 %50, i64* %52, align 8
  store i64 %51, i64* %40, align 8
  br label %198

53:                                               ; preds = %21
  %54 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  br i1 %34, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.spvtools::val::Function"** %23 to i64*
  store i64 %36, i64* %54, align 8
  store i64 %37, i64* %56, align 8
  br label %198

57:                                               ; preds = %53
  %58 = bitcast %"class.spvtools::val::Function"** %22 to i64*
  store i64 %35, i64* %54, align 8
  store i64 %37, i64* %58, align 8
  %59 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %23, align 8
  %60 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* %28, align 8
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %64, label %198

64:                                               ; preds = %57
  %65 = ptrtoint %"class.spvtools::val::Function"* %59 to i64
  %66 = bitcast %"class.spvtools::val::Function"** %23 to i64*
  store i64 %65, i64* %58, align 8
  store i64 %37, i64* %66, align 8
  br label %198

67:                                               ; preds = %2
  %68 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 1
  %69 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 2
  %70 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, i64 -1
  %71 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEjT0_SF_SF_SF_T_"(%"class.spvtools::val::Function"** %0, %"class.spvtools::val::Function"** %68, %"class.spvtools::val::Function"** %69, %"class.spvtools::val::Function"** %70)
  br label %198

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 1
  %74 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 2
  %75 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 3
  %76 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %1, i64 -1
  %77 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3val12_GLOBAL__N_124check_interface_variableERNS2_17ValidationState_tEPKNS2_11InstructionEE3$_0PPKNS2_8FunctionEEEjT0_SF_SF_SF_T_"(%"class.spvtools::val::Function"** %0, %"class.spvtools::val::Function"** %73, %"class.spvtools::val::Function"** %74, %"class.spvtools::val::Function"** %75) #10
  %78 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %76, align 8
  %79 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %75, align 8
  %80 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %79, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp ult i32 %81, %83
  br i1 %84, label %85, label %198

85:                                               ; preds = %72
  %86 = ptrtoint %"class.spvtools::val::Function"* %78 to i64
  %87 = ptrtoint %"class.spvtools::val::Function"* %79 to i64
  %88 = bitcast %"class.spvtools::val::Function"** %75 to i64*
  %89 = bitcast %"class.spvtools::val::Function"** %76 to i64*
  store i64 %86, i64* %88, align 8
  store i64 %87, i64* %89, align 8
  %90 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %75, align 8
  %91 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %74, align 8
  %92 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %90, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %91, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp ult i32 %93, %95
  br i1 %96, label %97, label %198

97:                                               ; preds = %85
  %98 = ptrtoint %"class.spvtools::val::Function"* %90 to i64
  %99 = ptrtoint %"class.spvtools::val::Function"* %91 to i64
  %100 = bitcast %"class.spvtools::val::Function"** %74 to i64*
  store i64 %98, i64* %100, align 8
  store i64 %99, i64* %88, align 8
  %101 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %73, align 8
  %102 = load i32, i32* %92, align 8
  %103 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp ult i32 %102, %104
  br i1 %105, label %106, label %198

106:                                              ; preds = %97
  %107 = ptrtoint %"class.spvtools::val::Function"* %101 to i64
  %108 = bitcast %"class.spvtools::val::Function"** %73 to i64*
  store i64 %98, i64* %108, align 8
  store i64 %107, i64* %100, align 8
  %109 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %110 = load i32, i32* %92, align 8
  %111 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %109, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp ult i32 %110, %112
  br i1 %113, label %114, label %198

114:                                              ; preds = %106
  %115 = ptrtoint %"class.spvtools::val::Function"* %109 to i64
  %116 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  store i64 %98, i64* %116, align 8
  store i64 %115, i64* %108, align 8
  br label %198

117:                                              ; preds = %2
  %118 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 2
  %119 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 1
  %120 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %119, align 8
  %121 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, align 8
  %122 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %120, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %121, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp ult i32 %123, %125
  %127 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %118, align 8
  %128 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp ult i32 %129, %123
  %131 = ptrtoint %"class.spvtools::val::Function"* %120 to i64
  %132 = ptrtoint %"class.spvtools::val::Function"* %127 to i64
  %133 = ptrtoint %"class.spvtools::val::Function"* %121 to i64
  br i1 %126, label %143, label %134

134:                                              ; preds = %117
  br i1 %130, label %135, label %154

135:                                              ; preds = %134
  %136 = bitcast %"class.spvtools::val::Function"** %119 to i64*
  %137 = bitcast %"class.spvtools::val::Function"** %118 to i64*
  store i64 %132, i64* %136, align 8
  store i64 %131, i64* %137, align 8
  %138 = load i32, i32* %128, align 8
  %139 = load i32, i32* %124, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %141, label %154

141:                                              ; preds = %135
  %142 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  store i64 %132, i64* %142, align 8
  store i64 %133, i64* %136, align 8
  br label %154

143:                                              ; preds = %117
  %144 = bitcast %"class.spvtools::val::Function"** %0 to i64*
  br i1 %130, label %145, label %147

145:                                              ; preds = %143
  %146 = bitcast %"class.spvtools::val::Function"** %118 to i64*
  store i64 %132, i64* %144, align 8
  store i64 %133, i64* %146, align 8
  br label %154

147:                                              ; preds = %143
  %148 = bitcast %"class.spvtools::val::Function"** %119 to i64*
  store i64 %131, i64* %144, align 8
  store i64 %133, i64* %148, align 8
  %149 = load i32, i32* %128, align 8
  %150 = load i32, i32* %124, align 8
  %151 = icmp ult i32 %149, %150
  br i1 %151, label %152, label %154

152:                                              ; preds = %147
  %153 = bitcast %"class.spvtools::val::Function"** %118 to i64*
  store i64 %132, i64* %148, align 8
  store i64 %133, i64* %153, align 8
  br label %154

154:                                              ; preds = %134, %135, %141, %145, %147, %152
  %155 = phi %"class.spvtools::val::Function"* [ %127, %134 ], [ %120, %135 ], [ %120, %141 ], [ %121, %145 ], [ %127, %147 ], [ %121, %152 ]
  %156 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %0, i64 3
  %157 = icmp eq %"class.spvtools::val::Function"** %156, %1
  br i1 %157, label %198, label %158

158:                                              ; preds = %154, %193
  %159 = phi %"class.spvtools::val::Function"* [ %194, %193 ], [ %155, %154 ]
  %160 = phi %"class.spvtools::val::Function"** [ %191, %193 ], [ %156, %154 ]
  %161 = phi i32 [ %190, %193 ], [ 0, %154 ]
  %162 = phi %"class.spvtools::val::Function"** [ %160, %193 ], [ %118, %154 ]
  %163 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %160, align 8
  %164 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp ult i32 %165, %167
  %169 = ptrtoint %"class.spvtools::val::Function"* %163 to i64
  br i1 %168, label %170, label %189

170:                                              ; preds = %158, %177
  %171 = phi %"class.spvtools::val::Function"** [ %172, %177 ], [ %160, %158 ]
  %172 = phi %"class.spvtools::val::Function"** [ %178, %177 ], [ %162, %158 ]
  %173 = bitcast %"class.spvtools::val::Function"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.spvtools::val::Function"** %171 to i64*
  store i64 %174, i64* %175, align 8
  %176 = icmp eq %"class.spvtools::val::Function"** %172, %0
  br i1 %176, label %184, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %172, i64 -1
  %179 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %178, align 8
  %180 = load i32, i32* %164, align 8
  %181 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %179, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = icmp ult i32 %180, %182
  br i1 %183, label %170, label %184

184:                                              ; preds = %170, %177
  %185 = phi %"class.spvtools::val::Function"** [ %172, %177 ], [ %0, %170 ]
  %186 = bitcast %"class.spvtools::val::Function"** %185 to i64*
  store i64 %169, i64* %186, align 8
  %187 = add i32 %161, 1
  %188 = icmp eq i32 %187, 8
  br i1 %188, label %195, label %189

189:                                              ; preds = %184, %158
  %190 = phi i32 [ %187, %184 ], [ %161, %158 ]
  %191 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %160, i64 1
  %192 = icmp eq %"class.spvtools::val::Function"** %191, %1
  br i1 %192, label %198, label %193

193:                                              ; preds = %189
  %194 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %160, align 8
  br label %158

195:                                              ; preds = %184
  %196 = getelementptr inbounds %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %160, i64 1
  %197 = icmp eq %"class.spvtools::val::Function"** %196, %1
  br label %198

198:                                              ; preds = %189, %195, %154, %114, %106, %97, %85, %72, %64, %57, %55, %49, %39, %38, %7, %16, %2, %2, %67
  %199 = phi i1 [ true, %67 ], [ true, %2 ], [ true, %2 ], [ true, %16 ], [ true, %7 ], [ true, %38 ], [ true, %39 ], [ true, %49 ], [ true, %55 ], [ true, %57 ], [ true, %64 ], [ true, %72 ], [ true, %85 ], [ true, %97 ], [ true, %106 ], [ true, %114 ], [ true, %154 ], [ %197, %195 ], [ true, %189 ]
  ret i1 %199
}

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.570"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64 @_ZNK8spvtools3val17ValidationState_t16EvalInt32IfConstEj(%"class.spvtools::val::ValidationState_t"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_120NumConsumedLocationsERNS0_17ValidationState_tEPKNS0_11InstructionEPj(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224), %"class.spvtools::val::Instruction"*, i32*) unnamed_addr #0 {
  %4 = alloca %"class.spvtools::DiagnosticStream", align 8
  %5 = alloca i32, align 4
  store i32 0, i32* %2, align 4
  %6 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 2, i32 2
  %7 = load i16, i16* %6, align 2
  switch i16 %7, label %225 [
    i16 21, label %8
    i16 22, label %8
    i16 23, label %9
    i16 24, label %40
    i16 28, label %80
    i16 30, label %129
  ]

8:                                                ; preds = %3, %3
  store i32 1, i32* %2, align 4
  br label %225

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 2, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZNK8spvtools3val17ValidationState_t27ContainsSizedIntOrFloatTypeEj6SpvOp_j(%"class.spvtools::val::ValidationState_t"* %0, i32 %11, i32 21, i32 64) #10
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = load i32, i32* %10, align 4
  %15 = tail call zeroext i1 @_ZNK8spvtools3val17ValidationState_t27ContainsSizedIntOrFloatTypeEj6SpvOp_j(%"class.spvtools::val::ValidationState_t"* %0, i32 %14, i32 22, i32 64) #10
  br i1 %15, label %16, label %39

16:                                               ; preds = %13, %9
  %17 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1, i32 0, i32 1
  %19 = bitcast %struct.spv_parsed_operand_t** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.97"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 4
  %25 = icmp ugt i64 %24, 2
  br i1 %25, label %28, label %26

26:                                               ; preds = %16
  %27 = bitcast %"class.std::__1::vector.97"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %27) #11
  unreachable

28:                                               ; preds = %16
  %29 = inttoptr i64 %22 to %struct.spv_parsed_operand_t*
  %30 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %29, i64 2, i32 0
  %31 = load i16, i16* %30, align 4
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %32
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, 2
  br i1 %37, label %38, label %39

38:                                               ; preds = %28
  store i32 2, i32* %2, align 4
  br label %225

39:                                               ; preds = %28, %13
  store i32 1, i32* %2, align 4
  br label %225

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1, i32 0, i32 1
  %43 = bitcast %struct.spv_parsed_operand_t** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.97"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 4
  %49 = icmp ugt i64 %48, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %40
  %51 = bitcast %"class.std::__1::vector.97"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %51) #11
  unreachable

52:                                               ; preds = %40
  %53 = inttoptr i64 %46 to %struct.spv_parsed_operand_t*
  %54 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %53, i64 1, i32 0
  %55 = load i16, i16* %54, align 4
  %56 = zext i16 %55 to i64
  %57 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %56
  %60 = load i32, i32* %59, align 4
  %61 = tail call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %60) #10
  %62 = tail call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_120NumConsumedLocationsERNS0_17ValidationState_tEPKNS0_11InstructionEPj(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %61, i32* %2)
  %63 = load i64, i64* %43, align 8
  %64 = load i64, i64* %45, align 8
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 4
  %67 = icmp ugt i64 %66, 2
  br i1 %67, label %70, label %68

68:                                               ; preds = %52
  %69 = bitcast %"class.std::__1::vector.97"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %69) #11
  unreachable

70:                                               ; preds = %52
  %71 = inttoptr i64 %64 to %struct.spv_parsed_operand_t*
  %72 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %71, i64 2, i32 0
  %73 = load i16, i16* %72, align 4
  %74 = zext i16 %73 to i64
  %75 = load i32*, i32** %57, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 %74
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %2, align 4
  %79 = mul i32 %78, %77
  store i32 %79, i32* %2, align 4
  br label %225

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1
  %82 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1, i32 0, i32 1
  %83 = bitcast %struct.spv_parsed_operand_t** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector.97"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 4
  %89 = icmp ugt i64 %88, 1
  br i1 %89, label %92, label %90

90:                                               ; preds = %80
  %91 = bitcast %"class.std::__1::vector.97"* %81 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %91) #11
  unreachable

92:                                               ; preds = %80
  %93 = inttoptr i64 %86 to %struct.spv_parsed_operand_t*
  %94 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %93, i64 1, i32 0
  %95 = load i16, i16* %94, align 4
  %96 = zext i16 %95 to i64
  %97 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 %96
  %100 = load i32, i32* %99, align 4
  %101 = tail call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %100) #10
  %102 = tail call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_120NumConsumedLocationsERNS0_17ValidationState_tEPKNS0_11InstructionEPj(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %101, i32* %2)
  %103 = load i64, i64* %83, align 8
  %104 = load i64, i64* %85, align 8
  %105 = sub i64 %103, %104
  %106 = ashr exact i64 %105, 4
  %107 = icmp ugt i64 %106, 2
  br i1 %107, label %110, label %108

108:                                              ; preds = %92
  %109 = bitcast %"class.std::__1::vector.97"* %81 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %109) #11
  unreachable

110:                                              ; preds = %92
  %111 = inttoptr i64 %104 to %struct.spv_parsed_operand_t*
  %112 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %111, i64 2, i32 0
  %113 = load i16, i16* %112, align 4
  %114 = zext i16 %113 to i64
  %115 = load i32*, i32** %97, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 %114
  %117 = load i32, i32* %116, align 4
  %118 = tail call i64 @_ZNK8spvtools3val17ValidationState_t16EvalInt32IfConstEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %117) #10
  %119 = trunc i64 %118 to i8
  %120 = icmp eq i8 %119, 0
  %121 = and i64 %118, 65280
  %122 = icmp eq i64 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %225, label %124

124:                                              ; preds = %110
  %125 = lshr i64 %118, 32
  %126 = trunc i64 %125 to i32
  %127 = load i32, i32* %2, align 4
  %128 = mul i32 %127, %126
  store i32 %128, i32* %2, align 4
  br label %225

129:                                              ; preds = %3
  %130 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 2, i32 5
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0
  %133 = bitcast %"class.std::__1::__tree_end_node"* %132 to %"class.std::__1::__tree_node"**
  %134 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node"* %134, null
  br i1 %135, label %173, label %136

136:                                              ; preds = %129, %136
  %137 = phi %"class.std::__1::__tree_end_node"* [ %147, %136 ], [ %132, %129 ]
  %138 = phi %"class.std::__1::__tree_node"* [ %148, %136 ], [ %134, %129 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 1, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp ult i32 %140, %131
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 1
  %143 = bitcast %"class.std::__1::__tree_node_base"** %142 to %"class.std::__1::__tree_node"**
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::__tree_node"* %138 to %"class.std::__1::__tree_node"**
  %146 = select i1 %141, %"class.std::__1::__tree_node"** %143, %"class.std::__1::__tree_node"** %145
  %147 = select i1 %141, %"class.std::__1::__tree_end_node"* %137, %"class.std::__1::__tree_end_node"* %144
  %148 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %146, align 8
  %149 = icmp eq %"class.std::__1::__tree_node"* %148, null
  br i1 %149, label %150, label %136

150:                                              ; preds = %136
  %151 = icmp eq %"class.std::__1::__tree_end_node"* %147, %132
  br i1 %151, label %173, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 4
  %154 = bitcast %"class.std::__1::__tree_end_node"* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = icmp ugt i32 %155, %131
  br i1 %156, label %173, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 5
  %159 = bitcast %"class.std::__1::__tree_end_node"* %158 to %"class.spvtools::val::Decoration"**
  %160 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 6
  %162 = bitcast %"class.std::__1::__tree_end_node"* %161 to %"class.spvtools::val::Decoration"**
  %163 = load %"class.spvtools::val::Decoration"*, %"class.spvtools::val::Decoration"** %162, align 8
  %164 = icmp eq %"class.spvtools::val::Decoration"* %160, %163
  br i1 %164, label %173, label %167

165:                                              ; preds = %167
  %166 = icmp eq %"class.spvtools::val::Decoration"* %172, %163
  br i1 %166, label %173, label %167

167:                                              ; preds = %157, %165
  %168 = phi %"class.spvtools::val::Decoration"* [ %172, %165 ], [ %160, %157 ]
  %169 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %168, i64 0, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 30
  %172 = getelementptr inbounds %"class.spvtools::val::Decoration", %"class.spvtools::val::Decoration"* %168, i64 1
  br i1 %171, label %186, label %165

173:                                              ; preds = %165, %129, %150, %152, %157
  %174 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1
  %175 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1, i32 0, i32 1
  %176 = bitcast %struct.spv_parsed_operand_t** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.std::__1::vector.97"* %174 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 %177, %179
  %181 = ashr exact i64 %180, 4
  %182 = icmp ugt i64 %181, 1
  br i1 %182, label %183, label %225

183:                                              ; preds = %173
  %184 = bitcast i32* %5 to i8*
  %185 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 0, i32 0, i32 0
  br label %192

186:                                              ; preds = %167
  %187 = bitcast %"class.spvtools::DiagnosticStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %187) #10
  call void @_ZN8spvtools3val17ValidationState_t4diagE12spv_result_tPKNS0_11InstructionE(%"class.spvtools::DiagnosticStream"* nonnull sret %4, %"class.spvtools::val::ValidationState_t"* %0, i32 -14, %"class.spvtools::val::Instruction"* %1) #10
  %188 = bitcast %"class.spvtools::DiagnosticStream"* %4 to %"class.std::__1::basic_ostream"*
  %189 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %188, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0), i64 37) #10
  %190 = getelementptr inbounds %"class.spvtools::DiagnosticStream", %"class.spvtools::DiagnosticStream"* %4, i64 0, i32 4
  %191 = load i32, i32* %190, align 8
  call void @_ZN8spvtools16DiagnosticStreamD1Ev(%"class.spvtools::DiagnosticStream"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %187) #10
  br label %225

192:                                              ; preds = %183, %213
  %193 = phi i64 [ %177, %183 ], [ %219, %213 ]
  %194 = phi i64 [ %179, %183 ], [ %220, %213 ]
  %195 = phi i64 [ 1, %183 ], [ %218, %213 ]
  %196 = phi i32 [ 1, %183 ], [ %217, %213 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %184) #10
  store i32 0, i32* %5, align 4
  %197 = sub i64 %193, %194
  %198 = ashr exact i64 %197, 4
  %199 = icmp ugt i64 %198, %195
  br i1 %199, label %202, label %200

200:                                              ; preds = %192
  %201 = bitcast %"class.std::__1::vector.97"* %174 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %201) #11
  unreachable

202:                                              ; preds = %192
  %203 = inttoptr i64 %194 to %struct.spv_parsed_operand_t*
  %204 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %203, i64 %195, i32 0
  %205 = load i16, i16* %204, align 4
  %206 = zext i16 %205 to i64
  %207 = load i32*, i32** %185, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 %206
  %209 = load i32, i32* %208, align 4
  %210 = call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %209) #10
  %211 = call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_120NumConsumedLocationsERNS0_17ValidationState_tEPKNS0_11InstructionEPj(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %210, i32* nonnull %5)
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %224

213:                                              ; preds = %202
  %214 = load i32, i32* %5, align 4
  %215 = load i32, i32* %2, align 4
  %216 = add i32 %215, %214
  store i32 %216, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %184) #10
  %217 = add i32 %196, 1
  %218 = zext i32 %217 to i64
  %219 = load i64, i64* %176, align 8
  %220 = load i64, i64* %178, align 8
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 4
  %223 = icmp ugt i64 %222, %218
  br i1 %223, label %192, label %225

224:                                              ; preds = %202
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %184) #10
  br label %225

225:                                              ; preds = %213, %173, %224, %8, %70, %39, %38, %3, %110, %124, %186
  %226 = phi i32 [ %191, %186 ], [ %211, %224 ], [ 0, %124 ], [ 0, %110 ], [ 0, %3 ], [ 0, %38 ], [ 0, %39 ], [ 0, %70 ], [ 0, %8 ], [ 0, %173 ], [ 0, %213 ]
  ret i32 %226
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_121NumConsumedComponentsERNS0_17ValidationState_tEPKNS0_11InstructionE(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224), %"class.spvtools::val::Instruction"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 2, i32 2
  %4 = load i16, i16* %3, align 2
  switch i16 %4, label %67 [
    i16 21, label %5
    i16 22, label %5
    i16 23, label %28
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %struct.spv_parsed_operand_t** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.97"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 4
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::vector.97"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %16) #11
  unreachable

17:                                               ; preds = %5
  %18 = inttoptr i64 %11 to %struct.spv_parsed_operand_t*
  %19 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %18, i64 1, i32 0
  %20 = load i16, i16* %19, align 4
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 64
  %27 = select i1 %26, i32 2, i32 1
  br label %67

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1
  %30 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 1, i32 0, i32 1
  %31 = bitcast %struct.spv_parsed_operand_t** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.97"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 4
  %37 = icmp ugt i64 %36, 1
  br i1 %37, label %40, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.std::__1::vector.97"* %29 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %39) #11
  unreachable

40:                                               ; preds = %28
  %41 = inttoptr i64 %34 to %struct.spv_parsed_operand_t*
  %42 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %41, i64 1, i32 0
  %43 = load i16, i16* %42, align 4
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %1, i64 0, i32 0, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %44
  %48 = load i32, i32* %47, align 4
  %49 = tail call %"class.spvtools::val::Instruction"* @_ZN8spvtools3val17ValidationState_t7FindDefEj(%"class.spvtools::val::ValidationState_t"* %0, i32 %48) #10
  %50 = tail call fastcc i32 @_ZN8spvtools3val12_GLOBAL__N_121NumConsumedComponentsERNS0_17ValidationState_tEPKNS0_11InstructionE(%"class.spvtools::val::ValidationState_t"* dereferenceable(1224) %0, %"class.spvtools::val::Instruction"* %49)
  %51 = load i64, i64* %31, align 8
  %52 = load i64, i64* %33, align 8
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp ugt i64 %54, 2
  br i1 %55, label %58, label %56

56:                                               ; preds = %40
  %57 = bitcast %"class.std::__1::vector.97"* %29 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %57) #11
  unreachable

58:                                               ; preds = %40
  %59 = inttoptr i64 %52 to %struct.spv_parsed_operand_t*
  %60 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %59, i64 2, i32 0
  %61 = load i16, i16* %60, align 4
  %62 = zext i16 %61 to i64
  %63 = load i32*, i32** %45, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 %65, %50
  br label %67

67:                                               ; preds = %17, %2, %58
  %68 = phi i32 [ 0, %2 ], [ %66, %58 ], [ %27, %17 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare zeroext i1 @_ZNK8spvtools3val17ValidationState_t27ContainsSizedIntOrFloatTypeEj6SpvOp_j(%"class.spvtools::val::ValidationState_t"*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !4
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !12
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !12
  store i32 %58, i32* %57, align 4, !noalias !12
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !12
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %61, align 8, !noalias !12
  %62 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !4
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #10
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #10, !range !4
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base"* %104, %"struct.std::__1::__hash_node_base"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #10, !range !4
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !4
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.336"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.332"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.621"* dereferenceable(8), %"class.std::__1::tuple.598"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !4
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.336"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.336"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.336"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.336"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.336"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !16
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.621", %"class.std::__1::tuple.621"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !16
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !16
  store i32 %62, i32* %61, align 4, !noalias !16
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !16
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !16
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.336"**
  store %"struct.std::__1::__hash_node_base.336"* null, %"struct.std::__1::__hash_node_base.336"** %67, align 8, !noalias !16
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !4
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #10
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.332"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #10, !range !4
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.336"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.336"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.336"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.336"* %110, %"struct.std::__1::__hash_node_base.336"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.336"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.336"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #10, !range !4
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.336"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.336"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.336"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.336"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.336"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.336"*, i8 } undef, %"struct.std::__1::__hash_node_base.336"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.336"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.336"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.332"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.332"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.332"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.332"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.332"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.336"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.336"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.338", %"class.std::__1::__bucket_list_deallocator.338"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.336"* null, %"struct.std::__1::__hash_node_base.336"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !19

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.336"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.336"* null, %"struct.std::__1::__hash_node_base.336"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.336"* null, %"struct.std::__1::__hash_node_base.336"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.336"* null, %"struct.std::__1::__hash_node_base.336"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.336"* null, %"struct.std::__1::__hash_node_base.336"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.336"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !4
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.336"* %36, %"struct.std::__1::__hash_node_base.336"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.336"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.336"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.336"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.336"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.336"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.336"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.336"* %82, %"struct.std::__1::__hash_node_base.336"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.336"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.336"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.336"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.336"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.336"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.336"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.336"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.336"* %80, %"struct.std::__1::__hash_node_base.336"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.336"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.336"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.332", %"class.std::__1::__hash_table.332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.336"** null, %"struct.std::__1::__hash_node_base.336"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.336"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.336"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.338", %"class.std::__1::__bucket_list_deallocator.338"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN8spvtools3val10DecorationENS_9allocatorIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN8spvtools3val10DecorationENS_9allocatorIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN8spvtools3val10DecorationENS_9allocatorIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorIN8spvtools3val10DecorationENS_9allocatorIS5_EEEEEENS_19__map_value_compareIjS9_NS_4lessIjEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !3}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!19 = distinct !{!19, !3}
