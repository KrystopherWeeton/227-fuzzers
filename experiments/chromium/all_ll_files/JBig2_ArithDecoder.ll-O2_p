; ModuleID = '../../third_party/pdfium/core/fxcodec/jbig2/JBig2_ArithDecoder.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/jbig2/JBig2_ArithDecoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.JBig2ArithCtx::JBig2ArithQe" = type { i16, i8, i8, i8 }
%class.JBig2ArithCtx = type { i8, i32 }
%class.CJBig2_ArithDecoder = type { i8, i8, i8, i32, i32, i32, %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::UnownedPtr" = type { %class.CJBig2_BitStream* }
%class.CJBig2_BitStream = type <{ %"class.pdfium::span", i32, i32, i32, [4 x i8] }>
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.0", i64 }
%"class.fxcrt::UnownedPtr.0" = type { i8* }

@_ZN12_GLOBAL__N_18kQeTableE = internal unnamed_addr constant [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"] [%"struct.JBig2ArithCtx::JBig2ArithQe" { i16 22017, i8 1, i8 1, i8 1 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 13313, i8 2, i8 6, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 6145, i8 3, i8 9, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 2753, i8 4, i8 12, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 1313, i8 5, i8 29, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 545, i8 38, i8 33, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 22017, i8 7, i8 6, i8 1 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 21505, i8 8, i8 14, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 18433, i8 9, i8 14, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 14337, i8 10, i8 14, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 12289, i8 11, i8 17, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 9217, i8 12, i8 18, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 7169, i8 13, i8 20, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 5633, i8 29, i8 21, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 22017, i8 15, i8 14, i8 1 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 21505, i8 16, i8 14, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 20737, i8 17, i8 15, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 18433, i8 18, i8 16, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 14337, i8 19, i8 17, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 13313, i8 20, i8 18, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 12289, i8 21, i8 19, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 10241, i8 22, i8 19, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 9217, i8 23, i8 20, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 8705, i8 24, i8 21, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 7169, i8 25, i8 22, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 6145, i8 26, i8 23, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 5633, i8 27, i8 24, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 5121, i8 28, i8 25, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 4609, i8 29, i8 26, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 4353, i8 30, i8 27, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 2753, i8 31, i8 28, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 2497, i8 32, i8 29, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 2209, i8 33, i8 30, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 1313, i8 34, i8 31, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 1089, i8 35, i8 32, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 673, i8 36, i8 33, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 545, i8 37, i8 34, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 321, i8 38, i8 35, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 273, i8 39, i8 36, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 133, i8 40, i8 37, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 73, i8 41, i8 38, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 37, i8 42, i8 39, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 21, i8 43, i8 40, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 9, i8 44, i8 41, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 5, i8 45, i8 42, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 1, i8 45, i8 43, i8 0 }, %"struct.JBig2ArithCtx::JBig2ArithQe" { i16 22017, i8 46, i8 46, i8 0 }], align 16

@_ZN13JBig2ArithCtxC1Ev = hidden unnamed_addr alias void (%class.JBig2ArithCtx*), void (%class.JBig2ArithCtx*)* @_ZN13JBig2ArithCtxC2Ev
@_ZN19CJBig2_ArithDecoderC1EP16CJBig2_BitStream = hidden unnamed_addr alias void (%class.CJBig2_ArithDecoder*, %class.CJBig2_BitStream*), void (%class.CJBig2_ArithDecoder*, %class.CJBig2_BitStream*)* @_ZN19CJBig2_ArithDecoderC2EP16CJBig2_BitStream
@_ZN19CJBig2_ArithDecoderD1Ev = hidden unnamed_addr alias void (%class.CJBig2_ArithDecoder*), void (%class.CJBig2_ArithDecoder*)* @_ZN19CJBig2_ArithDecoderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13JBig2ArithCtxC2Ev(%class.JBig2ArithCtx* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %0, i64 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN13JBig2ArithCtx10DecodeNLPSERKNS_12JBig2ArithQeE(%class.JBig2ArithCtx* nocapture, %"struct.JBig2ArithCtx::JBig2ArithQe"* nocapture readonly dereferenceable(6)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"struct.JBig2ArithCtx::JBig2ArithQe", %"struct.JBig2ArithCtx::JBig2ArithQe"* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = xor i8 %4, 1
  br i1 %7, label %10, label %9

9:                                                ; preds = %2
  store i8 %8, i8* %3, align 4
  br label %10

10:                                               ; preds = %2, %9
  %11 = getelementptr inbounds %"struct.JBig2ArithCtx::JBig2ArithQe", %"struct.JBig2ArithCtx::JBig2ArithQe"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %0, i64 0, i32 1
  store i32 %13, i32* %14, align 4
  %15 = zext i8 %8 to i32
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN13JBig2ArithCtx10DecodeNMPSERKNS_12JBig2ArithQeE(%class.JBig2ArithCtx* nocapture, %"struct.JBig2ArithCtx::JBig2ArithQe"* nocapture readonly dereferenceable(6)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.JBig2ArithCtx::JBig2ArithQe", %"struct.JBig2ArithCtx::JBig2ArithQe"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 2
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %0, i64 0, i32 1
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = zext i8 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CJBig2_ArithDecoderC2EP16CJBig2_BitStream(%class.CJBig2_ArithDecoder* nocapture, %class.CJBig2_BitStream*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 1
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 6, i32 0
  store %class.CJBig2_BitStream* %1, %class.CJBig2_BitStream** %5, align 8
  %6 = tail call zeroext i8 @_ZNK16CJBig2_BitStream16getCurByte_arithEv(%class.CJBig2_BitStream* %1) #5
  %7 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 2
  store i8 %6, i8* %7, align 2
  %8 = xor i8 %6, -1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 3
  store i32 %10, i32* %11, align 4
  tail call void @_ZN19CJBig2_ArithDecoder6BYTEINEv(%class.CJBig2_ArithDecoder* %0)
  %12 = load i32, i32* %11, align 4
  %13 = shl i32 %12, 7
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -7
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 4
  store i32 32768, i32* %17, align 8
  ret void
}

declare zeroext i8 @_ZNK16CJBig2_BitStream16getCurByte_arithEv(%class.CJBig2_BitStream*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CJBig2_ArithDecoder6BYTEINEv(%class.CJBig2_ArithDecoder* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 2
  %4 = icmp eq i8 %3, -1
  %5 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 6, i32 0
  %6 = load %class.CJBig2_BitStream*, %class.CJBig2_BitStream** %5, align 8
  br i1 %4, label %7, label %27

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @_ZNK16CJBig2_BitStream17getNextByte_arithEv(%class.CJBig2_BitStream* %6) #5
  %9 = icmp ugt i8 %8, -113
  br i1 %9, label %10, label %18

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 5
  store i32 8, i32* %11, align 4
  %12 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 1
  switch i8 %13, label %37 [
    i8 0, label %14
    i8 1, label %15
    i8 2, label %16
  ]

14:                                               ; preds = %10
  store i8 1, i8* %12, align 1
  br label %37

15:                                               ; preds = %10
  store i8 2, i8* %12, align 1
  br label %37

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 0
  store i8 1, i8* %17, align 8
  br label %37

18:                                               ; preds = %7
  %19 = zext i8 %8 to i32
  %20 = load %class.CJBig2_BitStream*, %class.CJBig2_BitStream** %5, align 8
  tail call void @_ZN16CJBig2_BitStream10incByteIdxEv(%class.CJBig2_BitStream* %20) #5
  store i8 %8, i8* %2, align 2
  %21 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = shl nuw nsw i32 %19, 9
  %24 = sub nsw i32 65024, %23
  %25 = add i32 %24, %22
  store i32 %25, i32* %21, align 4
  %26 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 5
  store i32 7, i32* %26, align 4
  br label %37

27:                                               ; preds = %1
  tail call void @_ZN16CJBig2_BitStream10incByteIdxEv(%class.CJBig2_BitStream* %6) #5
  %28 = load %class.CJBig2_BitStream*, %class.CJBig2_BitStream** %5, align 8
  %29 = tail call zeroext i8 @_ZNK16CJBig2_BitStream16getCurByte_arithEv(%class.CJBig2_BitStream* %28) #5
  store i8 %29, i8* %2, align 2
  %30 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 65280
  %33 = zext i8 %29 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = sub i32 %32, %34
  store i32 %35, i32* %30, align 4
  %36 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 5
  store i32 8, i32* %36, align 4
  br label %37

37:                                               ; preds = %18, %10, %16, %15, %14, %27
  %38 = load %class.CJBig2_BitStream*, %class.CJBig2_BitStream** %5, align 8
  %39 = tail call zeroext i1 @_ZNK16CJBig2_BitStream10IsInBoundsEv(%class.CJBig2_BitStream* %38) #5
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 0
  store i8 1, i8* %41, align 8
  br label %42

42:                                               ; preds = %40, %37
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN19CJBig2_ArithDecoderD2Ev(%class.CJBig2_ArithDecoder* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* nocapture, %class.JBig2ArithCtx* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"], [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"]* @_ZN12_GLOBAL__N_18kQeTableE, i64 0, i64 %5, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = sub i32 %10, %8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 16
  %15 = icmp ult i32 %14, %11
  br i1 %15, label %16, label %60

16:                                               ; preds = %2
  %17 = trunc i32 %11 to i16
  %18 = icmp slt i16 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 0
  %21 = load i8, i8* %20, align 4, !range !2
  br label %102

22:                                               ; preds = %16
  %23 = icmp ult i32 %11, %8
  br i1 %23, label %24, label %36

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = lshr i64 140737488338878, %5
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  %30 = xor i8 %26, 1
  br i1 %29, label %31, label %32

31:                                               ; preds = %24
  store i8 %30, i8* %25, align 4
  br label %32

32:                                               ; preds = %24, %31
  %33 = getelementptr inbounds [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"], [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"]* @_ZN12_GLOBAL__N_18kQeTableE, i64 0, i64 %5, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %3, align 4
  br label %42

36:                                               ; preds = %22
  %37 = getelementptr inbounds [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"], [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"]* @_ZN12_GLOBAL__N_18kQeTableE, i64 0, i64 %5, i32 1
  %38 = load i8, i8* %37, align 2
  %39 = zext i8 %38 to i32
  store i32 %39, i32* %3, align 4
  %40 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !2
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i8 [ %30, %32 ], [ %41, %36 ]
  %44 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 5
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %51, %42
  %47 = phi i32 [ %57, %51 ], [ %45, %42 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  tail call void @_ZN19CJBig2_ArithDecoder6BYTEINEv(%class.CJBig2_ArithDecoder* %0) #5
  %50 = load i32, i32* %44, align 4
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi i32 [ %50, %49 ], [ %47, %46 ]
  %53 = load i32, i32* %9, align 8
  %54 = shl i32 %53, 1
  store i32 %54, i32* %9, align 8
  %55 = load i32, i32* %12, align 4
  %56 = shl i32 %55, 1
  store i32 %56, i32* %12, align 4
  %57 = add i32 %52, -1
  store i32 %57, i32* %44, align 4
  %58 = trunc i32 %54 to i16
  %59 = icmp sgt i16 %58, -1
  br i1 %59, label %46, label %102

60:                                               ; preds = %2
  %61 = shl i32 %11, 16
  %62 = sub i32 %13, %61
  store i32 %62, i32* %12, align 4
  %63 = icmp ult i32 %11, %8
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"], [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"]* @_ZN12_GLOBAL__N_18kQeTableE, i64 0, i64 %5, i32 1
  %66 = load i8, i8* %65, align 2
  %67 = zext i8 %66 to i32
  store i32 %67, i32* %3, align 4
  %68 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 0
  %69 = load i8, i8* %68, align 4, !range !2
  br label %82

70:                                               ; preds = %60
  %71 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 0
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = lshr i64 140737488338878, %5
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  %76 = xor i8 %72, 1
  br i1 %75, label %77, label %78

77:                                               ; preds = %70
  store i8 %76, i8* %71, align 4
  br label %78

78:                                               ; preds = %70, %77
  %79 = getelementptr inbounds [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"], [47 x %"struct.JBig2ArithCtx::JBig2ArithQe"]* @_ZN12_GLOBAL__N_18kQeTableE, i64 0, i64 %5, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  store i32 %81, i32* %3, align 4
  br label %82

82:                                               ; preds = %78, %64
  %83 = phi i8 [ %69, %64 ], [ %76, %78 ]
  store i32 %8, i32* %9, align 8
  %84 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 5
  %85 = load i32, i32* %84, align 4
  br label %86

86:                                               ; preds = %93, %82
  %87 = phi i32 [ %96, %93 ], [ %8, %82 ]
  %88 = phi i32 [ %99, %93 ], [ %85, %82 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  tail call void @_ZN19CJBig2_ArithDecoder6BYTEINEv(%class.CJBig2_ArithDecoder* %0) #5
  %91 = load i32, i32* %84, align 4
  %92 = load i32, i32* %9, align 8
  br label %93

93:                                               ; preds = %90, %86
  %94 = phi i32 [ %92, %90 ], [ %87, %86 ]
  %95 = phi i32 [ %91, %90 ], [ %88, %86 ]
  %96 = shl i32 %94, 1
  store i32 %96, i32* %9, align 8
  %97 = load i32, i32* %12, align 4
  %98 = shl i32 %97, 1
  store i32 %98, i32* %12, align 4
  %99 = add i32 %95, -1
  store i32 %99, i32* %84, align 4
  %100 = trunc i32 %96 to i16
  %101 = icmp sgt i16 %100, -1
  br i1 %101, label %86, label %102

102:                                              ; preds = %93, %51, %19
  %103 = phi i8 [ %21, %19 ], [ %43, %51 ], [ %83, %93 ]
  %104 = zext i8 %103 to i32
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CJBig2_ArithDecoder10ReadValueAEv(%class.CJBig2_ArithDecoder* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 5
  %3 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 4
  %4 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %0, i64 0, i32 3
  %5 = load i32, i32* %2, align 4
  br label %6

6:                                                ; preds = %11, %1
  %7 = phi i32 [ %17, %11 ], [ %5, %1 ]
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  tail call void @_ZN19CJBig2_ArithDecoder6BYTEINEv(%class.CJBig2_ArithDecoder* %0)
  %10 = load i32, i32* %2, align 4
  br label %11

11:                                               ; preds = %9, %6
  %12 = phi i32 [ %10, %9 ], [ %7, %6 ]
  %13 = load i32, i32* %3, align 8
  %14 = shl i32 %13, 1
  store i32 %14, i32* %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = shl i32 %15, 1
  store i32 %16, i32* %4, align 4
  %17 = add i32 %12, -1
  store i32 %17, i32* %2, align 4
  %18 = trunc i32 %14 to i16
  %19 = icmp sgt i16 %18, -1
  br i1 %19, label %6, label %20

20:                                               ; preds = %11
  ret void
}

declare zeroext i8 @_ZNK16CJBig2_BitStream17getNextByte_arithEv(%class.CJBig2_BitStream*) local_unnamed_addr #3

declare void @_ZN16CJBig2_BitStream10incByteIdxEv(%class.CJBig2_BitStream*) local_unnamed_addr #3

declare zeroext i1 @_ZNK16CJBig2_BitStream10IsInBoundsEv(%class.CJBig2_BitStream*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
