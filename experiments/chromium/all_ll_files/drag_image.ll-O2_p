; ModuleID = '../../third_party/blink/renderer/core/page/drag_image.cc'
source_filename = "../../third_party/blink/renderer/core/page/drag_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.474, %class.sk_sp.475, %class.sk_sp.501, %class.sk_sp.502, %class.sk_sp.503, %class.sk_sp.504, i32, float, float, i32, %union.anon.511, [4 x i8] }>
%class.sk_sp.474 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.475 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.476", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.208, i32, %"class.absl::optional.481", %"class.std::__1::vector.486", %"class.std::__1::vector.493", %class.sk_sp.500, %class.sk_sp.207, i32, [4 x i8] }>
%"class.absl::optional.476" = type { %"class.absl::optional_internal::optional_data.477" }
%"class.absl::optional_internal::optional_data.477" = type { %"class.absl::optional_internal::optional_data_base.478" }
%"class.absl::optional_internal::optional_data_base.478" = type { %"class.absl::optional_internal::optional_data_dtor_base.479" }
%"class.absl::optional_internal::optional_data_dtor_base.479" = type { i8, %union.anon.480 }
%union.anon.480 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.207, %class.sk_sp.208, %"class.gfx::Rect", i32, %class.sk_sp.213, %class.sk_sp.221, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.207, %class.scoped_refptr.222 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.213 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.214" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.216" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.221 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.222 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.223", [4 x i8] }>
%"class.base::RefCountedThreadSafe.223" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.208 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.209", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { i8* }
%"class.absl::optional.481" = type { %"class.absl::optional_internal::optional_data.482" }
%"class.absl::optional_internal::optional_data.482" = type { %"class.absl::optional_internal::optional_data_base.483" }
%"class.absl::optional_internal::optional_data_base.483" = type { %"class.absl::optional_internal::optional_data_dtor_base.484" }
%"class.absl::optional_internal::optional_data_dtor_base.484" = type { i8, %union.anon.485 }
%union.anon.485 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.486" = type { %"class.std::__1::__vector_base.487" }
%"class.std::__1::__vector_base.487" = type { i32*, i32*, %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { i32* }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { float*, float*, %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { float* }
%class.sk_sp.500 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.192", [7 x i8] }>
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i8 }
%class.sk_sp.207 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.501 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.502 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.503 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.504 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.505, i32, %"class.absl::optional.506", i8, i32 }
%class.sk_sp.505 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.506" = type { %"class.absl::optional_internal::optional_data.507" }
%"class.absl::optional_internal::optional_data.507" = type { %"class.absl::optional_internal::optional_data_base.508" }
%"class.absl::optional_internal::optional_data_base.508" = type { %"class.absl::optional_internal::optional_data_dtor_base.509" }
%"class.absl::optional_internal::optional_data_dtor_base.509" = type { i8, %union.anon.510 }
%union.anon.510 = type { %struct.SkRect }
%union.anon.511 = type { i32 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.313, %class.scoped_refptr.321, %class.scoped_refptr.331, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.344 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.312 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.282" }
%"struct.std::__1::atomic.282" = type { %"struct.std::__1::__atomic_base.283" }
%"struct.std::__1::__atomic_base.283" = type { %"struct.std::__1::__atomic_base.284" }
%"struct.std::__1::__atomic_base.284" = type { %"struct.std::__1::__cxx_atomic_impl.285" }
%"struct.std::__1::__cxx_atomic_impl.285" = type { %"struct.std::__1::__cxx_atomic_base_impl.286" }
%"struct.std::__1::__cxx_atomic_base_impl.286" = type { i32 }
%class.scoped_refptr.312 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.345", [4 x i8] }>
%"class.WTF::RefCounted.345" = type { %"class.base::RefCounted.346" }
%"class.base::RefCounted.346" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.313 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.319", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.314" }
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.319" = type { %"class.base::RefCounted.320" }
%"class.base::RefCounted.320" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.321 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.322", %"class.WTF::RefCounted.329", [4 x i8] }>
%"class.blink::FontSettings.322" = type { %"class.WTF::Vector.323" }
%"class.WTF::Vector.323" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { %"class.blink::FontTagValuePair.326"*, i32, i32 }
%"class.blink::FontTagValuePair.326" = type { i32, float }
%"class.WTF::RefCounted.329" = type { %"class.base::RefCounted.330" }
%"class.base::RefCounted.330" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.331 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.332", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.341, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.332" = type { %"class.base::RefCounted.333" }
%"class.base::RefCounted.333" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.336 }
%union.anon.336 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.341 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.342", [4 x i8] }>
%"class.WTF::RefCounted.342" = type { %"class.base::RefCounted.343" }
%"class.base::RefCounted.343" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.344 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.347 }
%class.scoped_refptr.347 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.348", %"class.WTF::Vector.350", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.375", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.348" = type { %"class.base::RefCounted.349" }
%"class.base::RefCounted.349" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352", [8 x i8] }
%"class.WTF::VectorBufferBase.352" = type { %class.scoped_refptr.353*, i32, i32 }
%class.scoped_refptr.353 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.354", [4 x i8] }>
%"class.WTF::RefCounted.354" = type { %"class.base::RefCounted.355" }
%"class.base::RefCounted.355" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.365", %class.scoped_refptr.372, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.354" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.358", %"class.absl::optional.358", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.358" = type { %"class.absl::optional_internal::optional_data.359" }
%"class.absl::optional_internal::optional_data.359" = type { %"class.absl::optional_internal::optional_data_base.360" }
%"class.absl::optional_internal::optional_data_base.360" = type { %"class.absl::optional_internal::optional_data_dtor_base.361" }
%"class.absl::optional_internal::optional_data_dtor_base.361" = type { i8, %union.anon.362 }
%union.anon.362 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.363, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.364, i8, [7 x i8] }>
%class.sk_sp.363 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.364 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.363, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.368, %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.372 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.373", [4 x i8] }>
%"class.WTF::RefCounted.373" = type { %"class.base::RefCounted.374" }
%"class.base::RefCounted.374" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.375" = type { %"class.blink::PersistentBase.376" }
%"class.blink::PersistentBase.376" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.15", i32, [4 x i8], %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.192", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.131", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.111", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.125", [4 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { i64 }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { float }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.134", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.143" }
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.159" }
%"class.WTF::VectorBuffer.159" = type { %"class.WTF::VectorBufferBase.160" }
%"class.WTF::VectorBufferBase.160" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.173" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.202" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.377 }
%class.scoped_refptr.377 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.378", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.378" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"class.blink::DragImage" = type { %class.SkBitmap, float, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.196" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.9" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"class.std::__1::unique_ptr.12"*, i32, i32 }
%"class.std::__1::unique_ptr.12" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::BitmapImage" = type <{ %"class.blink::Image", %"class.std::__1::unique_ptr.224", %"class.blink::IntSize", %"class.blink::IntSize", %"class.blink::IntSize", %"class.blink::IntSize", %"class.cc::PaintImage", i32, i8, i8, [2 x i8], i32, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::DeferredImageDecoder"* }
%"class.blink::DeferredImageDecoder" = type { %class.scoped_refptr.227, %"class.std::__1::unique_ptr.242", %"class.WTF::String", %"class.blink::IntSize", i32, i8, i8, i8, i8, i8, i8, %class.sk_sp.0, %"class.blink::IntPoint", i32, %"class.absl::optional", i8, i8, %"class.absl::optional.287", %"class.WTF::Vector.297", i64, %class.scoped_refptr.302 }
%class.scoped_refptr.227 = type { %"class.blink::ParkableImage"* }
%"class.blink::ParkableImage" = type <{ %"class.WTF::ThreadSafeRefCounted.228", [4 x i8], %"class.WTF::Mutex", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", i64, i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.228" = type { %"class.base::RefCountedThreadSafe.229" }
%"class.base::RefCountedThreadSafe.229" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::RWBuffer"* }
%"class.blink::RWBuffer" = type { %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferBlock"*, i64 }
%"struct.blink::RWBuffer::BufferHead" = type opaque
%"struct.blink::RWBuffer::BufferBlock" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::ImageDecoder"* }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr.245, %"class.WTF::Vector.248", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.253", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.259", %class.sk_sp.0, i8, %"class.std::__1::unique_ptr.272" }
%class.scoped_refptr.245 = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.246", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.246" = type { %"class.base::RefCountedThreadSafe.247" }
%"class.base::RefCountedThreadSafe.247" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.248" = type { %"class.WTF::VectorBuffer.249" }
%"class.WTF::VectorBuffer.249" = type { %"class.WTF::VectorBufferBase.250", [128 x i8] }
%"class.WTF::VectorBufferBase.250" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::ColorBehavior" = type { i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.263" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.262, [8 x i8] }
%struct.anon.262 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i8* }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, [3 x i8], %union.anon.291 }
%union.anon.291 = type { %"struct.cc::ImageHeaderMetadata" }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional.292", i8, i8, %"class.absl::optional", %"class.absl::optional", [2 x i8] }>
%"class.absl::optional.292" = type { %"class.absl::optional_internal::optional_data.293" }
%"class.absl::optional_internal::optional_data.293" = type { %"class.absl::optional_internal::optional_data_base.294" }
%"class.absl::optional_internal::optional_data_base.294" = type { %"class.absl::optional_internal::optional_data_dtor_base.295" }
%"class.absl::optional_internal::optional_data_dtor_base.295" = type { i8, %union.anon.296 }
%union.anon.296 = type { %"class.gfx::Size" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"struct.blink::DeferredFrameData"*, i32, i32 }
%"struct.blink::DeferredFrameData" = type opaque
%class.scoped_refptr.302 = type { %"class.blink::ImageFrameGenerator"* }
%"class.blink::ImageFrameGenerator" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.306" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::KURL"* }
%"class.blink::TextRun" = type <{ %union.anon.379, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.379 = type { i8* }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.blink::FloatPoint" = type { float, float }
%"struct.blink::TextRunPaintInfo" = type { %"class.blink::TextRun"*, i32, i32 }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.519, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap", %"class.WTF::HashMap.524", %"class.blink::FontDataCache", %"class.blink::Persistent.544", float, [4 x i8] }>
%class.sk_sp.519 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.520" }
%"class.blink::PersistentBase.520" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr.521" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr.521" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.528"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.528" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.529", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.529" = type { %"class.WTF::HashTable.530" }
%"class.WTF::HashTable.530" = type <{ %"struct.WTF::KeyValuePair.533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.533" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.534", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.534" = type { %"class.WTF::HashTable.535" }
%"class.WTF::HashTable.535" = type <{ %"struct.WTF::KeyValuePair.538"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.538" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.539", i32, i32 }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541" }
%"class.WTF::VectorBufferBase.541" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.544" = type { %"class.blink::PersistentBase.545" }
%"class.blink::PersistentBase.545" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.521" }
%"class.WTF::HashSet" = type opaque
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp.384, i32, %"class.base::WeakPtr.385", %"class.base::WeakPtr.386", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.419", i8, i32, i32, i32, %"class.WTF::Vector.443", i8, i8, i64, i64, %"class.base::RepeatingCallback.449", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.470" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp.384 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.385" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.386" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.410", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.396, [384 x i64], %class.sk_sp.397, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.398", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.404" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.396 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.397 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.422, %"class.std::__1::unique_ptr.423" }
%class.scoped_refptr.422 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.426", %struct.SkRect }
%"class.absl::optional.426" = type { %"class.absl::optional_internal::optional_data.427" }
%"class.absl::optional_internal::optional_data.427" = type { %"class.absl::optional_internal::optional_data_base.428" }
%"class.absl::optional_internal::optional_data_base.428" = type { %"class.absl::optional_internal::optional_data_dtor_base.429" }
%"class.absl::optional_internal::optional_data_dtor_base.429" = type { i8, %union.anon.430 }
%union.anon.430 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.438 }
%class.scoped_refptr.438 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.439", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.439" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %class.scoped_refptr.446*, i32, i32 }
%class.scoped_refptr.446 = type opaque
%"class.base::RepeatingCallback.449" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.450" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.464" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.std::__1::pair.466"*, %"struct.std::__1::pair.466"*, %"class.std::__1::__compressed_pair.467" }
%"struct.std::__1::pair.466" = type { i32, i32 }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468", %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.std::__1::pair.466"* }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.0, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.470" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.337 }
%struct.anon.337 = type { i8 }

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

@__const._ZN5blink9DragImage6CreateERKNS_4KURLERKN3WTF6StringERKNS_15FontDescriptionEf.text_paint = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.474 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.475 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.501 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.502 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.503 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.504 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.511 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.281 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.312 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.313 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.321 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.331 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.344 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.result = private unnamed_addr constant %"class.blink::Font" { %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.281 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.312 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.313 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.321 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.331 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.344 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, %class.scoped_refptr.347 { %"class.blink::FontFallbackList"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFallbackList"*) } }, align 8
@_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal global i64 0, align 8
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink9DragImageC1ERK8SkBitmapfNS_20InterpolationQualityE = hidden unnamed_addr alias void (%"class.blink::DragImage"*, %class.SkBitmap*, float, i32), void (%"class.blink::DragImage"*, %class.SkBitmap*, float, i32)* @_ZN5blink9DragImageC2ERK8SkBitmapfNS_20InterpolationQualityE
@_ZN5blink9DragImageD1Ev = hidden unnamed_addr alias void (%"class.blink::DragImage"*), void (%"class.blink::DragImage"*)* @_ZN5blink9DragImageD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden <2 x float> @_ZN5blink9DragImage17ClampedImageScaleERKNS_7IntSizeES3_S3_(%"class.blink::IntSize"* nocapture readonly dereferenceable(8), %"class.blink::IntSize"* nocapture readonly dereferenceable(8), %"class.blink::IntSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sitofp i32 %5 to float
  %7 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sitofp i32 %8 to float
  %10 = fdiv float %6, %9
  %11 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = fdiv float %13, %16
  %18 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %5, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = sitofp i32 %19 to float
  %23 = fdiv float %22, %6
  br label %24

24:                                               ; preds = %3, %21
  %25 = phi float [ %23, %21 ], [ 1.000000e+00, %3 ]
  %26 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %2, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %12, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = sitofp i32 %27 to float
  %31 = fdiv float %30, %13
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi float [ %31, %29 ], [ 1.000000e+00, %24 ]
  %34 = fcmp olt float %33, %25
  %35 = select i1 %34, float %33, float %25
  %36 = fmul float %10, %35
  %37 = insertelement <2 x float> undef, float %36, i32 0
  %38 = fmul float %17, %35
  %39 = insertelement <2 x float> %37, float %38, i32 1
  ret <2 x float> %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DragImage"* @_ZN5blink9DragImage6CreateEPNS_5ImageENS_27RespectImageOrientationEnumEfNS_20InterpolationQualityEfNS_9FloatSizeE(%"class.blink::Image"*, i32, float, i32, float, <2 x float>) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.cc::PaintImage", align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %"class.cc::PaintImage", align 8
  %10 = alloca %class.sk_sp.207, align 8
  %11 = icmp eq %"class.blink::Image"* %0, null
  br i1 %11, label %85, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.cc::PaintImage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %13) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 104, i1 false)
  %14 = bitcast %"class.blink::Image"* %0 to void (%"class.cc::PaintImage"*, %"class.blink::Image"*)***
  %15 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)**, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %15, i64 30
  %17 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %16, align 8
  call void %17(%"class.cc::PaintImage"* nonnull sret %7, %"class.blink::Image"* nonnull %0) #12
  %18 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %7, i64 0, i32 15, i32 0
  %19 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %18, align 8
  %20 = icmp eq %"class.cc::PaintWorkletInput"* %19, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %7, i64 0, i32 14, i32 0
  %23 = load %class.SkImage*, %class.SkImage** %22, align 8
  %24 = icmp eq %class.SkImage* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %7, i64 0, i32 5, i32 0
  %27 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %26, align 8
  %28 = icmp eq %"class.cc::TextureBacking"* %27, null
  br i1 %28, label %83, label %29

29:                                               ; preds = %25, %12, %21
  %30 = bitcast %"class.blink::Image"* %0 to i1 (%"class.blink::Image"*)***
  %31 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %31, i64 3
  %33 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %32, align 8
  %34 = call zeroext i1 %33(%"class.blink::Image"* nonnull %0) #12
  %35 = icmp eq i32 %1, 1
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = bitcast %"class.blink::Image"* %0 to %"class.blink::BitmapImage"*
  %39 = call i8 @_ZNK5blink11BitmapImage23CurrentFrameOrientationEv(%"class.blink::BitmapImage"* nonnull %38) #12
  br label %40

40:                                               ; preds = %37, %29
  %41 = phi i8 [ %39, %37 ], [ 1, %29 ]
  %42 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %42) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #12
  %43 = bitcast %"class.cc::PaintImage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %43) #12
  call void @_ZN5blink5Image20ResizeAndOrientImageERKN2cc10PaintImageENS_16ImageOrientationENS_9FloatSizeEfNS_20InterpolationQualityE(%"class.cc::PaintImage"* nonnull sret %9, %"class.cc::PaintImage"* nonnull dereferenceable(104) %7, i8 %41, <2 x float> %5, float %4, i32 %3) #12
  %44 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"* nonnull %7, %"class.cc::PaintImage"* nonnull dereferenceable(104) %9) #12
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %43) #12
  %45 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %18, align 8
  %46 = icmp eq %"class.cc::PaintWorkletInput"* %45, null
  br i1 %46, label %47, label %55

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %7, i64 0, i32 14, i32 0
  %49 = load %class.SkImage*, %class.SkImage** %48, align 8
  %50 = icmp eq %class.SkImage* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %7, i64 0, i32 5, i32 0
  %53 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %52, align 8
  %54 = icmp eq %"class.cc::TextureBacking"* %53, null
  br i1 %54, label %81, label %55

55:                                               ; preds = %51, %40, %47
  %56 = bitcast %class.sk_sp.207* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.207* nonnull sret %10, %"class.cc::PaintImage"* nonnull %7) #12
  %57 = getelementptr inbounds %class.sk_sp.207, %class.sk_sp.207* %10, i64 0, i32 0
  %58 = load %class.SkImage*, %class.SkImage** %57, align 8
  %59 = call zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage* %58, %class.SkBitmap* nonnull %8, i32 0) #12
  %60 = load %class.SkImage*, %class.SkImage** %57, align 8
  %61 = icmp eq %class.SkImage* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %class.SkImage, %class.SkImage* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkImage* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkImage* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #12
  br label %72

72:                                               ; preds = %66, %62, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br i1 %59, label %73, label %81

73:                                               ; preds = %72
  %74 = call noalias i8* @malloc(i64 64) #12
  %75 = bitcast i8* %74 to %class.SkBitmap*
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %75, %class.SkBitmap* nonnull dereferenceable(56) %8) #12
  %76 = getelementptr inbounds i8, i8* %74, i64 56
  %77 = bitcast i8* %76 to float*
  store float %2, float* %77, align 8
  %78 = getelementptr inbounds i8, i8* %74, i64 60
  %79 = bitcast i8* %78 to i32*
  store i32 %3, i32* %79, align 4
  %80 = ptrtoint i8* %74 to i64
  br label %81

81:                                               ; preds = %51, %72, %73
  %82 = phi i64 [ %80, %73 ], [ 0, %72 ], [ 0, %51 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %42) #12
  br label %83

83:                                               ; preds = %25, %81
  %84 = phi i64 [ %82, %81 ], [ 0, %25 ]
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %13) #12
  br label %85

85:                                               ; preds = %6, %83
  %86 = phi i64 [ %84, %83 ], [ 0, %6 ]
  %87 = inttoptr i64 %86 to %"class.blink::DragImage"*
  ret %"class.blink::DragImage"* %87
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8 @_ZNK5blink11BitmapImage23CurrentFrameOrientationEv(%"class.blink::BitmapImage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN5blink5Image20ResizeAndOrientImageERKN2cc10PaintImageENS_16ImageOrientationENS_9FloatSizeEfNS_20InterpolationQualityE(%"class.cc::PaintImage"* sret, %"class.cc::PaintImage"* dereferenceable(104), i8, <2 x float>, float, i32) local_unnamed_addr #3

declare dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #4

declare void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.207* sret, %"class.cc::PaintImage"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage*, %class.SkBitmap*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DragImage"* @_ZN5blink9DragImage6CreateERKNS_4KURLERKN3WTF6StringERKNS_15FontDescriptionEf(%"class.blink::KURL"* nocapture readonly dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), float) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.blink::FontDescription", align 8
  %6 = alloca %"class.blink::FontDescription", align 8
  %7 = alloca %"class.blink::Font", align 8
  %8 = alloca %"class.blink::Font", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = alloca %"class.blink::TextRun", align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.blink::IntSize"*
  %15 = alloca %"class.blink::CanvasResourceParams", align 4
  %16 = alloca %"class.cc::PaintFlags", align 8
  %17 = alloca %class.SkRRect, align 4
  %18 = alloca { <2 x float>, <2 x float> }, align 8
  %19 = bitcast { <2 x float>, <2 x float> }* %18 to %struct.SkRect*
  %20 = alloca %"class.cc::PaintFlags", align 8
  %21 = alloca %"class.blink::FloatPoint", align 4
  %22 = alloca %"class.blink::TextRun", align 8
  %23 = alloca %"struct.blink::TextRunPaintInfo", align 8
  %24 = alloca i8, align 1
  %25 = alloca %"class.blink::TextRun", align 8
  %26 = alloca %"struct.blink::TextRunPaintInfo", align 8
  %27 = alloca %"class.blink::FloatPoint", align 4
  %28 = alloca %"class.blink::ImageOrientation", align 1
  %29 = bitcast %"class.blink::Font"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 bitcast (%"class.blink::Font"* @__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.result to i8*), i64 88, i1 false)
  %30 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i8*) acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %36, !prof !2

32:                                               ; preds = %4
  %33 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  store i16 2800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #12
  br label %36

36:                                               ; preds = %4, %32, %35
  %37 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  %38 = bitcast %"class.blink::FontDescription"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %38) #12, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.description to i8*), i64 80, i1 false) #12, !noalias !3
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %6, %"class.blink::FontDescription"* dereferenceable(80) %2) #12, !noalias !3
  %39 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %6, i64 0, i32 10, i32 0, i32 0
  store i16 %37, i16* %39, align 8, !noalias !3
  %40 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %6, i64 0, i32 4
  store float 1.100000e+01, float* %40, align 8, !noalias !3
  %41 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %6, i64 0, i32 5
  store float 1.100000e+01, float* %41, align 4, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 bitcast (%"class.blink::Font"* @__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.result to i8*), i64 88, i1 false) #12
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionE(%"class.blink::Font"* nonnull %7, %"class.blink::FontDescription"* nonnull dereferenceable(80) %6) #12
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %38) #12, !noalias !3
  %42 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* nonnull %7) #12
  %43 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %42, i64 0, i32 2
  %44 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %43, align 8
  %45 = icmp eq %"class.blink::SimpleFontData"* %44, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %7, i64 0, i32 0
  %48 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %42, %"class.blink::FontDescription"* nonnull dereferenceable(80) %47) #12
  store %"class.blink::SimpleFontData"* %48, %"class.blink::SimpleFontData"** %43, align 8
  br label %49

49:                                               ; preds = %36, %46
  %50 = phi %"class.blink::SimpleFontData"* [ %44, %36 ], [ %48, %46 ]
  %51 = bitcast %"class.blink::Font"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %51) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 bitcast (%"class.blink::Font"* @__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.result to i8*), i64 88, i1 false)
  %52 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %58, !prof !2

54:                                               ; preds = %49
  %55 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #12
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #12
  br label %58

58:                                               ; preds = %49, %54, %57
  %59 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %60 = bitcast %"class.blink::FontDescription"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %60) #12, !noalias !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.description to i8*), i64 80, i1 false) #12, !noalias !6
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %5, %"class.blink::FontDescription"* dereferenceable(80) %2) #12, !noalias !6
  %61 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 10, i32 0, i32 0
  store i16 %59, i16* %61, align 8, !noalias !6
  %62 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 4
  store float 1.000000e+01, float* %62, align 8, !noalias !6
  %63 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 5
  store float 1.000000e+01, float* %63, align 4, !noalias !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 bitcast (%"class.blink::Font"* @__const._ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE.result to i8*), i64 88, i1 false) #12
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionE(%"class.blink::Font"* nonnull %8, %"class.blink::FontDescription"* nonnull dereferenceable(80) %5) #12
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %60) #12, !noalias !6
  %64 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* nonnull %8) #12
  %65 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %64, i64 0, i32 2
  %66 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %65, align 8
  %67 = icmp eq %"class.blink::SimpleFontData"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %8, i64 0, i32 0
  %70 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %64, %"class.blink::FontDescription"* nonnull dereferenceable(80) %69) #12
  store %"class.blink::SimpleFontData"* %70, %"class.blink::SimpleFontData"** %65, align 8
  br label %71

71:                                               ; preds = %58, %68
  %72 = phi %"class.blink::SimpleFontData"* [ %66, %58 ], [ %70, %68 ]
  %73 = icmp ne %"class.blink::SimpleFontData"* %50, null
  %74 = icmp ne %"class.blink::SimpleFontData"* %72, null
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %509

76:                                               ; preds = %71
  %77 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %78 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %77, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = fdiv float 2.920000e+02, %3
  %82 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 4, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %83, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #12
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !9

101:                                              ; preds = %92
  call void @llvm.trap() #12
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %104

104:                                              ; preds = %76, %87, %102
  %105 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %107 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %1) #12
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %152

113:                                              ; preds = %104, %109
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %134, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %134

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #12
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !9

130:                                              ; preds = %121
  call void @llvm.trap() #12
  unreachable

131:                                              ; preds = %121
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %122, align 4
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  br label %134

134:                                              ; preds = %131, %116, %113
  %135 = phi %"class.WTF::StringImpl"* [ %133, %131 ], [ %107, %116 ], [ %107, %113 ]
  %136 = ptrtoint %"class.WTF::StringImpl"* %114 to i64
  %137 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #12
  br label %152

152:                                              ; preds = %151, %148, %134, %109
  %153 = phi i1 [ true, %109 ], [ false, %134 ], [ false, %148 ], [ false, %151 ]
  %154 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %154) #12
  %155 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 1
  %157 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 2
  %158 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 3
  %159 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %158, align 8
  %160 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %160, align 4
  %161 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 5
  store i16 -21846, i16* %161, align 8
  %162 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 0
  store i8 -86, i8* %162, align 2
  %163 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 1
  store i8 -86, i8* %163, align 1
  %164 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %164, align 4
  %165 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 1
  %166 = bitcast i8* %165 to i64*
  store i64 -6148914691236517206, i64* %166, align 4
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %152
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %176

171:                                              ; preds = %152
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %175 = ptrtoint %"class.WTF::StringImpl"* %174 to i64
  br label %176

176:                                              ; preds = %169, %171
  %177 = phi %"class.WTF::StringImpl"* [ %170, %169 ], [ %167, %171 ]
  %178 = phi i64 [ 0, %169 ], [ %175, %171 ]
  %179 = phi i32 [ 0, %169 ], [ %173, %171 ]
  store i32 %179, i32* %156, align 8
  store i32 %179, i32* %157, align 4
  store float 0.000000e+00, float* %158, align 8
  store float 0.000000e+00, float* %160, align 4
  store i16 -22527, i16* %161, align 8
  store float 0.000000e+00, float* %164, align 4
  store i8 -85, i8* %165, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %176
  store i16 -22523, i16* %161, align 8
  store i8* null, i8** %155, align 8
  br label %190

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = bitcast %"class.blink::TextRun"* %11 to i64*
  store i64 %178, i64* %187, align 8
  br i1 %186, label %189, label %188

188:                                              ; preds = %182
  store i16 -22523, i16* %161, align 8
  br label %190

189:                                              ; preds = %182
  store i16 -22527, i16* %161, align 8
  br label %190

190:                                              ; preds = %181, %188, %189
  %191 = bitcast %"class.blink::TextRun"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %191) #12
  %192 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 1
  %194 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 2
  %195 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 3
  %196 = bitcast %"class.blink::TextRun"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %195, align 8
  %197 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %197, align 4
  %198 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 5
  store i16 -21846, i16* %198, align 8
  %199 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 6, i64 0
  store i8 -86, i8* %199, align 2
  %200 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 6, i64 1
  store i8 -86, i8* %200, align 1
  %201 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %201, align 4
  %202 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 7, i32 1
  %203 = bitcast i8* %202 to i64*
  store i64 -6148914691236517206, i64* %203, align 4
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %206, label %208

206:                                              ; preds = %190
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %213

208:                                              ; preds = %190
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1
  %212 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  br label %213

213:                                              ; preds = %206, %208
  %214 = phi %"class.WTF::StringImpl"* [ %207, %206 ], [ %204, %208 ]
  %215 = phi i64 [ 0, %206 ], [ %212, %208 ]
  %216 = phi i32 [ 0, %206 ], [ %210, %208 ]
  store i32 %216, i32* %193, align 8
  store i32 %216, i32* %194, align 4
  store float 0.000000e+00, float* %195, align 8
  store float 0.000000e+00, float* %197, align 4
  store i16 -22527, i16* %198, align 8
  store float 0.000000e+00, float* %201, align 4
  store i8 -85, i8* %202, align 4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %213
  store i16 -22523, i16* %198, align 8
  store i8* null, i8** %192, align 8
  br label %227

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = bitcast %"class.blink::TextRun"* %12 to i64*
  store i64 %215, i64* %224, align 8
  br i1 %223, label %226, label %225

225:                                              ; preds = %219
  store i16 -22523, i16* %198, align 8
  br label %227

226:                                              ; preds = %219
  store i16 -22527, i16* %198, align 8
  br label %227

227:                                              ; preds = %218, %225, %226
  %228 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* nonnull %7, %"class.blink::TextRun"* nonnull dereferenceable(40) %11, %"class.WTF::HashSet"* null, %"class.blink::FloatRect"* null) #12
  %229 = fptosi float %228 to i32
  %230 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %50, i64 0, i32 1, i32 9
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %50, i64 0, i32 1, i32 10
  %233 = load i32, i32* %232, align 4
  %234 = add nsw i32 %233, %231
  %235 = sitofp i32 %229 to float
  %236 = fcmp olt float %81, %235
  %237 = fptosi float %81 to i32
  %238 = select i1 %236, i32 %237, i32 %229
  %239 = sitofp i32 %238 to float
  %240 = fadd float %239, 8.000000e+00
  %241 = sitofp i32 %234 to float
  %242 = fadd float %241, 4.000000e+00
  %243 = fptosi float %242 to i32
  br i1 %153, label %244, label %260

244:                                              ; preds = %227
  %245 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* nonnull %8, %"class.blink::TextRun"* nonnull dereferenceable(40) %12, %"class.WTF::HashSet"* null, %"class.blink::FloatRect"* null) #12
  %246 = fptosi float %245 to i32
  %247 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %72, i64 0, i32 1, i32 9
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %72, i64 0, i32 1, i32 10
  %250 = load i32, i32* %249, align 4
  %251 = add i32 %248, %243
  %252 = add i32 %251, %250
  %253 = sitofp i32 %246 to float
  %254 = fcmp olt float %81, %253
  br i1 %254, label %260, label %255

255:                                              ; preds = %244
  %256 = icmp slt i32 %238, %246
  %257 = select i1 %256, i32 %246, i32 %238
  %258 = sitofp i32 %257 to float
  %259 = fadd float %258, 8.000000e+00
  br label %260

260:                                              ; preds = %244, %255, %227
  %261 = phi i32 [ %252, %255 ], [ %243, %227 ], [ %252, %244 ]
  %262 = phi float [ %259, %255 ], [ %240, %227 ], [ %81, %244 ]
  %263 = phi i1 [ false, %255 ], [ false, %227 ], [ true, %244 ]
  %264 = fptosi float %262 to i32
  %265 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #12
  %266 = bitcast i64* %13 to i32*
  %267 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %14, i64 0, i32 1
  %268 = sitofp i32 %264 to float
  %269 = fmul float %268, %3
  %270 = fptosi float %269 to i32
  store i32 %270, i32* %266, align 8
  %271 = sitofp i32 %261 to float
  %272 = fmul float %271, %3
  %273 = fptosi float %272 to i32
  store i32 %273, i32* %267, align 4
  %274 = bitcast %"class.blink::CanvasResourceParams"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %274) #12
  call void @_ZN5blink20CanvasResourceParamsC1Ev(%"class.blink::CanvasResourceParams"* nonnull %15) #12
  %275 = call %"class.blink::CanvasResourceProvider"* @_ZN5blink22CanvasResourceProvider20CreateBitmapProviderERKNS_7IntSizeE15SkFilterQualityRKNS_20CanvasResourceParamsENS0_16ShouldInitializeE(%"class.blink::IntSize"* nonnull dereferenceable(8) %14, i32 1, %"class.blink::CanvasResourceParams"* nonnull dereferenceable(12) %15, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %274) #12
  %276 = icmp eq %"class.blink::CanvasResourceProvider"* %275, null
  br i1 %276, label %469, label %277

277:                                              ; preds = %260
  %278 = call %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"* nonnull %275, i1 zeroext false) #12
  %279 = bitcast %"class.cc::PaintCanvas"* %278 to void (%"class.cc::PaintCanvas"*, float, float)***
  %280 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %279, align 8
  %281 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %280, i64 12
  %282 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %281, align 8
  call void %282(%"class.cc::PaintCanvas"* %278, float %3, float %3) #12
  %283 = bitcast %"class.cc::PaintFlags"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %283) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %283, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink9DragImage6CreateERKNS_4KURLERKN3WTF6StringERKNS_15FontDescriptionEf.text_paint to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %16) #12
  %284 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %16, i64 0, i32 6
  store i32 -7566196, i32* %284, align 8
  %285 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %16, i64 0, i32 10
  %286 = bitcast %union.anon.511* %285 to i16*
  %287 = load i16, i16* %286, align 8
  %288 = or i16 %287, 1
  store i16 %288, i16* %286, align 8
  %289 = bitcast %class.SkRRect* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %289) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %289, i8 0, i64 52, i1 false) #12
  %290 = bitcast { <2 x float>, <2 x float> }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %290) #12
  %291 = sitofp i32 %264 to float
  %292 = insertelement <2 x float> undef, float %291, i32 0
  %293 = insertelement <2 x float> %292, float %271, i32 1
  %294 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %294, align 8
  %295 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 1
  store <2 x float> %293, <2 x float>* %295, align 8
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %17, %struct.SkRect* nonnull dereferenceable(16) %19, float 5.000000e+00, float 5.000000e+00) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %290) #12
  %296 = call %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"* nonnull %275, i1 zeroext false) #12
  %297 = bitcast %"class.cc::PaintCanvas"* %296 to void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)***
  %298 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %298, i64 31
  %300 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %299, align 8
  call void %300(%"class.cc::PaintCanvas"* %296, %class.SkRRect* nonnull dereferenceable(52) %17, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %16) #12
  %301 = bitcast %"class.cc::PaintFlags"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %301) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %301, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink9DragImage6CreateERKNS_4KURLERKN3WTF6StringERKNS_15FontDescriptionEf.text_paint to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %20) #12
  br i1 %153, label %302, label %374

302:                                              ; preds = %277
  br i1 %263, label %303, label %323

303:                                              ; preds = %302
  %304 = fadd float %291, -8.000000e+00
  %305 = call %"class.WTF::StringImpl"* @_ZN5blink15StringTruncator14CenterTruncateERKN3WTF6StringEfRKNS_4FontE(%"class.WTF::String"* nonnull dereferenceable(8) %9, float %304, %"class.blink::Font"* nonnull dereferenceable(88) %8) #12
  %306 = ptrtoint %"class.WTF::StringImpl"* %305 to i64
  %307 = bitcast %"class.WTF::String"* %9 to i64*
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %306, i64* %307, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %303
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %308) #12
  br label %323

323:                                              ; preds = %303, %319, %322, %302
  %324 = bitcast %"class.blink::FloatPoint"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324) #12
  %325 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %21, i64 0, i32 0
  %326 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %21, i64 0, i32 1
  %327 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %72, i64 0, i32 1, i32 10
  %328 = load i32, i32* %327, align 4
  %329 = sitofp i32 %328 to float
  %330 = fadd float %329, 2.000000e+00
  %331 = fsub float %271, %330
  store float 4.000000e+00, float* %325, align 4
  store float %331, float* %326, align 4
  %332 = bitcast %"class.blink::TextRun"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %332) #12
  %333 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 0, i32 0
  %334 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 1
  %335 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 2
  %336 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 3
  %337 = bitcast %"class.blink::TextRun"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %337, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %336, align 8
  %338 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %338, align 4
  %339 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 5
  store i16 -21846, i16* %339, align 8
  %340 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 6, i64 0
  store i8 -86, i8* %340, align 2
  %341 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 6, i64 1
  store i8 -86, i8* %341, align 1
  %342 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %342, align 4
  %343 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 7, i32 1
  %344 = bitcast i8* %343 to i64*
  store i64 -6148914691236517206, i64* %344, align 4
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %347, label %349

347:                                              ; preds = %323
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %354

349:                                              ; preds = %323
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 1
  %353 = ptrtoint %"class.WTF::StringImpl"* %352 to i64
  br label %354

354:                                              ; preds = %347, %349
  %355 = phi i64 [ 0, %347 ], [ %353, %349 ]
  %356 = phi %"class.WTF::StringImpl"* [ %348, %347 ], [ %345, %349 ]
  %357 = phi i32 [ 0, %347 ], [ %351, %349 ]
  store i32 %357, i32* %334, align 8
  store i32 %357, i32* %335, align 4
  store float 0.000000e+00, float* %336, align 8
  store float 0.000000e+00, float* %338, align 4
  store i16 -22527, i16* %339, align 8
  store float 0.000000e+00, float* %342, align 4
  store i8 -85, i8* %343, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %354
  store i16 -22523, i16* %339, align 8
  store i8* null, i8** %333, align 8
  br label %368

360:                                              ; preds = %354
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 1
  %364 = icmp eq i32 %363, 0
  %365 = bitcast %"class.blink::TextRun"* %22 to i64*
  store i64 %355, i64* %365, align 8
  br i1 %364, label %367, label %366

366:                                              ; preds = %360
  store i16 -22523, i16* %339, align 8
  br label %368

367:                                              ; preds = %360
  store i16 -22527, i16* %339, align 8
  br label %368

368:                                              ; preds = %359, %366, %367
  %369 = call %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"* nonnull %275, i1 zeroext false) #12
  %370 = bitcast %"struct.blink::TextRunPaintInfo"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %370) #12
  %371 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %23, i64 0, i32 0
  store %"class.blink::TextRun"* %22, %"class.blink::TextRun"** %371, align 8
  %372 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %23, i64 0, i32 1
  store i32 0, i32* %372, align 8
  %373 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %23, i64 0, i32 2
  store i32 %357, i32* %373, align 4
  call void @_ZNK5blink4Font8DrawTextEPN2cc11PaintCanvasERKNS_16TextRunPaintInfoERKNS_10FloatPointEfRKNS1_10PaintFlagsENS0_8DrawTypeE(%"class.blink::Font"* nonnull %8, %"class.cc::PaintCanvas"* %369, %"struct.blink::TextRunPaintInfo"* nonnull dereferenceable(16) %23, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %21, float %3, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %20, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %370) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %332) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %324) #12
  br label %374

374:                                              ; preds = %368, %277
  br i1 %236, label %375, label %395

375:                                              ; preds = %374
  %376 = fadd float %291, -8.000000e+00
  %377 = call %"class.WTF::StringImpl"* @_ZN5blink15StringTruncator13RightTruncateERKN3WTF6StringEfRKNS_4FontE(%"class.WTF::String"* nonnull dereferenceable(8) %10, float %376, %"class.blink::Font"* nonnull dereferenceable(88) %7) #12
  %378 = ptrtoint %"class.WTF::StringImpl"* %377 to i64
  %379 = bitcast %"class.WTF::String"* %10 to i64*
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %378, i64* %379, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %375
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #12
  br label %395

395:                                              ; preds = %375, %391, %394, %374
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #12
  store i8 -86, i8* %24, align 1
  %396 = bitcast %"class.blink::TextRun"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %396) #12
  %397 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 2
  %398 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 3
  %399 = bitcast %"class.blink::TextRun"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %398, align 8
  %400 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %400, align 4
  %401 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 5
  store i16 -21846, i16* %401, align 8
  %402 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 6, i64 0
  store i8 -86, i8* %402, align 2
  %403 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 6, i64 1
  store i8 -86, i8* %403, align 1
  %404 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %404, align 4
  %405 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 7, i32 1
  %406 = bitcast i8* %405 to i64*
  store i64 -6148914691236517206, i64* %406, align 4
  call void @_ZN5blink25TextRunWithDirectionalityERKN3WTF6StringEPb(%"class.blink::TextRun"* nonnull sret %25, %"class.WTF::String"* nonnull dereferenceable(8) %10, i8* nonnull %24) #12
  %407 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %7, i64 0, i32 0, i32 5
  %408 = load float, float* %407, align 4
  %409 = fadd float %408, 5.000000e-01
  %410 = fptosi float %409 to i32
  %411 = sitofp i32 %410 to float
  %412 = fadd float %411, 2.000000e+00
  %413 = fptosi float %412 to i32
  %414 = load i8, i8* %24, align 1, !range !10
  %415 = icmp eq i8 %414, 0
  br i1 %415, label %429, label %416

416:                                              ; preds = %395
  %417 = load i16, i16* %401, align 8
  %418 = and i16 %417, 16
  %419 = icmp eq i16 %418, 0
  br i1 %419, label %429, label %420

420:                                              ; preds = %416
  %421 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* nonnull %7, %"class.blink::TextRun"* nonnull dereferenceable(40) %25, %"class.WTF::HashSet"* null, %"class.blink::FloatRect"* null) #12
  %422 = fadd float %291, -8.000000e+00
  %423 = fptosi float %422 to i32
  %424 = sitofp i32 %423 to float
  %425 = call float @llvm.ceil.f32(float %421)
  %426 = fsub float %424, %425
  %427 = fptosi float %426 to i32
  %428 = sitofp i32 %427 to float
  br label %429

429:                                              ; preds = %416, %395, %420
  %430 = phi float [ 4.000000e+00, %395 ], [ %428, %420 ], [ 4.000000e+00, %416 ]
  %431 = call %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"* nonnull %275, i1 zeroext false) #12
  %432 = bitcast %"struct.blink::TextRunPaintInfo"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %432) #12
  %433 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %26, i64 0, i32 0
  store %"class.blink::TextRun"* %25, %"class.blink::TextRun"** %433, align 8
  %434 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %26, i64 0, i32 1
  store i32 0, i32* %434, align 8
  %435 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %26, i64 0, i32 2
  %436 = load i32, i32* %397, align 4
  store i32 %436, i32* %435, align 4
  %437 = bitcast %"class.blink::FloatPoint"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %437) #12
  %438 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %27, i64 0, i32 0
  store float %430, float* %438, align 4
  %439 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %27, i64 0, i32 1
  %440 = sitofp i32 %413 to float
  store float %440, float* %439, align 4
  %441 = call zeroext i1 @_ZNK5blink4Font12DrawBidiTextEPN2cc11PaintCanvasERKNS_16TextRunPaintInfoERKNS_10FloatPointENS0_24CustomFontNotReadyActionEfRKNS1_10PaintFlagsENS0_8DrawTypeE(%"class.blink::Font"* nonnull %7, %"class.cc::PaintCanvas"* %431, %"struct.blink::TextRunPaintInfo"* nonnull dereferenceable(16) %26, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %27, i32 0, float %3, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %20, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %437) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %432) #12
  %442 = getelementptr inbounds %"class.blink::ImageOrientation", %"class.blink::ImageOrientation"* %28, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %442) #12
  store i8 1, i8* %442, align 1
  %443 = bitcast %"class.blink::CanvasResourceProvider"* %275 to %"class.blink::StaticBitmapImage"* (%"class.blink::CanvasResourceProvider"*, %"class.blink::ImageOrientation"*)***
  %444 = load %"class.blink::StaticBitmapImage"* (%"class.blink::CanvasResourceProvider"*, %"class.blink::ImageOrientation"*)**, %"class.blink::StaticBitmapImage"* (%"class.blink::CanvasResourceProvider"*, %"class.blink::ImageOrientation"*)*** %443, align 8
  %445 = getelementptr inbounds %"class.blink::StaticBitmapImage"* (%"class.blink::CanvasResourceProvider"*, %"class.blink::ImageOrientation"*)*, %"class.blink::StaticBitmapImage"* (%"class.blink::CanvasResourceProvider"*, %"class.blink::ImageOrientation"*)** %444, i64 4
  %446 = load %"class.blink::StaticBitmapImage"* (%"class.blink::CanvasResourceProvider"*, %"class.blink::ImageOrientation"*)*, %"class.blink::StaticBitmapImage"* (%"class.blink::CanvasResourceProvider"*, %"class.blink::ImageOrientation"*)** %445, align 8
  %447 = call %"class.blink::StaticBitmapImage"* %446(%"class.blink::CanvasResourceProvider"* nonnull %275, %"class.blink::ImageOrientation"* nonnull dereferenceable(1) %28) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %442) #12
  %448 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %447, i64 0, i32 0
  %449 = call %"class.blink::DragImage"* @_ZN5blink9DragImage6CreateEPNS_5ImageENS_27RespectImageOrientationEnumEfNS_20InterpolationQualityEfNS_9FloatSizeE(%"class.blink::Image"* %448, i32 1, float %3, i32 2, float 1.000000e+00, <2 x float> <float 1.000000e+00, float 1.000000e+00>)
  %450 = ptrtoint %"class.blink::DragImage"* %449 to i64
  %451 = icmp eq %"class.blink::StaticBitmapImage"* %447, null
  br i1 %451, label %464, label %452

452:                                              ; preds = %429
  %453 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %447, i64 0, i32 0, i32 1, i32 0
  %454 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %453, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = atomicrmw sub i32* %454, i32 1 acq_rel
  %456 = icmp eq i32 %455, 1
  br i1 %456, label %457, label %464

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %453, i64 -2
  %459 = bitcast %"class.base::RefCountedThreadSafe"* %458 to %"class.blink::Image"*
  %460 = bitcast %"class.base::RefCountedThreadSafe"* %458 to void (%"class.blink::Image"*)***
  %461 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %460, align 8
  %462 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %461, i64 1
  %463 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %462, align 8
  call void %463(%"class.blink::Image"* nonnull %459) #12
  br label %464

464:                                              ; preds = %429, %452, %457
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %396) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %301) #12
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %289) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %283) #12
  %465 = bitcast %"class.blink::CanvasResourceProvider"* %275 to void (%"class.blink::CanvasResourceProvider"*)***
  %466 = load void (%"class.blink::CanvasResourceProvider"*)**, void (%"class.blink::CanvasResourceProvider"*)*** %465, align 8
  %467 = getelementptr inbounds void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %466, i64 1
  %468 = load void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %467, align 8
  call void %468(%"class.blink::CanvasResourceProvider"* nonnull %275) #12
  br label %469

469:                                              ; preds = %260, %464
  %470 = phi i64 [ %450, %464 ], [ 0, %260 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %191) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %154) #12
  %471 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %472 = icmp eq %"class.WTF::StringImpl"* %471, null
  br i1 %472, label %486, label %473

473:                                              ; preds = %469
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = load atomic i32, i32* %474 monotonic, align 4
  %476 = and i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 0
  %479 = load i32, i32* %478, align 4
  br i1 %477, label %480, label %482

480:                                              ; preds = %473
  %481 = add i32 %479, -1
  store i32 %481, i32* %478, align 4
  br label %482

482:                                              ; preds = %480, %473
  %483 = phi i32 [ %481, %480 ], [ %479, %473 ]
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %486

485:                                              ; preds = %482
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %471) #12
  br label %486

486:                                              ; preds = %469, %482, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #12
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  %503 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %504 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %503, i64 0, i32 2
  %505 = load i32, i32* %504, align 4
  %506 = add nsw i32 %505, -1
  store i32 %506, i32* %504, align 4
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %509

508:                                              ; preds = %502
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %503, i32 0) #12
  br label %509

509:                                              ; preds = %508, %502, %71
  %510 = phi i64 [ 0, %71 ], [ %470, %502 ], [ %470, %508 ]
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %51) #12
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %29) #12
  %511 = inttoptr i64 %510 to %"class.blink::DragImage"*
  ret %"class.blink::DragImage"* %511
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #3

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet"*, %"class.blink::FloatRect"*) local_unnamed_addr #3

declare %"class.blink::CanvasResourceProvider"* @_ZN5blink22CanvasResourceProvider20CreateBitmapProviderERKNS_7IntSizeE15SkFilterQualityRKNS_20CanvasResourceParamsENS0_16ShouldInitializeE(%"class.blink::IntSize"* dereferenceable(8), i32, %"class.blink::CanvasResourceParams"* dereferenceable(12), i32) local_unnamed_addr #3

declare void @_ZN5blink20CanvasResourceParamsC1Ev(%"class.blink::CanvasResourceParams"*) unnamed_addr #3

declare %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

declare void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink15StringTruncator14CenterTruncateERKN3WTF6StringEfRKNS_4FontE(%"class.WTF::String"* dereferenceable(8), float, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #3

declare void @_ZNK5blink4Font8DrawTextEPN2cc11PaintCanvasERKNS_16TextRunPaintInfoERKNS_10FloatPointEfRKNS1_10PaintFlagsENS0_8DrawTypeE(%"class.blink::Font"*, %"class.cc::PaintCanvas"*, %"struct.blink::TextRunPaintInfo"* dereferenceable(16), %"class.blink::FloatPoint"* dereferenceable(8), float, %"class.cc::PaintFlags"* dereferenceable(72), i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink15StringTruncator13RightTruncateERKN3WTF6StringEfRKNS_4FontE(%"class.WTF::String"* dereferenceable(8), float, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #3

declare void @_ZN5blink25TextRunWithDirectionalityERKN3WTF6StringEPb(%"class.blink::TextRun"* sret, %"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

declare zeroext i1 @_ZNK5blink4Font12DrawBidiTextEPN2cc11PaintCanvasERKNS_16TextRunPaintInfoERKNS_10FloatPointENS0_24CustomFontNotReadyActionEfRKNS1_10PaintFlagsENS0_8DrawTypeE(%"class.blink::Font"*, %"class.cc::PaintCanvas"*, %"struct.blink::TextRunPaintInfo"* dereferenceable(16), %"class.blink::FloatPoint"* dereferenceable(8), i32, float, %"class.cc::PaintFlags"* dereferenceable(72), i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DragImageC2ERK8SkBitmapfNS_20InterpolationQualityE(%"class.blink::DragImage"*, %class.SkBitmap* dereferenceable(56), float, i32) unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %5, %class.SkBitmap* dereferenceable(56) %1) #12
  %6 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 1
  store float %2, float* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 2
  store i32 %3, i32* %7, align 4
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DragImageD2Ev(%"class.blink::DragImage"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DragImage5ScaleEff(%"class.blink::DragImage"*, float, float) local_unnamed_addr #6 align 2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %7, i32 3, i32 5
  %9 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 0, i32 1, i32 2, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sitofp i32 %11 to float
  %13 = fmul float %12, %1
  %14 = fptosi float %13 to i32
  %15 = getelementptr inbounds %"class.blink::DragImage", %"class.blink::DragImage"* %0, i64 0, i32 0, i32 1, i32 2, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = fmul float %17, %2
  %19 = fptosi float %18 to i32
  %20 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #12
  call void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* nonnull sret %4, %class.SkBitmap* dereferenceable(56) %9, i32 %8, i32 %14, i32 %19, %"class.SkBitmap::Allocator"* null) #12
  %21 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %9, %class.SkBitmap* nonnull dereferenceable(56) %4) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #12
  ret void
}

declare void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* sret, %class.SkBitmap* dereferenceable(56), i32, i32, i32, %"class.SkBitmap::Allocator"*) local_unnamed_addr #3

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #3

declare void @_ZN5blink4FontC1ERKNS_15FontDescriptionE(%"class.blink::Font"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.343", %"class.base::RefCounted.343"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #12
  %17 = getelementptr inbounds %"class.base::RefCounted.343", %"class.base::RefCounted.343"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.343", %"class.base::RefCounted.343"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.343"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.343"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #12
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #12
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.330", %"class.base::RefCounted.330"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #12
  %62 = getelementptr inbounds %"class.base::RefCounted.330", %"class.base::RefCounted.330"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.330", %"class.base::RefCounted.330"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.330"* %66 to %"class.blink::FontTagValuePair.326"**
  %68 = load %"class.blink::FontTagValuePair.326"*, %"class.blink::FontTagValuePair.326"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.326"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.326"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !11

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.330", %"class.base::RefCounted.330"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #12
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.330"* %66 to i8*
  tail call void @free(i8* %78) #12
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.320", %"class.base::RefCounted.320"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #12
  %86 = getelementptr inbounds %"class.base::RefCounted.320", %"class.base::RefCounted.320"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.320", %"class.base::RefCounted.320"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.320"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !11

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.320", %"class.base::RefCounted.320"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !9

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #12
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.320"* %90 to i8*
  tail call void @free(i8* %102) #12
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.346"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #12
  %21 = bitcast %"class.base::RefCounted.346"* %19 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %27 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.346"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #12
  %33 = bitcast %"class.base::RefCounted.346"* %31 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.346"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #12
  %46 = bitcast %"class.base::RefCounted.346"* %44 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.346"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #12
  %21 = bitcast %"class.base::RefCounted.346"* %19 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %27 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.346"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #12
  %33 = bitcast %"class.base::RefCounted.346"* %31 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.346", %"class.base::RefCounted.346"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.346"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #12
  %46 = bitcast %"class.base::RefCounted.346"* %44 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #3

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #3

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE: argument 0"}
!5 = distinct !{!5, !"_ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE: argument 0"}
!8 = distinct !{!8, !"_ZN5blinkL19DeriveDragLabelFontEiNS_18FontSelectionValueERKNS_15FontDescriptionE"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{i8 0, i8 2}
!11 = !{!"branch_weights", i32 2000, i32 1}
