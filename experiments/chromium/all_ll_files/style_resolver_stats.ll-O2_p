; ModuleID = '../../third_party/blink/renderer/core/css/resolver/style_resolver_stats.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/style_resolver_stats.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.0" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::trace_event::TracedValue"* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@.str = private unnamed_addr constant [21 x i8] c"matchedPropertyApply\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"matchedPropertyCacheHit\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"matchedPropertyCacheInheritedHit\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"matchedPropertyCacheAdded\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"rulesRejected\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"rulesFastRejected\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"rulesMatched\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"stylesChanged\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"stylesUnchanged\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"stylesAnimated\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"elementsStyled\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"pseudoElementsStyled\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"baseStylesUsed\00", align 1
@.str.13 = private unnamed_addr constant [37 x i8] c"independentInheritedStylesPropagated\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"customPropertiesApplied\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18StyleResolverStats5ResetEv(%"class.blink::StyleResolverStats"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::StyleResolverStats"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 60, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TracedValue"* @_ZNK5blink18StyleResolverStats13ToTracedValueEv(%"class.blink::StyleResolverStats"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #5
  %3 = bitcast i8* %2 to %"class.blink::TracedValue"*
  tail call void @_ZN5blink11TracedValueC1Ev(%"class.blink::TracedValue"* nonnull %3) #6
  %4 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i32 %5) #6
  %6 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 %7) #6
  %8 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 %9) #6
  %10 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i32 %11) #6
  %12 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i32 %13) #6
  %14 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 %15) #6
  %16 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i32 %17) #6
  %18 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i32 %19) #6
  %20 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 %21) #6
  %22 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 9
  %23 = load i32, i32* %22, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i32 %23) #6
  %24 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 10
  %25 = load i32, i32* %24, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i32 %25) #6
  %26 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 11
  %27 = load i32, i32* %26, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 %27) #6
  %28 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 12
  %29 = load i32, i32* %28, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i32 %29) #6
  %30 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 13
  %31 = load i32, i32* %30, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i64 0, i64 0), i32 %31) #6
  %32 = getelementptr inbounds %"class.blink::StyleResolverStats", %"class.blink::StyleResolverStats"* %0, i64 0, i32 14
  %33 = load i32, i32* %32, align 4
  tail call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i32 %33) #6
  ret %"class.blink::TracedValue"* %3
}

declare void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN5blink11TracedValueC1Ev(%"class.blink::TracedValue"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
