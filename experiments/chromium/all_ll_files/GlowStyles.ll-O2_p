; ModuleID = '../../third_party/skia/modules/skottie/src/effects/GlowStyles.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/GlowStyles.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkColorMatrix = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [20 x float] }
%struct.SkRect = type { float, float, float, float }
%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.57 = type { %"class.sksg::ImageFilter"* }
%"class.sksg::ImageFilter" = type { %"class.sksg::Node.base", %"class.std::__1::unique_ptr.49", %class.sk_sp.56 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::vector.52"* }
%"class.std::__1::vector.52" = type opaque
%class.sk_sp.56 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.sksg::ExternalImageFilter" = type { %"class.sksg::ImageFilter", %class.sk_sp.56 }
%"class.skottie::VectorValue" = type { %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { float*, float*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { float* }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::internal::(anonymous namespace)::GlowAdapter" = type { %"class.skottie::internal::DiscardableAdapterBase", i32, %"class.skottie::VectorValue", float, float, float, float }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.48 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.48 = type { %"class.sksg::ExternalImageFilter"* }
%class.sk_sp.66 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_111GlowAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::GlowAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111GlowAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::GlowAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111GlowAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::GlowAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111GlowAdapter6onSyncEv to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"sr\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"ch\00", align 1
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8
@.ref.tmp = private constant %class.SkColorMatrix { %"struct.std::__1::array" { [20 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, float 1.000000e+00] } }, align 4
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder20attachOuterGlowStyleERKN6skjson11ObjectValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ObjectValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.32, align 8
  %6 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %7 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %6, align 8
  %8 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %9 = bitcast %class.sk_sp.32* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %8, align 8
  %11 = bitcast %class.sk_sp.32* %5 to i64*
  store i64 %10, i64* %11, align 8
  call fastcc void @_ZN7skottie8internal12_GLOBAL__N_116make_glow_effectERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg10RenderNodeEENS1_11GlowAdapter4TypeE(%class.sk_sp.32* sret %0, %"class.skjson::ObjectValue"* dereferenceable(8) %2, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %7, %class.sk_sp.32* nonnull %5, i32 0)
  %12 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %5, i64 0, i32 0
  %13 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %12, align 8
  %14 = icmp eq %"class.sksg::RenderNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::RenderNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::RenderNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %4, %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7skottie8internal12_GLOBAL__N_116make_glow_effectERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg10RenderNodeEENS1_11GlowAdapter4TypeE(%class.sk_sp.32* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %class.sk_sp.32* nocapture, i32) unnamed_addr #0 {
  %6 = alloca %class.sk_sp.6, align 8
  %7 = alloca %class.sk_sp.32, align 8
  %8 = alloca %class.sk_sp.57, align 8
  %9 = tail call i8* @_Znwm(i64 104) #13, !noalias !2
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4, !noalias !2
  %12 = bitcast i8* %9 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false) #12, !noalias !2
  %14 = getelementptr inbounds i8, i8* %9, i64 48
  %15 = tail call i8* @_Znwm(i64 72) #13, !noalias !7
  %16 = bitcast i8* %15 to %"class.sksg::ExternalImageFilter"*
  tail call void @_ZN4sksg19ExternalImageFilterC1Ev(%"class.sksg::ExternalImageFilter"* nonnull %16) #12, !noalias !7
  %17 = bitcast i8* %14 to i8**
  store i8* %15, i8** %17, align 8, !alias.scope !10, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111GlowAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !noalias !2
  %18 = getelementptr inbounds i8, i8* %9, i64 56
  %19 = bitcast i8* %18 to i32*
  store i32 %4, i32* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %9, i64 64
  %21 = bitcast i8* %20 to %"class.skottie::VectorValue"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #12, !noalias !2
  %22 = getelementptr inbounds i8, i8* %9, i64 88
  %23 = bitcast i8* %22 to float*
  %24 = getelementptr inbounds i8, i8* %9, i64 92
  %25 = bitcast i8* %24 to float*
  %26 = getelementptr inbounds i8, i8* %9, i64 96
  %27 = bitcast i8* %26 to float*
  %28 = getelementptr inbounds i8, i8* %9, i64 100
  %29 = bitcast i8* %28 to float*
  %30 = bitcast i8* %22 to <4 x float>*
  store <4 x float> <float 1.000000e+02, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %30, align 8, !noalias !2
  %31 = bitcast i8* %9 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %32 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #12, !noalias !2
  %33 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %32, i64 0, i32 0, i64 0
  %34 = load i8, i8* %33, align 8, !noalias !2
  %35 = and i8 %34, 7
  %36 = icmp eq i8 %35, 7
  %37 = bitcast %"class.skjson::Value"* %32 to %"class.skjson::ObjectValue"*
  %38 = select i1 %36, %"class.skjson::ObjectValue"* %37, %"class.skjson::ObjectValue"* null
  %39 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %31, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %38, %"class.skottie::VectorValue"* %21) #12, !noalias !2
  %40 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #12, !noalias !2
  %41 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %40, i64 0, i32 0, i64 0
  %42 = load i8, i8* %41, align 8, !noalias !2
  %43 = and i8 %42, 7
  %44 = icmp eq i8 %43, 7
  %45 = bitcast %"class.skjson::Value"* %40 to %"class.skjson::ObjectValue"*
  %46 = select i1 %44, %"class.skjson::ObjectValue"* %45, %"class.skjson::ObjectValue"* null
  %47 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %31, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %46, float* %23) #12, !noalias !2
  %48 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #12, !noalias !2
  %49 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %48, i64 0, i32 0, i64 0
  %50 = load i8, i8* %49, align 8, !noalias !2
  %51 = and i8 %50, 7
  %52 = icmp eq i8 %51, 7
  %53 = bitcast %"class.skjson::Value"* %48 to %"class.skjson::ObjectValue"*
  %54 = select i1 %52, %"class.skjson::ObjectValue"* %53, %"class.skjson::ObjectValue"* null
  %55 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %31, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %54, float* %25) #12, !noalias !2
  %56 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #12, !noalias !2
  %57 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %56, i64 0, i32 0, i64 0
  %58 = load i8, i8* %57, align 8, !noalias !2
  %59 = and i8 %58, 7
  %60 = icmp eq i8 %59, 7
  %61 = bitcast %"class.skjson::Value"* %56 to %"class.skjson::ObjectValue"*
  %62 = select i1 %60, %"class.skjson::ObjectValue"* %61, %"class.skjson::ObjectValue"* null
  %63 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %31, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %62, float* %29) #12, !noalias !2
  %64 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #12, !noalias !2
  %65 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %64, i64 0, i32 0, i64 0
  %66 = load i8, i8* %65, align 8, !noalias !2
  %67 = and i8 %66, 7
  %68 = icmp eq i8 %67, 7
  %69 = bitcast %"class.skjson::Value"* %64 to %"class.skjson::ObjectValue"*
  %70 = select i1 %68, %"class.skjson::ObjectValue"* %69, %"class.skjson::ObjectValue"* null
  %71 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %31, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %70, float* %27) #12, !noalias !2
  %72 = ptrtoint i8* %9 to i64
  tail call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %31) #12, !noalias !2
  %73 = bitcast i8* %14 to %"class.sksg::ExternalImageFilter"**
  %74 = load %"class.sksg::ExternalImageFilter"*, %"class.sksg::ExternalImageFilter"** %73, align 8, !noalias !11
  %75 = icmp eq %"class.sksg::ExternalImageFilter"* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %5
  %77 = getelementptr inbounds %"class.sksg::ExternalImageFilter", %"class.sksg::ExternalImageFilter"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 1 monotonic
  br label %79

79:                                               ; preds = %76, %5
  %80 = bitcast i8* %13 to %class.sk_sp.6**
  %81 = load %class.sk_sp.6*, %class.sk_sp.6** %80, align 8, !noalias !11
  %82 = getelementptr inbounds i8, i8* %9, i64 24
  %83 = bitcast i8* %82 to %class.sk_sp.6**
  %84 = load %class.sk_sp.6*, %class.sk_sp.6** %83, align 8, !noalias !11
  %85 = icmp eq %class.sk_sp.6* %81, %84
  br i1 %85, label %118, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %2, i64 0, i32 11
  %88 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8, !noalias !11
  %89 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12, !noalias !11
  %90 = bitcast %class.sk_sp.6* %6 to i64*
  store i64 %72, i64* %90, align 8, !noalias !11
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 1
  %92 = load %class.sk_sp.6*, %class.sk_sp.6** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = load %class.sk_sp.6*, %class.sk_sp.6** %93, align 8
  %95 = icmp ult %class.sk_sp.6* %92, %94
  br i1 %95, label %96, label %102

96:                                               ; preds = %86
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %97, align 8, !noalias !11
  %98 = bitcast %class.sk_sp.6* %92 to i64*
  store i64 %72, i64* %98, align 8
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 1
  %100 = ptrtoint %class.sk_sp.6* %99 to i64
  %101 = bitcast %class.sk_sp.6** %91 to i64*
  store i64 %100, i64* %101, align 8
  br label %103

102:                                              ; preds = %86
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %88, %class.sk_sp.6* nonnull dereferenceable(8) %6) #12
  br label %103

103:                                              ; preds = %102, %96
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %105 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %104, align 8, !noalias !11
  %106 = icmp eq %"class.skottie::internal::Animator"* %105, null
  br i1 %106, label %117, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %105, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 -1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %117

111:                                              ; preds = %107
  %112 = bitcast %"class.skottie::internal::Animator"* %105 to %class.SkRefCntBase*
  %113 = bitcast %"class.skottie::internal::Animator"* %105 to void (%class.SkRefCntBase*)***
  %114 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %113, align 8
  %115 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, i64 2
  %116 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %115, align 8
  call void %116(%class.SkRefCntBase* nonnull %112) #12
  br label %117

117:                                              ; preds = %111, %107, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12, !noalias !11
  br label %133

118:                                              ; preds = %79
  %119 = bitcast i8* %9 to %"class.skottie::internal::Animator"*
  %120 = bitcast i8* %9 to i1 (%"class.skottie::internal::Animator"*, float)***
  %121 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %120, align 8, !noalias !11
  %122 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %121, i64 3
  %123 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %122, align 8
  %124 = tail call zeroext i1 %123(%"class.skottie::internal::Animator"* nonnull %119, float 0.000000e+00) #12
  %125 = atomicrmw add i32* %11, i32 -1 acq_rel, !noalias !11
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %118
  %128 = bitcast i8* %9 to %class.SkRefCntBase*
  %129 = bitcast i8* %9 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8, !noalias !11
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  tail call void %132(%class.SkRefCntBase* nonnull %128) #12
  br label %133

133:                                              ; preds = %117, %118, %127
  %134 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %135 = bitcast %class.sk_sp.32* %3 to i64*
  %136 = load i64, i64* %135, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %134, align 8
  %137 = bitcast %class.sk_sp.32* %7 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %8, i64 0, i32 0
  %139 = getelementptr inbounds %"class.sksg::ExternalImageFilter", %"class.sksg::ExternalImageFilter"* %74, i64 0, i32 0
  store %"class.sksg::ImageFilter"* %139, %"class.sksg::ImageFilter"** %138, align 8
  call void @_ZN4sksg17ImageFilterEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_11ImageFilterEE(%class.sk_sp.32* sret %0, %class.sk_sp.32* nonnull %7, %class.sk_sp.57* nonnull %8) #12
  %140 = load %"class.sksg::ImageFilter"*, %"class.sksg::ImageFilter"** %138, align 8
  %141 = icmp eq %"class.sksg::ImageFilter"* %140, null
  br i1 %141, label %152, label %142

142:                                              ; preds = %133
  %143 = getelementptr inbounds %"class.sksg::ImageFilter", %"class.sksg::ImageFilter"* %140, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 -1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %152

146:                                              ; preds = %142
  %147 = bitcast %"class.sksg::ImageFilter"* %140 to %class.SkRefCntBase*
  %148 = bitcast %"class.sksg::ImageFilter"* %140 to void (%class.SkRefCntBase*)***
  %149 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, i64 2
  %151 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, align 8
  call void %151(%class.SkRefCntBase* nonnull %147) #12
  br label %152

152:                                              ; preds = %133, %142, %146
  %153 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %7, i64 0, i32 0
  %154 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %153, align 8
  %155 = icmp eq %"class.sksg::RenderNode"* %154, null
  br i1 %155, label %166, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %154, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw add i32* %157, i32 -1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  %161 = bitcast %"class.sksg::RenderNode"* %154 to %class.SkRefCntBase*
  %162 = bitcast %"class.sksg::RenderNode"* %154 to void (%class.SkRefCntBase*)***
  %163 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %162, align 8
  %164 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, i64 2
  %165 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, align 8
  call void %165(%class.SkRefCntBase* nonnull %161) #12
  br label %166

166:                                              ; preds = %160, %156, %152
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder20attachInnerGlowStyleERKN6skjson11ObjectValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ObjectValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.32, align 8
  %6 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %7 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %6, align 8
  %8 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %9 = bitcast %class.sk_sp.32* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %8, align 8
  %11 = bitcast %class.sk_sp.32* %5 to i64*
  store i64 %10, i64* %11, align 8
  call fastcc void @_ZN7skottie8internal12_GLOBAL__N_116make_glow_effectERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg10RenderNodeEENS1_11GlowAdapter4TypeE(%class.sk_sp.32* sret %0, %"class.skjson::ObjectValue"* dereferenceable(8) %2, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %7, %class.sk_sp.32* nonnull %5, i32 1)
  %12 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %5, i64 0, i32 0
  %13 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %12, align 8
  %14 = icmp eq %"class.sksg::RenderNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::RenderNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::RenderNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %4, %15, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4sksg17ImageFilterEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_11ImageFilterEE(%class.sk_sp.32* sret, %class.sk_sp.32*, %class.sk_sp.57*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111GlowAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::GlowAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111GlowAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::ExternalImageFilter"*, %"class.sksg::ExternalImageFilter"** %12, align 8
  %14 = icmp eq %"class.sksg::ExternalImageFilter"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::ExternalImageFilter", %"class.sksg::ExternalImageFilter"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::ExternalImageFilter"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::ExternalImageFilter"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #12
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %25, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111GlowAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::GlowAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111GlowAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::ExternalImageFilter"*, %"class.sksg::ExternalImageFilter"** %12, align 8
  %14 = icmp eq %"class.sksg::ExternalImageFilter"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::ExternalImageFilter", %"class.sksg::ExternalImageFilter"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::ExternalImageFilter"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::ExternalImageFilter"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #12
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %25, %56
  %59 = bitcast %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %59) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111GlowAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::GlowAdapter"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.56, align 8
  %3 = alloca [2 x %class.sk_sp.56], align 16
  %4 = alloca %class.SkColorMatrix, align 4
  %5 = alloca %class.SkColorMatrix, align 4
  %6 = alloca %class.sk_sp.56, align 8
  %7 = alloca %class.sk_sp.66, align 8
  %8 = alloca %class.sk_sp.56, align 8
  %9 = alloca %"struct.SkImageFilters::CropRect", align 4
  %10 = alloca %class.sk_sp.56, align 8
  %11 = alloca %"struct.SkImageFilters::CropRect", align 4
  %12 = alloca %class.SkColorMatrix, align 4
  %13 = alloca %class.sk_sp.56, align 8
  %14 = alloca %class.sk_sp.66, align 8
  %15 = alloca %class.sk_sp.56, align 8
  %16 = alloca %"struct.SkImageFilters::CropRect", align 4
  %17 = alloca %class.sk_sp.56, align 8
  %18 = alloca %class.sk_sp.66, align 8
  %19 = alloca %class.sk_sp.56, align 8
  %20 = alloca %"struct.SkImageFilters::CropRect", align 4
  %21 = alloca %class.sk_sp.56, align 8
  %22 = alloca %class.sk_sp.56, align 8
  %23 = alloca %class.sk_sp.56, align 8
  %24 = alloca %"struct.SkImageFilters::CropRect", align 4
  %25 = alloca %class.sk_sp.56, align 8
  %26 = alloca %"struct.SkImageFilters::CropRect", align 4
  %27 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 4
  %28 = load float, float* %27, align 4
  %29 = fmul float %28, 0x3FD3333340000000
  %30 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 3
  %31 = load float, float* %30, align 8
  %32 = fdiv float %31, 1.000000e+02
  %33 = fcmp ogt float %32, 1.000000e+00
  %34 = select i1 %33, float 1.000000e+00, float %32
  %35 = fcmp ogt float %34, 0.000000e+00
  %36 = select i1 %35, float %34, float 0.000000e+00
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 5
  %38 = load float, float* %37, align 8
  %39 = fdiv float %38, 1.000000e+02
  %40 = fcmp ogt float %39, 1.000000e+00
  %41 = select i1 %40, float 1.000000e+00, float %39
  %42 = fcmp ogt float %41, 0.000000e+00
  %43 = select i1 %42, float %41, float 0.000000e+00
  %44 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 2
  %45 = tail call { <2 x float>, <2 x float> } @_ZNK7skottie11VectorValuecv8SkRGBA4fIL11SkAlphaType3EEEv(%"class.skottie::VectorValue"* %44) #12
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  %48 = bitcast %class.SkColorMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %48) #12
  %49 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %4, i64 0, i32 0, i32 0, i64 18
  %50 = bitcast %class.SkColorMatrix* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %50, i8 0, i64 72, i1 false)
  store float 1.000000e+00, float* %49, align 4
  %51 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %4, i64 0, i32 0, i32 0, i64 19
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %67

55:                                               ; preds = %1
  %56 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 6
  %57 = load float, float* %56, align 4
  %58 = fadd float %57, 5.000000e-01
  %59 = tail call float @llvm.floor.f32(float %58)
  %60 = fcmp olt float %59, 0x41DFFFFFE0000000
  %61 = select i1 %60, float %59, float 0x41DFFFFFE0000000
  %62 = fcmp ogt float %61, 0xC1DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0xC1DFFFFFE0000000
  %64 = fptosi float %63 to i32
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %67

66:                                               ; preds = %55
  call void @_ZN13SkColorMatrix9setConcatERKS_S1_(%class.SkColorMatrix* nonnull %4, %class.SkColorMatrix* nonnull dereferenceable(80) %4, %class.SkColorMatrix* nonnull dereferenceable(80) @.ref.tmp) #12
  br label %67

67:                                               ; preds = %66, %55, %1
  %68 = bitcast %class.SkColorMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %68) #12
  %69 = extractelement <2 x float> %46, i32 0
  %70 = extractelement <2 x float> %46, i32 1
  %71 = extractelement <2 x float> %47, i32 0
  %72 = extractelement <2 x float> %47, i32 1
  %73 = fmul float %72, %36
  %74 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 4
  %75 = bitcast %class.SkColorMatrix* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %75, i8 0, i64 16, i1 false)
  store float %69, float* %74, align 4
  %76 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 5
  %77 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 9
  %78 = bitcast float* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 16, i1 false)
  store float %70, float* %77, align 4
  %79 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 10
  %80 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 14
  %81 = bitcast float* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 16, i1 false)
  store float %71, float* %80, align 4
  %82 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 15
  store float 0.000000e+00, float* %82, align 4
  %83 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 16
  store float 0.000000e+00, float* %83, align 4
  %84 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 17
  store float 0.000000e+00, float* %84, align 4
  %85 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 18
  store float %73, float* %85, align 4
  %86 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %5, i64 0, i32 0, i32 0, i64 19
  store float 0.000000e+00, float* %86, align 4
  %87 = fcmp ogt float %29, 0.000000e+00
  %88 = and i1 %87, %42
  br i1 %88, label %90, label %89

89:                                               ; preds = %67
  call void @_ZN13SkColorMatrix9setConcatERKS_S1_(%class.SkColorMatrix* nonnull %4, %class.SkColorMatrix* nonnull dereferenceable(80) %5, %class.SkColorMatrix* nonnull dereferenceable(80) %4) #12
  br label %90

90:                                               ; preds = %89, %67
  %91 = bitcast %class.sk_sp.56* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  %92 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %6, i64 0, i32 0
  store %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*), %class.SkImageFilter** %92, align 8
  call void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.66* nonnull sret %7, %class.SkColorMatrix* nonnull dereferenceable(80) %4) #12
  %93 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %8, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %93, align 8
  %94 = bitcast %"struct.SkImageFilters::CropRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %94, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #12
  call void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp.56* nonnull sret %6, %class.sk_sp.66* nonnull %7, %class.sk_sp.56* nonnull %8, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  %95 = load %class.SkImageFilter*, %class.SkImageFilter** %93, align 8
  %96 = icmp eq %class.SkImageFilter* %95, null
  br i1 %96, label %107, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %95, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = bitcast %class.SkImageFilter* %95 to %class.SkRefCntBase*
  %103 = bitcast %class.SkImageFilter* %95 to void (%class.SkRefCntBase*)***
  %104 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, i64 2
  %106 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, align 8
  call void %106(%class.SkRefCntBase* nonnull %102) #12
  br label %107

107:                                              ; preds = %90, %97, %101
  %108 = getelementptr inbounds %class.sk_sp.66, %class.sk_sp.66* %7, i64 0, i32 0
  %109 = load %class.SkColorFilter*, %class.SkColorFilter** %108, align 8
  %110 = icmp eq %class.SkColorFilter* %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %109, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = bitcast %class.SkColorFilter* %109 to %class.SkRefCntBase*
  %117 = bitcast %class.SkColorFilter* %109 to void (%class.SkRefCntBase*)***
  %118 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, i64 2
  %120 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, align 8
  call void %120(%class.SkRefCntBase* nonnull %116) #12
  br label %121

121:                                              ; preds = %107, %111, %115
  br i1 %87, label %122, label %312

122:                                              ; preds = %121
  %123 = bitcast %class.sk_sp.56* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #12
  %124 = bitcast %class.sk_sp.56* %6 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %92, align 8
  %126 = bitcast %"struct.SkImageFilters::CropRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %126, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #12
  %127 = bitcast %class.sk_sp.56* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127)
  %128 = bitcast %class.sk_sp.56* %2 to i64*
  store i64 %125, i64* %128, align 8, !noalias !12
  call void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp.56* nonnull sret %10, float %29, float %29, i32 3, %class.sk_sp.56* nonnull %2, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %11) #12
  %129 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %2, i64 0, i32 0
  %130 = load %class.SkImageFilter*, %class.SkImageFilter** %129, align 8, !noalias !12
  %131 = icmp eq %class.SkImageFilter* %130, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %122
  %133 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %130, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = bitcast %class.SkImageFilter* %130 to %class.SkRefCntBase*
  %138 = bitcast %class.SkImageFilter* %130 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8
  call void %141(%class.SkRefCntBase* nonnull %137) #12
  br label %142

142:                                              ; preds = %122, %132, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127)
  %143 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %10, i64 0, i32 0
  %144 = bitcast %class.sk_sp.56* %10 to i64*
  %145 = load i64, i64* %144, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %143, align 8
  %146 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8
  store i64 %145, i64* %124, align 8
  %147 = icmp eq %class.SkImageFilter* %146, null
  br i1 %147, label %171, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %146, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %158

152:                                              ; preds = %148
  %153 = bitcast %class.SkImageFilter* %146 to %class.SkRefCntBase*
  %154 = bitcast %class.SkImageFilter* %146 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8
  call void %157(%class.SkRefCntBase* nonnull %153) #12
  br label %158

158:                                              ; preds = %148, %152
  %159 = load %class.SkImageFilter*, %class.SkImageFilter** %143, align 8
  %160 = icmp eq %class.SkImageFilter* %159, null
  br i1 %160, label %171, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %159, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = atomicrmw add i32* %162, i32 -1 acq_rel
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %165, label %171

165:                                              ; preds = %161
  %166 = bitcast %class.SkImageFilter* %159 to %class.SkRefCntBase*
  %167 = bitcast %class.SkImageFilter* %159 to void (%class.SkRefCntBase*)***
  %168 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %167, align 8
  %169 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %168, i64 2
  %170 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %169, align 8
  call void %170(%class.SkRefCntBase* nonnull %166) #12
  br label %171

171:                                              ; preds = %142, %158, %161, %165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #12
  br i1 %88, label %172, label %312

172:                                              ; preds = %171
  %173 = call float @powf(float %43, float 0x3FC99999A0000000) #12
  %174 = fsub float 1.000000e+00, %173
  %175 = fdiv float 1.000000e+00, %174
  %176 = fcmp ogt float %175, 1.000000e+06
  %177 = select i1 %176, float 1.000000e+06, float %175
  %178 = bitcast %class.SkColorMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %178) #12
  %179 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 0
  store float 1.000000e+00, float* %179, align 4
  %180 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 1
  %181 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 6
  %182 = bitcast float* %180 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %182, i8 0, i64 20, i1 false)
  store float 1.000000e+00, float* %181, align 4
  %183 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 7
  %184 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 12
  %185 = bitcast float* %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %185, i8 0, i64 20, i1 false)
  store float 1.000000e+00, float* %184, align 4
  %186 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 13
  %187 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 18
  %188 = bitcast float* %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %188, i8 0, i64 20, i1 false)
  store float %177, float* %187, align 4
  %189 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %12, i64 0, i32 0, i32 0, i64 19
  store float 0.000000e+00, float* %189, align 4
  %190 = bitcast %class.sk_sp.56* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #12
  call void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.66* nonnull sret %14, %class.SkColorMatrix* nonnull dereferenceable(80) %12) #12
  %191 = load i64, i64* %124, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %92, align 8
  %192 = bitcast %class.sk_sp.56* %15 to i64*
  store i64 %191, i64* %192, align 8
  %193 = bitcast %"struct.SkImageFilters::CropRect"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %193, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #12
  call void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp.56* nonnull sret %13, %class.sk_sp.66* nonnull %14, %class.sk_sp.56* nonnull %15, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %16) #12
  %194 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %13, i64 0, i32 0
  %195 = bitcast %class.sk_sp.56* %13 to i64*
  %196 = load i64, i64* %195, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %194, align 8
  %197 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8
  store i64 %196, i64* %124, align 8
  %198 = icmp eq %class.SkImageFilter* %197, null
  br i1 %198, label %222, label %199

199:                                              ; preds = %172
  %200 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %197, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = atomicrmw add i32* %200, i32 -1 acq_rel
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %203, label %209

203:                                              ; preds = %199
  %204 = bitcast %class.SkImageFilter* %197 to %class.SkRefCntBase*
  %205 = bitcast %class.SkImageFilter* %197 to void (%class.SkRefCntBase*)***
  %206 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %205, align 8
  %207 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %206, i64 2
  %208 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %207, align 8
  call void %208(%class.SkRefCntBase* nonnull %204) #12
  br label %209

209:                                              ; preds = %199, %203
  %210 = load %class.SkImageFilter*, %class.SkImageFilter** %194, align 8
  %211 = icmp eq %class.SkImageFilter* %210, null
  br i1 %211, label %222, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %210, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = atomicrmw add i32* %213, i32 -1 acq_rel
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %222

216:                                              ; preds = %212
  %217 = bitcast %class.SkImageFilter* %210 to %class.SkRefCntBase*
  %218 = bitcast %class.SkImageFilter* %210 to void (%class.SkRefCntBase*)***
  %219 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %218, align 8
  %220 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %219, i64 2
  %221 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %220, align 8
  call void %221(%class.SkRefCntBase* nonnull %217) #12
  br label %222

222:                                              ; preds = %172, %209, %212, %216
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #12
  %223 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %15, i64 0, i32 0
  %224 = load %class.SkImageFilter*, %class.SkImageFilter** %223, align 8
  %225 = icmp eq %class.SkImageFilter* %224, null
  br i1 %225, label %236, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %224, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = atomicrmw add i32* %227, i32 -1 acq_rel
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %230, label %236

230:                                              ; preds = %226
  %231 = bitcast %class.SkImageFilter* %224 to %class.SkRefCntBase*
  %232 = bitcast %class.SkImageFilter* %224 to void (%class.SkRefCntBase*)***
  %233 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %232, align 8
  %234 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %233, i64 2
  %235 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %234, align 8
  call void %235(%class.SkRefCntBase* nonnull %231) #12
  br label %236

236:                                              ; preds = %222, %226, %230
  %237 = getelementptr inbounds %class.sk_sp.66, %class.sk_sp.66* %14, i64 0, i32 0
  %238 = load %class.SkColorFilter*, %class.SkColorFilter** %237, align 8
  %239 = icmp eq %class.SkColorFilter* %238, null
  br i1 %239, label %250, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %238, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = atomicrmw add i32* %241, i32 -1 acq_rel
  %243 = icmp eq i32 %242, 1
  br i1 %243, label %244, label %250

244:                                              ; preds = %240
  %245 = bitcast %class.SkColorFilter* %238 to %class.SkRefCntBase*
  %246 = bitcast %class.SkColorFilter* %238 to void (%class.SkRefCntBase*)***
  %247 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %246, align 8
  %248 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %247, i64 2
  %249 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %248, align 8
  call void %249(%class.SkRefCntBase* nonnull %245) #12
  br label %250

250:                                              ; preds = %236, %240, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #12
  %251 = bitcast %class.sk_sp.56* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #12
  call void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.66* nonnull sret %18, %class.SkColorMatrix* nonnull dereferenceable(80) %5) #12
  %252 = load i64, i64* %124, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %92, align 8
  %253 = bitcast %class.sk_sp.56* %19 to i64*
  store i64 %252, i64* %253, align 8
  %254 = bitcast %"struct.SkImageFilters::CropRect"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %254) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %254, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #12
  call void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp.56* nonnull sret %17, %class.sk_sp.66* nonnull %18, %class.sk_sp.56* nonnull %19, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %20) #12
  %255 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %17, i64 0, i32 0
  %256 = bitcast %class.sk_sp.56* %17 to i64*
  %257 = load i64, i64* %256, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %255, align 8
  %258 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8
  store i64 %257, i64* %124, align 8
  %259 = icmp eq %class.SkImageFilter* %258, null
  br i1 %259, label %283, label %260

260:                                              ; preds = %250
  %261 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %258, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = atomicrmw add i32* %261, i32 -1 acq_rel
  %263 = icmp eq i32 %262, 1
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = bitcast %class.SkImageFilter* %258 to %class.SkRefCntBase*
  %266 = bitcast %class.SkImageFilter* %258 to void (%class.SkRefCntBase*)***
  %267 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %266, align 8
  %268 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %267, i64 2
  %269 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %268, align 8
  call void %269(%class.SkRefCntBase* nonnull %265) #12
  br label %270

270:                                              ; preds = %260, %264
  %271 = load %class.SkImageFilter*, %class.SkImageFilter** %255, align 8
  %272 = icmp eq %class.SkImageFilter* %271, null
  br i1 %272, label %283, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %271, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = atomicrmw add i32* %274, i32 -1 acq_rel
  %276 = icmp eq i32 %275, 1
  br i1 %276, label %277, label %283

277:                                              ; preds = %273
  %278 = bitcast %class.SkImageFilter* %271 to %class.SkRefCntBase*
  %279 = bitcast %class.SkImageFilter* %271 to void (%class.SkRefCntBase*)***
  %280 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %279, align 8
  %281 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %280, i64 2
  %282 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %281, align 8
  call void %282(%class.SkRefCntBase* nonnull %278) #12
  br label %283

283:                                              ; preds = %250, %270, %273, %277
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %254) #12
  %284 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %19, i64 0, i32 0
  %285 = load %class.SkImageFilter*, %class.SkImageFilter** %284, align 8
  %286 = icmp eq %class.SkImageFilter* %285, null
  br i1 %286, label %297, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %285, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = atomicrmw add i32* %288, i32 -1 acq_rel
  %290 = icmp eq i32 %289, 1
  br i1 %290, label %291, label %297

291:                                              ; preds = %287
  %292 = bitcast %class.SkImageFilter* %285 to %class.SkRefCntBase*
  %293 = bitcast %class.SkImageFilter* %285 to void (%class.SkRefCntBase*)***
  %294 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %293, align 8
  %295 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %294, i64 2
  %296 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %295, align 8
  call void %296(%class.SkRefCntBase* nonnull %292) #12
  br label %297

297:                                              ; preds = %283, %287, %291
  %298 = getelementptr inbounds %class.sk_sp.66, %class.sk_sp.66* %18, i64 0, i32 0
  %299 = load %class.SkColorFilter*, %class.SkColorFilter** %298, align 8
  %300 = icmp eq %class.SkColorFilter* %299, null
  br i1 %300, label %311, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %299, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = atomicrmw add i32* %302, i32 -1 acq_rel
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %311

305:                                              ; preds = %301
  %306 = bitcast %class.SkColorFilter* %299 to %class.SkRefCntBase*
  %307 = bitcast %class.SkColorFilter* %299 to void (%class.SkRefCntBase*)***
  %308 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %307, align 8
  %309 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %308, i64 2
  %310 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %309, align 8
  call void %310(%class.SkRefCntBase* nonnull %306) #12
  br label %311

311:                                              ; preds = %297, %301, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %178) #12
  br label %312

312:                                              ; preds = %121, %311, %171
  %313 = load i32, i32* %52, align 8
  %314 = icmp eq i32 %313, 1
  br i1 %314, label %318, label %315

315:                                              ; preds = %312
  %316 = bitcast %class.sk_sp.56* %6 to i64*
  %317 = load i64, i64* %316, align 8
  br label %382

318:                                              ; preds = %312
  %319 = bitcast %class.sk_sp.56* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #12
  %320 = bitcast %class.sk_sp.56* %6 to i64*
  %321 = load i64, i64* %320, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %92, align 8
  %322 = bitcast %class.sk_sp.56* %22 to i64*
  store i64 %321, i64* %322, align 8
  %323 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %23, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %323, align 8
  %324 = bitcast %"struct.SkImageFilters::CropRect"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %324, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #12
  call void @_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp.56* nonnull sret %21, i32 6, %class.sk_sp.56* nonnull %22, %class.sk_sp.56* nonnull %23, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %24) #12
  %325 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %21, i64 0, i32 0
  %326 = bitcast %class.sk_sp.56* %21 to i64*
  %327 = load i64, i64* %326, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %325, align 8
  %328 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8
  store i64 %327, i64* %320, align 8
  %329 = icmp eq %class.SkImageFilter* %328, null
  br i1 %329, label %353, label %330

330:                                              ; preds = %318
  %331 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %328, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = atomicrmw add i32* %331, i32 -1 acq_rel
  %333 = icmp eq i32 %332, 1
  br i1 %333, label %334, label %340

334:                                              ; preds = %330
  %335 = bitcast %class.SkImageFilter* %328 to %class.SkRefCntBase*
  %336 = bitcast %class.SkImageFilter* %328 to void (%class.SkRefCntBase*)***
  %337 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %336, align 8
  %338 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %337, i64 2
  %339 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %338, align 8
  call void %339(%class.SkRefCntBase* nonnull %335) #12
  br label %340

340:                                              ; preds = %330, %334
  %341 = load %class.SkImageFilter*, %class.SkImageFilter** %325, align 8
  %342 = icmp eq %class.SkImageFilter* %341, null
  br i1 %342, label %353, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %341, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = atomicrmw add i32* %344, i32 -1 acq_rel
  %346 = icmp eq i32 %345, 1
  br i1 %346, label %347, label %353

347:                                              ; preds = %343
  %348 = bitcast %class.SkImageFilter* %341 to %class.SkRefCntBase*
  %349 = bitcast %class.SkImageFilter* %341 to void (%class.SkRefCntBase*)***
  %350 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %349, align 8
  %351 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %350, i64 2
  %352 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %351, align 8
  call void %352(%class.SkRefCntBase* nonnull %348) #12
  br label %353

353:                                              ; preds = %318, %340, %343, %347
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324) #12
  %354 = load %class.SkImageFilter*, %class.SkImageFilter** %323, align 8
  %355 = icmp eq %class.SkImageFilter* %354, null
  br i1 %355, label %366, label %356

356:                                              ; preds = %353
  %357 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %354, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = atomicrmw add i32* %357, i32 -1 acq_rel
  %359 = icmp eq i32 %358, 1
  br i1 %359, label %360, label %366

360:                                              ; preds = %356
  %361 = bitcast %class.SkImageFilter* %354 to %class.SkRefCntBase*
  %362 = bitcast %class.SkImageFilter* %354 to void (%class.SkRefCntBase*)***
  %363 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %362, align 8
  %364 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %363, i64 2
  %365 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %364, align 8
  call void %365(%class.SkRefCntBase* nonnull %361) #12
  br label %366

366:                                              ; preds = %353, %356, %360
  %367 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %22, i64 0, i32 0
  %368 = load %class.SkImageFilter*, %class.SkImageFilter** %367, align 8
  %369 = icmp eq %class.SkImageFilter* %368, null
  br i1 %369, label %380, label %370

370:                                              ; preds = %366
  %371 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %368, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = atomicrmw add i32* %371, i32 -1 acq_rel
  %373 = icmp eq i32 %372, 1
  br i1 %373, label %374, label %380

374:                                              ; preds = %370
  %375 = bitcast %class.SkImageFilter* %368 to %class.SkRefCntBase*
  %376 = bitcast %class.SkImageFilter* %368 to void (%class.SkRefCntBase*)***
  %377 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %376, align 8
  %378 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %377, i64 2
  %379 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %378, align 8
  call void %379(%class.SkRefCntBase* nonnull %375) #12
  br label %380

380:                                              ; preds = %366, %370, %374
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #12
  %381 = load i64, i64* %320, align 8
  store i64 0, i64* %320, align 8
  br label %382

382:                                              ; preds = %315, %380
  %383 = phi i64 [ 0, %380 ], [ %317, %315 ]
  %384 = phi i64 [ %381, %380 ], [ 0, %315 ]
  %385 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GlowAdapter", %"class.skottie::internal::(anonymous namespace)::GlowAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %386 = load %"class.sksg::ExternalImageFilter"*, %"class.sksg::ExternalImageFilter"** %385, align 8
  %387 = bitcast %class.sk_sp.56* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %387) #12
  store %class.SkImageFilter* null, %class.SkImageFilter** %92, align 8
  %388 = bitcast %"struct.SkImageFilters::CropRect"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %388) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %388, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #12
  %389 = bitcast [2 x %class.sk_sp.56]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %389) #12, !noalias !15
  %390 = getelementptr inbounds [2 x %class.sk_sp.56], [2 x %class.sk_sp.56]* %3, i64 0, i64 0
  %391 = bitcast [2 x %class.sk_sp.56]* %3 to i64*
  store i64 %383, i64* %391, align 16, !noalias !15
  %392 = getelementptr inbounds [2 x %class.sk_sp.56], [2 x %class.sk_sp.56]* %3, i64 0, i64 1
  %393 = bitcast %class.sk_sp.56* %392 to i64*
  store i64 %384, i64* %393, align 8, !noalias !15
  call void @_ZN14SkImageFilters5MergeEP5sk_spI13SkImageFilterEiRKNS_8CropRectE(%class.sk_sp.56* nonnull sret %25, %class.sk_sp.56* nonnull %390, i32 2, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %26) #12
  %394 = getelementptr inbounds [2 x %class.sk_sp.56], [2 x %class.sk_sp.56]* %3, i64 0, i64 1, i32 0
  %395 = load %class.SkImageFilter*, %class.SkImageFilter** %394, align 8, !noalias !15
  %396 = icmp eq %class.SkImageFilter* %395, null
  br i1 %396, label %407, label %397

397:                                              ; preds = %382
  %398 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %395, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = atomicrmw add i32* %398, i32 -1 acq_rel
  %400 = icmp eq i32 %399, 1
  br i1 %400, label %401, label %407

401:                                              ; preds = %397
  %402 = bitcast %class.SkImageFilter* %395 to %class.SkRefCntBase*
  %403 = bitcast %class.SkImageFilter* %395 to void (%class.SkRefCntBase*)***
  %404 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %403, align 8
  %405 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %404, i64 2
  %406 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %405, align 8
  call void %406(%class.SkRefCntBase* nonnull %402) #12
  br label %407

407:                                              ; preds = %401, %397, %382
  %408 = getelementptr inbounds [2 x %class.sk_sp.56], [2 x %class.sk_sp.56]* %3, i64 0, i64 0, i32 0
  %409 = load %class.SkImageFilter*, %class.SkImageFilter** %408, align 16, !noalias !15
  %410 = icmp eq %class.SkImageFilter* %409, null
  br i1 %410, label %421, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %409, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = atomicrmw add i32* %412, i32 -1 acq_rel
  %414 = icmp eq i32 %413, 1
  br i1 %414, label %415, label %421

415:                                              ; preds = %411
  %416 = bitcast %class.SkImageFilter* %409 to %class.SkRefCntBase*
  %417 = bitcast %class.SkImageFilter* %409 to void (%class.SkRefCntBase*)***
  %418 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %417, align 8
  %419 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %418, i64 2
  %420 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %419, align 8
  call void %420(%class.SkRefCntBase* nonnull %416) #12
  br label %421

421:                                              ; preds = %407, %411, %415
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %389) #12, !noalias !15
  %422 = getelementptr inbounds %"class.sksg::ExternalImageFilter", %"class.sksg::ExternalImageFilter"* %386, i64 0, i32 1
  %423 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %422, i64 0, i32 0
  %424 = load %class.SkImageFilter*, %class.SkImageFilter** %423, align 8
  %425 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %25, i64 0, i32 0
  %426 = load %class.SkImageFilter*, %class.SkImageFilter** %425, align 8
  %427 = icmp eq %class.SkImageFilter* %424, %426
  br i1 %427, label %445, label %428

428:                                              ; preds = %421
  %429 = ptrtoint %class.SkImageFilter* %426 to i64
  store %class.SkImageFilter* null, %class.SkImageFilter** %425, align 8
  %430 = bitcast %class.sk_sp.56* %422 to i64*
  store i64 %429, i64* %430, align 8
  %431 = icmp eq %class.SkImageFilter* %424, null
  br i1 %431, label %442, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %424, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = atomicrmw add i32* %433, i32 -1 acq_rel
  %435 = icmp eq i32 %434, 1
  br i1 %435, label %436, label %442

436:                                              ; preds = %432
  %437 = bitcast %class.SkImageFilter* %424 to %class.SkRefCntBase*
  %438 = bitcast %class.SkImageFilter* %424 to void (%class.SkRefCntBase*)***
  %439 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %438, align 8
  %440 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %439, i64 2
  %441 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %440, align 8
  call void %441(%class.SkRefCntBase* nonnull %437) #12
  br label %442

442:                                              ; preds = %436, %432, %428
  %443 = bitcast %"class.sksg::ExternalImageFilter"* %386 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %443, i1 zeroext true) #12
  %444 = load %class.SkImageFilter*, %class.SkImageFilter** %425, align 8
  br label %445

445:                                              ; preds = %421, %442
  %446 = phi %class.SkImageFilter* [ %424, %421 ], [ %444, %442 ]
  %447 = icmp eq %class.SkImageFilter* %446, null
  br i1 %447, label %458, label %448

448:                                              ; preds = %445
  %449 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %446, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = atomicrmw add i32* %449, i32 -1 acq_rel
  %451 = icmp eq i32 %450, 1
  br i1 %451, label %452, label %458

452:                                              ; preds = %448
  %453 = bitcast %class.SkImageFilter* %446 to %class.SkRefCntBase*
  %454 = bitcast %class.SkImageFilter* %446 to void (%class.SkRefCntBase*)***
  %455 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %454, align 8
  %456 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %455, i64 2
  %457 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %456, align 8
  call void %457(%class.SkRefCntBase* nonnull %453) #12
  br label %458

458:                                              ; preds = %452, %448, %445
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %388) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %387) #12
  %459 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8
  %460 = icmp eq %class.SkImageFilter* %459, null
  br i1 %460, label %471, label %461

461:                                              ; preds = %458
  %462 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %459, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = atomicrmw add i32* %462, i32 -1 acq_rel
  %464 = icmp eq i32 %463, 1
  br i1 %464, label %465, label %471

465:                                              ; preds = %461
  %466 = bitcast %class.SkImageFilter* %459 to %class.SkRefCntBase*
  %467 = bitcast %class.SkImageFilter* %459 to void (%class.SkRefCntBase*)***
  %468 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %467, align 8
  %469 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %468, i64 2
  %470 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %469, align 8
  call void %470(%class.SkRefCntBase* nonnull %466) #12
  br label %471

471:                                              ; preds = %458, %461, %465
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %68) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %48) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::ExternalImageFilter"*, %"class.sksg::ExternalImageFilter"** %3, align 8
  %5 = icmp eq %"class.sksg::ExternalImageFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::ExternalImageFilter", %"class.sksg::ExternalImageFilter"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::ExternalImageFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::ExternalImageFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN4sksg19ExternalImageFilterC1Ev(%"class.sksg::ExternalImageFilter"*) unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %"class.skottie::VectorValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK7skottie11VectorValuecv8SkRGBA4fIL11SkAlphaType3EEEv(%"class.skottie::VectorValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

declare void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp.56* sret, %class.sk_sp.66*, %class.sk_sp.56*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.66* sret, %class.SkColorMatrix* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp.56* sret, i32, %class.sk_sp.56*, %class.sk_sp.56*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN13SkColorMatrix9setConcatERKS_S1_(%class.SkColorMatrix*, %class.SkColorMatrix* dereferenceable(80), %class.SkColorMatrix* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp.56* sret, float, float, i32, %class.sk_sp.56*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #9

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN14SkImageFilters5MergeEP5sk_spI13SkImageFilterEiRKNS_8CropRectE(%class.sk_sp.56* sret, %class.sk_sp.56*, i32, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !18

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #12
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #13
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderERNS3_4TypeEEEE5sk_spIS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111GlowAdapterEN4sksg19ExternalImageFilterEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderERNS3_4TypeEEEE5sk_spIS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_111GlowAdapterEJRKN6skjson11ObjectValueERKS1_RNS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSG_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_111GlowAdapterEJRKN6skjson11ObjectValueERKS1_RNS4_4TypeEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSG_"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_ZN4sksg19ExternalImageFilter4MakeEv: argument 0"}
!9 = distinct !{!9, !"_ZN4sksg19ExternalImageFilter4MakeEv"}
!10 = !{!8}
!11 = !{!5}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN14SkImageFilters4BlurEff5sk_spI13SkImageFilterERKNS_8CropRectE: argument 0"}
!14 = distinct !{!14, !"_ZN14SkImageFilters4BlurEff5sk_spI13SkImageFilterERKNS_8CropRectE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN14SkImageFilters5MergeE5sk_spI13SkImageFilterES2_RKNS_8CropRectE: argument 0"}
!17 = distinct !{!17, !"_ZN14SkImageFilters5MergeE5sk_spI13SkImageFilterES2_RKNS_8CropRectE"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
