; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_fallback_list.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_fallback_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.242" }
%"struct.std::__1::atomic.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__atomic_base.244" }
%"struct.std::__1::__atomic_base.244" = type { %"struct.std::__1::__cxx_atomic_impl.245" }
%"struct.std::__1::__cxx_atomic_impl.245" = type { %"struct.std::__1::__cxx_atomic_base_impl.246" }
%"struct.std::__1::__cxx_atomic_base_impl.246" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.22", i32, [4 x i8], %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.160", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.201", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.140", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.118", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i64 }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { float }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.143", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.152" }
%"class.WTF::Vector.152" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.168" }
%"class.WTF::VectorBuffer.168" = type { %"class.WTF::VectorBufferBase.169" }
%"class.WTF::VectorBufferBase.169" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.182" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.206" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted", %"class.WTF::Vector", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [8 x i8] }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.0", [4 x i8] }>
%"class.WTF::RefCounted.0" = type { %"class.base::RefCounted.1" }
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.15, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.0" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.10, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.10 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.13, %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.15 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.16", [4 x i8] }>
%"class.WTF::RefCounted.16" = type { %"class.base::RefCounted.17" }
%"class.base::RefCounted.17" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"class.blink::FontFallbackMap" = type { %"class.blink::FontCacheClient", %"class.blink::FontSelectorClient", %"class.blink::Member", %"class.WTF::HashMap" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FontSelector"* }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.18" }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::FontFallbackMap"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::FontDescription", %class.scoped_refptr.296 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.248, %class.scoped_refptr.256, %class.scoped_refptr.266, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.272 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.247 }
%class.scoped_refptr.247 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.273", [4 x i8] }>
%"class.WTF::RefCounted.273" = type { %"class.base::RefCounted.274" }
%"class.base::RefCounted.274" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.248 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.254", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.249" }
%"class.WTF::Vector.249" = type { %"class.WTF::VectorBuffer.250" }
%"class.WTF::VectorBuffer.250" = type { %"class.WTF::VectorBufferBase.251" }
%"class.WTF::VectorBufferBase.251" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.254" = type { %"class.base::RefCounted.255" }
%"class.base::RefCounted.255" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.256 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.257", %"class.WTF::RefCounted.264", [4 x i8] }>
%"class.blink::FontSettings.257" = type { %"class.WTF::Vector.258" }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.blink::FontTagValuePair.261"*, i32, i32 }
%"class.blink::FontTagValuePair.261" = type { i32, float }
%"class.WTF::RefCounted.264" = type { %"class.base::RefCounted.265" }
%"class.base::RefCounted.265" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.266 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.267", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.269, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.267" = type { %"class.base::RefCounted.268" }
%"class.base::RefCounted.268" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.269 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.270", [4 x i8] }>
%"class.WTF::RefCounted.270" = type { %"class.base::RefCounted.271" }
%"class.base::RefCounted.271" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.272 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.296 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.211, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap.214", %"class.WTF::HashMap.219", %"class.blink::FontDataCache", %"class.blink::Persistent.239", float, [4 x i8] }>
%class.sk_sp.211 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.212" }
%"class.blink::PersistentBase.212" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr.213" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr.213" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.218" = type opaque
%"class.WTF::HashMap.219" = type { %"class.WTF::HashTable.220" }
%"class.WTF::HashTable.220" = type <{ %"struct.WTF::KeyValuePair.223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.223" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.224", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.224" = type { %"class.WTF::HashTable.225" }
%"class.WTF::HashTable.225" = type <{ %"struct.WTF::KeyValuePair.228"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.228" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.229", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.229" = type { %"class.WTF::HashTable.230" }
%"class.WTF::HashTable.230" = type <{ %"struct.WTF::KeyValuePair.233"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.233" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.234", i32, i32 }
%"class.WTF::Vector.234" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236" }
%"class.WTF::VectorBufferBase.236" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.239" = type { %"class.blink::PersistentBase.240" }
%"class.blink::PersistentBase.240" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.213" }
%"class.blink::SegmentedFontData" = type { %"class.blink::FontData.base", %"class.WTF::Vector.275" }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277", [8 x i8] }
%"class.WTF::VectorBufferBase.277" = type { %class.scoped_refptr.278*, i32, i32 }
%class.scoped_refptr.278 = type { %"class.blink::FontDataForRangeSet"* }
%"class.blink::FontDataForRangeSet" = type { i32 (...)**, %"class.WTF::RefCounted.279", %class.scoped_refptr.13, %class.scoped_refptr.281 }
%"class.WTF::RefCounted.279" = type { %"class.base::RefCounted.280" }
%"class.base::RefCounted.280" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.281 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.282", %"class.WTF::Vector.284" }
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"struct.blink::FallbackListCompositeKey" = type { %"class.WTF::Vector.291", i32, float, float, float, i32, i32 }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.blink::FontCacheKey"*, i32, i32 }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.256, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringHasher" = type { i32, i8, i16 }

$_ZN5blink24FallbackListCompositeKey3AddENS_12FontCacheKeyE = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm = comdat any

$_ZNK5blink22FontFaceCreationParams7GetHashEv = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8FontDataEEEEmm = comdat any

@_ZN5blink17font_family_names15kWebkitStandardE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontCacheKey]\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8FontDataEEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::FontData>]\00", align 1

@_ZN5blink16FontFallbackListC1ERNS_15FontFallbackMapE = hidden unnamed_addr alias void (%"class.blink::FontFallbackList"*, %"class.blink::FontFallbackMap"*), void (%"class.blink::FontFallbackList"*, %"class.blink::FontFallbackMap"*)* @_ZN5blink16FontFallbackListC2ERNS_15FontFallbackMapE
@_ZN5blink16FontFallbackListD1Ev = hidden unnamed_addr alias void (%"class.blink::FontFallbackList"*), void (%"class.blink::FontFallbackList"*)* @_ZN5blink16FontFallbackListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontFallbackListC2ERNS_15FontFallbackMapE(%"class.blink::FontFallbackList"*, %"class.blink::FontFallbackMap"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %6 = bitcast %"class.WTF::Vector"* %4 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 2
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %10, i64 0, i32 0, i32 0
  store %"class.blink::FontFallbackMap"* %1, %"class.blink::FontFallbackMap"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %13, align 8
  %14 = ptrtoint %"class.blink::FontFallbackMap"* %1 to i64
  switch i64 %14, label %15 [
    i64 0, label %41
    i64 -1, label %41
  ]

15:                                               ; preds = %2
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #9
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %31, label %34, !prof !2

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %32) #9
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  br label %34

34:                                               ; preds = %31, %22
  %35 = phi %"class.blink::PersistentNode"* [ %33, %31 ], [ %29, %22 ]
  %36 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"class.blink::PersistentNode"* %35 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %11, %"class.blink::PersistentBase"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %13, align 8
  br label %41

41:                                               ; preds = %2, %2, %34
  %42 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 4
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 5
  %44 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  %45 = tail call zeroext i16 @_ZN5blink9FontCache10GenerationEv(%"class.blink::FontCache"* %44) #9
  store i16 %45, i16* %43, align 4
  %46 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 6
  %47 = load i8, i8* %46, align 2
  %48 = and i8 %47, -64
  store i8 %48, i8* %46, align 2
  %49 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %49) #9
  ret void
}

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #1

declare zeroext i16 @_ZN5blink9FontCache10GenerationEv(%"class.blink::FontCache"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontFallbackListD2Ev(%"class.blink::FontFallbackList"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16FontFallbackList15ReleaseFontDataEv(%"class.blink::FontFallbackList"* %0)
  %2 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %2) #9
  %3 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 0
  br i1 %29, label %57, label %31, !prof !2

31:                                               ; preds = %25
  %32 = load %class.scoped_refptr*, %class.scoped_refptr** %30, align 8
  %33 = zext i32 %28 to i64
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 %33
  br label %35

35:                                               ; preds = %53, %31
  %36 = phi %class.scoped_refptr* [ %54, %53 ], [ %32, %31 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 0, i32 0
  %38 = load %"class.blink::FontData"*, %"class.blink::FontData"** %37, align 8
  %39 = icmp eq %"class.blink::FontData"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %38, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %41, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #9
  %43 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %41, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %41, i64 -2
  %48 = bitcast %"class.base::RefCounted.1"* %47 to %"class.blink::FontData"*
  %49 = bitcast %"class.base::RefCounted.1"* %47 to void (%"class.blink::FontData"*)***
  %50 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %50, i64 1
  %52 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %51, align 8
  tail call void %52(%"class.blink::FontData"* nonnull %48) #9
  br label %53

53:                                               ; preds = %46, %40, %35
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 1
  %55 = icmp eq %class.scoped_refptr* %54, %34
  br i1 %55, label %56, label %35

56:                                               ; preds = %53
  store i32 0, i32* %27, align 4
  br label %57

57:                                               ; preds = %56, %25
  %58 = load %class.scoped_refptr*, %class.scoped_refptr** %30, align 8
  %59 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %class.scoped_refptr*
  %61 = icmp eq %class.scoped_refptr* %58, %60
  br i1 %61, label %64, label %62, !prof !3

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"* %63, %class.scoped_refptr* %58) #9
  br label %64

64:                                               ; preds = %57, %62
  store %class.scoped_refptr* null, %class.scoped_refptr** %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontFallbackList15ReleaseFontDataEv(%"class.blink::FontFallbackList"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %25

7:                                                ; preds = %40, %1
  %8 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 7, i32 0
  %9 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  %10 = getelementptr inbounds %"class.base::internal::WeakReference", %"class.base::internal::WeakReference"* %2, i64 0, i32 0, i32 0
  %11 = bitcast %"class.base::internal::WeakReference"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %10, align 8
  %13 = bitcast %"class.base::internal::WeakPtrBase"* %8 to i64*
  %14 = getelementptr inbounds %"class.base::internal::WeakPtrBase", %"class.base::internal::WeakPtrBase"* %8, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.base::internal::WeakReference::Flag"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %15) #9
  %22 = bitcast %"class.base::internal::WeakReference::Flag"* %15 to i8*
  call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %7, %17, %21
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 7, i32 0, i32 1
  store i64 0, i64* %24, align 8
  ret void

25:                                               ; preds = %1, %40
  %26 = phi i32 [ %41, %40 ], [ 0, %1 ]
  %27 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %26) #9
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::FontData"*, %"class.blink::FontData"** %28, align 8
  %30 = bitcast %"class.blink::FontData"* %29 to i1 (%"class.blink::FontData"*)***
  %31 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %31, i64 3
  %33 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::FontData"* %29) #9
  br i1 %34, label %40, label %35

35:                                               ; preds = %25
  %36 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  %37 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %26) #9
  %38 = bitcast %class.scoped_refptr* %37 to %"class.blink::SimpleFontData"**
  %39 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %38, align 8
  tail call void @_ZN5blink9FontCache15ReleaseFontDataEPKNS_14SimpleFontDataE(%"class.blink::FontCache"* %36, %"class.blink::SimpleFontData"* %39) #9
  br label %40

40:                                               ; preds = %25, %35
  %41 = add nuw i32 %26, 1
  %42 = icmp eq i32 %41, %5
  br i1 %42, label %7, label %25
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %4, align 8
  ret %"class.blink::FontSelector"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5blink9FontCache15ReleaseFontDataEPKNS_14SimpleFontDataE(%"class.blink::FontCache"*, %"class.blink::SimpleFontData"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16FontFallbackList17ShouldSkipDrawingEv(%"class.blink::FontFallbackList"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 2
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %13

11:                                               ; preds = %13
  %12 = icmp eq i32 %23, %9
  br i1 %12, label %24, label %13

13:                                               ; preds = %6, %11
  %14 = phi i32 [ %23, %11 ], [ 0, %6 ]
  %15 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %14) #9
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 0, i32 0
  %17 = load %"class.blink::FontData"*, %"class.blink::FontData"** %16, align 8
  %18 = bitcast %"class.blink::FontData"* %17 to i1 (%"class.blink::FontData"*)***
  %19 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %19, i64 7
  %21 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::FontData"* %17) #9
  %23 = add nuw i32 %14, 1
  br i1 %22, label %24, label %11

24:                                               ; preds = %13, %11, %6, %1
  %25 = phi i1 [ false, %1 ], [ false, %6 ], [ false, %11 ], [ true, %13 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::FontData"* @_ZN5blink16FontFallbackList10FontDataAtERKNS_15FontDescriptionEj(%"class.blink::FontFallbackList"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 0)
  %4 = icmp eq %"class.blink::FontData"* %3, null
  br i1 %4, label %5, label %31

5:                                                ; preds = %114, %2
  %6 = tail call %"class.blink::FontData"* @_ZN5blink16FontFallbackList10FontDataAtERKNS_15FontDescriptionEj(%"class.blink::FontFallbackList"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 0)
  %7 = icmp eq %"class.blink::FontData"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.blink::FontData"* %6 to %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)***
  %10 = load %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)**, %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)*, %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)** %10, i64 2
  %12 = load %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)*, %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)** %11, align 8
  %13 = tail call %"class.blink::SimpleFontData"* %12(%"class.blink::FontData"* nonnull %6, i32 32) #9
  br label %119

14:                                               ; preds = %5
  %15 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  %16 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %15, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 0) #9
  %17 = icmp eq %"class.blink::SimpleFontData"* %16, null
  br i1 %17, label %119, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %16, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %19, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #9
  %21 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %19, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %119

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %19, i64 -2
  %26 = bitcast %"class.base::RefCounted.1"* %25 to %"class.blink::FontData"*
  %27 = bitcast %"class.base::RefCounted.1"* %25 to void (%"class.blink::FontData"*)***
  %28 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %28, i64 1
  %30 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %29, align 8
  tail call void %30(%"class.blink::FontData"* nonnull %26) #9
  br label %119

31:                                               ; preds = %2, %114
  %32 = phi %"class.blink::FontData"* [ %117, %114 ], [ %3, %2 ]
  %33 = phi i8 [ %115, %114 ], [ 1, %2 ]
  %34 = phi i32 [ %116, %114 ], [ 0, %2 ]
  %35 = bitcast %"class.blink::FontData"* %32 to i1 (%"class.blink::FontData"*)***
  %36 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %36, i64 6
  %38 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::FontData"* nonnull %32) #9
  %40 = bitcast %"class.blink::FontData"* %32 to %"class.blink::SegmentedFontData"*
  %41 = select i1 %39, %"class.blink::SegmentedFontData"* %40, %"class.blink::SegmentedFontData"* null
  br i1 %39, label %42, label %44

42:                                               ; preds = %31
  %43 = tail call zeroext i1 @_ZNK5blink17SegmentedFontData17ContainsCharacterEi(%"class.blink::SegmentedFontData"* nonnull %41, i32 32) #9
  br i1 %43, label %44, label %114

44:                                               ; preds = %42, %31
  %45 = bitcast %"class.blink::FontData"* %32 to %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)***
  %46 = load %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)**, %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)*** %45, align 8
  %47 = getelementptr inbounds %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)*, %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)** %46, i64 2
  %48 = load %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)*, %"class.blink::SimpleFontData"* (%"class.blink::FontData"*, i32)** %47, align 8
  %49 = tail call %"class.blink::SimpleFontData"* %48(%"class.blink::FontData"* nonnull %32, i32 32) #9
  %50 = bitcast %"class.blink::SimpleFontData"* %49 to i1 (%"class.blink::SimpleFontData"*)***
  %51 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %51, i64 5
  %53 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::SimpleFontData"* %49) #9
  br i1 %54, label %55, label %119

55:                                               ; preds = %44
  br i1 %39, label %56, label %103

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %41, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %97, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %41, i64 0, i32 1
  br label %65

62:                                               ; preds = %89
  %63 = load i32, i32* %57, align 4
  %64 = icmp ult i32 %96, %63
  br i1 %64, label %65, label %97

65:                                               ; preds = %60, %62
  %66 = phi i32 [ 0, %60 ], [ %96, %62 ]
  %67 = tail call dereferenceable(8) %class.scoped_refptr.278* @_ZNK3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.275"* %61, i32 %66) #9
  %68 = getelementptr inbounds %class.scoped_refptr.278, %class.scoped_refptr.278* %67, i64 0, i32 0
  %69 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %68, align 8
  %70 = icmp eq %"class.blink::FontDataForRangeSet"* %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  %72 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** inttoptr (i64 16 to %"class.blink::SimpleFontData"**), align 16
  br label %89

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %69, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %74) #9
  %75 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %69, i64 0, i32 2, i32 0
  %76 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %69, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.base::RefCounted.280", %"class.base::RefCounted.280"* %77, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %78) #9
  %79 = getelementptr inbounds %"class.base::RefCounted.280", %"class.base::RefCounted.280"* %77, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %89

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.base::RefCounted.280", %"class.base::RefCounted.280"* %77, i64 -2
  %84 = bitcast %"class.base::RefCounted.280"* %83 to %"class.blink::FontDataForRangeSet"*
  %85 = bitcast %"class.base::RefCounted.280"* %83 to void (%"class.blink::FontDataForRangeSet"*)***
  %86 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %86, i64 1
  %88 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %87, align 8
  tail call void %88(%"class.blink::FontDataForRangeSet"* nonnull %84) #9
  br label %89

89:                                               ; preds = %71, %73, %82
  %90 = phi %"class.blink::SimpleFontData"* [ %72, %71 ], [ %76, %73 ], [ %76, %82 ]
  %91 = bitcast %"class.blink::SimpleFontData"* %90 to i1 (%"class.blink::SimpleFontData"*)***
  %92 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %92, i64 5
  %94 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %93, align 8
  %95 = tail call zeroext i1 %94(%"class.blink::SimpleFontData"* %90) #9
  %96 = add nuw i32 %66, 1
  br i1 %95, label %62, label %119

97:                                               ; preds = %62, %56
  %98 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %35, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %98, i64 4
  %100 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %99, align 8
  %101 = tail call zeroext i1 %100(%"class.blink::FontData"* nonnull %32) #9
  %102 = select i1 %101, i8 0, i8 %33
  br label %103

103:                                              ; preds = %97, %55
  %104 = phi i8 [ %33, %55 ], [ %102, %97 ]
  %105 = and i8 %104, 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %49, i64 0, i32 11, i32 0
  %109 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %108, align 8
  %110 = bitcast %"class.blink::CustomFontData"* %109 to void (%"class.blink::CustomFontData"*)***
  %111 = load void (%"class.blink::CustomFontData"*)**, void (%"class.blink::CustomFontData"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %111, i64 2
  %113 = load void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %112, align 8
  tail call void %113(%"class.blink::CustomFontData"* %109) #9
  br label %114

114:                                              ; preds = %107, %103, %42
  %115 = phi i8 [ %104, %103 ], [ 0, %107 ], [ %33, %42 ]
  %116 = add i32 %34, 1
  %117 = tail call %"class.blink::FontData"* @_ZN5blink16FontFallbackList10FontDataAtERKNS_15FontDescriptionEj(%"class.blink::FontFallbackList"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 %116)
  %118 = icmp eq %"class.blink::FontData"* %117, null
  br i1 %118, label %5, label %31

119:                                              ; preds = %44, %89, %24, %18, %14, %8
  %120 = phi %"class.blink::SimpleFontData"* [ %16, %24 ], [ %16, %18 ], [ null, %14 ], [ %13, %8 ], [ %90, %89 ], [ %49, %44 ]
  ret %"class.blink::SimpleFontData"* %120
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontData"* @_ZN5blink16FontFallbackList10FontDataAtERKNS_15FontDescriptionEj(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr, align 8
  %5 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, %2
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %2) #9
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %12 = load %"class.blink::FontData"*, %"class.blink::FontData"** %11, align 8
  br label %76

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %76, label %17

17:                                               ; preds = %13
  %18 = bitcast %class.scoped_refptr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %20 = tail call %"class.blink::FontData"* @_ZN5blink16FontFallbackList11GetFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1)
  store %"class.blink::FontData"* %20, %"class.blink::FontData"** %19, align 8
  %21 = icmp eq %"class.blink::FontData"* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %17
  %23 = load i32, i32* %6, align 4
  %24 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %35, label %27, !prof !2

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.scoped_refptr*, %class.scoped_refptr** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %29, i64 %30, i32 0
  store %"class.blink::FontData"* %20, %"class.blink::FontData"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %20, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #9
  %33 = load i32, i32* %6, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %6, align 4
  br label %36

35:                                               ; preds = %22
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"* %5, %class.scoped_refptr* nonnull dereferenceable(8) %4) #9
  br label %36

36:                                               ; preds = %27, %35
  %37 = load %"class.blink::FontData"*, %"class.blink::FontData"** %19, align 8
  %38 = bitcast %"class.blink::FontData"* %37 to i1 (%"class.blink::FontData"*)***
  %39 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %39, i64 5
  %41 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.blink::FontData"* %37) #9
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 6
  %45 = load i8, i8* %44, align 2
  %46 = or i8 %45, 1
  store i8 %46, i8* %44, align 2
  br label %47

47:                                               ; preds = %43, %36
  %48 = load %"class.blink::FontData"*, %"class.blink::FontData"** %19, align 8
  %49 = bitcast %"class.blink::FontData"* %48 to i1 (%"class.blink::FontData"*)***
  %50 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %50, i64 3
  %52 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.blink::FontData"* %48) #9
  br i1 %53, label %54, label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 6
  %56 = load i8, i8* %55, align 2
  %57 = or i8 %56, 2
  store i8 %57, i8* %55, align 2
  br label %58

58:                                               ; preds = %47, %54
  %59 = load %"class.blink::FontData"*, %"class.blink::FontData"** %19, align 8
  %60 = icmp eq %"class.blink::FontData"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %59, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %62, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #9
  %64 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %62, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %62, i64 -2
  %69 = bitcast %"class.base::RefCounted.1"* %68 to %"class.blink::FontData"*
  %70 = bitcast %"class.base::RefCounted.1"* %68 to void (%"class.blink::FontData"*)***
  %71 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %71, i64 1
  %73 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %72, align 8
  call void %73(%"class.blink::FontData"* nonnull %69) #9
  br label %74

74:                                               ; preds = %17, %58, %61, %67
  %75 = phi %"class.blink::FontData"* [ null, %58 ], [ %59, %61 ], [ %59, %67 ], [ null, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %76

76:                                               ; preds = %13, %74, %9
  %77 = phi %"class.blink::FontData"* [ %12, %9 ], [ %75, %74 ], [ null, %13 ]
  ret %"class.blink::FontData"* %77
}

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17SegmentedFontData17ContainsCharacterEi(%"class.blink::SegmentedFontData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontData"* @_ZN5blink16FontFallbackList11GetFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* nocapture, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0
  %4 = icmp eq %"class.blink::FontDescription"* %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %5, %18
  %9 = phi %"class.blink::FontFamily"* [ %3, %5 ], [ %21, %18 ]
  %10 = phi i32 [ 0, %5 ], [ %22, %18 ]
  %11 = icmp slt i32 %10, %7
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %18, %2
  %13 = phi %"class.blink::FontFamily"* [ %3, %2 ], [ %21, %18 ], [ %9, %8 ]
  %14 = icmp eq %"class.blink::FontFamily"* %13, null
  %15 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 4
  br i1 %14, label %97, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 3, i32 0, i32 0
  br label %24

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %9, i64 0, i32 1, i32 0
  %20 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %20, i64 0, i32 0
  %22 = add nuw nsw i32 %10, 1
  %23 = icmp eq %"class.blink::SharedFontFamily"* %20, null
  br i1 %23, label %12, label %8

24:                                               ; preds = %16, %92
  %25 = phi %"class.blink::FontFamily"* [ %13, %16 ], [ %95, %92 ]
  %26 = load i32, i32* %15, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %15, align 8
  %28 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %25, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %92, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %92, label %36

36:                                               ; preds = %32
  %37 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %17, align 8
  %38 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %38, align 8
  %40 = icmp eq %"class.blink::FontSelector"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::FontSelector"* %39 to %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)***
  %43 = load %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)**, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %43, i64 4
  %45 = load %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %44, align 8
  %46 = tail call %"class.blink::FontData"* %45(%"class.blink::FontSelector"* nonnull %39, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %28) #9
  %47 = ptrtoint %"class.blink::FontData"* %46 to i64
  %48 = icmp eq %"class.blink::FontData"* %46, null
  br i1 %48, label %49, label %73

49:                                               ; preds = %41, %36
  %50 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  %51 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringENS_17AlternateFontNameENS_12ShouldRetainE(%"class.blink::FontCache"* %50, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %28, i32 0, i32 0) #9
  %52 = ptrtoint %"class.blink::SimpleFontData"* %51 to i64
  %53 = bitcast %"class.blink::SimpleFontData"* %51 to %"class.blink::FontData"*
  %54 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %17, align 8
  %55 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %55, align 8
  %57 = icmp eq %"class.blink::FontSelector"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %49
  %59 = icmp eq %"class.blink::SimpleFontData"* %51, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.blink::SimpleFontData"* %51 to i1 (%"class.blink::FontData"*)***
  %62 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %62, i64 6
  %64 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::FontData"* nonnull %53) #9
  %66 = select i1 %65, %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"* %51
  br label %67

67:                                               ; preds = %58, %60
  %68 = phi %"class.blink::SimpleFontData"* [ %66, %60 ], [ null, %58 ]
  %69 = bitcast %"class.blink::FontSelector"* %56 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)***
  %70 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %70, i64 12
  %72 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %71, align 8
  tail call void %72(%"class.blink::FontSelector"* nonnull %56, %"class.WTF::AtomicString"* dereferenceable(8) %28, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* %68) #9
  br label %73

73:                                               ; preds = %41, %49, %67
  %74 = phi i64 [ %47, %41 ], [ %52, %49 ], [ %52, %67 ]
  %75 = icmp eq i64 %74, 0
  %76 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %17, align 8
  %77 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %77, align 8
  %79 = icmp ne %"class.blink::FontSelector"* %78, null
  br i1 %75, label %86, label %80

80:                                               ; preds = %73
  br i1 %79, label %81, label %125

81:                                               ; preds = %80
  %82 = bitcast %"class.blink::FontSelector"* %78 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)***
  %83 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %83, i64 8
  %85 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %84, align 8
  tail call void %85(%"class.blink::FontSelector"* nonnull %78, %"class.WTF::AtomicString"* dereferenceable(8) %28) #9
  br label %125

86:                                               ; preds = %73
  br i1 %79, label %87, label %92

87:                                               ; preds = %86
  %88 = bitcast %"class.blink::FontSelector"* %78 to void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)***
  %89 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %89, i64 9
  %91 = load void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::FontSelector"*, %"class.WTF::AtomicString"*)** %90, align 8
  tail call void %91(%"class.blink::FontSelector"* nonnull %78, %"class.WTF::AtomicString"* dereferenceable(8) %28) #9
  br label %92

92:                                               ; preds = %86, %87, %24, %32
  %93 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %25, i64 0, i32 1, i32 0
  %94 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %94, i64 0, i32 0
  %96 = icmp eq %"class.blink::SharedFontFamily"* %94, null
  br i1 %96, label %97, label %24

97:                                               ; preds = %92, %12
  store i32 -1, i32* %15, align 8
  %98 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %100, align 8
  %102 = icmp eq %"class.blink::FontSelector"* %101, null
  br i1 %102, label %112, label %103

103:                                              ; preds = %97
  %104 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names15kWebkitStandardE, align 8
  %105 = bitcast %"class.blink::FontSelector"* %101 to %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)***
  %106 = load %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)**, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*** %105, align 8
  %107 = getelementptr inbounds %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %106, i64 4
  %108 = load %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %107, align 8
  %109 = tail call %"class.blink::FontData"* %108(%"class.blink::FontSelector"* nonnull %101, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %104) #9
  %110 = ptrtoint %"class.blink::FontData"* %109 to i64
  %111 = icmp eq %"class.blink::FontData"* %109, null
  br i1 %111, label %112, label %125

112:                                              ; preds = %97, %103
  %113 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  %114 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %113, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 0) #9
  %115 = ptrtoint %"class.blink::SimpleFontData"* %114 to i64
  %116 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %98, align 8
  %117 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %116, i64 0, i32 2, i32 0, i32 0
  %118 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %117, align 8
  %119 = icmp eq %"class.blink::FontSelector"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.blink::FontSelector"* %118 to void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)***
  %122 = load void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)**, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %122, i64 15
  %124 = load void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)*, void (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)** %123, align 8
  tail call void %124(%"class.blink::FontSelector"* nonnull %118, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* %114) #9
  br label %125

125:                                              ; preds = %112, %120, %80, %81, %103
  %126 = phi i64 [ %110, %103 ], [ %74, %81 ], [ %74, %80 ], [ %115, %120 ], [ %115, %112 ]
  %127 = inttoptr i64 %126 to %"class.blink::FontData"*
  ret %"class.blink::FontData"* %127
}

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringENS_17AlternateFontNameENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16FontFallbackList12CompositeKeyERKNS_15FontDescriptionE(%"struct.blink::FallbackListCompositeKey"* noalias sret, %"class.blink::FontFallbackList"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontFaceCreationParams", align 8
  %5 = alloca %"struct.blink::FontCacheKey", align 8
  %6 = alloca %"struct.blink::FontSelectionRequest", align 2
  %7 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 6
  %13 = bitcast %"struct.blink::FallbackListCompositeKey"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = tail call i32 @_ZNK5blink15FontDescription26StyleHashWithoutFamilyListEv(%"class.blink::FontDescription"* %2) #9
  %15 = shl i32 %14, 1
  store i32 %15, i32* %7, align 8
  %16 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 5
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast float* %8 to i32*
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 8
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = bitcast float* %9 to i32*
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 9
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = bitcast float* %10 to i32*
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 12
  %29 = bitcast %union.anon.272* %28 to i32*
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %11, align 8
  %31 = bitcast %union.anon.272* %28 to [2 x i32]*
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 1
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %12, align 4
  %34 = icmp eq %"class.blink::FontDescription"* %2, null
  br i1 %34, label %238, label %35

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 0
  %37 = bitcast %"class.blink::FontFaceCreationParams"* %4 to i8*
  %38 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %42 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %1, i64 0, i32 3, i32 0, i32 0
  %43 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i8*
  %44 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %5, i64 0, i32 5, i32 0
  %45 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %5, i64 0, i32 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %39 to i8*
  %54 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i8*
  br label %55

55:                                               ; preds = %35, %233
  %56 = phi %"class.blink::FontFamily"* [ %36, %35 ], [ %236, %233 ]
  %57 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %56, i64 0, i32 0
  %58 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %233, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %233, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %113, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #9
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  call void @llvm.trap() #9
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %68, %83
  store i32 0, i32* %38, align 8
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %39, align 8
  %86 = load atomic i32, i32* %69 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #9
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %89
  call void @llvm.trap() #9
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %101

101:                                              ; preds = %99, %85
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 32, i1 false) #9
  %102 = load atomic i32, i32* %69 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %101
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %101
  %110 = phi i32 [ %108, %107 ], [ %106, %101 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #9
  br label %114

113:                                              ; preds = %65
  store i32 0, i32* %38, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 40, i1 false)
  br label %114

114:                                              ; preds = %109, %112, %113
  %115 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %42, align 8
  %116 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %115, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %116, align 8
  %118 = icmp eq %"class.blink::FontSelector"* %117, null
  br i1 %118, label %127, label %119

119:                                              ; preds = %114
  %120 = bitcast %"class.blink::FontSelector"* %117 to %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)***
  %121 = load %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)**, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*** %120, align 8
  %122 = getelementptr inbounds %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %121, i64 4
  %123 = load %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)*, %"class.blink::FontData"* (%"class.blink::FontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)** %122, align 8
  %124 = call %"class.blink::FontData"* %123(%"class.blink::FontSelector"* nonnull %117, %"class.blink::FontDescription"* nonnull dereferenceable(80) %2, %"class.WTF::AtomicString"* dereferenceable(8) %57) #9
  %125 = ptrtoint %"class.blink::FontData"* %124 to i64
  %126 = icmp eq %"class.blink::FontData"* %124, null
  br i1 %126, label %127, label %140

127:                                              ; preds = %119, %114
  %128 = phi i64 [ %125, %119 ], [ 0, %114 ]
  %129 = inttoptr i64 %128 to %"class.blink::FontData"*
  %130 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  %131 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %130, %"class.blink::FontDescription"* nonnull dereferenceable(80) %2, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %4, i32 0) #9
  %132 = icmp eq %"class.blink::FontPlatformData"* %131, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %127
  %134 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  %135 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"* %134, %"class.blink::FontPlatformData"* nonnull %131, i32 0, i1 zeroext false) #9
  %136 = bitcast %"class.blink::SimpleFontData"* %135 to %"class.blink::FontData"*
  br label %137

137:                                              ; preds = %133, %127
  %138 = phi %"class.blink::FontData"* [ %129, %127 ], [ %136, %133 ]
  %139 = icmp eq %"class.blink::FontData"* %138, null
  br i1 %139, label %211, label %140

140:                                              ; preds = %119, %137
  %141 = phi %"class.blink::FontData"* [ %138, %137 ], [ %124, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %54, i8 0, i64 6, i1 false)
  call void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* nonnull sret %5, %"class.blink::FontDescription"* nonnull %2, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %4, i1 zeroext false, %"struct.blink::FontSelectionRequest"* nonnull dereferenceable(6) %6) #9
  call void @_ZN5blink24FallbackListCompositeKey3AddENS_12FontCacheKeyE(%"struct.blink::FallbackListCompositeKey"* %0, %"struct.blink::FontCacheKey"* nonnull %5)
  %142 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %44, align 8
  %143 = icmp eq %"class.blink::FontVariationSettings"* %142, null
  br i1 %143, label %164, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %142, i64 0, i32 1, i32 0
  %146 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %145, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %146) #9
  %147 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %145, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %164

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %145, i64 -4
  %152 = bitcast %"class.base::RefCounted.265"* %151 to %"class.blink::FontTagValuePair.261"**
  %153 = load %"class.blink::FontTagValuePair.261"*, %"class.blink::FontTagValuePair.261"** %152, align 8
  %154 = icmp eq %"class.blink::FontTagValuePair.261"* %153, null
  %155 = bitcast %"class.blink::FontTagValuePair.261"* %153 to i8*
  br i1 %154, label %162, label %156, !prof !3

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %145, i64 -1, i32 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %161, label %160, !prof !2

160:                                              ; preds = %156
  store i32 0, i32* %157, align 4
  br label %161

161:                                              ; preds = %160, %156
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %155) #9
  br label %162

162:                                              ; preds = %161, %150
  %163 = bitcast %"class.base::RefCounted.265"* %151 to i8*
  call void @free(i8* %163) #9
  br label %164

164:                                              ; preds = %162, %144, %140
  %165 = load i8, i8* %47, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  %168 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %168) #10
  br label %169

169:                                              ; preds = %167, %164
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #9
  br label %185

185:                                              ; preds = %169, %181, %184
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %43) #9
  %186 = bitcast %"class.blink::FontData"* %141 to i1 (%"class.blink::FontData"*)***
  %187 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %187, i64 6
  %189 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %188, align 8
  %190 = call zeroext i1 %189(%"class.blink::FontData"* nonnull %141) #9
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = load i1 (%"class.blink::FontData"*)**, i1 (%"class.blink::FontData"*)*** %186, align 8
  %193 = getelementptr inbounds i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %192, i64 3
  %194 = load i1 (%"class.blink::FontData"*)*, i1 (%"class.blink::FontData"*)** %193, align 8
  %195 = call zeroext i1 %194(%"class.blink::FontData"* nonnull %141) #9
  br i1 %195, label %198, label %196

196:                                              ; preds = %191
  %197 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #9
  call void @_ZN5blink9FontCache15ReleaseFontDataEPKNS_14SimpleFontDataE(%"class.blink::FontCache"* %197, %"class.blink::SimpleFontData"* null) #9
  br label %198

198:                                              ; preds = %191, %196, %185
  %199 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %141, i64 0, i32 1, i32 0
  %200 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %199, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %200) #9
  %201 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %199, i64 0, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %211

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %199, i64 -2
  %206 = bitcast %"class.base::RefCounted.1"* %205 to %"class.blink::FontData"*
  %207 = bitcast %"class.base::RefCounted.1"* %205 to void (%"class.blink::FontData"*)***
  %208 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %208, i64 1
  %210 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %209, align 8
  call void %210(%"class.blink::FontData"* nonnull %206) #9
  br label %211

211:                                              ; preds = %137, %198, %204
  %212 = load i8, i8* %51, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %211
  %215 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %215) #10
  br label %216

216:                                              ; preds = %214, %211
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #9
  br label %232

232:                                              ; preds = %216, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #9
  br label %233

233:                                              ; preds = %55, %61, %232
  %234 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %56, i64 0, i32 1, i32 0
  %235 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %235, i64 0, i32 0
  %237 = icmp eq %"class.blink::SharedFontFamily"* %235, null
  br i1 %237, label %238, label %55

238:                                              ; preds = %233, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFaceCreationParams"* dereferenceable(48), i32) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"*, %"class.blink::FontPlatformData"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24FallbackListCompositeKey3AddENS_12FontCacheKeyE(%"struct.blink::FallbackListCompositeKey"*, %"struct.blink::FontCacheKey"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %73, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %9, align 8
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %10, i64 %11, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %10, i64 %11, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #9
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %34, %19, %8
  %37 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %10, i64 %11, i32 0, i32 2
  %38 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #9
  br label %51

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %37, i8* %48, i64 %50) #9
  br label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %10, i64 %11, i32 0, i32 3
  %53 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 3
  %54 = bitcast i32* %53 to i64*
  %55 = bitcast i32* %52 to i64*
  %56 = load i64, i64* %54, align 8
  store i64 %56, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %10, i64 %11, i32 1
  %58 = bitcast i32* %57 to i8*
  %59 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %60 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %60, i64 12, i1 false) #9
  %61 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %62 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %61, align 8
  %63 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %10, i64 %11, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %62, %"class.blink::FontVariationSettings"** %63, align 8
  %64 = icmp eq %"class.blink::FontVariationSettings"* %62, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %51
  %66 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %62, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %66) #9
  br label %67

67:                                               ; preds = %65, %51
  %68 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %10, i64 %11, i32 6
  %69 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %70 = load i8, i8* %69, align 8, !range !4
  store i8 %70, i8* %68, align 8
  %71 = load i32, i32* %3, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %3, align 4
  br label %75

73:                                               ; preds = %2
  %74 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.291"* %74, %"struct.blink::FontCacheKey"* dereferenceable(80) %1) #9
  br label %75

75:                                               ; preds = %67, %73
  %76 = getelementptr inbounds %"struct.blink::FallbackListCompositeKey", %"struct.blink::FallbackListCompositeKey"* %0, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = mul i32 %77, 33
  %79 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fmul float %80, 1.000000e+03
  %82 = fptoui float %81 to i32
  %83 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %84 = tail call i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"* %83) #9
  %85 = lshr i32 %84, 16
  %86 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = lshr i32 %87, 16
  %89 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = lshr i32 %90, 16
  %92 = lshr i32 %82, 16
  %93 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %94 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %93, align 8
  %95 = icmp eq %"class.blink::FontVariationSettings"* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %75
  %97 = tail call i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"* nonnull %94) #9
  %98 = zext i32 %97 to i64
  br label %99

99:                                               ; preds = %75, %96
  %100 = phi i64 [ %98, %96 ], [ 0, %75 ]
  %101 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %102 = load i8, i8* %101, align 8, !range !4
  %103 = and i32 %84, 65535
  %104 = add nuw nsw i32 %103, -1640531527
  %105 = shl i32 %104, 16
  %106 = shl nuw nsw i32 %85, 11
  %107 = xor i32 %106, %104
  %108 = xor i32 %107, %105
  %109 = lshr i32 %108, 11
  %110 = and i32 %87, 65535
  %111 = add i32 %108, %110
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 16
  %114 = shl nuw nsw i32 %88, 11
  %115 = xor i32 %112, %114
  %116 = xor i32 %115, %113
  %117 = lshr i32 %116, 11
  %118 = and i32 %90, 65535
  %119 = add i32 %116, %118
  %120 = add i32 %119, %117
  %121 = shl i32 %120, 16
  %122 = shl nuw nsw i32 %91, 11
  %123 = xor i32 %120, %122
  %124 = xor i32 %123, %121
  %125 = lshr i32 %124, 11
  %126 = and i32 %82, 65535
  %127 = add i32 %124, %126
  %128 = add i32 %127, %125
  %129 = shl i32 %128, 16
  %130 = shl nuw nsw i32 %92, 11
  %131 = xor i32 %128, %130
  %132 = xor i32 %131, %129
  %133 = lshr i32 %132, 11
  %134 = add i32 %133, %132
  %135 = trunc i64 %100 to i32
  %136 = and i32 %135, 65535
  %137 = add i32 %134, %136
  %138 = shl i32 %137, 16
  %139 = lshr i64 %100, 5
  %140 = trunc i64 %139 to i32
  %141 = and i32 %140, 134215680
  %142 = xor i32 %141, %137
  %143 = xor i32 %142, %138
  %144 = lshr i32 %143, 11
  %145 = zext i8 %102 to i32
  %146 = add i32 %143, %145
  %147 = add i32 %146, %144
  %148 = shl i32 %147, 16
  %149 = xor i32 %148, %147
  %150 = lshr i32 %149, 11
  %151 = add i32 %150, %149
  %152 = shl i32 %151, 3
  %153 = xor i32 %152, %151
  %154 = lshr i32 %153, 5
  %155 = add i32 %154, %153
  %156 = shl i32 %155, 2
  %157 = xor i32 %156, %155
  %158 = lshr i32 %157, 15
  %159 = add i32 %158, %157
  %160 = shl i32 %159, 10
  %161 = xor i32 %160, %159
  %162 = and i32 %161, 16777215
  %163 = icmp eq i32 %162, 0
  %164 = select i1 %163, i32 8388608, i32 %162
  %165 = add i32 %164, %78
  %166 = shl i32 %165, 1
  store i32 %166, i32* %76, align 8
  ret void
}

declare void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* sret, %"class.blink::FontDescription"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48), i1 zeroext, %"struct.blink::FontSelectionRequest"* dereferenceable(6)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FontFallbackList25ComputeCanShapeWordByWordERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %4 = bitcast %"struct.blink::FontDescription::BitFields"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 60129542144
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 2
  %10 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %9, align 8
  %11 = icmp eq %"class.blink::SimpleFontData"* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1) #9
  store %"class.blink::SimpleFontData"* %13, %"class.blink::SimpleFontData"** %9, align 8
  %14 = icmp eq %"class.blink::SimpleFontData"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = load i64, i64* %4, align 8
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i64 [ %16, %15 ], [ %5, %8 ]
  %19 = phi %"class.blink::SimpleFontData"* [ %13, %15 ], [ %10, %8 ]
  %20 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %19, i64 0, i32 5
  %21 = lshr i64 %18, 33
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 7
  %24 = tail call zeroext i1 @_ZNK5blink16FontPlatformData28HasSpaceInLigaturesOrKerningEj(%"class.blink::FontPlatformData"* %20, i32 %23) #9
  %25 = xor i1 %24, true
  br label %26

26:                                               ; preds = %17, %12, %2
  %27 = phi i1 [ true, %2 ], [ %25, %17 ], [ false, %12 ]
  ret i1 %27
}

declare zeroext i1 @_ZNK5blink16FontPlatformData28HasSpaceInLigaturesOrKerningEj(%"class.blink::FontPlatformData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FontFallbackList18CanShapeWordByWordERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 2
  %5 = and i8 %4, 16
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %9 = bitcast %"struct.blink::FontDescription::BitFields"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 60129542144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %34, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %0, i64 0, i32 2
  %15 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %14, align 8
  %16 = icmp eq %"class.blink::SimpleFontData"* %15, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1) #9
  store %"class.blink::SimpleFontData"* %18, %"class.blink::SimpleFontData"** %14, align 8
  %19 = icmp eq %"class.blink::SimpleFontData"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = load i64, i64* %9, align 8
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i64 [ %21, %20 ], [ %10, %13 ]
  %24 = phi %"class.blink::SimpleFontData"* [ %18, %20 ], [ %15, %13 ]
  %25 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %24, i64 0, i32 5
  %26 = lshr i64 %23, 33
  %27 = trunc i64 %26 to i32
  %28 = and i32 %27, 7
  %29 = tail call zeroext i1 @_ZNK5blink16FontPlatformData28HasSpaceInLigaturesOrKerningEj(%"class.blink::FontPlatformData"* %25, i32 %28) #9
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i8
  %32 = shl nuw nsw i8 %31, 3
  %33 = or i8 %32, 16
  br label %34

34:                                               ; preds = %7, %17, %22
  %35 = phi i8 [ 24, %7 ], [ %33, %22 ], [ 16, %17 ]
  %36 = load i8, i8* %3, align 2
  %37 = and i8 %36, -25
  %38 = or i8 %35, %37
  store i8 %38, i8* %3, align 2
  br label %39

39:                                               ; preds = %2, %34
  %40 = phi i8 [ %4, %2 ], [ %38, %34 ]
  %41 = and i8 %40, 8
  %42 = icmp ne i8 %41, 0
  ret i1 %42
}

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"*, %class.scoped_refptr*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.278* @_ZNK3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.275"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.275", %"class.WTF::Vector.275"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.275", %"class.WTF::Vector.275"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.278*, %class.scoped_refptr.278** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.278, %class.scoped_refptr.278* %24, i64 %25
  ret %class.scoped_refptr.278* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i32 @_ZNK5blink15FontDescription26StyleHashWithoutFamilyListEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.291"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %6, align 8
  %8 = icmp ugt %"struct.blink::FontCacheKey"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::FontCacheKey"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::FontCacheKey"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.291"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 80
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::FontCacheKey"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.291"* %0, i32 %22) #9
  %36 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::FontCacheKey"* %1 to i64
  %39 = ptrtoint %"struct.blink::FontCacheKey"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 80
  %42 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::FontCacheKey"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %55) #9
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #9
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.291"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 80
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::FontCacheKey"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.291"* %0, i32 %50) #9
  %64 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::FontCacheKey"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::FontCacheKey"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::FontCacheKey"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #9
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  tail call void @llvm.trap() #9
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %95, %80, %68
  %98 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 2
  %99 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 2
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #9
  br label %112

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %98, i8* %109, i64 %111) #9
  br label %112

112:                                              ; preds = %107, %104
  %113 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 0, i32 3
  %114 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 0, i32 3
  %115 = bitcast i32* %114 to i64*
  %116 = bitcast i32* %113 to i64*
  %117 = load i64, i64* %115, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 1
  %119 = bitcast i32* %118 to i8*
  %120 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 1
  %121 = bitcast i32* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %121, i64 12, i1 false) #9
  %122 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 5, i32 0
  %123 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %122, align 8
  %124 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %123, %"class.blink::FontVariationSettings"** %124, align 8
  %125 = icmp eq %"class.blink::FontVariationSettings"* %123, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %112
  %127 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %123, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %127) #9
  br label %128

128:                                              ; preds = %112, %126
  %129 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %69, i64 %72, i32 6
  %130 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %70, i64 0, i32 6
  %131 = load i8, i8* %130, align 8, !range !4
  store i8 %131, i8* %129, align 8
  %132 = load i32, i32* %3, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12FontCacheKeyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.291"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %102

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.291"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %100, label %14

14:                                               ; preds = %4, %96
  %15 = phi %"struct.blink::FontCacheKey"* [ %98, %96 ], [ %6, %4 ]
  %16 = phi %"struct.blink::FontCacheKey"* [ %97, %96 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::AtomicString"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 2
  %29 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %29, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #9
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 0, i32 3
  %31 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 3
  %32 = bitcast i32* %31 to i64*
  %33 = bitcast i32* %30 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 1
  %36 = bitcast i32* %35 to i8*
  %37 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 1
  %38 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %38, i64 12, i1 false) #9
  %39 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 5
  %40 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 5
  %41 = getelementptr inbounds %class.scoped_refptr.256, %class.scoped_refptr.256* %40, i64 0, i32 0
  %42 = bitcast %class.scoped_refptr.256* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %class.scoped_refptr.256* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %41, align 8
  %45 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 0, i32 6
  %46 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  store i8 %47, i8* %45, align 8
  %48 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 5, i32 0
  %49 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %48, align 8
  %50 = icmp eq %"class.blink::FontVariationSettings"* %49, null
  br i1 %50, label %71, label %51

51:                                               ; preds = %14
  %52 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %49, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %52, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #9
  %54 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %52, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %71

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %52, i64 -4
  %59 = bitcast %"class.base::RefCounted.265"* %58 to %"class.blink::FontTagValuePair.261"**
  %60 = load %"class.blink::FontTagValuePair.261"*, %"class.blink::FontTagValuePair.261"** %59, align 8
  %61 = icmp eq %"class.blink::FontTagValuePair.261"* %60, null
  %62 = bitcast %"class.blink::FontTagValuePair.261"* %60 to i8*
  br i1 %61, label %69, label %63, !prof !3

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %52, i64 -1, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !2

67:                                               ; preds = %63
  store i32 0, i32* %64, align 4
  br label %68

68:                                               ; preds = %67, %63
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #9
  br label %69

69:                                               ; preds = %68, %57
  %70 = bitcast %"class.base::RefCounted.265"* %58 to i8*
  tail call void @free(i8* %70) #9
  br label %71

71:                                               ; preds = %69, %51, %14
  %72 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %76, %71
  %80 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #9
  br label %96

96:                                               ; preds = %79, %92, %95
  %97 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %16, i64 1
  %98 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %15, i64 1
  %99 = icmp eq %"struct.blink::FontCacheKey"* %98, %10
  br i1 %99, label %100, label %14

100:                                              ; preds = %96, %4
  %101 = bitcast %"struct.blink::FontCacheKey"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %101) #9
  br label %213

102:                                              ; preds = %2
  %103 = zext i32 %1 to i64
  %104 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64 %103) #9
  %105 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %104, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontCacheKeyEEEPKcv, i64 0, i64 0)) #9
  %106 = udiv i64 %104, 80
  %107 = ptrtoint i8* %105 to i64
  %108 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 0
  %109 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %108, align 8
  %110 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %109, i64 %112
  %114 = icmp eq i32 %111, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %102
  %116 = bitcast %"struct.blink::FontCacheKey"* %109 to i8*
  br label %208

117:                                              ; preds = %102
  %118 = bitcast i8* %105 to %"struct.blink::FontCacheKey"*
  br label %119

119:                                              ; preds = %117, %201
  %120 = phi %"struct.blink::FontCacheKey"* [ %203, %201 ], [ %109, %117 ]
  %121 = phi %"struct.blink::FontCacheKey"* [ %202, %201 ], [ %118, %117 ]
  %122 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 1
  %126 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.WTF::AtomicString"* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %127, align 8
  %131 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 2
  %132 = bitcast %"class.std::__1::basic_string"* %131 to i8*
  %133 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 2
  %134 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %134, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #9
  %135 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 0, i32 3
  %136 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 3
  %137 = bitcast i32* %136 to i64*
  %138 = bitcast i32* %135 to i64*
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 1
  %141 = bitcast i32* %140 to i8*
  %142 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 1
  %143 = bitcast i32* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %143, i64 12, i1 false) #9
  %144 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 5
  %145 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 5
  %146 = getelementptr inbounds %class.scoped_refptr.256, %class.scoped_refptr.256* %145, i64 0, i32 0
  %147 = bitcast %class.scoped_refptr.256* %145 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %class.scoped_refptr.256* %144 to i64*
  store i64 %148, i64* %149, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %146, align 8
  %150 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 0, i32 6
  %151 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 6
  %152 = load i8, i8* %151, align 8, !range !4
  store i8 %152, i8* %150, align 8
  %153 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 5, i32 0
  %154 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %153, align 8
  %155 = icmp eq %"class.blink::FontVariationSettings"* %154, null
  br i1 %155, label %176, label %156

156:                                              ; preds = %119
  %157 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %154, i64 0, i32 1, i32 0
  %158 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %157, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #9
  %159 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %157, i64 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %176

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %157, i64 -4
  %164 = bitcast %"class.base::RefCounted.265"* %163 to %"class.blink::FontTagValuePair.261"**
  %165 = load %"class.blink::FontTagValuePair.261"*, %"class.blink::FontTagValuePair.261"** %164, align 8
  %166 = icmp eq %"class.blink::FontTagValuePair.261"* %165, null
  %167 = bitcast %"class.blink::FontTagValuePair.261"* %165 to i8*
  br i1 %166, label %174, label %168, !prof !3

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.base::RefCounted.265", %"class.base::RefCounted.265"* %157, i64 -1, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %173, label %172, !prof !2

172:                                              ; preds = %168
  store i32 0, i32* %169, align 4
  br label %173

173:                                              ; preds = %172, %168
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %167) #9
  br label %174

174:                                              ; preds = %173, %162
  %175 = bitcast %"class.base::RefCounted.265"* %163 to i8*
  tail call void @free(i8* %175) #9
  br label %176

176:                                              ; preds = %174, %156, %119
  %177 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  tail call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %181, %176
  %185 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #9
  br label %201

201:                                              ; preds = %184, %197, %200
  %202 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %121, i64 1
  %203 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %120, i64 1
  %204 = icmp eq %"struct.blink::FontCacheKey"* %203, %113
  br i1 %204, label %205, label %119

205:                                              ; preds = %201
  %206 = bitcast %"class.WTF::Vector.291"* %0 to i8**
  %207 = load i8*, i8** %206, align 8
  br label %208

208:                                              ; preds = %115, %205
  %209 = phi i8* [ %207, %205 ], [ %116, %115 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %209) #9
  %210 = bitcast %"class.WTF::Vector.291"* %0 to i64*
  store atomic i64 %107, i64* %210 monotonic, align 8
  %211 = trunc i64 %106 to i32
  %212 = getelementptr inbounds %"class.WTF::Vector.291", %"class.WTF::Vector.291"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %211, i32* %212, align 8
  br label %213

213:                                              ; preds = %208, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12FontCacheKeyEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 26817331
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 26817331) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 80
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %205

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %20

17:                                               ; preds = %6
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %19 = zext i8 %10 to i64
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i8* [ %14, %12 ], [ %18, %17 ]
  %22 = phi i64 [ %16, %12 ], [ %19, %17 ]
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = lshr i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %90, label %28

28:                                               ; preds = %20
  %29 = add nsw i32 %26, -1
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 1
  %32 = add nuw nsw i64 %31, 2
  %33 = and i32 %26, 1
  %34 = icmp eq i32 %26, 1
  br i1 %34, label %69, label %35

35:                                               ; preds = %28
  %36 = sub nsw i32 %26, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i32 [ -1640531527, %35 ], [ %65, %37 ]
  %39 = phi i8* [ %21, %35 ], [ %66, %37 ]
  %40 = phi i32 [ %36, %35 ], [ %67, %37 ]
  %41 = load i8, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %41 to i32
  %45 = add i32 %38, %44
  %46 = shl i32 %45, 16
  %47 = zext i8 %43 to i32
  %48 = shl nuw nsw i32 %47, 11
  %49 = xor i32 %48, %45
  %50 = xor i32 %49, %46
  %51 = lshr i32 %50, 11
  %52 = add i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %39, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds i8, i8* %39, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %54 to i32
  %58 = add i32 %52, %57
  %59 = shl i32 %58, 16
  %60 = zext i8 %56 to i32
  %61 = shl nuw nsw i32 %60, 11
  %62 = xor i32 %61, %58
  %63 = xor i32 %62, %59
  %64 = lshr i32 %63, 11
  %65 = add i32 %64, %63
  %66 = getelementptr inbounds i8, i8* %39, i64 4
  %67 = add i32 %40, -2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %37

69:                                               ; preds = %37, %28
  %70 = phi i32 [ undef, %28 ], [ %65, %37 ]
  %71 = phi i32 [ -1640531527, %28 ], [ %65, %37 ]
  %72 = phi i8* [ %21, %28 ], [ %66, %37 ]
  %73 = icmp eq i32 %33, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = load i8, i8* %72, align 1
  %76 = getelementptr inbounds i8, i8* %72, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %75 to i32
  %79 = add i32 %71, %78
  %80 = shl i32 %79, 16
  %81 = zext i8 %77 to i32
  %82 = shl nuw nsw i32 %81, 11
  %83 = xor i32 %82, %79
  %84 = xor i32 %83, %80
  %85 = lshr i32 %84, 11
  %86 = add i32 %85, %84
  br label %87

87:                                               ; preds = %69, %74
  %88 = phi i32 [ %70, %69 ], [ %86, %74 ]
  %89 = getelementptr i8, i8* %21, i64 %32
  br label %90

90:                                               ; preds = %87, %20
  %91 = phi i32 [ -1640531527, %20 ], [ %88, %87 ]
  %92 = phi i8* [ %21, %20 ], [ %89, %87 ]
  br i1 %25, label %93, label %96

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %95 = bitcast i32* %94 to i8*
  br label %111

96:                                               ; preds = %90
  %97 = load i8, i8* %92, align 1
  %98 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %99 = bitcast i32* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = load i8, i8* %99, align 1
  %102 = zext i8 %97 to i32
  %103 = add i32 %91, %102
  %104 = shl i32 %103, 16
  %105 = zext i8 %101 to i32
  %106 = shl nuw nsw i32 %105, 11
  %107 = xor i32 %106, %103
  %108 = xor i32 %107, %104
  %109 = lshr i32 %108, 11
  %110 = add i32 %109, %108
  br label %111

111:                                              ; preds = %96, %93
  %112 = phi i32 [ %110, %96 ], [ %91, %93 ]
  %113 = phi i8* [ %100, %96 ], [ %95, %93 ]
  %114 = phi i32 [ 3, %96 ], [ 4, %93 ]
  %115 = and i32 %114, 1
  %116 = lshr i32 %114, 1
  %117 = add nsw i32 %116, -1
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 1
  %120 = add nuw nsw i64 %119, 2
  %121 = load i8, i8* %113, align 1
  %122 = getelementptr inbounds i8, i8* %113, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %121 to i32
  %125 = add i32 %112, %124
  %126 = shl i32 %125, 16
  %127 = zext i8 %123 to i32
  %128 = shl nuw nsw i32 %127, 11
  %129 = xor i32 %128, %125
  %130 = xor i32 %129, %126
  %131 = lshr i32 %130, 11
  %132 = add i32 %131, %130
  %133 = icmp eq i32 %116, 1
  br i1 %133, label %134, label %269

134:                                              ; preds = %269, %111
  %135 = phi i32 [ %132, %111 ], [ %282, %269 ]
  %136 = icmp eq i32 %115, 0
  br i1 %136, label %153, label %137

137:                                              ; preds = %134
  %138 = getelementptr i8, i8* %113, i64 %120
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %141 = bitcast i32* %140 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = load i8, i8* %141, align 1
  %144 = zext i8 %139 to i32
  %145 = add i32 %135, %144
  %146 = shl i32 %145, 16
  %147 = zext i8 %143 to i32
  %148 = shl nuw nsw i32 %147, 11
  %149 = xor i32 %148, %145
  %150 = xor i32 %149, %146
  %151 = lshr i32 %150, 11
  %152 = add i32 %151, %150
  br label %156

153:                                              ; preds = %134
  %154 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %155 = bitcast i32* %154 to i8*
  br label %156

156:                                              ; preds = %137, %153
  %157 = phi i32 [ %152, %137 ], [ %135, %153 ]
  %158 = phi i8* [ %142, %137 ], [ %155, %153 ]
  %159 = phi i32 [ 3, %137 ], [ 4, %153 ]
  %160 = and i32 %159, 1
  %161 = lshr i32 %159, 1
  %162 = add nsw i32 %161, -1
  %163 = zext i32 %162 to i64
  %164 = shl nuw nsw i64 %163, 1
  %165 = add nuw nsw i64 %164, 2
  %166 = load i8, i8* %158, align 1
  %167 = getelementptr inbounds i8, i8* %158, i64 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %166 to i32
  %170 = add i32 %157, %169
  %171 = shl i32 %170, 16
  %172 = zext i8 %168 to i32
  %173 = shl nuw nsw i32 %172, 11
  %174 = xor i32 %173, %170
  %175 = xor i32 %174, %171
  %176 = lshr i32 %175, 11
  %177 = add i32 %176, %175
  %178 = icmp eq i32 %161, 1
  br i1 %178, label %179, label %255

179:                                              ; preds = %255, %156
  %180 = phi i32 [ %177, %156 ], [ %268, %255 ]
  %181 = icmp eq i32 %160, 0
  br i1 %181, label %191, label %182

182:                                              ; preds = %179
  %183 = getelementptr i8, i8* %158, i64 %165
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = add i32 %180, %185
  %187 = shl i32 %186, 11
  %188 = xor i32 %187, %186
  %189 = lshr i32 %188, 17
  %190 = add i32 %189, %188
  br label %191

191:                                              ; preds = %179, %182
  %192 = phi i32 [ %190, %182 ], [ %180, %179 ]
  %193 = shl i32 %192, 3
  %194 = xor i32 %193, %192
  %195 = lshr i32 %194, 5
  %196 = add i32 %195, %194
  %197 = shl i32 %196, 2
  %198 = xor i32 %197, %196
  %199 = lshr i32 %198, 15
  %200 = add i32 %199, %198
  %201 = shl i32 %200, 10
  %202 = xor i32 %201, %200
  %203 = icmp eq i32 %202, 0
  %204 = select i1 %203, i32 -2147483648, i32 %202
  br label %253

205:                                              ; preds = %1
  %206 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #9
  %207 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %205, %210
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #9
  br label %233

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %216, align 8
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i33
  %225 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %224, i33 1) #9
  %226 = extractvalue { i33, i1 } %225, 1
  %227 = extractvalue { i33, i1 } %225, 0
  %228 = icmp slt i33 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %231, !prof !2

230:                                              ; preds = %221
  tail call void @llvm.trap() #9
  unreachable

231:                                              ; preds = %221
  %232 = trunc i33 %227 to i32
  store i32 %232, i32* %222, align 4
  br label %233

233:                                              ; preds = %231, %215, %214
  %234 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %235) #9
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #9
  br label %252

252:                                              ; preds = %233, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #9
  br label %253

253:                                              ; preds = %252, %191
  %254 = phi i32 [ %204, %191 ], [ %236, %252 ]
  ret i32 %254

255:                                              ; preds = %156
  %256 = getelementptr inbounds i8, i8* %158, i64 2
  %257 = load i8, i8* %256, align 1
  %258 = getelementptr inbounds i8, i8* %158, i64 3
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %257 to i32
  %261 = add i32 %177, %260
  %262 = shl i32 %261, 16
  %263 = zext i8 %259 to i32
  %264 = shl nuw nsw i32 %263, 11
  %265 = xor i32 %264, %261
  %266 = xor i32 %265, %262
  %267 = lshr i32 %266, 11
  %268 = add i32 %267, %266
  br label %179

269:                                              ; preds = %111
  %270 = getelementptr inbounds i8, i8* %113, i64 2
  %271 = load i8, i8* %270, align 1
  %272 = getelementptr inbounds i8, i8* %113, i64 3
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %271 to i32
  %275 = add i32 %132, %274
  %276 = shl i32 %275, 16
  %277 = zext i8 %273 to i32
  %278 = shl nuw nsw i32 %277, 11
  %279 = xor i32 %278, %275
  %280 = xor i32 %279, %276
  %281 = lshr i32 %280, 11
  %282 = add i32 %281, %280
  br label %134
}

declare i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #9
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #9
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #9
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #9
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #9
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_15FontFallbackMapELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFallbackMap"**
  %4 = load %"class.blink::FontFallbackMap"*, %"class.blink::FontFallbackMap"** %3, align 8
  %5 = icmp eq %"class.blink::FontFallbackMap"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::FontFallbackMap", %"class.blink::FontFallbackMap"* %4, i64 -1, i32 3, i32 0, i32 3
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::FontFallbackMap"* null, %"class.blink::FontFallbackMap"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  ret %class.scoped_refptr* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  ret %class.scoped_refptr* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = icmp ugt %class.scoped_refptr* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %14 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %class.scoped_refptr* %1 to i64
  %17 = ptrtoint %class.scoped_refptr* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %20 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %class.scoped_refptr* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %class.scoped_refptr* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 0, i32 0
  %28 = load %"class.blink::FontData"*, %"class.blink::FontData"** %27, align 8
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %26, i32 0
  store %"class.blink::FontData"* %28, %"class.blink::FontData"** %29, align 8
  %30 = icmp eq %"class.blink::FontData"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::FontData", %"class.blink::FontData"* %28, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #9
  br label %33

33:                                               ; preds = %22, %31
  %34 = load i32, i32* %3, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.scoped_refptr*, %class.scoped_refptr** %31, align 8
  %33 = icmp eq %class.scoped_refptr* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8FontDataEEEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8FontDataEEEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %7 = icmp eq %class.scoped_refptr* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %class.scoped_refptr*
  %10 = icmp eq %class.scoped_refptr* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %class.scoped_refptr* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"* %19, %class.scoped_refptr* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8FontDataEEEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8FontDataEEEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %class.scoped_refptr*, %class.scoped_refptr** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %class.scoped_refptr* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %class.scoped_refptr* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #9
  %46 = load %class.scoped_refptr*, %class.scoped_refptr** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %class.scoped_refptr* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %class.scoped_refptr*
  %51 = icmp eq %class.scoped_refptr* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink8FontDataEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"* %53, %class.scoped_refptr* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8FontDataEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
