; ModuleID = '../../content/browser/scheduler/responsiveness/native_event_observer.cc'
source_filename = "../../content/browser/scheduler/responsiveness/native_event_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::responsiveness::NativeEventObserver" = type { %"class.aura::WindowEventDispatcherObserver", %"class.std::__1::vector", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback" }
%"class.aura::WindowEventDispatcherObserver" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.content::responsiveness::NativeEventObserver::EventInfo" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.content::responsiveness::NativeEventObserver::EventInfo"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.aura::Env" = type { %"class.ui::EventTarget", %"class.base::SupportsUserData.base", [7 x i8], %"class.base::ObserverList", %"class.base::ObserverList.31", %"class.base::ObserverList.35", %"class.std::__1::set", %"class.std::__1::unique_ptr", i32, %"class.gfx::Point", i8, %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.ui::ContextFactory"*, i8, %"class.std::__1::unique_ptr.97", %"class.std::__1::vector.103" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.2", %"class.std::__1::vector.9", %"class.ui::EventHandler"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.4" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.24", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.26" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.31" = type <{ %"class.std::__1::vector.24", %"class.base::LinkedList.32", i64, i32, [4 x i8] }>
%"class.base::LinkedList.32" = type { %"class.base::LinkNode.33" }
%"class.base::LinkNode.33" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.35" = type <{ %"class.std::__1::vector.36", %"class.base::LinkedList.50", i64, i32, [4 x i8] }>
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.45" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.39", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.50" = type { %"class.base::LinkNode.51" }
%"class.base::LinkNode.51" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.aura::EnvInputStateController"* }
%"class.aura::EnvInputStateController" = type opaque
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.ui::GestureRecognizer"* }
%"class.ui::GestureRecognizer" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.ui::CursorFactory"* }
%"class.ui::CursorFactory" = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.aura::InputStateLookup"* }
%"class.aura::InputStateLookup" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList.86", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.90" }
%"class.base::ObserverList.86" = type <{ %"class.std::__1::vector.24", %"class.base::LinkedList.87", i64, i32, [4 x i8] }>
%"class.base::LinkedList.87" = type { %"class.base::LinkNode.88" }
%"class.base::LinkNode.88" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.90" = type <{ %"class.std::__1::vector.24", %"class.base::LinkedList.91", i64, i32, [4 x i8] }>
%"class.base::LinkedList.91" = type { %"class.base::LinkNode.92" }
%"class.base::LinkNode.92" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::ContextFactory" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.aura::WindowOcclusionTracker"* }
%"class.aura::WindowOcclusionTracker" = type opaque
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"**, %"class.std::__1::__compressed_pair.105" }
%"class.aura::WindowTreeHost" = type opaque
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.aura::WindowTreeHost"** }
%"class.aura::WindowEventDispatcher" = type opaque
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.117" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.110" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.base::flat_map.120"* }
%"class.base::flat_map.120" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4aura29WindowEventDispatcherObserver43OnWindowEventDispatcherDispatchedHeldEventsEPNS_21WindowEventDispatcherE = comdat any

$_ZN4aura29WindowEventDispatcherObserver35OnWindowEventDispatcherIgnoredEventEPNS_21WindowEventDispatcherE = comdat any

@_ZTVN7content14responsiveness19NativeEventObserverE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::responsiveness::NativeEventObserver"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)* @_ZN7content14responsiveness19NativeEventObserver40OnWindowEventDispatcherStartedProcessingEPN4aura21WindowEventDispatcherERKN2ui5EventE to i8*), i8* bitcast (void (%"class.content::responsiveness::NativeEventObserver"*, %"class.aura::WindowEventDispatcher"*)* @_ZN7content14responsiveness19NativeEventObserver46OnWindowEventDispatcherFinishedProcessingEventEPN4aura21WindowEventDispatcherE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)* @_ZN4aura29WindowEventDispatcherObserver43OnWindowEventDispatcherDispatchedHeldEventsEPNS_21WindowEventDispatcherE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)* @_ZN4aura29WindowEventDispatcherObserver35OnWindowEventDispatcherIgnoredEventEPNS_21WindowEventDispatcherE to i8*), i8* bitcast (void (%"class.content::responsiveness::NativeEventObserver"*)* @_ZN7content14responsiveness19NativeEventObserverD2Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::NativeEventObserver"*)* @_ZN7content14responsiveness19NativeEventObserverD0Ev to i8*)] }, align 8

@_ZN7content14responsiveness19NativeEventObserverC1EN4base17RepeatingCallbackIFvPKvEEES7_ = hidden unnamed_addr alias void (%"class.content::responsiveness::NativeEventObserver"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"*), void (%"class.content::responsiveness::NativeEventObserver"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"*)* @_ZN7content14responsiveness19NativeEventObserverC2EN4base17RepeatingCallbackIFvPKvEEES7_
@_ZN7content14responsiveness19NativeEventObserverD1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::NativeEventObserver"*), void (%"class.content::responsiveness::NativeEventObserver"*)* @_ZN7content14responsiveness19NativeEventObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19NativeEventObserverC2EN4base17RepeatingCallbackIFvPKvEEES7_(%"class.content::responsiveness::NativeEventObserver"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content14responsiveness19NativeEventObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %8, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %9) #8
  %10 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %10, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %11) #8
  %12 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #8
  tail call void @_ZN4aura3Env32AddWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"* %12, %"class.aura::WindowEventDispatcherObserver"* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19NativeEventObserver16RegisterObserverEv(%"class.content::responsiveness::NativeEventObserver"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #8
  %3 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0
  tail call void @_ZN4aura3Env32AddWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"* %2, %"class.aura::WindowEventDispatcherObserver"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19NativeEventObserverD2Ev(%"class.content::responsiveness::NativeEventObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content14responsiveness19NativeEventObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #8
  %4 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0
  tail call void @_ZN4aura3Env35RemoveWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"* %3, %"class.aura::WindowEventDispatcherObserver"* %4) #8
  %5 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #8
  %7 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %7, align 8
  %9 = icmp eq %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8 to i64
  %12 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19NativeEventObserver18DeregisterObserverEv(%"class.content::responsiveness::NativeEventObserver"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #8
  %3 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0
  tail call void @_ZN4aura3Env35RemoveWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"* %2, %"class.aura::WindowEventDispatcherObserver"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19NativeEventObserverD0Ev(%"class.content::responsiveness::NativeEventObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content14responsiveness19NativeEventObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #8
  %4 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 0
  tail call void @_ZN4aura3Env35RemoveWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"* %3, %"class.aura::WindowEventDispatcherObserver"* %4) #8
  %5 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #8
  %7 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %7, align 8
  %9 = icmp eq %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8 to i64
  %12 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.content::responsiveness::NativeEventObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

declare %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN4aura3Env32AddWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"*, %"class.aura::WindowEventDispatcherObserver"*) local_unnamed_addr #3

declare void @_ZN4aura3Env35RemoveWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"*, %"class.aura::WindowEventDispatcherObserver"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19NativeEventObserver40OnWindowEventDispatcherStartedProcessingEPN4aura21WindowEventDispatcherERKN2ui5EventE(%"class.content::responsiveness::NativeEventObserver"*, %"class.aura::WindowEventDispatcher"* nocapture readnone, %"class.ui::Event"* dereferenceable(144)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.ui::Event"* %2 to i8*
  %5 = ptrtoint %"class.ui::Event"* %2 to i64
  %6 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %9, align 8
  %11 = icmp eq %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8, %10
  %12 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %10 to i64
  br i1 %11, label %18, label %13

13:                                               ; preds = %3
  %14 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8 to i64*
  store i64 %5, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.content::responsiveness::NativeEventObserver::EventInfo", %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8, i64 1
  %16 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %15 to i64
  %17 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %7 to i64*
  store i64 %16, i64* %17, align 8
  br label %75

18:                                               ; preds = %3
  %19 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %8 to i64
  %20 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %7 to i64*
  %21 = bitcast %"class.std::__1::vector"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #10
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #10
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #9
  %46 = bitcast i8* %45 to %"struct.content::responsiveness::NativeEventObserver::EventInfo"*
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"struct.content::responsiveness::NativeEventObserver::EventInfo"* [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"struct.content::responsiveness::NativeEventObserver::EventInfo", %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %49, i64 %24
  %51 = getelementptr inbounds %"struct.content::responsiveness::NativeEventObserver::EventInfo", %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %49, i64 %48
  %52 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %51 to i64
  %53 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %50 to i64*
  store i64 %5, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.content::responsiveness::NativeEventObserver::EventInfo", %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %50, i64 1
  %55 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %57 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %56, align 8
  %58 = load i64, i64* %20, align 8
  %59 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"struct.content::responsiveness::NativeEventObserver::EventInfo", %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %50, i64 %62
  %64 = ptrtoint %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %47
  %67 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %63 to i8*
  %68 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #8
  %69 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %56, align 8
  br label %70

70:                                               ; preds = %66, %47
  %71 = phi %"struct.content::responsiveness::NativeEventObserver::EventInfo"* [ %57, %47 ], [ %69, %66 ]
  store i64 %64, i64* %21, align 8
  store i64 %55, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %72 = icmp eq %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %13, %70, %73
  %76 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %76, align 8
  %78 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %77, i64 0, i32 1
  %79 = bitcast void ()** %78 to void (%"class.base::internal::BindStateBase"*, i8*)**
  %80 = load void (%"class.base::internal::BindStateBase"*, i8*)*, void (%"class.base::internal::BindStateBase"*, i8*)** %79, align 8
  tail call void %80(%"class.base::internal::BindStateBase"* %77, i8* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness19NativeEventObserver46OnWindowEventDispatcherFinishedProcessingEventEPN4aura21WindowEventDispatcherE(%"class.content::responsiveness::NativeEventObserver"* nocapture, %"class.aura::WindowEventDispatcher"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %3, align 8
  %5 = getelementptr inbounds %"struct.content::responsiveness::NativeEventObserver::EventInfo", %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %4, i64 -1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.content::responsiveness::NativeEventObserver", %"class.content::responsiveness::NativeEventObserver"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %10 = bitcast void ()** %9 to void (%"class.base::internal::BindStateBase"*, i8*)**
  %11 = load void (%"class.base::internal::BindStateBase"*, i8*)*, void (%"class.base::internal::BindStateBase"*, i8*)** %10, align 8
  tail call void %11(%"class.base::internal::BindStateBase"* %8, i8* %6) #8
  %12 = load %"struct.content::responsiveness::NativeEventObserver::EventInfo"*, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %3, align 8
  %13 = getelementptr inbounds %"struct.content::responsiveness::NativeEventObserver::EventInfo", %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %12, i64 -1
  store %"struct.content::responsiveness::NativeEventObserver::EventInfo"* %13, %"struct.content::responsiveness::NativeEventObserver::EventInfo"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura29WindowEventDispatcherObserver43OnWindowEventDispatcherDispatchedHeldEventsEPNS_21WindowEventDispatcherE(%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura29WindowEventDispatcherObserver35OnWindowEventDispatcherIgnoredEventEPNS_21WindowEventDispatcherE(%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
