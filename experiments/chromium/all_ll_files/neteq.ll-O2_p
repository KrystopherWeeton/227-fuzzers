; ModuleID = '../../third_party/webrtc/api/neteq/neteq.cc'
source_filename = "../../third_party/webrtc/api/neteq/neteq.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::NetEq::Config" = type { i32, i8, i64, i32, i32, i8, i8, i8, %"class.absl::optional", i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.webrtc::AudioCodecPairId" }
%"class.webrtc::AudioCodecPairId" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rtc::SimpleStringBuilder" = type { %"class.rtc::ArrayView", i64 }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [16 x i8] c"sample_rate_hz=\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c", enable_post_decode_vad=\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c", max_packets_in_buffer=\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c", min_delay_ms=\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c", enable_fast_accelerate=\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c", enable_muted_state=\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c", enable_rtx_handling=\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c", extra_output_delay_ms=\00", align 1

@_ZN6webrtc5NetEq6ConfigC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::NetEq::Config"*), void (%"struct.webrtc::NetEq::Config"*)* @_ZN6webrtc5NetEq6ConfigC2Ev
@_ZN6webrtc5NetEq6ConfigC1ERKS1_ = hidden unnamed_addr alias void (%"struct.webrtc::NetEq::Config"*, %"struct.webrtc::NetEq::Config"*), void (%"struct.webrtc::NetEq::Config"*, %"struct.webrtc::NetEq::Config"*)* @_ZN6webrtc5NetEq6ConfigC2ERKS1_
@_ZN6webrtc5NetEq6ConfigC1EOS1_ = hidden unnamed_addr alias void (%"struct.webrtc::NetEq::Config"*, %"struct.webrtc::NetEq::Config"*), void (%"struct.webrtc::NetEq::Config"*, %"struct.webrtc::NetEq::Config"*)* @_ZN6webrtc5NetEq6ConfigC2EOS1_
@_ZN6webrtc5NetEq6ConfigD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::NetEq::Config"*), void (%"struct.webrtc::NetEq::Config"*)* @_ZN6webrtc5NetEq6ConfigD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc5NetEq6ConfigC2Ev(%"struct.webrtc::NetEq::Config"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %0, i64 0, i32 0
  store i32 16000, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %0, i64 0, i32 2
  store i64 200, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %0, i64 0, i32 9
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %0, i64 0, i32 10
  store i32 0, i32* %8, align 4
  %9 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 11, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5NetEq6ConfigC2ERKS1_(%"struct.webrtc::NetEq::Config"* nocapture, %"struct.webrtc::NetEq::Config"* nocapture readonly dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.webrtc::NetEq::Config"* %0 to i8*
  %4 = bitcast %"struct.webrtc::NetEq::Config"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5NetEq6ConfigC2EOS1_(%"struct.webrtc::NetEq::Config"* nocapture, %"struct.webrtc::NetEq::Config"* nocapture readonly dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.webrtc::NetEq::Config"* %0 to i8*
  %4 = bitcast %"struct.webrtc::NetEq::Config"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc5NetEq6ConfigD2Ev(%"struct.webrtc::NetEq::Config"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"struct.webrtc::NetEq::Config"* @_ZN6webrtc5NetEq6ConfigaSERKS1_(%"struct.webrtc::NetEq::Config"* returned, %"struct.webrtc::NetEq::Config"* nocapture readonly dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.webrtc::NetEq::Config"* %0 to i8*
  %4 = bitcast %"struct.webrtc::NetEq::Config"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false)
  ret %"struct.webrtc::NetEq::Config"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"struct.webrtc::NetEq::Config"* @_ZN6webrtc5NetEq6ConfigaSEOS1_(%"struct.webrtc::NetEq::Config"* returned, %"struct.webrtc::NetEq::Config"* nocapture readonly dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.webrtc::NetEq::Config"* %0 to i8*
  %4 = bitcast %"struct.webrtc::NetEq::Config"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false)
  ret %"struct.webrtc::NetEq::Config"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc5NetEq6Config8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.webrtc::NetEq::Config"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca [1024 x i8], align 16
  %4 = alloca %"class.rtc::SimpleStringBuilder", align 8
  %5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 1024, i1 false)
  %6 = bitcast %"class.rtc::SimpleStringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.rtc::SimpleStringBuilder", %"class.rtc::SimpleStringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.rtc::SimpleStringBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3rtc19SimpleStringBuilderC1ENS_9ArrayViewIcLln4711EEE(%"class.rtc::SimpleStringBuilder"* nonnull %4, i8* nonnull %5, i64 1024) #8
  %9 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* nonnull %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #8
  %10 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEi(%"class.rtc::SimpleStringBuilder"* %9, i32 %11) #8
  %13 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8
  %14 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 1
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)
  %18 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %13, i8* %17) #8
  %19 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #8
  %20 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEm(%"class.rtc::SimpleStringBuilder"* %19, i64 %21) #8
  %23 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #8
  %24 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEi(%"class.rtc::SimpleStringBuilder"* %23, i32 %25) #8
  %27 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %26, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #8
  %28 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 5
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)
  %32 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %27, i8* %31) #8
  %33 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)) #8
  %34 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 6
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)
  %38 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %33, i8* %37) #8
  %39 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %38, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0)) #8
  %40 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 7
  %41 = load i8, i8* %40, align 2, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = select i1 %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)
  %44 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %39, i8* %43) #8
  %45 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"* %44, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0)) #8
  %46 = getelementptr inbounds %"struct.webrtc::NetEq::Config", %"struct.webrtc::NetEq::Config"* %1, i64 0, i32 10
  %47 = load i32, i32* %46, align 4
  %48 = call dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEi(%"class.rtc::SimpleStringBuilder"* %45, i32 %47) #8
  %49 = load i8*, i8** %7, align 8
  %50 = call i64 @strlen(i8* %49) #8
  %51 = icmp ugt i64 %50, -17
  br i1 %51, label %52, label %54

52:                                               ; preds = %2
  %53 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %53) #9
  unreachable

54:                                               ; preds = %2
  %55 = icmp ult i64 %50, 23
  br i1 %55, label %64, label %56

56:                                               ; preds = %54
  %57 = add nuw i64 %50, 16
  %58 = and i64 %57, -16
  %59 = call i8* @_Znwm(i64 %58) #10
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8
  %61 = or i64 %58, -9223372036854775808
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %50, i64* %63, align 8
  br label %70

64:                                               ; preds = %54
  %65 = trunc i64 %50 to i8
  %66 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  store i8 %65, i8* %67, align 1
  %68 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %69 = icmp eq i64 %50, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %64, %56
  %71 = phi i8* [ %59, %56 ], [ %68, %64 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %49, i64 %50, i1 false) #8
  br label %72

72:                                               ; preds = %64, %70
  %73 = phi i8* [ %68, %64 ], [ %71, %70 ]
  %74 = getelementptr inbounds i8, i8* %73, i64 %50
  store i8 0, i8* %74, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3rtc19SimpleStringBuilderC1ENS_9ArrayViewIcLln4711EEE(%"class.rtc::SimpleStringBuilder"*, i8*, i64) unnamed_addr #4

declare dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEPKc(%"class.rtc::SimpleStringBuilder"*, i8*) local_unnamed_addr #4

declare dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEi(%"class.rtc::SimpleStringBuilder"*, i32) local_unnamed_addr #4

declare dereferenceable(24) %"class.rtc::SimpleStringBuilder"* @_ZN3rtc19SimpleStringBuilderlsEm(%"class.rtc::SimpleStringBuilder"*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
