; ModuleID = '../../cc/trees/effect_node.cc'
source_filename = "../../cc/trees/effect_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.10", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.5" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.2", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::PointF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { i32*, i32*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"root\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"3d transform flattening\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"backdrop scope\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"blend mode\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"blend mode kDstIn\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"opacity animation\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"filter animation\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"backdrop filter\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"backdrop filter animation\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"rounded corner\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"clip path\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"clip axis alignment\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"mask\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"trilinear filtering\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"copy request\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"mirrored\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"subtree being captured\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"document transition participant\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.23 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"backdrop_mask_element_id\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"parent_id\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"stable_id\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"filters\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"backdrop_filters\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"backdrop_filter_quality\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"node_or_ancestor_has_filters\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"mask_filter_bounds\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"mask_filter_rounded_corner_raii\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"mask_filter_is_fast_rounded_corner\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"blend_mode\00", align 1
@.str.36 = private unnamed_addr constant [19 x i8] c"subtree_capture_id\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"subtree_size\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"cache_render_surface\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"has_copy_request\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"double_sided\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"hidden_by_backface_visibility\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c"trilinear_filtering\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"is_drawn\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"only_draws_visible_content\00", align 1
@.str.45 = private unnamed_addr constant [31 x i8] c"has_potential_filter_animation\00", align 1
@.str.46 = private unnamed_addr constant [40 x i8] c"has_potential_backdrop_filter_animation\00", align 1
@.str.47 = private unnamed_addr constant [32 x i8] c"has_potential_opacity_animation\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"has_masking_child\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"effect_changed\00", align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"subtree_has_copy_request\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"render_surface_reason\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"transform_id\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"clip_id\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"target_id\00", align 1
@.str.55 = private unnamed_addr constant [47 x i8] c"closest_ancestor_with_cached_render_surface_id\00", align 1
@.str.56 = private unnamed_addr constant [38 x i8] c"closest_ancestor_with_copy_request_id\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"closest_ancestor_being_captured_id\00", align 1
@.str.58 = private unnamed_addr constant [28 x i8] c"affected_by_backdrop_filter\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str.59 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@switch.table._ZNK2cc10EffectNode11AsValueIntoEPN4base11trace_event11TracedValueE = private unnamed_addr constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)], align 8

@_ZN2cc10EffectNodeC1Ev = hidden unnamed_addr alias void (%"struct.cc::EffectNode"*), void (%"struct.cc::EffectNode"*)* @_ZN2cc10EffectNodeC2Ev
@_ZN2cc10EffectNodeC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*), void (%"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*)* @_ZN2cc10EffectNodeC2ERKS0_
@_ZN2cc10EffectNodeD1Ev = hidden unnamed_addr alias void (%"struct.cc::EffectNode"*), void (%"struct.cc::EffectNode"*)* @_ZN2cc10EffectNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectNodeC2Ev(%"struct.cc::EffectNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 2
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 3
  store float 1.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 4
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 5
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %7) #7
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 6
  tail call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* %8) #7
  %9 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.14* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 52, i1 false) #7
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 8
  store float 1.000000e+00, float* %12, align 8
  %13 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 9, i32 0
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 9, i32 1
  store float 0.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 10, i32 0
  %16 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 11
  %18 = bitcast %"class.gfx::MaskFilterInfo"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 52, i1 false) #7
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 12
  store i32 3, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 13, i32 0
  %21 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 16
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = bitcast float* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 20, i1 false)
  %24 = load i24, i24* %22, align 4
  %25 = and i24 %24, -1048576
  %26 = or i24 %25, 104
  store i24 %26, i24* %22, align 4
  %27 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 17
  %28 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 20
  call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 0, i64 9, i1 false)
  %29 = bitcast i32* %28 to <4 x i32>*
  store <4 x i32> <i32 1, i32 -1, i32 -1, i32 -1>, <4 x i32>* %29, align 8
  %30 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 24
  tail call void @_ZN2cc33DocumentTransitionSharedElementIdC1Ev(%"class.cc::DocumentTransitionSharedElementId"* %30) #7
  ret void
}

declare void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"*) unnamed_addr #1

declare void @_ZN2cc33DocumentTransitionSharedElementIdC1Ev(%"class.cc::DocumentTransitionSharedElementId"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectNodeC2ERKS0_(%"struct.cc::EffectNode"*, %"struct.cc::EffectNode"* dereferenceable(288)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::EffectNode"* %0 to i8*
  %4 = bitcast %"struct.cc::EffectNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 5
  tail call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* %5, %"class.cc::FilterOperations"* dereferenceable(24) %6) #7
  %7 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 6
  tail call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* %7, %"class.cc::FilterOperations"* dereferenceable(24) %8) #7
  %9 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 184, i1 false)
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 24
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 24
  tail call void @_ZN2cc33DocumentTransitionSharedElementIdC1ERKS0_(%"class.cc::DocumentTransitionSharedElementId"* %11, %"class.cc::DocumentTransitionSharedElementId"* dereferenceable(32) %12) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN2cc33DocumentTransitionSharedElementIdC1ERKS0_(%"class.cc::DocumentTransitionSharedElementId"*, %"class.cc::DocumentTransitionSharedElementId"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectNodeD2Ev(%"struct.cc::EffectNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 24
  tail call void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"* %2) #7
  %3 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 6
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %3) #7
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 5
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2cc27RenderSurfaceReasonToStringENS_19RenderSurfaceReasonE(i8 zeroext) local_unnamed_addr #4 {
  %2 = icmp ult i8 %0, 23
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [23 x i8*], [23 x i8*]* @switch.table._ZNK2cc10EffectNode11AsValueIntoEPN4base11trace_event11TracedValueE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10EffectNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::EffectNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.gfx::RectF"*
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 10
  %11 = tail call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* %10) #7
  %12 = trunc i64 %11 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i64 0, i64 0), i32 %12) #7
  %13 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %14) #7
  %15 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i32 %16) #7
  %17 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0), i32 %19) #7
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 3
  %21 = load float, float* %20, align 8
  %22 = fpext float %21 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), double %22) #7
  %23 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 5
  %24 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %23) #7
  br i1 %24, label %43, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  call void @_ZNK2cc16FilterOperations8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.cc::FilterOperations"* %23) #7
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = select i1 %30, i8* %32, i8* %26
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i64 %35, i64 %36
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i8* %33, i64 %37) #7
  %38 = load i8, i8* %28, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %25
  %41 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %41) #8
  br label %42

42:                                               ; preds = %25, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  br label %43

43:                                               ; preds = %42, %2
  %44 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 6
  %45 = call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %44) #7
  br i1 %45, label %64, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #7
  call void @_ZNK2cc16FilterOperations8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.cc::FilterOperations"* %44) #7
  %48 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = select i1 %51, i8* %53, i8* %47
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %50 to i64
  %58 = select i1 %51, i64 %56, i64 %57
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0), i8* %54, i64 %58) #7
  %59 = load i8, i8* %49, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %46
  %62 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %62) #8
  br label %63

63:                                               ; preds = %46, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #7
  br label %64

64:                                               ; preds = %63, %43
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 8
  %66 = load float, float* %65, align 8
  %67 = fpext float %66 to double
  call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), double %67) #7
  %68 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 16
  %69 = bitcast [3 x i8]* %68 to i24*
  %70 = load i24, i24* %69, align 4
  %71 = and i24 %70, 262144
  %72 = icmp ne i24 %71, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i1 zeroext %72) #7
  %73 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 11
  %74 = getelementptr inbounds %"class.gfx::MaskFilterInfo", %"class.gfx::MaskFilterInfo"* %73, i64 0, i32 0
  %75 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %74) #7
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %94, label %77

77:                                               ; preds = %64
  %78 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #7
  %79 = getelementptr inbounds %"class.gfx::MaskFilterInfo", %"class.gfx::MaskFilterInfo"* %73, i64 0, i32 0, i32 0, i32 0
  %80 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16) %79) #7
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %82 = extractvalue { <2 x float>, <2 x float> } %80, 0
  store <2 x float> %82, <2 x float>* %81, align 8
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %84 = extractvalue { <2 x float>, <2 x float> } %80, 1
  store <2 x float> %84, <2 x float>* %83, align 8
  call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5RectFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i64 0, i64 0), %"class.gfx::RectF"* nonnull dereferenceable(16) %7, %"class.base::trace_event::TracedValue"* %1) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #7
  %85 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %74) #7
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %77
  %88 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %74) #7
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  call void @_ZN2cc8MathUtil27AddCornerRadiiToTracedValueEPKcRKN3gfx6RRectFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i64 0, i64 0), %"class.gfx::RRectF"* dereferenceable(52) %74, %"class.base::trace_event::TracedValue"* %1) #7
  %91 = load i24, i24* %69, align 4
  %92 = and i24 %91, 131072
  %93 = icmp ne i24 %92, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0), i1 zeroext %93) #7
  br label %94

94:                                               ; preds = %87, %77, %90, %64
  %95 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 12
  %96 = load i32, i32* %95, align 4
  %97 = call i8* @_Z16SkBlendMode_Name11SkBlendMode(i32 %96) #7
  %98 = icmp eq i8* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  %100 = call i64 @strlen(i8* nonnull %97) #7
  br label %104

101:                                              ; preds = %94
  %102 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.59, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0)) #7
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #7
  br label %104

104:                                              ; preds = %99, %101
  %105 = phi i64 [ 0, %101 ], [ %100, %99 ]
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i8* %97, i64 %105) #7
  %106 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #7
  %107 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 14
  call void @_ZNK3viz16SubtreeCaptureId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.viz::SubtreeCaptureId"* %107) #7
  %108 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = select i1 %111, i8* %113, i8* %106
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = zext i8 %110 to i64
  %118 = select i1 %111, i64 %116, i64 %117
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i64 0, i64 0), i8* %114, i64 %118) #7
  %119 = load i8, i8* %109, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %104
  %122 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %122) #8
  br label %123

123:                                              ; preds = %104, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #7
  %124 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #7
  %125 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 15
  call void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.gfx::Size"* %125) #7
  %126 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = select i1 %129, i8* %131, i8* %124
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = zext i8 %128 to i64
  %136 = select i1 %129, i64 %134, i64 %135
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8* %132, i64 %136) #7
  %137 = load i8, i8* %127, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %123
  %140 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %140) #8
  br label %141

141:                                              ; preds = %123, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #7
  %142 = load i24, i24* %69, align 4
  %143 = and i24 %142, 1
  %144 = icmp ne i24 %143, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0), i1 zeroext %144) #7
  %145 = load i24, i24* %69, align 4
  %146 = and i24 %145, 2
  %147 = icmp ne i24 %146, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0), i1 zeroext %147) #7
  %148 = load i24, i24* %69, align 4
  %149 = and i24 %148, 8
  %150 = icmp ne i24 %149, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i1 zeroext %150) #7
  %151 = load i24, i24* %69, align 4
  %152 = and i24 %151, 4
  %153 = icmp ne i24 %152, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i64 0, i64 0), i1 zeroext %153) #7
  %154 = load i24, i24* %69, align 4
  %155 = and i24 %154, 16
  %156 = icmp ne i24 %155, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i1 zeroext %156) #7
  %157 = load i24, i24* %69, align 4
  %158 = and i24 %157, 32
  %159 = icmp ne i24 %158, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i1 zeroext %159) #7
  %160 = load i24, i24* %69, align 4
  %161 = and i24 %160, 64
  %162 = icmp ne i24 %161, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i1 zeroext %162) #7
  %163 = load i24, i24* %69, align 4
  %164 = and i24 %163, 256
  %165 = icmp ne i24 %164, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45, i64 0, i64 0), i1 zeroext %165) #7
  %166 = load i24, i24* %69, align 4
  %167 = and i24 %166, 512
  %168 = icmp ne i24 %167, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.46, i64 0, i64 0), i1 zeroext %168) #7
  %169 = load i24, i24* %69, align 4
  %170 = and i24 %169, 1024
  %171 = icmp ne i24 %170, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.47, i64 0, i64 0), i1 zeroext %171) #7
  %172 = load i24, i24* %69, align 4
  %173 = and i24 %172, 16384
  %174 = icmp ne i24 %173, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i1 zeroext %174) #7
  %175 = load i24, i24* %69, align 4
  %176 = trunc i24 %175 to i16
  %177 = icmp slt i16 %176, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i64 0, i64 0), i1 zeroext %177) #7
  %178 = load i24, i24* %69, align 4
  %179 = and i24 %178, 65536
  %180 = icmp ne i24 %179, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i64 0, i64 0), i1 zeroext %180) #7
  %181 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 17
  %182 = load i8, i8* %181, align 1
  %183 = icmp ult i8 %182, 23
  br i1 %183, label %184, label %188

184:                                              ; preds = %141
  %185 = sext i8 %182 to i64
  %186 = getelementptr inbounds [23 x i8*], [23 x i8*]* @switch.table._ZNK2cc10EffectNode11AsValueIntoEPN4base11trace_event11TracedValueE, i64 0, i64 %185
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %141, %184
  %189 = phi i8* [ %187, %184 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), %141 ]
  %190 = call i64 @strlen(i8* nonnull %189) #7
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0), i8* nonnull %189, i64 %190) #7
  %191 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 18
  %192 = load i32, i32* %191, align 8
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i32 %192) #7
  %193 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 19
  %194 = load i32, i32* %193, align 4
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i64 0, i64 0), i32 %194) #7
  %195 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 20
  %196 = load i32, i32* %195, align 8
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), i32 %196) #7
  %197 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 21
  %198 = load i32, i32* %197, align 4
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.55, i64 0, i64 0), i32 %198) #7
  %199 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 22
  %200 = load i32, i32* %199, align 8
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.56, i64 0, i64 0), i32 %200) #7
  %201 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 23
  %202 = load i32, i32* %201, align 4
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0), i32 %202) #7
  %203 = load i24, i24* %69, align 4
  %204 = and i24 %203, 524288
  %205 = icmp ne i24 %204, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.58, i64 0, i64 0), i1 zeroext %205) #7
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #1

declare i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"*, i8*, double) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK2cc16FilterOperations8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.cc::FilterOperations"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5RectFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::RectF"* dereferenceable(16), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil27AddCornerRadiiToTracedValueEPKcRKN3gfx6RRectFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::RRectF"* dereferenceable(52), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare i8* @_Z16SkBlendMode_Name11SkBlendMode(i32) local_unnamed_addr #1

declare void @_ZNK3viz16SubtreeCaptureId8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.viz::SubtreeCaptureId"*) local_unnamed_addr #1

declare void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Size"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
